
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002b944  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000175b0  0802baf4  0802baf4  0003baf4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  080430a4  080430a4  000530a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08046d9c  08046d9c  00056d9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000007c4  08046fe8  08046fe8  00056fe8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  080477ac  080477ac  000577ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  081607dc  081607dc  00180168  2**0
                  CONTENTS
  8 .ARM          00000008  081607dc  081607dc  001707dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  081607e4  081607e4  00180168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  081607e4  081607e4  001707e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  081607f8  081607f8  001707f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  081607fc  00180000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00013884  20000168  08160964  00180168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  200139ec  08160964  001839ec  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00180168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00190000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  00180198  2**0
                  CONTENTS, READONLY
 18 .debug_line   0009c4e8  00000000  00000000  001802ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 000000a9  00000000  00000000  0021c7b2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00299563  00000000  00000000  0021c85b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0003283c  00000000  00000000  004b5dbe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004800  00000000  00000000  004e8600  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    00121093  00000000  00000000  004ece00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 0000825c  00000000  00000000  0060de93  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 00032335  00000000  00000000  006160ef  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003cd8b  00000000  00000000  00648424  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000d490  00000000  00000000  006851b0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  00692640  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  006959b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802badc 	.word	0x0802badc

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802badc 	.word	0x0802badc

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_dmul>:
 8000350:	b570      	push	{r4, r5, r6, lr}
 8000352:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000356:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800035a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800035e:	bf1d      	ittte	ne
 8000360:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000364:	ea94 0f0c 	teqne	r4, ip
 8000368:	ea95 0f0c 	teqne	r5, ip
 800036c:	f000 f8de 	bleq	800052c <__aeabi_dmul+0x1dc>
 8000370:	442c      	add	r4, r5
 8000372:	ea81 0603 	eor.w	r6, r1, r3
 8000376:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800037a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800037e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000382:	bf18      	it	ne
 8000384:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000388:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800038c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000390:	d038      	beq.n	8000404 <__aeabi_dmul+0xb4>
 8000392:	fba0 ce02 	umull	ip, lr, r0, r2
 8000396:	f04f 0500 	mov.w	r5, #0
 800039a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800039e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80003a2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80003a6:	f04f 0600 	mov.w	r6, #0
 80003aa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80003ae:	f09c 0f00 	teq	ip, #0
 80003b2:	bf18      	it	ne
 80003b4:	f04e 0e01 	orrne.w	lr, lr, #1
 80003b8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80003bc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80003c0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80003c4:	d204      	bcs.n	80003d0 <__aeabi_dmul+0x80>
 80003c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80003ca:	416d      	adcs	r5, r5
 80003cc:	eb46 0606 	adc.w	r6, r6, r6
 80003d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80003d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80003d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80003dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80003e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80003e4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80003e8:	bf88      	it	hi
 80003ea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80003ee:	d81e      	bhi.n	800042e <__aeabi_dmul+0xde>
 80003f0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80003f4:	bf08      	it	eq
 80003f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80003fa:	f150 0000 	adcs.w	r0, r0, #0
 80003fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000402:	bd70      	pop	{r4, r5, r6, pc}
 8000404:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000408:	ea46 0101 	orr.w	r1, r6, r1
 800040c:	ea40 0002 	orr.w	r0, r0, r2
 8000410:	ea81 0103 	eor.w	r1, r1, r3
 8000414:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000418:	bfc2      	ittt	gt
 800041a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800041e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000422:	bd70      	popgt	{r4, r5, r6, pc}
 8000424:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000428:	f04f 0e00 	mov.w	lr, #0
 800042c:	3c01      	subs	r4, #1
 800042e:	f300 80ab 	bgt.w	8000588 <__aeabi_dmul+0x238>
 8000432:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000436:	bfde      	ittt	le
 8000438:	2000      	movle	r0, #0
 800043a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800043e:	bd70      	pople	{r4, r5, r6, pc}
 8000440:	f1c4 0400 	rsb	r4, r4, #0
 8000444:	3c20      	subs	r4, #32
 8000446:	da35      	bge.n	80004b4 <__aeabi_dmul+0x164>
 8000448:	340c      	adds	r4, #12
 800044a:	dc1b      	bgt.n	8000484 <__aeabi_dmul+0x134>
 800044c:	f104 0414 	add.w	r4, r4, #20
 8000450:	f1c4 0520 	rsb	r5, r4, #32
 8000454:	fa00 f305 	lsl.w	r3, r0, r5
 8000458:	fa20 f004 	lsr.w	r0, r0, r4
 800045c:	fa01 f205 	lsl.w	r2, r1, r5
 8000460:	ea40 0002 	orr.w	r0, r0, r2
 8000464:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000468:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800046c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000470:	fa21 f604 	lsr.w	r6, r1, r4
 8000474:	eb42 0106 	adc.w	r1, r2, r6
 8000478:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800047c:	bf08      	it	eq
 800047e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000482:	bd70      	pop	{r4, r5, r6, pc}
 8000484:	f1c4 040c 	rsb	r4, r4, #12
 8000488:	f1c4 0520 	rsb	r5, r4, #32
 800048c:	fa00 f304 	lsl.w	r3, r0, r4
 8000490:	fa20 f005 	lsr.w	r0, r0, r5
 8000494:	fa01 f204 	lsl.w	r2, r1, r4
 8000498:	ea40 0002 	orr.w	r0, r0, r2
 800049c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80004a4:	f141 0100 	adc.w	r1, r1, #0
 80004a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004ac:	bf08      	it	eq
 80004ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004b2:	bd70      	pop	{r4, r5, r6, pc}
 80004b4:	f1c4 0520 	rsb	r5, r4, #32
 80004b8:	fa00 f205 	lsl.w	r2, r0, r5
 80004bc:	ea4e 0e02 	orr.w	lr, lr, r2
 80004c0:	fa20 f304 	lsr.w	r3, r0, r4
 80004c4:	fa01 f205 	lsl.w	r2, r1, r5
 80004c8:	ea43 0302 	orr.w	r3, r3, r2
 80004cc:	fa21 f004 	lsr.w	r0, r1, r4
 80004d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004d4:	fa21 f204 	lsr.w	r2, r1, r4
 80004d8:	ea20 0002 	bic.w	r0, r0, r2
 80004dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80004e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004e4:	bf08      	it	eq
 80004e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004ea:	bd70      	pop	{r4, r5, r6, pc}
 80004ec:	f094 0f00 	teq	r4, #0
 80004f0:	d10f      	bne.n	8000512 <__aeabi_dmul+0x1c2>
 80004f2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80004f6:	0040      	lsls	r0, r0, #1
 80004f8:	eb41 0101 	adc.w	r1, r1, r1
 80004fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000500:	bf08      	it	eq
 8000502:	3c01      	subeq	r4, #1
 8000504:	d0f7      	beq.n	80004f6 <__aeabi_dmul+0x1a6>
 8000506:	ea41 0106 	orr.w	r1, r1, r6
 800050a:	f095 0f00 	teq	r5, #0
 800050e:	bf18      	it	ne
 8000510:	4770      	bxne	lr
 8000512:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000516:	0052      	lsls	r2, r2, #1
 8000518:	eb43 0303 	adc.w	r3, r3, r3
 800051c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000520:	bf08      	it	eq
 8000522:	3d01      	subeq	r5, #1
 8000524:	d0f7      	beq.n	8000516 <__aeabi_dmul+0x1c6>
 8000526:	ea43 0306 	orr.w	r3, r3, r6
 800052a:	4770      	bx	lr
 800052c:	ea94 0f0c 	teq	r4, ip
 8000530:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000534:	bf18      	it	ne
 8000536:	ea95 0f0c 	teqne	r5, ip
 800053a:	d00c      	beq.n	8000556 <__aeabi_dmul+0x206>
 800053c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000540:	bf18      	it	ne
 8000542:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000546:	d1d1      	bne.n	80004ec <__aeabi_dmul+0x19c>
 8000548:	ea81 0103 	eor.w	r1, r1, r3
 800054c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000550:	f04f 0000 	mov.w	r0, #0
 8000554:	bd70      	pop	{r4, r5, r6, pc}
 8000556:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800055a:	bf06      	itte	eq
 800055c:	4610      	moveq	r0, r2
 800055e:	4619      	moveq	r1, r3
 8000560:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000564:	d019      	beq.n	800059a <__aeabi_dmul+0x24a>
 8000566:	ea94 0f0c 	teq	r4, ip
 800056a:	d102      	bne.n	8000572 <__aeabi_dmul+0x222>
 800056c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000570:	d113      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000572:	ea95 0f0c 	teq	r5, ip
 8000576:	d105      	bne.n	8000584 <__aeabi_dmul+0x234>
 8000578:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800057c:	bf1c      	itt	ne
 800057e:	4610      	movne	r0, r2
 8000580:	4619      	movne	r1, r3
 8000582:	d10a      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000584:	ea81 0103 	eor.w	r1, r1, r3
 8000588:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800058c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000590:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000594:	f04f 0000 	mov.w	r0, #0
 8000598:	bd70      	pop	{r4, r5, r6, pc}
 800059a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800059e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80005a2:	bd70      	pop	{r4, r5, r6, pc}

080005a4 <__aeabi_drsub>:
 80005a4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e002      	b.n	80005b0 <__adddf3>
 80005aa:	bf00      	nop

080005ac <__aeabi_dsub>:
 80005ac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080005b0 <__adddf3>:
 80005b0:	b530      	push	{r4, r5, lr}
 80005b2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80005b6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80005ba:	ea94 0f05 	teq	r4, r5
 80005be:	bf08      	it	eq
 80005c0:	ea90 0f02 	teqeq	r0, r2
 80005c4:	bf1f      	itttt	ne
 80005c6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80005ca:	ea55 0c02 	orrsne.w	ip, r5, r2
 80005ce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80005d2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80005d6:	f000 80e2 	beq.w	800079e <__adddf3+0x1ee>
 80005da:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80005de:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80005e2:	bfb8      	it	lt
 80005e4:	426d      	neglt	r5, r5
 80005e6:	dd0c      	ble.n	8000602 <__adddf3+0x52>
 80005e8:	442c      	add	r4, r5
 80005ea:	ea80 0202 	eor.w	r2, r0, r2
 80005ee:	ea81 0303 	eor.w	r3, r1, r3
 80005f2:	ea82 0000 	eor.w	r0, r2, r0
 80005f6:	ea83 0101 	eor.w	r1, r3, r1
 80005fa:	ea80 0202 	eor.w	r2, r0, r2
 80005fe:	ea81 0303 	eor.w	r3, r1, r3
 8000602:	2d36      	cmp	r5, #54	; 0x36
 8000604:	bf88      	it	hi
 8000606:	bd30      	pophi	{r4, r5, pc}
 8000608:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800060c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000610:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000614:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000618:	d002      	beq.n	8000620 <__adddf3+0x70>
 800061a:	4240      	negs	r0, r0
 800061c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000620:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000624:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000628:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800062c:	d002      	beq.n	8000634 <__adddf3+0x84>
 800062e:	4252      	negs	r2, r2
 8000630:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000634:	ea94 0f05 	teq	r4, r5
 8000638:	f000 80a7 	beq.w	800078a <__adddf3+0x1da>
 800063c:	f1a4 0401 	sub.w	r4, r4, #1
 8000640:	f1d5 0e20 	rsbs	lr, r5, #32
 8000644:	db0d      	blt.n	8000662 <__adddf3+0xb2>
 8000646:	fa02 fc0e 	lsl.w	ip, r2, lr
 800064a:	fa22 f205 	lsr.w	r2, r2, r5
 800064e:	1880      	adds	r0, r0, r2
 8000650:	f141 0100 	adc.w	r1, r1, #0
 8000654:	fa03 f20e 	lsl.w	r2, r3, lr
 8000658:	1880      	adds	r0, r0, r2
 800065a:	fa43 f305 	asr.w	r3, r3, r5
 800065e:	4159      	adcs	r1, r3
 8000660:	e00e      	b.n	8000680 <__adddf3+0xd0>
 8000662:	f1a5 0520 	sub.w	r5, r5, #32
 8000666:	f10e 0e20 	add.w	lr, lr, #32
 800066a:	2a01      	cmp	r2, #1
 800066c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000670:	bf28      	it	cs
 8000672:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000676:	fa43 f305 	asr.w	r3, r3, r5
 800067a:	18c0      	adds	r0, r0, r3
 800067c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000680:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000684:	d507      	bpl.n	8000696 <__adddf3+0xe6>
 8000686:	f04f 0e00 	mov.w	lr, #0
 800068a:	f1dc 0c00 	rsbs	ip, ip, #0
 800068e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000692:	eb6e 0101 	sbc.w	r1, lr, r1
 8000696:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800069a:	d31b      	bcc.n	80006d4 <__adddf3+0x124>
 800069c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80006a0:	d30c      	bcc.n	80006bc <__adddf3+0x10c>
 80006a2:	0849      	lsrs	r1, r1, #1
 80006a4:	ea5f 0030 	movs.w	r0, r0, rrx
 80006a8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80006ac:	f104 0401 	add.w	r4, r4, #1
 80006b0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80006b4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80006b8:	f080 809a 	bcs.w	80007f0 <__adddf3+0x240>
 80006bc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80006c0:	bf08      	it	eq
 80006c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80006c6:	f150 0000 	adcs.w	r0, r0, #0
 80006ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ce:	ea41 0105 	orr.w	r1, r1, r5
 80006d2:	bd30      	pop	{r4, r5, pc}
 80006d4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80006d8:	4140      	adcs	r0, r0
 80006da:	eb41 0101 	adc.w	r1, r1, r1
 80006de:	3c01      	subs	r4, #1
 80006e0:	bf28      	it	cs
 80006e2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80006e6:	d2e9      	bcs.n	80006bc <__adddf3+0x10c>
 80006e8:	f091 0f00 	teq	r1, #0
 80006ec:	bf04      	itt	eq
 80006ee:	4601      	moveq	r1, r0
 80006f0:	2000      	moveq	r0, #0
 80006f2:	fab1 f381 	clz	r3, r1
 80006f6:	bf08      	it	eq
 80006f8:	3320      	addeq	r3, #32
 80006fa:	f1a3 030b 	sub.w	r3, r3, #11
 80006fe:	f1b3 0220 	subs.w	r2, r3, #32
 8000702:	da0c      	bge.n	800071e <__adddf3+0x16e>
 8000704:	320c      	adds	r2, #12
 8000706:	dd08      	ble.n	800071a <__adddf3+0x16a>
 8000708:	f102 0c14 	add.w	ip, r2, #20
 800070c:	f1c2 020c 	rsb	r2, r2, #12
 8000710:	fa01 f00c 	lsl.w	r0, r1, ip
 8000714:	fa21 f102 	lsr.w	r1, r1, r2
 8000718:	e00c      	b.n	8000734 <__adddf3+0x184>
 800071a:	f102 0214 	add.w	r2, r2, #20
 800071e:	bfd8      	it	le
 8000720:	f1c2 0c20 	rsble	ip, r2, #32
 8000724:	fa01 f102 	lsl.w	r1, r1, r2
 8000728:	fa20 fc0c 	lsr.w	ip, r0, ip
 800072c:	bfdc      	itt	le
 800072e:	ea41 010c 	orrle.w	r1, r1, ip
 8000732:	4090      	lslle	r0, r2
 8000734:	1ae4      	subs	r4, r4, r3
 8000736:	bfa2      	ittt	ge
 8000738:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800073c:	4329      	orrge	r1, r5
 800073e:	bd30      	popge	{r4, r5, pc}
 8000740:	ea6f 0404 	mvn.w	r4, r4
 8000744:	3c1f      	subs	r4, #31
 8000746:	da1c      	bge.n	8000782 <__adddf3+0x1d2>
 8000748:	340c      	adds	r4, #12
 800074a:	dc0e      	bgt.n	800076a <__adddf3+0x1ba>
 800074c:	f104 0414 	add.w	r4, r4, #20
 8000750:	f1c4 0220 	rsb	r2, r4, #32
 8000754:	fa20 f004 	lsr.w	r0, r0, r4
 8000758:	fa01 f302 	lsl.w	r3, r1, r2
 800075c:	ea40 0003 	orr.w	r0, r0, r3
 8000760:	fa21 f304 	lsr.w	r3, r1, r4
 8000764:	ea45 0103 	orr.w	r1, r5, r3
 8000768:	bd30      	pop	{r4, r5, pc}
 800076a:	f1c4 040c 	rsb	r4, r4, #12
 800076e:	f1c4 0220 	rsb	r2, r4, #32
 8000772:	fa20 f002 	lsr.w	r0, r0, r2
 8000776:	fa01 f304 	lsl.w	r3, r1, r4
 800077a:	ea40 0003 	orr.w	r0, r0, r3
 800077e:	4629      	mov	r1, r5
 8000780:	bd30      	pop	{r4, r5, pc}
 8000782:	fa21 f004 	lsr.w	r0, r1, r4
 8000786:	4629      	mov	r1, r5
 8000788:	bd30      	pop	{r4, r5, pc}
 800078a:	f094 0f00 	teq	r4, #0
 800078e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000792:	bf06      	itte	eq
 8000794:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000798:	3401      	addeq	r4, #1
 800079a:	3d01      	subne	r5, #1
 800079c:	e74e      	b.n	800063c <__adddf3+0x8c>
 800079e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80007a2:	bf18      	it	ne
 80007a4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80007a8:	d029      	beq.n	80007fe <__adddf3+0x24e>
 80007aa:	ea94 0f05 	teq	r4, r5
 80007ae:	bf08      	it	eq
 80007b0:	ea90 0f02 	teqeq	r0, r2
 80007b4:	d005      	beq.n	80007c2 <__adddf3+0x212>
 80007b6:	ea54 0c00 	orrs.w	ip, r4, r0
 80007ba:	bf04      	itt	eq
 80007bc:	4619      	moveq	r1, r3
 80007be:	4610      	moveq	r0, r2
 80007c0:	bd30      	pop	{r4, r5, pc}
 80007c2:	ea91 0f03 	teq	r1, r3
 80007c6:	bf1e      	ittt	ne
 80007c8:	2100      	movne	r1, #0
 80007ca:	2000      	movne	r0, #0
 80007cc:	bd30      	popne	{r4, r5, pc}
 80007ce:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80007d2:	d105      	bne.n	80007e0 <__adddf3+0x230>
 80007d4:	0040      	lsls	r0, r0, #1
 80007d6:	4149      	adcs	r1, r1
 80007d8:	bf28      	it	cs
 80007da:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80007de:	bd30      	pop	{r4, r5, pc}
 80007e0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80007e4:	bf3c      	itt	cc
 80007e6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80007ea:	bd30      	popcc	{r4, r5, pc}
 80007ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80007f0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80007f4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd30      	pop	{r4, r5, pc}
 80007fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000802:	bf1a      	itte	ne
 8000804:	4619      	movne	r1, r3
 8000806:	4610      	movne	r0, r2
 8000808:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800080c:	bf1c      	itt	ne
 800080e:	460b      	movne	r3, r1
 8000810:	4602      	movne	r2, r0
 8000812:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000816:	bf06      	itte	eq
 8000818:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800081c:	ea91 0f03 	teqeq	r1, r3
 8000820:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000824:	bd30      	pop	{r4, r5, pc}
 8000826:	bf00      	nop

08000828 <__aeabi_ui2d>:
 8000828:	f090 0f00 	teq	r0, #0
 800082c:	bf04      	itt	eq
 800082e:	2100      	moveq	r1, #0
 8000830:	4770      	bxeq	lr
 8000832:	b530      	push	{r4, r5, lr}
 8000834:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000838:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800083c:	f04f 0500 	mov.w	r5, #0
 8000840:	f04f 0100 	mov.w	r1, #0
 8000844:	e750      	b.n	80006e8 <__adddf3+0x138>
 8000846:	bf00      	nop

08000848 <__aeabi_i2d>:
 8000848:	f090 0f00 	teq	r0, #0
 800084c:	bf04      	itt	eq
 800084e:	2100      	moveq	r1, #0
 8000850:	4770      	bxeq	lr
 8000852:	b530      	push	{r4, r5, lr}
 8000854:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000858:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800085c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000860:	bf48      	it	mi
 8000862:	4240      	negmi	r0, r0
 8000864:	f04f 0100 	mov.w	r1, #0
 8000868:	e73e      	b.n	80006e8 <__adddf3+0x138>
 800086a:	bf00      	nop

0800086c <__aeabi_f2d>:
 800086c:	0042      	lsls	r2, r0, #1
 800086e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000872:	ea4f 0131 	mov.w	r1, r1, rrx
 8000876:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800087a:	bf1f      	itttt	ne
 800087c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000880:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000884:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000888:	4770      	bxne	lr
 800088a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800088e:	bf08      	it	eq
 8000890:	4770      	bxeq	lr
 8000892:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000896:	bf04      	itt	eq
 8000898:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800089c:	4770      	bxeq	lr
 800089e:	b530      	push	{r4, r5, lr}
 80008a0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80008a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80008a8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80008ac:	e71c      	b.n	80006e8 <__adddf3+0x138>
 80008ae:	bf00      	nop

080008b0 <__aeabi_ul2d>:
 80008b0:	ea50 0201 	orrs.w	r2, r0, r1
 80008b4:	bf08      	it	eq
 80008b6:	4770      	bxeq	lr
 80008b8:	b530      	push	{r4, r5, lr}
 80008ba:	f04f 0500 	mov.w	r5, #0
 80008be:	e00a      	b.n	80008d6 <__aeabi_l2d+0x16>

080008c0 <__aeabi_l2d>:
 80008c0:	ea50 0201 	orrs.w	r2, r0, r1
 80008c4:	bf08      	it	eq
 80008c6:	4770      	bxeq	lr
 80008c8:	b530      	push	{r4, r5, lr}
 80008ca:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80008ce:	d502      	bpl.n	80008d6 <__aeabi_l2d+0x16>
 80008d0:	4240      	negs	r0, r0
 80008d2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80008d6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80008da:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80008de:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80008e2:	f43f aed8 	beq.w	8000696 <__adddf3+0xe6>
 80008e6:	f04f 0203 	mov.w	r2, #3
 80008ea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008ee:	bf18      	it	ne
 80008f0:	3203      	addne	r2, #3
 80008f2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008f6:	bf18      	it	ne
 80008f8:	3203      	addne	r2, #3
 80008fa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80008fe:	f1c2 0320 	rsb	r3, r2, #32
 8000902:	fa00 fc03 	lsl.w	ip, r0, r3
 8000906:	fa20 f002 	lsr.w	r0, r0, r2
 800090a:	fa01 fe03 	lsl.w	lr, r1, r3
 800090e:	ea40 000e 	orr.w	r0, r0, lr
 8000912:	fa21 f102 	lsr.w	r1, r1, r2
 8000916:	4414      	add	r4, r2
 8000918:	e6bd      	b.n	8000696 <__adddf3+0xe6>
 800091a:	bf00      	nop

0800091c <__aeabi_d2f>:
 800091c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000920:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000924:	bf24      	itt	cs
 8000926:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800092a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 800092e:	d90d      	bls.n	800094c <__aeabi_d2f+0x30>
 8000930:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000934:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000938:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800093c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000940:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000944:	bf08      	it	eq
 8000946:	f020 0001 	biceq.w	r0, r0, #1
 800094a:	4770      	bx	lr
 800094c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000950:	d121      	bne.n	8000996 <__aeabi_d2f+0x7a>
 8000952:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000956:	bfbc      	itt	lt
 8000958:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 800095c:	4770      	bxlt	lr
 800095e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000962:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000966:	f1c2 0218 	rsb	r2, r2, #24
 800096a:	f1c2 0c20 	rsb	ip, r2, #32
 800096e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000972:	fa20 f002 	lsr.w	r0, r0, r2
 8000976:	bf18      	it	ne
 8000978:	f040 0001 	orrne.w	r0, r0, #1
 800097c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000980:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000984:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000988:	ea40 000c 	orr.w	r0, r0, ip
 800098c:	fa23 f302 	lsr.w	r3, r3, r2
 8000990:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000994:	e7cc      	b.n	8000930 <__aeabi_d2f+0x14>
 8000996:	ea7f 5362 	mvns.w	r3, r2, asr #21
 800099a:	d107      	bne.n	80009ac <__aeabi_d2f+0x90>
 800099c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80009a0:	bf1e      	ittt	ne
 80009a2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80009a6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80009aa:	4770      	bxne	lr
 80009ac:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80009b0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80009b4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80009b8:	4770      	bx	lr
 80009ba:	bf00      	nop

080009bc <__aeabi_uldivmod>:
 80009bc:	b953      	cbnz	r3, 80009d4 <__aeabi_uldivmod+0x18>
 80009be:	b94a      	cbnz	r2, 80009d4 <__aeabi_uldivmod+0x18>
 80009c0:	2900      	cmp	r1, #0
 80009c2:	bf08      	it	eq
 80009c4:	2800      	cmpeq	r0, #0
 80009c6:	bf1c      	itt	ne
 80009c8:	f04f 31ff 	movne.w	r1, #4294967295
 80009cc:	f04f 30ff 	movne.w	r0, #4294967295
 80009d0:	f000 b970 	b.w	8000cb4 <__aeabi_idiv0>
 80009d4:	f1ad 0c08 	sub.w	ip, sp, #8
 80009d8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80009dc:	f000 f806 	bl	80009ec <__udivmoddi4>
 80009e0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80009e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80009e8:	b004      	add	sp, #16
 80009ea:	4770      	bx	lr

080009ec <__udivmoddi4>:
 80009ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80009f0:	9e08      	ldr	r6, [sp, #32]
 80009f2:	460d      	mov	r5, r1
 80009f4:	4604      	mov	r4, r0
 80009f6:	460f      	mov	r7, r1
 80009f8:	2b00      	cmp	r3, #0
 80009fa:	d14a      	bne.n	8000a92 <__udivmoddi4+0xa6>
 80009fc:	428a      	cmp	r2, r1
 80009fe:	4694      	mov	ip, r2
 8000a00:	d965      	bls.n	8000ace <__udivmoddi4+0xe2>
 8000a02:	fab2 f382 	clz	r3, r2
 8000a06:	b143      	cbz	r3, 8000a1a <__udivmoddi4+0x2e>
 8000a08:	fa02 fc03 	lsl.w	ip, r2, r3
 8000a0c:	f1c3 0220 	rsb	r2, r3, #32
 8000a10:	409f      	lsls	r7, r3
 8000a12:	fa20 f202 	lsr.w	r2, r0, r2
 8000a16:	4317      	orrs	r7, r2
 8000a18:	409c      	lsls	r4, r3
 8000a1a:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000a1e:	fa1f f58c 	uxth.w	r5, ip
 8000a22:	fbb7 f1fe 	udiv	r1, r7, lr
 8000a26:	0c22      	lsrs	r2, r4, #16
 8000a28:	fb0e 7711 	mls	r7, lr, r1, r7
 8000a2c:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000a30:	fb01 f005 	mul.w	r0, r1, r5
 8000a34:	4290      	cmp	r0, r2
 8000a36:	d90a      	bls.n	8000a4e <__udivmoddi4+0x62>
 8000a38:	eb1c 0202 	adds.w	r2, ip, r2
 8000a3c:	f101 37ff 	add.w	r7, r1, #4294967295
 8000a40:	f080 811c 	bcs.w	8000c7c <__udivmoddi4+0x290>
 8000a44:	4290      	cmp	r0, r2
 8000a46:	f240 8119 	bls.w	8000c7c <__udivmoddi4+0x290>
 8000a4a:	3902      	subs	r1, #2
 8000a4c:	4462      	add	r2, ip
 8000a4e:	1a12      	subs	r2, r2, r0
 8000a50:	b2a4      	uxth	r4, r4
 8000a52:	fbb2 f0fe 	udiv	r0, r2, lr
 8000a56:	fb0e 2210 	mls	r2, lr, r0, r2
 8000a5a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000a5e:	fb00 f505 	mul.w	r5, r0, r5
 8000a62:	42a5      	cmp	r5, r4
 8000a64:	d90a      	bls.n	8000a7c <__udivmoddi4+0x90>
 8000a66:	eb1c 0404 	adds.w	r4, ip, r4
 8000a6a:	f100 32ff 	add.w	r2, r0, #4294967295
 8000a6e:	f080 8107 	bcs.w	8000c80 <__udivmoddi4+0x294>
 8000a72:	42a5      	cmp	r5, r4
 8000a74:	f240 8104 	bls.w	8000c80 <__udivmoddi4+0x294>
 8000a78:	4464      	add	r4, ip
 8000a7a:	3802      	subs	r0, #2
 8000a7c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000a80:	1b64      	subs	r4, r4, r5
 8000a82:	2100      	movs	r1, #0
 8000a84:	b11e      	cbz	r6, 8000a8e <__udivmoddi4+0xa2>
 8000a86:	40dc      	lsrs	r4, r3
 8000a88:	2300      	movs	r3, #0
 8000a8a:	e9c6 4300 	strd	r4, r3, [r6]
 8000a8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a92:	428b      	cmp	r3, r1
 8000a94:	d908      	bls.n	8000aa8 <__udivmoddi4+0xbc>
 8000a96:	2e00      	cmp	r6, #0
 8000a98:	f000 80ed 	beq.w	8000c76 <__udivmoddi4+0x28a>
 8000a9c:	2100      	movs	r1, #0
 8000a9e:	e9c6 0500 	strd	r0, r5, [r6]
 8000aa2:	4608      	mov	r0, r1
 8000aa4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000aa8:	fab3 f183 	clz	r1, r3
 8000aac:	2900      	cmp	r1, #0
 8000aae:	d149      	bne.n	8000b44 <__udivmoddi4+0x158>
 8000ab0:	42ab      	cmp	r3, r5
 8000ab2:	d302      	bcc.n	8000aba <__udivmoddi4+0xce>
 8000ab4:	4282      	cmp	r2, r0
 8000ab6:	f200 80f8 	bhi.w	8000caa <__udivmoddi4+0x2be>
 8000aba:	1a84      	subs	r4, r0, r2
 8000abc:	eb65 0203 	sbc.w	r2, r5, r3
 8000ac0:	2001      	movs	r0, #1
 8000ac2:	4617      	mov	r7, r2
 8000ac4:	2e00      	cmp	r6, #0
 8000ac6:	d0e2      	beq.n	8000a8e <__udivmoddi4+0xa2>
 8000ac8:	e9c6 4700 	strd	r4, r7, [r6]
 8000acc:	e7df      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000ace:	b902      	cbnz	r2, 8000ad2 <__udivmoddi4+0xe6>
 8000ad0:	deff      	udf	#255	; 0xff
 8000ad2:	fab2 f382 	clz	r3, r2
 8000ad6:	2b00      	cmp	r3, #0
 8000ad8:	f040 8090 	bne.w	8000bfc <__udivmoddi4+0x210>
 8000adc:	1a8a      	subs	r2, r1, r2
 8000ade:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ae2:	fa1f fe8c 	uxth.w	lr, ip
 8000ae6:	2101      	movs	r1, #1
 8000ae8:	fbb2 f5f7 	udiv	r5, r2, r7
 8000aec:	fb07 2015 	mls	r0, r7, r5, r2
 8000af0:	0c22      	lsrs	r2, r4, #16
 8000af2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000af6:	fb0e f005 	mul.w	r0, lr, r5
 8000afa:	4290      	cmp	r0, r2
 8000afc:	d908      	bls.n	8000b10 <__udivmoddi4+0x124>
 8000afe:	eb1c 0202 	adds.w	r2, ip, r2
 8000b02:	f105 38ff 	add.w	r8, r5, #4294967295
 8000b06:	d202      	bcs.n	8000b0e <__udivmoddi4+0x122>
 8000b08:	4290      	cmp	r0, r2
 8000b0a:	f200 80cb 	bhi.w	8000ca4 <__udivmoddi4+0x2b8>
 8000b0e:	4645      	mov	r5, r8
 8000b10:	1a12      	subs	r2, r2, r0
 8000b12:	b2a4      	uxth	r4, r4
 8000b14:	fbb2 f0f7 	udiv	r0, r2, r7
 8000b18:	fb07 2210 	mls	r2, r7, r0, r2
 8000b1c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000b20:	fb0e fe00 	mul.w	lr, lr, r0
 8000b24:	45a6      	cmp	lr, r4
 8000b26:	d908      	bls.n	8000b3a <__udivmoddi4+0x14e>
 8000b28:	eb1c 0404 	adds.w	r4, ip, r4
 8000b2c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000b30:	d202      	bcs.n	8000b38 <__udivmoddi4+0x14c>
 8000b32:	45a6      	cmp	lr, r4
 8000b34:	f200 80bb 	bhi.w	8000cae <__udivmoddi4+0x2c2>
 8000b38:	4610      	mov	r0, r2
 8000b3a:	eba4 040e 	sub.w	r4, r4, lr
 8000b3e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000b42:	e79f      	b.n	8000a84 <__udivmoddi4+0x98>
 8000b44:	f1c1 0720 	rsb	r7, r1, #32
 8000b48:	408b      	lsls	r3, r1
 8000b4a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000b4e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000b52:	fa05 f401 	lsl.w	r4, r5, r1
 8000b56:	fa20 f307 	lsr.w	r3, r0, r7
 8000b5a:	40fd      	lsrs	r5, r7
 8000b5c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000b60:	4323      	orrs	r3, r4
 8000b62:	fbb5 f8f9 	udiv	r8, r5, r9
 8000b66:	fa1f fe8c 	uxth.w	lr, ip
 8000b6a:	fb09 5518 	mls	r5, r9, r8, r5
 8000b6e:	0c1c      	lsrs	r4, r3, #16
 8000b70:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000b74:	fb08 f50e 	mul.w	r5, r8, lr
 8000b78:	42a5      	cmp	r5, r4
 8000b7a:	fa02 f201 	lsl.w	r2, r2, r1
 8000b7e:	fa00 f001 	lsl.w	r0, r0, r1
 8000b82:	d90b      	bls.n	8000b9c <__udivmoddi4+0x1b0>
 8000b84:	eb1c 0404 	adds.w	r4, ip, r4
 8000b88:	f108 3aff 	add.w	sl, r8, #4294967295
 8000b8c:	f080 8088 	bcs.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b90:	42a5      	cmp	r5, r4
 8000b92:	f240 8085 	bls.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b96:	f1a8 0802 	sub.w	r8, r8, #2
 8000b9a:	4464      	add	r4, ip
 8000b9c:	1b64      	subs	r4, r4, r5
 8000b9e:	b29d      	uxth	r5, r3
 8000ba0:	fbb4 f3f9 	udiv	r3, r4, r9
 8000ba4:	fb09 4413 	mls	r4, r9, r3, r4
 8000ba8:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000bac:	fb03 fe0e 	mul.w	lr, r3, lr
 8000bb0:	45a6      	cmp	lr, r4
 8000bb2:	d908      	bls.n	8000bc6 <__udivmoddi4+0x1da>
 8000bb4:	eb1c 0404 	adds.w	r4, ip, r4
 8000bb8:	f103 35ff 	add.w	r5, r3, #4294967295
 8000bbc:	d26c      	bcs.n	8000c98 <__udivmoddi4+0x2ac>
 8000bbe:	45a6      	cmp	lr, r4
 8000bc0:	d96a      	bls.n	8000c98 <__udivmoddi4+0x2ac>
 8000bc2:	3b02      	subs	r3, #2
 8000bc4:	4464      	add	r4, ip
 8000bc6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000bca:	fba3 9502 	umull	r9, r5, r3, r2
 8000bce:	eba4 040e 	sub.w	r4, r4, lr
 8000bd2:	42ac      	cmp	r4, r5
 8000bd4:	46c8      	mov	r8, r9
 8000bd6:	46ae      	mov	lr, r5
 8000bd8:	d356      	bcc.n	8000c88 <__udivmoddi4+0x29c>
 8000bda:	d053      	beq.n	8000c84 <__udivmoddi4+0x298>
 8000bdc:	b156      	cbz	r6, 8000bf4 <__udivmoddi4+0x208>
 8000bde:	ebb0 0208 	subs.w	r2, r0, r8
 8000be2:	eb64 040e 	sbc.w	r4, r4, lr
 8000be6:	fa04 f707 	lsl.w	r7, r4, r7
 8000bea:	40ca      	lsrs	r2, r1
 8000bec:	40cc      	lsrs	r4, r1
 8000bee:	4317      	orrs	r7, r2
 8000bf0:	e9c6 7400 	strd	r7, r4, [r6]
 8000bf4:	4618      	mov	r0, r3
 8000bf6:	2100      	movs	r1, #0
 8000bf8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bfc:	f1c3 0120 	rsb	r1, r3, #32
 8000c00:	fa02 fc03 	lsl.w	ip, r2, r3
 8000c04:	fa20 f201 	lsr.w	r2, r0, r1
 8000c08:	fa25 f101 	lsr.w	r1, r5, r1
 8000c0c:	409d      	lsls	r5, r3
 8000c0e:	432a      	orrs	r2, r5
 8000c10:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c14:	fa1f fe8c 	uxth.w	lr, ip
 8000c18:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c1c:	fb07 1510 	mls	r5, r7, r0, r1
 8000c20:	0c11      	lsrs	r1, r2, #16
 8000c22:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000c26:	fb00 f50e 	mul.w	r5, r0, lr
 8000c2a:	428d      	cmp	r5, r1
 8000c2c:	fa04 f403 	lsl.w	r4, r4, r3
 8000c30:	d908      	bls.n	8000c44 <__udivmoddi4+0x258>
 8000c32:	eb1c 0101 	adds.w	r1, ip, r1
 8000c36:	f100 38ff 	add.w	r8, r0, #4294967295
 8000c3a:	d22f      	bcs.n	8000c9c <__udivmoddi4+0x2b0>
 8000c3c:	428d      	cmp	r5, r1
 8000c3e:	d92d      	bls.n	8000c9c <__udivmoddi4+0x2b0>
 8000c40:	3802      	subs	r0, #2
 8000c42:	4461      	add	r1, ip
 8000c44:	1b49      	subs	r1, r1, r5
 8000c46:	b292      	uxth	r2, r2
 8000c48:	fbb1 f5f7 	udiv	r5, r1, r7
 8000c4c:	fb07 1115 	mls	r1, r7, r5, r1
 8000c50:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c54:	fb05 f10e 	mul.w	r1, r5, lr
 8000c58:	4291      	cmp	r1, r2
 8000c5a:	d908      	bls.n	8000c6e <__udivmoddi4+0x282>
 8000c5c:	eb1c 0202 	adds.w	r2, ip, r2
 8000c60:	f105 38ff 	add.w	r8, r5, #4294967295
 8000c64:	d216      	bcs.n	8000c94 <__udivmoddi4+0x2a8>
 8000c66:	4291      	cmp	r1, r2
 8000c68:	d914      	bls.n	8000c94 <__udivmoddi4+0x2a8>
 8000c6a:	3d02      	subs	r5, #2
 8000c6c:	4462      	add	r2, ip
 8000c6e:	1a52      	subs	r2, r2, r1
 8000c70:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000c74:	e738      	b.n	8000ae8 <__udivmoddi4+0xfc>
 8000c76:	4631      	mov	r1, r6
 8000c78:	4630      	mov	r0, r6
 8000c7a:	e708      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000c7c:	4639      	mov	r1, r7
 8000c7e:	e6e6      	b.n	8000a4e <__udivmoddi4+0x62>
 8000c80:	4610      	mov	r0, r2
 8000c82:	e6fb      	b.n	8000a7c <__udivmoddi4+0x90>
 8000c84:	4548      	cmp	r0, r9
 8000c86:	d2a9      	bcs.n	8000bdc <__udivmoddi4+0x1f0>
 8000c88:	ebb9 0802 	subs.w	r8, r9, r2
 8000c8c:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000c90:	3b01      	subs	r3, #1
 8000c92:	e7a3      	b.n	8000bdc <__udivmoddi4+0x1f0>
 8000c94:	4645      	mov	r5, r8
 8000c96:	e7ea      	b.n	8000c6e <__udivmoddi4+0x282>
 8000c98:	462b      	mov	r3, r5
 8000c9a:	e794      	b.n	8000bc6 <__udivmoddi4+0x1da>
 8000c9c:	4640      	mov	r0, r8
 8000c9e:	e7d1      	b.n	8000c44 <__udivmoddi4+0x258>
 8000ca0:	46d0      	mov	r8, sl
 8000ca2:	e77b      	b.n	8000b9c <__udivmoddi4+0x1b0>
 8000ca4:	3d02      	subs	r5, #2
 8000ca6:	4462      	add	r2, ip
 8000ca8:	e732      	b.n	8000b10 <__udivmoddi4+0x124>
 8000caa:	4608      	mov	r0, r1
 8000cac:	e70a      	b.n	8000ac4 <__udivmoddi4+0xd8>
 8000cae:	4464      	add	r4, ip
 8000cb0:	3802      	subs	r0, #2
 8000cb2:	e742      	b.n	8000b3a <__udivmoddi4+0x14e>

08000cb4 <__aeabi_idiv0>:
 8000cb4:	4770      	bx	lr
 8000cb6:	bf00      	nop

08000cb8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000cb8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000cf0 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000cbc:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000cbe:	e003      	b.n	8000cc8 <LoopCopyDataInit>

08000cc0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000cc0:	4b0c      	ldr	r3, [pc, #48]	; (8000cf4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000cc2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000cc4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000cc6:	3104      	adds	r1, #4

08000cc8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000cc8:	480b      	ldr	r0, [pc, #44]	; (8000cf8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000cca:	4b0c      	ldr	r3, [pc, #48]	; (8000cfc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000ccc:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000cce:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000cd0:	d3f6      	bcc.n	8000cc0 <CopyDataInit>
  ldr  r2, =_sbss
 8000cd2:	4a0b      	ldr	r2, [pc, #44]	; (8000d00 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000cd4:	e002      	b.n	8000cdc <LoopFillZerobss>

08000cd6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000cd6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000cd8:	f842 3b04 	str.w	r3, [r2], #4

08000cdc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000cdc:	4b09      	ldr	r3, [pc, #36]	; (8000d04 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000cde:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000ce0:	d3f9      	bcc.n	8000cd6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000ce2:	f009 f907 	bl	8009ef4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000ce6:	f02a f97d 	bl	802afe4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000cea:	f001 f819 	bl	8001d20 <main>
  bx  lr    
 8000cee:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000cf0:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000cf4:	081607fc 	.word	0x081607fc
  ldr  r0, =_sdata
 8000cf8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000cfc:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000d00:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000d04:	200139ec 	.word	0x200139ec

08000d08 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000d08:	e7fe      	b.n	8000d08 <ADC_IRQHandler>
	...

08000d0c <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8000d0c:	4770      	bx	lr
 8000d0e:	bf00      	nop

08000d10 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8000d10:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8000d12:	f000 fba9 	bl	8001468 <touchgfx_components_init>
  touchgfx_init();
}
 8000d16:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8000d1a:	f000 bb33 	b.w	8001384 <touchgfx_init>
 8000d1e:	bf00      	nop

08000d20 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8000d20:	f000 bba4 	b.w	800146c <touchgfx_taskEntry>

08000d24 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000d24:	4770      	bx	lr

08000d26 <_ZN20STM32TouchControllerD0Ev>:
 8000d26:	b510      	push	{r4, lr}
 8000d28:	2104      	movs	r1, #4
 8000d2a:	4604      	mov	r4, r0
 8000d2c:	f028 ff6f 	bl	8029c0e <_ZdlPvj>
 8000d30:	4620      	mov	r0, r4
 8000d32:	bd10      	pop	{r4, pc}

08000d34 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000d34:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000d36:	4b0c      	ldr	r3, [pc, #48]	; (8000d68 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000d38:	4c0c      	ldr	r4, [pc, #48]	; (8000d6c <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000d3a:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000d3c:	4b0c      	ldr	r3, [pc, #48]	; (8000d70 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000d3e:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000d40:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000d42:	6863      	ldr	r3, [r4, #4]
 8000d44:	4798      	blx	r3
 8000d46:	f640 0311 	movw	r3, #2065	; 0x811
 8000d4a:	4298      	cmp	r0, r3
 8000d4c:	d10a      	bne.n	8000d64 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000d4e:	4d09      	ldr	r5, [pc, #36]	; (8000d74 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000d50:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000d52:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000d54:	2082      	movs	r0, #130	; 0x82
 8000d56:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000d58:	682b      	ldr	r3, [r5, #0]
 8000d5a:	2082      	movs	r0, #130	; 0x82
 8000d5c:	68db      	ldr	r3, [r3, #12]
 8000d5e:	4798      	blx	r3
 8000d60:	2000      	movs	r0, #0
    }

    return ret;
}
 8000d62:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000d64:	2001      	movs	r0, #1
 8000d66:	e7fc      	b.n	8000d62 <_Z11BSP_TS_Inittt+0x2e>
 8000d68:	20000184 	.word	0x20000184
 8000d6c:	20000050 	.word	0x20000050
 8000d70:	20000186 	.word	0x20000186
 8000d74:	20000188 	.word	0x20000188

08000d78 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000d78:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000d7c:	20f0      	movs	r0, #240	; 0xf0
 8000d7e:	f7ff bfd9 	b.w	8000d34 <_Z11BSP_TS_Inittt>
	...

08000d84 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000d84:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000d86:	4d33      	ldr	r5, [pc, #204]	; (8000e54 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8000d88:	682b      	ldr	r3, [r5, #0]
{
 8000d8a:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000d8c:	691b      	ldr	r3, [r3, #16]
 8000d8e:	2082      	movs	r0, #130	; 0x82
 8000d90:	4798      	blx	r3
 8000d92:	b280      	uxth	r0, r0
 8000d94:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000d96:	2800      	cmp	r0, #0
 8000d98:	d04a      	beq.n	8000e30 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000d9a:	682b      	ldr	r3, [r5, #0]
 8000d9c:	f10d 0206 	add.w	r2, sp, #6
 8000da0:	695b      	ldr	r3, [r3, #20]
 8000da2:	a901      	add	r1, sp, #4
 8000da4:	2082      	movs	r0, #130	; 0x82
 8000da6:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8000da8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000dac:	f640 6274 	movw	r2, #3700	; 0xe74
 8000db0:	4293      	cmp	r3, r2
 8000db2:	d93f      	bls.n	8000e34 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8000db4:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8000db8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000dbc:	1ad2      	subs	r2, r2, r3
 8000dbe:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000dc0:	2a0a      	cmp	r2, #10
 8000dc2:	d93d      	bls.n	8000e40 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8000dc4:	230b      	movs	r3, #11
 8000dc6:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000dca:	4b23      	ldr	r3, [pc, #140]	; (8000e58 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8000dcc:	881b      	ldrh	r3, [r3, #0]
 8000dce:	429a      	cmp	r2, r3
 8000dd0:	d901      	bls.n	8000dd6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8000dd2:	3b01      	subs	r3, #1
 8000dd4:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000dd6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000dda:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000dde:	428b      	cmp	r3, r1
 8000de0:	d830      	bhi.n	8000e44 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8000de2:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8000de6:	330e      	adds	r3, #14
 8000de8:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8000dea:	210f      	movs	r1, #15
 8000dec:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8000df0:	491a      	ldr	r1, [pc, #104]	; (8000e5c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8000df2:	8809      	ldrh	r1, [r1, #0]
 8000df4:	428b      	cmp	r3, r1
 8000df6:	d901      	bls.n	8000dfc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8000df8:	3901      	subs	r1, #1
 8000dfa:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000dfc:	4e18      	ldr	r6, [pc, #96]	; (8000e60 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000dfe:	4d19      	ldr	r5, [pc, #100]	; (8000e64 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000e00:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000e02:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000e04:	4283      	cmp	r3, r0
 8000e06:	b281      	uxth	r1, r0
 8000e08:	bf8c      	ite	hi
 8000e0a:	1a59      	subhi	r1, r3, r1
 8000e0c:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000e0e:	b2b8      	uxth	r0, r7
 8000e10:	42ba      	cmp	r2, r7
 8000e12:	bf8c      	ite	hi
 8000e14:	1a10      	subhi	r0, r2, r0
 8000e16:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000e18:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000e1a:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8000e1c:	4401      	add	r1, r0
 8000e1e:	2905      	cmp	r1, #5
        {
            _x = x;
 8000e20:	bfc8      	it	gt
 8000e22:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8000e24:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8000e26:	bfc8      	it	gt
 8000e28:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8000e2a:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000e2c:	682b      	ldr	r3, [r5, #0]
 8000e2e:	80a3      	strh	r3, [r4, #4]
    }
}
 8000e30:	b003      	add	sp, #12
 8000e32:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8000e34:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8000e36:	bf9c      	itt	ls
 8000e38:	23b4      	movls	r3, #180	; 0xb4
 8000e3a:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8000e3e:	e7bb      	b.n	8000db8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8000e40:	2200      	movs	r2, #0
 8000e42:	e7c8      	b.n	8000dd6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8000e44:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8000e48:	3308      	adds	r3, #8
 8000e4a:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8000e4c:	2b0e      	cmp	r3, #14
 8000e4e:	d8cc      	bhi.n	8000dea <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8000e50:	2300      	movs	r3, #0
 8000e52:	e7d3      	b.n	8000dfc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8000e54:	20000188 	.word	0x20000188
 8000e58:	20000186 	.word	0x20000186
 8000e5c:	20000184 	.word	0x20000184
 8000e60:	2000018c 	.word	0x2000018c
 8000e64:	20000190 	.word	0x20000190

08000e68 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000e68:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000e6a:	4668      	mov	r0, sp
{
 8000e6c:	460d      	mov	r5, r1
 8000e6e:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000e70:	f7ff ff88 	bl	8000d84 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000e74:	f8bd 0000 	ldrh.w	r0, [sp]
 8000e78:	b148      	cbz	r0, 8000e8e <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8000e7a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000e7e:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000e80:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000e84:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8000e86:	4b03      	ldr	r3, [pc, #12]	; (8000e94 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8000e88:	223c      	movs	r2, #60	; 0x3c
 8000e8a:	601a      	str	r2, [r3, #0]
        return true;
 8000e8c:	2001      	movs	r0, #1
}
 8000e8e:	b003      	add	sp, #12
 8000e90:	bd30      	pop	{r4, r5, pc}
 8000e92:	bf00      	nop
 8000e94:	20000014 	.word	0x20000014

08000e98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000e98:	b110      	cbz	r0, 8000ea0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8000e9a:	2802      	cmp	r0, #2
 8000e9c:	d009      	beq.n	8000eb2 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000e9e:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000ea0:	4b07      	ldr	r3, [pc, #28]	; (8000ec0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000ea2:	681a      	ldr	r2, [r3, #0]
 8000ea4:	fab2 f282 	clz	r2, r2
 8000ea8:	0952      	lsrs	r2, r2, #5
 8000eaa:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000eac:	4805      	ldr	r0, [pc, #20]	; (8000ec4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000eae:	f009 ba39 	b.w	800a324 <HAL_GPIO_WritePin>
 8000eb2:	4b03      	ldr	r3, [pc, #12]	; (8000ec0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000eb4:	689a      	ldr	r2, [r3, #8]
 8000eb6:	fab2 f282 	clz	r2, r2
 8000eba:	0952      	lsrs	r2, r2, #5
 8000ebc:	2110      	movs	r1, #16
 8000ebe:	e7f5      	b.n	8000eac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8000ec0:	20000194 	.word	0x20000194
 8000ec4:	40021000 	.word	0x40021000

08000ec8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000ec8:	b110      	cbz	r0, 8000ed0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8000eca:	2802      	cmp	r0, #2
 8000ecc:	d009      	beq.n	8000ee2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8000ece:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000ed0:	4b07      	ldr	r3, [pc, #28]	; (8000ef0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8000ed2:	681a      	ldr	r2, [r3, #0]
 8000ed4:	3a00      	subs	r2, #0
 8000ed6:	bf18      	it	ne
 8000ed8:	2201      	movne	r2, #1
 8000eda:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8000edc:	4805      	ldr	r0, [pc, #20]	; (8000ef4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8000ede:	f009 ba21 	b.w	800a324 <HAL_GPIO_WritePin>
 8000ee2:	4b03      	ldr	r3, [pc, #12]	; (8000ef0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8000ee4:	689a      	ldr	r2, [r3, #8]
 8000ee6:	3a00      	subs	r2, #0
 8000ee8:	bf18      	it	ne
 8000eea:	2201      	movne	r2, #1
 8000eec:	2110      	movs	r1, #16
 8000eee:	e7f5      	b.n	8000edc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8000ef0:	20000194 	.word	0x20000194
 8000ef4:	40021000 	.word	0x40021000

08000ef8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8000ef8:	b110      	cbz	r0, 8000f00 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8000efa:	2802      	cmp	r0, #2
 8000efc:	d004      	beq.n	8000f08 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8000efe:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000f00:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000f02:	4802      	ldr	r0, [pc, #8]	; (8000f0c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8000f04:	f009 ba12 	b.w	800a32c <HAL_GPIO_TogglePin>
 8000f08:	2110      	movs	r1, #16
 8000f0a:	e7fa      	b.n	8000f02 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8000f0c:	40021000 	.word	0x40021000

08000f10 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000f10:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8000f12:	b130      	cbz	r0, 8000f22 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8000f14:	2802      	cmp	r0, #2
 8000f16:	d009      	beq.n	8000f2c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8000f18:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000f1a:	1e43      	subs	r3, r0, #1
 8000f1c:	4258      	negs	r0, r3
 8000f1e:	4158      	adcs	r0, r3
 8000f20:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000f22:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000f24:	4802      	ldr	r0, [pc, #8]	; (8000f30 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8000f26:	f009 f9f7 	bl	800a318 <HAL_GPIO_ReadPin>
        break;
 8000f2a:	e7f6      	b.n	8000f1a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000f2c:	2110      	movs	r1, #16
 8000f2e:	e7f9      	b.n	8000f24 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8000f30:	40021000 	.word	0x40021000

08000f34 <_ZN8touchgfx4GPIO4initEv>:
{
 8000f34:	b570      	push	{r4, r5, r6, lr}
 8000f36:	4d08      	ldr	r5, [pc, #32]	; (8000f58 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000f38:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000f3a:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000f3c:	b2e0      	uxtb	r0, r4
 8000f3e:	f7ff ffe7 	bl	8000f10 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000f42:	b118      	cbz	r0, 8000f4c <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000f44:	682b      	ldr	r3, [r5, #0]
 8000f46:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000f48:	bf18      	it	ne
 8000f4a:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000f4c:	3401      	adds	r4, #1
 8000f4e:	2c05      	cmp	r4, #5
 8000f50:	f105 0504 	add.w	r5, r5, #4
 8000f54:	d1f2      	bne.n	8000f3c <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000f56:	bd70      	pop	{r4, r5, r6, pc}
 8000f58:	20000194 	.word	0x20000194

08000f5c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000f5c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000f5e:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8000f62:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8000f66:	4770      	bx	lr

08000f68 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000f68:	2000      	movs	r0, #0
 8000f6a:	4770      	bx	lr

08000f6c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000f6c:	4b03      	ldr	r3, [pc, #12]	; (8000f7c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000f6e:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000f70:	3900      	subs	r1, #0
 8000f72:	bf18      	it	ne
 8000f74:	2101      	movne	r1, #1
 8000f76:	7019      	strb	r1, [r3, #0]
    }
 8000f78:	4770      	bx	lr
 8000f7a:	bf00      	nop
 8000f7c:	20012db3 	.word	0x20012db3

08000f80 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000f80:	2000      	movs	r0, #0
 8000f82:	4770      	bx	lr

08000f84 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000f84:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000f86:	b10b      	cbz	r3, 8000f8c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000f88:	4608      	mov	r0, r1
 8000f8a:	4718      	bx	r3
        }
    }
 8000f8c:	4770      	bx	lr

08000f8e <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000f8e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000f92:	4770      	bx	lr

08000f94 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000f94:	6840      	ldr	r0, [r0, #4]
 8000f96:	6803      	ldr	r3, [r0, #0]
 8000f98:	699b      	ldr	r3, [r3, #24]
 8000f9a:	4718      	bx	r3

08000f9c <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000f9c:	4770      	bx	lr

08000f9e <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000f9e:	4770      	bx	lr

08000fa0 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000fa0:	4770      	bx	lr
	...

08000fa4 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000fa4:	b510      	push	{r4, lr}
 8000fa6:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8000fa8:	f000 fb4c 	bl	8001644 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000fac:	6823      	ldr	r3, [r4, #0]
 8000fae:	4903      	ldr	r1, [pc, #12]	; (8000fbc <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000fb0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000fb4:	4620      	mov	r0, r4
}
 8000fb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8000fba:	4718      	bx	r3
 8000fbc:	d0000000 	.word	0xd0000000

08000fc0 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000fc0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000fc2:	6803      	ldr	r3, [r0, #0]
{
 8000fc4:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000fc6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8000fca:	4798      	blx	r3
    enableInterrupts();
 8000fcc:	6823      	ldr	r3, [r4, #0]
 8000fce:	4620      	mov	r0, r4
 8000fd0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000fd2:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000fd4:	f000 f8ec 	bl	80011b0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000fd8:	6823      	ldr	r3, [r4, #0]
 8000fda:	4620      	mov	r0, r4
 8000fdc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000fde:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000fe0:	2029      	movs	r0, #41	; 0x29
 8000fe2:	f001 f969 	bl	80022b8 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000fe6:	f000 f8e3 	bl	80011b0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000fea:	6823      	ldr	r3, [r4, #0]
 8000fec:	4620      	mov	r0, r4
 8000fee:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000ff0:	4798      	blx	r3
    for (;;)
 8000ff2:	e7f8      	b.n	8000fe6 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000ff4 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000ff4:	b510      	push	{r4, lr}
 8000ff6:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000ff8:	f010 fb24 	bl	8011644 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000ffc:	6823      	ldr	r3, [r4, #0]
 8000ffe:	4620      	mov	r0, r4
 8001000:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8001004:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001008:	4718      	bx	r3

0800100a <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800100a:	f000 bb0d 	b.w	8001628 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

0800100e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800100e:	f000 bb11 	b.w	8001634 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001012 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001012:	f000 bb35 	b.w	8001680 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08001016 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001016:	f000 badd 	b.w	80015d4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

0800101a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800101a:	f000 bae3 	b.w	80015e4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

0800101e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800101e:	f000 bb3b 	b.w	8001698 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08001022 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001022:	f000 bae7 	b.w	80015f4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001026 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001026:	f00f bd79 	b.w	8010b1c <_ZN8touchgfx3HAL16flushFrameBufferEv>

0800102a <_ZN11TouchGFXHALD0Ev>:
 800102a:	b510      	push	{r4, lr}
 800102c:	217c      	movs	r1, #124	; 0x7c
 800102e:	4604      	mov	r4, r0
 8001030:	f028 fded 	bl	8029c0e <_ZdlPvj>
 8001034:	4620      	mov	r0, r4
 8001036:	bd10      	pop	{r4, pc}

08001038 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8001038:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 800103c:	b11b      	cbz	r3, 8001046 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 800103e:	6840      	ldr	r0, [r0, #4]
 8001040:	6803      	ldr	r3, [r0, #0]
 8001042:	681b      	ldr	r3, [r3, #0]
 8001044:	4718      	bx	r3
    }
 8001046:	4618      	mov	r0, r3
 8001048:	4770      	bx	lr
	...

0800104c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800104c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800104e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8001052:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8001056:	4b0c      	ldr	r3, [pc, #48]	; (8001088 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001058:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800105a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800105c:	d009      	beq.n	8001072 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800105e:	b93a      	cbnz	r2, 8001070 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001060:	4a0a      	ldr	r2, [pc, #40]	; (800108c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001062:	490b      	ldr	r1, [pc, #44]	; (8001090 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001064:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001066:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001068:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800106a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800106c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800106e:	701a      	strb	r2, [r3, #0]
    }
 8001070:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001072:	2a00      	cmp	r2, #0
 8001074:	d0fc      	beq.n	8001070 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001076:	4a05      	ldr	r2, [pc, #20]	; (800108c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001078:	4905      	ldr	r1, [pc, #20]	; (8001090 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800107a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800107c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800107e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001080:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8001082:	2200      	movs	r2, #0
 8001084:	e7f3      	b.n	800106e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001086:	bf00      	nop
 8001088:	20012dac 	.word	0x20012dac
 800108c:	20012da8 	.word	0x20012da8
 8001090:	20012daa 	.word	0x20012daa

08001094 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001094:	b570      	push	{r4, r5, r6, lr}
 8001096:	460d      	mov	r5, r1
 8001098:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800109a:	b935      	cbnz	r5, 80010aa <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800109c:	4b09      	ldr	r3, [pc, #36]	; (80010c4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800109e:	4a0a      	ldr	r2, [pc, #40]	; (80010c8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80010a0:	480a      	ldr	r0, [pc, #40]	; (80010cc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80010a2:	f240 21d2 	movw	r1, #722	; 0x2d2
 80010a6:	f029 fc99 	bl	802a9dc <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80010aa:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80010ae:	4b08      	ldr	r3, [pc, #32]	; (80010d0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 80010b0:	3a00      	subs	r2, #0
 80010b2:	bf18      	it	ne
 80010b4:	2201      	movne	r2, #1
 80010b6:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80010b8:	6803      	ldr	r3, [r0, #0]
    }
 80010ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 80010be:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80010c2:	4718      	bx	r3
 80010c4:	0802bb70 	.word	0x0802bb70
 80010c8:	0802bba8 	.word	0x0802bba8
 80010cc:	0802bbf6 	.word	0x0802bbf6
 80010d0:	20012db2 	.word	0x20012db2

080010d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80010d4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80010d6:	4b09      	ldr	r3, [pc, #36]	; (80010fc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80010d8:	881b      	ldrh	r3, [r3, #0]
 80010da:	428b      	cmp	r3, r1
 80010dc:	d803      	bhi.n	80010e6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80010de:	4b08      	ldr	r3, [pc, #32]	; (8001100 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80010e0:	881b      	ldrh	r3, [r3, #0]
 80010e2:	4293      	cmp	r3, r2
 80010e4:	d905      	bls.n	80010f2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80010e6:	4b07      	ldr	r3, [pc, #28]	; (8001104 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80010e8:	4a07      	ldr	r2, [pc, #28]	; (8001108 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80010ea:	4808      	ldr	r0, [pc, #32]	; (800110c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80010ec:	219e      	movs	r1, #158	; 0x9e
 80010ee:	f029 fc75 	bl	802a9dc <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80010f2:	4b07      	ldr	r3, [pc, #28]	; (8001110 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80010f4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80010f6:	4b07      	ldr	r3, [pc, #28]	; (8001114 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80010f8:	801a      	strh	r2, [r3, #0]
    }
 80010fa:	bd08      	pop	{r3, pc}
 80010fc:	20012da8 	.word	0x20012da8
 8001100:	20012daa 	.word	0x20012daa
 8001104:	0802bc3b 	.word	0x0802bc3b
 8001108:	0802bc9e 	.word	0x0802bc9e
 800110c:	0802bbf6 	.word	0x0802bbf6
 8001110:	20012dae 	.word	0x20012dae
 8001114:	20012db0 	.word	0x20012db0

08001118 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001118:	2101      	movs	r1, #1
{
 800111a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800111c:	2200      	movs	r2, #0
 800111e:	4608      	mov	r0, r1
 8001120:	f00c fb08 	bl	800d734 <osSemaphoreNew>
 8001124:	4b0a      	ldr	r3, [pc, #40]	; (8001150 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001126:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001128:	b928      	cbnz	r0, 8001136 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 800112a:	4b0a      	ldr	r3, [pc, #40]	; (8001154 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 800112c:	4a0a      	ldr	r2, [pc, #40]	; (8001158 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800112e:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001130:	480a      	ldr	r0, [pc, #40]	; (800115c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001132:	f029 fc53 	bl	802a9dc <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001136:	2200      	movs	r2, #0
 8001138:	2104      	movs	r1, #4
 800113a:	2001      	movs	r0, #1
 800113c:	f00c fbae 	bl	800d89c <osMessageQueueNew>
 8001140:	4b07      	ldr	r3, [pc, #28]	; (8001160 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001142:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001144:	b918      	cbnz	r0, 800114e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001146:	4b07      	ldr	r3, [pc, #28]	; (8001164 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001148:	4a03      	ldr	r2, [pc, #12]	; (8001158 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800114a:	212c      	movs	r1, #44	; 0x2c
 800114c:	e7f0      	b.n	8001130 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800114e:	bd08      	pop	{r3, pc}
 8001150:	200001a8 	.word	0x200001a8
 8001154:	0802bdbc 	.word	0x0802bdbc
 8001158:	0802be05 	.word	0x0802be05
 800115c:	0802be34 	.word	0x0802be34
 8001160:	200001a4 	.word	0x200001a4
 8001164:	0802bec4 	.word	0x0802bec4

08001168 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001168:	4b02      	ldr	r3, [pc, #8]	; (8001174 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800116a:	f04f 31ff 	mov.w	r1, #4294967295
 800116e:	6818      	ldr	r0, [r3, #0]
 8001170:	f00c bb34 	b.w	800d7dc <osSemaphoreAcquire>
 8001174:	200001a8 	.word	0x200001a8

08001178 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001178:	4b01      	ldr	r3, [pc, #4]	; (8001180 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800117a:	6818      	ldr	r0, [r3, #0]
 800117c:	f00c bb62 	b.w	800d844 <osSemaphoreRelease>
 8001180:	200001a8 	.word	0x200001a8

08001184 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001184:	4b02      	ldr	r3, [pc, #8]	; (8001190 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8001186:	2100      	movs	r1, #0
 8001188:	6818      	ldr	r0, [r3, #0]
 800118a:	f00c bb27 	b.w	800d7dc <osSemaphoreAcquire>
 800118e:	bf00      	nop
 8001190:	200001a8 	.word	0x200001a8

08001194 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8001194:	f7ff bff0 	b.w	8001178 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001198 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001198:	4803      	ldr	r0, [pc, #12]	; (80011a8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800119a:	4904      	ldr	r1, [pc, #16]	; (80011ac <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800119c:	6800      	ldr	r0, [r0, #0]
 800119e:	2300      	movs	r3, #0
 80011a0:	461a      	mov	r2, r3
 80011a2:	f00c bbb5 	b.w	800d910 <osMessageQueuePut>
 80011a6:	bf00      	nop
 80011a8:	200001a4 	.word	0x200001a4
 80011ac:	20000004 	.word	0x20000004

080011b0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80011b0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80011b2:	4c08      	ldr	r4, [pc, #32]	; (80011d4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80011b4:	2300      	movs	r3, #0
 80011b6:	461a      	mov	r2, r3
 80011b8:	a901      	add	r1, sp, #4
 80011ba:	6820      	ldr	r0, [r4, #0]
 80011bc:	f00c fbde 	bl	800d97c <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80011c0:	6820      	ldr	r0, [r4, #0]
 80011c2:	f04f 33ff 	mov.w	r3, #4294967295
 80011c6:	2200      	movs	r2, #0
 80011c8:	a901      	add	r1, sp, #4
 80011ca:	f00c fbd7 	bl	800d97c <osMessageQueueGet>
}
 80011ce:	b002      	add	sp, #8
 80011d0:	bd10      	pop	{r4, pc}
 80011d2:	bf00      	nop
 80011d4:	200001a4 	.word	0x200001a4

080011d8 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 80011d8:	4770      	bx	lr

080011da <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 80011da:	2000      	movs	r0, #0
 80011dc:	4770      	bx	lr

080011de <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 80011de:	4770      	bx	lr

080011e0 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 80011e0:	4770      	bx	lr

080011e2 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 80011e2:	2000      	movs	r0, #0
 80011e4:	4770      	bx	lr

080011e6 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 80011e6:	4770      	bx	lr

080011e8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 80011e8:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80011ea:	4a03      	ldr	r2, [pc, #12]	; (80011f8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 80011ec:	4b03      	ldr	r3, [pc, #12]	; (80011fc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 80011ee:	4804      	ldr	r0, [pc, #16]	; (8001200 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 80011f0:	2122      	movs	r1, #34	; 0x22
 80011f2:	f029 fbf3 	bl	802a9dc <__assert_func>
 80011f6:	bf00      	nop
 80011f8:	0802bf29 	.word	0x0802bf29
 80011fc:	0802bf06 	.word	0x0802bf06
 8001200:	0802bf67 	.word	0x0802bf67

08001204 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8001204:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8001206:	4a03      	ldr	r2, [pc, #12]	; (8001214 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8001208:	4b03      	ldr	r3, [pc, #12]	; (8001218 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 800120a:	4804      	ldr	r0, [pc, #16]	; (800121c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 800120c:	2127      	movs	r1, #39	; 0x27
 800120e:	f029 fbe5 	bl	802a9dc <__assert_func>
 8001212:	bf00      	nop
 8001214:	0802bff5 	.word	0x0802bff5
 8001218:	0802bf06 	.word	0x0802bf06
 800121c:	0802bf67 	.word	0x0802bf67

08001220 <_ZN8STM32DMAD0Ev>:
 8001220:	b510      	push	{r4, lr}
 8001222:	2144      	movs	r1, #68	; 0x44
 8001224:	4604      	mov	r4, r0
 8001226:	f028 fcf2 	bl	8029c0e <_ZdlPvj>
 800122a:	4620      	mov	r0, r4
 800122c:	bd10      	pop	{r4, pc}
	...

08001230 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001230:	b538      	push	{r3, r4, r5, lr}
 8001232:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8001234:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001236:	2500      	movs	r5, #0
 8001238:	4b06      	ldr	r3, [pc, #24]	; (8001254 <_ZN8STM32DMAC1Ev+0x24>)
 800123a:	7225      	strb	r5, [r4, #8]
 800123c:	300c      	adds	r0, #12
 800123e:	6060      	str	r0, [r4, #4]
 8001240:	7265      	strb	r5, [r4, #9]
 8001242:	2201      	movs	r2, #1
 8001244:	f841 3b20 	str.w	r3, [r1], #32
 8001248:	f010 fb54 	bl	80118f4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 800124c:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 800124e:	4620      	mov	r0, r4
 8001250:	bd38      	pop	{r3, r4, r5, pc}
 8001252:	bf00      	nop
 8001254:	0802c03c 	.word	0x0802c03c

08001258 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001258:	2001      	movs	r0, #1
 800125a:	4770      	bx	lr

0800125c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 800125c:	2038      	movs	r0, #56	; 0x38
 800125e:	4770      	bx	lr

08001260 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001260:	2338      	movs	r3, #56	; 0x38
 8001262:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001266:	3008      	adds	r0, #8
 8001268:	4770      	bx	lr

0800126a <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 800126a:	2338      	movs	r3, #56	; 0x38
 800126c:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001270:	3008      	adds	r0, #8
 8001272:	4770      	bx	lr

08001274 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001274:	2001      	movs	r0, #1
 8001276:	4770      	bx	lr

08001278 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001278:	f241 30f8 	movw	r0, #5112	; 0x13f8
 800127c:	4770      	bx	lr

0800127e <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800127e:	f241 33f8 	movw	r3, #5112	; 0x13f8
 8001282:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001286:	3008      	adds	r0, #8
 8001288:	4770      	bx	lr

0800128a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800128a:	f241 33f8 	movw	r3, #5112	; 0x13f8
 800128e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001292:	3008      	adds	r0, #8
 8001294:	4770      	bx	lr

08001296 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001296:	2001      	movs	r0, #1
 8001298:	4770      	bx	lr

0800129a <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 800129a:	2010      	movs	r0, #16
 800129c:	4770      	bx	lr

0800129e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800129e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80012a2:	3008      	adds	r0, #8
 80012a4:	4770      	bx	lr

080012a6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80012a6:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80012aa:	3008      	adds	r0, #8
 80012ac:	4770      	bx	lr

080012ae <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 80012ae:	4608      	mov	r0, r1
 80012b0:	f003 ba14 	b.w	80046dc <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

080012b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80012b4:	b510      	push	{r4, lr}
 80012b6:	4b03      	ldr	r3, [pc, #12]	; (80012c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 80012b8:	6003      	str	r3, [r0, #0]
 80012ba:	4604      	mov	r4, r0
 80012bc:	f00e ffb7 	bl	801022e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80012c0:	4620      	mov	r0, r4
 80012c2:	bd10      	pop	{r4, pc}
 80012c4:	0802c0f4 	.word	0x0802c0f4

080012c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 80012c8:	b510      	push	{r4, lr}
 80012ca:	4604      	mov	r4, r0
 80012cc:	f7ff fff2 	bl	80012b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80012d0:	4620      	mov	r0, r4
 80012d2:	2140      	movs	r1, #64	; 0x40
 80012d4:	f028 fc9b 	bl	8029c0e <_ZdlPvj>
 80012d8:	4620      	mov	r0, r4
 80012da:	bd10      	pop	{r4, pc}

080012dc <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80012dc:	b510      	push	{r4, lr}
 80012de:	4b03      	ldr	r3, [pc, #12]	; (80012ec <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80012e0:	6003      	str	r3, [r0, #0]
 80012e2:	4604      	mov	r4, r0
 80012e4:	f00e ffa3 	bl	801022e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80012e8:	4620      	mov	r0, r4
 80012ea:	bd10      	pop	{r4, pc}
 80012ec:	0802c0c0 	.word	0x0802c0c0

080012f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80012f0:	b510      	push	{r4, lr}
 80012f2:	4604      	mov	r4, r0
 80012f4:	f7ff fff2 	bl	80012dc <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80012f8:	4620      	mov	r0, r4
 80012fa:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 80012fe:	f028 fc86 	bl	8029c0e <_ZdlPvj>
 8001302:	4620      	mov	r0, r4
 8001304:	bd10      	pop	{r4, pc}
	...

08001308 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001308:	b510      	push	{r4, lr}
 800130a:	4b03      	ldr	r3, [pc, #12]	; (8001318 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800130c:	6003      	str	r3, [r0, #0]
 800130e:	4604      	mov	r4, r0
 8001310:	f00e ff8d 	bl	801022e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001314:	4620      	mov	r0, r4
 8001316:	bd10      	pop	{r4, pc}
 8001318:	0802c08c 	.word	0x0802c08c

0800131c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800131c:	b510      	push	{r4, lr}
 800131e:	4604      	mov	r4, r0
 8001320:	f7ff fff2 	bl	8001308 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001324:	4620      	mov	r0, r4
 8001326:	2118      	movs	r1, #24
 8001328:	f028 fc71 	bl	8029c0e <_ZdlPvj>
 800132c:	4620      	mov	r0, r4
 800132e:	bd10      	pop	{r4, pc}

08001330 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001330:	b510      	push	{r4, lr}
 8001332:	4b09      	ldr	r3, [pc, #36]	; (8001358 <_ZN12FrontendHeapD1Ev+0x28>)
 8001334:	6003      	str	r3, [r0, #0]
 8001336:	4604      	mov	r4, r0
 8001338:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 800133c:	300c      	adds	r0, #12
 800133e:	f7ff ffb9 	bl	80012b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001342:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001346:	f7ff ffc9 	bl	80012dc <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800134a:	f104 0014 	add.w	r0, r4, #20
 800134e:	f7ff ffdb 	bl	8001308 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001352:	4620      	mov	r0, r4
 8001354:	bd10      	pop	{r4, pc}
 8001356:	bf00      	nop
 8001358:	0802c128 	.word	0x0802c128

0800135c <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800135c:	b508      	push	{r3, lr}
 800135e:	4802      	ldr	r0, [pc, #8]	; (8001368 <__tcf_0+0xc>)
 8001360:	f7ff ffe6 	bl	8001330 <_ZN12FrontendHeapD1Ev>
 8001364:	bd08      	pop	{r3, pc}
 8001366:	bf00      	nop
 8001368:	200001b0 	.word	0x200001b0

0800136c <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 800136c:	b510      	push	{r4, lr}
 800136e:	4604      	mov	r4, r0
 8001370:	f7ff ffde 	bl	8001330 <_ZN12FrontendHeapD1Ev>
 8001374:	4620      	mov	r0, r4
 8001376:	f241 51d0 	movw	r1, #5584	; 0x15d0
 800137a:	f028 fc48 	bl	8029c0e <_ZdlPvj>
 800137e:	4620      	mov	r0, r4
 8001380:	bd10      	pop	{r4, pc}
	...

08001384 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8001384:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001388:	f001 fcca 	bl	8002d20 <_ZN14BitmapDatabase11getInstanceEv>
 800138c:	4605      	mov	r5, r0
 800138e:	f001 fccb 	bl	8002d28 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001392:	2400      	movs	r4, #0
 8001394:	4601      	mov	r1, r0
 8001396:	4623      	mov	r3, r4
 8001398:	4628      	mov	r0, r5
 800139a:	4622      	mov	r2, r4
 800139c:	9400      	str	r4, [sp, #0]
 800139e:	f017 ffbd 	bl	801931c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80013a2:	4b26      	ldr	r3, [pc, #152]	; (800143c <touchgfx_init+0xb8>)
 80013a4:	4a26      	ldr	r2, [pc, #152]	; (8001440 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 80013a6:	4d27      	ldr	r5, [pc, #156]	; (8001444 <touchgfx_init+0xc0>)
 80013a8:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80013aa:	4620      	mov	r0, r4
 80013ac:	f007 fd76 	bl	8008e9c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80013b0:	4825      	ldr	r0, [pc, #148]	; (8001448 <touchgfx_init+0xc4>)
 80013b2:	f017 ff1b 	bl	80191ec <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 80013b6:	682b      	ldr	r3, [r5, #0]
 80013b8:	f3bf 8f5b 	dmb	ish
 80013bc:	07db      	lsls	r3, r3, #31
 80013be:	d437      	bmi.n	8001430 <touchgfx_init+0xac>
 80013c0:	4628      	mov	r0, r5
 80013c2:	f028 fc26 	bl	8029c12 <__cxa_guard_acquire>
 80013c6:	b398      	cbz	r0, 8001430 <touchgfx_init+0xac>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 80013c8:	4c20      	ldr	r4, [pc, #128]	; (800144c <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80013ca:	4b21      	ldr	r3, [pc, #132]	; (8001450 <touchgfx_init+0xcc>)
 80013cc:	6023      	str	r3, [r4, #0]
 80013ce:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 80013d2:	f104 082c 	add.w	r8, r4, #44	; 0x2c
          transitionStorage(tra),
          frontendApplication(app)
 80013d6:	f500 56a3 	add.w	r6, r0, #5216	; 0x1460
          transitionStorage(tra),
 80013da:	f508 57a0 	add.w	r7, r8, #5120	; 0x1400
        : presenterStorage(pres),
 80013de:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80013e0:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80013e4:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80013e6:	6126      	str	r6, [r4, #16]
 80013e8:	f00e ff22 	bl	8010230 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80013ec:	4b19      	ldr	r3, [pc, #100]	; (8001454 <touchgfx_init+0xd0>)
 80013ee:	6163      	str	r3, [r4, #20]
 80013f0:	4640      	mov	r0, r8
 80013f2:	f00e ff1d 	bl	8010230 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80013f6:	4b18      	ldr	r3, [pc, #96]	; (8001458 <touchgfx_init+0xd4>)
 80013f8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80013fa:	4638      	mov	r0, r7
 80013fc:	f00e ff18 	bl	8010230 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001400:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8001404:	4a15      	ldr	r2, [pc, #84]	; (800145c <touchgfx_init+0xd8>)
 8001406:	f8c3 242c 	str.w	r2, [r3, #1068]	; 0x42c
 800140a:	f203 406c 	addw	r0, r3, #1132	; 0x46c
 800140e:	f008 fa31 	bl	8009874 <_ZN5ModelC1Ev>
 8001412:	4622      	mov	r2, r4
 8001414:	f1a6 0108 	sub.w	r1, r6, #8
 8001418:	4630      	mov	r0, r6
 800141a:	f007 ff2f 	bl	800927c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800141e:	4630      	mov	r0, r6
 8001420:	f003 f95c 	bl	80046dc <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 8001424:	480e      	ldr	r0, [pc, #56]	; (8001460 <touchgfx_init+0xdc>)
 8001426:	f029 faf7 	bl	802aa18 <atexit>
 800142a:	4628      	mov	r0, r5
 800142c:	f028 fbfd 	bl	8029c2a <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001430:	480c      	ldr	r0, [pc, #48]	; (8001464 <touchgfx_init+0xe0>)
}
 8001432:	b002      	add	sp, #8
 8001434:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001438:	f7ff bdb4 	b.w	8000fa4 <_ZN11TouchGFXHAL10initializeEv>
 800143c:	20012e18 	.word	0x20012e18
 8001440:	20001844 	.word	0x20001844
 8001444:	200001ac 	.word	0x200001ac
 8001448:	20000008 	.word	0x20000008
 800144c:	200001b0 	.word	0x200001b0
 8001450:	0802c128 	.word	0x0802c128
 8001454:	0802c08c 	.word	0x0802c08c
 8001458:	0802c0c0 	.word	0x0802c0c0
 800145c:	0802c0f4 	.word	0x0802c0f4
 8001460:	0800135d 	.word	0x0800135d
 8001464:	200017c8 	.word	0x200017c8

08001468 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001468:	4770      	bx	lr
	...

0800146c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 800146c:	4801      	ldr	r0, [pc, #4]	; (8001474 <touchgfx_taskEntry+0x8>)
 800146e:	f7ff bda7 	b.w	8000fc0 <_ZN11TouchGFXHAL9taskEntryEv>
 8001472:	bf00      	nop
 8001474:	200017c8 	.word	0x200017c8

08001478 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001478:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800147a:	4e22      	ldr	r6, [pc, #136]	; (8001504 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 800147c:	4c22      	ldr	r4, [pc, #136]	; (8001508 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 800147e:	4d23      	ldr	r5, [pc, #140]	; (800150c <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8001480:	4b23      	ldr	r3, [pc, #140]	; (8001510 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8001482:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001484:	4630      	mov	r0, r6
 8001486:	f7ff fed3 	bl	8001230 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800148a:	4628      	mov	r0, r5
 800148c:	f01c fa12 	bl	801d8b4 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8001490:	4b20      	ldr	r3, [pc, #128]	; (8001514 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001492:	4821      	ldr	r0, [pc, #132]	; (8001518 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8001494:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001496:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001498:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 800149c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 80014a0:	491e      	ldr	r1, [pc, #120]	; (800151c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 80014a2:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 80014a4:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 80014a8:	491d      	ldr	r1, [pc, #116]	; (8001520 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80014aa:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 80014ac:	491d      	ldr	r1, [pc, #116]	; (8001524 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 80014ae:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 80014b2:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80014b4:	21f0      	movs	r1, #240	; 0xf0
 80014b6:	8001      	strh	r1, [r0, #0]
 80014b8:	481b      	ldr	r0, [pc, #108]	; (8001528 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 80014ba:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80014bc:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80014be:	481b      	ldr	r0, [pc, #108]	; (800152c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80014c0:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80014c4:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 80014c8:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80014cc:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80014d0:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80014d4:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 80014d8:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 80014dc:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80014e0:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80014e4:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80014e8:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80014ea:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80014ee:	8001      	strh	r1, [r0, #0]
 80014f0:	480f      	ldr	r0, [pc, #60]	; (8001530 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80014f2:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80014f4:	490f      	ldr	r1, [pc, #60]	; (8001534 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80014f6:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80014f8:	2201      	movs	r2, #1
 80014fa:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80014fe:	4a0e      	ldr	r2, [pc, #56]	; (8001538 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001500:	601a      	str	r2, [r3, #0]
}
 8001502:	bd70      	pop	{r4, r5, r6, pc}
 8001504:	20001784 	.word	0x20001784
 8001508:	20001780 	.word	0x20001780
 800150c:	20001848 	.word	0x20001848
 8001510:	0802bb60 	.word	0x0802bb60
 8001514:	200017c8 	.word	0x200017c8
 8001518:	20012da8 	.word	0x20012da8
 800151c:	01000001 	.word	0x01000001
 8001520:	01010000 	.word	0x01010000
 8001524:	20012db4 	.word	0x20012db4
 8001528:	20012dae 	.word	0x20012dae
 800152c:	20012daa 	.word	0x20012daa
 8001530:	20012db0 	.word	0x20012db0
 8001534:	20012dac 	.word	0x20012dac
 8001538:	0802bcec 	.word	0x0802bcec

0800153c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 800153c:	2000      	movs	r0, #0
 800153e:	4770      	bx	lr

08001540 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001540:	8081      	strh	r1, [r0, #4]
    }
 8001542:	4770      	bx	lr

08001544 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001544:	80c1      	strh	r1, [r0, #6]
    }
 8001546:	4770      	bx	lr

08001548 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001548:	8101      	strh	r1, [r0, #8]
    }
 800154a:	4770      	bx	lr

0800154c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 800154c:	8141      	strh	r1, [r0, #10]
    }
 800154e:	4770      	bx	lr

08001550 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001550:	4770      	bx	lr

08001552 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001552:	4770      	bx	lr

08001554 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001554:	4770      	bx	lr

08001556 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001556:	4770      	bx	lr

08001558 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001558:	4770      	bx	lr

0800155a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800155a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800155c:	88c4      	ldrh	r4, [r0, #6]
 800155e:	6803      	ldr	r3, [r0, #0]
 8001560:	1b12      	subs	r2, r2, r4
 8001562:	8884      	ldrh	r4, [r0, #4]
 8001564:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001566:	1b09      	subs	r1, r1, r4
 8001568:	b212      	sxth	r2, r2
    }
 800156a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800156e:	b209      	sxth	r1, r1
 8001570:	4718      	bx	r3

08001572 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001572:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001576:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001578:	f04f 33ff 	mov.w	r3, #4294967295
 800157c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800157e:	6813      	ldr	r3, [r2, #0]
 8001580:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001582:	6010      	str	r0, [r2, #0]
    }
 8001584:	4770      	bx	lr

08001586 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001586:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800158a:	b11a      	cbz	r2, 8001594 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800158c:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001590:	b102      	cbz	r2, 8001594 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8001592:	6018      	str	r0, [r3, #0]
        }
    }
 8001594:	4770      	bx	lr

08001596 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8001596:	2000      	movs	r0, #0
 8001598:	4770      	bx	lr

0800159a <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800159a:	888b      	ldrh	r3, [r1, #4]
 800159c:	8083      	strh	r3, [r0, #4]
        return true;
    }
 800159e:	2001      	movs	r0, #1
 80015a0:	4770      	bx	lr

080015a2 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 80015a2:	4770      	bx	lr

080015a4 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80015a4:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80015a8:	4770      	bx	lr

080015aa <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80015aa:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80015ae:	4770      	bx	lr

080015b0 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80015b0:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80015b2:	2200      	movs	r2, #0
        return rect.width;
 80015b4:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80015b8:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80015bc:	8002      	strh	r2, [r0, #0]
 80015be:	8042      	strh	r2, [r0, #2]
 80015c0:	8084      	strh	r4, [r0, #4]
 80015c2:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80015c4:	bd10      	pop	{r4, pc}

080015c6 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80015c6:	2200      	movs	r2, #0
 80015c8:	8002      	strh	r2, [r0, #0]
 80015ca:	8042      	strh	r2, [r0, #2]
 80015cc:	8082      	strh	r2, [r0, #4]
 80015ce:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80015d0:	4770      	bx	lr
	...

080015d4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80015d4:	4b02      	ldr	r3, [pc, #8]	; (80015e0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80015d6:	2290      	movs	r2, #144	; 0x90
 80015d8:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80015dc:	4770      	bx	lr
 80015de:	bf00      	nop
 80015e0:	e000e100 	.word	0xe000e100

080015e4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80015e4:	4b02      	ldr	r3, [pc, #8]	; (80015f0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80015e6:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80015ea:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 80015ec:	4770      	bx	lr
 80015ee:	bf00      	nop
 80015f0:	e000e100 	.word	0xe000e100

080015f4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80015f4:	4a09      	ldr	r2, [pc, #36]	; (800161c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80015f6:	490a      	ldr	r1, [pc, #40]	; (8001620 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80015f8:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80015fa:	480a      	ldr	r0, [pc, #40]	; (8001624 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80015fc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001600:	3b01      	subs	r3, #1
 8001602:	b29b      	uxth	r3, r3
 8001604:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001606:	6911      	ldr	r1, [r2, #16]
 8001608:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800160c:	3901      	subs	r1, #1
 800160e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001610:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001612:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001614:	f043 0301 	orr.w	r3, r3, #1
 8001618:	6353      	str	r3, [r2, #52]	; 0x34
}
 800161a:	4770      	bx	lr
 800161c:	40016800 	.word	0x40016800
 8001620:	200018ce 	.word	0x200018ce
 8001624:	200018cc 	.word	0x200018cc

08001628 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001628:	4b01      	ldr	r3, [pc, #4]	; (8001630 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800162a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800162e:	4770      	bx	lr
 8001630:	40016800 	.word	0x40016800

08001634 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001634:	4b02      	ldr	r3, [pc, #8]	; (8001640 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001636:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001638:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800163c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800163e:	4770      	bx	lr
 8001640:	40016800 	.word	0x40016800

08001644 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001644:	b570      	push	{r4, r5, r6, lr}
 8001646:	4604      	mov	r4, r0
    HAL::initialize();
 8001648:	f00f fabd 	bl	8010bc6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800164c:	6823      	ldr	r3, [r4, #0]
 800164e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001650:	f014 fa66 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
 8001654:	4601      	mov	r1, r0
 8001656:	4620      	mov	r0, r4
 8001658:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800165a:	6823      	ldr	r3, [r4, #0]
 800165c:	4a05      	ldr	r2, [pc, #20]	; (8001674 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800165e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8001662:	4620      	mov	r0, r4
 8001664:	46ac      	mov	ip, r5
 8001666:	2300      	movs	r3, #0
}
 8001668:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800166c:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001670:	4760      	bx	ip
 8001672:	bf00      	nop
 8001674:	d004b000 	.word	0xd004b000

08001678 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001678:	f00f ba8c 	b.w	8010b94 <_ZN8touchgfx3HAL10beginFrameEv>

0800167c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 800167c:	f00f ba96 	b.w	8010bac <_ZN8touchgfx3HAL8endFrameEv>

08001680 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001680:	f00f ba52 	b.w	8010b28 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001684 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001684:	f00f bbb3 	b.w	8010dee <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001688 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001688:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800168c:	b112      	cbz	r2, 8001694 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800168e:	6803      	ldr	r3, [r0, #0]
 8001690:	695b      	ldr	r3, [r3, #20]
 8001692:	4718      	bx	r3
    }
 8001694:	4770      	bx	lr
	...

08001698 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001698:	4b04      	ldr	r3, [pc, #16]	; (80016ac <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 800169a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800169e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80016a2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80016a6:	f3bf 8f6f 	isb	sy
}
 80016aa:	4770      	bx	lr
 80016ac:	e000e100 	.word	0xe000e100

080016b0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80016b0:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80016b2:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80016b4:	4e12      	ldr	r6, [pc, #72]	; (8001700 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80016b6:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80016b8:	4b12      	ldr	r3, [pc, #72]	; (8001704 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80016ba:	6003      	str	r3, [r0, #0]
 80016bc:	6833      	ldr	r3, [r6, #0]
 80016be:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 80016c2:	4605      	mov	r5, r0
 80016c4:	b10a      	cbz	r2, 80016ca <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80016c6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80016c8:	b900      	cbnz	r0, 80016cc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80016ca:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80016cc:	6803      	ldr	r3, [r0, #0]
 80016ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80016d0:	4798      	blx	r3
        return auxiliaryLCD;
 80016d2:	6833      	ldr	r3, [r6, #0]
 80016d4:	fab0 f480 	clz	r4, r0
 80016d8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80016da:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80016dc:	b130      	cbz	r0, 80016ec <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80016de:	6803      	ldr	r3, [r0, #0]
 80016e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80016e2:	4798      	blx	r3
 80016e4:	2800      	cmp	r0, #0
 80016e6:	bf08      	it	eq
 80016e8:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80016ec:	b92c      	cbnz	r4, 80016fa <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80016ee:	4b06      	ldr	r3, [pc, #24]	; (8001708 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 80016f0:	4a06      	ldr	r2, [pc, #24]	; (800170c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 80016f2:	4807      	ldr	r0, [pc, #28]	; (8001710 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 80016f4:	212c      	movs	r1, #44	; 0x2c
 80016f6:	f029 f971 	bl	802a9dc <__assert_func>
    }
 80016fa:	4628      	mov	r0, r5
 80016fc:	bd70      	pop	{r4, r5, r6, pc}
 80016fe:	bf00      	nop
 8001700:	20012db4 	.word	0x20012db4
 8001704:	0802c238 	.word	0x0802c238
 8001708:	0802c134 	.word	0x0802c134
 800170c:	0802c192 	.word	0x0802c192
 8001710:	0802c1cb 	.word	0x0802c1cb

08001714 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 8001714:	4770      	bx	lr
	...

08001718 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8001718:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 800171c:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 800171e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 8001722:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 8001726:	d105      	bne.n	8001734 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 8001728:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 800172c:	4281      	cmp	r1, r0
 800172e:	d8fb      	bhi.n	8001728 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 8001730:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 8001734:	4f17      	ldr	r7, [pc, #92]	; (8001794 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001736:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800173a:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800173e:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001742:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001746:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8001748:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 800174a:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800174c:	b2db      	uxtb	r3, r3
 800174e:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8001750:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001754:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001758:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800175c:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001760:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8001764:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001768:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800176c:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001770:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001772:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001776:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800177a:	fb03 4e0e 	mla	lr, r3, lr, r4
 800177e:	fbbe fef5 	udiv	lr, lr, r5
 8001782:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001786:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 800178a:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 800178e:	4281      	cmp	r1, r0
 8001790:	d8de      	bhi.n	8001750 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 8001792:	e7cd      	b.n	8001730 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 8001794:	fffff800 	.word	0xfffff800

08001798 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001798:	b510      	push	{r4, lr}
        return instance;
 800179a:	4c14      	ldr	r4, [pc, #80]	; (80017ec <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 800179c:	6823      	ldr	r3, [r4, #0]
 800179e:	b323      	cbz	r3, 80017ea <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 80017a0:	4b13      	ldr	r3, [pc, #76]	; (80017f0 <HAL_LTDC_LineEventCallback+0x58>)
 80017a2:	4a14      	ldr	r2, [pc, #80]	; (80017f4 <HAL_LTDC_LineEventCallback+0x5c>)
 80017a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80017a6:	8811      	ldrh	r1, [r2, #0]
 80017a8:	428b      	cmp	r3, r1
 80017aa:	d113      	bne.n	80017d4 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80017ac:	4b12      	ldr	r3, [pc, #72]	; (80017f8 <HAL_LTDC_LineEventCallback+0x60>)
 80017ae:	8819      	ldrh	r1, [r3, #0]
 80017b0:	f00a fbd4 	bl	800bf5c <HAL_LTDC_ProgramLineEvent>
 80017b4:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80017b6:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 80017ba:	3301      	adds	r3, #1
 80017bc:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80017c0:	f7ff fcea 	bl	8001198 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80017c4:	6820      	ldr	r0, [r4, #0]
 80017c6:	f00f ff3d 	bl	8011644 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80017ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80017ce:	2000      	movs	r0, #0
 80017d0:	f7ff bb62 	b.w	8000e98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80017d4:	f00a fbc2 	bl	800bf5c <HAL_LTDC_ProgramLineEvent>
        return instance;
 80017d8:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80017da:	6803      	ldr	r3, [r0, #0]
 80017dc:	6a1b      	ldr	r3, [r3, #32]
 80017de:	4798      	blx	r3
    }
 80017e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80017e4:	2000      	movs	r0, #0
 80017e6:	f7ff bb6f 	b.w	8000ec8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80017ea:	bd10      	pop	{r4, pc}
 80017ec:	20012db4 	.word	0x20012db4
 80017f0:	40016800 	.word	0x40016800
 80017f4:	200018ce 	.word	0x200018ce
 80017f8:	200018cc 	.word	0x200018cc

080017fc <calculate_freq_and_signalstrength>:
 *are calculated.
 * @param samples Pointer to the array of input samples.
 * @return FFT structure containing the calculated main frequency and signal
 *strength.
 **/
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples) {
 80017fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001800:	ed2d 8b02 	vpush	{d8}
 8001804:	b08d      	sub	sp, #52	; 0x34
 8001806:	af00      	add	r7, sp, #0
 8001808:	460d      	mov	r5, r1
 800180a:	60f8      	str	r0, [r7, #12]
 800180c:	4690      	mov	r8, r2
    // Perform FFT using CMSIS-DSP library
    uint8_t buffer_size = MEAS_get_num_of_samples();
 800180e:	f000 ff09 	bl	8002624 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 8001812:	b203      	sxth	r3, r0
 8001814:	60bb      	str	r3, [r7, #8]
 8001816:	009b      	lsls	r3, r3, #2
 8001818:	607b      	str	r3, [r7, #4]
 800181a:	3307      	adds	r3, #7
 800181c:	f023 0307 	bic.w	r3, r3, #7
 8001820:	ebad 0d03 	sub.w	sp, sp, r3
    uint8_t buffer_size = MEAS_get_num_of_samples();
 8001824:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 8001826:	46eb      	mov	fp, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 8001828:	b1f0      	cbz	r0, 8001868 <calculate_freq_and_signalstrength+0x6c>
 800182a:	3d01      	subs	r5, #1
 800182c:	46d9      	mov	r9, fp
        input_samples[i] =
            (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800182e:	46da      	mov	sl, fp
    for (uint32_t i = 0; i < fft_size; i++) {
 8001830:	2600      	movs	r6, #0
            (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 8001832:	f000 fef5 	bl	8002620 <MEAS_get_num_of_chan>
 8001836:	fb06 5000 	mla	r0, r6, r0, r5
 800183a:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 800183e:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 8001842:	3601      	adds	r6, #1
            (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 8001844:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 8001848:	42b4      	cmp	r4, r6
            (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800184a:	ecea 7a01 	vstmia	sl!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 800184e:	d1f0      	bne.n	8001832 <calculate_freq_and_signalstrength+0x36>
 8001850:	687e      	ldr	r6, [r7, #4]
    }
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 8001852:	ed9f 7a47 	vldr	s14, [pc, #284]	; 8001970 <calculate_freq_and_signalstrength+0x174>
 8001856:	445e      	add	r6, fp
 8001858:	edd9 7a00 	vldr	s15, [r9]
 800185c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001860:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 8001864:	454e      	cmp	r6, r9
 8001866:	d1f7      	bne.n	8001858 <calculate_freq_and_signalstrength+0x5c>
    }
    // Create an array for the FFT output
    float32_t fft_complex_output[2 * buffer_size];
 8001868:	68bb      	ldr	r3, [r7, #8]
 800186a:	466a      	mov	r2, sp
 800186c:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
    // Create an instance of the FFT structure
    FFT fft;
    // Calculate the main frequency
    float main_frequency =
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001870:	ee07 4a90 	vmov	s15, r4
    float32_t fft_complex_output[2 * buffer_size];
 8001874:	469d      	mov	sp, r3
 8001876:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8001878:	b2a1      	uxth	r1, r4
 800187a:	f107 0018 	add.w	r0, r7, #24
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800187e:	eef8 8a67 	vcvt.f32.u32	s17, s15
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8001882:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8001884:	f027 f902 	bl	8028a8c <arm_rfft_fast_init_f32>
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8001888:	2300      	movs	r3, #0
 800188a:	4659      	mov	r1, fp
 800188c:	f107 0018 	add.w	r0, r7, #24
 8001890:	462a      	mov	r2, r5
 8001892:	f027 f97f 	bl	8028b94 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8001896:	4622      	mov	r2, r4
 8001898:	4629      	mov	r1, r5
 800189a:	4628      	mov	r0, r5
 800189c:	f027 fde8 	bl	8029470 <arm_cmplx_mag_f32>
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 80018a0:	f107 0310 	add.w	r3, r7, #16
 80018a4:	f107 0214 	add.w	r2, r7, #20
 80018a8:	4621      	mov	r1, r4
 80018aa:	4628      	mov	r0, r5
 80018ac:	f027 f886 	bl	80289bc <arm_max_f32>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 80018b0:	edd7 7a04 	vldr	s15, [r7, #16]
 80018b4:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 80018b8:	f000 feb6 	bl	8002628 <MEAS_get_samp_freq>
 80018bc:	ee07 0a90 	vmov	s15, r0
 80018c0:	eef8 7a67 	vcvt.f32.u32	s15, s15
    uint8_t given_frequency = 0;
    // Check if the main frequency is in the range of 45-55 Hz
    if (main_frequency <= 55 && main_frequency >= 45) {
 80018c4:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 8001974 <calculate_freq_and_signalstrength+0x178>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 80018c8:	ee67 7a88 	vmul.f32	s15, s15, s16
    float main_frequency =
 80018cc:	ee87 8aa8 	vdiv.f32	s16, s15, s17
    if (main_frequency <= 55 && main_frequency >= 45) {
 80018d0:	eeb4 8ac7 	vcmpe.f32	s16, s14
 80018d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80018d8:	d81b      	bhi.n	8001912 <calculate_freq_and_signalstrength+0x116>
 80018da:	eddf 7a27 	vldr	s15, [pc, #156]	; 8001978 <calculate_freq_and_signalstrength+0x17c>
 80018de:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80018e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80018e6:	db2d      	blt.n	8001944 <calculate_freq_and_signalstrength+0x148>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
        // If yes, round the given frequency to 60 Hz
        given_frequency = 60;
    } else given_frequency = 0;
    // calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80018e8:	68bb      	ldr	r3, [r7, #8]
 80018ea:	eb03 0983 	add.w	r9, r3, r3, lsl #2
 80018ee:	f000 fe9b 	bl	8002628 <MEAS_get_samp_freq>
 80018f2:	eb09 0989 	add.w	r9, r9, r9, lsl #2
 80018f6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80018fa:	fbb9 f0f0 	udiv	r0, r9, r0
    // set the signal strength to 0
    float signal_strength = 0; 
    // check if the given frequency is 50 or 60 Hz
    if (given_frequency != 0) {
        // calculate the signal strength
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 80018fe:	eb05 0080 	add.w	r0, r5, r0, lsl #2
 8001902:	edd0 7a00 	vldr	s15, [r0]
 8001906:	ee77 7aa7 	vadd.f32	s15, s15, s15
        fft.error = CALC_ERROR_NONE;
 800190a:	2301      	movs	r3, #1
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 800190c:	ee87 7aa8 	vdiv.f32	s14, s15, s17
        fft.error = CALC_ERROR_NONE;
 8001910:	e00b      	b.n	800192a <calculate_freq_and_signalstrength+0x12e>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8001912:	eddf 7a1a 	vldr	s15, [pc, #104]	; 800197c <calculate_freq_and_signalstrength+0x180>
 8001916:	eeb4 8ae7 	vcmpe.f32	s16, s15
 800191a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800191e:	d91d      	bls.n	800195c <calculate_freq_and_signalstrength+0x160>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8001920:	f000 fe82 	bl	8002628 <MEAS_get_samp_freq>
    float signal_strength = 0; 
 8001924:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8001980 <calculate_freq_and_signalstrength+0x184>
    } else fft.error = CALC_ERROR_FREQUENCY;  // if the given frequency is not 50 or 60 Hz
 8001928:	2300      	movs	r3, #0
    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 800192a:	68fa      	ldr	r2, [r7, #12]
}
 800192c:	3734      	adds	r7, #52	; 0x34
 800192e:	4610      	mov	r0, r2
    return fft;
 8001930:	ed82 8a00 	vstr	s16, [r2]
 8001934:	ed82 7a01 	vstr	s14, [r2, #4]
 8001938:	7213      	strb	r3, [r2, #8]
}
 800193a:	46bd      	mov	sp, r7
 800193c:	ecbd 8b02 	vpop	{d8}
 8001940:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8001944:	eddf 7a0d 	vldr	s15, [pc, #52]	; 800197c <calculate_freq_and_signalstrength+0x180>
 8001948:	eeb4 8ae7 	vcmpe.f32	s16, s15
 800194c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001950:	d8e6      	bhi.n	8001920 <calculate_freq_and_signalstrength+0x124>
 8001952:	eeb4 8a47 	vcmp.f32	s16, s14
 8001956:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800195a:	d1e1      	bne.n	8001920 <calculate_freq_and_signalstrength+0x124>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800195c:	68bb      	ldr	r3, [r7, #8]
 800195e:	ebc3 1903 	rsb	r9, r3, r3, lsl #4
 8001962:	f000 fe61 	bl	8002628 <MEAS_get_samp_freq>
 8001966:	ea4f 0989 	mov.w	r9, r9, lsl #2
 800196a:	fbb9 f0f0 	udiv	r0, r9, r0
    if (given_frequency != 0) {
 800196e:	e7c6      	b.n	80018fe <calculate_freq_and_signalstrength+0x102>
 8001970:	44fff000 	.word	0x44fff000
 8001974:	425c0000 	.word	0x425c0000
 8001978:	42340000 	.word	0x42340000
 800197c:	42820000 	.word	0x42820000
 8001980:	00000000 	.word	0x00000000

08001984 <calculate_coefficients_single_pad>:

    /*  a=((−(x_0*(y_1-y_2)-x_1*(y_0-y_2)+x_2*(y_0-y_1)))/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
        -> Result from Nspire
    */

    a = ((-(s[0] * (d[1] - d[2]) - s[1] * (d[0] - d[2]) + s[2] * (d[0] - d[1])))) /
 8001984:	edd1 4a01 	vldr	s9, [r1, #4]
 8001988:	ed91 5a02 	vldr	s10, [r1, #8]
 800198c:	edd1 3a00 	vldr	s7, [r1]
 8001990:	ed90 3a01 	vldr	s6, [r0, #4]
 8001994:	ed90 6a02 	vldr	s12, [r0, #8]
 8001998:	edd0 5a00 	vldr	s11, [r0]
 800199c:	4927      	ldr	r1, [pc, #156]	; (8001a3c <calculate_coefficients_single_pad+0xb8>)

    /*  b=((x_0^(2)*(y_1-y_2)-x_1^(2)*(y_0-y_2)+x_2^(2)*(y_0-y_1))/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))  
        -> Result from Nspire
    */

    b = ((POW2(s[0]) * (d[1] - d[2])) - (POW2(s[1]) * (d[0] - d[2])) + (POW2(s[2]) * (d[0] - d[1]))) /
 800199e:	4a28      	ldr	r2, [pc, #160]	; (8001a40 <calculate_coefficients_single_pad+0xbc>)

    /*  c=((x_0^(2)*(x_1*y_2-x_2*y_1)-x_0*(x_1^(2)*y_2-x_2^(2)*y_1)+x_1*(x_1-x_2)*x_2*y_0)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
        -> Result from Nspire
    */   

    c = ((POW2(s[0]) * (s[1] * d[2] - s[2] * d[1])) - (s[0] * (POW2(s[1]) * d[2] - POW2(s[2]) * d[1])) + (s[1] * (s[1] - s[2]) * s[2] * d[0])) /
 80019a0:	4b28      	ldr	r3, [pc, #160]	; (8001a44 <calculate_coefficients_single_pad+0xc0>)
                    ((POW2(s[0]) - s[0]*(s[1]+s[2]) + s[1]*s[2])*(s[1]-s[2]));
 80019a2:	ee75 6a24 	vadd.f32	s13, s10, s9
 80019a6:	ee65 7a24 	vmul.f32	s15, s10, s9
 80019aa:	ee73 6ae6 	vsub.f32	s13, s7, s13
 80019ae:	eeb0 7a67 	vmov.f32	s14, s15
 80019b2:	eea3 7aa6 	vfma.f32	s14, s7, s13
 80019b6:	ee74 1ac5 	vsub.f32	s3, s9, s10
 80019ba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80019be:	ee27 7a21 	vmul.f32	s14, s14, s3
    c = ((POW2(s[0]) * (s[1] * d[2] - s[2] * d[1])) - (s[0] * (POW2(s[1]) * d[2] - POW2(s[2]) * d[1])) + (s[1] * (s[1] - s[2]) * s[2] * d[0])) /
 80019c2:	ee23 2a45 	vnmul.f32	s4, s6, s10
 80019c6:	eec6 2a87 	vdiv.f32	s5, s13, s14
 80019ca:	eea4 2a86 	vfma.f32	s4, s9, s12
    b = ((POW2(s[0]) * (d[1] - d[2])) - (POW2(s[1]) * (d[0] - d[2])) + (POW2(s[2]) * (d[0] - d[1]))) /
 80019ce:	ee24 4aa4 	vmul.f32	s8, s9, s9
    a = ((-(s[0] * (d[1] - d[2]) - s[1] * (d[0] - d[2]) + s[2] * (d[0] - d[1])))) /
 80019d2:	ee75 6ac6 	vsub.f32	s13, s11, s12
    b = ((POW2(s[0]) * (d[1] - d[2])) - (POW2(s[1]) * (d[0] - d[2])) + (POW2(s[2]) * (d[0] - d[1]))) /
 80019d6:	ee36 7a65 	vsub.f32	s14, s12, s11
    c = ((POW2(s[0]) * (s[1] * d[2] - s[2] * d[1])) - (s[0] * (POW2(s[1]) * d[2] - POW2(s[2]) * d[1])) + (s[1] * (s[1] - s[2]) * s[2] * d[0])) /
 80019da:	ee67 7aa1 	vmul.f32	s15, s15, s3
    b = ((POW2(s[0]) * (d[1] - d[2])) - (POW2(s[1]) * (d[0] - d[2])) + (POW2(s[2]) * (d[0] - d[1]))) /
 80019de:	ee23 1aa3 	vmul.f32	s2, s7, s7
 80019e2:	ee65 1a05 	vmul.f32	s3, s10, s10
    a = ((-(s[0] * (d[1] - d[2]) - s[1] * (d[0] - d[2]) + s[2] * (d[0] - d[1])))) /
 80019e6:	ee73 0a65 	vsub.f32	s1, s6, s11
 80019ea:	ee66 6aa4 	vmul.f32	s13, s13, s9
    b = ((POW2(s[0]) * (d[1] - d[2])) - (POW2(s[1]) * (d[0] - d[2])) + (POW2(s[2]) * (d[0] - d[1]))) /
 80019ee:	ee27 7a04 	vmul.f32	s14, s14, s8
 80019f2:	ee73 4a46 	vsub.f32	s9, s6, s12
    c = ((POW2(s[0]) * (s[1] * d[2] - s[2] * d[1])) - (s[0] * (POW2(s[1]) * d[2] - POW2(s[2]) * d[1])) + (s[1] * (s[1] - s[2]) * s[2] * d[0])) /
 80019f6:	ee24 4a46 	vnmul.f32	s8, s8, s12
 80019fa:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80019fe:	eee5 6a20 	vfma.f32	s13, s10, s1
    b = ((POW2(s[0]) * (d[1] - d[2])) - (POW2(s[1]) * (d[0] - d[2])) + (POW2(s[2]) * (d[0] - d[1]))) /
 8001a02:	eea1 7a24 	vfma.f32	s14, s2, s9
    c = ((POW2(s[0]) * (s[1] * d[2] - s[2] * d[1])) - (s[0] * (POW2(s[1]) * d[2] - POW2(s[2]) * d[1])) + (s[1] * (s[1] - s[2]) * s[2] * d[0])) /
 8001a06:	eea3 4a21 	vfma.f32	s8, s6, s3
 8001a0a:	eee1 7a02 	vfma.f32	s15, s2, s4
    a = ((-(s[0] * (d[1] - d[2]) - s[1] * (d[0] - d[2]) + s[2] * (d[0] - d[1])))) /
 8001a0e:	ee36 6a43 	vsub.f32	s12, s12, s6
    b = ((POW2(s[0]) * (d[1] - d[2])) - (POW2(s[1]) * (d[0] - d[2])) + (POW2(s[2]) * (d[0] - d[1]))) /
 8001a12:	ee75 5ac3 	vsub.f32	s11, s11, s6
    a = ((-(s[0] * (d[1] - d[2]) - s[1] * (d[0] - d[2]) + s[2] * (d[0] - d[1])))) /
 8001a16:	eee3 6a86 	vfma.f32	s13, s7, s12
    b = ((POW2(s[0]) * (d[1] - d[2])) - (POW2(s[1]) * (d[0] - d[2])) + (POW2(s[2]) * (d[0] - d[1]))) /
 8001a1a:	eea1 7aa5 	vfma.f32	s14, s3, s11
    c = ((POW2(s[0]) * (s[1] * d[2] - s[2] * d[1])) - (s[0] * (POW2(s[1]) * d[2] - POW2(s[2]) * d[1])) + (s[1] * (s[1] - s[2]) * s[2] * d[0])) /
 8001a1e:	eee3 7a84 	vfma.f32	s15, s7, s8
    a = ((-(s[0] * (d[1] - d[2]) - s[1] * (d[0] - d[2]) + s[2] * (d[0] - d[1])))) /
 8001a22:	ee66 6aa2 	vmul.f32	s13, s13, s5
    b = ((POW2(s[0]) * (d[1] - d[2])) - (POW2(s[1]) * (d[0] - d[2])) + (POW2(s[2]) * (d[0] - d[1]))) /
 8001a26:	ee27 7a22 	vmul.f32	s14, s14, s5
    c = ((POW2(s[0]) * (s[1] * d[2] - s[2] * d[1])) - (s[0] * (POW2(s[1]) * d[2] - POW2(s[2]) * d[1])) + (s[1] * (s[1] - s[2]) * s[2] * d[0])) /
 8001a2a:	ee67 7aa2 	vmul.f32	s15, s15, s5
    a = ((-(s[0] * (d[1] - d[2]) - s[1] * (d[0] - d[2]) + s[2] * (d[0] - d[1])))) /
 8001a2e:	edc1 6a00 	vstr	s13, [r1]
    b = ((POW2(s[0]) * (d[1] - d[2])) - (POW2(s[1]) * (d[0] - d[2])) + (POW2(s[2]) * (d[0] - d[1]))) /
 8001a32:	ed82 7a00 	vstr	s14, [r2]
    c = ((POW2(s[0]) * (s[1] * d[2] - s[2] * d[1])) - (s[0] * (POW2(s[1]) * d[2] - POW2(s[2]) * d[1])) + (s[1] * (s[1] - s[2]) * s[2] * d[0])) /
 8001a36:	edc3 7a00 	vstr	s15, [r3]
                    ((POW2(s[0]) - s[0]*(s[1]+s[2]) + s[1]*s[2])*(s[1]-s[2]));
}
 8001a3a:	4770      	bx	lr
 8001a3c:	200018d0 	.word	0x200018d0
 8001a40:	200018d4 	.word	0x200018d4
 8001a44:	200018d8 	.word	0x200018d8

08001a48 <calculate_distance_and_angle>:

DISTANCE_ANGLE calculate_distance_and_angle()
{
 8001a48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    float32_t distance[3] = {10, 50, 100};
 8001a4c:	4b4a      	ldr	r3, [pc, #296]	; (8001b78 <calculate_distance_and_angle+0x130>)
    uint32_t* Samples = MEAS_start_measure();
    FFT fft = calculate_freq_and_signalstrength(1, Samples);

    float32_t signal_pad_right = fft.signal_strength;
    // Calculate the distance using the coefficients and the actual signal strength
    float32_t calc_distance = a * POW2(signal_pad_right) + b * signal_pad_right + c;
 8001a4e:	f8df 8138 	ldr.w	r8, [pc, #312]	; 8001b88 <calculate_distance_and_angle+0x140>
 8001a52:	4f4a      	ldr	r7, [pc, #296]	; (8001b7c <calculate_distance_and_angle+0x134>)
 8001a54:	4e4a      	ldr	r6, [pc, #296]	; (8001b80 <calculate_distance_and_angle+0x138>)
{
 8001a56:	ed2d 8b04 	vpush	{d8-d9}
 8001a5a:	4604      	mov	r4, r0
    float32_t distance[3] = {10, 50, 100};
 8001a5c:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
{
 8001a60:	b08c      	sub	sp, #48	; 0x30
    float32_t distance[3] = {10, 50, 100};
 8001a62:	46ee      	mov	lr, sp
 8001a64:	e88e 0007 	stmia.w	lr, {r0, r1, r2}
    float32_t signal_r[3] = {1030, 717, 543};
 8001a68:	f103 020c 	add.w	r2, r3, #12
 8001a6c:	ca07      	ldmia	r2, {r0, r1, r2}
 8001a6e:	f10d 0c0c 	add.w	ip, sp, #12
    float32_t signal_l[3] = {920, 655, 553};
 8001a72:	3318      	adds	r3, #24
    float32_t signal_r[3] = {1030, 717, 543};
 8001a74:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
    float32_t signal_l[3] = {920, 655, 553};
 8001a78:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8001a7c:	ad06      	add	r5, sp, #24
 8001a7e:	e885 0007 	stmia.w	r5, {r0, r1, r2}
    calculate_coefficients_single_pad(distance, signal_r);
 8001a82:	4661      	mov	r1, ip
 8001a84:	4670      	mov	r0, lr
 8001a86:	f7ff ff7d 	bl	8001984 <calculate_coefficients_single_pad>
    calculate_coefficients_single_pad(distance, signal_l);
 8001a8a:	4629      	mov	r1, r5
 8001a8c:	f7ff ff7a 	bl	8001984 <calculate_coefficients_single_pad>
    uint32_t* Samples = MEAS_start_measure();
 8001a90:	f000 fd9a 	bl	80025c8 <MEAS_start_measure>
    FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8001a94:	2101      	movs	r1, #1
 8001a96:	4602      	mov	r2, r0
    uint32_t* Samples = MEAS_start_measure();
 8001a98:	4605      	mov	r5, r0
    FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8001a9a:	a809      	add	r0, sp, #36	; 0x24
 8001a9c:	f7ff feae 	bl	80017fc <calculate_freq_and_signalstrength>
 8001aa0:	ed9d 7a0a 	vldr	s14, [sp, #40]	; 0x28
    float32_t calc_distance = a * POW2(signal_pad_right) + b * signal_pad_right + c;
 8001aa4:	edd8 6a00 	vldr	s13, [r8]
 8001aa8:	edd7 7a00 	vldr	s15, [r7]
 8001aac:	edd6 8a00 	vldr	s17, [r6]

    // Calculate the angle using the distance
    float32_t angle = atanf(calc_distance / D_P) * 180 / PI;
 8001ab0:	eddf 9a34 	vldr	s19, [pc, #208]	; 8001b84 <calculate_distance_and_angle+0x13c>
 8001ab4:	eee6 7a87 	vfma.f32	s15, s13, s14
    float32_t calc_distance = a * POW2(signal_pad_right) + b * signal_pad_right + c;
 8001ab8:	eee7 8a27 	vfma.f32	s17, s14, s15
    float32_t angle = atanf(calc_distance / D_P) * 180 / PI;
 8001abc:	ee18 0a90 	vmov	r0, s17
 8001ac0:	f7fe fed4 	bl	800086c <__aeabi_f2d>
 8001ac4:	a32a      	add	r3, pc, #168	; (adr r3, 8001b70 <calculate_distance_and_angle+0x128>)
 8001ac6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001aca:	f7fe fc41 	bl	8000350 <__aeabi_dmul>
 8001ace:	f7fe ff25 	bl	800091c <__aeabi_d2f>
 8001ad2:	ee00 0a10 	vmov	s0, r0
 8001ad6:	f028 f8e1 	bl	8029c9c <atanf>
    // Set the calculated values
    dist_angle.distance_r = calc_distance;
    dist_angle.angle_r = angle;

    fft = calculate_freq_and_signalstrength(2, Samples);
 8001ada:	462a      	mov	r2, r5
 8001adc:	a809      	add	r0, sp, #36	; 0x24
 8001ade:	2102      	movs	r1, #2
    float32_t angle = atanf(calc_distance / D_P) * 180 / PI;
 8001ae0:	ee20 9a29 	vmul.f32	s18, s0, s19
    fft = calculate_freq_and_signalstrength(2, Samples);
 8001ae4:	f7ff fe8a 	bl	80017fc <calculate_freq_and_signalstrength>
 8001ae8:	ed9d 7a0a 	vldr	s14, [sp, #40]	; 0x28
    signal_pad_right = fft.signal_strength;
    // Calculate the distance using the coefficients and the actual signal strength
    calc_distance = a * POW2(signal_pad_right) + b * signal_pad_right + c;
 8001aec:	edd8 6a00 	vldr	s13, [r8]
 8001af0:	edd7 7a00 	vldr	s15, [r7]
 8001af4:	ed96 8a00 	vldr	s16, [r6]
 8001af8:	eee6 7a87 	vfma.f32	s15, s13, s14
 8001afc:	eea7 8a87 	vfma.f32	s16, s15, s14
    // Calculate the angle using the distance
    angle = atanf(calc_distance / D_P) * 180 / PI;
 8001b00:	ee18 0a10 	vmov	r0, s16
 8001b04:	f7fe feb2 	bl	800086c <__aeabi_f2d>
 8001b08:	a319      	add	r3, pc, #100	; (adr r3, 8001b70 <calculate_distance_and_angle+0x128>)
 8001b0a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001b0e:	f7fe fc1f 	bl	8000350 <__aeabi_dmul>
 8001b12:	f7fe ff03 	bl	800091c <__aeabi_d2f>
 8001b16:	ee00 0a10 	vmov	s0, r0
 8001b1a:	f028 f8bf 	bl	8029c9c <atanf>
 8001b1e:	ee20 0a29 	vmul.f32	s0, s0, s19
    // Set the calculated values
    dist_angle.distance_l = calc_distance;
    dist_angle.angle_l = angle;

    angle = (dist_angle.angle_r + dist_angle.angle_l) / 2;
 8001b22:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8001b26:	ee79 7a00 	vadd.f32	s15, s18, s0

    if (dist_angle.distance_r < dist_angle.distance_l) {
 8001b2a:	eef4 8ac8 	vcmpe.f32	s17, s16
    angle = (dist_angle.angle_r + dist_angle.angle_l) / 2;
 8001b2e:	ee67 7a87 	vmul.f32	s15, s15, s14
        angle = -angle;
	}
    
    // calculate the distance and angle from the center of board to the wire
    dist_angle.distance = (dist_angle.distance_r + dist_angle.distance_l) / 2;
 8001b32:	ee38 7a88 	vadd.f32	s14, s17, s16
 8001b36:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 8001b3a:	ee27 7a26 	vmul.f32	s14, s14, s13
    if (dist_angle.distance_r < dist_angle.distance_l) {
 8001b3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        angle = -angle;
 8001b42:	bf48      	it	mi
 8001b44:	eef1 7a67 	vnegmi.f32	s15, s15
    dist_angle.angle = angle;
    
    // Return the calculated values
    return dist_angle;
}
 8001b48:	4620      	mov	r0, r4
    return dist_angle;
 8001b4a:	edc4 8a00 	vstr	s17, [r4]
 8001b4e:	ed84 9a01 	vstr	s18, [r4, #4]
 8001b52:	ed84 8a02 	vstr	s16, [r4, #8]
 8001b56:	ed84 0a03 	vstr	s0, [r4, #12]
 8001b5a:	ed84 7a04 	vstr	s14, [r4, #16]
 8001b5e:	edc4 7a05 	vstr	s15, [r4, #20]
}
 8001b62:	b00c      	add	sp, #48	; 0x30
 8001b64:	ecbd 8b04 	vpop	{d8-d9}
 8001b68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001b6c:	f3af 8000 	nop.w
 8001b70:	a8ef1b4a 	.word	0xa8ef1b4a
 8001b74:	3fa9fd66 	.word	0x3fa9fd66
 8001b78:	0802baf4 	.word	0x0802baf4
 8001b7c:	200018d4 	.word	0x200018d4
 8001b80:	200018d8 	.word	0x200018d8
 8001b84:	42652ee0 	.word	0x42652ee0
 8001b88:	200018d0 	.word	0x200018d0

08001b8c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001b8c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001b8e:	2064      	movs	r0, #100	; 0x64
 8001b90:	f00b fdc2 	bl	800d718 <osDelay>
  for(;;)
 8001b94:	e7fb      	b.n	8001b8e <StartDefaultTask+0x2>
 8001b96:	bf00      	nop

08001b98 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 8001b98:	b580      	push	{r7, lr}
 8001b9a:	4c10      	ldr	r4, [pc, #64]	; (8001bdc <StartTimeoutTask+0x44>)
 8001b9c:	f8df 8048 	ldr.w	r8, [pc, #72]	; 8001be8 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001ba0:	4f0f      	ldr	r7, [pc, #60]	; (8001be0 <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8001ba2:	4e10      	ldr	r6, [pc, #64]	; (8001be4 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 8001ba4:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001ba6:	2300      	movs	r3, #0
 8001ba8:	461a      	mov	r2, r3
 8001baa:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 8001bac:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001bae:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 8001bb2:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001bb4:	f00b feac 	bl	800d910 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 8001bb8:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 8001bba:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001bbc:	4638      	mov	r0, r7
 8001bbe:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 8001bc0:	b912      	cbnz	r2, 8001bc8 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 8001bc2:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001bc4:	f008 fbae 	bl	800a324 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8001bc8:	4630      	mov	r0, r6
 8001bca:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001bce:	f008 fbad 	bl	800a32c <HAL_GPIO_TogglePin>

	  osDelay(1000);
 8001bd2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001bd6:	f00b fd9f 	bl	800d718 <osDelay>
	  sleep_timeout_value--;
 8001bda:	e7e3      	b.n	8001ba4 <StartTimeoutTask+0xc>
 8001bdc:	20000014 	.word	0x20000014
 8001be0:	40021000 	.word	0x40021000
 8001be4:	40021800 	.word	0x40021800
 8001be8:	200018e4 	.word	0x200018e4

08001bec <updateGUI_test>:
	return sleep_timeout_value;
 8001bec:	4b01      	ldr	r3, [pc, #4]	; (8001bf4 <updateGUI_test+0x8>)
}
 8001bee:	6818      	ldr	r0, [r3, #0]
 8001bf0:	4770      	bx	lr
 8001bf2:	bf00      	nop
 8001bf4:	20000014 	.word	0x20000014

08001bf8 <gyro_disable>:
{
 8001bf8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001bfa:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001bfc:	4e1f      	ldr	r6, [pc, #124]	; (8001c7c <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8001bfe:	4d20      	ldr	r5, [pc, #128]	; (8001c80 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8001c00:	4c20      	ldr	r4, [pc, #128]	; (8001c84 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001c02:	2700      	movs	r7, #0
 8001c04:	9700      	str	r7, [sp, #0]
 8001c06:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001c08:	f043 0304 	orr.w	r3, r3, #4
 8001c0c:	6333      	str	r3, [r6, #48]	; 0x30
 8001c0e:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001c10:	f003 0304 	and.w	r3, r3, #4
 8001c14:	9300      	str	r3, [sp, #0]
 8001c16:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8001c18:	682b      	ldr	r3, [r5, #0]
 8001c1a:	f023 030c 	bic.w	r3, r3, #12
 8001c1e:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 8001c20:	682b      	ldr	r3, [r5, #0]
 8001c22:	f043 0304 	orr.w	r3, r3, #4
 8001c26:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8001c28:	69ab      	ldr	r3, [r5, #24]
 8001c2a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001c2e:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 8001c30:	200a      	movs	r0, #10
 8001c32:	f008 f999 	bl	8009f68 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8001c36:	682b      	ldr	r3, [r5, #0]
 8001c38:	f043 030c 	orr.w	r3, r3, #12
 8001c3c:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001c3e:	9701      	str	r7, [sp, #4]
 8001c40:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001c42:	f043 0320 	orr.w	r3, r3, #32
 8001c46:	6333      	str	r3, [r6, #48]	; 0x30
 8001c48:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001c4a:	f003 0320 	and.w	r3, r3, #32
 8001c4e:	9301      	str	r3, [sp, #4]
 8001c50:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8001c52:	68a3      	ldr	r3, [r4, #8]
 8001c54:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001c58:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8001c5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001c5c:	f023 030f 	bic.w	r3, r3, #15
 8001c60:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 8001c62:	68e3      	ldr	r3, [r4, #12]
 8001c64:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001c68:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8001c6a:	200a      	movs	r0, #10
 8001c6c:	f008 f97c 	bl	8009f68 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8001c70:	6823      	ldr	r3, [r4, #0]
 8001c72:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8001c76:	6023      	str	r3, [r4, #0]
}
 8001c78:	b003      	add	sp, #12
 8001c7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c7c:	40023800 	.word	0x40023800
 8001c80:	40020800 	.word	0x40020800
 8001c84:	40021400 	.word	0x40021400

08001c88 <SystemClock_Config>:
{
 8001c88:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001c8a:	2400      	movs	r4, #0
{
 8001c8c:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001c8e:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 8001c92:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001c96:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8001c9a:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001c9e:	4a1e      	ldr	r2, [pc, #120]	; (8001d18 <SystemClock_Config+0x90>)
 8001ca0:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001ca2:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001ca4:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001ca6:	4b1d      	ldr	r3, [pc, #116]	; (8001d1c <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001ca8:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001cac:	6411      	str	r1, [r2, #64]	; 0x40
 8001cae:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8001cb0:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8001cb4:	9201      	str	r2, [sp, #4]
 8001cb6:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001cb8:	9402      	str	r4, [sp, #8]
 8001cba:	681a      	ldr	r2, [r3, #0]
 8001cbc:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001cc0:	601a      	str	r2, [r3, #0]
 8001cc2:	681b      	ldr	r3, [r3, #0]
 8001cc4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001cc8:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001cca:	2201      	movs	r2, #1
 8001ccc:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001cd0:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001cd4:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001cd6:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001cd8:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001cda:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001cde:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001ce2:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001ce6:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001ce8:	2202      	movs	r2, #2
 8001cea:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001cec:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001cee:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001cf2:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001cf4:	f00a f954 	bl	800bfa0 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001cf8:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001cfa:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001cfe:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001d02:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001d06:	a803      	add	r0, sp, #12
 8001d08:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001d0a:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001d0e:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001d10:	f00a fb5e 	bl	800c3d0 <HAL_RCC_ClockConfig>
}
 8001d14:	b015      	add	sp, #84	; 0x54
 8001d16:	bd30      	pop	{r4, r5, pc}
 8001d18:	40023800 	.word	0x40023800
 8001d1c:	40007000 	.word	0x40007000

08001d20 <main>:
{
 8001d20:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d24:	2400      	movs	r4, #0
{
 8001d26:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 8001d28:	f008 f8f2 	bl	8009f10 <HAL_Init>
  SystemClock_Config();
 8001d2c:	f7ff ffac 	bl	8001c88 <SystemClock_Config>
  gyro_disable();
 8001d30:	f7ff ff62 	bl	8001bf8 <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d34:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
 8001d38:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001d3c:	4bbe      	ldr	r3, [pc, #760]	; (8002038 <main+0x318>)
 8001d3e:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d40:	9411      	str	r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001d42:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001d44:	48bd      	ldr	r0, [pc, #756]	; (800203c <main+0x31c>)
  hi2c3.Instance = I2C3;
 8001d46:	4dbe      	ldr	r5, [pc, #760]	; (8002040 <main+0x320>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001d48:	f041 0110 	orr.w	r1, r1, #16
 8001d4c:	6319      	str	r1, [r3, #48]	; 0x30
 8001d4e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001d50:	f001 0110 	and.w	r1, r1, #16
 8001d54:	9100      	str	r1, [sp, #0]
 8001d56:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d58:	9401      	str	r4, [sp, #4]
 8001d5a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001d5c:	f041 0120 	orr.w	r1, r1, #32
 8001d60:	6319      	str	r1, [r3, #48]	; 0x30
 8001d62:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001d64:	f001 0120 	and.w	r1, r1, #32
 8001d68:	9101      	str	r1, [sp, #4]
 8001d6a:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001d6c:	9402      	str	r4, [sp, #8]
 8001d6e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001d70:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8001d74:	6319      	str	r1, [r3, #48]	; 0x30
 8001d76:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001d78:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8001d7c:	9102      	str	r1, [sp, #8]
 8001d7e:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001d80:	9403      	str	r4, [sp, #12]
 8001d82:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001d84:	f041 0104 	orr.w	r1, r1, #4
 8001d88:	6319      	str	r1, [r3, #48]	; 0x30
 8001d8a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001d8c:	f001 0104 	and.w	r1, r1, #4
 8001d90:	9103      	str	r1, [sp, #12]
 8001d92:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d94:	9404      	str	r4, [sp, #16]
 8001d96:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001d98:	f041 0101 	orr.w	r1, r1, #1
 8001d9c:	6319      	str	r1, [r3, #48]	; 0x30
 8001d9e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001da0:	f001 0101 	and.w	r1, r1, #1
 8001da4:	9104      	str	r1, [sp, #16]
 8001da6:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001da8:	9405      	str	r4, [sp, #20]
 8001daa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001dac:	f041 0102 	orr.w	r1, r1, #2
 8001db0:	6319      	str	r1, [r3, #48]	; 0x30
 8001db2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001db4:	f001 0102 	and.w	r1, r1, #2
 8001db8:	9105      	str	r1, [sp, #20]
 8001dba:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001dbc:	9406      	str	r4, [sp, #24]
 8001dbe:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001dc0:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8001dc4:	6319      	str	r1, [r3, #48]	; 0x30
 8001dc6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001dc8:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8001dcc:	9106      	str	r1, [sp, #24]
 8001dce:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001dd0:	9407      	str	r4, [sp, #28]
 8001dd2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001dd4:	f041 0108 	orr.w	r1, r1, #8
 8001dd8:	6319      	str	r1, [r3, #48]	; 0x30
 8001dda:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ddc:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001de0:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001de2:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001de4:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001de6:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001de8:	f008 fa9c 	bl	800a324 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8001dec:	4893      	ldr	r0, [pc, #588]	; (800203c <main+0x31c>)
 8001dee:	2120      	movs	r1, #32
 8001df0:	2201      	movs	r2, #1
 8001df2:	f008 fa97 	bl	800a324 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8001df6:	4893      	ldr	r0, [pc, #588]	; (8002044 <main+0x324>)
 8001df8:	4622      	mov	r2, r4
 8001dfa:	2114      	movs	r1, #20
 8001dfc:	f008 fa92 	bl	800a324 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEBUG2_GPIO_GPIO_Port, DEBUG2_GPIO_Pin, GPIO_PIN_RESET);
 8001e00:	4891      	ldr	r0, [pc, #580]	; (8002048 <main+0x328>)
 8001e02:	4622      	mov	r2, r4
 8001e04:	2180      	movs	r1, #128	; 0x80
 8001e06:	f008 fa8d 	bl	800a324 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8001e0a:	4890      	ldr	r0, [pc, #576]	; (800204c <main+0x32c>)
 8001e0c:	4622      	mov	r2, r4
 8001e0e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001e12:	f008 fa87 	bl	800a324 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001e16:	488e      	ldr	r0, [pc, #568]	; (8002050 <main+0x330>)
 8001e18:	4622      	mov	r2, r4
 8001e1a:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001e1e:	f008 fa81 	bl	800a324 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e22:	488c      	ldr	r0, [pc, #560]	; (8002054 <main+0x334>)
 8001e24:	4622      	mov	r2, r4
 8001e26:	2104      	movs	r1, #4
 8001e28:	f008 fa7c 	bl	800a324 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8001e2c:	2201      	movs	r2, #1
 8001e2e:	4889      	ldr	r0, [pc, #548]	; (8002054 <main+0x334>)
 8001e30:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001e34:	f008 fa76 	bl	800a324 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e38:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e3a:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8001e3e:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001e40:	487e      	ldr	r0, [pc, #504]	; (800203c <main+0x31c>)
 8001e42:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001e44:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e48:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e4c:	e9cd 490f 	strd	r4, r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001e50:	f008 f924 	bl	800a09c <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001e54:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001e58:	4878      	ldr	r0, [pc, #480]	; (800203c <main+0x31c>)
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001e5a:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001e5c:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001e5e:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e62:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001e64:	f008 f91a 	bl	800a09c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8001e68:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001e6a:	4874      	ldr	r0, [pc, #464]	; (800203c <main+0x31c>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8001e6c:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001e6e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e70:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001e72:	f04f 0b04 	mov.w	fp, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e76:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e7a:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001e7c:	f008 f90e 	bl	800a09c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e80:	4870      	ldr	r0, [pc, #448]	; (8002044 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001e82:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e86:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e88:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e8c:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e8e:	f008 f905 	bl	800a09c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8001e92:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001e94:	486c      	ldr	r0, [pc, #432]	; (8002048 <main+0x328>)
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8001e96:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001e98:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8001e9a:	f04f 0a10 	mov.w	sl, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e9e:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ea2:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001ea4:	f008 f8fa 	bl	800a09c <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001ea8:	4866      	ldr	r0, [pc, #408]	; (8002044 <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001eaa:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001eac:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001eae:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8001eb2:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001eb6:	f008 f8f1 	bl	800a09c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001eba:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ebe:	4863      	ldr	r0, [pc, #396]	; (800204c <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001ec0:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ec2:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ec4:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ec8:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001eca:	f008 f8e7 	bl	800a09c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001ece:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ed2:	485f      	ldr	r0, [pc, #380]	; (8002050 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001ed4:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ed6:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ed8:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001edc:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ede:	f008 f8dd 	bl	800a09c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8001ee2:	f242 0304 	movw	r3, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ee6:	485b      	ldr	r0, [pc, #364]	; (8002054 <main+0x334>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8001ee8:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001eea:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001eec:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ef0:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ef2:	f008 f8d3 	bl	800a09c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001ef6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001efa:	4853      	ldr	r0, [pc, #332]	; (8002048 <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001efc:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001efe:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8001f00:	230f      	movs	r3, #15
 8001f02:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f04:	e9cd 740e 	strd	r7, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f08:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f0a:	f008 f8c7 	bl	800a09c <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8001f0e:	4622      	mov	r2, r4
 8001f10:	2105      	movs	r1, #5
 8001f12:	2009      	movs	r0, #9
 8001f14:	f008 f84c 	bl	8009fb0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8001f18:	2009      	movs	r0, #9
 8001f1a:	f008 f887 	bl	800a02c <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8001f1e:	484e      	ldr	r0, [pc, #312]	; (8002058 <main+0x338>)
 8001f20:	4b4e      	ldr	r3, [pc, #312]	; (800205c <main+0x33c>)
 8001f22:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001f24:	f008 f890 	bl	800a048 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001f28:	494d      	ldr	r1, [pc, #308]	; (8002060 <main+0x340>)
 8001f2a:	4b4e      	ldr	r3, [pc, #312]	; (8002064 <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001f2c:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8001f2e:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001f32:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001f36:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001f38:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8001f3c:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001f40:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001f44:	f008 fc54 	bl	800a7f0 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001f48:	4651      	mov	r1, sl
 8001f4a:	4628      	mov	r0, r5
 8001f4c:	f009 fe1c 	bl	800bb88 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001f50:	4621      	mov	r1, r4
 8001f52:	4628      	mov	r0, r5
 8001f54:	f009 fe38 	bl	800bbc8 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001f58:	f8df c118 	ldr.w	ip, [pc, #280]	; 8002074 <main+0x354>
  hspi5.Instance = SPI5;
 8001f5c:	4842      	ldr	r0, [pc, #264]	; (8002068 <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001f5e:	4d43      	ldr	r5, [pc, #268]	; (800206c <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001f60:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001f62:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001f66:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001f6a:	f44f 7e00 	mov.w	lr, #512	; 0x200
 8001f6e:	2318      	movs	r3, #24
 8001f70:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001f74:	230a      	movs	r3, #10
 8001f76:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001f78:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001f7c:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001f80:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001f84:	f00a fd12 	bl	800c9ac <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001f88:	2307      	movs	r3, #7
 8001f8a:	930e      	str	r3, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 8001f8c:	9310      	str	r3, [sp, #64]	; 0x40
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001f8e:	4b38      	ldr	r3, [pc, #224]	; (8002070 <main+0x350>)
 8001f90:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001f92:	2040      	movs	r0, #64	; 0x40
 8001f94:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8001f98:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001f9c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001fa0:	622b      	str	r3, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001fa2:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001fa4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001fa8:	4628      	mov	r0, r5
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001faa:	62ab      	str	r3, [r5, #40]	; 0x28
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8001fac:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8001fb0:	e9c5 ba03 	strd	fp, sl, [r5, #12]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001fb4:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001fb6:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 8001fb8:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  SdramTiming.RPDelay = 2;
 8001fbc:	e9cd 9711 	strd	r9, r7, [sp, #68]	; 0x44
  SdramTiming.LoadToActiveDelay = 2;
 8001fc0:	970d      	str	r7, [sp, #52]	; 0x34
  SdramTiming.RCDDelay = 2;
 8001fc2:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001fc4:	f00a fc00 	bl	800c7c8 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001fc8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001fcc:	a909      	add	r1, sp, #36	; 0x24
 8001fce:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001fd0:	e9cd 6809 	strd	r6, r8, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001fd4:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
 __IO uint32_t tmpmrd =0;
 8001fd8:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001fda:	f00a fc17 	bl	800c80c <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001fde:	4630      	mov	r0, r6
 8001fe0:	f007 ffc2 	bl	8009f68 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001fe4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001fe8:	a909      	add	r1, sp, #36	; 0x24
 8001fea:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 8001fec:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001ff0:	e9cd 7809 	strd	r7, r8, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001ff4:	f00a fc0a 	bl	800c80c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001ff8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001ffc:	a909      	add	r1, sp, #36	; 0x24
 8001ffe:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 8002000:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8002004:	e9cd 9809 	strd	r9, r8, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002008:	f00a fc00 	bl	800c80c <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 800200c:	f44f 730c 	mov.w	r3, #560	; 0x230
 8002010:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8002012:	9b08      	ldr	r3, [sp, #32]
 8002014:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002016:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800201a:	a909      	add	r1, sp, #36	; 0x24
 800201c:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800201e:	e9cd b809 	strd	fp, r8, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 8002022:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002024:	f00a fbf2 	bl	800c80c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8002028:	4628      	mov	r0, r5
 800202a:	f240 516a 	movw	r1, #1386	; 0x56a
 800202e:	f00a fc0b 	bl	800c848 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8002032:	2234      	movs	r2, #52	; 0x34
 8002034:	e020      	b.n	8002078 <main+0x358>
 8002036:	bf00      	nop
 8002038:	40023800 	.word	0x40023800
 800203c:	40021000 	.word	0x40021000
 8002040:	200018f8 	.word	0x200018f8
 8002044:	40020800 	.word	0x40020800
 8002048:	40020000 	.word	0x40020000
 800204c:	40020400 	.word	0x40020400
 8002050:	40020c00 	.word	0x40020c00
 8002054:	40021800 	.word	0x40021800
 8002058:	200018f0 	.word	0x200018f0
 800205c:	40023000 	.word	0x40023000
 8002060:	40005c00 	.word	0x40005c00
 8002064:	000186a0 	.word	0x000186a0
 8002068:	20001a28 	.word	0x20001a28
 800206c:	200019f4 	.word	0x200019f4
 8002070:	a0000140 	.word	0xa0000140
 8002074:	40015000 	.word	0x40015000
  hltdc.Instance = LTDC;
 8002078:	4d3a      	ldr	r5, [pc, #232]	; (8002164 <main+0x444>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800207a:	4621      	mov	r1, r4
 800207c:	eb0d 0002 	add.w	r0, sp, r2
 8002080:	f028 feb1 	bl	802ade6 <memset>
  hltdc.Instance = LTDC;
 8002084:	4b38      	ldr	r3, [pc, #224]	; (8002168 <main+0x448>)
 8002086:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 8002088:	2309      	movs	r3, #9
 800208a:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 800208c:	231d      	movs	r3, #29
 800208e:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8002090:	f240 1b0d 	movw	fp, #269	; 0x10d
 8002094:	f240 1343 	movw	r3, #323	; 0x143
 8002098:	e9c5 b309 	strd	fp, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 800209c:	f240 1217 	movw	r2, #279	; 0x117
 80020a0:	f240 1347 	movw	r3, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 80020a4:	86ac      	strh	r4, [r5, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80020a6:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 80020a8:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 80020ac:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 80020ae:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80020b2:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.AccumulatedVBP = 3;
 80020b6:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 80020ba:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80020be:	f009 fda7 	bl	800bc10 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 80020c2:	23f0      	movs	r3, #240	; 0xf0
 80020c4:	930e      	str	r3, [sp, #56]	; 0x38
  pLayerCfg.ImageWidth = 240;
 80020c6:	9317      	str	r3, [sp, #92]	; 0x5c
  pLayerCfg.WindowY1 = 320;
 80020c8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80020cc:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageHeight = 320;
 80020ce:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.Alpha = 255;
 80020d0:	23ff      	movs	r3, #255	; 0xff
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80020d2:	a90d      	add	r1, sp, #52	; 0x34
 80020d4:	4622      	mov	r2, r4
 80020d6:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 80020d8:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80020da:	f44f 6680 	mov.w	r6, #1024	; 0x400
 80020de:	2305      	movs	r3, #5
  LcdDrv = &ili9341_drv;
 80020e0:	4d22      	ldr	r5, [pc, #136]	; (800216c <main+0x44c>)
  pLayerCfg.WindowX0 = 0;
 80020e2:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80020e4:	e9cd 6314 	strd	r6, r3, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 80020e8:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80020ea:	9711      	str	r7, [sp, #68]	; 0x44
  pLayerCfg.Alpha0 = 0;
 80020ec:	9413      	str	r4, [sp, #76]	; 0x4c
  pLayerCfg.FBStartAdress = 0;
 80020ee:	9416      	str	r4, [sp, #88]	; 0x58
  pLayerCfg.Backcolor.Blue = 0;
 80020f0:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 80020f4:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80020f8:	f009 fe60 	bl	800bdbc <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 80020fc:	4b1c      	ldr	r3, [pc, #112]	; (8002170 <main+0x450>)
 80020fe:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8002100:	681b      	ldr	r3, [r3, #0]
 8002102:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8002104:	682b      	ldr	r3, [r5, #0]
 8002106:	68db      	ldr	r3, [r3, #12]
 8002108:	4798      	blx	r3
  MX_TouchGFX_Init();
 800210a:	f7fe fe01 	bl	8000d10 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 800210e:	f7fe fdfd 	bl	8000d0c <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8002112:	f7ff fd71 	bl	8001bf8 <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8002116:	f000 f945 	bl	80023a4 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 800211a:	f000 f977 	bl	800240c <MEAS_timer_init>
  osKernelInitialize();
 800211e:	f00b fa83 	bl	800d628 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8002122:	4a14      	ldr	r2, [pc, #80]	; (8002174 <main+0x454>)
 8002124:	4639      	mov	r1, r7
 8002126:	4650      	mov	r0, sl
 8002128:	f00b fbb8 	bl	800d89c <osMessageQueueNew>
 800212c:	4b12      	ldr	r3, [pc, #72]	; (8002178 <main+0x458>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800212e:	4a13      	ldr	r2, [pc, #76]	; (800217c <main+0x45c>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8002130:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8002132:	4621      	mov	r1, r4
 8002134:	4812      	ldr	r0, [pc, #72]	; (8002180 <main+0x460>)
 8002136:	f00b faa3 	bl	800d680 <osThreadNew>
 800213a:	4b12      	ldr	r3, [pc, #72]	; (8002184 <main+0x464>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800213c:	4a12      	ldr	r2, [pc, #72]	; (8002188 <main+0x468>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800213e:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8002140:	4621      	mov	r1, r4
 8002142:	4812      	ldr	r0, [pc, #72]	; (800218c <main+0x46c>)
 8002144:	f00b fa9c 	bl	800d680 <osThreadNew>
 8002148:	4b11      	ldr	r3, [pc, #68]	; (8002190 <main+0x470>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800214a:	4a12      	ldr	r2, [pc, #72]	; (8002194 <main+0x474>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800214c:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800214e:	4621      	mov	r1, r4
 8002150:	4811      	ldr	r0, [pc, #68]	; (8002198 <main+0x478>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8002152:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8002154:	f00b fa94 	bl	800d680 <osThreadNew>
 8002158:	4b10      	ldr	r3, [pc, #64]	; (800219c <main+0x47c>)
 800215a:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800215c:	f00b fa76 	bl	800d64c <osKernelStart>
  while (1)
 8002160:	e7fe      	b.n	8002160 <main+0x440>
 8002162:	bf00      	nop
 8002164:	2000194c 	.word	0x2000194c
 8002168:	40016800 	.word	0x40016800
 800216c:	200018e0 	.word	0x200018e0
 8002170:	20000018 	.word	0x20000018
 8002174:	0802c2a8 	.word	0x0802c2a8
 8002178:	200018e4 	.word	0x200018e4
 800217c:	0802c2e4 	.word	0x0802c2e4
 8002180:	08001b8d 	.word	0x08001b8d
 8002184:	200018ec 	.word	0x200018ec
 8002188:	0802c284 	.word	0x0802c284
 800218c:	08000d21 	.word	0x08000d21
 8002190:	200018dc 	.word	0x200018dc
 8002194:	0802c2c0 	.word	0x0802c2c0
 8002198:	08001b99 	.word	0x08001b99
 800219c:	200018e8 	.word	0x200018e8

080021a0 <IOE_Init>:
 80021a0:	4770      	bx	lr
 80021a2:	bf00      	nop

080021a4 <IOE_ITConfig>:
 80021a4:	4770      	bx	lr
 80021a6:	bf00      	nop

080021a8 <IOE_Write>:
{
 80021a8:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80021aa:	4c09      	ldr	r4, [pc, #36]	; (80021d0 <IOE_Write+0x28>)
{
 80021ac:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80021ae:	6824      	ldr	r4, [r4, #0]
 80021b0:	9402      	str	r4, [sp, #8]
{
 80021b2:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80021b4:	2301      	movs	r3, #1
 80021b6:	f88d 4017 	strb.w	r4, [sp, #23]
 80021ba:	f10d 0417 	add.w	r4, sp, #23
 80021be:	460a      	mov	r2, r1
 80021c0:	9301      	str	r3, [sp, #4]
 80021c2:	4601      	mov	r1, r0
 80021c4:	9400      	str	r4, [sp, #0]
 80021c6:	4803      	ldr	r0, [pc, #12]	; (80021d4 <IOE_Write+0x2c>)
 80021c8:	f008 fbda 	bl	800a980 <HAL_I2C_Mem_Write>
}
 80021cc:	b006      	add	sp, #24
 80021ce:	bd10      	pop	{r4, pc}
 80021d0:	2000000c 	.word	0x2000000c
 80021d4:	200018f8 	.word	0x200018f8

080021d8 <IOE_Read>:
{
 80021d8:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80021da:	4b0b      	ldr	r3, [pc, #44]	; (8002208 <IOE_Read+0x30>)
{
 80021dc:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80021de:	681b      	ldr	r3, [r3, #0]
 80021e0:	9302      	str	r3, [sp, #8]
{
 80021e2:	4684      	mov	ip, r0
 80021e4:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80021e6:	2301      	movs	r3, #1
 80021e8:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 80021ec:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80021ee:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 80021f2:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80021f6:	4661      	mov	r1, ip
 80021f8:	4804      	ldr	r0, [pc, #16]	; (800220c <IOE_Read+0x34>)
 80021fa:	f008 fcb3 	bl	800ab64 <HAL_I2C_Mem_Read>
}
 80021fe:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8002202:	b007      	add	sp, #28
 8002204:	f85d fb04 	ldr.w	pc, [sp], #4
 8002208:	2000000c 	.word	0x2000000c
 800220c:	200018f8 	.word	0x200018f8

08002210 <IOE_ReadMultiple>:
{
 8002210:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8002212:	4c09      	ldr	r4, [pc, #36]	; (8002238 <IOE_ReadMultiple+0x28>)
{
 8002214:	b084      	sub	sp, #16
 8002216:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8002218:	6820      	ldr	r0, [r4, #0]
 800221a:	9002      	str	r0, [sp, #8]
 800221c:	e9cd 2300 	strd	r2, r3, [sp]
 8002220:	4806      	ldr	r0, [pc, #24]	; (800223c <IOE_ReadMultiple+0x2c>)
 8002222:	460a      	mov	r2, r1
 8002224:	2301      	movs	r3, #1
 8002226:	4661      	mov	r1, ip
 8002228:	f008 fc9c 	bl	800ab64 <HAL_I2C_Mem_Read>
}
 800222c:	3800      	subs	r0, #0
 800222e:	bf18      	it	ne
 8002230:	2001      	movne	r0, #1
 8002232:	b004      	add	sp, #16
 8002234:	bd10      	pop	{r4, pc}
 8002236:	bf00      	nop
 8002238:	2000000c 	.word	0x2000000c
 800223c:	200018f8 	.word	0x200018f8

08002240 <IOE_Delay>:
 8002240:	f007 be92 	b.w	8009f68 <HAL_Delay>

08002244 <LCD_IO_Init>:
{
 8002244:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002246:	4806      	ldr	r0, [pc, #24]	; (8002260 <LCD_IO_Init+0x1c>)
 8002248:	2200      	movs	r2, #0
 800224a:	2104      	movs	r1, #4
 800224c:	f008 f86a 	bl	800a324 <HAL_GPIO_WritePin>
}
 8002250:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002254:	4802      	ldr	r0, [pc, #8]	; (8002260 <LCD_IO_Init+0x1c>)
 8002256:	2201      	movs	r2, #1
 8002258:	2104      	movs	r1, #4
 800225a:	f008 b863 	b.w	800a324 <HAL_GPIO_WritePin>
 800225e:	bf00      	nop
 8002260:	40020800 	.word	0x40020800

08002264 <LCD_IO_WriteData>:
{
 8002264:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002266:	4d10      	ldr	r5, [pc, #64]	; (80022a8 <LCD_IO_WriteData+0x44>)
{
 8002268:	b083      	sub	sp, #12
 800226a:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800226c:	2201      	movs	r2, #1
 800226e:	480f      	ldr	r0, [pc, #60]	; (80022ac <LCD_IO_WriteData+0x48>)
 8002270:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002274:	f008 f856 	bl	800a324 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002278:	4628      	mov	r0, r5
 800227a:	2200      	movs	r2, #0
 800227c:	2104      	movs	r1, #4
 800227e:	f008 f851 	bl	800a324 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8002282:	4b0b      	ldr	r3, [pc, #44]	; (80022b0 <LCD_IO_WriteData+0x4c>)
 8002284:	480b      	ldr	r0, [pc, #44]	; (80022b4 <LCD_IO_WriteData+0x50>)
 8002286:	681b      	ldr	r3, [r3, #0]
 8002288:	f8ad 4006 	strh.w	r4, [sp, #6]
 800228c:	f10d 0106 	add.w	r1, sp, #6
 8002290:	2201      	movs	r2, #1
 8002292:	f00a fbed 	bl	800ca70 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002296:	2201      	movs	r2, #1
 8002298:	2104      	movs	r1, #4
 800229a:	4628      	mov	r0, r5
}
 800229c:	b003      	add	sp, #12
 800229e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80022a2:	f008 b83f 	b.w	800a324 <HAL_GPIO_WritePin>
 80022a6:	bf00      	nop
 80022a8:	40020800 	.word	0x40020800
 80022ac:	40020c00 	.word	0x40020c00
 80022b0:	20000010 	.word	0x20000010
 80022b4:	20001a28 	.word	0x20001a28

080022b8 <LCD_IO_WriteReg>:
{
 80022b8:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80022ba:	4d10      	ldr	r5, [pc, #64]	; (80022fc <LCD_IO_WriteReg+0x44>)
{
 80022bc:	b083      	sub	sp, #12
 80022be:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80022c0:	2200      	movs	r2, #0
 80022c2:	480f      	ldr	r0, [pc, #60]	; (8002300 <LCD_IO_WriteReg+0x48>)
 80022c4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80022c8:	f008 f82c 	bl	800a324 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80022cc:	4628      	mov	r0, r5
 80022ce:	2200      	movs	r2, #0
 80022d0:	2104      	movs	r1, #4
 80022d2:	f008 f827 	bl	800a324 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80022d6:	4b0b      	ldr	r3, [pc, #44]	; (8002304 <LCD_IO_WriteReg+0x4c>)
 80022d8:	480b      	ldr	r0, [pc, #44]	; (8002308 <LCD_IO_WriteReg+0x50>)
 80022da:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 80022dc:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80022e0:	f10d 0106 	add.w	r1, sp, #6
 80022e4:	2201      	movs	r2, #1
 80022e6:	f00a fbc3 	bl	800ca70 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80022ea:	2201      	movs	r2, #1
 80022ec:	2104      	movs	r1, #4
 80022ee:	4628      	mov	r0, r5
}
 80022f0:	b003      	add	sp, #12
 80022f2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80022f6:	f008 b815 	b.w	800a324 <HAL_GPIO_WritePin>
 80022fa:	bf00      	nop
 80022fc:	40020800 	.word	0x40020800
 8002300:	40020c00 	.word	0x40020c00
 8002304:	20000010 	.word	0x20000010
 8002308:	20001a28 	.word	0x20001a28

0800230c <LCD_IO_ReadData>:
{
 800230c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002310:	4e19      	ldr	r6, [pc, #100]	; (8002378 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002312:	4f1a      	ldr	r7, [pc, #104]	; (800237c <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8002314:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8002380 <LCD_IO_ReadData+0x74>
 8002318:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8002384 <LCD_IO_ReadData+0x78>
{
 800231c:	b083      	sub	sp, #12
 800231e:	460c      	mov	r4, r1
 8002320:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002322:	2200      	movs	r2, #0
 8002324:	4630      	mov	r0, r6
 8002326:	2104      	movs	r1, #4
 8002328:	f007 fffc 	bl	800a324 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800232c:	4638      	mov	r0, r7
 800232e:	2200      	movs	r2, #0
 8002330:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002334:	f007 fff6 	bl	800a324 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8002338:	f8d9 3000 	ldr.w	r3, [r9]
 800233c:	f8ad 5004 	strh.w	r5, [sp, #4]
 8002340:	a901      	add	r1, sp, #4
 8002342:	2201      	movs	r2, #1
 8002344:	4640      	mov	r0, r8
 8002346:	f00a fb93 	bl	800ca70 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800234a:	f8d9 3000 	ldr.w	r3, [r9]
 800234e:	4622      	mov	r2, r4
 8002350:	a901      	add	r1, sp, #4
 8002352:	4640      	mov	r0, r8
 8002354:	f00a fe34 	bl	800cfc0 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002358:	4638      	mov	r0, r7
 800235a:	2201      	movs	r2, #1
 800235c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8002360:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002362:	f007 ffdf 	bl	800a324 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002366:	4630      	mov	r0, r6
 8002368:	2201      	movs	r2, #1
 800236a:	2104      	movs	r1, #4
 800236c:	f007 ffda 	bl	800a324 <HAL_GPIO_WritePin>
}
 8002370:	4620      	mov	r0, r4
 8002372:	b003      	add	sp, #12
 8002374:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002378:	40020800 	.word	0x40020800
 800237c:	40020c00 	.word	0x40020c00
 8002380:	20000010 	.word	0x20000010
 8002384:	20001a28 	.word	0x20001a28

08002388 <LCD_Delay>:
  HAL_Delay(Delay);
 8002388:	f007 bdee 	b.w	8009f68 <HAL_Delay>

0800238c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 800238c:	4b03      	ldr	r3, [pc, #12]	; (800239c <HAL_TIM_PeriodElapsedCallback+0x10>)
 800238e:	6802      	ldr	r2, [r0, #0]
 8002390:	429a      	cmp	r2, r3
 8002392:	d000      	beq.n	8002396 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8002394:	4770      	bx	lr
    HAL_IncTick();
 8002396:	f007 bdd5 	b.w	8009f44 <HAL_IncTick>
 800239a:	bf00      	nop
 800239c:	40001000 	.word	0x40001000

080023a0 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80023a0:	4770      	bx	lr
 80023a2:	bf00      	nop

080023a4 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 80023a4:	b410      	push	{r4}
 80023a6:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80023a8:	4b15      	ldr	r3, [pc, #84]	; (8002400 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80023aa:	4916      	ldr	r1, [pc, #88]	; (8002404 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80023ac:	2400      	movs	r4, #0
 80023ae:	9400      	str	r4, [sp, #0]
 80023b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023b2:	f042 0220 	orr.w	r2, r2, #32
 80023b6:	631a      	str	r2, [r3, #48]	; 0x30
 80023b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023ba:	f002 0220 	and.w	r2, r2, #32
 80023be:	9200      	str	r2, [sp, #0]
 80023c0:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80023c2:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80023c4:	4a10      	ldr	r2, [pc, #64]	; (8002408 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80023c6:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 80023ca:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 80023cc:	6808      	ldr	r0, [r1, #0]
 80023ce:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 80023d2:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80023d4:	9401      	str	r4, [sp, #4]
 80023d6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80023d8:	f041 0104 	orr.w	r1, r1, #4
 80023dc:	6319      	str	r1, [r3, #48]	; 0x30
 80023de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023e0:	f003 0304 	and.w	r3, r3, #4
 80023e4:	9301      	str	r3, [sp, #4]
 80023e6:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80023e8:	6813      	ldr	r3, [r2, #0]
 80023ea:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80023ee:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 80023f0:	6813      	ldr	r3, [r2, #0]
 80023f2:	f043 030c 	orr.w	r3, r3, #12
 80023f6:	6013      	str	r3, [r2, #0]
}
 80023f8:	b003      	add	sp, #12
 80023fa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80023fe:	4770      	bx	lr
 8002400:	40023800 	.word	0x40023800
 8002404:	40021400 	.word	0x40021400
 8002408:	40020800 	.word	0x40020800

0800240c <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 800240c:	b410      	push	{r4}
 800240e:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8002410:	4a0e      	ldr	r2, [pc, #56]	; (800244c <MEAS_timer_init+0x40>)
 8002412:	2000      	movs	r0, #0
 8002414:	9001      	str	r0, [sp, #4]
 8002416:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8002418:	f041 0101 	orr.w	r1, r1, #1
 800241c:	6411      	str	r1, [r2, #64]	; 0x40
 800241e:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8002420:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8002424:	f002 0201 	and.w	r2, r2, #1
 8002428:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 800242a:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 800242e:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8002430:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8002432:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8002434:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8002436:	685a      	ldr	r2, [r3, #4]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002438:	4905      	ldr	r1, [pc, #20]	; (8002450 <MEAS_timer_init+0x44>)
 800243a:	f042 0220 	orr.w	r2, r2, #32
 800243e:	605a      	str	r2, [r3, #4]
 8002440:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8002444:	b003      	add	sp, #12
 8002446:	f85d 4b04 	ldr.w	r4, [sp], #4
 800244a:	4770      	bx	lr
 800244c:	40023800 	.word	0x40023800
 8002450:	e000e100 	.word	0xe000e100

08002454 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8002454:	b410      	push	{r4}
 8002456:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8002458:	4a36      	ldr	r2, [pc, #216]	; (8002534 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 800245a:	4b37      	ldr	r3, [pc, #220]	; (8002538 <MEAS_ADC3_scan_init+0xe4>)
 800245c:	4c37      	ldr	r4, [pc, #220]	; (800253c <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 800245e:	2100      	movs	r1, #0
 8002460:	9100      	str	r1, [sp, #0]
 8002462:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002464:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8002468:	6450      	str	r0, [r2, #68]	; 0x44
 800246a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800246c:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 8002470:	9000      	str	r0, [sp, #0]
 8002472:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8002474:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8002476:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 800247a:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 800247c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800247e:	f040 0004 	orr.w	r0, r0, #4
 8002482:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8002484:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002486:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 800248a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 800248c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800248e:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8002492:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8002494:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002496:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 800249a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 800249c:	6858      	ldr	r0, [r3, #4]
 800249e:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80024a2:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 80024a4:	6898      	ldr	r0, [r3, #8]
 80024a6:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 80024aa:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 80024ac:	6898      	ldr	r0, [r3, #8]
 80024ae:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 80024b2:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 80024b4:	6898      	ldr	r0, [r3, #8]
 80024b6:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80024ba:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80024bc:	9101      	str	r1, [sp, #4]
 80024be:	6b10      	ldr	r0, [r2, #48]	; 0x30
 80024c0:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 80024c4:	6310      	str	r0, [r2, #48]	; 0x30
 80024c6:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80024c8:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 80024cc:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 80024ce:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80024d2:	9a01      	ldr	r2, [sp, #4]
 80024d4:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 80024d8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80024da:	f022 0201 	bic.w	r2, r2, #1
 80024de:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN);     // Wait for DMA to finish
 80024e0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80024e2:	07d2      	lsls	r2, r2, #31
 80024e4:	d4fc      	bmi.n	80024e0 <MEAS_ADC3_scan_init+0x8c>
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 80024e6:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 80024e8:	4815      	ldr	r0, [pc, #84]	; (8002540 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 80024ea:	4916      	ldr	r1, [pc, #88]	; (8002544 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 80024ec:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80024f0:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 80024f2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80024f4:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80024f8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 80024fa:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80024fc:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8002500:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8002502:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002504:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002508:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 800250a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800250c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002510:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8002512:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002514:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8002518:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 800251a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 800251c:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8002520:	f042 0210 	orr.w	r2, r2, #16
 8002524:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8002526:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8002528:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 800252a:	6359      	str	r1, [r3, #52]	; 0x34
}
 800252c:	b003      	add	sp, #12
 800252e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002532:	4770      	bx	lr
 8002534:	40023800 	.word	0x40023800
 8002538:	40012200 	.word	0x40012200
 800253c:	e000e100 	.word	0xe000e100
 8002540:	4001224c 	.word	0x4001224c
 8002544:	20001a80 	.word	0x20001a80

08002548 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8002548:	4b1b      	ldr	r3, [pc, #108]	; (80025b8 <DMA2_Stream1_IRQHandler+0x70>)
 800254a:	681a      	ldr	r2, [r3, #0]
 800254c:	0511      	lsls	r1, r2, #20
 800254e:	d400      	bmi.n	8002552 <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 8002550:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002552:	4a1a      	ldr	r2, [pc, #104]	; (80025bc <DMA2_Stream1_IRQHandler+0x74>)
 8002554:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8002558:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800255c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002560:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002564:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8002568:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800256a:	f022 0201 	bic.w	r2, r2, #1
 800256e:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN);	  // Wait for DMA to finish
 8002570:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002572:	07d2      	lsls	r2, r2, #31
 8002574:	d4fc      	bmi.n	8002570 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8002576:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8002578:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 800257c:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8002580:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8002582:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8002584:	490e      	ldr	r1, [pc, #56]	; (80025c0 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8002586:	f023 0301 	bic.w	r3, r3, #1
 800258a:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 800258c:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 800258e:	4b0d      	ldr	r3, [pc, #52]	; (80025c4 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8002590:	f020 0001 	bic.w	r0, r0, #1
 8002594:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8002596:	6888      	ldr	r0, [r1, #8]
 8002598:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 800259c:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 800259e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80025a0:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 80025a4:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 80025a6:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80025a8:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 80025ac:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 80025ae:	6813      	ldr	r3, [r2, #0]
 80025b0:	f023 0301 	bic.w	r3, r3, #1
 80025b4:	6013      	str	r3, [r2, #0]
}
 80025b6:	4770      	bx	lr
 80025b8:	40026400 	.word	0x40026400
 80025bc:	e000e100 	.word	0xe000e100
 80025c0:	40012200 	.word	0x40012200
 80025c4:	40023800 	.word	0x40023800

080025c8 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 80025c8:	b510      	push	{r4, lr}
        buffer[i] = 0;
 80025ca:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80025ce:	2100      	movs	r1, #0
 80025d0:	480f      	ldr	r0, [pc, #60]	; (8002610 <MEAS_start_measure+0x48>)
 80025d2:	f028 fc08 	bl	802ade6 <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 80025d6:	f7ff ff3d 	bl	8002454 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80025da:	4a0e      	ldr	r2, [pc, #56]	; (8002614 <MEAS_start_measure+0x4c>)
 80025dc:	490e      	ldr	r1, [pc, #56]	; (8002618 <MEAS_start_measure+0x50>)
 80025de:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80025e0:	480e      	ldr	r0, [pc, #56]	; (800261c <MEAS_start_measure+0x54>)
 80025e2:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80025e6:	f043 0301 	orr.w	r3, r3, #1
 80025ea:	6293      	str	r3, [r2, #40]	; 0x28
 80025ec:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80025f0:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80025f2:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 80025f4:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80025f8:	f043 0301 	orr.w	r3, r3, #1
 80025fc:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 80025fe:	680b      	ldr	r3, [r1, #0]
 8002600:	f043 0301 	orr.w	r3, r3, #1
 8002604:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8002606:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8002608:	07db      	lsls	r3, r3, #31
 800260a:	d4fc      	bmi.n	8002606 <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 800260c:	4800      	ldr	r0, [pc, #0]	; (8002610 <MEAS_start_measure+0x48>)
 800260e:	bd10      	pop	{r4, pc}
 8002610:	20001a80 	.word	0x20001a80
 8002614:	40026400 	.word	0x40026400
 8002618:	e000e100 	.word	0xe000e100
 800261c:	40012200 	.word	0x40012200

08002620 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8002620:	2004      	movs	r0, #4
 8002622:	4770      	bx	lr

08002624 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8002624:	2040      	movs	r0, #64	; 0x40
 8002626:	4770      	bx	lr

08002628 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8002628:	f44f 7020 	mov.w	r0, #640	; 0x280
 800262c:	4770      	bx	lr
 800262e:	bf00      	nop

08002630 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002630:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002632:	4b0e      	ldr	r3, [pc, #56]	; (800266c <HAL_MspInit+0x3c>)
 8002634:	2200      	movs	r2, #0
 8002636:	9200      	str	r2, [sp, #0]
 8002638:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800263a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800263e:	6459      	str	r1, [r3, #68]	; 0x44
 8002640:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8002642:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8002646:	9000      	str	r0, [sp, #0]
 8002648:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800264a:	9201      	str	r2, [sp, #4]
 800264c:	6c18      	ldr	r0, [r3, #64]	; 0x40
 800264e:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8002652:	6418      	str	r0, [r3, #64]	; 0x40
 8002654:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002656:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800265a:	9301      	str	r3, [sp, #4]
 800265c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800265e:	210f      	movs	r1, #15
 8002660:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002664:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002666:	f007 bca3 	b.w	8009fb0 <HAL_NVIC_SetPriority>
 800266a:	bf00      	nop
 800266c:	40023800 	.word	0x40023800

08002670 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002670:	4b0b      	ldr	r3, [pc, #44]	; (80026a0 <HAL_CRC_MspInit+0x30>)
 8002672:	6802      	ldr	r2, [r0, #0]
 8002674:	429a      	cmp	r2, r3
 8002676:	d000      	beq.n	800267a <HAL_CRC_MspInit+0xa>
 8002678:	4770      	bx	lr
{
 800267a:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800267c:	2200      	movs	r2, #0
 800267e:	9201      	str	r2, [sp, #4]
 8002680:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8002684:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002688:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 800268c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8002690:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002692:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002696:	9301      	str	r3, [sp, #4]
 8002698:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800269a:	b002      	add	sp, #8
 800269c:	4770      	bx	lr
 800269e:	bf00      	nop
 80026a0:	40023000 	.word	0x40023000

080026a4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80026a4:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 80026a8:	4b2e      	ldr	r3, [pc, #184]	; (8002764 <HAL_I2C_MspInit+0xc0>)
 80026aa:	6802      	ldr	r2, [r0, #0]
{
 80026ac:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80026ae:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 80026b0:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80026b2:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80026b6:	e9cd 4406 	strd	r4, r4, [sp, #24]
 80026ba:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 80026bc:	d002      	beq.n	80026c4 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 80026be:	b00a      	add	sp, #40	; 0x28
 80026c0:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80026c4:	4d28      	ldr	r5, [pc, #160]	; (8002768 <HAL_I2C_MspInit+0xc4>)
 80026c6:	9401      	str	r4, [sp, #4]
 80026c8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80026ca:	4828      	ldr	r0, [pc, #160]	; (800276c <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80026cc:	f043 0304 	orr.w	r3, r3, #4
 80026d0:	632b      	str	r3, [r5, #48]	; 0x30
 80026d2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80026d4:	f003 0304 	and.w	r3, r3, #4
 80026d8:	9301      	str	r3, [sp, #4]
 80026da:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80026dc:	9402      	str	r4, [sp, #8]
 80026de:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80026e0:	f043 0301 	orr.w	r3, r3, #1
 80026e4:	632b      	str	r3, [r5, #48]	; 0x30
 80026e6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80026e8:	f003 0301 	and.w	r3, r3, #1
 80026ec:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80026ee:	f44f 7200 	mov.w	r2, #512	; 0x200
 80026f2:	f04f 0801 	mov.w	r8, #1
 80026f6:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80026fa:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80026fc:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80026fe:	2312      	movs	r3, #18
 8002700:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002704:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002708:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800270a:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800270c:	f007 fcc6 	bl	800a09c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002710:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002712:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002716:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002718:	4815      	ldr	r0, [pc, #84]	; (8002770 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800271a:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800271c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002720:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002724:	f007 fcba 	bl	800a09c <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002728:	9403      	str	r4, [sp, #12]
 800272a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800272c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002730:	642b      	str	r3, [r5, #64]	; 0x40
 8002732:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8002734:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8002738:	4622      	mov	r2, r4
 800273a:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 800273c:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 800273e:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002740:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8002742:	f007 fc35 	bl	8009fb0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8002746:	2048      	movs	r0, #72	; 0x48
 8002748:	f007 fc70 	bl	800a02c <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 800274c:	6a2b      	ldr	r3, [r5, #32]
 800274e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002752:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8002754:	6a2b      	ldr	r3, [r5, #32]
 8002756:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800275a:	622b      	str	r3, [r5, #32]
}
 800275c:	b00a      	add	sp, #40	; 0x28
 800275e:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8002762:	bf00      	nop
 8002764:	40005c00 	.word	0x40005c00
 8002768:	40023800 	.word	0x40023800
 800276c:	40020800 	.word	0x40020800
 8002770:	40020000 	.word	0x40020000

08002774 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002774:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002778:	4604      	mov	r4, r0
 800277a:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800277c:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800277e:	2230      	movs	r2, #48	; 0x30
 8002780:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002782:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8002786:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 800278a:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800278c:	f028 fb2b 	bl	802ade6 <memset>
  if(hltdc->Instance==LTDC)
 8002790:	4b67      	ldr	r3, [pc, #412]	; (8002930 <HAL_LTDC_MspInit+0x1bc>)
 8002792:	6822      	ldr	r2, [r4, #0]
 8002794:	429a      	cmp	r2, r3
 8002796:	d002      	beq.n	800279e <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8002798:	b01a      	add	sp, #104	; 0x68
 800279a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800279e:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80027a0:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80027a2:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80027a4:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80027a6:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80027a8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80027ac:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80027ae:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80027b0:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80027b2:	f009 fedd 	bl	800c570 <HAL_RCCEx_PeriphCLKConfig>
 80027b6:	2800      	cmp	r0, #0
 80027b8:	f040 80b7 	bne.w	800292a <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 80027bc:	4b5d      	ldr	r3, [pc, #372]	; (8002934 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80027be:	485e      	ldr	r0, [pc, #376]	; (8002938 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80027c0:	2400      	movs	r4, #0
 80027c2:	9401      	str	r4, [sp, #4]
 80027c4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80027c6:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80027ca:	645a      	str	r2, [r3, #68]	; 0x44
 80027cc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80027ce:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 80027d2:	9201      	str	r2, [sp, #4]
 80027d4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80027d6:	9402      	str	r4, [sp, #8]
 80027d8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80027da:	f042 0220 	orr.w	r2, r2, #32
 80027de:	631a      	str	r2, [r3, #48]	; 0x30
 80027e0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80027e2:	f002 0220 	and.w	r2, r2, #32
 80027e6:	9202      	str	r2, [sp, #8]
 80027e8:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80027ea:	9403      	str	r4, [sp, #12]
 80027ec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80027ee:	f042 0201 	orr.w	r2, r2, #1
 80027f2:	631a      	str	r2, [r3, #48]	; 0x30
 80027f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80027f6:	f002 0201 	and.w	r2, r2, #1
 80027fa:	9203      	str	r2, [sp, #12]
 80027fc:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80027fe:	9404      	str	r4, [sp, #16]
 8002800:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002802:	f042 0202 	orr.w	r2, r2, #2
 8002806:	631a      	str	r2, [r3, #48]	; 0x30
 8002808:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800280a:	f002 0202 	and.w	r2, r2, #2
 800280e:	9204      	str	r2, [sp, #16]
 8002810:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8002812:	9405      	str	r4, [sp, #20]
 8002814:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002816:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800281a:	631a      	str	r2, [r3, #48]	; 0x30
 800281c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800281e:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8002822:	9205      	str	r2, [sp, #20]
 8002824:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002826:	9406      	str	r4, [sp, #24]
 8002828:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800282a:	f042 0204 	orr.w	r2, r2, #4
 800282e:	631a      	str	r2, [r3, #48]	; 0x30
 8002830:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002832:	f002 0204 	and.w	r2, r2, #4
 8002836:	9206      	str	r2, [sp, #24]
 8002838:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800283a:	9407      	str	r4, [sp, #28]
 800283c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800283e:	f042 0208 	orr.w	r2, r2, #8
 8002842:	631a      	str	r2, [r3, #48]	; 0x30
 8002844:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002846:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800284a:	2600      	movs	r6, #0
 800284c:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800284e:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002850:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002852:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002854:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002858:	2302      	movs	r3, #2
 800285a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800285e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002862:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002864:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002866:	f007 fc19 	bl	800a09c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800286a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800286c:	f641 0258 	movw	r2, #6232	; 0x1858
 8002870:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002872:	4832      	ldr	r0, [pc, #200]	; (800293c <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002874:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002876:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800287a:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800287e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002882:	f007 fc0b 	bl	800a09c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002886:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002888:	2203      	movs	r2, #3
 800288a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800288c:	482c      	ldr	r0, [pc, #176]	; (8002940 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800288e:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002892:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002896:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800289a:	f007 fbff 	bl	800a09c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800289e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80028a0:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 80028a4:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028a6:	4826      	ldr	r0, [pc, #152]	; (8002940 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80028a8:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80028aa:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80028ae:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80028b2:	f007 fbf3 	bl	800a09c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80028b6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80028b8:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 80028bc:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80028be:	4821      	ldr	r0, [pc, #132]	; (8002944 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80028c0:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80028c2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80028c6:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80028ca:	f007 fbe7 	bl	800a09c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80028ce:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80028d0:	22c0      	movs	r2, #192	; 0xc0
 80028d2:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80028d4:	481c      	ldr	r0, [pc, #112]	; (8002948 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80028d6:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80028d8:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80028dc:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80028e0:	f007 fbdc 	bl	800a09c <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80028e4:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80028e6:	2208      	movs	r2, #8
 80028e8:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80028ea:	4818      	ldr	r0, [pc, #96]	; (800294c <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80028ec:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80028ee:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80028f2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80028f6:	f007 fbd1 	bl	800a09c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80028fa:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80028fc:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80028fe:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002902:	4810      	ldr	r0, [pc, #64]	; (8002944 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002904:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002908:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800290c:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002910:	f007 fbc4 	bl	800a09c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002914:	4622      	mov	r2, r4
 8002916:	2105      	movs	r1, #5
 8002918:	2058      	movs	r0, #88	; 0x58
 800291a:	f007 fb49 	bl	8009fb0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800291e:	2058      	movs	r0, #88	; 0x58
 8002920:	f007 fb84 	bl	800a02c <HAL_NVIC_EnableIRQ>
}
 8002924:	b01a      	add	sp, #104	; 0x68
 8002926:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 800292a:	f7ff fd39 	bl	80023a0 <Error_Handler>
 800292e:	e745      	b.n	80027bc <HAL_LTDC_MspInit+0x48>
 8002930:	40016800 	.word	0x40016800
 8002934:	40023800 	.word	0x40023800
 8002938:	40021400 	.word	0x40021400
 800293c:	40020000 	.word	0x40020000
 8002940:	40020400 	.word	0x40020400
 8002944:	40021800 	.word	0x40021800
 8002948:	40020800 	.word	0x40020800
 800294c:	40020c00 	.word	0x40020c00

08002950 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002950:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8002952:	4a1b      	ldr	r2, [pc, #108]	; (80029c0 <HAL_SPI_MspInit+0x70>)
 8002954:	6801      	ldr	r1, [r0, #0]
{
 8002956:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002958:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 800295a:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800295c:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002960:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8002964:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8002966:	d001      	beq.n	800296c <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002968:	b008      	add	sp, #32
 800296a:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 800296c:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8002970:	9300      	str	r3, [sp, #0]
 8002972:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002974:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8002978:	6450      	str	r0, [r2, #68]	; 0x44
 800297a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800297c:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8002980:	9000      	str	r0, [sp, #0]
 8002982:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002984:	9301      	str	r3, [sp, #4]
 8002986:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002988:	480e      	ldr	r0, [pc, #56]	; (80029c4 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800298a:	f043 0320 	orr.w	r3, r3, #32
 800298e:	6313      	str	r3, [r2, #48]	; 0x30
 8002990:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8002992:	ed9f 7b09 	vldr	d7, [pc, #36]	; 80029b8 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002996:	f003 0320 	and.w	r3, r3, #32
 800299a:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800299c:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800299e:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80029a0:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80029a2:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80029a6:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80029aa:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80029ac:	f007 fb76 	bl	800a09c <HAL_GPIO_Init>
}
 80029b0:	b008      	add	sp, #32
 80029b2:	bd10      	pop	{r4, pc}
 80029b4:	f3af 8000 	nop.w
 80029b8:	00000380 	.word	0x00000380
 80029bc:	00000002 	.word	0x00000002
 80029c0:	40015000 	.word	0x40015000
 80029c4:	40021400 	.word	0x40021400

080029c8 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80029c8:	b500      	push	{lr}
  if(htim_base->Instance==TIM1)
 80029ca:	4a21      	ldr	r2, [pc, #132]	; (8002a50 <HAL_TIM_Base_MspInit+0x88>)
 80029cc:	6803      	ldr	r3, [r0, #0]
 80029ce:	4293      	cmp	r3, r2
{
 80029d0:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 80029d2:	d008      	beq.n	80029e6 <HAL_TIM_Base_MspInit+0x1e>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 80029d4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80029d8:	d023      	beq.n	8002a22 <HAL_TIM_Base_MspInit+0x5a>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 80029da:	4a1e      	ldr	r2, [pc, #120]	; (8002a54 <HAL_TIM_Base_MspInit+0x8c>)
 80029dc:	4293      	cmp	r3, r2
 80029de:	d011      	beq.n	8002a04 <HAL_TIM_Base_MspInit+0x3c>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 80029e0:	b005      	add	sp, #20
 80029e2:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM1_CLK_ENABLE();
 80029e6:	4b1c      	ldr	r3, [pc, #112]	; (8002a58 <HAL_TIM_Base_MspInit+0x90>)
 80029e8:	2200      	movs	r2, #0
 80029ea:	9201      	str	r2, [sp, #4]
 80029ec:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80029ee:	f042 0201 	orr.w	r2, r2, #1
 80029f2:	645a      	str	r2, [r3, #68]	; 0x44
 80029f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80029f6:	f003 0301 	and.w	r3, r3, #1
 80029fa:	9301      	str	r3, [sp, #4]
 80029fc:	9b01      	ldr	r3, [sp, #4]
}
 80029fe:	b005      	add	sp, #20
 8002a00:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002a04:	4b14      	ldr	r3, [pc, #80]	; (8002a58 <HAL_TIM_Base_MspInit+0x90>)
 8002a06:	2200      	movs	r2, #0
 8002a08:	9203      	str	r2, [sp, #12]
 8002a0a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002a0c:	f042 0202 	orr.w	r2, r2, #2
 8002a10:	641a      	str	r2, [r3, #64]	; 0x40
 8002a12:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002a14:	f003 0302 	and.w	r3, r3, #2
 8002a18:	9303      	str	r3, [sp, #12]
 8002a1a:	9b03      	ldr	r3, [sp, #12]
}
 8002a1c:	b005      	add	sp, #20
 8002a1e:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002a22:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8002a26:	2200      	movs	r2, #0
 8002a28:	9202      	str	r2, [sp, #8]
 8002a2a:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8002a2c:	f041 0101 	orr.w	r1, r1, #1
 8002a30:	6419      	str	r1, [r3, #64]	; 0x40
 8002a32:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002a34:	f003 0301 	and.w	r3, r3, #1
 8002a38:	9302      	str	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8002a3a:	201c      	movs	r0, #28
 8002a3c:	2105      	movs	r1, #5
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002a3e:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8002a40:	f007 fab6 	bl	8009fb0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002a44:	201c      	movs	r0, #28
}
 8002a46:	b005      	add	sp, #20
 8002a48:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002a4c:	f007 baee 	b.w	800a02c <HAL_NVIC_EnableIRQ>
 8002a50:	40010000 	.word	0x40010000
 8002a54:	40000400 	.word	0x40000400
 8002a58:	40023800 	.word	0x40023800

08002a5c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002a5c:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8002a5e:	4b2b      	ldr	r3, [pc, #172]	; (8002b0c <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002a60:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8002a62:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002a64:	2200      	movs	r2, #0
 8002a66:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8002a68:	2c00      	cmp	r4, #0
 8002a6a:	d14c      	bne.n	8002b06 <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8002a6c:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8002a6e:	4a28      	ldr	r2, [pc, #160]	; (8002b10 <HAL_SDRAM_MspInit+0xb4>)
 8002a70:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8002a72:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002a74:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002a76:	4827      	ldr	r0, [pc, #156]	; (8002b14 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002a78:	433b      	orrs	r3, r7
 8002a7a:	6393      	str	r3, [r2, #56]	; 0x38
 8002a7c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8002a7e:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002a80:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002a82:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002a84:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8002a88:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002a8a:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002a8c:	2302      	movs	r3, #2
 8002a8e:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002a92:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002a96:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002a98:	f007 fb00 	bl	800a09c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002a9c:	481e      	ldr	r0, [pc, #120]	; (8002b18 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002a9e:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002aa0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002aa2:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002aa4:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002aa8:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002aac:	f007 faf6 	bl	800a09c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002ab0:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002ab4:	4819      	ldr	r0, [pc, #100]	; (8002b1c <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002ab6:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002ab8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002aba:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002abe:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002ac2:	f007 faeb 	bl	800a09c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002ac6:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002aca:	4815      	ldr	r0, [pc, #84]	; (8002b20 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002acc:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002ace:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002ad0:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002ad4:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002ad8:	f007 fae0 	bl	800a09c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002adc:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002ae0:	4810      	ldr	r0, [pc, #64]	; (8002b24 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002ae2:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002ae4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002ae6:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002aea:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002aee:	f007 fad5 	bl	800a09c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002af2:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002af4:	480c      	ldr	r0, [pc, #48]	; (8002b28 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002af6:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002af8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002afa:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002afe:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002b00:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002b02:	f007 facb 	bl	800a09c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002b06:	b009      	add	sp, #36	; 0x24
 8002b08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002b0a:	bf00      	nop
 8002b0c:	20001e80 	.word	0x20001e80
 8002b10:	40023800 	.word	0x40023800
 8002b14:	40021400 	.word	0x40021400
 8002b18:	40020800 	.word	0x40020800
 8002b1c:	40021800 	.word	0x40021800
 8002b20:	40021000 	.word	0x40021000
 8002b24:	40020c00 	.word	0x40020c00
 8002b28:	40020400 	.word	0x40020400

08002b2c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002b2c:	b570      	push	{r4, r5, r6, lr}
 8002b2e:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002b30:	4b23      	ldr	r3, [pc, #140]	; (8002bc0 <HAL_InitTick+0x94>)
 8002b32:	2200      	movs	r2, #0
 8002b34:	9202      	str	r2, [sp, #8]
 8002b36:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002b38:	f042 0210 	orr.w	r2, r2, #16
 8002b3c:	641a      	str	r2, [r3, #64]	; 0x40
 8002b3e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b40:	f003 0310 	and.w	r3, r3, #16
 8002b44:	9302      	str	r3, [sp, #8]
{
 8002b46:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002b48:	a901      	add	r1, sp, #4
 8002b4a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002b4c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002b4e:	f009 fced 	bl	800c52c <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002b52:	9b06      	ldr	r3, [sp, #24]
 8002b54:	b9d3      	cbnz	r3, 8002b8c <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002b56:	f009 fcd9 	bl	800c50c <HAL_RCC_GetPCLK1Freq>
 8002b5a:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002b5c:	4a19      	ldr	r2, [pc, #100]	; (8002bc4 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002b5e:	4c1a      	ldr	r4, [pc, #104]	; (8002bc8 <HAL_InitTick+0x9c>)
 8002b60:	491a      	ldr	r1, [pc, #104]	; (8002bcc <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002b62:	fba2 2303 	umull	r2, r3, r2, r3
 8002b66:	0c9b      	lsrs	r3, r3, #18
 8002b68:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8002b6a:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8002b6c:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002b70:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002b72:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8002b76:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002b78:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002b7a:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002b7c:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8002b7e:	f00a fb05 	bl	800d18c <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002b82:	4606      	mov	r6, r0
 8002b84:	b130      	cbz	r0, 8002b94 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 8002b86:	4630      	mov	r0, r6
 8002b88:	b008      	add	sp, #32
 8002b8a:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002b8c:	f009 fcbe 	bl	800c50c <HAL_RCC_GetPCLK1Freq>
 8002b90:	0043      	lsls	r3, r0, #1
 8002b92:	e7e3      	b.n	8002b5c <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002b94:	4620      	mov	r0, r4
 8002b96:	f00a fb87 	bl	800d2a8 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002b9a:	4606      	mov	r6, r0
 8002b9c:	2800      	cmp	r0, #0
 8002b9e:	d1f2      	bne.n	8002b86 <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002ba0:	2036      	movs	r0, #54	; 0x36
 8002ba2:	f007 fa43 	bl	800a02c <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002ba6:	2d0f      	cmp	r5, #15
 8002ba8:	d901      	bls.n	8002bae <HAL_InitTick+0x82>
        status = HAL_ERROR;
 8002baa:	2601      	movs	r6, #1
 8002bac:	e7eb      	b.n	8002b86 <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002bae:	4632      	mov	r2, r6
 8002bb0:	4629      	mov	r1, r5
 8002bb2:	2036      	movs	r0, #54	; 0x36
 8002bb4:	f007 f9fc 	bl	8009fb0 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002bb8:	4b05      	ldr	r3, [pc, #20]	; (8002bd0 <HAL_InitTick+0xa4>)
 8002bba:	601d      	str	r5, [r3, #0]
 8002bbc:	e7e3      	b.n	8002b86 <HAL_InitTick+0x5a>
 8002bbe:	bf00      	nop
 8002bc0:	40023800 	.word	0x40023800
 8002bc4:	431bde83 	.word	0x431bde83
 8002bc8:	20001e84 	.word	0x20001e84
 8002bcc:	40001000 	.word	0x40001000
 8002bd0:	20000080 	.word	0x20000080

08002bd4 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002bd4:	4770      	bx	lr
 8002bd6:	bf00      	nop

08002bd8 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002bd8:	e7fe      	b.n	8002bd8 <HardFault_Handler>
 8002bda:	bf00      	nop

08002bdc <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002bdc:	e7fe      	b.n	8002bdc <MemManage_Handler>
 8002bde:	bf00      	nop

08002be0 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002be0:	e7fe      	b.n	8002be0 <BusFault_Handler>
 8002be2:	bf00      	nop

08002be4 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002be4:	e7fe      	b.n	8002be4 <UsageFault_Handler>
 8002be6:	bf00      	nop

08002be8 <DebugMon_Handler>:
 8002be8:	4770      	bx	lr
 8002bea:	bf00      	nop

08002bec <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002bec:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8002bee:	20c8      	movs	r0, #200	; 0xc8
 8002bf0:	f007 f9ba 	bl	8009f68 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8002bf4:	4804      	ldr	r0, [pc, #16]	; (8002c08 <EXTI3_IRQHandler+0x1c>)
 8002bf6:	2200      	movs	r2, #0
 8002bf8:	2120      	movs	r1, #32
 8002bfa:	f007 fb93 	bl	800a324 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8002bfe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8002c02:	2008      	movs	r0, #8
 8002c04:	f007 bb9e 	b.w	800a344 <HAL_GPIO_EXTI_IRQHandler>
 8002c08:	40021000 	.word	0x40021000

08002c0c <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002c0c:	4801      	ldr	r0, [pc, #4]	; (8002c14 <TIM6_DAC_IRQHandler+0x8>)
 8002c0e:	f00a bb8f 	b.w	800d330 <HAL_TIM_IRQHandler>
 8002c12:	bf00      	nop
 8002c14:	20001e84 	.word	0x20001e84

08002c18 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8002c18:	4801      	ldr	r0, [pc, #4]	; (8002c20 <I2C3_EV_IRQHandler+0x8>)
 8002c1a:	f008 baf3 	b.w	800b204 <HAL_I2C_EV_IRQHandler>
 8002c1e:	bf00      	nop
 8002c20:	200018f8 	.word	0x200018f8

08002c24 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002c24:	4801      	ldr	r0, [pc, #4]	; (8002c2c <LTDC_IRQHandler+0x8>)
 8002c26:	f009 b867 	b.w	800bcf8 <HAL_LTDC_IRQHandler>
 8002c2a:	bf00      	nop
 8002c2c:	2000194c 	.word	0x2000194c

08002c30 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002c30:	2001      	movs	r0, #1
 8002c32:	4770      	bx	lr

08002c34 <_kill>:

int _kill(int pid, int sig)
{
 8002c34:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002c36:	f028 f9cf 	bl	802afd8 <__errno>
 8002c3a:	2316      	movs	r3, #22
 8002c3c:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002c3e:	f04f 30ff 	mov.w	r0, #4294967295
 8002c42:	bd08      	pop	{r3, pc}

08002c44 <_exit>:

void _exit (int status)
{
 8002c44:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002c46:	f028 f9c7 	bl	802afd8 <__errno>
 8002c4a:	2316      	movs	r3, #22
 8002c4c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002c4e:	e7fe      	b.n	8002c4e <_exit+0xa>

08002c50 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002c50:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002c52:	1e16      	subs	r6, r2, #0
 8002c54:	dd07      	ble.n	8002c66 <_read+0x16>
 8002c56:	460c      	mov	r4, r1
 8002c58:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8002c5a:	f3af 8000 	nop.w
 8002c5e:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002c62:	42a5      	cmp	r5, r4
 8002c64:	d1f9      	bne.n	8002c5a <_read+0xa>
	}

return len;
}
 8002c66:	4630      	mov	r0, r6
 8002c68:	bd70      	pop	{r4, r5, r6, pc}
 8002c6a:	bf00      	nop

08002c6c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002c6c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002c6e:	1e16      	subs	r6, r2, #0
 8002c70:	dd07      	ble.n	8002c82 <_write+0x16>
 8002c72:	460c      	mov	r4, r1
 8002c74:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8002c76:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002c7a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002c7e:	42ac      	cmp	r4, r5
 8002c80:	d1f9      	bne.n	8002c76 <_write+0xa>
	}
	return len;
}
 8002c82:	4630      	mov	r0, r6
 8002c84:	bd70      	pop	{r4, r5, r6, pc}
 8002c86:	bf00      	nop

08002c88 <_close>:

int _close(int file)
{
	return -1;
}
 8002c88:	f04f 30ff 	mov.w	r0, #4294967295
 8002c8c:	4770      	bx	lr
 8002c8e:	bf00      	nop

08002c90 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002c90:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002c94:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002c96:	2000      	movs	r0, #0
 8002c98:	4770      	bx	lr
 8002c9a:	bf00      	nop

08002c9c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002c9c:	2001      	movs	r0, #1
 8002c9e:	4770      	bx	lr

08002ca0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002ca0:	2000      	movs	r0, #0
 8002ca2:	4770      	bx	lr

08002ca4 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002ca4:	4a0b      	ldr	r2, [pc, #44]	; (8002cd4 <_sbrk+0x30>)
{
 8002ca6:	b508      	push	{r3, lr}
 8002ca8:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002caa:	6810      	ldr	r0, [r2, #0]
 8002cac:	b128      	cbz	r0, 8002cba <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8002cae:	4403      	add	r3, r0
 8002cb0:	4669      	mov	r1, sp
 8002cb2:	428b      	cmp	r3, r1
 8002cb4:	d807      	bhi.n	8002cc6 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8002cb6:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8002cb8:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8002cba:	4807      	ldr	r0, [pc, #28]	; (8002cd8 <_sbrk+0x34>)
 8002cbc:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002cbe:	4403      	add	r3, r0
 8002cc0:	4669      	mov	r1, sp
 8002cc2:	428b      	cmp	r3, r1
 8002cc4:	d9f7      	bls.n	8002cb6 <_sbrk+0x12>
		errno = ENOMEM;
 8002cc6:	f028 f987 	bl	802afd8 <__errno>
 8002cca:	230c      	movs	r3, #12
 8002ccc:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002cce:	f04f 30ff 	mov.w	r0, #4294967295
}
 8002cd2:	bd08      	pop	{r3, pc}
 8002cd4:	20001ecc 	.word	0x20001ecc
 8002cd8:	200139f0 	.word	0x200139f0

08002cdc <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002cdc:	4770      	bx	lr

08002cde <_ZN23ApplicationFontProviderD0Ev>:
 8002cde:	b510      	push	{r4, lr}
 8002ce0:	2104      	movs	r1, #4
 8002ce2:	4604      	mov	r4, r0
 8002ce4:	f026 ff93 	bl	8029c0e <_ZdlPvj>
 8002ce8:	4620      	mov	r0, r4
 8002cea:	bd10      	pop	{r4, pc}

08002cec <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002cec:	b508      	push	{r3, lr}
    switch (typography)
 8002cee:	2903      	cmp	r1, #3
 8002cf0:	d813      	bhi.n	8002d1a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002cf2:	e8df f001 	tbb	[pc, r1]
 8002cf6:	0602      	.short	0x0602
 8002cf8:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002cfa:	f006 f91b 	bl	8008f34 <_ZN17TypedTextDatabase8getFontsEv>
 8002cfe:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002d00:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002d02:	f006 f917 	bl	8008f34 <_ZN17TypedTextDatabase8getFontsEv>
 8002d06:	6840      	ldr	r0, [r0, #4]
 8002d08:	e7fa      	b.n	8002d00 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002d0a:	f006 f913 	bl	8008f34 <_ZN17TypedTextDatabase8getFontsEv>
 8002d0e:	6880      	ldr	r0, [r0, #8]
 8002d10:	e7f6      	b.n	8002d00 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002d12:	f006 f90f 	bl	8008f34 <_ZN17TypedTextDatabase8getFontsEv>
 8002d16:	68c0      	ldr	r0, [r0, #12]
 8002d18:	e7f2      	b.n	8002d00 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8002d1a:	2000      	movs	r0, #0
 8002d1c:	e7f0      	b.n	8002d00 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002d20 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002d20:	4800      	ldr	r0, [pc, #0]	; (8002d24 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002d22:	4770      	bx	lr
 8002d24:	0802c31c 	.word	0x0802c31c

08002d28 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002d28:	200d      	movs	r0, #13
 8002d2a:	4770      	bx	lr

08002d2c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002d2c:	b513      	push	{r0, r1, r4, lr}
 8002d2e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002d30:	b151      	cbz	r1, 8002d48 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002d32:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002d34:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002d36:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002d3a:	aa01      	add	r2, sp, #4
 8002d3c:	689c      	ldr	r4, [r3, #8]
 8002d3e:	f10d 0303 	add.w	r3, sp, #3
 8002d42:	47a0      	blx	r4
        return glyph;
    }
 8002d44:	b002      	add	sp, #8
 8002d46:	bd10      	pop	{r4, pc}
            return 0;
 8002d48:	4608      	mov	r0, r1
 8002d4a:	e7fb      	b.n	8002d44 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002d4c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002d4c:	89c0      	ldrh	r0, [r0, #14]
 8002d4e:	4770      	bx	lr

08002d50 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002d50:	8a00      	ldrh	r0, [r0, #16]
 8002d52:	4770      	bx	lr

08002d54 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002d54:	88c0      	ldrh	r0, [r0, #6]
 8002d56:	4770      	bx	lr

08002d58 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002d58:	8880      	ldrh	r0, [r0, #4]
 8002d5a:	4770      	bx	lr

08002d5c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002d5c:	7a80      	ldrb	r0, [r0, #10]
    }
 8002d5e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002d62:	4770      	bx	lr

08002d64 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002d64:	7a80      	ldrb	r0, [r0, #10]
    }
 8002d66:	09c0      	lsrs	r0, r0, #7
 8002d68:	4770      	bx	lr

08002d6a <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002d6a:	4770      	bx	lr

08002d6c <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002d6c:	4770      	bx	lr

08002d6e <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002d6e:	4770      	bx	lr

08002d70 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002d70:	4770      	bx	lr

08002d72 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002d72:	4770      	bx	lr

08002d74 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002d74:	4770      	bx	lr

08002d76 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002d76:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002d78:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002d7a:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002d7c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002d7e:	466d      	mov	r5, sp
 8002d80:	4601      	mov	r1, r0
 8002d82:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002d86:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002d88:	4628      	mov	r0, r5
 8002d8a:	4798      	blx	r3
 8002d8c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002d90:	343c      	adds	r4, #60	; 0x3c
 8002d92:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002d96:	b005      	add	sp, #20
 8002d98:	bd30      	pop	{r4, r5, pc}

08002d9a <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002d9a:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002d9c:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002d9e:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002da0:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002da2:	466d      	mov	r5, sp
 8002da4:	4601      	mov	r1, r0
 8002da6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8002daa:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002dac:	4628      	mov	r0, r5
 8002dae:	4798      	blx	r3
 8002db0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002db4:	343c      	adds	r4, #60	; 0x3c
 8002db6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002dba:	b005      	add	sp, #20
 8002dbc:	bd30      	pop	{r4, r5, pc}

08002dbe <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002dbe:	2200      	movs	r2, #0
 8002dc0:	8002      	strh	r2, [r0, #0]
 8002dc2:	8042      	strh	r2, [r0, #2]
 8002dc4:	8082      	strh	r2, [r0, #4]
 8002dc6:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002dc8:	4770      	bx	lr

08002dca <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002dca:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002dce:	4770      	bx	lr

08002dd0 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002dd0:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002dd2:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002dd4:	4604      	mov	r4, r0
        setX(x);
 8002dd6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002dd8:	4615      	mov	r5, r2
        setX(x);
 8002dda:	4798      	blx	r3
        setBaselineY(baselineY);
 8002ddc:	6823      	ldr	r3, [r4, #0]
 8002dde:	4629      	mov	r1, r5
 8002de0:	4620      	mov	r0, r4
 8002de2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002de4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002de8:	4718      	bx	r3

08002dea <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002dea:	2000      	movs	r0, #0
 8002dec:	4770      	bx	lr

08002dee <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002dee:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002df0:	4770      	bx	lr

08002df2 <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 8002df2:	4770      	bx	lr

08002df4 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002df4:	4770      	bx	lr

08002df6 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002df6:	4770      	bx	lr

08002df8 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002df8:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8002dfa:	68c2      	ldr	r2, [r0, #12]
 8002dfc:	6844      	ldr	r4, [r0, #4]
 8002dfe:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002e00:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002e02:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002e06:	07d2      	lsls	r2, r2, #31
 8002e08:	bf48      	it	mi
 8002e0a:	5962      	ldrmi	r2, [r4, r5]
 8002e0c:	689b      	ldr	r3, [r3, #8]
    }
 8002e0e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002e10:	bf48      	it	mi
 8002e12:	58d3      	ldrmi	r3, [r2, r3]
 8002e14:	4718      	bx	r3

08002e16 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002e16:	6843      	ldr	r3, [r0, #4]
 8002e18:	b12b      	cbz	r3, 8002e26 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002e1a:	6883      	ldr	r3, [r0, #8]
 8002e1c:	b92b      	cbnz	r3, 8002e2a <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002e1e:	68c0      	ldr	r0, [r0, #12]
 8002e20:	f000 0001 	and.w	r0, r0, #1
 8002e24:	4770      	bx	lr
 8002e26:	4618      	mov	r0, r3
 8002e28:	4770      	bx	lr
 8002e2a:	2001      	movs	r0, #1
    }
 8002e2c:	4770      	bx	lr

08002e2e <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002e2e:	b510      	push	{r4, lr}
    }
 8002e30:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002e32:	4604      	mov	r4, r0
    }
 8002e34:	f026 feeb 	bl	8029c0e <_ZdlPvj>
 8002e38:	4620      	mov	r0, r4
 8002e3a:	bd10      	pop	{r4, pc}

08002e3c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002e3c:	b510      	push	{r4, lr}
 8002e3e:	214c      	movs	r1, #76	; 0x4c
 8002e40:	4604      	mov	r4, r0
 8002e42:	f026 fee4 	bl	8029c0e <_ZdlPvj>
 8002e46:	4620      	mov	r0, r4
 8002e48:	bd10      	pop	{r4, pc}

08002e4a <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002e4a:	b510      	push	{r4, lr}
 8002e4c:	2110      	movs	r1, #16
 8002e4e:	4604      	mov	r4, r0
 8002e50:	f026 fedd 	bl	8029c0e <_ZdlPvj>
 8002e54:	4620      	mov	r0, r4
 8002e56:	bd10      	pop	{r4, pc}

08002e58 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002e58:	b510      	push	{r4, lr}
 8002e5a:	4b03      	ldr	r3, [pc, #12]	; (8002e68 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 8002e5c:	6003      	str	r3, [r0, #0]
 8002e5e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002e60:	f011 f95c 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002e64:	4620      	mov	r0, r4
 8002e66:	bd10      	pop	{r4, pc}
 8002e68:	0802c688 	.word	0x0802c688

08002e6c <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002e6c:	b507      	push	{r0, r1, r2, lr}
 8002e6e:	4b07      	ldr	r3, [pc, #28]	; (8002e8c <_ZN19CalibrationViewBaseD0Ev+0x20>)
 8002e70:	6003      	str	r3, [r0, #0]
 8002e72:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002e74:	f011 f952 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002e78:	9801      	ldr	r0, [sp, #4]
 8002e7a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8002e7e:	f026 fec6 	bl	8029c0e <_ZdlPvj>
 8002e82:	9801      	ldr	r0, [sp, #4]
 8002e84:	b003      	add	sp, #12
 8002e86:	f85d fb04 	ldr.w	pc, [sp], #4
 8002e8a:	bf00      	nop
 8002e8c:	0802c688 	.word	0x0802c688

08002e90 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002e90:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002e92:	f7fe fbf9 	bl	8001688 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002e96:	bd08      	pop	{r3, pc}

08002e98 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002e98:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002e9a:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002e9c:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002e9e:	4b12      	ldr	r3, [pc, #72]	; (8002ee8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002ea0:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002ea2:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002ea4:	b28d      	uxth	r5, r1
 8002ea6:	b92b      	cbnz	r3, 8002eb4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002ea8:	4b10      	ldr	r3, [pc, #64]	; (8002eec <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002eaa:	4a11      	ldr	r2, [pc, #68]	; (8002ef0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002eac:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002eae:	4811      	ldr	r0, [pc, #68]	; (8002ef4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002eb0:	f027 fd94 	bl	802a9dc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002eb4:	4910      	ldr	r1, [pc, #64]	; (8002ef8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002eb6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002eb8:	8809      	ldrh	r1, [r1, #0]
 8002eba:	4291      	cmp	r1, r2
 8002ebc:	d803      	bhi.n	8002ec6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002ebe:	4b0f      	ldr	r3, [pc, #60]	; (8002efc <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002ec0:	4a0b      	ldr	r2, [pc, #44]	; (8002ef0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002ec2:	216d      	movs	r1, #109	; 0x6d
 8002ec4:	e7f3      	b.n	8002eae <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002ec6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002eca:	4b0d      	ldr	r3, [pc, #52]	; (8002f00 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002ecc:	681b      	ldr	r3, [r3, #0]
 8002ece:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002ed2:	6803      	ldr	r3, [r0, #0]
 8002ed4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002ed6:	4798      	blx	r3
 8002ed8:	1a28      	subs	r0, r5, r0
 8002eda:	b201      	sxth	r1, r0
 8002edc:	4633      	mov	r3, r6
 8002ede:	4620      	mov	r0, r4
    }
 8002ee0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002ee4:	4718      	bx	r3
 8002ee6:	bf00      	nop
 8002ee8:	20012e0c 	.word	0x20012e0c
 8002eec:	0802c420 	.word	0x0802c420
 8002ef0:	0802c462 	.word	0x0802c462
 8002ef4:	0802c49d 	.word	0x0802c49d
 8002ef8:	20012e10 	.word	0x20012e10
 8002efc:	0802c4e4 	.word	0x0802c4e4
 8002f00:	20012e14 	.word	0x20012e14

08002f04 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002f04:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8002f06:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8002f0a:	4299      	cmp	r1, r3
{
 8002f0c:	4604      	mov	r4, r0
 8002f0e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002f10:	d103      	bne.n	8002f1a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002f12:	f012 fe05 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002f16:	f001 fbf1 	bl	80046fc <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8002f1a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8002f1e:	429d      	cmp	r5, r3
 8002f20:	d103      	bne.n	8002f2a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8002f22:	f012 fdfd 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8002f26:	f001 fca9 	bl	800487c <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8002f2a:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8002f2e:	42a5      	cmp	r5, r4
 8002f30:	d105      	bne.n	8002f3e <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8002f32:	f012 fdf5 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 8002f36:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 8002f3a:	f001 bcaf 	b.w	800489c <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 8002f3e:	bd38      	pop	{r3, r4, r5, pc}

08002f40 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002f40:	2200      	movs	r2, #0
 8002f42:	f04f 31ff 	mov.w	r1, #4294967295
 8002f46:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002f4a:	6082      	str	r2, [r0, #8]
    }
 8002f4c:	4770      	bx	lr

08002f4e <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002f4e:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002f50:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002f52:	4604      	mov	r4, r0
        setX(x);
 8002f54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002f56:	4615      	mov	r5, r2
        setX(x);
 8002f58:	4798      	blx	r3
        setY(y);
 8002f5a:	6823      	ldr	r3, [r4, #0]
 8002f5c:	4629      	mov	r1, r5
 8002f5e:	4620      	mov	r0, r4
 8002f60:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002f62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002f66:	4718      	bx	r3

08002f68 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002f68:	b570      	push	{r4, r5, r6, lr}
 8002f6a:	4604      	mov	r4, r0
 8002f6c:	461d      	mov	r5, r3
 8002f6e:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002f72:	f7ff ffec 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002f76:	6823      	ldr	r3, [r4, #0]
 8002f78:	4629      	mov	r1, r5
 8002f7a:	4620      	mov	r0, r4
 8002f7c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002f7e:	4798      	blx	r3
        setHeight(height);
 8002f80:	6823      	ldr	r3, [r4, #0]
 8002f82:	4631      	mov	r1, r6
 8002f84:	4620      	mov	r0, r4
 8002f86:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002f88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002f8c:	4718      	bx	r3
	...

08002f90 <_ZN8touchgfx6WidgetC1Ev>:
 8002f90:	2200      	movs	r2, #0
 8002f92:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002f96:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002f9a:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002f9e:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002fa2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002fa6:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002fa8:	4a01      	ldr	r2, [pc, #4]	; (8002fb0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002faa:	6002      	str	r2, [r0, #0]
 8002fac:	4770      	bx	lr
 8002fae:	bf00      	nop
 8002fb0:	0802c568 	.word	0x0802c568

08002fb4 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002fb4:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002fb6:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002fb8:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002fba:	2100      	movs	r1, #0
 8002fbc:	f027 ff13 	bl	802ade6 <memset>
 8002fc0:	4620      	mov	r0, r4
 8002fc2:	f7ff ffe5 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 8002fc6:	4b0a      	ldr	r3, [pc, #40]	; (8002ff0 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002fc8:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002fca:	4b0a      	ldr	r3, [pc, #40]	; (8002ff4 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002fcc:	62a3      	str	r3, [r4, #40]	; 0x28
 8002fce:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002fd2:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002fd4:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002fd8:	2300      	movs	r3, #0
 8002fda:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002fde:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002fe2:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002fe6:	8723      	strh	r3, [r4, #56]	; 0x38
 8002fe8:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002fea:	4620      	mov	r0, r4
 8002fec:	bd10      	pop	{r4, pc}
 8002fee:	bf00      	nop
 8002ff0:	0802eea0 	.word	0x0802eea0
 8002ff4:	0802c5d0 	.word	0x0802c5d0

08002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002ff8:	4b1a      	ldr	r3, [pc, #104]	; (8003064 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002ffa:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002ffc:	881b      	ldrh	r3, [r3, #0]
 8002ffe:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8003000:	428b      	cmp	r3, r1
    void updateTextPosition()
 8003002:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8003004:	d92b      	bls.n	800305e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003006:	4b18      	ldr	r3, [pc, #96]	; (8003068 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8003008:	681b      	ldr	r3, [r3, #0]
 800300a:	b92b      	cbnz	r3, 8003018 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 800300c:	4b17      	ldr	r3, [pc, #92]	; (800306c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800300e:	4a18      	ldr	r2, [pc, #96]	; (8003070 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8003010:	4818      	ldr	r0, [pc, #96]	; (8003074 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8003012:	216c      	movs	r1, #108	; 0x6c
 8003014:	f027 fce2 	bl	802a9dc <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003018:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800301c:	4b16      	ldr	r3, [pc, #88]	; (8003078 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800301e:	681b      	ldr	r3, [r3, #0]
 8003020:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8003024:	4b15      	ldr	r3, [pc, #84]	; (800307c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8003026:	6818      	ldr	r0, [r3, #0]
 8003028:	f005 ff74 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800302c:	682b      	ldr	r3, [r5, #0]
 800302e:	9001      	str	r0, [sp, #4]
 8003030:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003032:	4628      	mov	r0, r5
 8003034:	4798      	blx	r3
 8003036:	682b      	ldr	r3, [r5, #0]
 8003038:	9901      	ldr	r1, [sp, #4]
 800303a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800303c:	4604      	mov	r4, r0
 800303e:	4628      	mov	r0, r5
 8003040:	4798      	blx	r3
 8003042:	682b      	ldr	r3, [r5, #0]
 8003044:	9901      	ldr	r1, [sp, #4]
 8003046:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003048:	fb14 f400 	smulbb	r4, r4, r0
 800304c:	4628      	mov	r0, r5
 800304e:	4798      	blx	r3
 8003050:	b2a4      	uxth	r4, r4
 8003052:	1823      	adds	r3, r4, r0
 8003054:	b21b      	sxth	r3, r3
 8003056:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 800305a:	b002      	add	sp, #8
 800305c:	bd70      	pop	{r4, r5, r6, pc}
 800305e:	2300      	movs	r3, #0
 8003060:	e7f9      	b.n	8003056 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8003062:	bf00      	nop
 8003064:	20012e10 	.word	0x20012e10
 8003068:	20012e0c 	.word	0x20012e0c
 800306c:	0802c420 	.word	0x0802c420
 8003070:	0802c462 	.word	0x0802c462
 8003074:	0802c49d 	.word	0x0802c49d
 8003078:	20012e14 	.word	0x20012e14
 800307c:	20012e18 	.word	0x20012e18

08003080 <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 8003080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003084:	ed2d 8b06 	vpush	{d8-d10}
 8003088:	4604      	mov	r4, r0
 800308a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 800308c:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 800308e:	2500      	movs	r5, #0
 8003090:	f014 f9c6 	bl	8017420 <_ZN8touchgfx6ScreenC1Ev>
 8003094:	4b66      	ldr	r3, [pc, #408]	; (8003230 <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 8003096:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003098:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 800309c:	2226      	movs	r2, #38	; 0x26
 800309e:	4629      	mov	r1, r5
 80030a0:	4658      	mov	r0, fp
 80030a2:	f027 fea0 	bl	802ade6 <memset>
 80030a6:	4658      	mov	r0, fp
 80030a8:	f7ff ff72 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 80030ac:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80030b0:	26ff      	movs	r6, #255	; 0xff
 80030b2:	4b60      	ldr	r3, [pc, #384]	; (8003234 <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 80030b4:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 80030b6:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80030b8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80030bc:	4629      	mov	r1, r5
 80030be:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80030c2:	4650      	mov	r0, sl
        : color(col)
 80030c4:	66a5      	str	r5, [r4, #104]	; 0x68
 80030c6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80030ca:	f027 fe8c 	bl	802ade6 <memset>
 80030ce:	4650      	mov	r0, sl
 80030d0:	f7ff ff5e 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 80030d4:	4b58      	ldr	r3, [pc, #352]	; (8003238 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 80030d6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80030d8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80030dc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 80030e0:	a90a      	add	r1, sp, #40	; 0x28
 80030e2:	4650      	mov	r0, sl
 80030e4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80030e8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80030ec:	f010 f80f 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80030f0:	4648      	mov	r0, r9
 80030f2:	f7ff ff5f 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 80030f6:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80030fa:	4b50      	ldr	r3, [pc, #320]	; (800323c <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 80030fc:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8003100:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8003104:	4638      	mov	r0, r7
 8003106:	f00e fecb 	bl	8011ea0 <_ZN8touchgfx4LineC1Ev>
 800310a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800310e:	4618      	mov	r0, r3
 8003110:	9303      	str	r3, [sp, #12]
 8003112:	f7fe facd 	bl	80016b0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003116:	4b4a      	ldr	r3, [pc, #296]	; (8003240 <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 8003118:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800311c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8003120:	3324      	adds	r3, #36	; 0x24
 8003122:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8003126:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800312a:	4640      	mov	r0, r8
 800312c:	f7ff ff42 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8003130:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8003134:	4618      	mov	r0, r3
 8003136:	ee08 3a10 	vmov	s16, r3
 800313a:	f7ff ff3b 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 800313e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8003142:	4618      	mov	r0, r3
 8003144:	ee08 3a90 	vmov	s17, r3
 8003148:	f7ff ff34 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 800314c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8003150:	4618      	mov	r0, r3
 8003152:	ee09 3a10 	vmov	s18, r3
 8003156:	f010 f91b 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800315a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800315e:	4618      	mov	r0, r3
 8003160:	ee09 3a90 	vmov	s19, r3
 8003164:	f010 f914 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003168:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800316c:	4618      	mov	r0, r3
 800316e:	ee0a 3a10 	vmov	s20, r3
 8003172:	f010 f90d 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003176:	4a33      	ldr	r2, [pc, #204]	; (8003244 <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 8003178:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800317c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8003180:	4a31      	ldr	r2, [pc, #196]	; (8003248 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003182:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8003186:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800318a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800318e:	f010 ffbb 	bl	8014108 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8003192:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003196:	462a      	mov	r2, r5
 8003198:	4658      	mov	r0, fp
 800319a:	9300      	str	r3, [sp, #0]
 800319c:	4629      	mov	r1, r5
 800319e:	23f0      	movs	r3, #240	; 0xf0
 80031a0:	f7ff fee2 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80031a4:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80031a6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80031aa:	66a3      	str	r3, [r4, #104]	; 0x68
 80031ac:	4659      	mov	r1, fp
 80031ae:	4630      	mov	r0, r6
 80031b0:	f00d fa1e 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80031b4:	462a      	mov	r2, r5
 80031b6:	4650      	mov	r0, sl
 80031b8:	4629      	mov	r1, r5
 80031ba:	f7ff fec8 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 80031be:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80031c0:	4650      	mov	r0, sl
 80031c2:	a90a      	add	r1, sp, #40	; 0x28
 80031c4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80031c8:	f00f ffa1 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80031cc:	4651      	mov	r1, sl
 80031ce:	4630      	mov	r0, r6
 80031d0:	f00d fa0e 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 80031d4:	f44f 729a 	mov.w	r2, #308	; 0x134
 80031d8:	2159      	movs	r1, #89	; 0x59
 80031da:	4648      	mov	r0, r9
 80031dc:	f7ff feb7 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80031e0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80031e4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80031e8:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80031ec:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80031f0:	4650      	mov	r0, sl
 80031f2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80031f6:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80031fa:	4649      	mov	r1, r9
 80031fc:	4798      	blx	r3
 80031fe:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8003202:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8003206:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800320a:	4b10      	ldr	r3, [pc, #64]	; (800324c <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 800320c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 800320e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8003212:	b92b      	cbnz	r3, 8003220 <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 8003214:	4b0e      	ldr	r3, [pc, #56]	; (8003250 <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 8003216:	4a0f      	ldr	r2, [pc, #60]	; (8003254 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8003218:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800321a:	480f      	ldr	r0, [pc, #60]	; (8003258 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 800321c:	f027 fbde 	bl	802a9dc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003220:	4b0e      	ldr	r3, [pc, #56]	; (800325c <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003222:	881b      	ldrh	r3, [r3, #0]
 8003224:	2b24      	cmp	r3, #36	; 0x24
 8003226:	d81d      	bhi.n	8003264 <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 8003228:	4b0d      	ldr	r3, [pc, #52]	; (8003260 <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 800322a:	4a0a      	ldr	r2, [pc, #40]	; (8003254 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 800322c:	2161      	movs	r1, #97	; 0x61
 800322e:	e7f4      	b.n	800321a <_ZN19CalibrationViewBaseC1Ev+0x19a>
 8003230:	0802c688 	.word	0x0802c688
 8003234:	0802ef30 	.word	0x0802ef30
 8003238:	0802f0f8 	.word	0x0802f0f8
 800323c:	0802c5e0 	.word	0x0802c5e0
 8003240:	0802ec64 	.word	0x0802ec64
 8003244:	0802c670 	.word	0x0802c670
 8003248:	08002f05 	.word	0x08002f05
 800324c:	20012e0c 	.word	0x20012e0c
 8003250:	0802c420 	.word	0x0802c420
 8003254:	0802c522 	.word	0x0802c522
 8003258:	0802c49d 	.word	0x0802c49d
 800325c:	20012e10 	.word	0x20012e10
 8003260:	0802c4e4 	.word	0x0802c4e4
        return texts->getText(typedTextId);
 8003264:	4b93      	ldr	r3, [pc, #588]	; (80034b4 <_ZN19CalibrationViewBaseC1Ev+0x434>)
 8003266:	2124      	movs	r1, #36	; 0x24
 8003268:	6818      	ldr	r0, [r3, #0]
 800326a:	f005 fe53 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 800326e:	4a92      	ldr	r2, [pc, #584]	; (80034b8 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 8003270:	4603      	mov	r3, r0
 8003272:	2104      	movs	r1, #4
 8003274:	4650      	mov	r0, sl
 8003276:	f015 fdc3 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 800327a:	4648      	mov	r0, r9
        wc1 = value;
 800327c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8003280:	f00f fb4a 	bl	8012918 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003284:	4b8d      	ldr	r3, [pc, #564]	; (80034bc <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 8003286:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 8003288:	a90a      	add	r1, sp, #40	; 0x28
 800328a:	2325      	movs	r3, #37	; 0x25
 800328c:	4648      	mov	r0, r9
 800328e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003292:	f00f fb61 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003296:	4649      	mov	r1, r9
 8003298:	4630      	mov	r0, r6
 800329a:	f00d f9a9 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800329e:	230a      	movs	r3, #10
 80032a0:	9300      	str	r3, [sp, #0]
 80032a2:	2232      	movs	r2, #50	; 0x32
 80032a4:	23f0      	movs	r3, #240	; 0xf0
 80032a6:	4629      	mov	r1, r5
 80032a8:	4638      	mov	r0, r7
 80032aa:	f7ff fe5d 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 80032ae:	9b03      	ldr	r3, [sp, #12]
 80032b0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80032b4:	22a0      	movs	r2, #160	; 0xa0
 80032b6:	4611      	mov	r1, r2
 80032b8:	4638      	mov	r0, r7
 80032ba:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80032be:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80032c2:	f00e ff03 	bl	80120cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80032c6:	22a0      	movs	r2, #160	; 0xa0
 80032c8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80032cc:	4638      	mov	r0, r7
 80032ce:	f00e ff08 	bl	80120e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 80032d2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80032d6:	2b20      	cmp	r3, #32
 80032d8:	d005      	beq.n	80032e6 <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 80032da:	2320      	movs	r3, #32
 80032dc:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 80032e0:	4638      	mov	r0, r7
 80032e2:	f00e fdfd 	bl	8011ee0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80032e6:	4638      	mov	r0, r7
 80032e8:	2101      	movs	r1, #1
 80032ea:	f00e ff05 	bl	80120f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80032ee:	4639      	mov	r1, r7
 80032f0:	4630      	mov	r0, r6
 80032f2:	ad04      	add	r5, sp, #16
        color = newColor;
 80032f4:	f04f 37ff 	mov.w	r7, #4294967295
 80032f8:	f00d f97a 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80032fc:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 8003300:	223c      	movs	r2, #60	; 0x3c
 8003302:	4640      	mov	r0, r8
 8003304:	2146      	movs	r1, #70	; 0x46
 8003306:	f7ff fe22 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800330a:	4641      	mov	r1, r8
 800330c:	4628      	mov	r0, r5
        color = newColor;
 800330e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8003312:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8003316:	f00f f885 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800331a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800331e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8003322:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003326:	f8df 9194 	ldr.w	r9, [pc, #404]	; 80034bc <_ZN19CalibrationViewBaseC1Ev+0x43c>
 800332a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800332e:	231d      	movs	r3, #29
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 8003330:	a90a      	add	r1, sp, #40	; 0x28
 8003332:	4640      	mov	r0, r8
 8003334:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003338:	f00f fb0e 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800333c:	4641      	mov	r1, r8
 800333e:	4630      	mov	r0, r6
 8003340:	f00d f956 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8003344:	ee18 0a10 	vmov	r0, s16
 8003348:	2223      	movs	r2, #35	; 0x23
 800334a:	2145      	movs	r1, #69	; 0x45
 800334c:	f7ff fdff 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8003350:	ee18 1a10 	vmov	r1, s16
 8003354:	4628      	mov	r0, r5
        color = newColor;
 8003356:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 800335a:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800335e:	f00f f861 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003362:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003366:	ee18 3a10 	vmov	r3, s16
 800336a:	333c      	adds	r3, #60	; 0x3c
 800336c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003370:	235a      	movs	r3, #90	; 0x5a
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 8003372:	ee18 0a10 	vmov	r0, s16
 8003376:	a90a      	add	r1, sp, #40	; 0x28
 8003378:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800337c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8003380:	f00f faea 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003384:	ee18 1a10 	vmov	r1, s16
 8003388:	4630      	mov	r0, r6
 800338a:	f00d f931 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800338e:	ee18 0a90 	vmov	r0, s17
 8003392:	220c      	movs	r2, #12
 8003394:	2136      	movs	r1, #54	; 0x36
 8003396:	f7ff fdda 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 800339a:	ee18 1a90 	vmov	r1, s17
 800339e:	4628      	mov	r0, r5
        color = newColor;
 80033a0:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80033a4:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80033a8:	f00f f83c 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80033ac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80033b0:	ee18 3a90 	vmov	r3, s17
 80033b4:	333c      	adds	r3, #60	; 0x3c
 80033b6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80033ba:	2359      	movs	r3, #89	; 0x59
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 80033bc:	ee18 0a90 	vmov	r0, s17
 80033c0:	a90a      	add	r1, sp, #40	; 0x28
 80033c2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80033c6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80033ca:	f00f fac5 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80033ce:	ee18 1a90 	vmov	r1, s17
 80033d2:	4630      	mov	r0, r6
 80033d4:	f00d f90c 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80033d8:	ee19 0a10 	vmov	r0, s18
 80033dc:	22f0      	movs	r2, #240	; 0xf0
 80033de:	2121      	movs	r1, #33	; 0x21
 80033e0:	f7ff fdb5 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 80033e4:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80033e8:	aa0a      	add	r2, sp, #40	; 0x28
 80033ea:	f04f 0802 	mov.w	r8, #2
 80033ee:	a909      	add	r1, sp, #36	; 0x24
 80033f0:	ee19 0a10 	vmov	r0, s18
 80033f4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80033f8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80033fc:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003400:	f00f fc8f 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003404:	2358      	movs	r3, #88	; 0x58
 8003406:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800340a:	3510      	adds	r5, #16
        updateTextPosition();
 800340c:	ee19 0a10 	vmov	r0, s18
 8003410:	f7ff fdf2 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8003414:	ee19 1a10 	vmov	r1, s18
 8003418:	4630      	mov	r0, r6
        colorPressed = col;
 800341a:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 800341e:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8003422:	f00d f8e5 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8003426:	ee19 0a90 	vmov	r0, s19
 800342a:	22aa      	movs	r2, #170	; 0xaa
 800342c:	2121      	movs	r1, #33	; 0x21
 800342e:	f7ff fd8e 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003432:	aa0a      	add	r2, sp, #40	; 0x28
 8003434:	a909      	add	r1, sp, #36	; 0x24
 8003436:	ee19 0a90 	vmov	r0, s19
 800343a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800343e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8003442:	f00f fc6e 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003446:	2357      	movs	r3, #87	; 0x57
 8003448:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 800344c:	ee19 0a90 	vmov	r0, s19
 8003450:	f7ff fdd2 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8003454:	ee19 1a90 	vmov	r1, s19
 8003458:	4630      	mov	r0, r6
        colorPressed = col;
 800345a:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 800345e:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8003462:	f00d f8c5 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8003466:	ee1a 0a10 	vmov	r0, s20
 800346a:	2264      	movs	r2, #100	; 0x64
 800346c:	2121      	movs	r1, #33	; 0x21
 800346e:	f7ff fd6e 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003472:	aa0a      	add	r2, sp, #40	; 0x28
 8003474:	a909      	add	r1, sp, #36	; 0x24
 8003476:	ee1a 0a10 	vmov	r0, s20
 800347a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800347e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8003482:	f00f fc4e 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003486:	2356      	movs	r3, #86	; 0x56
        updateTextPosition();
 8003488:	ee1a 0a10 	vmov	r0, s20
 800348c:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8003490:	f7ff fdb2 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8003494:	4630      	mov	r0, r6
        colorPressed = col;
 8003496:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 800349a:	ee1a 1a10 	vmov	r1, s20
 800349e:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80034a2:	f00d f8a5 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80034a6:	4620      	mov	r0, r4
 80034a8:	b00d      	add	sp, #52	; 0x34
 80034aa:	ecbd 8b06 	vpop	{d8-d10}
 80034ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80034b2:	bf00      	nop
 80034b4:	20012e18 	.word	0x20012e18
 80034b8:	0802c55a 	.word	0x0802c55a
 80034bc:	0802c5d0 	.word	0x0802c5d0

080034c0 <_ZN24Calibration_HallViewBase25function_cali_hall_sensorEv>:
     * Virtual Action Handlers
     */
    virtual void function_cali_hall_sensor()
    {
        // Override and implement this function in Calibration_Hall
    }
 80034c0:	4770      	bx	lr

080034c2 <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 80034c2:	4770      	bx	lr

080034c4 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80034c4:	4770      	bx	lr

080034c6 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80034c6:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80034c8:	68c2      	ldr	r2, [r0, #12]
 80034ca:	6844      	ldr	r4, [r0, #4]
 80034cc:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80034ce:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80034d0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80034d4:	07d2      	lsls	r2, r2, #31
 80034d6:	bf48      	it	mi
 80034d8:	5962      	ldrmi	r2, [r4, r5]
 80034da:	689b      	ldr	r3, [r3, #8]
    }
 80034dc:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80034de:	bf48      	it	mi
 80034e0:	58d3      	ldrmi	r3, [r2, r3]
 80034e2:	4718      	bx	r3

080034e4 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80034e4:	6843      	ldr	r3, [r0, #4]
 80034e6:	b12b      	cbz	r3, 80034f4 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80034e8:	6883      	ldr	r3, [r0, #8]
 80034ea:	b92b      	cbnz	r3, 80034f8 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80034ec:	68c0      	ldr	r0, [r0, #12]
 80034ee:	f000 0001 	and.w	r0, r0, #1
 80034f2:	4770      	bx	lr
 80034f4:	4618      	mov	r0, r3
 80034f6:	4770      	bx	lr
 80034f8:	2001      	movs	r0, #1
    }
 80034fa:	4770      	bx	lr

080034fc <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80034fc:	b510      	push	{r4, lr}
 80034fe:	2110      	movs	r1, #16
 8003500:	4604      	mov	r4, r0
 8003502:	f026 fb84 	bl	8029c0e <_ZdlPvj>
 8003506:	4620      	mov	r0, r4
 8003508:	bd10      	pop	{r4, pc}
	...

0800350c <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 800350c:	b510      	push	{r4, lr}
 800350e:	4b03      	ldr	r3, [pc, #12]	; (800351c <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 8003510:	6003      	str	r3, [r0, #0]
 8003512:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003514:	f010 fe02 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003518:	4620      	mov	r0, r4
 800351a:	bd10      	pop	{r4, pc}
 800351c:	0802c6d4 	.word	0x0802c6d4

08003520 <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8003520:	b507      	push	{r0, r1, r2, lr}
 8003522:	4b07      	ldr	r3, [pc, #28]	; (8003540 <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 8003524:	6003      	str	r3, [r0, #0]
 8003526:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003528:	f010 fdf8 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800352c:	9801      	ldr	r0, [sp, #4]
 800352e:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 8003532:	f026 fb6c 	bl	8029c0e <_ZdlPvj>
 8003536:	9801      	ldr	r0, [sp, #4]
 8003538:	b003      	add	sp, #12
 800353a:	f85d fb04 	ldr.w	pc, [sp], #4
 800353e:	bf00      	nop
 8003540:	0802c6d4 	.word	0x0802c6d4

08003544 <_ZN24Calibration_HallViewBase15handleTickEventEv>:
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}

void Calibration_HallViewBase::handleTickEvent()
{
 8003544:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8003546:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 800354a:	f8d4 21dc 	ldr.w	r2, [r4, #476]	; 0x1dc
 800354e:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8003550:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8003552:	f8c4 21dc 	str.w	r2, [r4, #476]	; 0x1dc
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8003556:	d105      	bne.n	8003564 <_ZN24Calibration_HallViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call function_cali_hall_sensor
        function_cali_hall_sensor();
 8003558:	6803      	ldr	r3, [r0, #0]
 800355a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800355c:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 800355e:	2300      	movs	r3, #0
 8003560:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
    }
}
 8003564:	bd10      	pop	{r4, pc}

08003566 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8003566:	f500 70e4 	add.w	r0, r0, #456	; 0x1c8
 800356a:	4288      	cmp	r0, r1
{
 800356c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800356e:	d105      	bne.n	800357c <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003570:	f012 fad6 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003574:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8003578:	f001 b970 	b.w	800485c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 800357c:	bd08      	pop	{r3, pc}
	...

08003580 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003580:	b510      	push	{r4, lr}
 8003582:	4604      	mov	r4, r0
        : TextArea()
 8003584:	f7ff fd16 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8003588:	4b02      	ldr	r3, [pc, #8]	; (8003594 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 800358a:	6023      	str	r3, [r4, #0]
 800358c:	2300      	movs	r3, #0
 800358e:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8003590:	4620      	mov	r0, r4
 8003592:	bd10      	pop	{r4, pc}
 8003594:	0802c5e0 	.word	0x0802c5e0

08003598 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8003598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800359c:	ed2d 8b06 	vpush	{d8-d10}
 80035a0:	4604      	mov	r4, r0
 80035a2:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 80035a4:	46a3      	mov	fp, r4
 80035a6:	2500      	movs	r5, #0
 80035a8:	f013 ff3a 	bl	8017420 <_ZN8touchgfx6ScreenC1Ev>
 80035ac:	4b69      	ldr	r3, [pc, #420]	; (8003754 <_ZN24Calibration_HallViewBaseC1Ev+0x1bc>)
 80035ae:	63e5      	str	r5, [r4, #60]	; 0x3c
 80035b0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80035b4:	2226      	movs	r2, #38	; 0x26
 80035b6:	4629      	mov	r1, r5
 80035b8:	4658      	mov	r0, fp
 80035ba:	f027 fc14 	bl	802ade6 <memset>
 80035be:	4658      	mov	r0, fp
 80035c0:	f7ff fce6 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 80035c4:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 80035c8:	27ff      	movs	r7, #255	; 0xff
 80035ca:	4b63      	ldr	r3, [pc, #396]	; (8003758 <_ZN24Calibration_HallViewBaseC1Ev+0x1c0>)
 80035cc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80035ce:	2226      	movs	r2, #38	; 0x26
 80035d0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80035d4:	4629      	mov	r1, r5
 80035d6:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 80035da:	4630      	mov	r0, r6
 80035dc:	66a5      	str	r5, [r4, #104]	; 0x68
 80035de:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80035e2:	f027 fc00 	bl	802ade6 <memset>
 80035e6:	4630      	mov	r0, r6
 80035e8:	f7ff fcd2 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 80035ec:	4b5b      	ldr	r3, [pc, #364]	; (800375c <_ZN24Calibration_HallViewBaseC1Ev+0x1c4>)
 80035ee:	66e3      	str	r3, [r4, #108]	; 0x6c
 80035f0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80035f4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80035f8:	a90a      	add	r1, sp, #40	; 0x28
 80035fa:	4630      	mov	r0, r6
 80035fc:	f104 0a98 	add.w	sl, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8003600:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003604:	f00f fd83 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003608:	f104 09e4 	add.w	r9, r4, #228	; 0xe4
 800360c:	4650      	mov	r0, sl
 800360e:	f7ff ffb7 	bl	8003580 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003612:	4648      	mov	r0, r9
 8003614:	f7ff ffb4 	bl	8003580 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003618:	f504 7398 	add.w	r3, r4, #304	; 0x130
 800361c:	4618      	mov	r0, r3
 800361e:	ee09 3a10 	vmov	s18, r3
 8003622:	f7ff ffad 	bl	8003580 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003626:	f504 73be 	add.w	r3, r4, #380	; 0x17c
 800362a:	4618      	mov	r0, r3
 800362c:	ee09 3a90 	vmov	s19, r3
 8003630:	f7ff ffa6 	bl	8003580 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003634:	f504 73e4 	add.w	r3, r4, #456	; 0x1c8
 8003638:	4618      	mov	r0, r3
 800363a:	ee0a 3a10 	vmov	s20, r3
 800363e:	f00f fea7 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003642:	f504 7304 	add.w	r3, r4, #528	; 0x210
 8003646:	4618      	mov	r0, r3
 8003648:	f504 7816 	add.w	r8, r4, #600	; 0x258
 800364c:	ee0a 3a90 	vmov	s21, r3
 8003650:	f7ff fcb0 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8003654:	4640      	mov	r0, r8
 8003656:	f00e fc23 	bl	8011ea0 <_ZN8touchgfx4LineC1Ev>
 800365a:	f504 7332 	add.w	r3, r4, #712	; 0x2c8
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800365e:	4618      	mov	r0, r3
 8003660:	9302      	str	r3, [sp, #8]
 8003662:	f7fe f825 	bl	80016b0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003666:	4b3e      	ldr	r3, [pc, #248]	; (8003760 <_ZN24Calibration_HallViewBaseC1Ev+0x1c8>)
 8003668:	f8c4 32c8 	str.w	r3, [r4, #712]	; 0x2c8
 800366c:	3324      	adds	r3, #36	; 0x24
 800366e:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
 8003672:	f504 7337 	add.w	r3, r4, #732	; 0x2dc
 8003676:	4618      	mov	r0, r3
 8003678:	f8c4 52d4 	str.w	r5, [r4, #724]	; 0x2d4
 800367c:	ee08 3a10 	vmov	s16, r3
 8003680:	f7ff fc98 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8003684:	f504 7349 	add.w	r3, r4, #804	; 0x324
 8003688:	4618      	mov	r0, r3
 800368a:	ee08 3a90 	vmov	s17, r3
 800368e:	f7ff fc91 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003692:	4a34      	ldr	r2, [pc, #208]	; (8003764 <_ZN24Calibration_HallViewBaseC1Ev+0x1cc>)
 8003694:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003698:	e9c3 2473 	strd	r2, r4, [r3, #460]	; 0x1cc
 800369c:	4a32      	ldr	r2, [pc, #200]	; (8003768 <_ZN24Calibration_HallViewBaseC1Ev+0x1d0>)
 800369e:	f8c3 51dc 	str.w	r5, [r3, #476]	; 0x1dc
 80036a2:	e9c3 2575 	strd	r2, r5, [r3, #468]	; 0x1d4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80036a6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80036aa:	f504 706f 	add.w	r0, r4, #956	; 0x3bc
 80036ae:	f010 fd2b 	bl	8014108 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80036b2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80036b6:	462a      	mov	r2, r5
 80036b8:	4658      	mov	r0, fp
 80036ba:	9300      	str	r3, [sp, #0]
 80036bc:	4629      	mov	r1, r5
 80036be:	23f0      	movs	r3, #240	; 0xf0
 80036c0:	f7ff fc52 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 80036c4:	1d27      	adds	r7, r4, #4
        color = newColor;
 80036c6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80036ca:	66a3      	str	r3, [r4, #104]	; 0x68
 80036cc:	4659      	mov	r1, fp
 80036ce:	4638      	mov	r0, r7
 80036d0:	f00c ff8e 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80036d4:	462a      	mov	r2, r5
 80036d6:	4630      	mov	r0, r6
 80036d8:	4629      	mov	r1, r5
 80036da:	f7ff fc38 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 80036de:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80036e0:	4630      	mov	r0, r6
 80036e2:	a90a      	add	r1, sp, #40	; 0x28
 80036e4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80036e8:	f00f fd11 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80036ec:	4631      	mov	r1, r6
 80036ee:	4638      	mov	r0, r7
 80036f0:	f00c ff7e 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSL_S.setPosition(0, 160, 207, 27);
 80036f4:	231b      	movs	r3, #27
 80036f6:	22a0      	movs	r2, #160	; 0xa0
 80036f8:	9300      	str	r3, [sp, #0]
 80036fa:	4629      	mov	r1, r5
 80036fc:	23cf      	movs	r3, #207	; 0xcf
 80036fe:	4650      	mov	r0, sl
 8003700:	f7ff fc32 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003704:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8003708:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800370c:	ae04      	add	r6, sp, #16
        color = newColor;
 800370e:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8003712:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003716:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800371a:	4651      	mov	r1, sl
 800371c:	4630      	mov	r0, r6
 800371e:	4798      	blx	r3
 8003720:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003724:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8003728:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(CALIBRATION_HSL_SBuffer, CALIBRATION_HSL_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_96IR).getText());
 800372c:	f504 735b 	add.w	r3, r4, #876	; 0x36c
 8003730:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003732:	4b0e      	ldr	r3, [pc, #56]	; (800376c <_ZN24Calibration_HallViewBaseC1Ev+0x1d4>)
 8003734:	681b      	ldr	r3, [r3, #0]
 8003736:	b92b      	cbnz	r3, 8003744 <_ZN24Calibration_HallViewBaseC1Ev+0x1ac>
 8003738:	4b0d      	ldr	r3, [pc, #52]	; (8003770 <_ZN24Calibration_HallViewBaseC1Ev+0x1d8>)
 800373a:	4a0e      	ldr	r2, [pc, #56]	; (8003774 <_ZN24Calibration_HallViewBaseC1Ev+0x1dc>)
 800373c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800373e:	480e      	ldr	r0, [pc, #56]	; (8003778 <_ZN24Calibration_HallViewBaseC1Ev+0x1e0>)
 8003740:	f027 f94c 	bl	802a9dc <__assert_func>
 8003744:	4b0d      	ldr	r3, [pc, #52]	; (800377c <_ZN24Calibration_HallViewBaseC1Ev+0x1e4>)
 8003746:	881b      	ldrh	r3, [r3, #0]
 8003748:	b9e3      	cbnz	r3, 8003784 <_ZN24Calibration_HallViewBaseC1Ev+0x1ec>
 800374a:	4b0d      	ldr	r3, [pc, #52]	; (8003780 <_ZN24Calibration_HallViewBaseC1Ev+0x1e8>)
 800374c:	4a09      	ldr	r2, [pc, #36]	; (8003774 <_ZN24Calibration_HallViewBaseC1Ev+0x1dc>)
 800374e:	2161      	movs	r1, #97	; 0x61
 8003750:	e7f5      	b.n	800373e <_ZN24Calibration_HallViewBaseC1Ev+0x1a6>
 8003752:	bf00      	nop
 8003754:	0802c6d4 	.word	0x0802c6d4
 8003758:	0802ef30 	.word	0x0802ef30
 800375c:	0802f0f8 	.word	0x0802f0f8
 8003760:	0802ec64 	.word	0x0802ec64
 8003764:	0802c6bc 	.word	0x0802c6bc
 8003768:	08003567 	.word	0x08003567
 800376c:	20012e0c 	.word	0x20012e0c
 8003770:	0802c420 	.word	0x0802c420
 8003774:	0802c522 	.word	0x0802c522
 8003778:	0802c49d 	.word	0x0802c49d
 800377c:	20012e10 	.word	0x20012e10
 8003780:	0802c4e4 	.word	0x0802c4e4
        return texts->getText(typedTextId);
 8003784:	4bd7      	ldr	r3, [pc, #860]	; (8003ae4 <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 8003786:	4629      	mov	r1, r5
 8003788:	6818      	ldr	r0, [r3, #0]
 800378a:	f005 fbc3 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 800378e:	4ad6      	ldr	r2, [pc, #856]	; (8003ae8 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 8003790:	4603      	mov	r3, r0
 8003792:	210a      	movs	r1, #10
 8003794:	9803      	ldr	r0, [sp, #12]
 8003796:	f015 fb33 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800379a:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 800379c:	4bd3      	ldr	r3, [pc, #844]	; (8003aec <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 800379e:	f8c4 10e0 	str.w	r1, [r4, #224]	; 0xe0
    CALIBRATION_HSL_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T1XZ));
 80037a2:	4650      	mov	r0, sl
 80037a4:	930a      	str	r3, [sp, #40]	; 0x28
 80037a6:	a90a      	add	r1, sp, #40	; 0x28
 80037a8:	2301      	movs	r3, #1
 80037aa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80037ae:	f00f f8d3 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80037b2:	4651      	mov	r1, sl
 80037b4:	4638      	mov	r0, r7
 80037b6:	f00c ff1b 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSL_F.setPosition(25, 187, 207, 22);
 80037ba:	2116      	movs	r1, #22
 80037bc:	22bb      	movs	r2, #187	; 0xbb
 80037be:	9100      	str	r1, [sp, #0]
 80037c0:	23cf      	movs	r3, #207	; 0xcf
 80037c2:	2119      	movs	r1, #25
 80037c4:	4648      	mov	r0, r9
 80037c6:	f7ff fbcf 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 80037ca:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
        color = newColor;
 80037ce:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80037d2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80037d6:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 80037da:	4649      	mov	r1, r9
 80037dc:	4630      	mov	r0, r6
 80037de:	4798      	blx	r3
 80037e0:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80037e4:	f504 7390 	add.w	r3, r4, #288	; 0x120
 80037e8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80037ec:	49c0      	ldr	r1, [pc, #768]	; (8003af0 <_ZN24Calibration_HallViewBaseC1Ev+0x558>)
 80037ee:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_HSL_FBuffer, CALIBRATION_HSL_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PU07).getText());
 80037f0:	f504 7a60 	add.w	sl, r4, #896	; 0x380
 80037f4:	2b00      	cmp	r3, #0
 80037f6:	d09f      	beq.n	8003738 <_ZN24Calibration_HallViewBaseC1Ev+0x1a0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80037f8:	48be      	ldr	r0, [pc, #760]	; (8003af4 <_ZN24Calibration_HallViewBaseC1Ev+0x55c>)
 80037fa:	8803      	ldrh	r3, [r0, #0]
 80037fc:	2b02      	cmp	r3, #2
 80037fe:	d9a4      	bls.n	800374a <_ZN24Calibration_HallViewBaseC1Ev+0x1b2>
        return texts->getText(typedTextId);
 8003800:	4ab8      	ldr	r2, [pc, #736]	; (8003ae4 <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 8003802:	2102      	movs	r1, #2
 8003804:	6810      	ldr	r0, [r2, #0]
 8003806:	f005 fb85 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 800380a:	4ab7      	ldr	r2, [pc, #732]	; (8003ae8 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 800380c:	4603      	mov	r3, r0
 800380e:	210a      	movs	r1, #10
 8003810:	4650      	mov	r0, sl
 8003812:	f015 faf5 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    CALIBRATION_HSL_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AFGX));
 8003816:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 800381a:	4bb4      	ldr	r3, [pc, #720]	; (8003aec <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 800381c:	f8c4 a12c 	str.w	sl, [r4, #300]	; 0x12c
 8003820:	4661      	mov	r1, ip
 8003822:	4648      	mov	r0, r9
 8003824:	f04f 0a03 	mov.w	sl, #3
 8003828:	930a      	str	r3, [sp, #40]	; 0x28
 800382a:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 800382e:	f00f f893 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003832:	4649      	mov	r1, r9
 8003834:	4638      	mov	r0, r7
 8003836:	f00c fedb 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSR_F.setPosition(25, 119, 207, 22);
 800383a:	f04f 0c16 	mov.w	ip, #22
 800383e:	2277      	movs	r2, #119	; 0x77
 8003840:	ee19 0a10 	vmov	r0, s18
 8003844:	f8cd c000 	str.w	ip, [sp]
 8003848:	23cf      	movs	r3, #207	; 0xcf
 800384a:	2119      	movs	r1, #25
 800384c:	f7ff fb8c 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003850:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
        color = newColor;
 8003854:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        boundingArea = calculateBoundingArea();
 8003858:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800385c:	f8a4 5164 	strh.w	r5, [r4, #356]	; 0x164
        boundingArea = calculateBoundingArea();
 8003860:	ee19 1a10 	vmov	r1, s18
 8003864:	4630      	mov	r0, r6
 8003866:	4798      	blx	r3
 8003868:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800386c:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8003870:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003874:	499e      	ldr	r1, [pc, #632]	; (8003af0 <_ZN24Calibration_HallViewBaseC1Ev+0x558>)
 8003876:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_HSR_FBuffer, CALIBRATION_HSR_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IPYE).getText());
 8003878:	f504 7965 	add.w	r9, r4, #916	; 0x394
 800387c:	2b00      	cmp	r3, #0
 800387e:	f43f af5b 	beq.w	8003738 <_ZN24Calibration_HallViewBaseC1Ev+0x1a0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003882:	489c      	ldr	r0, [pc, #624]	; (8003af4 <_ZN24Calibration_HallViewBaseC1Ev+0x55c>)
 8003884:	8803      	ldrh	r3, [r0, #0]
 8003886:	2b04      	cmp	r3, #4
 8003888:	f67f af5f 	bls.w	800374a <_ZN24Calibration_HallViewBaseC1Ev+0x1b2>
        return texts->getText(typedTextId);
 800388c:	4a95      	ldr	r2, [pc, #596]	; (8003ae4 <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 800388e:	2104      	movs	r1, #4
 8003890:	6810      	ldr	r0, [r2, #0]
 8003892:	f005 fb3f 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 8003896:	4a94      	ldr	r2, [pc, #592]	; (8003ae8 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 8003898:	4603      	mov	r3, r0
 800389a:	210a      	movs	r1, #10
 800389c:	4648      	mov	r0, r9
 800389e:	f015 faaf 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    CALIBRATION_HSR_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0EGP));
 80038a2:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 80038a6:	4b91      	ldr	r3, [pc, #580]	; (8003aec <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 80038a8:	f8c4 9178 	str.w	r9, [r4, #376]	; 0x178
 80038ac:	4661      	mov	r1, ip
 80038ae:	ee19 0a10 	vmov	r0, s18
 80038b2:	930a      	str	r3, [sp, #40]	; 0x28
 80038b4:	2305      	movs	r3, #5
 80038b6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80038ba:	f00f f84d 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80038be:	ee19 1a10 	vmov	r1, s18
 80038c2:	4638      	mov	r0, r7
 80038c4:	f00c fe94 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSR_S.setPosition(0, 92, 207, 27);
 80038c8:	f04f 0c1b 	mov.w	ip, #27
 80038cc:	225c      	movs	r2, #92	; 0x5c
 80038ce:	ee19 0a90 	vmov	r0, s19
 80038d2:	f8cd c000 	str.w	ip, [sp]
 80038d6:	23cf      	movs	r3, #207	; 0xcf
 80038d8:	4629      	mov	r1, r5
 80038da:	f7ff fb45 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 80038de:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
        color = newColor;
 80038e2:	f8c4 b1ac 	str.w	fp, [r4, #428]	; 0x1ac
        boundingArea = calculateBoundingArea();
 80038e6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80038ea:	f8a4 51b0 	strh.w	r5, [r4, #432]	; 0x1b0
        boundingArea = calculateBoundingArea();
 80038ee:	ee19 1a90 	vmov	r1, s19
 80038f2:	4630      	mov	r0, r6
 80038f4:	4798      	blx	r3
 80038f6:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80038fa:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
 80038fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003902:	497b      	ldr	r1, [pc, #492]	; (8003af0 <_ZN24Calibration_HallViewBaseC1Ev+0x558>)
 8003904:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_HSR_SBuffer, CALIBRATION_HSR_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KCM3).getText());
 8003906:	f504 796a 	add.w	r9, r4, #936	; 0x3a8
 800390a:	2b00      	cmp	r3, #0
 800390c:	f43f af14 	beq.w	8003738 <_ZN24Calibration_HallViewBaseC1Ev+0x1a0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003910:	4878      	ldr	r0, [pc, #480]	; (8003af4 <_ZN24Calibration_HallViewBaseC1Ev+0x55c>)
 8003912:	8803      	ldrh	r3, [r0, #0]
 8003914:	2b06      	cmp	r3, #6
 8003916:	f67f af18 	bls.w	800374a <_ZN24Calibration_HallViewBaseC1Ev+0x1b2>
        return texts->getText(typedTextId);
 800391a:	4a72      	ldr	r2, [pc, #456]	; (8003ae4 <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 800391c:	2106      	movs	r1, #6
 800391e:	6810      	ldr	r0, [r2, #0]
 8003920:	f005 faf8 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 8003924:	4a70      	ldr	r2, [pc, #448]	; (8003ae8 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 8003926:	4603      	mov	r3, r0
 8003928:	210a      	movs	r1, #10
 800392a:	4648      	mov	r0, r9
 800392c:	f015 fa68 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003930:	4b6e      	ldr	r3, [pc, #440]	; (8003aec <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003932:	930a      	str	r3, [sp, #40]	; 0x28
    CALIBRATION_HSR_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2MWJ));
 8003934:	ee19 0a90 	vmov	r0, s19
 8003938:	2307      	movs	r3, #7
 800393a:	a90a      	add	r1, sp, #40	; 0x28
 800393c:	f8c4 91c4 	str.w	r9, [r4, #452]	; 0x1c4
 8003940:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003944:	f00f f808 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003948:	ee19 1a90 	vmov	r1, s19
 800394c:	4638      	mov	r0, r7
 800394e:	f00c fe4f 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8003952:	ee1a 0a10 	vmov	r0, s20
 8003956:	f240 1201 	movw	r2, #257	; 0x101
 800395a:	2121      	movs	r1, #33	; 0x21
 800395c:	f7ff faf7 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003960:	aa0a      	add	r2, sp, #40	; 0x28
 8003962:	2302      	movs	r3, #2
 8003964:	a909      	add	r1, sp, #36	; 0x24
 8003966:	ee1a 0a10 	vmov	r0, s20
 800396a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800396e:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8003972:	f00f f9d6 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003976:	2319      	movs	r3, #25
        updateTextPosition();
 8003978:	ee1a 0a10 	vmov	r0, s20
 800397c:	f8a4 3200 	strh.w	r3, [r4, #512]	; 0x200
 8003980:	f7ff fb3a 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8003984:	f504 538e 	add.w	r3, r4, #4544	; 0x11c0
 8003988:	330c      	adds	r3, #12
 800398a:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
 800398e:	ee1a 1a10 	vmov	r1, s20
 8003992:	4638      	mov	r0, r7
        colorPressed = col;
 8003994:	e9c4 bb81 	strd	fp, fp, [r4, #516]	; 0x204
 8003998:	f00c fe2a 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(32, 60);
 800399c:	223c      	movs	r2, #60	; 0x3c
 800399e:	ee1a 0a90 	vmov	r0, s21
 80039a2:	2120      	movs	r1, #32
 80039a4:	f7ff fad3 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 80039a8:	ee1a 1a90 	vmov	r1, s21
 80039ac:	4630      	mov	r0, r6
        color = newColor;
 80039ae:	f8c4 b240 	str.w	fp, [r4, #576]	; 0x240
        linespace = space;
 80039b2:	f8a4 5244 	strh.w	r5, [r4, #580]	; 0x244
        boundingArea = calculateBoundingArea();
 80039b6:	f00e fd35 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80039ba:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80039be:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 80039c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80039c6:	4b49      	ldr	r3, [pc, #292]	; (8003aec <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 80039c8:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 80039ca:	ee1a 0a90 	vmov	r0, s21
 80039ce:	231a      	movs	r3, #26
 80039d0:	a90a      	add	r1, sp, #40	; 0x28
 80039d2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80039d6:	f00e ffbf 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80039da:	ee1a 1a90 	vmov	r1, s21
 80039de:	4638      	mov	r0, r7
 80039e0:	f00c fe06 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80039e4:	230a      	movs	r3, #10
 80039e6:	9300      	str	r3, [sp, #0]
 80039e8:	2232      	movs	r2, #50	; 0x32
 80039ea:	23f0      	movs	r3, #240	; 0xf0
 80039ec:	4629      	mov	r1, r5
 80039ee:	4640      	mov	r0, r8
 80039f0:	f7ff faba 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 80039f4:	9b02      	ldr	r3, [sp, #8]
 80039f6:	f8c4 3280 	str.w	r3, [r4, #640]	; 0x280
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80039fa:	22a0      	movs	r2, #160	; 0xa0
 80039fc:	4611      	mov	r1, r2
 80039fe:	4640      	mov	r0, r8
 8003a00:	f8c4 b2d4 	str.w	fp, [r4, #724]	; 0x2d4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003a04:	f8a4 b2d8 	strh.w	fp, [r4, #728]	; 0x2d8
 8003a08:	f00e fb60 	bl	80120cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003a0c:	22a0      	movs	r2, #160	; 0xa0
 8003a0e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003a12:	4640      	mov	r0, r8
 8003a14:	f00e fb65 	bl	80120e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8003a18:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 8003a1c:	2b20      	cmp	r3, #32
 8003a1e:	d005      	beq.n	8003a2c <_ZN24Calibration_HallViewBaseC1Ev+0x494>
        lineWidthQ5 = widthQ5;
 8003a20:	2320      	movs	r3, #32
 8003a22:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
        updateCachedShape();
 8003a26:	4640      	mov	r0, r8
 8003a28:	f00e fa5a 	bl	8011ee0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003a2c:	4640      	mov	r0, r8
 8003a2e:	2101      	movs	r1, #1
 8003a30:	f00e fb62 	bl	80120f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003a34:	4641      	mov	r1, r8
 8003a36:	4638      	mov	r0, r7
 8003a38:	f00c fdda 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003a3c:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8003a3e:	ee18 0a10 	vmov	r0, s16
 8003a42:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 8003a44:	f04f 39ff 	mov.w	r9, #4294967295
        linespace = space;
 8003a48:	f04f 0800 	mov.w	r8, #0
 8003a4c:	2145      	movs	r1, #69	; 0x45
 8003a4e:	f7ff fa7e 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003a52:	ee18 1a10 	vmov	r1, s16
 8003a56:	4628      	mov	r0, r5
        color = newColor;
 8003a58:	f8c4 930c 	str.w	r9, [r4, #780]	; 0x30c
        linespace = space;
 8003a5c:	f8a4 8310 	strh.w	r8, [r4, #784]	; 0x310
        boundingArea = calculateBoundingArea();
 8003a60:	f00e fce0 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003a64:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003a68:	ee18 3a10 	vmov	r3, s16
 8003a6c:	333c      	adds	r3, #60	; 0x3c
 8003a6e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003a72:	4e1e      	ldr	r6, [pc, #120]	; (8003aec <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003a74:	960a      	str	r6, [sp, #40]	; 0x28
 8003a76:	231b      	movs	r3, #27
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 8003a78:	ee18 0a10 	vmov	r0, s16
 8003a7c:	a90a      	add	r1, sp, #40	; 0x28
 8003a7e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003a82:	f00e ff69 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003a86:	ee18 1a10 	vmov	r1, s16
 8003a8a:	4638      	mov	r0, r7
 8003a8c:	f00c fdb0 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003a90:	ee18 0a90 	vmov	r0, s17
 8003a94:	220c      	movs	r2, #12
 8003a96:	2136      	movs	r1, #54	; 0x36
 8003a98:	f7ff fa59 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8003a9c:	ee18 1a90 	vmov	r1, s17
 8003aa0:	4628      	mov	r0, r5
        color = newColor;
 8003aa2:	f8c4 9354 	str.w	r9, [r4, #852]	; 0x354
        linespace = space;
 8003aa6:	f8a4 8358 	strh.w	r8, [r4, #856]	; 0x358
        boundingArea = calculateBoundingArea();
 8003aaa:	f00e fcbb 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003aae:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003ab2:	ee18 3a90 	vmov	r3, s17
 8003ab6:	333c      	adds	r3, #60	; 0x3c
 8003ab8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003abc:	231c      	movs	r3, #28
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 8003abe:	ee18 0a90 	vmov	r0, s17
 8003ac2:	a90a      	add	r1, sp, #40	; 0x28
 8003ac4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003ac8:	960a      	str	r6, [sp, #40]	; 0x28
 8003aca:	f00e ff45 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003ace:	4638      	mov	r0, r7
 8003ad0:	ee18 1a90 	vmov	r1, s17
 8003ad4:	f00c fd8c 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003ad8:	4620      	mov	r0, r4
 8003ada:	b00d      	add	sp, #52	; 0x34
 8003adc:	ecbd 8b06 	vpop	{d8-d10}
 8003ae0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003ae4:	20012e18 	.word	0x20012e18
 8003ae8:	0802c55a 	.word	0x0802c55a
 8003aec:	0802c5d0 	.word	0x0802c5d0
 8003af0:	20012e0c 	.word	0x20012e0c
 8003af4:	20012e10 	.word	0x20012e10

08003af8 <_ZN23Calibration_PadViewBase17function_cali_padEv>:
     * Virtual Action Handlers
     */
    virtual void function_cali_pad()
    {
        // Override and implement this function in Calibration_Pad
    }
 8003af8:	4770      	bx	lr

08003afa <_ZN23Calibration_PadViewBase11setupScreenEv>:
}

void Calibration_PadViewBase::setupScreen()
{

}
 8003afa:	4770      	bx	lr

08003afc <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003afc:	4770      	bx	lr

08003afe <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003afe:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003b00:	68c2      	ldr	r2, [r0, #12]
 8003b02:	6844      	ldr	r4, [r0, #4]
 8003b04:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003b06:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003b08:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003b0c:	07d2      	lsls	r2, r2, #31
 8003b0e:	bf48      	it	mi
 8003b10:	5962      	ldrmi	r2, [r4, r5]
 8003b12:	689b      	ldr	r3, [r3, #8]
    }
 8003b14:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003b16:	bf48      	it	mi
 8003b18:	58d3      	ldrmi	r3, [r2, r3]
 8003b1a:	4718      	bx	r3

08003b1c <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003b1c:	6843      	ldr	r3, [r0, #4]
 8003b1e:	b12b      	cbz	r3, 8003b2c <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003b20:	6883      	ldr	r3, [r0, #8]
 8003b22:	b92b      	cbnz	r3, 8003b30 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003b24:	68c0      	ldr	r0, [r0, #12]
 8003b26:	f000 0001 	and.w	r0, r0, #1
 8003b2a:	4770      	bx	lr
 8003b2c:	4618      	mov	r0, r3
 8003b2e:	4770      	bx	lr
 8003b30:	2001      	movs	r0, #1
    }
 8003b32:	4770      	bx	lr

08003b34 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003b34:	b510      	push	{r4, lr}
 8003b36:	2110      	movs	r1, #16
 8003b38:	4604      	mov	r4, r0
 8003b3a:	f026 f868 	bl	8029c0e <_ZdlPvj>
 8003b3e:	4620      	mov	r0, r4
 8003b40:	bd10      	pop	{r4, pc}
	...

08003b44 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003b44:	b510      	push	{r4, lr}
 8003b46:	4b03      	ldr	r3, [pc, #12]	; (8003b54 <_ZN23Calibration_PadViewBaseD1Ev+0x10>)
 8003b48:	6003      	str	r3, [r0, #0]
 8003b4a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003b4c:	f010 fae6 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003b50:	4620      	mov	r0, r4
 8003b52:	bd10      	pop	{r4, pc}
 8003b54:	0802c724 	.word	0x0802c724

08003b58 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003b58:	b507      	push	{r0, r1, r2, lr}
 8003b5a:	4b07      	ldr	r3, [pc, #28]	; (8003b78 <_ZN23Calibration_PadViewBaseD0Ev+0x20>)
 8003b5c:	6003      	str	r3, [r0, #0]
 8003b5e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003b60:	f010 fadc 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003b64:	9801      	ldr	r0, [sp, #4]
 8003b66:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 8003b6a:	f026 f850 	bl	8029c0e <_ZdlPvj>
 8003b6e:	9801      	ldr	r0, [sp, #4]
 8003b70:	b003      	add	sp, #12
 8003b72:	f85d fb04 	ldr.w	pc, [sp], #4
 8003b76:	bf00      	nop
 8003b78:	0802c724 	.word	0x0802c724

08003b7c <_ZN23Calibration_PadViewBase15handleTickEventEv>:
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}

void Calibration_PadViewBase::handleTickEvent()
{
 8003b7c:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8003b7e:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8003b82:	f8d4 21dc 	ldr.w	r2, [r4, #476]	; 0x1dc
 8003b86:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8003b88:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8003b8a:	f8c4 21dc 	str.w	r2, [r4, #476]	; 0x1dc
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8003b8e:	d105      	bne.n	8003b9c <_ZN23Calibration_PadViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call function_cali_pad
        function_cali_pad();
 8003b90:	6803      	ldr	r3, [r0, #0]
 8003b92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003b94:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8003b96:	2300      	movs	r3, #0
 8003b98:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
    }
}
 8003b9c:	bd10      	pop	{r4, pc}

08003b9e <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8003b9e:	f500 70e4 	add.w	r0, r0, #456	; 0x1c8
 8003ba2:	4288      	cmp	r0, r1
{
 8003ba4:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8003ba6:	d105      	bne.n	8003bb4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003ba8:	f011 ffba 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003bac:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8003bb0:	f000 be54 	b.w	800485c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8003bb4:	bd08      	pop	{r3, pc}
	...

08003bb8 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003bb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003bbc:	ed2d 8b06 	vpush	{d8-d10}
 8003bc0:	4604      	mov	r4, r0
 8003bc2:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8003bc4:	46a3      	mov	fp, r4
 8003bc6:	2600      	movs	r6, #0
 8003bc8:	f013 fc2a 	bl	8017420 <_ZN8touchgfx6ScreenC1Ev>
 8003bcc:	4b6a      	ldr	r3, [pc, #424]	; (8003d78 <_ZN23Calibration_PadViewBaseC1Ev+0x1c0>)
 8003bce:	63e6      	str	r6, [r4, #60]	; 0x3c
 8003bd0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8003bd4:	2226      	movs	r2, #38	; 0x26
 8003bd6:	4631      	mov	r1, r6
 8003bd8:	4658      	mov	r0, fp
 8003bda:	f027 f904 	bl	802ade6 <memset>
 8003bde:	4658      	mov	r0, fp
 8003be0:	f7ff f9d6 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 8003be4:	f104 056c 	add.w	r5, r4, #108	; 0x6c
 8003be8:	27ff      	movs	r7, #255	; 0xff
 8003bea:	4b64      	ldr	r3, [pc, #400]	; (8003d7c <_ZN23Calibration_PadViewBaseC1Ev+0x1c4>)
 8003bec:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8003bee:	2226      	movs	r2, #38	; 0x26
 8003bf0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003bf4:	4631      	mov	r1, r6
 8003bf6:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 8003bfa:	4628      	mov	r0, r5
 8003bfc:	66a6      	str	r6, [r4, #104]	; 0x68
 8003bfe:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003c02:	f027 f8f0 	bl	802ade6 <memset>
 8003c06:	4628      	mov	r0, r5
 8003c08:	f7ff f9c2 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 8003c0c:	4b5c      	ldr	r3, [pc, #368]	; (8003d80 <_ZN23Calibration_PadViewBaseC1Ev+0x1c8>)
 8003c0e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003c10:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8003c14:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003c18:	a90a      	add	r1, sp, #40	; 0x28
 8003c1a:	4628      	mov	r0, r5
 8003c1c:	f104 0a98 	add.w	sl, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8003c20:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003c24:	f00f fa73 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003c28:	f104 09e4 	add.w	r9, r4, #228	; 0xe4
 8003c2c:	4650      	mov	r0, sl
 8003c2e:	f7ff fca7 	bl	8003580 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003c32:	4648      	mov	r0, r9
 8003c34:	f7ff fca4 	bl	8003580 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003c38:	f504 7398 	add.w	r3, r4, #304	; 0x130
 8003c3c:	4618      	mov	r0, r3
 8003c3e:	ee09 3a10 	vmov	s18, r3
 8003c42:	f7ff fc9d 	bl	8003580 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003c46:	f504 73be 	add.w	r3, r4, #380	; 0x17c
 8003c4a:	4618      	mov	r0, r3
 8003c4c:	ee09 3a90 	vmov	s19, r3
 8003c50:	f7ff fc96 	bl	8003580 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003c54:	f504 73e4 	add.w	r3, r4, #456	; 0x1c8
 8003c58:	4618      	mov	r0, r3
 8003c5a:	ee0a 3a10 	vmov	s20, r3
 8003c5e:	f00f fb97 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003c62:	f504 7304 	add.w	r3, r4, #528	; 0x210
 8003c66:	4618      	mov	r0, r3
 8003c68:	f504 7816 	add.w	r8, r4, #600	; 0x258
 8003c6c:	ee0a 3a90 	vmov	s21, r3
 8003c70:	f7ff f9a0 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8003c74:	4640      	mov	r0, r8
 8003c76:	f00e f913 	bl	8011ea0 <_ZN8touchgfx4LineC1Ev>
 8003c7a:	f504 7332 	add.w	r3, r4, #712	; 0x2c8
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003c7e:	4618      	mov	r0, r3
 8003c80:	9302      	str	r3, [sp, #8]
 8003c82:	f7fd fd15 	bl	80016b0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003c86:	4b3f      	ldr	r3, [pc, #252]	; (8003d84 <_ZN23Calibration_PadViewBaseC1Ev+0x1cc>)
 8003c88:	f8c4 32c8 	str.w	r3, [r4, #712]	; 0x2c8
 8003c8c:	3324      	adds	r3, #36	; 0x24
 8003c8e:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
 8003c92:	f504 7337 	add.w	r3, r4, #732	; 0x2dc
 8003c96:	4618      	mov	r0, r3
 8003c98:	f8c4 62d4 	str.w	r6, [r4, #724]	; 0x2d4
 8003c9c:	ee08 3a10 	vmov	s16, r3
 8003ca0:	f7ff f988 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8003ca4:	f504 7349 	add.w	r3, r4, #804	; 0x324
 8003ca8:	4618      	mov	r0, r3
 8003caa:	ee08 3a90 	vmov	s17, r3
 8003cae:	f7ff f981 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003cb2:	4a35      	ldr	r2, [pc, #212]	; (8003d88 <_ZN23Calibration_PadViewBaseC1Ev+0x1d0>)
 8003cb4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003cb8:	e9c3 2473 	strd	r2, r4, [r3, #460]	; 0x1cc
 8003cbc:	4a33      	ldr	r2, [pc, #204]	; (8003d8c <_ZN23Calibration_PadViewBaseC1Ev+0x1d4>)
 8003cbe:	f8c3 61dc 	str.w	r6, [r3, #476]	; 0x1dc
 8003cc2:	e9c3 2675 	strd	r2, r6, [r3, #468]	; 0x1d4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003cc6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8003cca:	f504 706f 	add.w	r0, r4, #956	; 0x3bc
 8003cce:	f010 fa1b 	bl	8014108 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8003cd2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003cd6:	4632      	mov	r2, r6
 8003cd8:	4658      	mov	r0, fp
 8003cda:	9300      	str	r3, [sp, #0]
 8003cdc:	4631      	mov	r1, r6
 8003cde:	23f0      	movs	r3, #240	; 0xf0
 8003ce0:	f7ff f942 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003ce4:	1d27      	adds	r7, r4, #4
        color = newColor;
 8003ce6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003cea:	66a3      	str	r3, [r4, #104]	; 0x68
 8003cec:	4659      	mov	r1, fp
 8003cee:	4638      	mov	r0, r7
 8003cf0:	f00c fc7e 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8003cf4:	4632      	mov	r2, r6
 8003cf6:	4628      	mov	r0, r5
 8003cf8:	4631      	mov	r1, r6
 8003cfa:	f7ff f928 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8003cfe:	f04f 0309 	mov.w	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8003d02:	4628      	mov	r0, r5
 8003d04:	a90a      	add	r1, sp, #40	; 0x28
 8003d06:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003d0a:	f00f fa00 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003d0e:	4629      	mov	r1, r5
 8003d10:	4638      	mov	r0, r7
 8003d12:	f00c fc6d 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADR_S.setPosition(0, 92, 207, 27);
 8003d16:	231b      	movs	r3, #27
 8003d18:	225c      	movs	r2, #92	; 0x5c
 8003d1a:	9300      	str	r3, [sp, #0]
 8003d1c:	4631      	mov	r1, r6
 8003d1e:	23cf      	movs	r3, #207	; 0xcf
 8003d20:	4650      	mov	r0, sl
 8003d22:	f7ff f921 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003d26:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8003d2a:	f8a4 60cc 	strh.w	r6, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8003d2e:	ad04      	add	r5, sp, #16
        color = newColor;
 8003d30:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8003d34:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003d38:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8003d3c:	4651      	mov	r1, sl
 8003d3e:	4628      	mov	r0, r5
 8003d40:	4798      	blx	r3
 8003d42:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003d46:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8003d4a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(CALIBRATION_PADR_SBuffer, CALIBRATION_PADR_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NNGV).getText());
 8003d4e:	f504 735b 	add.w	r3, r4, #876	; 0x36c
 8003d52:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003d54:	4b0e      	ldr	r3, [pc, #56]	; (8003d90 <_ZN23Calibration_PadViewBaseC1Ev+0x1d8>)
 8003d56:	681b      	ldr	r3, [r3, #0]
 8003d58:	b92b      	cbnz	r3, 8003d66 <_ZN23Calibration_PadViewBaseC1Ev+0x1ae>
 8003d5a:	4b0e      	ldr	r3, [pc, #56]	; (8003d94 <_ZN23Calibration_PadViewBaseC1Ev+0x1dc>)
 8003d5c:	4a0e      	ldr	r2, [pc, #56]	; (8003d98 <_ZN23Calibration_PadViewBaseC1Ev+0x1e0>)
 8003d5e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003d60:	480e      	ldr	r0, [pc, #56]	; (8003d9c <_ZN23Calibration_PadViewBaseC1Ev+0x1e4>)
 8003d62:	f026 fe3b 	bl	802a9dc <__assert_func>
 8003d66:	4b0e      	ldr	r3, [pc, #56]	; (8003da0 <_ZN23Calibration_PadViewBaseC1Ev+0x1e8>)
 8003d68:	881b      	ldrh	r3, [r3, #0]
 8003d6a:	2b0a      	cmp	r3, #10
 8003d6c:	d81c      	bhi.n	8003da8 <_ZN23Calibration_PadViewBaseC1Ev+0x1f0>
 8003d6e:	4b0d      	ldr	r3, [pc, #52]	; (8003da4 <_ZN23Calibration_PadViewBaseC1Ev+0x1ec>)
 8003d70:	4a09      	ldr	r2, [pc, #36]	; (8003d98 <_ZN23Calibration_PadViewBaseC1Ev+0x1e0>)
 8003d72:	2161      	movs	r1, #97	; 0x61
 8003d74:	e7f4      	b.n	8003d60 <_ZN23Calibration_PadViewBaseC1Ev+0x1a8>
 8003d76:	bf00      	nop
 8003d78:	0802c724 	.word	0x0802c724
 8003d7c:	0802ef30 	.word	0x0802ef30
 8003d80:	0802f0f8 	.word	0x0802f0f8
 8003d84:	0802ec64 	.word	0x0802ec64
 8003d88:	0802c70c 	.word	0x0802c70c
 8003d8c:	08003b9f 	.word	0x08003b9f
 8003d90:	20012e0c 	.word	0x20012e0c
 8003d94:	0802c420 	.word	0x0802c420
 8003d98:	0802c522 	.word	0x0802c522
 8003d9c:	0802c49d 	.word	0x0802c49d
 8003da0:	20012e10 	.word	0x20012e10
 8003da4:	0802c4e4 	.word	0x0802c4e4
        return texts->getText(typedTextId);
 8003da8:	4bd8      	ldr	r3, [pc, #864]	; (800410c <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 8003daa:	210a      	movs	r1, #10
 8003dac:	6818      	ldr	r0, [r3, #0]
 8003dae:	f005 f8b1 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 8003db2:	4ad7      	ldr	r2, [pc, #860]	; (8004110 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 8003db4:	4603      	mov	r3, r0
 8003db6:	210a      	movs	r1, #10
 8003db8:	9803      	ldr	r0, [sp, #12]
 8003dba:	f015 f821 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003dbe:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 8003dc0:	4bd4      	ldr	r3, [pc, #848]	; (8004114 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8003dc2:	f8c4 10e0 	str.w	r1, [r4, #224]	; 0xe0
    CALIBRATION_PADR_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WYEC));
 8003dc6:	4650      	mov	r0, sl
 8003dc8:	930a      	str	r3, [sp, #40]	; 0x28
 8003dca:	a90a      	add	r1, sp, #40	; 0x28
 8003dcc:	230b      	movs	r3, #11
 8003dce:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003dd2:	f00e fdc1 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003dd6:	4651      	mov	r1, sl
 8003dd8:	4638      	mov	r0, r7
 8003dda:	f00c fc09 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADR_F.setPosition(25, 119, 207, 22);
 8003dde:	2116      	movs	r1, #22
 8003de0:	2277      	movs	r2, #119	; 0x77
 8003de2:	9100      	str	r1, [sp, #0]
 8003de4:	23cf      	movs	r3, #207	; 0xcf
 8003de6:	2119      	movs	r1, #25
 8003de8:	4648      	mov	r0, r9
 8003dea:	f7ff f8bd 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003dee:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
        color = newColor;
 8003df2:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8003df6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8003dfa:	f8a4 6118 	strh.w	r6, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8003dfe:	4649      	mov	r1, r9
 8003e00:	4628      	mov	r0, r5
 8003e02:	4798      	blx	r3
 8003e04:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003e08:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8003e0c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e10:	49c1      	ldr	r1, [pc, #772]	; (8004118 <_ZN23Calibration_PadViewBaseC1Ev+0x560>)
 8003e12:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_PADR_FBuffer, CALIBRATION_PADR_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9DMI).getText());
 8003e14:	f504 7a60 	add.w	sl, r4, #896	; 0x380
 8003e18:	2b00      	cmp	r3, #0
 8003e1a:	d09e      	beq.n	8003d5a <_ZN23Calibration_PadViewBaseC1Ev+0x1a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003e1c:	48bf      	ldr	r0, [pc, #764]	; (800411c <_ZN23Calibration_PadViewBaseC1Ev+0x564>)
 8003e1e:	8803      	ldrh	r3, [r0, #0]
 8003e20:	2b0c      	cmp	r3, #12
 8003e22:	d9a4      	bls.n	8003d6e <_ZN23Calibration_PadViewBaseC1Ev+0x1b6>
        return texts->getText(typedTextId);
 8003e24:	4ab9      	ldr	r2, [pc, #740]	; (800410c <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 8003e26:	210c      	movs	r1, #12
 8003e28:	6810      	ldr	r0, [r2, #0]
 8003e2a:	f005 f873 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 8003e2e:	4ab8      	ldr	r2, [pc, #736]	; (8004110 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 8003e30:	4603      	mov	r3, r0
 8003e32:	210a      	movs	r1, #10
 8003e34:	4650      	mov	r0, sl
 8003e36:	f014 ffe3 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    CALIBRATION_PADR_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MDOA));
 8003e3a:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 8003e3e:	4bb5      	ldr	r3, [pc, #724]	; (8004114 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8003e40:	930a      	str	r3, [sp, #40]	; 0x28
 8003e42:	4661      	mov	r1, ip
 8003e44:	230d      	movs	r3, #13
 8003e46:	4648      	mov	r0, r9
 8003e48:	f8c4 a12c 	str.w	sl, [r4, #300]	; 0x12c
 8003e4c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003e50:	f00e fd82 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003e54:	4649      	mov	r1, r9
 8003e56:	4638      	mov	r0, r7
 8003e58:	f00c fbca 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADL_F.setPosition(25, 187, 207, 22);
 8003e5c:	f04f 0c16 	mov.w	ip, #22
 8003e60:	22bb      	movs	r2, #187	; 0xbb
 8003e62:	ee19 0a10 	vmov	r0, s18
 8003e66:	f8cd c000 	str.w	ip, [sp]
 8003e6a:	23cf      	movs	r3, #207	; 0xcf
 8003e6c:	2119      	movs	r1, #25
 8003e6e:	f7ff f87b 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003e72:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
        color = newColor;
 8003e76:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        boundingArea = calculateBoundingArea();
 8003e7a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8003e7e:	f8a4 6164 	strh.w	r6, [r4, #356]	; 0x164
        boundingArea = calculateBoundingArea();
 8003e82:	ee19 1a10 	vmov	r1, s18
 8003e86:	4628      	mov	r0, r5
 8003e88:	4798      	blx	r3
 8003e8a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003e8e:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8003e92:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e96:	49a0      	ldr	r1, [pc, #640]	; (8004118 <_ZN23Calibration_PadViewBaseC1Ev+0x560>)
 8003e98:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_PADL_FBuffer, CALIBRATION_PADL_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZTO).getText());
 8003e9a:	f504 7965 	add.w	r9, r4, #916	; 0x394
 8003e9e:	2b00      	cmp	r3, #0
 8003ea0:	f43f af5b 	beq.w	8003d5a <_ZN23Calibration_PadViewBaseC1Ev+0x1a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003ea4:	489d      	ldr	r0, [pc, #628]	; (800411c <_ZN23Calibration_PadViewBaseC1Ev+0x564>)
 8003ea6:	8803      	ldrh	r3, [r0, #0]
 8003ea8:	2b08      	cmp	r3, #8
 8003eaa:	f67f af60 	bls.w	8003d6e <_ZN23Calibration_PadViewBaseC1Ev+0x1b6>
        return texts->getText(typedTextId);
 8003eae:	4a97      	ldr	r2, [pc, #604]	; (800410c <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 8003eb0:	2108      	movs	r1, #8
 8003eb2:	6810      	ldr	r0, [r2, #0]
 8003eb4:	f005 f82e 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 8003eb8:	4a95      	ldr	r2, [pc, #596]	; (8004110 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 8003eba:	4603      	mov	r3, r0
 8003ebc:	210a      	movs	r1, #10
 8003ebe:	4648      	mov	r0, r9
 8003ec0:	f014 ff9e 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003ec4:	f04f 0c09 	mov.w	ip, #9
 8003ec8:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
    CALIBRATION_PADL_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H127));
 8003ecc:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8003ed0:	4b90      	ldr	r3, [pc, #576]	; (8004114 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8003ed2:	f8c4 9178 	str.w	r9, [r4, #376]	; 0x178
 8003ed6:	4661      	mov	r1, ip
 8003ed8:	ee19 0a10 	vmov	r0, s18
 8003edc:	930a      	str	r3, [sp, #40]	; 0x28
 8003ede:	f00e fd3b 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003ee2:	ee19 1a10 	vmov	r1, s18
 8003ee6:	4638      	mov	r0, r7
 8003ee8:	f00c fb82 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADL_S.setPosition(0, 160, 207, 27);
 8003eec:	f04f 0c1b 	mov.w	ip, #27
 8003ef0:	22a0      	movs	r2, #160	; 0xa0
 8003ef2:	ee19 0a90 	vmov	r0, s19
 8003ef6:	f8cd c000 	str.w	ip, [sp]
 8003efa:	23cf      	movs	r3, #207	; 0xcf
 8003efc:	4631      	mov	r1, r6
 8003efe:	f7ff f833 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003f02:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
        color = newColor;
 8003f06:	f8c4 b1ac 	str.w	fp, [r4, #428]	; 0x1ac
        boundingArea = calculateBoundingArea();
 8003f0a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8003f0e:	f8a4 61b0 	strh.w	r6, [r4, #432]	; 0x1b0
        boundingArea = calculateBoundingArea();
 8003f12:	ee19 1a90 	vmov	r1, s19
 8003f16:	4628      	mov	r0, r5
 8003f18:	4798      	blx	r3
 8003f1a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003f1e:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
 8003f22:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003f26:	497c      	ldr	r1, [pc, #496]	; (8004118 <_ZN23Calibration_PadViewBaseC1Ev+0x560>)
 8003f28:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_PADL_SBuffer, CALIBRATION_PADL_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KIGA).getText());
 8003f2a:	f504 796a 	add.w	r9, r4, #936	; 0x3a8
 8003f2e:	2b00      	cmp	r3, #0
 8003f30:	f43f af13 	beq.w	8003d5a <_ZN23Calibration_PadViewBaseC1Ev+0x1a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003f34:	4879      	ldr	r0, [pc, #484]	; (800411c <_ZN23Calibration_PadViewBaseC1Ev+0x564>)
 8003f36:	8803      	ldrh	r3, [r0, #0]
 8003f38:	2b0f      	cmp	r3, #15
 8003f3a:	f67f af18 	bls.w	8003d6e <_ZN23Calibration_PadViewBaseC1Ev+0x1b6>
        return texts->getText(typedTextId);
 8003f3e:	4a73      	ldr	r2, [pc, #460]	; (800410c <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 8003f40:	210f      	movs	r1, #15
 8003f42:	6810      	ldr	r0, [r2, #0]
 8003f44:	f004 ffe6 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 8003f48:	4a71      	ldr	r2, [pc, #452]	; (8004110 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 8003f4a:	4603      	mov	r3, r0
 8003f4c:	210a      	movs	r1, #10
 8003f4e:	4648      	mov	r0, r9
 8003f50:	f014 ff56 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003f54:	4b6f      	ldr	r3, [pc, #444]	; (8004114 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8003f56:	930a      	str	r3, [sp, #40]	; 0x28
    CALIBRATION_PADL_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2BW0));
 8003f58:	ee19 0a90 	vmov	r0, s19
 8003f5c:	230e      	movs	r3, #14
 8003f5e:	a90a      	add	r1, sp, #40	; 0x28
 8003f60:	f8c4 91c4 	str.w	r9, [r4, #452]	; 0x1c4
 8003f64:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003f68:	f00e fcf6 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003f6c:	ee19 1a90 	vmov	r1, s19
 8003f70:	4638      	mov	r0, r7
 8003f72:	f00c fb3d 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8003f76:	ee1a 0a10 	vmov	r0, s20
 8003f7a:	f240 1201 	movw	r2, #257	; 0x101
 8003f7e:	2121      	movs	r1, #33	; 0x21
 8003f80:	f7fe ffe5 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8003f84:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003f86:	aa0a      	add	r2, sp, #40	; 0x28
 8003f88:	a909      	add	r1, sp, #36	; 0x24
 8003f8a:	ee1a 0a10 	vmov	r0, s20
 8003f8e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003f92:	2302      	movs	r3, #2
 8003f94:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003f98:	f00e fec3 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003f9c:	231f      	movs	r3, #31
        updateTextPosition();
 8003f9e:	ee1a 0a10 	vmov	r0, s20
 8003fa2:	f8a4 3200 	strh.w	r3, [r4, #512]	; 0x200
 8003fa6:	f7ff f827 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8003faa:	f504 538e 	add.w	r3, r4, #4544	; 0x11c0
 8003fae:	330c      	adds	r3, #12
 8003fb0:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
 8003fb4:	ee1a 1a10 	vmov	r1, s20
 8003fb8:	4638      	mov	r0, r7
        colorPressed = col;
 8003fba:	e9c4 bb81 	strd	fp, fp, [r4, #516]	; 0x204
 8003fbe:	f00c fb17 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(58, 60);
 8003fc2:	223c      	movs	r2, #60	; 0x3c
 8003fc4:	ee1a 0a90 	vmov	r0, s21
 8003fc8:	213a      	movs	r1, #58	; 0x3a
 8003fca:	f7fe ffc0 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8003fce:	ee1a 1a90 	vmov	r1, s21
 8003fd2:	4628      	mov	r0, r5
        color = newColor;
 8003fd4:	f8c4 b240 	str.w	fp, [r4, #576]	; 0x240
        linespace = space;
 8003fd8:	f8a4 6244 	strh.w	r6, [r4, #580]	; 0x244
        boundingArea = calculateBoundingArea();
 8003fdc:	f00e fa22 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003fe0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003fe4:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 8003fe8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003fec:	4b49      	ldr	r3, [pc, #292]	; (8004114 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8003fee:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8003ff0:	ee1a 0a90 	vmov	r0, s21
 8003ff4:	231e      	movs	r3, #30
 8003ff6:	a90a      	add	r1, sp, #40	; 0x28
 8003ff8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003ffc:	f00e fcac 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004000:	ee1a 1a90 	vmov	r1, s21
 8004004:	4638      	mov	r0, r7
 8004006:	f00c faf3 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800400a:	230a      	movs	r3, #10
 800400c:	9300      	str	r3, [sp, #0]
 800400e:	2232      	movs	r2, #50	; 0x32
 8004010:	23f0      	movs	r3, #240	; 0xf0
 8004012:	4631      	mov	r1, r6
 8004014:	4640      	mov	r0, r8
 8004016:	f7fe ffa7 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 800401a:	9b02      	ldr	r3, [sp, #8]
 800401c:	f8c4 3280 	str.w	r3, [r4, #640]	; 0x280
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8004020:	22a0      	movs	r2, #160	; 0xa0
 8004022:	4611      	mov	r1, r2
 8004024:	4640      	mov	r0, r8
 8004026:	f8c4 b2d4 	str.w	fp, [r4, #724]	; 0x2d4
        color565 = LCD16bpp::getNativeColor(painterColor);
 800402a:	f8a4 b2d8 	strh.w	fp, [r4, #728]	; 0x2d8
 800402e:	f00e f84d 	bl	80120cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8004032:	22a0      	movs	r2, #160	; 0xa0
 8004034:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8004038:	4640      	mov	r0, r8
 800403a:	f00e f852 	bl	80120e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800403e:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 8004042:	2b20      	cmp	r3, #32
 8004044:	d005      	beq.n	8004052 <_ZN23Calibration_PadViewBaseC1Ev+0x49a>
        lineWidthQ5 = widthQ5;
 8004046:	2320      	movs	r3, #32
 8004048:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
        updateCachedShape();
 800404c:	4640      	mov	r0, r8
 800404e:	f00d ff47 	bl	8011ee0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004052:	4640      	mov	r0, r8
 8004054:	2101      	movs	r1, #1
 8004056:	f00e f84f 	bl	80120f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800405a:	4641      	mov	r1, r8
 800405c:	4638      	mov	r0, r7
 800405e:	f00c fac7 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004062:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8004064:	ee18 0a10 	vmov	r0, s16
 8004068:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 800406a:	f04f 39ff 	mov.w	r9, #4294967295
        linespace = space;
 800406e:	f04f 0800 	mov.w	r8, #0
 8004072:	2145      	movs	r1, #69	; 0x45
 8004074:	f7fe ff6b 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8004078:	ee18 1a10 	vmov	r1, s16
 800407c:	4628      	mov	r0, r5
        color = newColor;
 800407e:	f8c4 930c 	str.w	r9, [r4, #780]	; 0x30c
        linespace = space;
 8004082:	f8a4 8310 	strh.w	r8, [r4, #784]	; 0x310
        boundingArea = calculateBoundingArea();
 8004086:	f00e f9cd 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800408a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800408e:	ee18 3a10 	vmov	r3, s16
 8004092:	333c      	adds	r3, #60	; 0x3c
 8004094:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004098:	4e1e      	ldr	r6, [pc, #120]	; (8004114 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 800409a:	960a      	str	r6, [sp, #40]	; 0x28
 800409c:	2320      	movs	r3, #32
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 800409e:	ee18 0a10 	vmov	r0, s16
 80040a2:	a90a      	add	r1, sp, #40	; 0x28
 80040a4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80040a8:	f00e fc56 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80040ac:	ee18 1a10 	vmov	r1, s16
 80040b0:	4638      	mov	r0, r7
 80040b2:	f00c fa9d 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80040b6:	ee18 0a90 	vmov	r0, s17
 80040ba:	220c      	movs	r2, #12
 80040bc:	2136      	movs	r1, #54	; 0x36
 80040be:	f7fe ff46 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 80040c2:	ee18 1a90 	vmov	r1, s17
 80040c6:	4628      	mov	r0, r5
        color = newColor;
 80040c8:	f8c4 9354 	str.w	r9, [r4, #852]	; 0x354
        linespace = space;
 80040cc:	f8a4 8358 	strh.w	r8, [r4, #856]	; 0x358
        boundingArea = calculateBoundingArea();
 80040d0:	f00e f9a8 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80040d4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80040d8:	ee18 3a90 	vmov	r3, s17
 80040dc:	333c      	adds	r3, #60	; 0x3c
 80040de:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80040e2:	2321      	movs	r3, #33	; 0x21
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 80040e4:	ee18 0a90 	vmov	r0, s17
 80040e8:	a90a      	add	r1, sp, #40	; 0x28
 80040ea:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80040ee:	960a      	str	r6, [sp, #40]	; 0x28
 80040f0:	f00e fc32 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80040f4:	4638      	mov	r0, r7
 80040f6:	ee18 1a90 	vmov	r1, s17
 80040fa:	f00c fa79 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80040fe:	4620      	mov	r0, r4
 8004100:	b00d      	add	sp, #52	; 0x34
 8004102:	ecbd 8b06 	vpop	{d8-d10}
 8004106:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800410a:	bf00      	nop
 800410c:	20012e18 	.word	0x20012e18
 8004110:	0802c55a 	.word	0x0802c55a
 8004114:	0802c5d0 	.word	0x0802c5d0
 8004118:	20012e0c 	.word	0x20012e0c
 800411c:	20012e10 	.word	0x20012e10

08004120 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8004120:	4770      	bx	lr

08004122 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8004122:	4770      	bx	lr

08004124 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8004124:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8004128:	6808      	ldr	r0, [r1, #0]
 800412a:	6849      	ldr	r1, [r1, #4]
 800412c:	c303      	stmia	r3!, {r0, r1}
    }
 800412e:	4770      	bx	lr

08004130 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8004130:	4770      	bx	lr

08004132 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8004132:	4770      	bx	lr

08004134 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8004134:	6041      	str	r1, [r0, #4]
    }
 8004136:	4770      	bx	lr

08004138 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8004138:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800413a:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 800413c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8004140:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8004144:	8002      	strh	r2, [r0, #0]
 8004146:	8042      	strh	r2, [r0, #2]
 8004148:	8084      	strh	r4, [r0, #4]
 800414a:	80c1      	strh	r1, [r0, #6]
        }
 800414c:	bd10      	pop	{r4, pc}

0800414e <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 800414e:	4770      	bx	lr

08004150 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8004150:	4770      	bx	lr
	...

08004154 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004154:	4b06      	ldr	r3, [pc, #24]	; (8004170 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8004156:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800415a:	2300      	movs	r3, #0
 800415c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004160:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004164:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004168:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 800416c:	4770      	bx	lr
 800416e:	bf00      	nop
 8004170:	08004511 	.word	0x08004511

08004174 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8004174:	2301      	movs	r3, #1
 8004176:	7203      	strb	r3, [r0, #8]
    }
 8004178:	4770      	bx	lr

0800417a <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 800417a:	4770      	bx	lr

0800417c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 800417c:	4770      	bx	lr

0800417e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 800417e:	4770      	bx	lr

08004180 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8004180:	4770      	bx	lr

08004182 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8004182:	4770      	bx	lr

08004184 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8004184:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8004186:	6840      	ldr	r0, [r0, #4]
 8004188:	6803      	ldr	r3, [r0, #0]
 800418a:	3110      	adds	r1, #16
 800418c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800418e:	4718      	bx	r3

08004190 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8004190:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8004192:	6840      	ldr	r0, [r0, #4]
 8004194:	6803      	ldr	r3, [r0, #0]
 8004196:	3110      	adds	r1, #16
 8004198:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800419a:	4718      	bx	r3

0800419c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800419c:	4770      	bx	lr

0800419e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800419e:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 80041a0:	6840      	ldr	r0, [r0, #4]
 80041a2:	6803      	ldr	r3, [r0, #0]
 80041a4:	3110      	adds	r1, #16
 80041a6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80041a8:	4718      	bx	r3

080041aa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 80041aa:	4601      	mov	r1, r0
        screenContainer->add(solid);
 80041ac:	6840      	ldr	r0, [r0, #4]
 80041ae:	6803      	ldr	r3, [r0, #0]
 80041b0:	3110      	adds	r1, #16
 80041b2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80041b4:	4718      	bx	r3

080041b6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 80041b6:	4770      	bx	lr

080041b8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80041b8:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80041ba:	68c2      	ldr	r2, [r0, #12]
 80041bc:	6841      	ldr	r1, [r0, #4]
 80041be:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80041c0:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80041c2:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80041c6:	07d2      	lsls	r2, r2, #31
 80041c8:	bf48      	it	mi
 80041ca:	590a      	ldrmi	r2, [r1, r4]
 80041cc:	689b      	ldr	r3, [r3, #8]
    }
 80041ce:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80041d2:	bf48      	it	mi
 80041d4:	58d3      	ldrmi	r3, [r2, r3]
 80041d6:	4718      	bx	r3

080041d8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80041d8:	6843      	ldr	r3, [r0, #4]
 80041da:	b12b      	cbz	r3, 80041e8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80041dc:	6883      	ldr	r3, [r0, #8]
 80041de:	b92b      	cbnz	r3, 80041ec <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80041e0:	68c0      	ldr	r0, [r0, #12]
 80041e2:	f000 0001 	and.w	r0, r0, #1
 80041e6:	4770      	bx	lr
 80041e8:	4618      	mov	r0, r3
 80041ea:	4770      	bx	lr
 80041ec:	2001      	movs	r0, #1
    }
 80041ee:	4770      	bx	lr

080041f0 <_ZN8touchgfx12NoTransitionD0Ev>:
 80041f0:	b510      	push	{r4, lr}
 80041f2:	210c      	movs	r1, #12
 80041f4:	4604      	mov	r4, r0
 80041f6:	f025 fd0a 	bl	8029c0e <_ZdlPvj>
 80041fa:	4620      	mov	r0, r4
 80041fc:	bd10      	pop	{r4, pc}

080041fe <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80041fe:	b510      	push	{r4, lr}
 8004200:	2110      	movs	r1, #16
 8004202:	4604      	mov	r4, r0
 8004204:	f025 fd03 	bl	8029c0e <_ZdlPvj>
 8004208:	4620      	mov	r0, r4
 800420a:	bd10      	pop	{r4, pc}

0800420c <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800420c:	b510      	push	{r4, lr}
 800420e:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8004212:	4604      	mov	r4, r0
 8004214:	f025 fcfb 	bl	8029c0e <_ZdlPvj>
 8004218:	4620      	mov	r0, r4
 800421a:	bd10      	pop	{r4, pc}

0800421c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 800421c:	b510      	push	{r4, lr}
 800421e:	2138      	movs	r1, #56	; 0x38
 8004220:	4604      	mov	r4, r0
 8004222:	f025 fcf4 	bl	8029c0e <_ZdlPvj>
 8004226:	4620      	mov	r0, r4
 8004228:	bd10      	pop	{r4, pc}

0800422a <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 800422a:	b510      	push	{r4, lr}
 800422c:	2128      	movs	r1, #40	; 0x28
 800422e:	4604      	mov	r4, r0
 8004230:	f025 fced 	bl	8029c0e <_ZdlPvj>
 8004234:	4620      	mov	r0, r4
 8004236:	bd10      	pop	{r4, pc}

08004238 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 8004238:	b510      	push	{r4, lr}
 800423a:	2138      	movs	r1, #56	; 0x38
 800423c:	4604      	mov	r4, r0
 800423e:	f025 fce6 	bl	8029c0e <_ZdlPvj>
 8004242:	4620      	mov	r0, r4
 8004244:	bd10      	pop	{r4, pc}

08004246 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8004246:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8004248:	f011 fc6a 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
 800424c:	6803      	ldr	r3, [r0, #0]
    }
 800424e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8004252:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004254:	4718      	bx	r3
	...

08004258 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8004258:	b513      	push	{r0, r1, r4, lr}
 800425a:	4604      	mov	r4, r0
        animationCounter++;
 800425c:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800425e:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8004260:	3001      	adds	r0, #1
 8004262:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8004264:	4298      	cmp	r0, r3
        animationCounter++;
 8004266:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8004268:	d905      	bls.n	8004276 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 800426a:	2301      	movs	r3, #1
 800426c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800426e:	2300      	movs	r3, #0
 8004270:	72a3      	strb	r3, [r4, #10]
    }
 8004272:	b002      	add	sp, #8
 8004274:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004276:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800427a:	2100      	movs	r1, #0
 800427c:	f013 fa82 	bl	8017784 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004280:	f010 0201 	ands.w	r2, r0, #1
 8004284:	b283      	uxth	r3, r0
 8004286:	d12a      	bne.n	80042de <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004288:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800428a:	4a19      	ldr	r2, [pc, #100]	; (80042f0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 800428c:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8004290:	89e3      	ldrh	r3, [r4, #14]
 8004292:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8004294:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8004298:	82a0      	strh	r0, [r4, #20]
 800429a:	2000      	movs	r0, #0
 800429c:	1ad2      	subs	r2, r2, r3
 800429e:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 80042a2:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 80042a4:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 80042a6:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 80042a8:	4a12      	ldr	r2, [pc, #72]	; (80042f4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 80042aa:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 80042ae:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 80042b0:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 80042b4:	691b      	ldr	r3, [r3, #16]
 80042b6:	f8ad 1000 	strh.w	r1, [sp]
 80042ba:	f8ad 2006 	strh.w	r2, [sp, #6]
 80042be:	4669      	mov	r1, sp
 80042c0:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80042c2:	7aa3      	ldrb	r3, [r4, #10]
 80042c4:	2b01      	cmp	r3, #1
 80042c6:	d1d4      	bne.n	8004272 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 80042c8:	4b0b      	ldr	r3, [pc, #44]	; (80042f8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 80042ca:	781b      	ldrb	r3, [r3, #0]
 80042cc:	2b00      	cmp	r3, #0
 80042ce:	d0d0      	beq.n	8004272 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80042d0:	f011 fc26 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80042d4:	b002      	add	sp, #8
 80042d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80042da:	f011 bc27 	b.w	8015b2c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80042de:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80042e2:	2800      	cmp	r0, #0
 80042e4:	bfd8      	it	le
 80042e6:	460a      	movle	r2, r1
 80042e8:	4413      	add	r3, r2
 80042ea:	81e3      	strh	r3, [r4, #14]
 80042ec:	e7cd      	b.n	800428a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 80042ee:	bf00      	nop
 80042f0:	20012da8 	.word	0x20012da8
 80042f4:	20012daa 	.word	0x20012daa
 80042f8:	20012db2 	.word	0x20012db2

080042fc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80042fc:	b510      	push	{r4, lr}
 80042fe:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8004300:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8004304:	b158      	cbz	r0, 800431e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8004306:	6803      	ldr	r3, [r0, #0]
 8004308:	68db      	ldr	r3, [r3, #12]
 800430a:	4798      	blx	r3
 800430c:	b138      	cbz	r0, 800431e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800430e:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8004312:	6803      	ldr	r3, [r0, #0]
 8004314:	689b      	ldr	r3, [r3, #8]
 8004316:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8004318:	2300      	movs	r3, #0
 800431a:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 800431e:	bd10      	pop	{r4, pc}

08004320 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8004320:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004324:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8004328:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800432a:	68a8      	ldr	r0, [r5, #8]
 800432c:	6803      	ldr	r3, [r0, #0]
 800432e:	6a1b      	ldr	r3, [r3, #32]
 8004330:	4798      	blx	r3
 8004332:	2897      	cmp	r0, #151	; 0x97
 8004334:	d805      	bhi.n	8004342 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 8004336:	4b46      	ldr	r3, [pc, #280]	; (8004450 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 8004338:	4a46      	ldr	r2, [pc, #280]	; (8004454 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 800433a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800433c:	4846      	ldr	r0, [pc, #280]	; (8004458 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 800433e:	f026 fb4d 	bl	802a9dc <__assert_func>
 8004342:	6868      	ldr	r0, [r5, #4]
 8004344:	6803      	ldr	r3, [r0, #0]
 8004346:	6a1b      	ldr	r3, [r3, #32]
 8004348:	4798      	blx	r3
 800434a:	280f      	cmp	r0, #15
 800434c:	d803      	bhi.n	8004356 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 800434e:	4b43      	ldr	r3, [pc, #268]	; (800445c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 8004350:	4a40      	ldr	r2, [pc, #256]	; (8004454 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8004352:	21a4      	movs	r1, #164	; 0xa4
 8004354:	e7f2      	b.n	800433c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004356:	68e8      	ldr	r0, [r5, #12]
 8004358:	6803      	ldr	r3, [r0, #0]
 800435a:	6a1b      	ldr	r3, [r3, #32]
 800435c:	4798      	blx	r3
 800435e:	280b      	cmp	r0, #11
 8004360:	d803      	bhi.n	800436a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 8004362:	4b3f      	ldr	r3, [pc, #252]	; (8004460 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 8004364:	4a3b      	ldr	r2, [pc, #236]	; (8004454 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8004366:	21a5      	movs	r1, #165	; 0xa5
 8004368:	e7e8      	b.n	800433c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 800436a:	f011 fbd9 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800436e:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8004468 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8004372:	3004      	adds	r0, #4
 8004374:	f011 fc3a 	bl	8015bec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004378:	f8d9 0000 	ldr.w	r0, [r9]
 800437c:	b110      	cbz	r0, 8004384 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800437e:	6803      	ldr	r3, [r0, #0]
 8004380:	68db      	ldr	r3, [r3, #12]
 8004382:	4798      	blx	r3
    if (*currentTrans)
 8004384:	f8d9 0000 	ldr.w	r0, [r9]
 8004388:	b110      	cbz	r0, 8004390 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800438a:	6803      	ldr	r3, [r0, #0]
 800438c:	681b      	ldr	r3, [r3, #0]
 800438e:	4798      	blx	r3
    if (*currentScreen)
 8004390:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 800446c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8004394:	f8d8 0000 	ldr.w	r0, [r8]
 8004398:	b110      	cbz	r0, 80043a0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800439a:	6803      	ldr	r3, [r0, #0]
 800439c:	695b      	ldr	r3, [r3, #20]
 800439e:	4798      	blx	r3
    if (*currentPresenter)
 80043a0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80043a4:	b110      	cbz	r0, 80043ac <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80043a6:	6803      	ldr	r3, [r0, #0]
 80043a8:	685b      	ldr	r3, [r3, #4]
 80043aa:	4798      	blx	r3
    if (*currentScreen)
 80043ac:	f8d8 0000 	ldr.w	r0, [r8]
 80043b0:	b110      	cbz	r0, 80043b8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80043b2:	6803      	ldr	r3, [r0, #0]
 80043b4:	681b      	ldr	r3, [r3, #0]
 80043b6:	4798      	blx	r3
    if (*currentPresenter)
 80043b8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80043bc:	b110      	cbz	r0, 80043c4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80043be:	6803      	ldr	r3, [r0, #0]
 80043c0:	689b      	ldr	r3, [r3, #8]
 80043c2:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80043c4:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80043c6:	6803      	ldr	r3, [r0, #0]
 80043c8:	2100      	movs	r1, #0
 80043ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043cc:	4798      	blx	r3
        : screenContainer(0), done(false)
 80043ce:	f04f 0b00 	mov.w	fp, #0
 80043d2:	4b24      	ldr	r3, [pc, #144]	; (8004464 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 80043d4:	6003      	str	r3, [r0, #0]
 80043d6:	4604      	mov	r4, r0
 80043d8:	f8c0 b004 	str.w	fp, [r0, #4]
 80043dc:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80043e0:	68a8      	ldr	r0, [r5, #8]
 80043e2:	6803      	ldr	r3, [r0, #0]
 80043e4:	4659      	mov	r1, fp
 80043e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043e8:	4798      	blx	r3
 80043ea:	4606      	mov	r6, r0
 80043ec:	f005 faf4 	bl	80099d8 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80043f0:	6868      	ldr	r0, [r5, #4]
 80043f2:	6803      	ldr	r3, [r0, #0]
 80043f4:	4659      	mov	r1, fp
 80043f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043f8:	4798      	blx	r3
 80043fa:	4631      	mov	r1, r6
 80043fc:	4605      	mov	r5, r0
 80043fe:	f005 fac7 	bl	8009990 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 8004402:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8004406:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800440a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800440e:	b1e5      	cbz	r5, 800444a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8004410:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8004412:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004416:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8004418:	f8c5 a008 	str.w	sl, [r5, #8]
 800441c:	4630      	mov	r0, r6
 800441e:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8004420:	63f5      	str	r5, [r6, #60]	; 0x3c
 8004422:	4798      	blx	r3
    newPresenter->activate();
 8004424:	682b      	ldr	r3, [r5, #0]
 8004426:	4628      	mov	r0, r5
 8004428:	681b      	ldr	r3, [r3, #0]
 800442a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800442c:	4621      	mov	r1, r4
 800442e:	4630      	mov	r0, r6
 8004430:	f013 f9a2 	bl	8017778 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004434:	6823      	ldr	r3, [r4, #0]
 8004436:	4620      	mov	r0, r4
 8004438:	691b      	ldr	r3, [r3, #16]
 800443a:	4798      	blx	r3
    newTransition->invalidate();
 800443c:	6823      	ldr	r3, [r4, #0]
 800443e:	695b      	ldr	r3, [r3, #20]
 8004440:	4620      	mov	r0, r4
}
 8004442:	b001      	add	sp, #4
 8004444:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004448:	4718      	bx	r3
    model->bind(newPresenter);
 800444a:	462b      	mov	r3, r5
 800444c:	e7e1      	b.n	8004412 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 800444e:	bf00      	nop
 8004450:	0802c754 	.word	0x0802c754
 8004454:	0802c7e2 	.word	0x0802c7e2
 8004458:	0802c8f0 	.word	0x0802c8f0
 800445c:	0802c937 	.word	0x0802c937
 8004460:	0802c9da 	.word	0x0802c9da
 8004464:	0802ddf8 	.word	0x0802ddf8
 8004468:	20012dfc 	.word	0x20012dfc
 800446c:	20012df8 	.word	0x20012df8

08004470 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8004470:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004472:	4604      	mov	r4, r0
        animationCounter++;
 8004474:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8004476:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8004478:	3001      	adds	r0, #1
 800447a:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 800447c:	4298      	cmp	r0, r3
        animationCounter++;
 800447e:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8004480:	d905      	bls.n	800448e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8004482:	2301      	movs	r3, #1
 8004484:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8004486:	2300      	movs	r3, #0
 8004488:	72a3      	strb	r3, [r4, #10]
    }
 800448a:	b003      	add	sp, #12
 800448c:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800448e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004492:	2100      	movs	r1, #0
 8004494:	f013 f976 	bl	8017784 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004498:	f010 0201 	ands.w	r2, r0, #1
 800449c:	b283      	uxth	r3, r0
 800449e:	d128      	bne.n	80044f2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80044a0:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80044a2:	4b18      	ldr	r3, [pc, #96]	; (8004504 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80044a4:	4818      	ldr	r0, [pc, #96]	; (8004508 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80044a6:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 80044a8:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80044aa:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80044ac:	f9b0 0000 	ldrsh.w	r0, [r0]
 80044b0:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80044b4:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 80044b6:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 80044b8:	442b      	add	r3, r5
 80044ba:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80044bc:	b212      	sxth	r2, r2
 80044be:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 80044c2:	6803      	ldr	r3, [r0, #0]
 80044c4:	8322      	strh	r2, [r4, #24]
 80044c6:	f8ad 2000 	strh.w	r2, [sp]
 80044ca:	2200      	movs	r2, #0
 80044cc:	691b      	ldr	r3, [r3, #16]
 80044ce:	f8ad 2002 	strh.w	r2, [sp, #2]
 80044d2:	4669      	mov	r1, sp
 80044d4:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80044d6:	7aa3      	ldrb	r3, [r4, #10]
 80044d8:	2b01      	cmp	r3, #1
 80044da:	d1d6      	bne.n	800448a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 80044dc:	4b0b      	ldr	r3, [pc, #44]	; (800450c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 80044de:	781b      	ldrb	r3, [r3, #0]
 80044e0:	2b00      	cmp	r3, #0
 80044e2:	d0d2      	beq.n	800448a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80044e4:	f011 fb1c 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80044e8:	b003      	add	sp, #12
 80044ea:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80044ee:	f011 bb1d 	b.w	8015b2c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80044f2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80044f6:	2800      	cmp	r0, #0
 80044f8:	bfd8      	it	le
 80044fa:	460a      	movle	r2, r1
 80044fc:	4413      	add	r3, r2
 80044fe:	81e3      	strh	r3, [r4, #14]
 8004500:	e7cf      	b.n	80044a2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 8004502:	bf00      	nop
 8004504:	20012da8 	.word	0x20012da8
 8004508:	20012daa 	.word	0x20012daa
 800450c:	20012db2 	.word	0x20012db2

08004510 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8004510:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004514:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8004518:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800451a:	68a8      	ldr	r0, [r5, #8]
 800451c:	6803      	ldr	r3, [r0, #0]
 800451e:	6a1b      	ldr	r3, [r3, #32]
 8004520:	4798      	blx	r3
 8004522:	f241 137b 	movw	r3, #4475	; 0x117b
 8004526:	4298      	cmp	r0, r3
 8004528:	d805      	bhi.n	8004536 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 800452a:	4b46      	ldr	r3, [pc, #280]	; (8004644 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 800452c:	4a46      	ldr	r2, [pc, #280]	; (8004648 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 800452e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004530:	4846      	ldr	r0, [pc, #280]	; (800464c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 8004532:	f026 fa53 	bl	802a9dc <__assert_func>
 8004536:	6868      	ldr	r0, [r5, #4]
 8004538:	6803      	ldr	r3, [r0, #0]
 800453a:	6a1b      	ldr	r3, [r3, #32]
 800453c:	4798      	blx	r3
 800453e:	280f      	cmp	r0, #15
 8004540:	d803      	bhi.n	800454a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 8004542:	4b43      	ldr	r3, [pc, #268]	; (8004650 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 8004544:	4a40      	ldr	r2, [pc, #256]	; (8004648 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8004546:	21a4      	movs	r1, #164	; 0xa4
 8004548:	e7f2      	b.n	8004530 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800454a:	68e8      	ldr	r0, [r5, #12]
 800454c:	6803      	ldr	r3, [r0, #0]
 800454e:	6a1b      	ldr	r3, [r3, #32]
 8004550:	4798      	blx	r3
 8004552:	280b      	cmp	r0, #11
 8004554:	d803      	bhi.n	800455e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 8004556:	4b3f      	ldr	r3, [pc, #252]	; (8004654 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8004558:	4a3b      	ldr	r2, [pc, #236]	; (8004648 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 800455a:	21a5      	movs	r1, #165	; 0xa5
 800455c:	e7e8      	b.n	8004530 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800455e:	f011 fadf 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004562:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 800465c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 8004566:	3004      	adds	r0, #4
 8004568:	f011 fb40 	bl	8015bec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800456c:	f8d9 0000 	ldr.w	r0, [r9]
 8004570:	b110      	cbz	r0, 8004578 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8004572:	6803      	ldr	r3, [r0, #0]
 8004574:	68db      	ldr	r3, [r3, #12]
 8004576:	4798      	blx	r3
    if (*currentTrans)
 8004578:	f8d9 0000 	ldr.w	r0, [r9]
 800457c:	b110      	cbz	r0, 8004584 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 800457e:	6803      	ldr	r3, [r0, #0]
 8004580:	681b      	ldr	r3, [r3, #0]
 8004582:	4798      	blx	r3
    if (*currentScreen)
 8004584:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8004660 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8004588:	f8d8 0000 	ldr.w	r0, [r8]
 800458c:	b110      	cbz	r0, 8004594 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800458e:	6803      	ldr	r3, [r0, #0]
 8004590:	695b      	ldr	r3, [r3, #20]
 8004592:	4798      	blx	r3
    if (*currentPresenter)
 8004594:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004598:	b110      	cbz	r0, 80045a0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 800459a:	6803      	ldr	r3, [r0, #0]
 800459c:	685b      	ldr	r3, [r3, #4]
 800459e:	4798      	blx	r3
    if (*currentScreen)
 80045a0:	f8d8 0000 	ldr.w	r0, [r8]
 80045a4:	b110      	cbz	r0, 80045ac <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 80045a6:	6803      	ldr	r3, [r0, #0]
 80045a8:	681b      	ldr	r3, [r3, #0]
 80045aa:	4798      	blx	r3
    if (*currentPresenter)
 80045ac:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80045b0:	b110      	cbz	r0, 80045b8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80045b2:	6803      	ldr	r3, [r0, #0]
 80045b4:	689b      	ldr	r3, [r3, #8]
 80045b6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80045b8:	68e8      	ldr	r0, [r5, #12]
 80045ba:	6803      	ldr	r3, [r0, #0]
 80045bc:	2100      	movs	r1, #0
 80045be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045c0:	4798      	blx	r3
 80045c2:	f04f 0b00 	mov.w	fp, #0
 80045c6:	4b24      	ldr	r3, [pc, #144]	; (8004658 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 80045c8:	6003      	str	r3, [r0, #0]
 80045ca:	4604      	mov	r4, r0
 80045cc:	f8c0 b004 	str.w	fp, [r0, #4]
 80045d0:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80045d4:	68a8      	ldr	r0, [r5, #8]
 80045d6:	6803      	ldr	r3, [r0, #0]
 80045d8:	4659      	mov	r1, fp
 80045da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045dc:	4798      	blx	r3
 80045de:	4606      	mov	r6, r0
 80045e0:	f004 feb4 	bl	800934c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80045e4:	6868      	ldr	r0, [r5, #4]
 80045e6:	6803      	ldr	r3, [r0, #0]
 80045e8:	4659      	mov	r1, fp
 80045ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045ec:	4798      	blx	r3
 80045ee:	4631      	mov	r1, r6
 80045f0:	4605      	mov	r5, r0
 80045f2:	f004 fe85 	bl	8009300 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80045f6:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80045fa:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80045fe:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004602:	b1e5      	cbz	r5, 800463e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 8004604:	1d2b      	adds	r3, r5, #4
 8004606:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800460a:	6833      	ldr	r3, [r6, #0]
 800460c:	f8c5 a008 	str.w	sl, [r5, #8]
 8004610:	4630      	mov	r0, r6
 8004612:	68db      	ldr	r3, [r3, #12]
 8004614:	63f5      	str	r5, [r6, #60]	; 0x3c
 8004616:	4798      	blx	r3
    newPresenter->activate();
 8004618:	682b      	ldr	r3, [r5, #0]
 800461a:	4628      	mov	r0, r5
 800461c:	681b      	ldr	r3, [r3, #0]
 800461e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004620:	4621      	mov	r1, r4
 8004622:	4630      	mov	r0, r6
 8004624:	f013 f8a8 	bl	8017778 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004628:	6823      	ldr	r3, [r4, #0]
 800462a:	4620      	mov	r0, r4
 800462c:	691b      	ldr	r3, [r3, #16]
 800462e:	4798      	blx	r3
    newTransition->invalidate();
 8004630:	6823      	ldr	r3, [r4, #0]
 8004632:	695b      	ldr	r3, [r3, #20]
 8004634:	4620      	mov	r0, r4
}
 8004636:	b001      	add	sp, #4
 8004638:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800463c:	4718      	bx	r3
    model->bind(newPresenter);
 800463e:	462b      	mov	r3, r5
 8004640:	e7e1      	b.n	8004606 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 8004642:	bf00      	nop
 8004644:	0802c754 	.word	0x0802c754
 8004648:	0802ca7d 	.word	0x0802ca7d
 800464c:	0802c8f0 	.word	0x0802c8f0
 8004650:	0802c937 	.word	0x0802c937
 8004654:	0802c9da 	.word	0x0802c9da
 8004658:	0802ddf8 	.word	0x0802ddf8
 800465c:	20012dfc 	.word	0x20012dfc
 8004660:	20012df8 	.word	0x20012df8

08004664 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8004664:	4b04      	ldr	r3, [pc, #16]	; (8004678 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8004666:	681b      	ldr	r3, [r3, #0]
 8004668:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800466c:	b10a      	cbz	r2, 8004672 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800466e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004670:	b900      	cbnz	r0, 8004674 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8004672:	6898      	ldr	r0, [r3, #8]
    }
 8004674:	4770      	bx	lr
 8004676:	bf00      	nop
 8004678:	20012db4 	.word	0x20012db4

0800467c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800467c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800467e:	4604      	mov	r4, r0
 8004680:	4617      	mov	r7, r2
 8004682:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8004684:	f011 fb80 	bl	8015d88 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8004688:	4b10      	ldr	r3, [pc, #64]	; (80046cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 800468a:	601c      	str	r4, [r3, #0]
      model(m)
 800468c:	4b10      	ldr	r3, [pc, #64]	; (80046d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800468e:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8004690:	4b10      	ldr	r3, [pc, #64]	; (80046d4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8004692:	2500      	movs	r5, #0
 8004694:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8004698:	4b0f      	ldr	r3, [pc, #60]	; (80046d8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 800469a:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 800469e:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80046a0:	6803      	ldr	r3, [r0, #0]
 80046a2:	2101      	movs	r1, #1
 80046a4:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 80046a6:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 80046aa:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80046ae:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80046b0:	4628      	mov	r0, r5
 80046b2:	f004 fbf3 	bl	8008e9c <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80046b6:	f7ff ffd5 	bl	8004664 <_ZN8touchgfx3HAL3lcdEv>
 80046ba:	f01a ff2a 	bl	801f512 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 80046be:	f7ff ffd1 	bl	8004664 <_ZN8touchgfx3HAL3lcdEv>
 80046c2:	f01a ffa1 	bl	801f608 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 80046c6:	4620      	mov	r0, r4
 80046c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80046ca:	bf00      	nop
 80046cc:	20012e08 	.word	0x20012e08
 80046d0:	0802dda4 	.word	0x0802dda4
 80046d4:	0802dd8c 	.word	0x0802dd8c
 80046d8:	20012db4 	.word	0x20012db4

080046dc <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80046dc:	4b06      	ldr	r3, [pc, #24]	; (80046f8 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 80046de:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80046e2:	2300      	movs	r3, #0
 80046e4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80046e8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80046ec:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80046f0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80046f4:	4770      	bx	lr
 80046f6:	bf00      	nop
 80046f8:	08004511 	.word	0x08004511

080046fc <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 80046fc:	4b06      	ldr	r3, [pc, #24]	; (8004718 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 80046fe:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004702:	2300      	movs	r3, #0
 8004704:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004708:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800470c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004710:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004714:	4770      	bx	lr
 8004716:	bf00      	nop
 8004718:	08004d21 	.word	0x08004d21

0800471c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 800471c:	4b06      	ldr	r3, [pc, #24]	; (8004738 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 800471e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004722:	2300      	movs	r3, #0
 8004724:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004728:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800472c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004730:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004734:	4770      	bx	lr
 8004736:	bf00      	nop
 8004738:	08005b45 	.word	0x08005b45

0800473c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 800473c:	4b06      	ldr	r3, [pc, #24]	; (8004758 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 800473e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004742:	2300      	movs	r3, #0
 8004744:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004748:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800474c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004750:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004754:	4770      	bx	lr
 8004756:	bf00      	nop
 8004758:	08004be1 	.word	0x08004be1

0800475c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 800475c:	4b06      	ldr	r3, [pc, #24]	; (8004778 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 800475e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004762:	2300      	movs	r3, #0
 8004764:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004768:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800476c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004770:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004774:	4770      	bx	lr
 8004776:	bf00      	nop
 8004778:	08005a05 	.word	0x08005a05

0800477c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 800477c:	4b06      	ldr	r3, [pc, #24]	; (8004798 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 800477e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004782:	2300      	movs	r3, #0
 8004784:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004788:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800478c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004790:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004794:	4770      	bx	lr
 8004796:	bf00      	nop
 8004798:	080058c5 	.word	0x080058c5

0800479c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 800479c:	4b06      	ldr	r3, [pc, #24]	; (80047b8 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 800479e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80047a2:	2300      	movs	r3, #0
 80047a4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80047a8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80047ac:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80047b0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80047b4:	4770      	bx	lr
 80047b6:	bf00      	nop
 80047b8:	08005785 	.word	0x08005785

080047bc <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 80047bc:	4b06      	ldr	r3, [pc, #24]	; (80047d8 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 80047be:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80047c2:	2300      	movs	r3, #0
 80047c4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80047c8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80047cc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80047d0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80047d4:	4770      	bx	lr
 80047d6:	bf00      	nop
 80047d8:	08005645 	.word	0x08005645

080047dc <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 80047dc:	4b06      	ldr	r3, [pc, #24]	; (80047f8 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 80047de:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80047e2:	2300      	movs	r3, #0
 80047e4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80047e8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80047ec:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80047f0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80047f4:	4770      	bx	lr
 80047f6:	bf00      	nop
 80047f8:	08004aa1 	.word	0x08004aa1

080047fc <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 80047fc:	4b06      	ldr	r3, [pc, #24]	; (8004818 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 80047fe:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004802:	2300      	movs	r3, #0
 8004804:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004808:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800480c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004810:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004814:	4770      	bx	lr
 8004816:	bf00      	nop
 8004818:	08005505 	.word	0x08005505

0800481c <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 800481c:	4b06      	ldr	r3, [pc, #24]	; (8004838 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 800481e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004822:	2300      	movs	r3, #0
 8004824:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004828:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800482c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004830:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004834:	4770      	bx	lr
 8004836:	bf00      	nop
 8004838:	080053c5 	.word	0x080053c5

0800483c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 800483c:	4b06      	ldr	r3, [pc, #24]	; (8004858 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 800483e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004842:	2300      	movs	r3, #0
 8004844:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004848:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800484c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004850:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004854:	4770      	bx	lr
 8004856:	bf00      	nop
 8004858:	08005285 	.word	0x08005285

0800485c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 800485c:	4b06      	ldr	r3, [pc, #24]	; (8004878 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 800485e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004862:	2300      	movs	r3, #0
 8004864:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004868:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800486c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004870:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004874:	4770      	bx	lr
 8004876:	bf00      	nop
 8004878:	08004961 	.word	0x08004961

0800487c <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 800487c:	4b06      	ldr	r3, [pc, #24]	; (8004898 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 800487e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004882:	2300      	movs	r3, #0
 8004884:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004888:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800488c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004890:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004894:	4770      	bx	lr
 8004896:	bf00      	nop
 8004898:	08005145 	.word	0x08005145

0800489c <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 800489c:	4b06      	ldr	r3, [pc, #24]	; (80048b8 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 800489e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80048a2:	2300      	movs	r3, #0
 80048a4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80048a8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80048ac:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80048b0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80048b4:	4770      	bx	lr
 80048b6:	bf00      	nop
 80048b8:	08005005 	.word	0x08005005

080048bc <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 80048bc:	4b06      	ldr	r3, [pc, #24]	; (80048d8 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 80048be:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80048c2:	2300      	movs	r3, #0
 80048c4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80048c8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80048cc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80048d0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80048d4:	4770      	bx	lr
 80048d6:	bf00      	nop
 80048d8:	08004ec5 	.word	0x08004ec5

080048dc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 80048dc:	4b06      	ldr	r3, [pc, #24]	; (80048f8 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 80048de:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80048e2:	2300      	movs	r3, #0
 80048e4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80048e8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80048ec:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80048f0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80048f4:	4770      	bx	lr
 80048f6:	bf00      	nop
 80048f8:	08004321 	.word	0x08004321

080048fc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 80048fc:	6803      	ldr	r3, [r0, #0]
 80048fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004900:	4718      	bx	r3
	...

08004904 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8004904:	4b12      	ldr	r3, [pc, #72]	; (8004950 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004906:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004908:	6003      	str	r3, [r0, #0]
 800490a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800490e:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004910:	4b10      	ldr	r3, [pc, #64]	; (8004954 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004912:	7241      	strb	r1, [r0, #9]
 8004914:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004916:	4910      	ldr	r1, [pc, #64]	; (8004958 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004918:	4b10      	ldr	r3, [pc, #64]	; (800495c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800491a:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 800491e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004922:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004924:	2200      	movs	r2, #0
 8004926:	6042      	str	r2, [r0, #4]
 8004928:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 800492a:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 800492c:	81c2      	strh	r2, [r0, #14]
          solid()
 800492e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004932:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004936:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 800493a:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 800493e:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004940:	9100      	str	r1, [sp, #0]
 8004942:	3010      	adds	r0, #16
 8004944:	4611      	mov	r1, r2
 8004946:	f7fe fb0f 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800494a:	4620      	mov	r0, r4
 800494c:	b002      	add	sp, #8
 800494e:	bd10      	pop	{r4, pc}
 8004950:	0802de40 	.word	0x0802de40
 8004954:	0802dd24 	.word	0x0802dd24
 8004958:	20012daa 	.word	0x20012daa
 800495c:	20012da8 	.word	0x20012da8

08004960 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 8004960:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004964:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004968:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800496a:	68a0      	ldr	r0, [r4, #8]
 800496c:	6803      	ldr	r3, [r0, #0]
 800496e:	6a1b      	ldr	r3, [r3, #32]
 8004970:	4798      	blx	r3
 8004972:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004976:	d205      	bcs.n	8004984 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 8004978:	4b42      	ldr	r3, [pc, #264]	; (8004a84 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 800497a:	4a43      	ldr	r2, [pc, #268]	; (8004a88 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 800497c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800497e:	4843      	ldr	r0, [pc, #268]	; (8004a8c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 8004980:	f026 f82c 	bl	802a9dc <__assert_func>
 8004984:	6860      	ldr	r0, [r4, #4]
 8004986:	6803      	ldr	r3, [r0, #0]
 8004988:	6a1b      	ldr	r3, [r3, #32]
 800498a:	4798      	blx	r3
 800498c:	280f      	cmp	r0, #15
 800498e:	d803      	bhi.n	8004998 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 8004990:	4b3f      	ldr	r3, [pc, #252]	; (8004a90 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 8004992:	4a3d      	ldr	r2, [pc, #244]	; (8004a88 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004994:	21a4      	movs	r1, #164	; 0xa4
 8004996:	e7f2      	b.n	800497e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004998:	68e0      	ldr	r0, [r4, #12]
 800499a:	6803      	ldr	r3, [r0, #0]
 800499c:	6a1b      	ldr	r3, [r3, #32]
 800499e:	4798      	blx	r3
 80049a0:	2837      	cmp	r0, #55	; 0x37
 80049a2:	d803      	bhi.n	80049ac <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 80049a4:	4b3b      	ldr	r3, [pc, #236]	; (8004a94 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 80049a6:	4a38      	ldr	r2, [pc, #224]	; (8004a88 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 80049a8:	21a5      	movs	r1, #165	; 0xa5
 80049aa:	e7e8      	b.n	800497e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80049ac:	f011 f8b8 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80049b0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004a98 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 80049b4:	3004      	adds	r0, #4
 80049b6:	f011 f919 	bl	8015bec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80049ba:	f8d9 0000 	ldr.w	r0, [r9]
 80049be:	b110      	cbz	r0, 80049c6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 80049c0:	6803      	ldr	r3, [r0, #0]
 80049c2:	68db      	ldr	r3, [r3, #12]
 80049c4:	4798      	blx	r3
    if (*currentTrans)
 80049c6:	f8d9 0000 	ldr.w	r0, [r9]
 80049ca:	b110      	cbz	r0, 80049d2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 80049cc:	6803      	ldr	r3, [r0, #0]
 80049ce:	681b      	ldr	r3, [r3, #0]
 80049d0:	4798      	blx	r3
    if (*currentScreen)
 80049d2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004a9c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 80049d6:	f8d8 0000 	ldr.w	r0, [r8]
 80049da:	b110      	cbz	r0, 80049e2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80049dc:	6803      	ldr	r3, [r0, #0]
 80049de:	695b      	ldr	r3, [r3, #20]
 80049e0:	4798      	blx	r3
    if (*currentPresenter)
 80049e2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80049e6:	b110      	cbz	r0, 80049ee <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80049e8:	6803      	ldr	r3, [r0, #0]
 80049ea:	685b      	ldr	r3, [r3, #4]
 80049ec:	4798      	blx	r3
    if (*currentScreen)
 80049ee:	f8d8 0000 	ldr.w	r0, [r8]
 80049f2:	b110      	cbz	r0, 80049fa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 80049f4:	6803      	ldr	r3, [r0, #0]
 80049f6:	681b      	ldr	r3, [r3, #0]
 80049f8:	4798      	blx	r3
    if (*currentPresenter)
 80049fa:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80049fe:	b110      	cbz	r0, 8004a06 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004a00:	6803      	ldr	r3, [r0, #0]
 8004a02:	689b      	ldr	r3, [r3, #8]
 8004a04:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004a06:	68e0      	ldr	r0, [r4, #12]
 8004a08:	2100      	movs	r1, #0
 8004a0a:	f7ff ff77 	bl	80048fc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004a0e:	2114      	movs	r1, #20
 8004a10:	4605      	mov	r5, r0
 8004a12:	f7ff ff77 	bl	8004904 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004a16:	68a0      	ldr	r0, [r4, #8]
 8004a18:	6803      	ldr	r3, [r0, #0]
 8004a1a:	2100      	movs	r1, #0
 8004a1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a1e:	4798      	blx	r3
 8004a20:	4606      	mov	r6, r0
 8004a22:	f004 fad9 	bl	8008fd8 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004a26:	6860      	ldr	r0, [r4, #4]
 8004a28:	6803      	ldr	r3, [r0, #0]
 8004a2a:	2100      	movs	r1, #0
 8004a2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a2e:	4798      	blx	r3
 8004a30:	4631      	mov	r1, r6
 8004a32:	4604      	mov	r4, r0
 8004a34:	f004 faaa 	bl	8008f8c <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8004a38:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004a3c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004a40:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004a44:	b1dc      	cbz	r4, 8004a7e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 8004a46:	1d23      	adds	r3, r4, #4
 8004a48:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004a4c:	6833      	ldr	r3, [r6, #0]
 8004a4e:	f8c4 a008 	str.w	sl, [r4, #8]
 8004a52:	4630      	mov	r0, r6
 8004a54:	68db      	ldr	r3, [r3, #12]
 8004a56:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004a58:	4798      	blx	r3
    newPresenter->activate();
 8004a5a:	6823      	ldr	r3, [r4, #0]
 8004a5c:	4620      	mov	r0, r4
 8004a5e:	681b      	ldr	r3, [r3, #0]
 8004a60:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004a62:	4629      	mov	r1, r5
 8004a64:	4630      	mov	r0, r6
 8004a66:	f012 fe87 	bl	8017778 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004a6a:	682b      	ldr	r3, [r5, #0]
 8004a6c:	4628      	mov	r0, r5
 8004a6e:	691b      	ldr	r3, [r3, #16]
 8004a70:	4798      	blx	r3
    newTransition->invalidate();
 8004a72:	682b      	ldr	r3, [r5, #0]
 8004a74:	4628      	mov	r0, r5
 8004a76:	695b      	ldr	r3, [r3, #20]
}
 8004a78:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004a7c:	4718      	bx	r3
    model->bind(newPresenter);
 8004a7e:	4623      	mov	r3, r4
 8004a80:	e7e2      	b.n	8004a48 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 8004a82:	bf00      	nop
 8004a84:	0802c754 	.word	0x0802c754
 8004a88:	0802cb85 	.word	0x0802cb85
 8004a8c:	0802c8f0 	.word	0x0802c8f0
 8004a90:	0802c937 	.word	0x0802c937
 8004a94:	0802c9da 	.word	0x0802c9da
 8004a98:	20012dfc 	.word	0x20012dfc
 8004a9c:	20012df8 	.word	0x20012df8

08004aa0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8004aa0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004aa4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004aa8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004aaa:	68a0      	ldr	r0, [r4, #8]
 8004aac:	6803      	ldr	r3, [r0, #0]
 8004aae:	6a1b      	ldr	r3, [r3, #32]
 8004ab0:	4798      	blx	r3
 8004ab2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004ab6:	d205      	bcs.n	8004ac4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8004ab8:	4b42      	ldr	r3, [pc, #264]	; (8004bc4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8004aba:	4a43      	ldr	r2, [pc, #268]	; (8004bc8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004abc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004abe:	4843      	ldr	r0, [pc, #268]	; (8004bcc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8004ac0:	f025 ff8c 	bl	802a9dc <__assert_func>
 8004ac4:	6860      	ldr	r0, [r4, #4]
 8004ac6:	6803      	ldr	r3, [r0, #0]
 8004ac8:	6a1b      	ldr	r3, [r3, #32]
 8004aca:	4798      	blx	r3
 8004acc:	280f      	cmp	r0, #15
 8004ace:	d803      	bhi.n	8004ad8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8004ad0:	4b3f      	ldr	r3, [pc, #252]	; (8004bd0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8004ad2:	4a3d      	ldr	r2, [pc, #244]	; (8004bc8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004ad4:	21a4      	movs	r1, #164	; 0xa4
 8004ad6:	e7f2      	b.n	8004abe <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004ad8:	68e0      	ldr	r0, [r4, #12]
 8004ada:	6803      	ldr	r3, [r0, #0]
 8004adc:	6a1b      	ldr	r3, [r3, #32]
 8004ade:	4798      	blx	r3
 8004ae0:	2837      	cmp	r0, #55	; 0x37
 8004ae2:	d803      	bhi.n	8004aec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8004ae4:	4b3b      	ldr	r3, [pc, #236]	; (8004bd4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8004ae6:	4a38      	ldr	r2, [pc, #224]	; (8004bc8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004ae8:	21a5      	movs	r1, #165	; 0xa5
 8004aea:	e7e8      	b.n	8004abe <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004aec:	f011 f818 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004af0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004bd8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8004af4:	3004      	adds	r0, #4
 8004af6:	f011 f879 	bl	8015bec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004afa:	f8d9 0000 	ldr.w	r0, [r9]
 8004afe:	b110      	cbz	r0, 8004b06 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004b00:	6803      	ldr	r3, [r0, #0]
 8004b02:	68db      	ldr	r3, [r3, #12]
 8004b04:	4798      	blx	r3
    if (*currentTrans)
 8004b06:	f8d9 0000 	ldr.w	r0, [r9]
 8004b0a:	b110      	cbz	r0, 8004b12 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004b0c:	6803      	ldr	r3, [r0, #0]
 8004b0e:	681b      	ldr	r3, [r3, #0]
 8004b10:	4798      	blx	r3
    if (*currentScreen)
 8004b12:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004bdc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8004b16:	f8d8 0000 	ldr.w	r0, [r8]
 8004b1a:	b110      	cbz	r0, 8004b22 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004b1c:	6803      	ldr	r3, [r0, #0]
 8004b1e:	695b      	ldr	r3, [r3, #20]
 8004b20:	4798      	blx	r3
    if (*currentPresenter)
 8004b22:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b26:	b110      	cbz	r0, 8004b2e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004b28:	6803      	ldr	r3, [r0, #0]
 8004b2a:	685b      	ldr	r3, [r3, #4]
 8004b2c:	4798      	blx	r3
    if (*currentScreen)
 8004b2e:	f8d8 0000 	ldr.w	r0, [r8]
 8004b32:	b110      	cbz	r0, 8004b3a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004b34:	6803      	ldr	r3, [r0, #0]
 8004b36:	681b      	ldr	r3, [r3, #0]
 8004b38:	4798      	blx	r3
    if (*currentPresenter)
 8004b3a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b3e:	b110      	cbz	r0, 8004b46 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004b40:	6803      	ldr	r3, [r0, #0]
 8004b42:	689b      	ldr	r3, [r3, #8]
 8004b44:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004b46:	68e0      	ldr	r0, [r4, #12]
 8004b48:	2100      	movs	r1, #0
 8004b4a:	f7ff fed7 	bl	80048fc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004b4e:	2114      	movs	r1, #20
 8004b50:	4605      	mov	r5, r0
 8004b52:	f7ff fed7 	bl	8004904 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004b56:	68a0      	ldr	r0, [r4, #8]
 8004b58:	6803      	ldr	r3, [r0, #0]
 8004b5a:	2100      	movs	r1, #0
 8004b5c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b5e:	4798      	blx	r3
 8004b60:	4606      	mov	r6, r0
 8004b62:	f004 fcb3 	bl	80094cc <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004b66:	6860      	ldr	r0, [r4, #4]
 8004b68:	6803      	ldr	r3, [r0, #0]
 8004b6a:	2100      	movs	r1, #0
 8004b6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b6e:	4798      	blx	r3
 8004b70:	4631      	mov	r1, r6
 8004b72:	4604      	mov	r4, r0
 8004b74:	f004 fc84 	bl	8009480 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004b78:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004b7c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004b80:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004b84:	b1dc      	cbz	r4, 8004bbe <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8004b86:	1d23      	adds	r3, r4, #4
 8004b88:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004b8c:	6833      	ldr	r3, [r6, #0]
 8004b8e:	f8c4 a008 	str.w	sl, [r4, #8]
 8004b92:	4630      	mov	r0, r6
 8004b94:	68db      	ldr	r3, [r3, #12]
 8004b96:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004b98:	4798      	blx	r3
    newPresenter->activate();
 8004b9a:	6823      	ldr	r3, [r4, #0]
 8004b9c:	4620      	mov	r0, r4
 8004b9e:	681b      	ldr	r3, [r3, #0]
 8004ba0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004ba2:	4629      	mov	r1, r5
 8004ba4:	4630      	mov	r0, r6
 8004ba6:	f012 fde7 	bl	8017778 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004baa:	682b      	ldr	r3, [r5, #0]
 8004bac:	4628      	mov	r0, r5
 8004bae:	691b      	ldr	r3, [r3, #16]
 8004bb0:	4798      	blx	r3
    newTransition->invalidate();
 8004bb2:	682b      	ldr	r3, [r5, #0]
 8004bb4:	4628      	mov	r0, r5
 8004bb6:	695b      	ldr	r3, [r3, #20]
}
 8004bb8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004bbc:	4718      	bx	r3
    model->bind(newPresenter);
 8004bbe:	4623      	mov	r3, r4
 8004bc0:	e7e2      	b.n	8004b88 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8004bc2:	bf00      	nop
 8004bc4:	0802c754 	.word	0x0802c754
 8004bc8:	0802cca3 	.word	0x0802cca3
 8004bcc:	0802c8f0 	.word	0x0802c8f0
 8004bd0:	0802c937 	.word	0x0802c937
 8004bd4:	0802c9da 	.word	0x0802c9da
 8004bd8:	20012dfc 	.word	0x20012dfc
 8004bdc:	20012df8 	.word	0x20012df8

08004be0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8004be0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004be4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004be8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004bea:	68a0      	ldr	r0, [r4, #8]
 8004bec:	6803      	ldr	r3, [r0, #0]
 8004bee:	6a1b      	ldr	r3, [r3, #32]
 8004bf0:	4798      	blx	r3
 8004bf2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004bf6:	d205      	bcs.n	8004c04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8004bf8:	4b42      	ldr	r3, [pc, #264]	; (8004d04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8004bfa:	4a43      	ldr	r2, [pc, #268]	; (8004d08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004bfc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004bfe:	4843      	ldr	r0, [pc, #268]	; (8004d0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8004c00:	f025 feec 	bl	802a9dc <__assert_func>
 8004c04:	6860      	ldr	r0, [r4, #4]
 8004c06:	6803      	ldr	r3, [r0, #0]
 8004c08:	6a1b      	ldr	r3, [r3, #32]
 8004c0a:	4798      	blx	r3
 8004c0c:	280f      	cmp	r0, #15
 8004c0e:	d803      	bhi.n	8004c18 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8004c10:	4b3f      	ldr	r3, [pc, #252]	; (8004d10 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8004c12:	4a3d      	ldr	r2, [pc, #244]	; (8004d08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004c14:	21a4      	movs	r1, #164	; 0xa4
 8004c16:	e7f2      	b.n	8004bfe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004c18:	68e0      	ldr	r0, [r4, #12]
 8004c1a:	6803      	ldr	r3, [r0, #0]
 8004c1c:	6a1b      	ldr	r3, [r3, #32]
 8004c1e:	4798      	blx	r3
 8004c20:	2837      	cmp	r0, #55	; 0x37
 8004c22:	d803      	bhi.n	8004c2c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8004c24:	4b3b      	ldr	r3, [pc, #236]	; (8004d14 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8004c26:	4a38      	ldr	r2, [pc, #224]	; (8004d08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004c28:	21a5      	movs	r1, #165	; 0xa5
 8004c2a:	e7e8      	b.n	8004bfe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004c2c:	f010 ff78 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004c30:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004d18 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8004c34:	3004      	adds	r0, #4
 8004c36:	f010 ffd9 	bl	8015bec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c3a:	f8d9 0000 	ldr.w	r0, [r9]
 8004c3e:	b110      	cbz	r0, 8004c46 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004c40:	6803      	ldr	r3, [r0, #0]
 8004c42:	68db      	ldr	r3, [r3, #12]
 8004c44:	4798      	blx	r3
    if (*currentTrans)
 8004c46:	f8d9 0000 	ldr.w	r0, [r9]
 8004c4a:	b110      	cbz	r0, 8004c52 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004c4c:	6803      	ldr	r3, [r0, #0]
 8004c4e:	681b      	ldr	r3, [r3, #0]
 8004c50:	4798      	blx	r3
    if (*currentScreen)
 8004c52:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004d1c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8004c56:	f8d8 0000 	ldr.w	r0, [r8]
 8004c5a:	b110      	cbz	r0, 8004c62 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004c5c:	6803      	ldr	r3, [r0, #0]
 8004c5e:	695b      	ldr	r3, [r3, #20]
 8004c60:	4798      	blx	r3
    if (*currentPresenter)
 8004c62:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c66:	b110      	cbz	r0, 8004c6e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004c68:	6803      	ldr	r3, [r0, #0]
 8004c6a:	685b      	ldr	r3, [r3, #4]
 8004c6c:	4798      	blx	r3
    if (*currentScreen)
 8004c6e:	f8d8 0000 	ldr.w	r0, [r8]
 8004c72:	b110      	cbz	r0, 8004c7a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004c74:	6803      	ldr	r3, [r0, #0]
 8004c76:	681b      	ldr	r3, [r3, #0]
 8004c78:	4798      	blx	r3
    if (*currentPresenter)
 8004c7a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c7e:	b110      	cbz	r0, 8004c86 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004c80:	6803      	ldr	r3, [r0, #0]
 8004c82:	689b      	ldr	r3, [r3, #8]
 8004c84:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004c86:	68e0      	ldr	r0, [r4, #12]
 8004c88:	2100      	movs	r1, #0
 8004c8a:	f7ff fe37 	bl	80048fc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004c8e:	2114      	movs	r1, #20
 8004c90:	4605      	mov	r5, r0
 8004c92:	f7ff fe37 	bl	8004904 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004c96:	68a0      	ldr	r0, [r4, #8]
 8004c98:	6803      	ldr	r3, [r0, #0]
 8004c9a:	2100      	movs	r1, #0
 8004c9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c9e:	4798      	blx	r3
 8004ca0:	4606      	mov	r6, r0
 8004ca2:	f004 fbb3 	bl	800940c <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004ca6:	6860      	ldr	r0, [r4, #4]
 8004ca8:	6803      	ldr	r3, [r0, #0]
 8004caa:	2100      	movs	r1, #0
 8004cac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cae:	4798      	blx	r3
 8004cb0:	4631      	mov	r1, r6
 8004cb2:	4604      	mov	r4, r0
 8004cb4:	f004 fb84 	bl	80093c0 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004cb8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004cbc:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004cc0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004cc4:	b1dc      	cbz	r4, 8004cfe <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8004cc6:	1d23      	adds	r3, r4, #4
 8004cc8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004ccc:	6833      	ldr	r3, [r6, #0]
 8004cce:	f8c4 a008 	str.w	sl, [r4, #8]
 8004cd2:	4630      	mov	r0, r6
 8004cd4:	68db      	ldr	r3, [r3, #12]
 8004cd6:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004cd8:	4798      	blx	r3
    newPresenter->activate();
 8004cda:	6823      	ldr	r3, [r4, #0]
 8004cdc:	4620      	mov	r0, r4
 8004cde:	681b      	ldr	r3, [r3, #0]
 8004ce0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004ce2:	4629      	mov	r1, r5
 8004ce4:	4630      	mov	r0, r6
 8004ce6:	f012 fd47 	bl	8017778 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004cea:	682b      	ldr	r3, [r5, #0]
 8004cec:	4628      	mov	r0, r5
 8004cee:	691b      	ldr	r3, [r3, #16]
 8004cf0:	4798      	blx	r3
    newTransition->invalidate();
 8004cf2:	682b      	ldr	r3, [r5, #0]
 8004cf4:	4628      	mov	r0, r5
 8004cf6:	695b      	ldr	r3, [r3, #20]
}
 8004cf8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004cfc:	4718      	bx	r3
    model->bind(newPresenter);
 8004cfe:	4623      	mov	r3, r4
 8004d00:	e7e2      	b.n	8004cc8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8004d02:	bf00      	nop
 8004d04:	0802c754 	.word	0x0802c754
 8004d08:	0802cdd3 	.word	0x0802cdd3
 8004d0c:	0802c8f0 	.word	0x0802c8f0
 8004d10:	0802c937 	.word	0x0802c937
 8004d14:	0802c9da 	.word	0x0802c9da
 8004d18:	20012dfc 	.word	0x20012dfc
 8004d1c:	20012df8 	.word	0x20012df8

08004d20 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8004d20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d24:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004d28:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d2a:	68a0      	ldr	r0, [r4, #8]
 8004d2c:	6803      	ldr	r3, [r0, #0]
 8004d2e:	6a1b      	ldr	r3, [r3, #32]
 8004d30:	4798      	blx	r3
 8004d32:	f241 137b 	movw	r3, #4475	; 0x117b
 8004d36:	4298      	cmp	r0, r3
 8004d38:	d805      	bhi.n	8004d46 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8004d3a:	4b42      	ldr	r3, [pc, #264]	; (8004e44 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8004d3c:	4a42      	ldr	r2, [pc, #264]	; (8004e48 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004d3e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d40:	4842      	ldr	r0, [pc, #264]	; (8004e4c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8004d42:	f025 fe4b 	bl	802a9dc <__assert_func>
 8004d46:	6860      	ldr	r0, [r4, #4]
 8004d48:	6803      	ldr	r3, [r0, #0]
 8004d4a:	6a1b      	ldr	r3, [r3, #32]
 8004d4c:	4798      	blx	r3
 8004d4e:	280f      	cmp	r0, #15
 8004d50:	d803      	bhi.n	8004d5a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8004d52:	4b3f      	ldr	r3, [pc, #252]	; (8004e50 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8004d54:	4a3c      	ldr	r2, [pc, #240]	; (8004e48 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004d56:	21a4      	movs	r1, #164	; 0xa4
 8004d58:	e7f2      	b.n	8004d40 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d5a:	68e0      	ldr	r0, [r4, #12]
 8004d5c:	6803      	ldr	r3, [r0, #0]
 8004d5e:	6a1b      	ldr	r3, [r3, #32]
 8004d60:	4798      	blx	r3
 8004d62:	2837      	cmp	r0, #55	; 0x37
 8004d64:	d803      	bhi.n	8004d6e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8004d66:	4b3b      	ldr	r3, [pc, #236]	; (8004e54 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8004d68:	4a37      	ldr	r2, [pc, #220]	; (8004e48 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004d6a:	21a5      	movs	r1, #165	; 0xa5
 8004d6c:	e7e8      	b.n	8004d40 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004d6e:	f010 fed7 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004d72:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004e58 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8004d76:	3004      	adds	r0, #4
 8004d78:	f010 ff38 	bl	8015bec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004d7c:	f8d9 0000 	ldr.w	r0, [r9]
 8004d80:	b110      	cbz	r0, 8004d88 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004d82:	6803      	ldr	r3, [r0, #0]
 8004d84:	68db      	ldr	r3, [r3, #12]
 8004d86:	4798      	blx	r3
    if (*currentTrans)
 8004d88:	f8d9 0000 	ldr.w	r0, [r9]
 8004d8c:	b110      	cbz	r0, 8004d94 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004d8e:	6803      	ldr	r3, [r0, #0]
 8004d90:	681b      	ldr	r3, [r3, #0]
 8004d92:	4798      	blx	r3
    if (*currentScreen)
 8004d94:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004e5c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8004d98:	f8d8 0000 	ldr.w	r0, [r8]
 8004d9c:	b110      	cbz	r0, 8004da4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004d9e:	6803      	ldr	r3, [r0, #0]
 8004da0:	695b      	ldr	r3, [r3, #20]
 8004da2:	4798      	blx	r3
    if (*currentPresenter)
 8004da4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004da8:	b110      	cbz	r0, 8004db0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004daa:	6803      	ldr	r3, [r0, #0]
 8004dac:	685b      	ldr	r3, [r3, #4]
 8004dae:	4798      	blx	r3
    if (*currentScreen)
 8004db0:	f8d8 0000 	ldr.w	r0, [r8]
 8004db4:	b110      	cbz	r0, 8004dbc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004db6:	6803      	ldr	r3, [r0, #0]
 8004db8:	681b      	ldr	r3, [r3, #0]
 8004dba:	4798      	blx	r3
    if (*currentPresenter)
 8004dbc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004dc0:	b110      	cbz	r0, 8004dc8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004dc2:	6803      	ldr	r3, [r0, #0]
 8004dc4:	689b      	ldr	r3, [r3, #8]
 8004dc6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004dc8:	68e0      	ldr	r0, [r4, #12]
 8004dca:	2100      	movs	r1, #0
 8004dcc:	f7ff fd96 	bl	80048fc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004dd0:	2114      	movs	r1, #20
 8004dd2:	4605      	mov	r5, r0
 8004dd4:	f7ff fd96 	bl	8004904 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004dd8:	68a0      	ldr	r0, [r4, #8]
 8004dda:	6803      	ldr	r3, [r0, #0]
 8004ddc:	2100      	movs	r1, #0
 8004dde:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004de0:	4798      	blx	r3
 8004de2:	4606      	mov	r6, r0
 8004de4:	f004 fab2 	bl	800934c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004de8:	6860      	ldr	r0, [r4, #4]
 8004dea:	6803      	ldr	r3, [r0, #0]
 8004dec:	2100      	movs	r1, #0
 8004dee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004df0:	4798      	blx	r3
 8004df2:	4631      	mov	r1, r6
 8004df4:	4604      	mov	r4, r0
 8004df6:	f004 fa83 	bl	8009300 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004dfa:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004dfe:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004e02:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004e06:	b1dc      	cbz	r4, 8004e40 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8004e08:	1d23      	adds	r3, r4, #4
 8004e0a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004e0e:	6833      	ldr	r3, [r6, #0]
 8004e10:	f8c4 a008 	str.w	sl, [r4, #8]
 8004e14:	4630      	mov	r0, r6
 8004e16:	68db      	ldr	r3, [r3, #12]
 8004e18:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004e1a:	4798      	blx	r3
    newPresenter->activate();
 8004e1c:	6823      	ldr	r3, [r4, #0]
 8004e1e:	4620      	mov	r0, r4
 8004e20:	681b      	ldr	r3, [r3, #0]
 8004e22:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004e24:	4629      	mov	r1, r5
 8004e26:	4630      	mov	r0, r6
 8004e28:	f012 fca6 	bl	8017778 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e2c:	682b      	ldr	r3, [r5, #0]
 8004e2e:	4628      	mov	r0, r5
 8004e30:	691b      	ldr	r3, [r3, #16]
 8004e32:	4798      	blx	r3
    newTransition->invalidate();
 8004e34:	682b      	ldr	r3, [r5, #0]
 8004e36:	4628      	mov	r0, r5
 8004e38:	695b      	ldr	r3, [r3, #20]
}
 8004e3a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e3e:	4718      	bx	r3
    model->bind(newPresenter);
 8004e40:	4623      	mov	r3, r4
 8004e42:	e7e2      	b.n	8004e0a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8004e44:	0802c754 	.word	0x0802c754
 8004e48:	0802cef1 	.word	0x0802cef1
 8004e4c:	0802c8f0 	.word	0x0802c8f0
 8004e50:	0802c937 	.word	0x0802c937
 8004e54:	0802c9da 	.word	0x0802c9da
 8004e58:	20012dfc 	.word	0x20012dfc
 8004e5c:	20012df8 	.word	0x20012df8

08004e60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8004e60:	6803      	ldr	r3, [r0, #0]
 8004e62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e64:	4718      	bx	r3
	...

08004e68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8004e68:	4b12      	ldr	r3, [pc, #72]	; (8004eb4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004e6a:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004e6c:	6003      	str	r3, [r0, #0]
 8004e6e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004e72:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004e74:	4b10      	ldr	r3, [pc, #64]	; (8004eb8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004e76:	7241      	strb	r1, [r0, #9]
 8004e78:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004e7a:	4910      	ldr	r1, [pc, #64]	; (8004ebc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004e7c:	4b10      	ldr	r3, [pc, #64]	; (8004ec0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004e7e:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004e82:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004e86:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004e88:	2200      	movs	r2, #0
 8004e8a:	6042      	str	r2, [r0, #4]
 8004e8c:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004e8e:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004e90:	81c2      	strh	r2, [r0, #14]
          solid()
 8004e92:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004e96:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004e9a:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004e9e:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004ea2:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004ea4:	9100      	str	r1, [sp, #0]
 8004ea6:	3010      	adds	r0, #16
 8004ea8:	4611      	mov	r1, r2
 8004eaa:	f7fe f85d 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004eae:	4620      	mov	r0, r4
 8004eb0:	b002      	add	sp, #8
 8004eb2:	bd10      	pop	{r4, pc}
 8004eb4:	0802de1c 	.word	0x0802de1c
 8004eb8:	0802dd24 	.word	0x0802dd24
 8004ebc:	20012daa 	.word	0x20012daa
 8004ec0:	20012da8 	.word	0x20012da8

08004ec4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8004ec4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004ec8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004ecc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004ece:	68a0      	ldr	r0, [r4, #8]
 8004ed0:	6803      	ldr	r3, [r0, #0]
 8004ed2:	6a1b      	ldr	r3, [r3, #32]
 8004ed4:	4798      	blx	r3
 8004ed6:	f241 03af 	movw	r3, #4271	; 0x10af
 8004eda:	4298      	cmp	r0, r3
 8004edc:	d805      	bhi.n	8004eea <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8004ede:	4b42      	ldr	r3, [pc, #264]	; (8004fe8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8004ee0:	4a42      	ldr	r2, [pc, #264]	; (8004fec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004ee2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004ee4:	4842      	ldr	r0, [pc, #264]	; (8004ff0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8004ee6:	f025 fd79 	bl	802a9dc <__assert_func>
 8004eea:	6860      	ldr	r0, [r4, #4]
 8004eec:	6803      	ldr	r3, [r0, #0]
 8004eee:	6a1b      	ldr	r3, [r3, #32]
 8004ef0:	4798      	blx	r3
 8004ef2:	280f      	cmp	r0, #15
 8004ef4:	d803      	bhi.n	8004efe <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8004ef6:	4b3f      	ldr	r3, [pc, #252]	; (8004ff4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8004ef8:	4a3c      	ldr	r2, [pc, #240]	; (8004fec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004efa:	21a4      	movs	r1, #164	; 0xa4
 8004efc:	e7f2      	b.n	8004ee4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004efe:	68e0      	ldr	r0, [r4, #12]
 8004f00:	6803      	ldr	r3, [r0, #0]
 8004f02:	6a1b      	ldr	r3, [r3, #32]
 8004f04:	4798      	blx	r3
 8004f06:	2837      	cmp	r0, #55	; 0x37
 8004f08:	d803      	bhi.n	8004f12 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8004f0a:	4b3b      	ldr	r3, [pc, #236]	; (8004ff8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8004f0c:	4a37      	ldr	r2, [pc, #220]	; (8004fec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004f0e:	21a5      	movs	r1, #165	; 0xa5
 8004f10:	e7e8      	b.n	8004ee4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004f12:	f010 fe05 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004f16:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ffc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8004f1a:	3004      	adds	r0, #4
 8004f1c:	f010 fe66 	bl	8015bec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004f20:	f8d9 0000 	ldr.w	r0, [r9]
 8004f24:	b110      	cbz	r0, 8004f2c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004f26:	6803      	ldr	r3, [r0, #0]
 8004f28:	68db      	ldr	r3, [r3, #12]
 8004f2a:	4798      	blx	r3
    if (*currentTrans)
 8004f2c:	f8d9 0000 	ldr.w	r0, [r9]
 8004f30:	b110      	cbz	r0, 8004f38 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004f32:	6803      	ldr	r3, [r0, #0]
 8004f34:	681b      	ldr	r3, [r3, #0]
 8004f36:	4798      	blx	r3
    if (*currentScreen)
 8004f38:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005000 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8004f3c:	f8d8 0000 	ldr.w	r0, [r8]
 8004f40:	b110      	cbz	r0, 8004f48 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004f42:	6803      	ldr	r3, [r0, #0]
 8004f44:	695b      	ldr	r3, [r3, #20]
 8004f46:	4798      	blx	r3
    if (*currentPresenter)
 8004f48:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f4c:	b110      	cbz	r0, 8004f54 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004f4e:	6803      	ldr	r3, [r0, #0]
 8004f50:	685b      	ldr	r3, [r3, #4]
 8004f52:	4798      	blx	r3
    if (*currentScreen)
 8004f54:	f8d8 0000 	ldr.w	r0, [r8]
 8004f58:	b110      	cbz	r0, 8004f60 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004f5a:	6803      	ldr	r3, [r0, #0]
 8004f5c:	681b      	ldr	r3, [r3, #0]
 8004f5e:	4798      	blx	r3
    if (*currentPresenter)
 8004f60:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f64:	b110      	cbz	r0, 8004f6c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004f66:	6803      	ldr	r3, [r0, #0]
 8004f68:	689b      	ldr	r3, [r3, #8]
 8004f6a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004f6c:	68e0      	ldr	r0, [r4, #12]
 8004f6e:	2100      	movs	r1, #0
 8004f70:	f7ff ff76 	bl	8004e60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004f74:	2114      	movs	r1, #20
 8004f76:	4605      	mov	r5, r0
 8004f78:	f7ff ff76 	bl	8004e68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004f7c:	68a0      	ldr	r0, [r4, #8]
 8004f7e:	6803      	ldr	r3, [r0, #0]
 8004f80:	2100      	movs	r1, #0
 8004f82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f84:	4798      	blx	r3
 8004f86:	4606      	mov	r6, r0
 8004f88:	f004 fcce 	bl	8009928 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004f8c:	6860      	ldr	r0, [r4, #4]
 8004f8e:	6803      	ldr	r3, [r0, #0]
 8004f90:	2100      	movs	r1, #0
 8004f92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f94:	4798      	blx	r3
 8004f96:	4631      	mov	r1, r6
 8004f98:	4604      	mov	r4, r0
 8004f9a:	f004 fc9f 	bl	80098dc <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8004f9e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004fa2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004fa6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004faa:	b1dc      	cbz	r4, 8004fe4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8004fac:	1d23      	adds	r3, r4, #4
 8004fae:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004fb2:	6833      	ldr	r3, [r6, #0]
 8004fb4:	f8c4 a008 	str.w	sl, [r4, #8]
 8004fb8:	4630      	mov	r0, r6
 8004fba:	68db      	ldr	r3, [r3, #12]
 8004fbc:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004fbe:	4798      	blx	r3
    newPresenter->activate();
 8004fc0:	6823      	ldr	r3, [r4, #0]
 8004fc2:	4620      	mov	r0, r4
 8004fc4:	681b      	ldr	r3, [r3, #0]
 8004fc6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004fc8:	4629      	mov	r1, r5
 8004fca:	4630      	mov	r0, r6
 8004fcc:	f012 fbd4 	bl	8017778 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004fd0:	682b      	ldr	r3, [r5, #0]
 8004fd2:	4628      	mov	r0, r5
 8004fd4:	691b      	ldr	r3, [r3, #16]
 8004fd6:	4798      	blx	r3
    newTransition->invalidate();
 8004fd8:	682b      	ldr	r3, [r5, #0]
 8004fda:	4628      	mov	r0, r5
 8004fdc:	695b      	ldr	r3, [r3, #20]
}
 8004fde:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004fe2:	4718      	bx	r3
    model->bind(newPresenter);
 8004fe4:	4623      	mov	r3, r4
 8004fe6:	e7e2      	b.n	8004fae <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8004fe8:	0802c754 	.word	0x0802c754
 8004fec:	0802d00b 	.word	0x0802d00b
 8004ff0:	0802c8f0 	.word	0x0802c8f0
 8004ff4:	0802c937 	.word	0x0802c937
 8004ff8:	0802c9da 	.word	0x0802c9da
 8004ffc:	20012dfc 	.word	0x20012dfc
 8005000:	20012df8 	.word	0x20012df8

08005004 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 8005004:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005008:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800500c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800500e:	68a0      	ldr	r0, [r4, #8]
 8005010:	6803      	ldr	r3, [r0, #0]
 8005012:	6a1b      	ldr	r3, [r3, #32]
 8005014:	4798      	blx	r3
 8005016:	f5b0 5f8f 	cmp.w	r0, #4576	; 0x11e0
 800501a:	d205      	bcs.n	8005028 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x24>
 800501c:	4b42      	ldr	r3, [pc, #264]	; (8005128 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 800501e:	4a43      	ldr	r2, [pc, #268]	; (800512c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8005020:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005022:	4843      	ldr	r0, [pc, #268]	; (8005130 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 8005024:	f025 fcda 	bl	802a9dc <__assert_func>
 8005028:	6860      	ldr	r0, [r4, #4]
 800502a:	6803      	ldr	r3, [r0, #0]
 800502c:	6a1b      	ldr	r3, [r3, #32]
 800502e:	4798      	blx	r3
 8005030:	280f      	cmp	r0, #15
 8005032:	d803      	bhi.n	800503c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x38>
 8005034:	4b3f      	ldr	r3, [pc, #252]	; (8005134 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 8005036:	4a3d      	ldr	r2, [pc, #244]	; (800512c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8005038:	21a4      	movs	r1, #164	; 0xa4
 800503a:	e7f2      	b.n	8005022 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800503c:	68e0      	ldr	r0, [r4, #12]
 800503e:	6803      	ldr	r3, [r0, #0]
 8005040:	6a1b      	ldr	r3, [r3, #32]
 8005042:	4798      	blx	r3
 8005044:	2837      	cmp	r0, #55	; 0x37
 8005046:	d803      	bhi.n	8005050 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4c>
 8005048:	4b3b      	ldr	r3, [pc, #236]	; (8005138 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 800504a:	4a38      	ldr	r2, [pc, #224]	; (800512c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 800504c:	21a5      	movs	r1, #165	; 0xa5
 800504e:	e7e8      	b.n	8005022 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005050:	f010 fd66 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005054:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800513c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 8005058:	3004      	adds	r0, #4
 800505a:	f010 fdc7 	bl	8015bec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800505e:	f8d9 0000 	ldr.w	r0, [r9]
 8005062:	b110      	cbz	r0, 800506a <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005064:	6803      	ldr	r3, [r0, #0]
 8005066:	68db      	ldr	r3, [r3, #12]
 8005068:	4798      	blx	r3
    if (*currentTrans)
 800506a:	f8d9 0000 	ldr.w	r0, [r9]
 800506e:	b110      	cbz	r0, 8005076 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005070:	6803      	ldr	r3, [r0, #0]
 8005072:	681b      	ldr	r3, [r3, #0]
 8005074:	4798      	blx	r3
    if (*currentScreen)
 8005076:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005140 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 800507a:	f8d8 0000 	ldr.w	r0, [r8]
 800507e:	b110      	cbz	r0, 8005086 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005080:	6803      	ldr	r3, [r0, #0]
 8005082:	695b      	ldr	r3, [r3, #20]
 8005084:	4798      	blx	r3
    if (*currentPresenter)
 8005086:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800508a:	b110      	cbz	r0, 8005092 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800508c:	6803      	ldr	r3, [r0, #0]
 800508e:	685b      	ldr	r3, [r3, #4]
 8005090:	4798      	blx	r3
    if (*currentScreen)
 8005092:	f8d8 0000 	ldr.w	r0, [r8]
 8005096:	b110      	cbz	r0, 800509e <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005098:	6803      	ldr	r3, [r0, #0]
 800509a:	681b      	ldr	r3, [r3, #0]
 800509c:	4798      	blx	r3
    if (*currentPresenter)
 800509e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80050a2:	b110      	cbz	r0, 80050aa <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80050a4:	6803      	ldr	r3, [r0, #0]
 80050a6:	689b      	ldr	r3, [r3, #8]
 80050a8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80050aa:	68e0      	ldr	r0, [r4, #12]
 80050ac:	2100      	movs	r1, #0
 80050ae:	f7ff fed7 	bl	8004e60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80050b2:	2114      	movs	r1, #20
 80050b4:	4605      	mov	r5, r0
 80050b6:	f7ff fed7 	bl	8004e68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80050ba:	68a0      	ldr	r0, [r4, #8]
 80050bc:	6803      	ldr	r3, [r0, #0]
 80050be:	2100      	movs	r1, #0
 80050c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050c2:	4798      	blx	r3
 80050c4:	4606      	mov	r6, r0
 80050c6:	f003 ffe1 	bl	800908c <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80050ca:	6860      	ldr	r0, [r4, #4]
 80050cc:	6803      	ldr	r3, [r0, #0]
 80050ce:	2100      	movs	r1, #0
 80050d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050d2:	4798      	blx	r3
 80050d4:	4631      	mov	r1, r6
 80050d6:	4604      	mov	r4, r0
 80050d8:	f003 ffb2 	bl	8009040 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 80050dc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80050e0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80050e4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80050e8:	b1dc      	cbz	r4, 8005122 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x11e>
 80050ea:	1d23      	adds	r3, r4, #4
 80050ec:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80050f0:	6833      	ldr	r3, [r6, #0]
 80050f2:	f8c4 a008 	str.w	sl, [r4, #8]
 80050f6:	4630      	mov	r0, r6
 80050f8:	68db      	ldr	r3, [r3, #12]
 80050fa:	63f4      	str	r4, [r6, #60]	; 0x3c
 80050fc:	4798      	blx	r3
    newPresenter->activate();
 80050fe:	6823      	ldr	r3, [r4, #0]
 8005100:	4620      	mov	r0, r4
 8005102:	681b      	ldr	r3, [r3, #0]
 8005104:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005106:	4629      	mov	r1, r5
 8005108:	4630      	mov	r0, r6
 800510a:	f012 fb35 	bl	8017778 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800510e:	682b      	ldr	r3, [r5, #0]
 8005110:	4628      	mov	r0, r5
 8005112:	691b      	ldr	r3, [r3, #16]
 8005114:	4798      	blx	r3
    newTransition->invalidate();
 8005116:	682b      	ldr	r3, [r5, #0]
 8005118:	4628      	mov	r0, r5
 800511a:	695b      	ldr	r3, [r3, #20]
}
 800511c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005120:	4718      	bx	r3
    model->bind(newPresenter);
 8005122:	4623      	mov	r3, r4
 8005124:	e7e2      	b.n	80050ec <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xe8>
 8005126:	bf00      	nop
 8005128:	0802c754 	.word	0x0802c754
 800512c:	0802d12b 	.word	0x0802d12b
 8005130:	0802c8f0 	.word	0x0802c8f0
 8005134:	0802c937 	.word	0x0802c937
 8005138:	0802c9da 	.word	0x0802c9da
 800513c:	20012dfc 	.word	0x20012dfc
 8005140:	20012df8 	.word	0x20012df8

08005144 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8005144:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005148:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800514c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800514e:	68a0      	ldr	r0, [r4, #8]
 8005150:	6803      	ldr	r3, [r0, #0]
 8005152:	6a1b      	ldr	r3, [r3, #32]
 8005154:	4798      	blx	r3
 8005156:	f5b0 5f8f 	cmp.w	r0, #4576	; 0x11e0
 800515a:	d205      	bcs.n	8005168 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x24>
 800515c:	4b42      	ldr	r3, [pc, #264]	; (8005268 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 800515e:	4a43      	ldr	r2, [pc, #268]	; (800526c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005160:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005162:	4843      	ldr	r0, [pc, #268]	; (8005270 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8005164:	f025 fc3a 	bl	802a9dc <__assert_func>
 8005168:	6860      	ldr	r0, [r4, #4]
 800516a:	6803      	ldr	r3, [r0, #0]
 800516c:	6a1b      	ldr	r3, [r3, #32]
 800516e:	4798      	blx	r3
 8005170:	280f      	cmp	r0, #15
 8005172:	d803      	bhi.n	800517c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x38>
 8005174:	4b3f      	ldr	r3, [pc, #252]	; (8005274 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8005176:	4a3d      	ldr	r2, [pc, #244]	; (800526c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005178:	21a4      	movs	r1, #164	; 0xa4
 800517a:	e7f2      	b.n	8005162 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800517c:	68e0      	ldr	r0, [r4, #12]
 800517e:	6803      	ldr	r3, [r0, #0]
 8005180:	6a1b      	ldr	r3, [r3, #32]
 8005182:	4798      	blx	r3
 8005184:	2837      	cmp	r0, #55	; 0x37
 8005186:	d803      	bhi.n	8005190 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4c>
 8005188:	4b3b      	ldr	r3, [pc, #236]	; (8005278 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 800518a:	4a38      	ldr	r2, [pc, #224]	; (800526c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800518c:	21a5      	movs	r1, #165	; 0xa5
 800518e:	e7e8      	b.n	8005162 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005190:	f010 fcc6 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005194:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800527c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8005198:	3004      	adds	r0, #4
 800519a:	f010 fd27 	bl	8015bec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800519e:	f8d9 0000 	ldr.w	r0, [r9]
 80051a2:	b110      	cbz	r0, 80051aa <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80051a4:	6803      	ldr	r3, [r0, #0]
 80051a6:	68db      	ldr	r3, [r3, #12]
 80051a8:	4798      	blx	r3
    if (*currentTrans)
 80051aa:	f8d9 0000 	ldr.w	r0, [r9]
 80051ae:	b110      	cbz	r0, 80051b6 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80051b0:	6803      	ldr	r3, [r0, #0]
 80051b2:	681b      	ldr	r3, [r3, #0]
 80051b4:	4798      	blx	r3
    if (*currentScreen)
 80051b6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005280 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 80051ba:	f8d8 0000 	ldr.w	r0, [r8]
 80051be:	b110      	cbz	r0, 80051c6 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80051c0:	6803      	ldr	r3, [r0, #0]
 80051c2:	695b      	ldr	r3, [r3, #20]
 80051c4:	4798      	blx	r3
    if (*currentPresenter)
 80051c6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80051ca:	b110      	cbz	r0, 80051d2 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80051cc:	6803      	ldr	r3, [r0, #0]
 80051ce:	685b      	ldr	r3, [r3, #4]
 80051d0:	4798      	blx	r3
    if (*currentScreen)
 80051d2:	f8d8 0000 	ldr.w	r0, [r8]
 80051d6:	b110      	cbz	r0, 80051de <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80051d8:	6803      	ldr	r3, [r0, #0]
 80051da:	681b      	ldr	r3, [r3, #0]
 80051dc:	4798      	blx	r3
    if (*currentPresenter)
 80051de:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80051e2:	b110      	cbz	r0, 80051ea <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80051e4:	6803      	ldr	r3, [r0, #0]
 80051e6:	689b      	ldr	r3, [r3, #8]
 80051e8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80051ea:	68e0      	ldr	r0, [r4, #12]
 80051ec:	2100      	movs	r1, #0
 80051ee:	f7ff fe37 	bl	8004e60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80051f2:	2114      	movs	r1, #20
 80051f4:	4605      	mov	r5, r0
 80051f6:	f7ff fe37 	bl	8004e68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80051fa:	68a0      	ldr	r0, [r4, #8]
 80051fc:	6803      	ldr	r3, [r0, #0]
 80051fe:	2100      	movs	r1, #0
 8005200:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005202:	4798      	blx	r3
 8005204:	4606      	mov	r6, r0
 8005206:	f003 ffcf 	bl	80091a8 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800520a:	6860      	ldr	r0, [r4, #4]
 800520c:	6803      	ldr	r3, [r0, #0]
 800520e:	2100      	movs	r1, #0
 8005210:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005212:	4798      	blx	r3
 8005214:	4631      	mov	r1, r6
 8005216:	4604      	mov	r4, r0
 8005218:	f003 ffa0 	bl	800915c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 800521c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005220:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005224:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005228:	b1dc      	cbz	r4, 8005262 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x11e>
 800522a:	1d23      	adds	r3, r4, #4
 800522c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005230:	6833      	ldr	r3, [r6, #0]
 8005232:	f8c4 a008 	str.w	sl, [r4, #8]
 8005236:	4630      	mov	r0, r6
 8005238:	68db      	ldr	r3, [r3, #12]
 800523a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800523c:	4798      	blx	r3
    newPresenter->activate();
 800523e:	6823      	ldr	r3, [r4, #0]
 8005240:	4620      	mov	r0, r4
 8005242:	681b      	ldr	r3, [r3, #0]
 8005244:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005246:	4629      	mov	r1, r5
 8005248:	4630      	mov	r0, r6
 800524a:	f012 fa95 	bl	8017778 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800524e:	682b      	ldr	r3, [r5, #0]
 8005250:	4628      	mov	r0, r5
 8005252:	691b      	ldr	r3, [r3, #16]
 8005254:	4798      	blx	r3
    newTransition->invalidate();
 8005256:	682b      	ldr	r3, [r5, #0]
 8005258:	4628      	mov	r0, r5
 800525a:	695b      	ldr	r3, [r3, #20]
}
 800525c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005260:	4718      	bx	r3
    model->bind(newPresenter);
 8005262:	4623      	mov	r3, r4
 8005264:	e7e2      	b.n	800522c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xe8>
 8005266:	bf00      	nop
 8005268:	0802c754 	.word	0x0802c754
 800526c:	0802d253 	.word	0x0802d253
 8005270:	0802c8f0 	.word	0x0802c8f0
 8005274:	0802c937 	.word	0x0802c937
 8005278:	0802c9da 	.word	0x0802c9da
 800527c:	20012dfc 	.word	0x20012dfc
 8005280:	20012df8 	.word	0x20012df8

08005284 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 8005284:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005288:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800528c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800528e:	68a0      	ldr	r0, [r4, #8]
 8005290:	6803      	ldr	r3, [r0, #0]
 8005292:	6a1b      	ldr	r3, [r3, #32]
 8005294:	4798      	blx	r3
 8005296:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800529a:	d205      	bcs.n	80052a8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 800529c:	4b42      	ldr	r3, [pc, #264]	; (80053a8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 800529e:	4a43      	ldr	r2, [pc, #268]	; (80053ac <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 80052a0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80052a2:	4843      	ldr	r0, [pc, #268]	; (80053b0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 80052a4:	f025 fb9a 	bl	802a9dc <__assert_func>
 80052a8:	6860      	ldr	r0, [r4, #4]
 80052aa:	6803      	ldr	r3, [r0, #0]
 80052ac:	6a1b      	ldr	r3, [r3, #32]
 80052ae:	4798      	blx	r3
 80052b0:	280f      	cmp	r0, #15
 80052b2:	d803      	bhi.n	80052bc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 80052b4:	4b3f      	ldr	r3, [pc, #252]	; (80053b4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 80052b6:	4a3d      	ldr	r2, [pc, #244]	; (80053ac <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 80052b8:	21a4      	movs	r1, #164	; 0xa4
 80052ba:	e7f2      	b.n	80052a2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80052bc:	68e0      	ldr	r0, [r4, #12]
 80052be:	6803      	ldr	r3, [r0, #0]
 80052c0:	6a1b      	ldr	r3, [r3, #32]
 80052c2:	4798      	blx	r3
 80052c4:	2837      	cmp	r0, #55	; 0x37
 80052c6:	d803      	bhi.n	80052d0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 80052c8:	4b3b      	ldr	r3, [pc, #236]	; (80053b8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 80052ca:	4a38      	ldr	r2, [pc, #224]	; (80053ac <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 80052cc:	21a5      	movs	r1, #165	; 0xa5
 80052ce:	e7e8      	b.n	80052a2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80052d0:	f010 fc26 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80052d4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80053bc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 80052d8:	3004      	adds	r0, #4
 80052da:	f010 fc87 	bl	8015bec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80052de:	f8d9 0000 	ldr.w	r0, [r9]
 80052e2:	b110      	cbz	r0, 80052ea <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80052e4:	6803      	ldr	r3, [r0, #0]
 80052e6:	68db      	ldr	r3, [r3, #12]
 80052e8:	4798      	blx	r3
    if (*currentTrans)
 80052ea:	f8d9 0000 	ldr.w	r0, [r9]
 80052ee:	b110      	cbz	r0, 80052f6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80052f0:	6803      	ldr	r3, [r0, #0]
 80052f2:	681b      	ldr	r3, [r3, #0]
 80052f4:	4798      	blx	r3
    if (*currentScreen)
 80052f6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80053c0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 80052fa:	f8d8 0000 	ldr.w	r0, [r8]
 80052fe:	b110      	cbz	r0, 8005306 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005300:	6803      	ldr	r3, [r0, #0]
 8005302:	695b      	ldr	r3, [r3, #20]
 8005304:	4798      	blx	r3
    if (*currentPresenter)
 8005306:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800530a:	b110      	cbz	r0, 8005312 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800530c:	6803      	ldr	r3, [r0, #0]
 800530e:	685b      	ldr	r3, [r3, #4]
 8005310:	4798      	blx	r3
    if (*currentScreen)
 8005312:	f8d8 0000 	ldr.w	r0, [r8]
 8005316:	b110      	cbz	r0, 800531e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005318:	6803      	ldr	r3, [r0, #0]
 800531a:	681b      	ldr	r3, [r3, #0]
 800531c:	4798      	blx	r3
    if (*currentPresenter)
 800531e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005322:	b110      	cbz	r0, 800532a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005324:	6803      	ldr	r3, [r0, #0]
 8005326:	689b      	ldr	r3, [r3, #8]
 8005328:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800532a:	68e0      	ldr	r0, [r4, #12]
 800532c:	2100      	movs	r1, #0
 800532e:	f7ff fd97 	bl	8004e60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005332:	2114      	movs	r1, #20
 8005334:	4605      	mov	r5, r0
 8005336:	f7ff fd97 	bl	8004e68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800533a:	68a0      	ldr	r0, [r4, #8]
 800533c:	6803      	ldr	r3, [r0, #0]
 800533e:	2100      	movs	r1, #0
 8005340:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005342:	4798      	blx	r3
 8005344:	4606      	mov	r6, r0
 8005346:	f003 fe47 	bl	8008fd8 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800534a:	6860      	ldr	r0, [r4, #4]
 800534c:	6803      	ldr	r3, [r0, #0]
 800534e:	2100      	movs	r1, #0
 8005350:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005352:	4798      	blx	r3
 8005354:	4631      	mov	r1, r6
 8005356:	4604      	mov	r4, r0
 8005358:	f003 fe18 	bl	8008f8c <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 800535c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005360:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005364:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005368:	b1dc      	cbz	r4, 80053a2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 800536a:	1d23      	adds	r3, r4, #4
 800536c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005370:	6833      	ldr	r3, [r6, #0]
 8005372:	f8c4 a008 	str.w	sl, [r4, #8]
 8005376:	4630      	mov	r0, r6
 8005378:	68db      	ldr	r3, [r3, #12]
 800537a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800537c:	4798      	blx	r3
    newPresenter->activate();
 800537e:	6823      	ldr	r3, [r4, #0]
 8005380:	4620      	mov	r0, r4
 8005382:	681b      	ldr	r3, [r3, #0]
 8005384:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005386:	4629      	mov	r1, r5
 8005388:	4630      	mov	r0, r6
 800538a:	f012 f9f5 	bl	8017778 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800538e:	682b      	ldr	r3, [r5, #0]
 8005390:	4628      	mov	r0, r5
 8005392:	691b      	ldr	r3, [r3, #16]
 8005394:	4798      	blx	r3
    newTransition->invalidate();
 8005396:	682b      	ldr	r3, [r5, #0]
 8005398:	4628      	mov	r0, r5
 800539a:	695b      	ldr	r3, [r3, #20]
}
 800539c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80053a0:	4718      	bx	r3
    model->bind(newPresenter);
 80053a2:	4623      	mov	r3, r4
 80053a4:	e7e2      	b.n	800536c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 80053a6:	bf00      	nop
 80053a8:	0802c754 	.word	0x0802c754
 80053ac:	0802d379 	.word	0x0802d379
 80053b0:	0802c8f0 	.word	0x0802c8f0
 80053b4:	0802c937 	.word	0x0802c937
 80053b8:	0802c9da 	.word	0x0802c9da
 80053bc:	20012dfc 	.word	0x20012dfc
 80053c0:	20012df8 	.word	0x20012df8

080053c4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 80053c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80053c8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80053cc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80053ce:	68a0      	ldr	r0, [r4, #8]
 80053d0:	6803      	ldr	r3, [r0, #0]
 80053d2:	6a1b      	ldr	r3, [r3, #32]
 80053d4:	4798      	blx	r3
 80053d6:	f241 33e3 	movw	r3, #5091	; 0x13e3
 80053da:	4298      	cmp	r0, r3
 80053dc:	d805      	bhi.n	80053ea <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 80053de:	4b42      	ldr	r3, [pc, #264]	; (80054e8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 80053e0:	4a42      	ldr	r2, [pc, #264]	; (80054ec <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80053e2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80053e4:	4842      	ldr	r0, [pc, #264]	; (80054f0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 80053e6:	f025 faf9 	bl	802a9dc <__assert_func>
 80053ea:	6860      	ldr	r0, [r4, #4]
 80053ec:	6803      	ldr	r3, [r0, #0]
 80053ee:	6a1b      	ldr	r3, [r3, #32]
 80053f0:	4798      	blx	r3
 80053f2:	280f      	cmp	r0, #15
 80053f4:	d803      	bhi.n	80053fe <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 80053f6:	4b3f      	ldr	r3, [pc, #252]	; (80054f4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 80053f8:	4a3c      	ldr	r2, [pc, #240]	; (80054ec <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80053fa:	21a4      	movs	r1, #164	; 0xa4
 80053fc:	e7f2      	b.n	80053e4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80053fe:	68e0      	ldr	r0, [r4, #12]
 8005400:	6803      	ldr	r3, [r0, #0]
 8005402:	6a1b      	ldr	r3, [r3, #32]
 8005404:	4798      	blx	r3
 8005406:	2837      	cmp	r0, #55	; 0x37
 8005408:	d803      	bhi.n	8005412 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 800540a:	4b3b      	ldr	r3, [pc, #236]	; (80054f8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 800540c:	4a37      	ldr	r2, [pc, #220]	; (80054ec <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800540e:	21a5      	movs	r1, #165	; 0xa5
 8005410:	e7e8      	b.n	80053e4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005412:	f010 fb85 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005416:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80054fc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 800541a:	3004      	adds	r0, #4
 800541c:	f010 fbe6 	bl	8015bec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005420:	f8d9 0000 	ldr.w	r0, [r9]
 8005424:	b110      	cbz	r0, 800542c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005426:	6803      	ldr	r3, [r0, #0]
 8005428:	68db      	ldr	r3, [r3, #12]
 800542a:	4798      	blx	r3
    if (*currentTrans)
 800542c:	f8d9 0000 	ldr.w	r0, [r9]
 8005430:	b110      	cbz	r0, 8005438 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005432:	6803      	ldr	r3, [r0, #0]
 8005434:	681b      	ldr	r3, [r3, #0]
 8005436:	4798      	blx	r3
    if (*currentScreen)
 8005438:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005500 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 800543c:	f8d8 0000 	ldr.w	r0, [r8]
 8005440:	b110      	cbz	r0, 8005448 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005442:	6803      	ldr	r3, [r0, #0]
 8005444:	695b      	ldr	r3, [r3, #20]
 8005446:	4798      	blx	r3
    if (*currentPresenter)
 8005448:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800544c:	b110      	cbz	r0, 8005454 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800544e:	6803      	ldr	r3, [r0, #0]
 8005450:	685b      	ldr	r3, [r3, #4]
 8005452:	4798      	blx	r3
    if (*currentScreen)
 8005454:	f8d8 0000 	ldr.w	r0, [r8]
 8005458:	b110      	cbz	r0, 8005460 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800545a:	6803      	ldr	r3, [r0, #0]
 800545c:	681b      	ldr	r3, [r3, #0]
 800545e:	4798      	blx	r3
    if (*currentPresenter)
 8005460:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005464:	b110      	cbz	r0, 800546c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005466:	6803      	ldr	r3, [r0, #0]
 8005468:	689b      	ldr	r3, [r3, #8]
 800546a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800546c:	68e0      	ldr	r0, [r4, #12]
 800546e:	2100      	movs	r1, #0
 8005470:	f7ff fcf6 	bl	8004e60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005474:	2114      	movs	r1, #20
 8005476:	4605      	mov	r5, r0
 8005478:	f7ff fcf6 	bl	8004e68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800547c:	68a0      	ldr	r0, [r4, #8]
 800547e:	6803      	ldr	r3, [r0, #0]
 8005480:	2100      	movs	r1, #0
 8005482:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005484:	4798      	blx	r3
 8005486:	4606      	mov	r6, r0
 8005488:	f004 f8bc 	bl	8009604 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800548c:	6860      	ldr	r0, [r4, #4]
 800548e:	6803      	ldr	r3, [r0, #0]
 8005490:	2100      	movs	r1, #0
 8005492:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005494:	4798      	blx	r3
 8005496:	4631      	mov	r1, r6
 8005498:	4604      	mov	r4, r0
 800549a:	f004 f88d 	bl	80095b8 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 800549e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80054a2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80054a6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80054aa:	b1dc      	cbz	r4, 80054e4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 80054ac:	1d23      	adds	r3, r4, #4
 80054ae:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80054b2:	6833      	ldr	r3, [r6, #0]
 80054b4:	f8c4 a008 	str.w	sl, [r4, #8]
 80054b8:	4630      	mov	r0, r6
 80054ba:	68db      	ldr	r3, [r3, #12]
 80054bc:	63f4      	str	r4, [r6, #60]	; 0x3c
 80054be:	4798      	blx	r3
    newPresenter->activate();
 80054c0:	6823      	ldr	r3, [r4, #0]
 80054c2:	4620      	mov	r0, r4
 80054c4:	681b      	ldr	r3, [r3, #0]
 80054c6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80054c8:	4629      	mov	r1, r5
 80054ca:	4630      	mov	r0, r6
 80054cc:	f012 f954 	bl	8017778 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80054d0:	682b      	ldr	r3, [r5, #0]
 80054d2:	4628      	mov	r0, r5
 80054d4:	691b      	ldr	r3, [r3, #16]
 80054d6:	4798      	blx	r3
    newTransition->invalidate();
 80054d8:	682b      	ldr	r3, [r5, #0]
 80054da:	4628      	mov	r0, r5
 80054dc:	695b      	ldr	r3, [r3, #20]
}
 80054de:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80054e2:	4718      	bx	r3
    model->bind(newPresenter);
 80054e4:	4623      	mov	r3, r4
 80054e6:	e7e2      	b.n	80054ae <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 80054e8:	0802c754 	.word	0x0802c754
 80054ec:	0802d497 	.word	0x0802d497
 80054f0:	0802c8f0 	.word	0x0802c8f0
 80054f4:	0802c937 	.word	0x0802c937
 80054f8:	0802c9da 	.word	0x0802c9da
 80054fc:	20012dfc 	.word	0x20012dfc
 8005500:	20012df8 	.word	0x20012df8

08005504 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8005504:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005508:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800550c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800550e:	68a0      	ldr	r0, [r4, #8]
 8005510:	6803      	ldr	r3, [r0, #0]
 8005512:	6a1b      	ldr	r3, [r3, #32]
 8005514:	4798      	blx	r3
 8005516:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800551a:	4298      	cmp	r0, r3
 800551c:	d805      	bhi.n	800552a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 800551e:	4b42      	ldr	r3, [pc, #264]	; (8005628 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8005520:	4a42      	ldr	r2, [pc, #264]	; (800562c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005522:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005524:	4842      	ldr	r0, [pc, #264]	; (8005630 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 8005526:	f025 fa59 	bl	802a9dc <__assert_func>
 800552a:	6860      	ldr	r0, [r4, #4]
 800552c:	6803      	ldr	r3, [r0, #0]
 800552e:	6a1b      	ldr	r3, [r3, #32]
 8005530:	4798      	blx	r3
 8005532:	280f      	cmp	r0, #15
 8005534:	d803      	bhi.n	800553e <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 8005536:	4b3f      	ldr	r3, [pc, #252]	; (8005634 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8005538:	4a3c      	ldr	r2, [pc, #240]	; (800562c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800553a:	21a4      	movs	r1, #164	; 0xa4
 800553c:	e7f2      	b.n	8005524 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800553e:	68e0      	ldr	r0, [r4, #12]
 8005540:	6803      	ldr	r3, [r0, #0]
 8005542:	6a1b      	ldr	r3, [r3, #32]
 8005544:	4798      	blx	r3
 8005546:	2837      	cmp	r0, #55	; 0x37
 8005548:	d803      	bhi.n	8005552 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 800554a:	4b3b      	ldr	r3, [pc, #236]	; (8005638 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 800554c:	4a37      	ldr	r2, [pc, #220]	; (800562c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800554e:	21a5      	movs	r1, #165	; 0xa5
 8005550:	e7e8      	b.n	8005524 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005552:	f010 fae5 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005556:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800563c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 800555a:	3004      	adds	r0, #4
 800555c:	f010 fb46 	bl	8015bec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005560:	f8d9 0000 	ldr.w	r0, [r9]
 8005564:	b110      	cbz	r0, 800556c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005566:	6803      	ldr	r3, [r0, #0]
 8005568:	68db      	ldr	r3, [r3, #12]
 800556a:	4798      	blx	r3
    if (*currentTrans)
 800556c:	f8d9 0000 	ldr.w	r0, [r9]
 8005570:	b110      	cbz	r0, 8005578 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005572:	6803      	ldr	r3, [r0, #0]
 8005574:	681b      	ldr	r3, [r3, #0]
 8005576:	4798      	blx	r3
    if (*currentScreen)
 8005578:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005640 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 800557c:	f8d8 0000 	ldr.w	r0, [r8]
 8005580:	b110      	cbz	r0, 8005588 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005582:	6803      	ldr	r3, [r0, #0]
 8005584:	695b      	ldr	r3, [r3, #20]
 8005586:	4798      	blx	r3
    if (*currentPresenter)
 8005588:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800558c:	b110      	cbz	r0, 8005594 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800558e:	6803      	ldr	r3, [r0, #0]
 8005590:	685b      	ldr	r3, [r3, #4]
 8005592:	4798      	blx	r3
    if (*currentScreen)
 8005594:	f8d8 0000 	ldr.w	r0, [r8]
 8005598:	b110      	cbz	r0, 80055a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800559a:	6803      	ldr	r3, [r0, #0]
 800559c:	681b      	ldr	r3, [r3, #0]
 800559e:	4798      	blx	r3
    if (*currentPresenter)
 80055a0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80055a4:	b110      	cbz	r0, 80055ac <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80055a6:	6803      	ldr	r3, [r0, #0]
 80055a8:	689b      	ldr	r3, [r3, #8]
 80055aa:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80055ac:	68e0      	ldr	r0, [r4, #12]
 80055ae:	2100      	movs	r1, #0
 80055b0:	f7ff fc56 	bl	8004e60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80055b4:	2114      	movs	r1, #20
 80055b6:	4605      	mov	r5, r0
 80055b8:	f7ff fc56 	bl	8004e68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80055bc:	68a0      	ldr	r0, [r4, #8]
 80055be:	6803      	ldr	r3, [r0, #0]
 80055c0:	2100      	movs	r1, #0
 80055c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055c4:	4798      	blx	r3
 80055c6:	4606      	mov	r6, r0
 80055c8:	f003 ffda 	bl	8009580 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80055cc:	6860      	ldr	r0, [r4, #4]
 80055ce:	6803      	ldr	r3, [r0, #0]
 80055d0:	2100      	movs	r1, #0
 80055d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055d4:	4798      	blx	r3
 80055d6:	4631      	mov	r1, r6
 80055d8:	4604      	mov	r4, r0
 80055da:	f003 ffab 	bl	8009534 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 80055de:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80055e2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80055e6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80055ea:	b1dc      	cbz	r4, 8005624 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 80055ec:	1d23      	adds	r3, r4, #4
 80055ee:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80055f2:	6833      	ldr	r3, [r6, #0]
 80055f4:	f8c4 a008 	str.w	sl, [r4, #8]
 80055f8:	4630      	mov	r0, r6
 80055fa:	68db      	ldr	r3, [r3, #12]
 80055fc:	63f4      	str	r4, [r6, #60]	; 0x3c
 80055fe:	4798      	blx	r3
    newPresenter->activate();
 8005600:	6823      	ldr	r3, [r4, #0]
 8005602:	4620      	mov	r0, r4
 8005604:	681b      	ldr	r3, [r3, #0]
 8005606:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005608:	4629      	mov	r1, r5
 800560a:	4630      	mov	r0, r6
 800560c:	f012 f8b4 	bl	8017778 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005610:	682b      	ldr	r3, [r5, #0]
 8005612:	4628      	mov	r0, r5
 8005614:	691b      	ldr	r3, [r3, #16]
 8005616:	4798      	blx	r3
    newTransition->invalidate();
 8005618:	682b      	ldr	r3, [r5, #0]
 800561a:	4628      	mov	r0, r5
 800561c:	695b      	ldr	r3, [r3, #20]
}
 800561e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005622:	4718      	bx	r3
    model->bind(newPresenter);
 8005624:	4623      	mov	r3, r4
 8005626:	e7e2      	b.n	80055ee <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 8005628:	0802c754 	.word	0x0802c754
 800562c:	0802d5db 	.word	0x0802d5db
 8005630:	0802c8f0 	.word	0x0802c8f0
 8005634:	0802c937 	.word	0x0802c937
 8005638:	0802c9da 	.word	0x0802c9da
 800563c:	20012dfc 	.word	0x20012dfc
 8005640:	20012df8 	.word	0x20012df8

08005644 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 8005644:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005648:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800564c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800564e:	68a0      	ldr	r0, [r4, #8]
 8005650:	6803      	ldr	r3, [r0, #0]
 8005652:	6a1b      	ldr	r3, [r3, #32]
 8005654:	4798      	blx	r3
 8005656:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800565a:	d205      	bcs.n	8005668 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 800565c:	4b42      	ldr	r3, [pc, #264]	; (8005768 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 800565e:	4a43      	ldr	r2, [pc, #268]	; (800576c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005660:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005662:	4843      	ldr	r0, [pc, #268]	; (8005770 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 8005664:	f025 f9ba 	bl	802a9dc <__assert_func>
 8005668:	6860      	ldr	r0, [r4, #4]
 800566a:	6803      	ldr	r3, [r0, #0]
 800566c:	6a1b      	ldr	r3, [r3, #32]
 800566e:	4798      	blx	r3
 8005670:	280f      	cmp	r0, #15
 8005672:	d803      	bhi.n	800567c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 8005674:	4b3f      	ldr	r3, [pc, #252]	; (8005774 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 8005676:	4a3d      	ldr	r2, [pc, #244]	; (800576c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005678:	21a4      	movs	r1, #164	; 0xa4
 800567a:	e7f2      	b.n	8005662 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800567c:	68e0      	ldr	r0, [r4, #12]
 800567e:	6803      	ldr	r3, [r0, #0]
 8005680:	6a1b      	ldr	r3, [r3, #32]
 8005682:	4798      	blx	r3
 8005684:	2837      	cmp	r0, #55	; 0x37
 8005686:	d803      	bhi.n	8005690 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8005688:	4b3b      	ldr	r3, [pc, #236]	; (8005778 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 800568a:	4a38      	ldr	r2, [pc, #224]	; (800576c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 800568c:	21a5      	movs	r1, #165	; 0xa5
 800568e:	e7e8      	b.n	8005662 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005690:	f010 fa46 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005694:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800577c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8005698:	3004      	adds	r0, #4
 800569a:	f010 faa7 	bl	8015bec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800569e:	f8d9 0000 	ldr.w	r0, [r9]
 80056a2:	b110      	cbz	r0, 80056aa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80056a4:	6803      	ldr	r3, [r0, #0]
 80056a6:	68db      	ldr	r3, [r3, #12]
 80056a8:	4798      	blx	r3
    if (*currentTrans)
 80056aa:	f8d9 0000 	ldr.w	r0, [r9]
 80056ae:	b110      	cbz	r0, 80056b6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80056b0:	6803      	ldr	r3, [r0, #0]
 80056b2:	681b      	ldr	r3, [r3, #0]
 80056b4:	4798      	blx	r3
    if (*currentScreen)
 80056b6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005780 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 80056ba:	f8d8 0000 	ldr.w	r0, [r8]
 80056be:	b110      	cbz	r0, 80056c6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80056c0:	6803      	ldr	r3, [r0, #0]
 80056c2:	695b      	ldr	r3, [r3, #20]
 80056c4:	4798      	blx	r3
    if (*currentPresenter)
 80056c6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80056ca:	b110      	cbz	r0, 80056d2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80056cc:	6803      	ldr	r3, [r0, #0]
 80056ce:	685b      	ldr	r3, [r3, #4]
 80056d0:	4798      	blx	r3
    if (*currentScreen)
 80056d2:	f8d8 0000 	ldr.w	r0, [r8]
 80056d6:	b110      	cbz	r0, 80056de <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80056d8:	6803      	ldr	r3, [r0, #0]
 80056da:	681b      	ldr	r3, [r3, #0]
 80056dc:	4798      	blx	r3
    if (*currentPresenter)
 80056de:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80056e2:	b110      	cbz	r0, 80056ea <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80056e4:	6803      	ldr	r3, [r0, #0]
 80056e6:	689b      	ldr	r3, [r3, #8]
 80056e8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80056ea:	68e0      	ldr	r0, [r4, #12]
 80056ec:	2100      	movs	r1, #0
 80056ee:	f7ff fbb7 	bl	8004e60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80056f2:	2114      	movs	r1, #20
 80056f4:	4605      	mov	r5, r0
 80056f6:	f7ff fbb7 	bl	8004e68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80056fa:	68a0      	ldr	r0, [r4, #8]
 80056fc:	6803      	ldr	r3, [r0, #0]
 80056fe:	2100      	movs	r1, #0
 8005700:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005702:	4798      	blx	r3
 8005704:	4606      	mov	r6, r0
 8005706:	f003 fee1 	bl	80094cc <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800570a:	6860      	ldr	r0, [r4, #4]
 800570c:	6803      	ldr	r3, [r0, #0]
 800570e:	2100      	movs	r1, #0
 8005710:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005712:	4798      	blx	r3
 8005714:	4631      	mov	r1, r6
 8005716:	4604      	mov	r4, r0
 8005718:	f003 feb2 	bl	8009480 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 800571c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005720:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005724:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005728:	b1dc      	cbz	r4, 8005762 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 800572a:	1d23      	adds	r3, r4, #4
 800572c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005730:	6833      	ldr	r3, [r6, #0]
 8005732:	f8c4 a008 	str.w	sl, [r4, #8]
 8005736:	4630      	mov	r0, r6
 8005738:	68db      	ldr	r3, [r3, #12]
 800573a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800573c:	4798      	blx	r3
    newPresenter->activate();
 800573e:	6823      	ldr	r3, [r4, #0]
 8005740:	4620      	mov	r0, r4
 8005742:	681b      	ldr	r3, [r3, #0]
 8005744:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005746:	4629      	mov	r1, r5
 8005748:	4630      	mov	r0, r6
 800574a:	f012 f815 	bl	8017778 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800574e:	682b      	ldr	r3, [r5, #0]
 8005750:	4628      	mov	r0, r5
 8005752:	691b      	ldr	r3, [r3, #16]
 8005754:	4798      	blx	r3
    newTransition->invalidate();
 8005756:	682b      	ldr	r3, [r5, #0]
 8005758:	4628      	mov	r0, r5
 800575a:	695b      	ldr	r3, [r3, #20]
}
 800575c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005760:	4718      	bx	r3
    model->bind(newPresenter);
 8005762:	4623      	mov	r3, r4
 8005764:	e7e2      	b.n	800572c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 8005766:	bf00      	nop
 8005768:	0802c754 	.word	0x0802c754
 800576c:	0802d71b 	.word	0x0802d71b
 8005770:	0802c8f0 	.word	0x0802c8f0
 8005774:	0802c937 	.word	0x0802c937
 8005778:	0802c9da 	.word	0x0802c9da
 800577c:	20012dfc 	.word	0x20012dfc
 8005780:	20012df8 	.word	0x20012df8

08005784 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8005784:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005788:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800578c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800578e:	68a0      	ldr	r0, [r4, #8]
 8005790:	6803      	ldr	r3, [r0, #0]
 8005792:	6a1b      	ldr	r3, [r3, #32]
 8005794:	4798      	blx	r3
 8005796:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800579a:	4298      	cmp	r0, r3
 800579c:	d805      	bhi.n	80057aa <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 800579e:	4b42      	ldr	r3, [pc, #264]	; (80058a8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 80057a0:	4a42      	ldr	r2, [pc, #264]	; (80058ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80057a2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80057a4:	4842      	ldr	r0, [pc, #264]	; (80058b0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 80057a6:	f025 f919 	bl	802a9dc <__assert_func>
 80057aa:	6860      	ldr	r0, [r4, #4]
 80057ac:	6803      	ldr	r3, [r0, #0]
 80057ae:	6a1b      	ldr	r3, [r3, #32]
 80057b0:	4798      	blx	r3
 80057b2:	280f      	cmp	r0, #15
 80057b4:	d803      	bhi.n	80057be <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 80057b6:	4b3f      	ldr	r3, [pc, #252]	; (80058b4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 80057b8:	4a3c      	ldr	r2, [pc, #240]	; (80058ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80057ba:	21a4      	movs	r1, #164	; 0xa4
 80057bc:	e7f2      	b.n	80057a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80057be:	68e0      	ldr	r0, [r4, #12]
 80057c0:	6803      	ldr	r3, [r0, #0]
 80057c2:	6a1b      	ldr	r3, [r3, #32]
 80057c4:	4798      	blx	r3
 80057c6:	2837      	cmp	r0, #55	; 0x37
 80057c8:	d803      	bhi.n	80057d2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 80057ca:	4b3b      	ldr	r3, [pc, #236]	; (80058b8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 80057cc:	4a37      	ldr	r2, [pc, #220]	; (80058ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80057ce:	21a5      	movs	r1, #165	; 0xa5
 80057d0:	e7e8      	b.n	80057a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80057d2:	f010 f9a5 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80057d6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80058bc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 80057da:	3004      	adds	r0, #4
 80057dc:	f010 fa06 	bl	8015bec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80057e0:	f8d9 0000 	ldr.w	r0, [r9]
 80057e4:	b110      	cbz	r0, 80057ec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80057e6:	6803      	ldr	r3, [r0, #0]
 80057e8:	68db      	ldr	r3, [r3, #12]
 80057ea:	4798      	blx	r3
    if (*currentTrans)
 80057ec:	f8d9 0000 	ldr.w	r0, [r9]
 80057f0:	b110      	cbz	r0, 80057f8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80057f2:	6803      	ldr	r3, [r0, #0]
 80057f4:	681b      	ldr	r3, [r3, #0]
 80057f6:	4798      	blx	r3
    if (*currentScreen)
 80057f8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80058c0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 80057fc:	f8d8 0000 	ldr.w	r0, [r8]
 8005800:	b110      	cbz	r0, 8005808 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005802:	6803      	ldr	r3, [r0, #0]
 8005804:	695b      	ldr	r3, [r3, #20]
 8005806:	4798      	blx	r3
    if (*currentPresenter)
 8005808:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800580c:	b110      	cbz	r0, 8005814 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800580e:	6803      	ldr	r3, [r0, #0]
 8005810:	685b      	ldr	r3, [r3, #4]
 8005812:	4798      	blx	r3
    if (*currentScreen)
 8005814:	f8d8 0000 	ldr.w	r0, [r8]
 8005818:	b110      	cbz	r0, 8005820 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800581a:	6803      	ldr	r3, [r0, #0]
 800581c:	681b      	ldr	r3, [r3, #0]
 800581e:	4798      	blx	r3
    if (*currentPresenter)
 8005820:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005824:	b110      	cbz	r0, 800582c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005826:	6803      	ldr	r3, [r0, #0]
 8005828:	689b      	ldr	r3, [r3, #8]
 800582a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800582c:	68e0      	ldr	r0, [r4, #12]
 800582e:	2100      	movs	r1, #0
 8005830:	f7ff fb16 	bl	8004e60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005834:	2114      	movs	r1, #20
 8005836:	4605      	mov	r5, r0
 8005838:	f7ff fb16 	bl	8004e68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800583c:	68a0      	ldr	r0, [r4, #8]
 800583e:	6803      	ldr	r3, [r0, #0]
 8005840:	2100      	movs	r1, #0
 8005842:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005844:	4798      	blx	r3
 8005846:	4606      	mov	r6, r0
 8005848:	f004 f808 	bl	800985c <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800584c:	6860      	ldr	r0, [r4, #4]
 800584e:	6803      	ldr	r3, [r0, #0]
 8005850:	2100      	movs	r1, #0
 8005852:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005854:	4798      	blx	r3
 8005856:	4631      	mov	r1, r6
 8005858:	4604      	mov	r4, r0
 800585a:	f003 ffd9 	bl	8009810 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 800585e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005862:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005866:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800586a:	b1dc      	cbz	r4, 80058a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 800586c:	1d23      	adds	r3, r4, #4
 800586e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005872:	6833      	ldr	r3, [r6, #0]
 8005874:	f8c4 a008 	str.w	sl, [r4, #8]
 8005878:	4630      	mov	r0, r6
 800587a:	68db      	ldr	r3, [r3, #12]
 800587c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800587e:	4798      	blx	r3
    newPresenter->activate();
 8005880:	6823      	ldr	r3, [r4, #0]
 8005882:	4620      	mov	r0, r4
 8005884:	681b      	ldr	r3, [r3, #0]
 8005886:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005888:	4629      	mov	r1, r5
 800588a:	4630      	mov	r0, r6
 800588c:	f011 ff74 	bl	8017778 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005890:	682b      	ldr	r3, [r5, #0]
 8005892:	4628      	mov	r0, r5
 8005894:	691b      	ldr	r3, [r3, #16]
 8005896:	4798      	blx	r3
    newTransition->invalidate();
 8005898:	682b      	ldr	r3, [r5, #0]
 800589a:	4628      	mov	r0, r5
 800589c:	695b      	ldr	r3, [r3, #20]
}
 800589e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80058a2:	4718      	bx	r3
    model->bind(newPresenter);
 80058a4:	4623      	mov	r3, r4
 80058a6:	e7e2      	b.n	800586e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 80058a8:	0802c754 	.word	0x0802c754
 80058ac:	0802d84b 	.word	0x0802d84b
 80058b0:	0802c8f0 	.word	0x0802c8f0
 80058b4:	0802c937 	.word	0x0802c937
 80058b8:	0802c9da 	.word	0x0802c9da
 80058bc:	20012dfc 	.word	0x20012dfc
 80058c0:	20012df8 	.word	0x20012df8

080058c4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 80058c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80058c8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80058cc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80058ce:	68a0      	ldr	r0, [r4, #8]
 80058d0:	6803      	ldr	r3, [r0, #0]
 80058d2:	6a1b      	ldr	r3, [r3, #32]
 80058d4:	4798      	blx	r3
 80058d6:	f241 33f7 	movw	r3, #5111	; 0x13f7
 80058da:	4298      	cmp	r0, r3
 80058dc:	d805      	bhi.n	80058ea <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 80058de:	4b42      	ldr	r3, [pc, #264]	; (80059e8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 80058e0:	4a42      	ldr	r2, [pc, #264]	; (80059ec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80058e2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80058e4:	4842      	ldr	r0, [pc, #264]	; (80059f0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 80058e6:	f025 f879 	bl	802a9dc <__assert_func>
 80058ea:	6860      	ldr	r0, [r4, #4]
 80058ec:	6803      	ldr	r3, [r0, #0]
 80058ee:	6a1b      	ldr	r3, [r3, #32]
 80058f0:	4798      	blx	r3
 80058f2:	280f      	cmp	r0, #15
 80058f4:	d803      	bhi.n	80058fe <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 80058f6:	4b3f      	ldr	r3, [pc, #252]	; (80059f4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 80058f8:	4a3c      	ldr	r2, [pc, #240]	; (80059ec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80058fa:	21a4      	movs	r1, #164	; 0xa4
 80058fc:	e7f2      	b.n	80058e4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80058fe:	68e0      	ldr	r0, [r4, #12]
 8005900:	6803      	ldr	r3, [r0, #0]
 8005902:	6a1b      	ldr	r3, [r3, #32]
 8005904:	4798      	blx	r3
 8005906:	2837      	cmp	r0, #55	; 0x37
 8005908:	d803      	bhi.n	8005912 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 800590a:	4b3b      	ldr	r3, [pc, #236]	; (80059f8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 800590c:	4a37      	ldr	r2, [pc, #220]	; (80059ec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800590e:	21a5      	movs	r1, #165	; 0xa5
 8005910:	e7e8      	b.n	80058e4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005912:	f010 f905 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005916:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80059fc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 800591a:	3004      	adds	r0, #4
 800591c:	f010 f966 	bl	8015bec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005920:	f8d9 0000 	ldr.w	r0, [r9]
 8005924:	b110      	cbz	r0, 800592c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005926:	6803      	ldr	r3, [r0, #0]
 8005928:	68db      	ldr	r3, [r3, #12]
 800592a:	4798      	blx	r3
    if (*currentTrans)
 800592c:	f8d9 0000 	ldr.w	r0, [r9]
 8005930:	b110      	cbz	r0, 8005938 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005932:	6803      	ldr	r3, [r0, #0]
 8005934:	681b      	ldr	r3, [r3, #0]
 8005936:	4798      	blx	r3
    if (*currentScreen)
 8005938:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005a00 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 800593c:	f8d8 0000 	ldr.w	r0, [r8]
 8005940:	b110      	cbz	r0, 8005948 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005942:	6803      	ldr	r3, [r0, #0]
 8005944:	695b      	ldr	r3, [r3, #20]
 8005946:	4798      	blx	r3
    if (*currentPresenter)
 8005948:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800594c:	b110      	cbz	r0, 8005954 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800594e:	6803      	ldr	r3, [r0, #0]
 8005950:	685b      	ldr	r3, [r3, #4]
 8005952:	4798      	blx	r3
    if (*currentScreen)
 8005954:	f8d8 0000 	ldr.w	r0, [r8]
 8005958:	b110      	cbz	r0, 8005960 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800595a:	6803      	ldr	r3, [r0, #0]
 800595c:	681b      	ldr	r3, [r3, #0]
 800595e:	4798      	blx	r3
    if (*currentPresenter)
 8005960:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005964:	b110      	cbz	r0, 800596c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005966:	6803      	ldr	r3, [r0, #0]
 8005968:	689b      	ldr	r3, [r3, #8]
 800596a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800596c:	68e0      	ldr	r0, [r4, #12]
 800596e:	2100      	movs	r1, #0
 8005970:	f7ff fa76 	bl	8004e60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005974:	2114      	movs	r1, #20
 8005976:	4605      	mov	r5, r0
 8005978:	f7ff fa76 	bl	8004e68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800597c:	68a0      	ldr	r0, [r4, #8]
 800597e:	6803      	ldr	r3, [r0, #0]
 8005980:	2100      	movs	r1, #0
 8005982:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005984:	4798      	blx	r3
 8005986:	4606      	mov	r6, r0
 8005988:	f003 fede 	bl	8009748 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800598c:	6860      	ldr	r0, [r4, #4]
 800598e:	6803      	ldr	r3, [r0, #0]
 8005990:	2100      	movs	r1, #0
 8005992:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005994:	4798      	blx	r3
 8005996:	4631      	mov	r1, r6
 8005998:	4604      	mov	r4, r0
 800599a:	f003 feaf 	bl	80096fc <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 800599e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80059a2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80059a6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80059aa:	b1dc      	cbz	r4, 80059e4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 80059ac:	1d23      	adds	r3, r4, #4
 80059ae:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80059b2:	6833      	ldr	r3, [r6, #0]
 80059b4:	f8c4 a008 	str.w	sl, [r4, #8]
 80059b8:	4630      	mov	r0, r6
 80059ba:	68db      	ldr	r3, [r3, #12]
 80059bc:	63f4      	str	r4, [r6, #60]	; 0x3c
 80059be:	4798      	blx	r3
    newPresenter->activate();
 80059c0:	6823      	ldr	r3, [r4, #0]
 80059c2:	4620      	mov	r0, r4
 80059c4:	681b      	ldr	r3, [r3, #0]
 80059c6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80059c8:	4629      	mov	r1, r5
 80059ca:	4630      	mov	r0, r6
 80059cc:	f011 fed4 	bl	8017778 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80059d0:	682b      	ldr	r3, [r5, #0]
 80059d2:	4628      	mov	r0, r5
 80059d4:	691b      	ldr	r3, [r3, #16]
 80059d6:	4798      	blx	r3
    newTransition->invalidate();
 80059d8:	682b      	ldr	r3, [r5, #0]
 80059da:	4628      	mov	r0, r5
 80059dc:	695b      	ldr	r3, [r3, #20]
}
 80059de:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80059e2:	4718      	bx	r3
    model->bind(newPresenter);
 80059e4:	4623      	mov	r3, r4
 80059e6:	e7e2      	b.n	80059ae <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 80059e8:	0802c754 	.word	0x0802c754
 80059ec:	0802d98d 	.word	0x0802d98d
 80059f0:	0802c8f0 	.word	0x0802c8f0
 80059f4:	0802c937 	.word	0x0802c937
 80059f8:	0802c9da 	.word	0x0802c9da
 80059fc:	20012dfc 	.word	0x20012dfc
 8005a00:	20012df8 	.word	0x20012df8

08005a04 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8005a04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005a08:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005a0c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005a0e:	68a0      	ldr	r0, [r4, #8]
 8005a10:	6803      	ldr	r3, [r0, #0]
 8005a12:	6a1b      	ldr	r3, [r3, #32]
 8005a14:	4798      	blx	r3
 8005a16:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005a1a:	d205      	bcs.n	8005a28 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8005a1c:	4b42      	ldr	r3, [pc, #264]	; (8005b28 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8005a1e:	4a43      	ldr	r2, [pc, #268]	; (8005b2c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005a20:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005a22:	4843      	ldr	r0, [pc, #268]	; (8005b30 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8005a24:	f024 ffda 	bl	802a9dc <__assert_func>
 8005a28:	6860      	ldr	r0, [r4, #4]
 8005a2a:	6803      	ldr	r3, [r0, #0]
 8005a2c:	6a1b      	ldr	r3, [r3, #32]
 8005a2e:	4798      	blx	r3
 8005a30:	280f      	cmp	r0, #15
 8005a32:	d803      	bhi.n	8005a3c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8005a34:	4b3f      	ldr	r3, [pc, #252]	; (8005b34 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8005a36:	4a3d      	ldr	r2, [pc, #244]	; (8005b2c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005a38:	21a4      	movs	r1, #164	; 0xa4
 8005a3a:	e7f2      	b.n	8005a22 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005a3c:	68e0      	ldr	r0, [r4, #12]
 8005a3e:	6803      	ldr	r3, [r0, #0]
 8005a40:	6a1b      	ldr	r3, [r3, #32]
 8005a42:	4798      	blx	r3
 8005a44:	2837      	cmp	r0, #55	; 0x37
 8005a46:	d803      	bhi.n	8005a50 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8005a48:	4b3b      	ldr	r3, [pc, #236]	; (8005b38 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8005a4a:	4a38      	ldr	r2, [pc, #224]	; (8005b2c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005a4c:	21a5      	movs	r1, #165	; 0xa5
 8005a4e:	e7e8      	b.n	8005a22 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005a50:	f010 f866 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005a54:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005b3c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8005a58:	3004      	adds	r0, #4
 8005a5a:	f010 f8c7 	bl	8015bec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005a5e:	f8d9 0000 	ldr.w	r0, [r9]
 8005a62:	b110      	cbz	r0, 8005a6a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005a64:	6803      	ldr	r3, [r0, #0]
 8005a66:	68db      	ldr	r3, [r3, #12]
 8005a68:	4798      	blx	r3
    if (*currentTrans)
 8005a6a:	f8d9 0000 	ldr.w	r0, [r9]
 8005a6e:	b110      	cbz	r0, 8005a76 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005a70:	6803      	ldr	r3, [r0, #0]
 8005a72:	681b      	ldr	r3, [r3, #0]
 8005a74:	4798      	blx	r3
    if (*currentScreen)
 8005a76:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005b40 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8005a7a:	f8d8 0000 	ldr.w	r0, [r8]
 8005a7e:	b110      	cbz	r0, 8005a86 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005a80:	6803      	ldr	r3, [r0, #0]
 8005a82:	695b      	ldr	r3, [r3, #20]
 8005a84:	4798      	blx	r3
    if (*currentPresenter)
 8005a86:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a8a:	b110      	cbz	r0, 8005a92 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005a8c:	6803      	ldr	r3, [r0, #0]
 8005a8e:	685b      	ldr	r3, [r3, #4]
 8005a90:	4798      	blx	r3
    if (*currentScreen)
 8005a92:	f8d8 0000 	ldr.w	r0, [r8]
 8005a96:	b110      	cbz	r0, 8005a9e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005a98:	6803      	ldr	r3, [r0, #0]
 8005a9a:	681b      	ldr	r3, [r3, #0]
 8005a9c:	4798      	blx	r3
    if (*currentPresenter)
 8005a9e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005aa2:	b110      	cbz	r0, 8005aaa <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005aa4:	6803      	ldr	r3, [r0, #0]
 8005aa6:	689b      	ldr	r3, [r3, #8]
 8005aa8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005aaa:	68e0      	ldr	r0, [r4, #12]
 8005aac:	2100      	movs	r1, #0
 8005aae:	f7ff f9d7 	bl	8004e60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005ab2:	2114      	movs	r1, #20
 8005ab4:	4605      	mov	r5, r0
 8005ab6:	f7ff f9d7 	bl	8004e68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005aba:	68a0      	ldr	r0, [r4, #8]
 8005abc:	6803      	ldr	r3, [r0, #0]
 8005abe:	2100      	movs	r1, #0
 8005ac0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ac2:	4798      	blx	r3
 8005ac4:	4606      	mov	r6, r0
 8005ac6:	f003 fde5 	bl	8009694 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005aca:	6860      	ldr	r0, [r4, #4]
 8005acc:	6803      	ldr	r3, [r0, #0]
 8005ace:	2100      	movs	r1, #0
 8005ad0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ad2:	4798      	blx	r3
 8005ad4:	4631      	mov	r1, r6
 8005ad6:	4604      	mov	r4, r0
 8005ad8:	f003 fdb6 	bl	8009648 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8005adc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005ae0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005ae4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005ae8:	b1dc      	cbz	r4, 8005b22 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8005aea:	1d23      	adds	r3, r4, #4
 8005aec:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005af0:	6833      	ldr	r3, [r6, #0]
 8005af2:	f8c4 a008 	str.w	sl, [r4, #8]
 8005af6:	4630      	mov	r0, r6
 8005af8:	68db      	ldr	r3, [r3, #12]
 8005afa:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005afc:	4798      	blx	r3
    newPresenter->activate();
 8005afe:	6823      	ldr	r3, [r4, #0]
 8005b00:	4620      	mov	r0, r4
 8005b02:	681b      	ldr	r3, [r3, #0]
 8005b04:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005b06:	4629      	mov	r1, r5
 8005b08:	4630      	mov	r0, r6
 8005b0a:	f011 fe35 	bl	8017778 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005b0e:	682b      	ldr	r3, [r5, #0]
 8005b10:	4628      	mov	r0, r5
 8005b12:	691b      	ldr	r3, [r3, #16]
 8005b14:	4798      	blx	r3
    newTransition->invalidate();
 8005b16:	682b      	ldr	r3, [r5, #0]
 8005b18:	4628      	mov	r0, r5
 8005b1a:	695b      	ldr	r3, [r3, #20]
}
 8005b1c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005b20:	4718      	bx	r3
    model->bind(newPresenter);
 8005b22:	4623      	mov	r3, r4
 8005b24:	e7e2      	b.n	8005aec <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8005b26:	bf00      	nop
 8005b28:	0802c754 	.word	0x0802c754
 8005b2c:	0802dacf 	.word	0x0802dacf
 8005b30:	0802c8f0 	.word	0x0802c8f0
 8005b34:	0802c937 	.word	0x0802c937
 8005b38:	0802c9da 	.word	0x0802c9da
 8005b3c:	20012dfc 	.word	0x20012dfc
 8005b40:	20012df8 	.word	0x20012df8

08005b44 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8005b44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005b48:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005b4c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005b4e:	68a0      	ldr	r0, [r4, #8]
 8005b50:	6803      	ldr	r3, [r0, #0]
 8005b52:	6a1b      	ldr	r3, [r3, #32]
 8005b54:	4798      	blx	r3
 8005b56:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005b5a:	d205      	bcs.n	8005b68 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8005b5c:	4b42      	ldr	r3, [pc, #264]	; (8005c68 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8005b5e:	4a43      	ldr	r2, [pc, #268]	; (8005c6c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005b60:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005b62:	4843      	ldr	r0, [pc, #268]	; (8005c70 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8005b64:	f024 ff3a 	bl	802a9dc <__assert_func>
 8005b68:	6860      	ldr	r0, [r4, #4]
 8005b6a:	6803      	ldr	r3, [r0, #0]
 8005b6c:	6a1b      	ldr	r3, [r3, #32]
 8005b6e:	4798      	blx	r3
 8005b70:	280f      	cmp	r0, #15
 8005b72:	d803      	bhi.n	8005b7c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8005b74:	4b3f      	ldr	r3, [pc, #252]	; (8005c74 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8005b76:	4a3d      	ldr	r2, [pc, #244]	; (8005c6c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005b78:	21a4      	movs	r1, #164	; 0xa4
 8005b7a:	e7f2      	b.n	8005b62 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005b7c:	68e0      	ldr	r0, [r4, #12]
 8005b7e:	6803      	ldr	r3, [r0, #0]
 8005b80:	6a1b      	ldr	r3, [r3, #32]
 8005b82:	4798      	blx	r3
 8005b84:	2837      	cmp	r0, #55	; 0x37
 8005b86:	d803      	bhi.n	8005b90 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8005b88:	4b3b      	ldr	r3, [pc, #236]	; (8005c78 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8005b8a:	4a38      	ldr	r2, [pc, #224]	; (8005c6c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005b8c:	21a5      	movs	r1, #165	; 0xa5
 8005b8e:	e7e8      	b.n	8005b62 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005b90:	f00f ffc6 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005b94:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005c7c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8005b98:	3004      	adds	r0, #4
 8005b9a:	f010 f827 	bl	8015bec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005b9e:	f8d9 0000 	ldr.w	r0, [r9]
 8005ba2:	b110      	cbz	r0, 8005baa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005ba4:	6803      	ldr	r3, [r0, #0]
 8005ba6:	68db      	ldr	r3, [r3, #12]
 8005ba8:	4798      	blx	r3
    if (*currentTrans)
 8005baa:	f8d9 0000 	ldr.w	r0, [r9]
 8005bae:	b110      	cbz	r0, 8005bb6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005bb0:	6803      	ldr	r3, [r0, #0]
 8005bb2:	681b      	ldr	r3, [r3, #0]
 8005bb4:	4798      	blx	r3
    if (*currentScreen)
 8005bb6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005c80 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8005bba:	f8d8 0000 	ldr.w	r0, [r8]
 8005bbe:	b110      	cbz	r0, 8005bc6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005bc0:	6803      	ldr	r3, [r0, #0]
 8005bc2:	695b      	ldr	r3, [r3, #20]
 8005bc4:	4798      	blx	r3
    if (*currentPresenter)
 8005bc6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005bca:	b110      	cbz	r0, 8005bd2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005bcc:	6803      	ldr	r3, [r0, #0]
 8005bce:	685b      	ldr	r3, [r3, #4]
 8005bd0:	4798      	blx	r3
    if (*currentScreen)
 8005bd2:	f8d8 0000 	ldr.w	r0, [r8]
 8005bd6:	b110      	cbz	r0, 8005bde <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005bd8:	6803      	ldr	r3, [r0, #0]
 8005bda:	681b      	ldr	r3, [r3, #0]
 8005bdc:	4798      	blx	r3
    if (*currentPresenter)
 8005bde:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005be2:	b110      	cbz	r0, 8005bea <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005be4:	6803      	ldr	r3, [r0, #0]
 8005be6:	689b      	ldr	r3, [r3, #8]
 8005be8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005bea:	68e0      	ldr	r0, [r4, #12]
 8005bec:	2100      	movs	r1, #0
 8005bee:	f7ff f937 	bl	8004e60 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005bf2:	2114      	movs	r1, #20
 8005bf4:	4605      	mov	r5, r0
 8005bf6:	f7ff f937 	bl	8004e68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005bfa:	68a0      	ldr	r0, [r4, #8]
 8005bfc:	6803      	ldr	r3, [r0, #0]
 8005bfe:	2100      	movs	r1, #0
 8005c00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c02:	4798      	blx	r3
 8005c04:	4606      	mov	r6, r0
 8005c06:	f003 fc01 	bl	800940c <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005c0a:	6860      	ldr	r0, [r4, #4]
 8005c0c:	6803      	ldr	r3, [r0, #0]
 8005c0e:	2100      	movs	r1, #0
 8005c10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c12:	4798      	blx	r3
 8005c14:	4631      	mov	r1, r6
 8005c16:	4604      	mov	r4, r0
 8005c18:	f003 fbd2 	bl	80093c0 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8005c1c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005c20:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005c24:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005c28:	b1dc      	cbz	r4, 8005c62 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8005c2a:	1d23      	adds	r3, r4, #4
 8005c2c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005c30:	6833      	ldr	r3, [r6, #0]
 8005c32:	f8c4 a008 	str.w	sl, [r4, #8]
 8005c36:	4630      	mov	r0, r6
 8005c38:	68db      	ldr	r3, [r3, #12]
 8005c3a:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005c3c:	4798      	blx	r3
    newPresenter->activate();
 8005c3e:	6823      	ldr	r3, [r4, #0]
 8005c40:	4620      	mov	r0, r4
 8005c42:	681b      	ldr	r3, [r3, #0]
 8005c44:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005c46:	4629      	mov	r1, r5
 8005c48:	4630      	mov	r0, r6
 8005c4a:	f011 fd95 	bl	8017778 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005c4e:	682b      	ldr	r3, [r5, #0]
 8005c50:	4628      	mov	r0, r5
 8005c52:	691b      	ldr	r3, [r3, #16]
 8005c54:	4798      	blx	r3
    newTransition->invalidate();
 8005c56:	682b      	ldr	r3, [r5, #0]
 8005c58:	4628      	mov	r0, r5
 8005c5a:	695b      	ldr	r3, [r3, #20]
}
 8005c5c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005c60:	4718      	bx	r3
    model->bind(newPresenter);
 8005c62:	4623      	mov	r3, r4
 8005c64:	e7e2      	b.n	8005c2c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8005c66:	bf00      	nop
 8005c68:	0802c754 	.word	0x0802c754
 8005c6c:	0802dbfb 	.word	0x0802dbfb
 8005c70:	0802c8f0 	.word	0x0802c8f0
 8005c74:	0802c937 	.word	0x0802c937
 8005c78:	0802c9da 	.word	0x0802c9da
 8005c7c:	20012dfc 	.word	0x20012dfc
 8005c80:	20012df8 	.word	0x20012df8

08005c84 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8005c84:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005c86:	4770      	bx	lr

08005c88 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 8005c88:	4770      	bx	lr

08005c8a <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 8005c8a:	4770      	bx	lr

08005c8c <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8005c8c:	b510      	push	{r4, lr}
}
 8005c8e:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8005c92:	4604      	mov	r4, r0
}
 8005c94:	f023 ffbb 	bl	8029c0e <_ZdlPvj>
 8005c98:	4620      	mov	r0, r4
 8005c9a:	bd10      	pop	{r4, pc}

08005c9c <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 8005c9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 8005ca0:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005ca4:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 8005ca6:	2600      	movs	r6, #0
 8005ca8:	ed2d 8b02 	vpush	{d8}
 8005cac:	8483      	strh	r3, [r0, #36]	; 0x24
 8005cae:	4bb2      	ldr	r3, [pc, #712]	; (8005f78 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2dc>)
          firstChild(0)
 8005cb0:	6286      	str	r6, [r0, #40]	; 0x28
 8005cb2:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8005cb6:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8005cba:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 8005cbe:	e9c0 6607 	strd	r6, r6, [r0, #28]
 8005cc2:	f848 3b2c 	str.w	r3, [r8], #44
 8005cc6:	b08b      	sub	sp, #44	; 0x2c
 8005cc8:	4604      	mov	r4, r0
 8005cca:	4640      	mov	r0, r8
 8005ccc:	f7fd f972 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8005cd0:	f104 0374 	add.w	r3, r4, #116	; 0x74
 8005cd4:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8005cd8:	4618      	mov	r0, r3
 8005cda:	9303      	str	r3, [sp, #12]
 8005cdc:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 8005ce0:	f7fd f968 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8005ce4:	4658      	mov	r0, fp
 8005ce6:	f7fd f965 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8005cea:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 8005cee:	4da3      	ldr	r5, [pc, #652]	; (8005f7c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
        : TextArea()
 8005cf0:	4650      	mov	r0, sl
 8005cf2:	f7fd f95f 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005cf6:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8005cfa:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 8005cfe:	4648      	mov	r0, r9
 8005d00:	f7fd f958 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8005d04:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8005d08:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 8005d0c:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8005d0e:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8005d12:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 8005d16:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 8005d1a:	f7fd f94b 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005d1e:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 8005d22:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8005d26:	4638      	mov	r0, r7
 8005d28:	f00c feb4 	bl	8012a94 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 8005d2c:	4a94      	ldr	r2, [pc, #592]	; (8005f80 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
 8005d2e:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 8005d30:	4640      	mov	r0, r8
 8005d32:	226d      	movs	r2, #109	; 0x6d
 8005d34:	21d9      	movs	r1, #217	; 0xd9
 8005d36:	ad04      	add	r5, sp, #16
 8005d38:	f7fd f909 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005d3c:	f04f 33ff 	mov.w	r3, #4294967295
 8005d40:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 8005d42:	4641      	mov	r1, r8
 8005d44:	4628      	mov	r0, r5
        linespace = space;
 8005d46:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8005d4a:	f00c fb6b 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005d4e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005d52:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 8005d56:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8005d5a:	4b8a      	ldr	r3, [pc, #552]	; (8005f84 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005d5c:	9308      	str	r3, [sp, #32]
 8005d5e:	223f      	movs	r2, #63	; 0x3f
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 8005d60:	a908      	add	r1, sp, #32
 8005d62:	4640      	mov	r0, r8
 8005d64:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8005d68:	f00c fdf6 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 8005d6c:	4641      	mov	r1, r8
 8005d6e:	4620      	mov	r0, r4
 8005d70:	f00a fc3e 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 8005d74:	9b03      	ldr	r3, [sp, #12]
 8005d76:	4631      	mov	r1, r6
 8005d78:	4618      	mov	r0, r3
 8005d7a:	226d      	movs	r2, #109	; 0x6d
 8005d7c:	f7fd f8e7 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8005d80:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 8005d82:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 8005d86:	f04f 32ff 	mov.w	r2, #4294967295
 8005d8a:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 8005d8e:	4619      	mov	r1, r3
 8005d90:	4628      	mov	r0, r5
 8005d92:	f00c fb47 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005d96:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005d9a:	4b7a      	ldr	r3, [pc, #488]	; (8005f84 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005d9c:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 8005d9e:	9b03      	ldr	r3, [sp, #12]
 8005da0:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 8005da4:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8005da8:	2240      	movs	r2, #64	; 0x40
 8005daa:	a908      	add	r1, sp, #32
 8005dac:	4618      	mov	r0, r3
 8005dae:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8005db2:	f00c fdd1 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 8005db6:	9b03      	ldr	r3, [sp, #12]
 8005db8:	4620      	mov	r0, r4
 8005dba:	4619      	mov	r1, r3
 8005dbc:	f00a fc18 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 8005dc0:	4632      	mov	r2, r6
 8005dc2:	4658      	mov	r0, fp
 8005dc4:	2171      	movs	r1, #113	; 0x71
 8005dc6:	f7fd f8c2 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005dca:	f04f 32ff 	mov.w	r2, #4294967295
 8005dce:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 8005dd2:	4659      	mov	r1, fp
 8005dd4:	4628      	mov	r0, r5
        linespace = space;
 8005dd6:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 8005dda:	f00c fb23 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005dde:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005de2:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 8005de6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005dea:	4b66      	ldr	r3, [pc, #408]	; (8005f84 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005dec:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 8005dee:	a908      	add	r1, sp, #32
 8005df0:	2341      	movs	r3, #65	; 0x41
 8005df2:	4658      	mov	r0, fp
 8005df4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005df8:	f00c fdae 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 8005dfc:	4659      	mov	r1, fp
 8005dfe:	4620      	mov	r0, r4
 8005e00:	f00a fbf6 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 8005e04:	4650      	mov	r0, sl
 8005e06:	227c      	movs	r2, #124	; 0x7c
 8005e08:	214c      	movs	r1, #76	; 0x4c
 8005e0a:	f7fd f8a0 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8005e0e:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 8005e12:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 8005e16:	f04f 32ff 	mov.w	r2, #4294967295
 8005e1a:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 8005e1e:	4651      	mov	r1, sl
 8005e20:	4628      	mov	r0, r5
 8005e22:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005e26:	4798      	blx	r3
 8005e28:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005e2c:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 8005e30:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005e34:	4b53      	ldr	r3, [pc, #332]	; (8005f84 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005e36:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 8005e38:	a908      	add	r1, sp, #32
 8005e3a:	233e      	movs	r3, #62	; 0x3e
 8005e3c:	4650      	mov	r0, sl
 8005e3e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005e42:	f00c fd89 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 8005e46:	4651      	mov	r1, sl
 8005e48:	4620      	mov	r0, r4
 8005e4a:	f00a fbd1 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 8005e4e:	4648      	mov	r0, r9
 8005e50:	228b      	movs	r2, #139	; 0x8b
 8005e52:	2156      	movs	r1, #86	; 0x56
 8005e54:	f7fd f87b 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8005e58:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 8005e5c:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 8005e60:	f04f 32ff 	mov.w	r2, #4294967295
 8005e64:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 8005e68:	4649      	mov	r1, r9
 8005e6a:	4628      	mov	r0, r5
 8005e6c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005e70:	4798      	blx	r3
 8005e72:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005e76:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 8005e7a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005e7e:	4b41      	ldr	r3, [pc, #260]	; (8005f84 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005e80:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 8005e82:	a908      	add	r1, sp, #32
 8005e84:	233d      	movs	r3, #61	; 0x3d
 8005e86:	4648      	mov	r0, r9
 8005e88:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005e8c:	f00c fd64 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 8005e90:	4649      	mov	r1, r9
 8005e92:	4620      	mov	r0, r4
 8005e94:	f00a fbac 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 8005e98:	ee18 0a10 	vmov	r0, s16
 8005e9c:	229a      	movs	r2, #154	; 0x9a
 8005e9e:	2156      	movs	r1, #86	; 0x56
 8005ea0:	f7fd f855 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8005ea4:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 8005ea8:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 8005eac:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8005eb0:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 8005eb4:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 8005eb8:	4628      	mov	r0, r5
 8005eba:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005ebe:	4798      	blx	r3
 8005ec0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005ec4:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 8005ec8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005ecc:	4b2d      	ldr	r3, [pc, #180]	; (8005f84 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005ece:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 8005ed0:	ee18 0a10 	vmov	r0, s16
 8005ed4:	233c      	movs	r3, #60	; 0x3c
 8005ed6:	a908      	add	r1, sp, #32
 8005ed8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005edc:	f00c fd3c 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 8005ee0:	ee18 1a10 	vmov	r1, s16
 8005ee4:	4620      	mov	r0, r4
 8005ee6:	f00a fb83 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005eea:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8005eec:	a908      	add	r1, sp, #32
 8005eee:	4638      	mov	r0, r7
 8005ef0:	f8ad 3020 	strh.w	r3, [sp, #32]
 8005ef4:	f00a fb0e 	bl	8010514 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 8005ef8:	2212      	movs	r2, #18
 8005efa:	4638      	mov	r0, r7
 8005efc:	211c      	movs	r1, #28
 8005efe:	f7fd f826 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8005f02:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8005f06:	4638      	mov	r0, r7
 8005f08:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005f0a:	21b8      	movs	r1, #184	; 0xb8
 8005f0c:	4798      	blx	r3
        setHeight(height);
 8005f0e:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8005f12:	4638      	mov	r0, r7
 8005f14:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005f16:	216a      	movs	r1, #106	; 0x6a
 8005f18:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 8005f1a:	225c      	movs	r2, #92	; 0x5c
 8005f1c:	4611      	mov	r1, r2
 8005f1e:	4638      	mov	r0, r7
 8005f20:	f00c fe63 	bl	8012bea <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 8005f24:	4638      	mov	r0, r7
 8005f26:	225a      	movs	r2, #90	; 0x5a
 8005f28:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8005f2c:	f00c fee2 	bl	8012cf4 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 8005f30:	4633      	mov	r3, r6
 8005f32:	225a      	movs	r2, #90	; 0x5a
 8005f34:	4638      	mov	r0, r7
 8005f36:	9600      	str	r6, [sp, #0]
 8005f38:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8005f3c:	f00a f997 	bl	801026e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 8005f40:	4631      	mov	r1, r6
 8005f42:	4638      	mov	r0, r7
 8005f44:	f00c fe80 	bl	8012c48 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8005f48:	2335      	movs	r3, #53	; 0x35
 8005f4a:	2208      	movs	r2, #8
 8005f4c:	4638      	mov	r0, r7
 8005f4e:	2105      	movs	r1, #5
 8005f50:	f00c fe36 	bl	8012bc0 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8005f54:	4638      	mov	r0, r7
 8005f56:	2101      	movs	r1, #1
 8005f58:	f00c fdd4 	bl	8012b04 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8005f5c:	4638      	mov	r0, r7
 8005f5e:	2101      	movs	r1, #1
 8005f60:	f00c fdd3 	bl	8012b0a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 8005f64:	4620      	mov	r0, r4
 8005f66:	4639      	mov	r1, r7
 8005f68:	f00a fb42 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005f6c:	4620      	mov	r0, r4
 8005f6e:	b00b      	add	sp, #44	; 0x2c
 8005f70:	ecbd 8b02 	vpop	{d8}
 8005f74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005f78:	0802de64 	.word	0x0802de64
 8005f7c:	0802c5e0 	.word	0x0802c5e0
 8005f80:	00a900f0 	.word	0x00a900f0
 8005f84:	0802c5d0 	.word	0x0802c5d0

08005f88 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005f88:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005f8a:	4770      	bx	lr

08005f8c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005f8c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005f8e:	4770      	bx	lr

08005f90 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005f90:	4770      	bx	lr

08005f92 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8005f92:	888b      	ldrh	r3, [r1, #4]
 8005f94:	69c0      	ldr	r0, [r0, #28]
 8005f96:	680a      	ldr	r2, [r1, #0]
 8005f98:	0adb      	lsrs	r3, r3, #11
 8005f9a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8005f9e:	4410      	add	r0, r2
 8005fa0:	4770      	bx	lr

08005fa2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8005fa2:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8005fa4:	b1c2      	cbz	r2, 8005fd8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8005fa6:	7b13      	ldrb	r3, [r2, #12]
 8005fa8:	b1b3      	cbz	r3, 8005fd8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8005faa:	7b54      	ldrb	r4, [r2, #13]
 8005fac:	7ad2      	ldrb	r2, [r2, #11]
 8005fae:	0224      	lsls	r4, r4, #8
 8005fb0:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005fb4:	4314      	orrs	r4, r2
 8005fb6:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005fb8:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005fba:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8005fbe:	8813      	ldrh	r3, [r2, #0]
 8005fc0:	428b      	cmp	r3, r1
 8005fc2:	d102      	bne.n	8005fca <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8005fc4:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8005fc8:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8005fca:	d805      	bhi.n	8005fd8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005fcc:	3801      	subs	r0, #1
 8005fce:	b280      	uxth	r0, r0
 8005fd0:	3204      	adds	r2, #4
 8005fd2:	2800      	cmp	r0, #0
 8005fd4:	d1f3      	bne.n	8005fbe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8005fd6:	e7f7      	b.n	8005fc8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005fd8:	2000      	movs	r0, #0
 8005fda:	e7f5      	b.n	8005fc8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08005fdc <_ZN8touchgfx13GeneratedFontD0Ev>:
 8005fdc:	b510      	push	{r4, lr}
 8005fde:	212c      	movs	r1, #44	; 0x2c
 8005fe0:	4604      	mov	r4, r0
 8005fe2:	f023 fe14 	bl	8029c0e <_ZdlPvj>
 8005fe6:	4620      	mov	r0, r4
 8005fe8:	bd10      	pop	{r4, pc}
	...

08005fec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8005fec:	b530      	push	{r4, r5, lr}
 8005fee:	b08b      	sub	sp, #44	; 0x2c
 8005ff0:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8005ff2:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8005ff6:	9508      	str	r5, [sp, #32]
 8005ff8:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8005ffc:	9507      	str	r5, [sp, #28]
 8005ffe:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8006002:	9506      	str	r5, [sp, #24]
 8006004:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8006008:	9505      	str	r5, [sp, #20]
 800600a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800600e:	9504      	str	r5, [sp, #16]
 8006010:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8006014:	9503      	str	r5, [sp, #12]
 8006016:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800601a:	9502      	str	r5, [sp, #8]
 800601c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8006020:	9501      	str	r5, [sp, #4]
 8006022:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8006026:	9500      	str	r5, [sp, #0]
 8006028:	f010 ff10 	bl	8016e4c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800602c:	4b06      	ldr	r3, [pc, #24]	; (8006048 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800602e:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8006030:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006032:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8006034:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8006036:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8006038:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800603a:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 800603c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800603e:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8006040:	4620      	mov	r0, r4
 8006042:	b00b      	add	sp, #44	; 0x2c
 8006044:	bd30      	pop	{r4, r5, pc}
 8006046:	bf00      	nop
 8006048:	0802def8 	.word	0x0802def8

0800604c <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 800604c:	4770      	bx	lr

0800604e <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800604e:	4770      	bx	lr

08006050 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006050:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006052:	68c2      	ldr	r2, [r0, #12]
 8006054:	6844      	ldr	r4, [r0, #4]
 8006056:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006058:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800605a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800605e:	07d2      	lsls	r2, r2, #31
 8006060:	bf48      	it	mi
 8006062:	5962      	ldrmi	r2, [r4, r5]
 8006064:	689b      	ldr	r3, [r3, #8]
    }
 8006066:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006068:	bf48      	it	mi
 800606a:	58d3      	ldrmi	r3, [r2, r3]
 800606c:	4718      	bx	r3

0800606e <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800606e:	6843      	ldr	r3, [r0, #4]
 8006070:	b12b      	cbz	r3, 800607e <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006072:	6883      	ldr	r3, [r0, #8]
 8006074:	b92b      	cbnz	r3, 8006082 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006076:	68c0      	ldr	r0, [r0, #12]
 8006078:	f000 0001 	and.w	r0, r0, #1
 800607c:	4770      	bx	lr
 800607e:	4618      	mov	r0, r3
 8006080:	4770      	bx	lr
 8006082:	2001      	movs	r0, #1
    }
 8006084:	4770      	bx	lr

08006086 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006086:	b510      	push	{r4, lr}
 8006088:	2110      	movs	r1, #16
 800608a:	4604      	mov	r4, r0
 800608c:	f023 fdbf 	bl	8029c0e <_ZdlPvj>
 8006090:	4620      	mov	r0, r4
 8006092:	bd10      	pop	{r4, pc}

08006094 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8006094:	b510      	push	{r4, lr}
 8006096:	4b03      	ldr	r3, [pc, #12]	; (80060a4 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8006098:	6003      	str	r3, [r0, #0]
 800609a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800609c:	f00e f83e 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80060a0:	4620      	mov	r0, r4
 80060a2:	bd10      	pop	{r4, pc}
 80060a4:	0802df70 	.word	0x0802df70

080060a8 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80060a8:	b507      	push	{r0, r1, r2, lr}
 80060aa:	4b07      	ldr	r3, [pc, #28]	; (80060c8 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 80060ac:	6003      	str	r3, [r0, #0]
 80060ae:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80060b0:	f00e f834 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80060b4:	9801      	ldr	r0, [sp, #4]
 80060b6:	f241 117c 	movw	r1, #4476	; 0x117c
 80060ba:	f023 fda8 	bl	8029c0e <_ZdlPvj>
 80060be:	9801      	ldr	r0, [sp, #4]
 80060c0:	b003      	add	sp, #12
 80060c2:	f85d fb04 	ldr.w	pc, [sp], #4
 80060c6:	bf00      	nop
 80060c8:	0802df70 	.word	0x0802df70

080060cc <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80060cc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 80060ce:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 80060d2:	4299      	cmp	r1, r3
{
 80060d4:	4604      	mov	r4, r0
 80060d6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 80060d8:	d103      	bne.n	80060e2 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80060da:	f00f fd21 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 80060de:	f7fe fb1d 	bl	800471c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80060e2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80060e6:	429d      	cmp	r5, r3
 80060e8:	d103      	bne.n	80060f2 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80060ea:	f00f fd19 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 80060ee:	f7fe fba5 	bl	800483c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 80060f2:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80060f6:	429d      	cmp	r5, r3
 80060f8:	d103      	bne.n	8006102 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 80060fa:	f00f fd11 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 80060fe:	f7fe fbdd 	bl	80048bc <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 8006102:	f504 7446 	add.w	r4, r4, #792	; 0x318
 8006106:	42a5      	cmp	r5, r4
 8006108:	d10a      	bne.n	8006120 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 800610a:	4806      	ldr	r0, [pc, #24]	; (8006124 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 800610c:	2200      	movs	r2, #0
 800610e:	2120      	movs	r1, #32
 8006110:	f004 f908 	bl	800a324 <HAL_GPIO_WritePin>
 8006114:	f00f fd04 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8006118:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 800611c:	f7fe bbde 	b.w	80048dc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8006120:	bd38      	pop	{r3, r4, r5, pc}
 8006122:	bf00      	nop
 8006124:	40021000 	.word	0x40021000

08006128 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8006128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800612c:	ed2d 8b06 	vpush	{d8-d10}
 8006130:	4604      	mov	r4, r0
 8006132:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8006134:	46a3      	mov	fp, r4
        : presenter(0)
 8006136:	2500      	movs	r5, #0
 8006138:	f011 f972 	bl	8017420 <_ZN8touchgfx6ScreenC1Ev>
 800613c:	4b6a      	ldr	r3, [pc, #424]	; (80062e8 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 800613e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006140:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006144:	2226      	movs	r2, #38	; 0x26
 8006146:	4629      	mov	r1, r5
 8006148:	4658      	mov	r0, fp
 800614a:	f024 fe4c 	bl	802ade6 <memset>
 800614e:	4658      	mov	r0, fp
 8006150:	f7fc ff1e 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 8006154:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006158:	26ff      	movs	r6, #255	; 0xff
 800615a:	4b64      	ldr	r3, [pc, #400]	; (80062ec <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 800615c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800615e:	2226      	movs	r2, #38	; 0x26
 8006160:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006164:	4629      	mov	r1, r5
 8006166:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800616a:	4650      	mov	r0, sl
        : color(col)
 800616c:	66a5      	str	r5, [r4, #104]	; 0x68
 800616e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006172:	f024 fe38 	bl	802ade6 <memset>
 8006176:	4650      	mov	r0, sl
 8006178:	f7fc ff0a 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 800617c:	4b5c      	ldr	r3, [pc, #368]	; (80062f0 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 800617e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006180:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8006184:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006188:	a90c      	add	r1, sp, #48	; 0x30
 800618a:	4650      	mov	r0, sl
 800618c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006190:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006194:	f00c ffbb 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006198:	4648      	mov	r0, r9
 800619a:	f7fc ff0b 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 800619e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80061a2:	4b54      	ldr	r3, [pc, #336]	; (80062f4 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 80061a4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80061a8:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80061ac:	4638      	mov	r0, r7
 80061ae:	f00b fe77 	bl	8011ea0 <_ZN8touchgfx4LineC1Ev>
 80061b2:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80061b6:	4618      	mov	r0, r3
 80061b8:	9303      	str	r3, [sp, #12]
 80061ba:	f7fb fa79 	bl	80016b0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80061be:	4b4e      	ldr	r3, [pc, #312]	; (80062f8 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 80061c0:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80061c4:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 80061c8:	3324      	adds	r3, #36	; 0x24
 80061ca:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80061ce:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80061d2:	4640      	mov	r0, r8
 80061d4:	f7fc feee 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 80061d8:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 80061dc:	4618      	mov	r0, r3
 80061de:	ee08 3a10 	vmov	s16, r3
 80061e2:	f7fc fee7 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 80061e6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80061ea:	4618      	mov	r0, r3
 80061ec:	ee08 3a90 	vmov	s17, r3
 80061f0:	f7fc fee0 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 80061f4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80061f8:	4618      	mov	r0, r3
 80061fa:	ee09 3a10 	vmov	s18, r3
 80061fe:	f00d f8c7 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006202:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006206:	4618      	mov	r0, r3
 8006208:	ee09 3a90 	vmov	s19, r3
 800620c:	f00d f8c0 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006210:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006214:	4618      	mov	r0, r3
 8006216:	ee0a 3a10 	vmov	s20, r3
 800621a:	f00d f8b9 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800621e:	f504 7346 	add.w	r3, r4, #792	; 0x318
 8006222:	4618      	mov	r0, r3
 8006224:	ee0a 3a90 	vmov	s21, r3
 8006228:	f00c ff4a 	bl	80130c0 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800622c:	4a33      	ldr	r2, [pc, #204]	; (80062fc <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 800622e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006232:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8006236:	4a32      	ldr	r2, [pc, #200]	; (8006300 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006238:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800623c:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8006240:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8006244:	f00d ff60 	bl	8014108 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006248:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800624c:	462a      	mov	r2, r5
 800624e:	4658      	mov	r0, fp
 8006250:	9300      	str	r3, [sp, #0]
 8006252:	4629      	mov	r1, r5
 8006254:	23f0      	movs	r3, #240	; 0xf0
 8006256:	f7fc fe87 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 800625a:	1d26      	adds	r6, r4, #4
        color = newColor;
 800625c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006260:	66a3      	str	r3, [r4, #104]	; 0x68
 8006262:	4659      	mov	r1, fp
 8006264:	4630      	mov	r0, r6
 8006266:	f00a f9c3 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800626a:	462a      	mov	r2, r5
 800626c:	4650      	mov	r0, sl
 800626e:	4629      	mov	r1, r5
 8006270:	f7fc fe6d 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8006274:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006276:	4650      	mov	r0, sl
 8006278:	a90c      	add	r1, sp, #48	; 0x30
 800627a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800627e:	f00c ff46 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006282:	4651      	mov	r1, sl
 8006284:	4630      	mov	r0, r6
 8006286:	f00a f9b3 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 800628a:	f44f 729a 	mov.w	r2, #308	; 0x134
 800628e:	2156      	movs	r1, #86	; 0x56
 8006290:	4648      	mov	r0, r9
 8006292:	f7fc fe5c 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8006296:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800629a:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800629e:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80062a2:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80062a6:	4650      	mov	r0, sl
 80062a8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80062ac:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80062b0:	4649      	mov	r1, r9
 80062b2:	4798      	blx	r3
 80062b4:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80062b8:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80062bc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80062c0:	4b10      	ldr	r3, [pc, #64]	; (8006304 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 80062c2:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 80062c4:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 80062c8:	b92b      	cbnz	r3, 80062d6 <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 80062ca:	4b0f      	ldr	r3, [pc, #60]	; (8006308 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 80062cc:	4a0f      	ldr	r2, [pc, #60]	; (800630c <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 80062ce:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80062d0:	480f      	ldr	r0, [pc, #60]	; (8006310 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 80062d2:	f024 fb83 	bl	802a9dc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80062d6:	4b0f      	ldr	r3, [pc, #60]	; (8006314 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80062d8:	881b      	ldrh	r3, [r3, #0]
 80062da:	2b3a      	cmp	r3, #58	; 0x3a
 80062dc:	d81e      	bhi.n	800631c <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 80062de:	4b0e      	ldr	r3, [pc, #56]	; (8006318 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 80062e0:	4a0a      	ldr	r2, [pc, #40]	; (800630c <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 80062e2:	2161      	movs	r1, #97	; 0x61
 80062e4:	e7f4      	b.n	80062d0 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 80062e6:	bf00      	nop
 80062e8:	0802df70 	.word	0x0802df70
 80062ec:	0802ef30 	.word	0x0802ef30
 80062f0:	0802f0f8 	.word	0x0802f0f8
 80062f4:	0802c5e0 	.word	0x0802c5e0
 80062f8:	0802ec64 	.word	0x0802ec64
 80062fc:	0802df58 	.word	0x0802df58
 8006300:	080060cd 	.word	0x080060cd
 8006304:	20012e0c 	.word	0x20012e0c
 8006308:	0802c420 	.word	0x0802c420
 800630c:	0802c522 	.word	0x0802c522
 8006310:	0802c49d 	.word	0x0802c49d
 8006314:	20012e10 	.word	0x20012e10
 8006318:	0802c4e4 	.word	0x0802c4e4
        return texts->getText(typedTextId);
 800631c:	4ba5      	ldr	r3, [pc, #660]	; (80065b4 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 800631e:	213a      	movs	r1, #58	; 0x3a
 8006320:	6818      	ldr	r0, [r3, #0]
 8006322:	f002 fdf7 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 8006326:	4aa4      	ldr	r2, [pc, #656]	; (80065b8 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8006328:	4603      	mov	r3, r0
 800632a:	2104      	movs	r1, #4
 800632c:	4650      	mov	r0, sl
 800632e:	f012 fd67 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 8006332:	4648      	mov	r0, r9
        wc1 = value;
 8006334:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8006338:	f00c faee 	bl	8012918 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800633c:	4b9f      	ldr	r3, [pc, #636]	; (80065bc <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 800633e:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8006340:	a90c      	add	r1, sp, #48	; 0x30
 8006342:	233b      	movs	r3, #59	; 0x3b
 8006344:	4648      	mov	r0, r9
 8006346:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800634a:	f00c fb05 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800634e:	4649      	mov	r1, r9
 8006350:	4630      	mov	r0, r6
 8006352:	f00a f94d 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006356:	230a      	movs	r3, #10
 8006358:	9300      	str	r3, [sp, #0]
 800635a:	2232      	movs	r2, #50	; 0x32
 800635c:	23f0      	movs	r3, #240	; 0xf0
 800635e:	4629      	mov	r1, r5
 8006360:	4638      	mov	r0, r7
 8006362:	f7fc fe01 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006366:	9b03      	ldr	r3, [sp, #12]
 8006368:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800636c:	22a0      	movs	r2, #160	; 0xa0
 800636e:	4611      	mov	r1, r2
 8006370:	4638      	mov	r0, r7
 8006372:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006376:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800637a:	f00b fea7 	bl	80120cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800637e:	22a0      	movs	r2, #160	; 0xa0
 8006380:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006384:	4638      	mov	r0, r7
 8006386:	f00b feac 	bl	80120e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800638a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800638e:	2b20      	cmp	r3, #32
 8006390:	d005      	beq.n	800639e <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8006392:	2320      	movs	r3, #32
 8006394:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8006398:	4638      	mov	r0, r7
 800639a:	f00b fda1 	bl	8011ee0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800639e:	4638      	mov	r0, r7
 80063a0:	2101      	movs	r1, #1
 80063a2:	f00b fea9 	bl	80120f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80063a6:	4639      	mov	r1, r7
 80063a8:	4630      	mov	r0, r6
 80063aa:	ad04      	add	r5, sp, #16
        color = newColor;
 80063ac:	f04f 37ff 	mov.w	r7, #4294967295
 80063b0:	f00a f91e 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80063b4:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 80063b8:	2223      	movs	r2, #35	; 0x23
 80063ba:	4640      	mov	r0, r8
 80063bc:	2145      	movs	r1, #69	; 0x45
 80063be:	f7fc fdc6 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80063c2:	4641      	mov	r1, r8
 80063c4:	4628      	mov	r0, r5
        color = newColor;
 80063c6:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 80063ca:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 80063ce:	f00c f829 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80063d2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 80063d6:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 80063da:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80063de:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80063e2:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 80065bc <_ZN17Main_MenuViewBaseC1Ev+0x494>
 80063e6:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80063ea:	2360      	movs	r3, #96	; 0x60
 80063ec:	4649      	mov	r1, r9
 80063ee:	4640      	mov	r0, r8
 80063f0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80063f4:	f00c fab0 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80063f8:	4641      	mov	r1, r8
 80063fa:	4630      	mov	r0, r6
 80063fc:	f00a f8f8 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006400:	ee18 0a10 	vmov	r0, s16
 8006404:	220c      	movs	r2, #12
 8006406:	2136      	movs	r1, #54	; 0x36
 8006408:	f7fc fda1 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 800640c:	ee18 1a10 	vmov	r1, s16
 8006410:	4628      	mov	r0, r5
        color = newColor;
 8006412:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8006416:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800641a:	f00c f803 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800641e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006422:	ee18 3a10 	vmov	r3, s16
 8006426:	333c      	adds	r3, #60	; 0x3c
 8006428:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800642c:	2361      	movs	r3, #97	; 0x61
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 800642e:	ee18 0a10 	vmov	r0, s16
 8006432:	4649      	mov	r1, r9
 8006434:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006438:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800643c:	f00c fa8c 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006440:	ee18 1a10 	vmov	r1, s16
 8006444:	4630      	mov	r0, r6
 8006446:	f00a f8d3 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 800644a:	ee18 0a90 	vmov	r0, s17
 800644e:	223c      	movs	r2, #60	; 0x3c
 8006450:	2158      	movs	r1, #88	; 0x58
 8006452:	f7fc fd7c 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8006456:	ee18 1a90 	vmov	r1, s17
 800645a:	4628      	mov	r0, r5
        color = newColor;
 800645c:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006460:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006464:	f00b ffde 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006468:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800646c:	ee18 3a90 	vmov	r3, s17
 8006470:	333c      	adds	r3, #60	; 0x3c
 8006472:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006476:	232a      	movs	r3, #42	; 0x2a
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8006478:	ee18 0a90 	vmov	r0, s17
 800647c:	4649      	mov	r1, r9
 800647e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006482:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8006486:	f00c fa67 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800648a:	ee18 1a90 	vmov	r1, s17
 800648e:	4630      	mov	r0, r6
 8006490:	f00a f8ae 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006494:	ee19 0a10 	vmov	r0, s18
 8006498:	22f0      	movs	r2, #240	; 0xf0
 800649a:	2121      	movs	r1, #33	; 0x21
 800649c:	f7fc fd57 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 80064a0:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80064a4:	464a      	mov	r2, r9
 80064a6:	f04f 0802 	mov.w	r8, #2
 80064aa:	a90b      	add	r1, sp, #44	; 0x2c
 80064ac:	ee19 0a10 	vmov	r0, s18
 80064b0:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80064b4:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 80064b8:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80064bc:	f00c fc31 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80064c0:	2362      	movs	r3, #98	; 0x62
 80064c2:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80064c6:	350c      	adds	r5, #12
        updateTextPosition();
 80064c8:	ee19 0a10 	vmov	r0, s18
 80064cc:	f7fc fd94 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80064d0:	ee19 1a10 	vmov	r1, s18
 80064d4:	4630      	mov	r0, r6
        colorPressed = col;
 80064d6:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 80064da:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 80064de:	f00a f887 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80064e2:	ee19 0a90 	vmov	r0, s19
 80064e6:	22aa      	movs	r2, #170	; 0xaa
 80064e8:	2121      	movs	r1, #33	; 0x21
 80064ea:	f7fc fd30 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80064ee:	464a      	mov	r2, r9
 80064f0:	a90b      	add	r1, sp, #44	; 0x2c
 80064f2:	ee19 0a90 	vmov	r0, s19
 80064f6:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80064fa:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80064fe:	f00c fc10 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006502:	2363      	movs	r3, #99	; 0x63
 8006504:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006508:	ee19 0a90 	vmov	r0, s19
 800650c:	f7fc fd74 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006510:	ee19 1a90 	vmov	r1, s19
 8006514:	4630      	mov	r0, r6
        colorPressed = col;
 8006516:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 800651a:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800651e:	f00a f867 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006522:	ee1a 0a10 	vmov	r0, s20
 8006526:	2264      	movs	r2, #100	; 0x64
 8006528:	2121      	movs	r1, #33	; 0x21
 800652a:	f7fc fd10 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800652e:	464a      	mov	r2, r9
 8006530:	a90b      	add	r1, sp, #44	; 0x2c
 8006532:	ee1a 0a10 	vmov	r0, s20
 8006536:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800653a:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800653e:	f00c fbf0 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006542:	2364      	movs	r3, #100	; 0x64
 8006544:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 8006548:	ee1a 0a10 	vmov	r0, s20
 800654c:	f7fc fd54 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006550:	ee1a 1a10 	vmov	r1, s20
 8006554:	4630      	mov	r0, r6
        colorPressed = col;
 8006556:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 800655a:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 800655e:	f00a f847 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 8006562:	ee1a 0a90 	vmov	r0, s21
 8006566:	2205      	movs	r2, #5
 8006568:	21c6      	movs	r1, #198	; 0xc6
 800656a:	f7fc fcf0 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 800656e:	2301      	movs	r3, #1
 8006570:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006574:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8006576:	ee1a 0a90 	vmov	r0, s21
 800657a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800657e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006582:	aa0a      	add	r2, sp, #40	; 0x28
 8006584:	ab0b      	add	r3, sp, #44	; 0x2c
 8006586:	a909      	add	r1, sp, #36	; 0x24
 8006588:	f8cd 9000 	str.w	r9, [sp]
 800658c:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8006590:	f00c fd01 	bl	8012f96 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8006594:	4630      	mov	r0, r6
 8006596:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 800659a:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 800659e:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 80065a2:	f00a f825 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80065a6:	4620      	mov	r0, r4
 80065a8:	b00f      	add	sp, #60	; 0x3c
 80065aa:	ecbd 8b06 	vpop	{d8-d10}
 80065ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80065b2:	bf00      	nop
 80065b4:	20012e18 	.word	0x20012e18
 80065b8:	0802c55a 	.word	0x0802c55a
 80065bc:	0802c5d0 	.word	0x0802c5d0

080065c0 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 80065c0:	4770      	bx	lr

080065c2 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80065c2:	4770      	bx	lr

080065c4 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80065c4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80065c6:	68c2      	ldr	r2, [r0, #12]
 80065c8:	6844      	ldr	r4, [r0, #4]
 80065ca:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80065cc:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80065ce:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80065d2:	07d2      	lsls	r2, r2, #31
 80065d4:	bf48      	it	mi
 80065d6:	5962      	ldrmi	r2, [r4, r5]
 80065d8:	689b      	ldr	r3, [r3, #8]
    }
 80065da:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80065dc:	bf48      	it	mi
 80065de:	58d3      	ldrmi	r3, [r2, r3]
 80065e0:	4718      	bx	r3

080065e2 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80065e2:	6843      	ldr	r3, [r0, #4]
 80065e4:	b12b      	cbz	r3, 80065f2 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80065e6:	6883      	ldr	r3, [r0, #8]
 80065e8:	b92b      	cbnz	r3, 80065f6 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80065ea:	68c0      	ldr	r0, [r0, #12]
 80065ec:	f000 0001 	and.w	r0, r0, #1
 80065f0:	4770      	bx	lr
 80065f2:	4618      	mov	r0, r3
 80065f4:	4770      	bx	lr
 80065f6:	2001      	movs	r0, #1
    }
 80065f8:	4770      	bx	lr

080065fa <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80065fa:	b510      	push	{r4, lr}
 80065fc:	2110      	movs	r1, #16
 80065fe:	4604      	mov	r4, r0
 8006600:	f023 fb05 	bl	8029c0e <_ZdlPvj>
 8006604:	4620      	mov	r0, r4
 8006606:	bd10      	pop	{r4, pc}

08006608 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006608:	b510      	push	{r4, lr}
 800660a:	4b03      	ldr	r3, [pc, #12]	; (8006618 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 800660c:	6003      	str	r3, [r0, #0]
 800660e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006610:	f00d fd84 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006614:	4620      	mov	r0, r4
 8006616:	bd10      	pop	{r4, pc}
 8006618:	0802dfbc 	.word	0x0802dfbc

0800661c <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 800661c:	b507      	push	{r0, r1, r2, lr}
 800661e:	4b07      	ldr	r3, [pc, #28]	; (800663c <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8006620:	6003      	str	r3, [r0, #0]
 8006622:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006624:	f00d fd7a 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006628:	9801      	ldr	r0, [sp, #4]
 800662a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800662e:	f023 faee 	bl	8029c0e <_ZdlPvj>
 8006632:	9801      	ldr	r0, [sp, #4]
 8006634:	b003      	add	sp, #12
 8006636:	f85d fb04 	ldr.w	pc, [sp], #4
 800663a:	bf00      	nop
 800663c:	0802dfbc 	.word	0x0802dfbc

08006640 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006640:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006642:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006646:	4299      	cmp	r1, r3
{
 8006648:	4604      	mov	r4, r0
 800664a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800664c:	d103      	bne.n	8006656 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800664e:	f00f fa67 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8006652:	f7fe f853 	bl	80046fc <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8006656:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800665a:	429d      	cmp	r5, r3
 800665c:	d103      	bne.n	8006666 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800665e:	f00f fa5f 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006662:	f7fe f87b 	bl	800475c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8006666:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800666a:	42a5      	cmp	r5, r4
 800666c:	d105      	bne.n	800667a <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800666e:	f00f fa57 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8006672:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8006676:	f7fe b8a1 	b.w	80047bc <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 800667a:	bd38      	pop	{r3, r4, r5, pc}

0800667c <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 800667c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006680:	ed2d 8b06 	vpush	{d8-d10}
 8006684:	4604      	mov	r4, r0
 8006686:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8006688:	46a3      	mov	fp, r4
 800668a:	2500      	movs	r5, #0
 800668c:	f010 fec8 	bl	8017420 <_ZN8touchgfx6ScreenC1Ev>
 8006690:	4b66      	ldr	r3, [pc, #408]	; (800682c <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 8006692:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006694:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006698:	2226      	movs	r2, #38	; 0x26
 800669a:	4629      	mov	r1, r5
 800669c:	4658      	mov	r0, fp
 800669e:	f024 fba2 	bl	802ade6 <memset>
 80066a2:	4658      	mov	r0, fp
 80066a4:	f7fc fc74 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 80066a8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80066ac:	26ff      	movs	r6, #255	; 0xff
 80066ae:	4b60      	ldr	r3, [pc, #384]	; (8006830 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 80066b0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80066b2:	2226      	movs	r2, #38	; 0x26
 80066b4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80066b8:	4629      	mov	r1, r5
 80066ba:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80066be:	4650      	mov	r0, sl
 80066c0:	66a5      	str	r5, [r4, #104]	; 0x68
 80066c2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80066c6:	f024 fb8e 	bl	802ade6 <memset>
 80066ca:	4650      	mov	r0, sl
 80066cc:	f7fc fc60 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 80066d0:	4b58      	ldr	r3, [pc, #352]	; (8006834 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 80066d2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80066d4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80066d8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80066dc:	a90a      	add	r1, sp, #40	; 0x28
 80066de:	4650      	mov	r0, sl
 80066e0:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80066e4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80066e8:	f00c fd11 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80066ec:	4648      	mov	r0, r9
 80066ee:	f7fc fc61 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80066f2:	4b51      	ldr	r3, [pc, #324]	; (8006838 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 80066f4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80066f8:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80066fc:	4618      	mov	r0, r3
 80066fe:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006702:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8006706:	ee08 3a90 	vmov	s17, r3
 800670a:	f7fc fc53 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 800670e:	4638      	mov	r0, r7
 8006710:	f00b fbc6 	bl	8011ea0 <_ZN8touchgfx4LineC1Ev>
 8006714:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006718:	4618      	mov	r0, r3
 800671a:	9303      	str	r3, [sp, #12]
 800671c:	f7fa ffc8 	bl	80016b0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006720:	4b46      	ldr	r3, [pc, #280]	; (800683c <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 8006722:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006726:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 800672a:	3324      	adds	r3, #36	; 0x24
 800672c:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8006730:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8006734:	4640      	mov	r0, r8
 8006736:	f7fc fc3d 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 800673a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800673e:	4618      	mov	r0, r3
 8006740:	ee08 3a10 	vmov	s16, r3
 8006744:	f7fc fc36 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8006748:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800674c:	4618      	mov	r0, r3
 800674e:	ee09 3a10 	vmov	s18, r3
 8006752:	f00c fe1d 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006756:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800675a:	4618      	mov	r0, r3
 800675c:	ee09 3a90 	vmov	s19, r3
 8006760:	f00c fe16 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006764:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006768:	4618      	mov	r0, r3
 800676a:	ee0a 3a10 	vmov	s20, r3
 800676e:	f00c fe0f 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006772:	4a33      	ldr	r2, [pc, #204]	; (8006840 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8006774:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006778:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 800677c:	4a31      	ldr	r2, [pc, #196]	; (8006844 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800677e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006782:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006786:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800678a:	f00d fcbd 	bl	8014108 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800678e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006792:	462a      	mov	r2, r5
 8006794:	4658      	mov	r0, fp
 8006796:	9300      	str	r3, [sp, #0]
 8006798:	4629      	mov	r1, r5
 800679a:	23f0      	movs	r3, #240	; 0xf0
 800679c:	f7fc fbe4 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 80067a0:	1d26      	adds	r6, r4, #4
        color = newColor;
 80067a2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80067a6:	66a3      	str	r3, [r4, #104]	; 0x68
 80067a8:	4659      	mov	r1, fp
 80067aa:	4630      	mov	r0, r6
 80067ac:	f009 ff20 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80067b0:	462a      	mov	r2, r5
 80067b2:	4650      	mov	r0, sl
 80067b4:	4629      	mov	r1, r5
 80067b6:	f7fc fbca 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 80067ba:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80067bc:	4650      	mov	r0, sl
 80067be:	a90a      	add	r1, sp, #40	; 0x28
 80067c0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80067c4:	f00c fca3 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80067c8:	4651      	mov	r1, sl
 80067ca:	4630      	mov	r0, r6
 80067cc:	f009 ff10 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80067d0:	f44f 729a 	mov.w	r2, #308	; 0x134
 80067d4:	2156      	movs	r1, #86	; 0x56
 80067d6:	4648      	mov	r0, r9
 80067d8:	f7fc fbb9 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80067dc:	f04f 33ff 	mov.w	r3, #4294967295
 80067e0:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80067e4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80067e8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80067ec:	f10d 0b10 	add.w	fp, sp, #16
 80067f0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80067f4:	4649      	mov	r1, r9
 80067f6:	4658      	mov	r0, fp
 80067f8:	4798      	blx	r3
 80067fa:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80067fe:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006802:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006806:	4b10      	ldr	r3, [pc, #64]	; (8006848 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8006808:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 800680a:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800680e:	b92b      	cbnz	r3, 800681c <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8006810:	4b0e      	ldr	r3, [pc, #56]	; (800684c <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8006812:	4a0f      	ldr	r2, [pc, #60]	; (8006850 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8006814:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006816:	480f      	ldr	r0, [pc, #60]	; (8006854 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8006818:	f024 f8e0 	bl	802a9dc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800681c:	4b0e      	ldr	r3, [pc, #56]	; (8006858 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800681e:	881b      	ldrh	r3, [r3, #0]
 8006820:	2b2b      	cmp	r3, #43	; 0x2b
 8006822:	d81d      	bhi.n	8006860 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8006824:	4b0d      	ldr	r3, [pc, #52]	; (800685c <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8006826:	4a0a      	ldr	r2, [pc, #40]	; (8006850 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8006828:	2161      	movs	r1, #97	; 0x61
 800682a:	e7f4      	b.n	8006816 <_ZN19MeasurementViewBaseC1Ev+0x19a>
 800682c:	0802dfbc 	.word	0x0802dfbc
 8006830:	0802ef30 	.word	0x0802ef30
 8006834:	0802f0f8 	.word	0x0802f0f8
 8006838:	0802c5e0 	.word	0x0802c5e0
 800683c:	0802ec64 	.word	0x0802ec64
 8006840:	0802dfa4 	.word	0x0802dfa4
 8006844:	08006641 	.word	0x08006641
 8006848:	20012e0c 	.word	0x20012e0c
 800684c:	0802c420 	.word	0x0802c420
 8006850:	0802c522 	.word	0x0802c522
 8006854:	0802c49d 	.word	0x0802c49d
 8006858:	20012e10 	.word	0x20012e10
 800685c:	0802c4e4 	.word	0x0802c4e4
        return texts->getText(typedTextId);
 8006860:	4b95      	ldr	r3, [pc, #596]	; (8006ab8 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 8006862:	212b      	movs	r1, #43	; 0x2b
 8006864:	6818      	ldr	r0, [r3, #0]
 8006866:	f002 fb55 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 800686a:	4a94      	ldr	r2, [pc, #592]	; (8006abc <_ZN19MeasurementViewBaseC1Ev+0x440>)
 800686c:	4603      	mov	r3, r0
 800686e:	2104      	movs	r1, #4
 8006870:	4650      	mov	r0, sl
 8006872:	f012 fac5 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006876:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 800687a:	4648      	mov	r0, r9
 800687c:	f00c f84c 	bl	8012918 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006880:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8006ac0 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8006884:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006888:	232c      	movs	r3, #44	; 0x2c
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 800688a:	a90a      	add	r1, sp, #40	; 0x28
 800688c:	4648      	mov	r0, r9
 800688e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006892:	f00c f861 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006896:	4649      	mov	r1, r9
 8006898:	4630      	mov	r0, r6
 800689a:	f009 fea9 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 800689e:	223c      	movs	r2, #60	; 0x3c
 80068a0:	ee18 0a90 	vmov	r0, s17
 80068a4:	213d      	movs	r1, #61	; 0x3d
 80068a6:	f7fc fb52 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80068aa:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80068ae:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 80068b2:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80068b6:	4658      	mov	r0, fp
        linespace = space;
 80068b8:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 80068bc:	f00b fdb2 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80068c0:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80068c4:	f504 7390 	add.w	r3, r4, #288	; 0x120
 80068c8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80068cc:	2339      	movs	r3, #57	; 0x39
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 80068ce:	ee18 0a90 	vmov	r0, s17
 80068d2:	a90a      	add	r1, sp, #40	; 0x28
 80068d4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80068d8:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80068dc:	f00c f83c 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80068e0:	ee18 1a90 	vmov	r1, s17
 80068e4:	4630      	mov	r0, r6
 80068e6:	f009 fe83 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80068ea:	230a      	movs	r3, #10
 80068ec:	9300      	str	r3, [sp, #0]
 80068ee:	2232      	movs	r2, #50	; 0x32
 80068f0:	23f0      	movs	r3, #240	; 0xf0
 80068f2:	4629      	mov	r1, r5
 80068f4:	4638      	mov	r0, r7
 80068f6:	f7fc fb37 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 80068fa:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80068fe:	22a0      	movs	r2, #160	; 0xa0
 8006900:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006904:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006908:	9b03      	ldr	r3, [sp, #12]
 800690a:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800690e:	4611      	mov	r1, r2
 8006910:	4638      	mov	r0, r7
 8006912:	f00b fbdb 	bl	80120cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006916:	22a0      	movs	r2, #160	; 0xa0
 8006918:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800691c:	4638      	mov	r0, r7
 800691e:	f00b fbe0 	bl	80120e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006922:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8006926:	2b20      	cmp	r3, #32
 8006928:	d005      	beq.n	8006936 <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 800692a:	2320      	movs	r3, #32
 800692c:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006930:	4638      	mov	r0, r7
 8006932:	f00b fad5 	bl	8011ee0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006936:	4638      	mov	r0, r7
 8006938:	2101      	movs	r1, #1
 800693a:	f00b fbdd 	bl	80120f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800693e:	4639      	mov	r1, r7
 8006940:	4630      	mov	r0, r6
 8006942:	f009 fe55 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006946:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 800694a:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 800694c:	2223      	movs	r2, #35	; 0x23
 800694e:	4640      	mov	r0, r8
        linespace = space;
 8006950:	f04f 0a00 	mov.w	sl, #0
 8006954:	2145      	movs	r1, #69	; 0x45
 8006956:	f7fc fafa 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800695a:	4641      	mov	r1, r8
 800695c:	4638      	mov	r0, r7
        color = newColor;
 800695e:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006962:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006966:	f00b fd5d 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800696a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800696e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006972:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006976:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006ac0 <_ZN19MeasurementViewBaseC1Ev+0x444>
 800697a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800697e:	235e      	movs	r3, #94	; 0x5e
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8006980:	a90a      	add	r1, sp, #40	; 0x28
 8006982:	4640      	mov	r0, r8
 8006984:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006988:	f00b ffe6 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800698c:	4641      	mov	r1, r8
 800698e:	4630      	mov	r0, r6
 8006990:	f009 fe2e 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006994:	ee18 0a10 	vmov	r0, s16
 8006998:	220c      	movs	r2, #12
 800699a:	2136      	movs	r1, #54	; 0x36
 800699c:	f7fc fad7 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 80069a0:	ee18 1a10 	vmov	r1, s16
 80069a4:	4638      	mov	r0, r7
        color = newColor;
 80069a6:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 80069aa:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80069ae:	f00b fd39 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80069b2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80069b6:	ee18 3a10 	vmov	r3, s16
 80069ba:	333c      	adds	r3, #60	; 0x3c
 80069bc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80069c0:	235f      	movs	r3, #95	; 0x5f
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 80069c2:	ee18 0a10 	vmov	r0, s16
 80069c6:	a90a      	add	r1, sp, #40	; 0x28
 80069c8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069cc:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80069d0:	f00b ffc2 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069d4:	ee18 1a10 	vmov	r1, s16
 80069d8:	4630      	mov	r0, r6
 80069da:	f009 fe09 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80069de:	ee19 0a10 	vmov	r0, s18
 80069e2:	22f0      	movs	r2, #240	; 0xf0
 80069e4:	2121      	movs	r1, #33	; 0x21
 80069e6:	f7fc fab2 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 80069ea:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80069ee:	aa0a      	add	r2, sp, #40	; 0x28
 80069f0:	f04f 0802 	mov.w	r8, #2
 80069f4:	a909      	add	r1, sp, #36	; 0x24
 80069f6:	ee19 0a10 	vmov	r0, s18
 80069fa:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80069fe:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006a02:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006a06:	f00c f98c 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006a0a:	235d      	movs	r3, #93	; 0x5d
 8006a0c:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006a10:	3710      	adds	r7, #16
        updateTextPosition();
 8006a12:	ee19 0a10 	vmov	r0, s18
 8006a16:	f7fc faef 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006a1a:	ee19 1a10 	vmov	r1, s18
 8006a1e:	4630      	mov	r0, r6
        colorPressed = col;
 8006a20:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006a24:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006a28:	f009 fde2 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006a2c:	ee19 0a90 	vmov	r0, s19
 8006a30:	22aa      	movs	r2, #170	; 0xaa
 8006a32:	2121      	movs	r1, #33	; 0x21
 8006a34:	f7fc fa8b 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006a38:	aa0a      	add	r2, sp, #40	; 0x28
 8006a3a:	a909      	add	r1, sp, #36	; 0x24
 8006a3c:	ee19 0a90 	vmov	r0, s19
 8006a40:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006a44:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006a48:	f00c f96b 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006a4c:	235c      	movs	r3, #92	; 0x5c
 8006a4e:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006a52:	ee19 0a90 	vmov	r0, s19
 8006a56:	f7fc facf 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006a5a:	ee19 1a90 	vmov	r1, s19
 8006a5e:	4630      	mov	r0, r6
        colorPressed = col;
 8006a60:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006a64:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006a68:	f009 fdc2 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006a6c:	ee1a 0a10 	vmov	r0, s20
 8006a70:	2264      	movs	r2, #100	; 0x64
 8006a72:	2121      	movs	r1, #33	; 0x21
 8006a74:	f7fc fa6b 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006a78:	aa0a      	add	r2, sp, #40	; 0x28
 8006a7a:	a909      	add	r1, sp, #36	; 0x24
 8006a7c:	ee1a 0a10 	vmov	r0, s20
 8006a80:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006a84:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006a88:	f00c f94b 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006a8c:	235b      	movs	r3, #91	; 0x5b
        updateTextPosition();
 8006a8e:	ee1a 0a10 	vmov	r0, s20
 8006a92:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006a96:	f7fc faaf 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006a9a:	4630      	mov	r0, r6
        colorPressed = col;
 8006a9c:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006aa0:	ee1a 1a10 	vmov	r1, s20
 8006aa4:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006aa8:	f009 fda2 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006aac:	4620      	mov	r0, r4
 8006aae:	b00d      	add	sp, #52	; 0x34
 8006ab0:	ecbd 8b06 	vpop	{d8-d10}
 8006ab4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006ab8:	20012e18 	.word	0x20012e18
 8006abc:	0802c55a 	.word	0x0802c55a
 8006ac0:	0802c5d0 	.word	0x0802c5d0

08006ac4 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8006ac4:	4770      	bx	lr

08006ac6 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006ac6:	4770      	bx	lr

08006ac8 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006ac8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006aca:	68c2      	ldr	r2, [r0, #12]
 8006acc:	6844      	ldr	r4, [r0, #4]
 8006ace:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006ad0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006ad2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006ad6:	07d2      	lsls	r2, r2, #31
 8006ad8:	bf48      	it	mi
 8006ada:	5962      	ldrmi	r2, [r4, r5]
 8006adc:	689b      	ldr	r3, [r3, #8]
    }
 8006ade:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006ae0:	bf48      	it	mi
 8006ae2:	58d3      	ldrmi	r3, [r2, r3]
 8006ae4:	4718      	bx	r3

08006ae6 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006ae6:	6843      	ldr	r3, [r0, #4]
 8006ae8:	b12b      	cbz	r3, 8006af6 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006aea:	6883      	ldr	r3, [r0, #8]
 8006aec:	b92b      	cbnz	r3, 8006afa <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006aee:	68c0      	ldr	r0, [r0, #12]
 8006af0:	f000 0001 	and.w	r0, r0, #1
 8006af4:	4770      	bx	lr
 8006af6:	4618      	mov	r0, r3
 8006af8:	4770      	bx	lr
 8006afa:	2001      	movs	r0, #1
    }
 8006afc:	4770      	bx	lr

08006afe <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006afe:	b510      	push	{r4, lr}
 8006b00:	2110      	movs	r1, #16
 8006b02:	4604      	mov	r4, r0
 8006b04:	f023 f883 	bl	8029c0e <_ZdlPvj>
 8006b08:	4620      	mov	r0, r4
 8006b0a:	bd10      	pop	{r4, pc}

08006b0c <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8006b0c:	b510      	push	{r4, lr}
 8006b0e:	4b03      	ldr	r3, [pc, #12]	; (8006b1c <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8006b10:	6003      	str	r3, [r0, #0]
 8006b12:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006b14:	f00d fb02 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006b18:	4620      	mov	r0, r4
 8006b1a:	bd10      	pop	{r4, pc}
 8006b1c:	0802e008 	.word	0x0802e008

08006b20 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8006b20:	b507      	push	{r0, r1, r2, lr}
 8006b22:	4b07      	ldr	r3, [pc, #28]	; (8006b40 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8006b24:	6003      	str	r3, [r0, #0]
 8006b26:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006b28:	f00d faf8 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006b2c:	9801      	ldr	r0, [sp, #4]
 8006b2e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8006b32:	f023 f86c 	bl	8029c0e <_ZdlPvj>
 8006b36:	9801      	ldr	r0, [sp, #4]
 8006b38:	b003      	add	sp, #12
 8006b3a:	f85d fb04 	ldr.w	pc, [sp], #4
 8006b3e:	bf00      	nop
 8006b40:	0802e008 	.word	0x0802e008

08006b44 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006b44:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006b46:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006b4a:	4299      	cmp	r1, r3
{
 8006b4c:	4604      	mov	r4, r0
 8006b4e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8006b50:	d103      	bne.n	8006b5a <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006b52:	f00e ffe5 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8006b56:	f7fd fdf1 	bl	800473c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8006b5a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006b5e:	429d      	cmp	r5, r3
 8006b60:	d103      	bne.n	8006b6a <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006b62:	f00e ffdd 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8006b66:	f7fd fe59 	bl	800481c <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8006b6a:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8006b6e:	42a5      	cmp	r5, r4
 8006b70:	d105      	bne.n	8006b7e <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006b72:	f00e ffd5 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8006b76:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8006b7a:	f7fd be3f 	b.w	80047fc <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8006b7e:	bd38      	pop	{r3, r4, r5, pc}

08006b80 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8006b80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006b84:	ed2d 8b06 	vpush	{d8-d10}
 8006b88:	4604      	mov	r4, r0
 8006b8a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8006b8c:	46a3      	mov	fp, r4
 8006b8e:	2500      	movs	r5, #0
 8006b90:	f010 fc46 	bl	8017420 <_ZN8touchgfx6ScreenC1Ev>
 8006b94:	4b66      	ldr	r3, [pc, #408]	; (8006d30 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8006b96:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006b98:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006b9c:	2226      	movs	r2, #38	; 0x26
 8006b9e:	4629      	mov	r1, r5
 8006ba0:	4658      	mov	r0, fp
 8006ba2:	f024 f920 	bl	802ade6 <memset>
 8006ba6:	4658      	mov	r0, fp
 8006ba8:	f7fc f9f2 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 8006bac:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006bb0:	26ff      	movs	r6, #255	; 0xff
 8006bb2:	4b60      	ldr	r3, [pc, #384]	; (8006d34 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8006bb4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006bb6:	2226      	movs	r2, #38	; 0x26
 8006bb8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006bbc:	4629      	mov	r1, r5
 8006bbe:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006bc2:	4650      	mov	r0, sl
 8006bc4:	66a5      	str	r5, [r4, #104]	; 0x68
 8006bc6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006bca:	f024 f90c 	bl	802ade6 <memset>
 8006bce:	4650      	mov	r0, sl
 8006bd0:	f7fc f9de 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 8006bd4:	4b58      	ldr	r3, [pc, #352]	; (8006d38 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8006bd6:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006bd8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006bdc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006be0:	a90a      	add	r1, sp, #40	; 0x28
 8006be2:	4650      	mov	r0, sl
 8006be4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006be8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006bec:	f00c fa8f 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006bf0:	4648      	mov	r0, r9
 8006bf2:	f7fc f9df 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8006bf6:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8006bfa:	4b50      	ldr	r3, [pc, #320]	; (8006d3c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8006bfc:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006c00:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006c04:	4638      	mov	r0, r7
 8006c06:	f00b f94b 	bl	8011ea0 <_ZN8touchgfx4LineC1Ev>
 8006c0a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006c0e:	4618      	mov	r0, r3
 8006c10:	9303      	str	r3, [sp, #12]
 8006c12:	f7fa fd4d 	bl	80016b0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006c16:	4b4a      	ldr	r3, [pc, #296]	; (8006d40 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8006c18:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006c1c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8006c20:	3324      	adds	r3, #36	; 0x24
 8006c22:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8006c26:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8006c2a:	4640      	mov	r0, r8
 8006c2c:	f7fc f9c2 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8006c30:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8006c34:	4618      	mov	r0, r3
 8006c36:	ee08 3a10 	vmov	s16, r3
 8006c3a:	f7fc f9bb 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8006c3e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006c42:	4618      	mov	r0, r3
 8006c44:	ee08 3a90 	vmov	s17, r3
 8006c48:	f7fc f9b4 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8006c4c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006c50:	4618      	mov	r0, r3
 8006c52:	ee09 3a10 	vmov	s18, r3
 8006c56:	f00c fb9b 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006c5a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006c5e:	4618      	mov	r0, r3
 8006c60:	ee09 3a90 	vmov	s19, r3
 8006c64:	f00c fb94 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006c68:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006c6c:	4618      	mov	r0, r3
 8006c6e:	ee0a 3a10 	vmov	s20, r3
 8006c72:	f00c fb8d 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006c76:	4a33      	ldr	r2, [pc, #204]	; (8006d44 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8006c78:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006c7c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006c80:	4a31      	ldr	r2, [pc, #196]	; (8006d48 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006c82:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006c86:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006c8a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006c8e:	f00d fa3b 	bl	8014108 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006c92:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006c96:	462a      	mov	r2, r5
 8006c98:	4658      	mov	r0, fp
 8006c9a:	9300      	str	r3, [sp, #0]
 8006c9c:	4629      	mov	r1, r5
 8006c9e:	23f0      	movs	r3, #240	; 0xf0
 8006ca0:	f7fc f962 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006ca4:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006ca6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006caa:	66a3      	str	r3, [r4, #104]	; 0x68
 8006cac:	4659      	mov	r1, fp
 8006cae:	4630      	mov	r0, r6
 8006cb0:	f009 fc9e 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006cb4:	462a      	mov	r2, r5
 8006cb6:	4650      	mov	r0, sl
 8006cb8:	4629      	mov	r1, r5
 8006cba:	f7fc f948 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8006cbe:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006cc0:	4650      	mov	r0, sl
 8006cc2:	a90a      	add	r1, sp, #40	; 0x28
 8006cc4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006cc8:	f00c fa21 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006ccc:	4651      	mov	r1, sl
 8006cce:	4630      	mov	r0, r6
 8006cd0:	f009 fc8e 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006cd4:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006cd8:	2156      	movs	r1, #86	; 0x56
 8006cda:	4648      	mov	r0, r9
 8006cdc:	f7fc f937 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8006ce0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006ce4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006ce8:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8006cec:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8006cf0:	4650      	mov	r0, sl
 8006cf2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006cf6:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006cfa:	4649      	mov	r1, r9
 8006cfc:	4798      	blx	r3
 8006cfe:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8006d02:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006d06:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006d0a:	4b10      	ldr	r3, [pc, #64]	; (8006d4c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8006d0c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8006d0e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006d12:	b92b      	cbnz	r3, 8006d20 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8006d14:	4b0e      	ldr	r3, [pc, #56]	; (8006d50 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8006d16:	4a0f      	ldr	r2, [pc, #60]	; (8006d54 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006d18:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006d1a:	480f      	ldr	r0, [pc, #60]	; (8006d58 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8006d1c:	f023 fe5e 	bl	802a9dc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006d20:	4b0e      	ldr	r3, [pc, #56]	; (8006d5c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006d22:	881b      	ldrh	r3, [r3, #0]
 8006d24:	2b26      	cmp	r3, #38	; 0x26
 8006d26:	d81d      	bhi.n	8006d64 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8006d28:	4b0d      	ldr	r3, [pc, #52]	; (8006d60 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8006d2a:	4a0a      	ldr	r2, [pc, #40]	; (8006d54 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006d2c:	2161      	movs	r1, #97	; 0x61
 8006d2e:	e7f4      	b.n	8006d1a <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8006d30:	0802e008 	.word	0x0802e008
 8006d34:	0802ef30 	.word	0x0802ef30
 8006d38:	0802f0f8 	.word	0x0802f0f8
 8006d3c:	0802c5e0 	.word	0x0802c5e0
 8006d40:	0802ec64 	.word	0x0802ec64
 8006d44:	0802dff0 	.word	0x0802dff0
 8006d48:	08006b45 	.word	0x08006b45
 8006d4c:	20012e0c 	.word	0x20012e0c
 8006d50:	0802c420 	.word	0x0802c420
 8006d54:	0802c522 	.word	0x0802c522
 8006d58:	0802c49d 	.word	0x0802c49d
 8006d5c:	20012e10 	.word	0x20012e10
 8006d60:	0802c4e4 	.word	0x0802c4e4
        return texts->getText(typedTextId);
 8006d64:	4b93      	ldr	r3, [pc, #588]	; (8006fb4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 8006d66:	2126      	movs	r1, #38	; 0x26
 8006d68:	6818      	ldr	r0, [r3, #0]
 8006d6a:	f002 f8d3 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 8006d6e:	4a92      	ldr	r2, [pc, #584]	; (8006fb8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8006d70:	4603      	mov	r3, r0
 8006d72:	2104      	movs	r1, #4
 8006d74:	4650      	mov	r0, sl
 8006d76:	f012 f843 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8006d7a:	4648      	mov	r0, r9
        wc1 = value;
 8006d7c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8006d80:	f00b fdca 	bl	8012918 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006d84:	4b8d      	ldr	r3, [pc, #564]	; (8006fbc <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8006d86:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8006d88:	a90a      	add	r1, sp, #40	; 0x28
 8006d8a:	2327      	movs	r3, #39	; 0x27
 8006d8c:	4648      	mov	r0, r9
 8006d8e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006d92:	f00b fde1 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d96:	4649      	mov	r1, r9
 8006d98:	4630      	mov	r0, r6
 8006d9a:	f009 fc29 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006d9e:	230a      	movs	r3, #10
 8006da0:	9300      	str	r3, [sp, #0]
 8006da2:	2232      	movs	r2, #50	; 0x32
 8006da4:	23f0      	movs	r3, #240	; 0xf0
 8006da6:	4629      	mov	r1, r5
 8006da8:	4638      	mov	r0, r7
 8006daa:	f7fc f8dd 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006dae:	9b03      	ldr	r3, [sp, #12]
 8006db0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006db4:	22a0      	movs	r2, #160	; 0xa0
 8006db6:	4611      	mov	r1, r2
 8006db8:	4638      	mov	r0, r7
 8006dba:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006dbe:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8006dc2:	f00b f983 	bl	80120cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006dc6:	22a0      	movs	r2, #160	; 0xa0
 8006dc8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006dcc:	4638      	mov	r0, r7
 8006dce:	f00b f988 	bl	80120e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006dd2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8006dd6:	2b20      	cmp	r3, #32
 8006dd8:	d005      	beq.n	8006de6 <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8006dda:	2320      	movs	r3, #32
 8006ddc:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8006de0:	4638      	mov	r0, r7
 8006de2:	f00b f87d 	bl	8011ee0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006de6:	4638      	mov	r0, r7
 8006de8:	2101      	movs	r1, #1
 8006dea:	f00b f985 	bl	80120f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006dee:	4639      	mov	r1, r7
 8006df0:	4630      	mov	r0, r6
 8006df2:	ad04      	add	r5, sp, #16
        color = newColor;
 8006df4:	f04f 37ff 	mov.w	r7, #4294967295
 8006df8:	f009 fbfa 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006dfc:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8006e00:	2223      	movs	r2, #35	; 0x23
 8006e02:	4640      	mov	r0, r8
 8006e04:	2145      	movs	r1, #69	; 0x45
 8006e06:	f7fc f8a2 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006e0a:	4641      	mov	r1, r8
 8006e0c:	4628      	mov	r0, r5
        color = newColor;
 8006e0e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8006e12:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8006e16:	f00b fb05 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e1a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006e1e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006e22:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e26:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8006fbc <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 8006e2a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006e2e:	234c      	movs	r3, #76	; 0x4c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 8006e30:	a90a      	add	r1, sp, #40	; 0x28
 8006e32:	4640      	mov	r0, r8
 8006e34:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e38:	f00b fd8e 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e3c:	4641      	mov	r1, r8
 8006e3e:	4630      	mov	r0, r6
 8006e40:	f009 fbd6 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006e44:	ee18 0a10 	vmov	r0, s16
 8006e48:	220c      	movs	r2, #12
 8006e4a:	2136      	movs	r1, #54	; 0x36
 8006e4c:	f7fc f87f 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8006e50:	ee18 1a10 	vmov	r1, s16
 8006e54:	4628      	mov	r0, r5
        color = newColor;
 8006e56:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8006e5a:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006e5e:	f00b fae1 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e62:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006e66:	ee18 3a10 	vmov	r3, s16
 8006e6a:	333c      	adds	r3, #60	; 0x3c
 8006e6c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e70:	234b      	movs	r3, #75	; 0x4b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 8006e72:	ee18 0a10 	vmov	r0, s16
 8006e76:	a90a      	add	r1, sp, #40	; 0x28
 8006e78:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e7c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006e80:	f00b fd6a 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e84:	ee18 1a10 	vmov	r1, s16
 8006e88:	4630      	mov	r0, r6
 8006e8a:	f009 fbb1 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8006e8e:	ee18 0a90 	vmov	r0, s17
 8006e92:	223c      	movs	r2, #60	; 0x3c
 8006e94:	2121      	movs	r1, #33	; 0x21
 8006e96:	f7fc f85a 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8006e9a:	ee18 1a90 	vmov	r1, s17
 8006e9e:	4628      	mov	r0, r5
        color = newColor;
 8006ea0:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006ea4:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006ea8:	f00b fabc 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006eac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006eb0:	ee18 3a90 	vmov	r3, s17
 8006eb4:	333c      	adds	r3, #60	; 0x3c
 8006eb6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006eba:	2335      	movs	r3, #53	; 0x35
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8006ebc:	ee18 0a90 	vmov	r0, s17
 8006ec0:	a90a      	add	r1, sp, #40	; 0x28
 8006ec2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006ec6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006eca:	f00b fd45 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006ece:	ee18 1a90 	vmov	r1, s17
 8006ed2:	4630      	mov	r0, r6
 8006ed4:	f009 fb8c 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006ed8:	ee19 0a10 	vmov	r0, s18
 8006edc:	22f0      	movs	r2, #240	; 0xf0
 8006ede:	2121      	movs	r1, #33	; 0x21
 8006ee0:	f7fc f835 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8006ee4:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006ee8:	aa0a      	add	r2, sp, #40	; 0x28
 8006eea:	f04f 0802 	mov.w	r8, #2
 8006eee:	a909      	add	r1, sp, #36	; 0x24
 8006ef0:	ee19 0a10 	vmov	r0, s18
 8006ef4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006ef8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006efc:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006f00:	f00b ff0f 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006f04:	234a      	movs	r3, #74	; 0x4a
 8006f06:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006f0a:	3510      	adds	r5, #16
        updateTextPosition();
 8006f0c:	ee19 0a10 	vmov	r0, s18
 8006f10:	f7fc f872 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006f14:	ee19 1a10 	vmov	r1, s18
 8006f18:	4630      	mov	r0, r6
        colorPressed = col;
 8006f1a:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8006f1e:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8006f22:	f009 fb65 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006f26:	ee19 0a90 	vmov	r0, s19
 8006f2a:	22aa      	movs	r2, #170	; 0xaa
 8006f2c:	2121      	movs	r1, #33	; 0x21
 8006f2e:	f7fc f80e 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006f32:	aa0a      	add	r2, sp, #40	; 0x28
 8006f34:	a909      	add	r1, sp, #36	; 0x24
 8006f36:	ee19 0a90 	vmov	r0, s19
 8006f3a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006f3e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006f42:	f00b feee 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006f46:	2349      	movs	r3, #73	; 0x49
 8006f48:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006f4c:	ee19 0a90 	vmov	r0, s19
 8006f50:	f7fc f852 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006f54:	ee19 1a90 	vmov	r1, s19
 8006f58:	4630      	mov	r0, r6
        colorPressed = col;
 8006f5a:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8006f5e:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8006f62:	f009 fb45 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006f66:	ee1a 0a10 	vmov	r0, s20
 8006f6a:	2264      	movs	r2, #100	; 0x64
 8006f6c:	2121      	movs	r1, #33	; 0x21
 8006f6e:	f7fb ffee 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006f72:	aa0a      	add	r2, sp, #40	; 0x28
 8006f74:	a909      	add	r1, sp, #36	; 0x24
 8006f76:	ee1a 0a10 	vmov	r0, s20
 8006f7a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006f7e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006f82:	f00b fece 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006f86:	2348      	movs	r3, #72	; 0x48
        updateTextPosition();
 8006f88:	ee1a 0a10 	vmov	r0, s20
 8006f8c:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006f90:	f7fc f832 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006f94:	4630      	mov	r0, r6
        colorPressed = col;
 8006f96:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8006f9a:	ee1a 1a10 	vmov	r1, s20
 8006f9e:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8006fa2:	f009 fb25 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006fa6:	4620      	mov	r0, r4
 8006fa8:	b00d      	add	sp, #52	; 0x34
 8006faa:	ecbd 8b06 	vpop	{d8-d10}
 8006fae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006fb2:	bf00      	nop
 8006fb4:	20012e18 	.word	0x20012e18
 8006fb8:	0802c55a 	.word	0x0802c55a
 8006fbc:	0802c5d0 	.word	0x0802c5d0

08006fc0 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006fc0:	4770      	bx	lr

08006fc2 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006fc2:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006fc4:	68c2      	ldr	r2, [r0, #12]
 8006fc6:	6844      	ldr	r4, [r0, #4]
 8006fc8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006fca:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006fcc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006fd0:	07d2      	lsls	r2, r2, #31
 8006fd2:	bf48      	it	mi
 8006fd4:	5962      	ldrmi	r2, [r4, r5]
 8006fd6:	689b      	ldr	r3, [r3, #8]
    }
 8006fd8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006fda:	bf48      	it	mi
 8006fdc:	58d3      	ldrmi	r3, [r2, r3]
 8006fde:	4718      	bx	r3

08006fe0 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006fe0:	6843      	ldr	r3, [r0, #4]
 8006fe2:	b12b      	cbz	r3, 8006ff0 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006fe4:	6883      	ldr	r3, [r0, #8]
 8006fe6:	b92b      	cbnz	r3, 8006ff4 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006fe8:	68c0      	ldr	r0, [r0, #12]
 8006fea:	f000 0001 	and.w	r0, r0, #1
 8006fee:	4770      	bx	lr
 8006ff0:	4618      	mov	r0, r3
 8006ff2:	4770      	bx	lr
 8006ff4:	2001      	movs	r0, #1
    }
 8006ff6:	4770      	bx	lr

08006ff8 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006ff8:	b510      	push	{r4, lr}
 8006ffa:	2110      	movs	r1, #16
 8006ffc:	4604      	mov	r4, r0
 8006ffe:	f022 fe06 	bl	8029c0e <_ZdlPvj>
 8007002:	4620      	mov	r0, r4
 8007004:	bd10      	pop	{r4, pc}

08007006 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8007006:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800700a:	f002 b961 	b.w	80092d0 <_ZN17Gauge_with_Values10initializeEv>

0800700e <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800700e:	3098      	adds	r0, #152	; 0x98
 8007010:	4288      	cmp	r0, r1
{
 8007012:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007014:	d105      	bne.n	8007022 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007016:	f00e fd83 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 800701a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800701e:	f7fd bbdd 	b.w	80047dc <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8007022:	bd08      	pop	{r3, pc}

08007024 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8007024:	b510      	push	{r4, lr}
 8007026:	4b07      	ldr	r3, [pc, #28]	; (8007044 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 8007028:	6003      	str	r3, [r0, #0]
 800702a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800702c:	f00d f876 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 8007030:	4b05      	ldr	r3, [pc, #20]	; (8007048 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 8007032:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8007036:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800703a:	f7fe fe25 	bl	8005c88 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 800703e:	4620      	mov	r0, r4
 8007040:	bd10      	pop	{r4, pc}
 8007042:	bf00      	nop
 8007044:	0802e054 	.word	0x0802e054
 8007048:	0802e5bc 	.word	0x0802e5bc

0800704c <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 800704c:	b510      	push	{r4, lr}
 800704e:	4604      	mov	r4, r0
}
 8007050:	f7ff ffe8 	bl	8007024 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8007054:	4620      	mov	r0, r4
 8007056:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800705a:	f022 fdd8 	bl	8029c0e <_ZdlPvj>
 800705e:	4620      	mov	r0, r4
 8007060:	bd10      	pop	{r4, pc}
	...

08007064 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8007064:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007068:	ed2d 8b04 	vpush	{d8-d9}
 800706c:	4604      	mov	r4, r0
 800706e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8007070:	46a1      	mov	r9, r4
 8007072:	2500      	movs	r5, #0
 8007074:	f010 f9d4 	bl	8017420 <_ZN8touchgfx6ScreenC1Ev>
 8007078:	4bad      	ldr	r3, [pc, #692]	; (8007330 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 800707a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800707c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8007080:	2226      	movs	r2, #38	; 0x26
 8007082:	4629      	mov	r1, r5
 8007084:	4648      	mov	r0, r9
 8007086:	f023 feae 	bl	802ade6 <memset>
 800708a:	4648      	mov	r0, r9
 800708c:	f7fb ff80 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 8007090:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8007094:	26ff      	movs	r6, #255	; 0xff
 8007096:	4ba7      	ldr	r3, [pc, #668]	; (8007334 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 8007098:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800709a:	2226      	movs	r2, #38	; 0x26
 800709c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80070a0:	4629      	mov	r1, r5
 80070a2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80070a6:	4640      	mov	r0, r8
 80070a8:	66a5      	str	r5, [r4, #104]	; 0x68
 80070aa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80070ae:	f023 fe9a 	bl	802ade6 <memset>
 80070b2:	4640      	mov	r0, r8
 80070b4:	f7fb ff6c 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 80070b8:	4b9f      	ldr	r3, [pc, #636]	; (8007338 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 80070ba:	66e3      	str	r3, [r4, #108]	; 0x6c
 80070bc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80070c0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80070c4:	a90a      	add	r1, sp, #40	; 0x28
 80070c6:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 80070ca:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80070cc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80070d0:	f00c f81d 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80070d4:	4658      	mov	r0, fp
 80070d6:	f00c f95b 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80070da:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80070de:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80070e2:	4618      	mov	r0, r3
 80070e4:	ee08 3a90 	vmov	s17, r3
 80070e8:	f7fb ff64 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 80070ec:	4638      	mov	r0, r7
 80070ee:	f00a fed7 	bl	8011ea0 <_ZN8touchgfx4LineC1Ev>
 80070f2:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80070f6:	4618      	mov	r0, r3
 80070f8:	9303      	str	r3, [sp, #12]
 80070fa:	f7fa fad9 	bl	80016b0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80070fe:	4b8f      	ldr	r3, [pc, #572]	; (800733c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 8007100:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8007104:	3324      	adds	r3, #36	; 0x24
 8007106:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800710a:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 800710e:	4618      	mov	r0, r3
 8007110:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8007114:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8007118:	ee08 3a10 	vmov	s16, r3
 800711c:	f7fb ff4a 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8007120:	4650      	mov	r0, sl
 8007122:	f7fb ff47 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8007126:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800712a:	4618      	mov	r0, r3
 800712c:	ee09 3a10 	vmov	s18, r3
 8007130:	f002 f8c4 	bl	80092bc <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007134:	4a82      	ldr	r2, [pc, #520]	; (8007340 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
 8007136:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800713a:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 800713e:	4a81      	ldr	r2, [pc, #516]	; (8007344 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007140:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007144:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8007148:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 800714c:	f00c ffdc 	bl	8014108 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007150:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007154:	462a      	mov	r2, r5
 8007156:	4648      	mov	r0, r9
 8007158:	9300      	str	r3, [sp, #0]
 800715a:	4629      	mov	r1, r5
 800715c:	23f0      	movs	r3, #240	; 0xf0
 800715e:	f7fb ff03 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007162:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007164:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007168:	66a3      	str	r3, [r4, #104]	; 0x68
 800716a:	4649      	mov	r1, r9
 800716c:	4630      	mov	r0, r6
 800716e:	f009 fa3f 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007172:	462a      	mov	r2, r5
 8007174:	4640      	mov	r0, r8
 8007176:	4629      	mov	r1, r5
 8007178:	f7fb fee9 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 800717c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800717e:	4640      	mov	r0, r8
 8007180:	a90a      	add	r1, sp, #40	; 0x28
 8007182:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007186:	f00b ffc2 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800718a:	4641      	mov	r1, r8
 800718c:	4630      	mov	r0, r6
 800718e:	f009 fa2f 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8007192:	4658      	mov	r0, fp
 8007194:	f240 1201 	movw	r2, #257	; 0x101
 8007198:	2121      	movs	r1, #33	; 0x21
 800719a:	f7fb fed8 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 800719e:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80071a0:	aa0a      	add	r2, sp, #40	; 0x28
 80071a2:	a909      	add	r1, sp, #36	; 0x24
 80071a4:	4658      	mov	r0, fp
 80071a6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80071aa:	2302      	movs	r3, #2
 80071ac:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80071b0:	f00b fdb7 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80071b4:	2331      	movs	r3, #49	; 0x31
        updateTextPosition();
 80071b6:	4658      	mov	r0, fp
 80071b8:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80071bc:	f7fb ff1c 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80071c0:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80071c4:	3314      	adds	r3, #20
        color = col;
 80071c6:	f04f 39ff 	mov.w	r9, #4294967295
 80071ca:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80071ce:	4659      	mov	r1, fp
 80071d0:	4630      	mov	r0, r6
        colorPressed = col;
 80071d2:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80071d6:	f009 fa0b 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80071da:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80071de:	223c      	movs	r2, #60	; 0x3c
 80071e0:	ee18 0a90 	vmov	r0, s17
 80071e4:	2117      	movs	r1, #23
 80071e6:	f7fb feb2 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 80071ea:	ee18 1a90 	vmov	r1, s17
 80071ee:	4640      	mov	r0, r8
        color = newColor;
 80071f0:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80071f4:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80071f8:	f00b f914 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80071fc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007200:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8007204:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007208:	f04f 0b32 	mov.w	fp, #50	; 0x32
 800720c:	4b4e      	ldr	r3, [pc, #312]	; (8007348 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e4>)
 800720e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8007210:	ee18 0a90 	vmov	r0, s17
 8007214:	a90a      	add	r1, sp, #40	; 0x28
 8007216:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800721a:	f00b fb9d 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800721e:	ee18 1a90 	vmov	r1, s17
 8007222:	4630      	mov	r0, r6
 8007224:	f009 f9e4 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007228:	230a      	movs	r3, #10
 800722a:	9300      	str	r3, [sp, #0]
 800722c:	465a      	mov	r2, fp
 800722e:	23f0      	movs	r3, #240	; 0xf0
 8007230:	4629      	mov	r1, r5
 8007232:	4638      	mov	r0, r7
 8007234:	f7fb fe98 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007238:	9b03      	ldr	r3, [sp, #12]
 800723a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800723e:	22a0      	movs	r2, #160	; 0xa0
 8007240:	4611      	mov	r1, r2
 8007242:	4638      	mov	r0, r7
 8007244:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007248:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 800724c:	f00a ff3e 	bl	80120cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007250:	22a0      	movs	r2, #160	; 0xa0
 8007252:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007256:	4638      	mov	r0, r7
 8007258:	f00a ff43 	bl	80120e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800725c:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8007260:	2b20      	cmp	r3, #32
 8007262:	d005      	beq.n	8007270 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x20c>
        lineWidthQ5 = widthQ5;
 8007264:	2320      	movs	r3, #32
 8007266:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 800726a:	4638      	mov	r0, r7
 800726c:	f00a fe38 	bl	8011ee0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007270:	4638      	mov	r0, r7
 8007272:	2101      	movs	r1, #1
 8007274:	f00a ff40 	bl	80120f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007278:	4639      	mov	r1, r7
 800727a:	4630      	mov	r0, r6
 800727c:	f009 f9b8 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8007280:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8007282:	ee18 0a10 	vmov	r0, s16
 8007286:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 8007288:	f04f 39ff 	mov.w	r9, #4294967295
 800728c:	2145      	movs	r1, #69	; 0x45
 800728e:	f7fb fe5e 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007292:	ee18 1a10 	vmov	r1, s16
 8007296:	4640      	mov	r0, r8
        color = newColor;
 8007298:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 800729c:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80072a0:	f00b f8c0 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80072a4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80072a8:	ee18 3a10 	vmov	r3, s16
 80072ac:	333c      	adds	r3, #60	; 0x3c
 80072ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80072b2:	4f25      	ldr	r7, [pc, #148]	; (8007348 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e4>)
 80072b4:	970a      	str	r7, [sp, #40]	; 0x28
 80072b6:	2333      	movs	r3, #51	; 0x33
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 80072b8:	ee18 0a10 	vmov	r0, s16
 80072bc:	a90a      	add	r1, sp, #40	; 0x28
 80072be:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80072c2:	f00b fb49 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80072c6:	ee18 1a10 	vmov	r1, s16
 80072ca:	4630      	mov	r0, r6
 80072cc:	f009 f990 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80072d0:	220c      	movs	r2, #12
 80072d2:	4650      	mov	r0, sl
 80072d4:	2136      	movs	r1, #54	; 0x36
 80072d6:	f7fb fe3a 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 80072da:	4651      	mov	r1, sl
 80072dc:	4640      	mov	r0, r8
        color = newColor;
 80072de:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 80072e2:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80072e6:	f00b f89d 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80072ea:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80072ee:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80072f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80072f6:	2334      	movs	r3, #52	; 0x34
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 80072f8:	a90a      	add	r1, sp, #40	; 0x28
 80072fa:	4650      	mov	r0, sl
 80072fc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007300:	970a      	str	r7, [sp, #40]	; 0x28
 8007302:	f00b fb29 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007306:	4651      	mov	r1, sl
 8007308:	4630      	mov	r0, r6
 800730a:	f009 f971 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 800730e:	ee19 0a10 	vmov	r0, s18
 8007312:	224e      	movs	r2, #78	; 0x4e
 8007314:	4629      	mov	r1, r5
 8007316:	f7fb fe1a 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 800731a:	4630      	mov	r0, r6
 800731c:	ee19 1a10 	vmov	r1, s18
 8007320:	f009 f966 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007324:	4620      	mov	r0, r4
 8007326:	b00d      	add	sp, #52	; 0x34
 8007328:	ecbd 8b04 	vpop	{d8-d9}
 800732c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007330:	0802e054 	.word	0x0802e054
 8007334:	0802ef30 	.word	0x0802ef30
 8007338:	0802f0f8 	.word	0x0802f0f8
 800733c:	0802ec64 	.word	0x0802ec64
 8007340:	0802e03c 	.word	0x0802e03c
 8007344:	0800700f 	.word	0x0800700f
 8007348:	0802c5d0 	.word	0x0802c5d0

0800734c <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800734c:	4770      	bx	lr

0800734e <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800734e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007350:	68c2      	ldr	r2, [r0, #12]
 8007352:	6844      	ldr	r4, [r0, #4]
 8007354:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007356:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007358:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800735c:	07d2      	lsls	r2, r2, #31
 800735e:	bf48      	it	mi
 8007360:	5962      	ldrmi	r2, [r4, r5]
 8007362:	689b      	ldr	r3, [r3, #8]
    }
 8007364:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007366:	bf48      	it	mi
 8007368:	58d3      	ldrmi	r3, [r2, r3]
 800736a:	4718      	bx	r3

0800736c <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800736c:	6843      	ldr	r3, [r0, #4]
 800736e:	b12b      	cbz	r3, 800737c <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007370:	6883      	ldr	r3, [r0, #8]
 8007372:	b92b      	cbnz	r3, 8007380 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007374:	68c0      	ldr	r0, [r0, #12]
 8007376:	f000 0001 	and.w	r0, r0, #1
 800737a:	4770      	bx	lr
 800737c:	4618      	mov	r0, r3
 800737e:	4770      	bx	lr
 8007380:	2001      	movs	r0, #1
    }
 8007382:	4770      	bx	lr

08007384 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007384:	b510      	push	{r4, lr}
 8007386:	2110      	movs	r1, #16
 8007388:	4604      	mov	r4, r0
 800738a:	f022 fc40 	bl	8029c0e <_ZdlPvj>
 800738e:	4620      	mov	r0, r4
 8007390:	bd10      	pop	{r4, pc}

08007392 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8007392:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8007396:	f001 bf9b 	b.w	80092d0 <_ZN17Gauge_with_Values10initializeEv>

0800739a <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800739a:	3098      	adds	r0, #152	; 0x98
 800739c:	4288      	cmp	r0, r1
{
 800739e:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80073a0:	d105      	bne.n	80073ae <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80073a2:	f00e fbbd 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 80073a6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 80073aa:	f7fd ba17 	b.w	80047dc <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 80073ae:	bd08      	pop	{r3, pc}

080073b0 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80073b0:	b510      	push	{r4, lr}
 80073b2:	4b07      	ldr	r3, [pc, #28]	; (80073d0 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 80073b4:	6003      	str	r3, [r0, #0]
 80073b6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80073b8:	f00c feb0 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 80073bc:	4b05      	ldr	r3, [pc, #20]	; (80073d4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 80073be:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 80073c2:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80073c6:	f7fe fc5f 	bl	8005c88 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80073ca:	4620      	mov	r0, r4
 80073cc:	bd10      	pop	{r4, pc}
 80073ce:	bf00      	nop
 80073d0:	0802e0a0 	.word	0x0802e0a0
 80073d4:	0802e5bc 	.word	0x0802e5bc

080073d8 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80073d8:	b510      	push	{r4, lr}
 80073da:	4604      	mov	r4, r0
}
 80073dc:	f7ff ffe8 	bl	80073b0 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 80073e0:	4620      	mov	r0, r4
 80073e2:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80073e6:	f022 fc12 	bl	8029c0e <_ZdlPvj>
 80073ea:	4620      	mov	r0, r4
 80073ec:	bd10      	pop	{r4, pc}
	...

080073f0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 80073f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80073f4:	ed2d 8b04 	vpush	{d8-d9}
 80073f8:	4604      	mov	r4, r0
 80073fa:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 80073fc:	46a1      	mov	r9, r4
 80073fe:	2500      	movs	r5, #0
 8007400:	f010 f80e 	bl	8017420 <_ZN8touchgfx6ScreenC1Ev>
 8007404:	4bac      	ldr	r3, [pc, #688]	; (80076b8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 8007406:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007408:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 800740c:	2226      	movs	r2, #38	; 0x26
 800740e:	4629      	mov	r1, r5
 8007410:	4648      	mov	r0, r9
 8007412:	f023 fce8 	bl	802ade6 <memset>
 8007416:	4648      	mov	r0, r9
 8007418:	f7fb fdba 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 800741c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8007420:	26ff      	movs	r6, #255	; 0xff
 8007422:	4ba6      	ldr	r3, [pc, #664]	; (80076bc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 8007424:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007426:	2226      	movs	r2, #38	; 0x26
 8007428:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800742c:	4629      	mov	r1, r5
 800742e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007432:	4640      	mov	r0, r8
 8007434:	66a5      	str	r5, [r4, #104]	; 0x68
 8007436:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800743a:	f023 fcd4 	bl	802ade6 <memset>
 800743e:	4640      	mov	r0, r8
 8007440:	f7fb fda6 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 8007444:	4b9e      	ldr	r3, [pc, #632]	; (80076c0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 8007446:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007448:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800744c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007450:	a90a      	add	r1, sp, #40	; 0x28
 8007452:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8007454:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007458:	f00b fe59 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800745c:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8007460:	4618      	mov	r0, r3
 8007462:	ee08 3a10 	vmov	s16, r3
 8007466:	f00b ff93 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800746a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800746e:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8007472:	4618      	mov	r0, r3
 8007474:	ee08 3a90 	vmov	s17, r3
 8007478:	f7fb fd9c 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 800747c:	4638      	mov	r0, r7
 800747e:	f00a fd0f 	bl	8011ea0 <_ZN8touchgfx4LineC1Ev>
 8007482:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007486:	4618      	mov	r0, r3
 8007488:	9303      	str	r3, [sp, #12]
 800748a:	f7fa f911 	bl	80016b0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800748e:	4b8d      	ldr	r3, [pc, #564]	; (80076c4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 8007490:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8007494:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8007498:	3324      	adds	r3, #36	; 0x24
 800749a:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800749e:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80074a2:	4658      	mov	r0, fp
 80074a4:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80074a8:	f7fb fd84 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 80074ac:	4650      	mov	r0, sl
 80074ae:	f7fb fd81 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 80074b2:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80074b6:	4618      	mov	r0, r3
 80074b8:	ee09 3a10 	vmov	s18, r3
 80074bc:	f001 fefe 	bl	80092bc <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80074c0:	4a81      	ldr	r2, [pc, #516]	; (80076c8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 80074c2:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80074c6:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80074ca:	4a80      	ldr	r2, [pc, #512]	; (80076cc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80074cc:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80074d0:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80074d4:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80074d8:	f00c fe16 	bl	8014108 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80074dc:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80074e0:	462a      	mov	r2, r5
 80074e2:	4648      	mov	r0, r9
 80074e4:	9300      	str	r3, [sp, #0]
 80074e6:	4629      	mov	r1, r5
 80074e8:	23f0      	movs	r3, #240	; 0xf0
 80074ea:	f7fb fd3d 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 80074ee:	1d26      	adds	r6, r4, #4
        color = newColor;
 80074f0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80074f4:	66a3      	str	r3, [r4, #104]	; 0x68
 80074f6:	4649      	mov	r1, r9
 80074f8:	4630      	mov	r0, r6
 80074fa:	f009 f879 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80074fe:	462a      	mov	r2, r5
 8007500:	4640      	mov	r0, r8
 8007502:	4629      	mov	r1, r5
 8007504:	f7fb fd23 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8007508:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800750a:	4640      	mov	r0, r8
 800750c:	a90a      	add	r1, sp, #40	; 0x28
 800750e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007512:	f00b fdfc 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007516:	4641      	mov	r1, r8
 8007518:	4630      	mov	r0, r6
 800751a:	f009 f869 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800751e:	ee18 0a10 	vmov	r0, s16
 8007522:	f240 1201 	movw	r2, #257	; 0x101
 8007526:	2121      	movs	r1, #33	; 0x21
 8007528:	f7fb fd11 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 800752c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800752e:	aa0a      	add	r2, sp, #40	; 0x28
 8007530:	a909      	add	r1, sp, #36	; 0x24
 8007532:	ee18 0a10 	vmov	r0, s16
 8007536:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800753a:	2302      	movs	r3, #2
 800753c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007540:	f00b fbef 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007544:	232d      	movs	r3, #45	; 0x2d
        updateTextPosition();
 8007546:	ee18 0a10 	vmov	r0, s16
 800754a:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800754e:	f7fb fd53 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007552:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8007556:	3314      	adds	r3, #20
        color = col;
 8007558:	f04f 39ff 	mov.w	r9, #4294967295
 800755c:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007560:	ee18 1a10 	vmov	r1, s16
 8007564:	4630      	mov	r0, r6
        colorPressed = col;
 8007566:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800756a:	f009 f841 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800756e:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8007572:	223c      	movs	r2, #60	; 0x3c
 8007574:	ee18 0a90 	vmov	r0, s17
 8007578:	2117      	movs	r1, #23
 800757a:	f7fb fce8 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 800757e:	ee18 1a90 	vmov	r1, s17
 8007582:	4640      	mov	r0, r8
        color = newColor;
 8007584:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8007588:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800758c:	f00a ff4a 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007590:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007594:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8007598:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800759c:	4b4c      	ldr	r3, [pc, #304]	; (80076d0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 800759e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 80075a0:	ee18 0a90 	vmov	r0, s17
 80075a4:	232e      	movs	r3, #46	; 0x2e
 80075a6:	a90a      	add	r1, sp, #40	; 0x28
 80075a8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80075ac:	f00b f9d4 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80075b0:	ee18 1a90 	vmov	r1, s17
 80075b4:	4630      	mov	r0, r6
 80075b6:	f009 f81b 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80075ba:	230a      	movs	r3, #10
 80075bc:	9300      	str	r3, [sp, #0]
 80075be:	2232      	movs	r2, #50	; 0x32
 80075c0:	23f0      	movs	r3, #240	; 0xf0
 80075c2:	4629      	mov	r1, r5
 80075c4:	4638      	mov	r0, r7
 80075c6:	f7fb fccf 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 80075ca:	9b03      	ldr	r3, [sp, #12]
 80075cc:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80075d0:	22a0      	movs	r2, #160	; 0xa0
 80075d2:	4611      	mov	r1, r2
 80075d4:	4638      	mov	r0, r7
 80075d6:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80075da:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80075de:	f00a fd75 	bl	80120cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80075e2:	22a0      	movs	r2, #160	; 0xa0
 80075e4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80075e8:	4638      	mov	r0, r7
 80075ea:	f00a fd7a 	bl	80120e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80075ee:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80075f2:	2b20      	cmp	r3, #32
 80075f4:	d005      	beq.n	8007602 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 80075f6:	2320      	movs	r3, #32
 80075f8:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80075fc:	4638      	mov	r0, r7
 80075fe:	f00a fc6f 	bl	8011ee0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007602:	4638      	mov	r0, r7
 8007604:	2101      	movs	r1, #1
 8007606:	f00a fd77 	bl	80120f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800760a:	4639      	mov	r1, r7
 800760c:	4630      	mov	r0, r6
 800760e:	f008 ffef 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8007612:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8007614:	2223      	movs	r2, #35	; 0x23
 8007616:	4658      	mov	r0, fp
        color = newColor;
 8007618:	f04f 39ff 	mov.w	r9, #4294967295
 800761c:	2145      	movs	r1, #69	; 0x45
 800761e:	f7fb fc96 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007622:	4659      	mov	r1, fp
 8007624:	4640      	mov	r0, r8
        color = newColor;
 8007626:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 800762a:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800762e:	f00a fef9 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007632:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007636:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 800763a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800763e:	4f24      	ldr	r7, [pc, #144]	; (80076d0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 8007640:	970a      	str	r7, [sp, #40]	; 0x28
 8007642:	232f      	movs	r3, #47	; 0x2f
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8007644:	a90a      	add	r1, sp, #40	; 0x28
 8007646:	4658      	mov	r0, fp
 8007648:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800764c:	f00b f984 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007650:	4659      	mov	r1, fp
 8007652:	4630      	mov	r0, r6
 8007654:	f008 ffcc 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007658:	220c      	movs	r2, #12
 800765a:	4650      	mov	r0, sl
 800765c:	2136      	movs	r1, #54	; 0x36
 800765e:	f7fb fc76 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8007662:	4651      	mov	r1, sl
 8007664:	4640      	mov	r0, r8
        color = newColor;
 8007666:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 800766a:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800766e:	f00a fed9 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007672:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007676:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800767a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800767e:	2330      	movs	r3, #48	; 0x30
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8007680:	a90a      	add	r1, sp, #40	; 0x28
 8007682:	4650      	mov	r0, sl
 8007684:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007688:	970a      	str	r7, [sp, #40]	; 0x28
 800768a:	f00b f965 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800768e:	4651      	mov	r1, sl
 8007690:	4630      	mov	r0, r6
 8007692:	f008 ffad 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8007696:	ee19 0a10 	vmov	r0, s18
 800769a:	224e      	movs	r2, #78	; 0x4e
 800769c:	4629      	mov	r1, r5
 800769e:	f7fb fc56 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 80076a2:	4630      	mov	r0, r6
 80076a4:	ee19 1a10 	vmov	r1, s18
 80076a8:	f008 ffa2 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80076ac:	4620      	mov	r0, r4
 80076ae:	b00d      	add	sp, #52	; 0x34
 80076b0:	ecbd 8b04 	vpop	{d8-d9}
 80076b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80076b8:	0802e0a0 	.word	0x0802e0a0
 80076bc:	0802ef30 	.word	0x0802ef30
 80076c0:	0802f0f8 	.word	0x0802f0f8
 80076c4:	0802ec64 	.word	0x0802ec64
 80076c8:	0802e088 	.word	0x0802e088
 80076cc:	0800739b 	.word	0x0800739b
 80076d0:	0802c5d0 	.word	0x0802c5d0

080076d4 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 80076d4:	4770      	bx	lr

080076d6 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80076d6:	4770      	bx	lr

080076d8 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80076d8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80076da:	68c2      	ldr	r2, [r0, #12]
 80076dc:	6844      	ldr	r4, [r0, #4]
 80076de:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80076e0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80076e2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80076e6:	07d2      	lsls	r2, r2, #31
 80076e8:	bf48      	it	mi
 80076ea:	5962      	ldrmi	r2, [r4, r5]
 80076ec:	689b      	ldr	r3, [r3, #8]
    }
 80076ee:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80076f0:	bf48      	it	mi
 80076f2:	58d3      	ldrmi	r3, [r2, r3]
 80076f4:	4718      	bx	r3

080076f6 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80076f6:	6843      	ldr	r3, [r0, #4]
 80076f8:	b12b      	cbz	r3, 8007706 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80076fa:	6883      	ldr	r3, [r0, #8]
 80076fc:	b92b      	cbnz	r3, 800770a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80076fe:	68c0      	ldr	r0, [r0, #12]
 8007700:	f000 0001 	and.w	r0, r0, #1
 8007704:	4770      	bx	lr
 8007706:	4618      	mov	r0, r3
 8007708:	4770      	bx	lr
 800770a:	2001      	movs	r0, #1
    }
 800770c:	4770      	bx	lr

0800770e <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800770e:	b510      	push	{r4, lr}
 8007710:	2110      	movs	r1, #16
 8007712:	4604      	mov	r4, r0
 8007714:	f022 fa7b 	bl	8029c0e <_ZdlPvj>
 8007718:	4620      	mov	r0, r4
 800771a:	bd10      	pop	{r4, pc}

0800771c <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 800771c:	b510      	push	{r4, lr}
 800771e:	4b03      	ldr	r3, [pc, #12]	; (800772c <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8007720:	6003      	str	r3, [r0, #0]
 8007722:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007724:	f00c fcfa 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007728:	4620      	mov	r0, r4
 800772a:	bd10      	pop	{r4, pc}
 800772c:	0802e0ec 	.word	0x0802e0ec

08007730 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8007730:	b507      	push	{r0, r1, r2, lr}
 8007732:	4b07      	ldr	r3, [pc, #28]	; (8007750 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8007734:	6003      	str	r3, [r0, #0]
 8007736:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007738:	f00c fcf0 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800773c:	9801      	ldr	r0, [sp, #4]
 800773e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8007742:	f022 fa64 	bl	8029c0e <_ZdlPvj>
 8007746:	9801      	ldr	r0, [sp, #4]
 8007748:	b003      	add	sp, #12
 800774a:	f85d fb04 	ldr.w	pc, [sp], #4
 800774e:	bf00      	nop
 8007750:	0802e0ec 	.word	0x0802e0ec

08007754 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8007754:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8007756:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800775a:	4299      	cmp	r1, r3
{
 800775c:	4604      	mov	r4, r0
 800775e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8007760:	d103      	bne.n	800776a <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007762:	f00e f9dd 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8007766:	f7fc ffe9 	bl	800473c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800776a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800776e:	429d      	cmp	r5, r3
 8007770:	d103      	bne.n	800777a <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8007772:	f00e f9d5 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8007776:	f7fd f801 	bl	800477c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800777a:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800777e:	42a5      	cmp	r5, r4
 8007780:	d105      	bne.n	800778e <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8007782:	f00e f9cd 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8007786:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 800778a:	f7fd b807 	b.w	800479c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 800778e:	bd38      	pop	{r3, r4, r5, pc}

08007790 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8007790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007794:	ed2d 8b06 	vpush	{d8-d10}
 8007798:	4604      	mov	r4, r0
 800779a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 800779c:	46a3      	mov	fp, r4
 800779e:	2500      	movs	r5, #0
 80077a0:	f00f fe3e 	bl	8017420 <_ZN8touchgfx6ScreenC1Ev>
 80077a4:	4b66      	ldr	r3, [pc, #408]	; (8007940 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 80077a6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80077a8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80077ac:	2226      	movs	r2, #38	; 0x26
 80077ae:	4629      	mov	r1, r5
 80077b0:	4658      	mov	r0, fp
 80077b2:	f023 fb18 	bl	802ade6 <memset>
 80077b6:	4658      	mov	r0, fp
 80077b8:	f7fb fbea 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 80077bc:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80077c0:	26ff      	movs	r6, #255	; 0xff
 80077c2:	4b60      	ldr	r3, [pc, #384]	; (8007944 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 80077c4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80077c6:	2226      	movs	r2, #38	; 0x26
 80077c8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80077cc:	4629      	mov	r1, r5
 80077ce:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80077d2:	4650      	mov	r0, sl
 80077d4:	66a5      	str	r5, [r4, #104]	; 0x68
 80077d6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80077da:	f023 fb04 	bl	802ade6 <memset>
 80077de:	4650      	mov	r0, sl
 80077e0:	f7fb fbd6 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 80077e4:	4b58      	ldr	r3, [pc, #352]	; (8007948 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 80077e6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80077e8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80077ec:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80077f0:	a90a      	add	r1, sp, #40	; 0x28
 80077f2:	4650      	mov	r0, sl
 80077f4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80077f8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80077fc:	f00b fc87 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007800:	4648      	mov	r0, r9
 8007802:	f7fb fbd7 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8007806:	4b51      	ldr	r3, [pc, #324]	; (800794c <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8007808:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800780c:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8007810:	4618      	mov	r0, r3
 8007812:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007816:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 800781a:	ee08 3a90 	vmov	s17, r3
 800781e:	f7fb fbc9 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8007822:	4638      	mov	r0, r7
 8007824:	f00a fb3c 	bl	8011ea0 <_ZN8touchgfx4LineC1Ev>
 8007828:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800782c:	4618      	mov	r0, r3
 800782e:	9303      	str	r3, [sp, #12]
 8007830:	f7f9 ff3e 	bl	80016b0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007834:	4b46      	ldr	r3, [pc, #280]	; (8007950 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8007836:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 800783a:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 800783e:	3324      	adds	r3, #36	; 0x24
 8007840:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8007844:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8007848:	4640      	mov	r0, r8
 800784a:	f7fb fbb3 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 800784e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007852:	4618      	mov	r0, r3
 8007854:	ee08 3a10 	vmov	s16, r3
 8007858:	f7fb fbac 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 800785c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007860:	4618      	mov	r0, r3
 8007862:	ee09 3a10 	vmov	s18, r3
 8007866:	f00b fd93 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800786a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800786e:	4618      	mov	r0, r3
 8007870:	ee09 3a90 	vmov	s19, r3
 8007874:	f00b fd8c 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007878:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800787c:	4618      	mov	r0, r3
 800787e:	ee0a 3a10 	vmov	s20, r3
 8007882:	f00b fd85 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007886:	4a33      	ldr	r2, [pc, #204]	; (8007954 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8007888:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800788c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8007890:	4a31      	ldr	r2, [pc, #196]	; (8007958 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007892:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007896:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800789a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800789e:	f00c fc33 	bl	8014108 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80078a2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80078a6:	462a      	mov	r2, r5
 80078a8:	4658      	mov	r0, fp
 80078aa:	9300      	str	r3, [sp, #0]
 80078ac:	4629      	mov	r1, r5
 80078ae:	23f0      	movs	r3, #240	; 0xf0
 80078b0:	f7fb fb5a 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 80078b4:	1d26      	adds	r6, r4, #4
        color = newColor;
 80078b6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80078ba:	66a3      	str	r3, [r4, #104]	; 0x68
 80078bc:	4659      	mov	r1, fp
 80078be:	4630      	mov	r0, r6
 80078c0:	f008 fe96 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80078c4:	462a      	mov	r2, r5
 80078c6:	4650      	mov	r0, sl
 80078c8:	4629      	mov	r1, r5
 80078ca:	f7fb fb40 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 80078ce:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80078d0:	4650      	mov	r0, sl
 80078d2:	a90a      	add	r1, sp, #40	; 0x28
 80078d4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80078d8:	f00b fc19 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80078dc:	4651      	mov	r1, sl
 80078de:	4630      	mov	r0, r6
 80078e0:	f008 fe86 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80078e4:	f44f 729a 	mov.w	r2, #308	; 0x134
 80078e8:	2156      	movs	r1, #86	; 0x56
 80078ea:	4648      	mov	r0, r9
 80078ec:	f7fb fb2f 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80078f0:	f04f 33ff 	mov.w	r3, #4294967295
 80078f4:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80078f8:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80078fc:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007900:	f10d 0b10 	add.w	fp, sp, #16
 8007904:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8007908:	4649      	mov	r1, r9
 800790a:	4658      	mov	r0, fp
 800790c:	4798      	blx	r3
 800790e:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007912:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007916:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800791a:	4b10      	ldr	r3, [pc, #64]	; (800795c <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 800791c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 800791e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8007922:	b92b      	cbnz	r3, 8007930 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8007924:	4b0e      	ldr	r3, [pc, #56]	; (8007960 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8007926:	4a0f      	ldr	r2, [pc, #60]	; (8007964 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007928:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800792a:	480f      	ldr	r0, [pc, #60]	; (8007968 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 800792c:	f023 f856 	bl	802a9dc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007930:	4b0e      	ldr	r3, [pc, #56]	; (800796c <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007932:	881b      	ldrh	r3, [r3, #0]
 8007934:	2b28      	cmp	r3, #40	; 0x28
 8007936:	d81d      	bhi.n	8007974 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8007938:	4b0d      	ldr	r3, [pc, #52]	; (8007970 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 800793a:	4a0a      	ldr	r2, [pc, #40]	; (8007964 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 800793c:	2161      	movs	r1, #97	; 0x61
 800793e:	e7f4      	b.n	800792a <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8007940:	0802e0ec 	.word	0x0802e0ec
 8007944:	0802ef30 	.word	0x0802ef30
 8007948:	0802f0f8 	.word	0x0802f0f8
 800794c:	0802c5e0 	.word	0x0802c5e0
 8007950:	0802ec64 	.word	0x0802ec64
 8007954:	0802e0d4 	.word	0x0802e0d4
 8007958:	08007755 	.word	0x08007755
 800795c:	20012e0c 	.word	0x20012e0c
 8007960:	0802c420 	.word	0x0802c420
 8007964:	0802c522 	.word	0x0802c522
 8007968:	0802c49d 	.word	0x0802c49d
 800796c:	20012e10 	.word	0x20012e10
 8007970:	0802c4e4 	.word	0x0802c4e4
        return texts->getText(typedTextId);
 8007974:	4b95      	ldr	r3, [pc, #596]	; (8007bcc <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 8007976:	2128      	movs	r1, #40	; 0x28
 8007978:	6818      	ldr	r0, [r3, #0]
 800797a:	f001 facb 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 800797e:	4a94      	ldr	r2, [pc, #592]	; (8007bd0 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8007980:	4603      	mov	r3, r0
 8007982:	2104      	movs	r1, #4
 8007984:	4650      	mov	r0, sl
 8007986:	f011 fa3b 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800798a:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 800798e:	4648      	mov	r0, r9
 8007990:	f00a ffc2 	bl	8012918 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007994:	f04f 0a29 	mov.w	sl, #41	; 0x29
 8007998:	4b8e      	ldr	r3, [pc, #568]	; (8007bd4 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 800799a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 800799c:	a90a      	add	r1, sp, #40	; 0x28
 800799e:	4648      	mov	r0, r9
 80079a0:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 80079a4:	f00a ffd8 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80079a8:	4649      	mov	r1, r9
 80079aa:	4630      	mov	r0, r6
 80079ac:	f008 fe20 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 80079b0:	ee18 0a90 	vmov	r0, s17
 80079b4:	223c      	movs	r2, #60	; 0x3c
 80079b6:	4651      	mov	r1, sl
 80079b8:	f7fb fac9 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80079bc:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 80079c0:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 80079c4:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80079c8:	4658      	mov	r0, fp
        linespace = space;
 80079ca:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 80079ce:	f00a fd29 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80079d2:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80079d6:	f504 7390 	add.w	r3, r4, #288	; 0x120
 80079da:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80079de:	4b7d      	ldr	r3, [pc, #500]	; (8007bd4 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 80079e0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 80079e2:	ee18 0a90 	vmov	r0, s17
 80079e6:	2338      	movs	r3, #56	; 0x38
 80079e8:	a90a      	add	r1, sp, #40	; 0x28
 80079ea:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80079ee:	f00a ffb3 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80079f2:	ee18 1a90 	vmov	r1, s17
 80079f6:	4630      	mov	r0, r6
 80079f8:	f008 fdfa 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80079fc:	230a      	movs	r3, #10
 80079fe:	9300      	str	r3, [sp, #0]
 8007a00:	2232      	movs	r2, #50	; 0x32
 8007a02:	23f0      	movs	r3, #240	; 0xf0
 8007a04:	4629      	mov	r1, r5
 8007a06:	4638      	mov	r0, r7
 8007a08:	f7fb faae 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007a0c:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007a10:	22a0      	movs	r2, #160	; 0xa0
 8007a12:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007a16:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8007a1a:	9b03      	ldr	r3, [sp, #12]
 8007a1c:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007a20:	4611      	mov	r1, r2
 8007a22:	4638      	mov	r0, r7
 8007a24:	f00a fb52 	bl	80120cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007a28:	22a0      	movs	r2, #160	; 0xa0
 8007a2a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007a2e:	4638      	mov	r0, r7
 8007a30:	f00a fb57 	bl	80120e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007a34:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8007a38:	2b20      	cmp	r3, #32
 8007a3a:	d005      	beq.n	8007a48 <_ZN26Measurement_SingleViewBaseC1Ev+0x2b8>
        lineWidthQ5 = widthQ5;
 8007a3c:	2320      	movs	r3, #32
 8007a3e:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8007a42:	4638      	mov	r0, r7
 8007a44:	f00a fa4c 	bl	8011ee0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007a48:	4638      	mov	r0, r7
 8007a4a:	2101      	movs	r1, #1
 8007a4c:	f00a fb54 	bl	80120f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007a50:	4639      	mov	r1, r7
 8007a52:	4630      	mov	r0, r6
 8007a54:	f008 fdcc 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007a58:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8007a5c:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8007a5e:	2223      	movs	r2, #35	; 0x23
 8007a60:	4640      	mov	r0, r8
        linespace = space;
 8007a62:	f04f 0a00 	mov.w	sl, #0
 8007a66:	2145      	movs	r1, #69	; 0x45
 8007a68:	f7fb fa71 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007a6c:	4641      	mov	r1, r8
 8007a6e:	4638      	mov	r0, r7
        color = newColor;
 8007a70:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8007a74:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007a78:	f00a fcd4 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007a7c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007a80:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007a84:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007a88:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8007bd4 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8007a8c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007a90:	2351      	movs	r3, #81	; 0x51
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8007a92:	a90a      	add	r1, sp, #40	; 0x28
 8007a94:	4640      	mov	r0, r8
 8007a96:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a9a:	f00a ff5d 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a9e:	4641      	mov	r1, r8
 8007aa0:	4630      	mov	r0, r6
 8007aa2:	f008 fda5 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007aa6:	ee18 0a10 	vmov	r0, s16
 8007aaa:	220c      	movs	r2, #12
 8007aac:	2136      	movs	r1, #54	; 0x36
 8007aae:	f7fb fa4e 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8007ab2:	ee18 1a10 	vmov	r1, s16
 8007ab6:	4638      	mov	r0, r7
        color = newColor;
 8007ab8:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8007abc:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007ac0:	f00a fcb0 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007ac4:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007ac8:	ee18 3a10 	vmov	r3, s16
 8007acc:	333c      	adds	r3, #60	; 0x3c
 8007ace:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007ad2:	2350      	movs	r3, #80	; 0x50
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8007ad4:	ee18 0a10 	vmov	r0, s16
 8007ad8:	a90a      	add	r1, sp, #40	; 0x28
 8007ada:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007ade:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007ae2:	f00a ff39 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007ae6:	ee18 1a10 	vmov	r1, s16
 8007aea:	4630      	mov	r0, r6
 8007aec:	f008 fd80 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007af0:	ee19 0a10 	vmov	r0, s18
 8007af4:	22f0      	movs	r2, #240	; 0xf0
 8007af6:	2121      	movs	r1, #33	; 0x21
 8007af8:	f7fb fa29 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8007afc:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007b00:	aa0a      	add	r2, sp, #40	; 0x28
 8007b02:	f04f 0802 	mov.w	r8, #2
 8007b06:	a909      	add	r1, sp, #36	; 0x24
 8007b08:	ee19 0a10 	vmov	r0, s18
 8007b0c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007b10:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8007b14:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007b18:	f00b f903 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007b1c:	234f      	movs	r3, #79	; 0x4f
 8007b1e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8007b22:	3710      	adds	r7, #16
        updateTextPosition();
 8007b24:	ee19 0a10 	vmov	r0, s18
 8007b28:	f7fb fa66 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007b2c:	ee19 1a10 	vmov	r1, s18
 8007b30:	4630      	mov	r0, r6
        colorPressed = col;
 8007b32:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8007b36:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8007b3a:	f008 fd59 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8007b3e:	ee19 0a90 	vmov	r0, s19
 8007b42:	22aa      	movs	r2, #170	; 0xaa
 8007b44:	2121      	movs	r1, #33	; 0x21
 8007b46:	f7fb fa02 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007b4a:	aa0a      	add	r2, sp, #40	; 0x28
 8007b4c:	a909      	add	r1, sp, #36	; 0x24
 8007b4e:	ee19 0a90 	vmov	r0, s19
 8007b52:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007b56:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007b5a:	f00b f8e2 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007b5e:	234e      	movs	r3, #78	; 0x4e
 8007b60:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8007b64:	ee19 0a90 	vmov	r0, s19
 8007b68:	f7fb fa46 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007b6c:	ee19 1a90 	vmov	r1, s19
 8007b70:	4630      	mov	r0, r6
        colorPressed = col;
 8007b72:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8007b76:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8007b7a:	f008 fd39 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8007b7e:	ee1a 0a10 	vmov	r0, s20
 8007b82:	2264      	movs	r2, #100	; 0x64
 8007b84:	2121      	movs	r1, #33	; 0x21
 8007b86:	f7fb f9e2 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007b8a:	aa0a      	add	r2, sp, #40	; 0x28
 8007b8c:	a909      	add	r1, sp, #36	; 0x24
 8007b8e:	ee1a 0a10 	vmov	r0, s20
 8007b92:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007b96:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007b9a:	f00b f8c2 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007b9e:	234d      	movs	r3, #77	; 0x4d
        updateTextPosition();
 8007ba0:	ee1a 0a10 	vmov	r0, s20
 8007ba4:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8007ba8:	f7fb fa26 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007bac:	4630      	mov	r0, r6
        colorPressed = col;
 8007bae:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8007bb2:	ee1a 1a10 	vmov	r1, s20
 8007bb6:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8007bba:	f008 fd19 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007bbe:	4620      	mov	r0, r4
 8007bc0:	b00d      	add	sp, #52	; 0x34
 8007bc2:	ecbd 8b06 	vpop	{d8-d10}
 8007bc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007bca:	bf00      	nop
 8007bcc:	20012e18 	.word	0x20012e18
 8007bd0:	0802c55a 	.word	0x0802c55a
 8007bd4:	0802c5d0 	.word	0x0802c5d0

08007bd8 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8007bd8:	4770      	bx	lr

08007bda <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8007bda:	4770      	bx	lr

08007bdc <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007bdc:	4770      	bx	lr

08007bde <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007bde:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007be0:	68c2      	ldr	r2, [r0, #12]
 8007be2:	6844      	ldr	r4, [r0, #4]
 8007be4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007be6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007be8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007bec:	07d2      	lsls	r2, r2, #31
 8007bee:	bf48      	it	mi
 8007bf0:	5962      	ldrmi	r2, [r4, r5]
 8007bf2:	689b      	ldr	r3, [r3, #8]
    }
 8007bf4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007bf6:	bf48      	it	mi
 8007bf8:	58d3      	ldrmi	r3, [r2, r3]
 8007bfa:	4718      	bx	r3

08007bfc <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007bfc:	6843      	ldr	r3, [r0, #4]
 8007bfe:	b12b      	cbz	r3, 8007c0c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007c00:	6883      	ldr	r3, [r0, #8]
 8007c02:	b92b      	cbnz	r3, 8007c10 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007c04:	68c0      	ldr	r0, [r0, #12]
 8007c06:	f000 0001 	and.w	r0, r0, #1
 8007c0a:	4770      	bx	lr
 8007c0c:	4618      	mov	r0, r3
 8007c0e:	4770      	bx	lr
 8007c10:	2001      	movs	r0, #1
    }
 8007c12:	4770      	bx	lr

08007c14 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007c14:	b510      	push	{r4, lr}
 8007c16:	2110      	movs	r1, #16
 8007c18:	4604      	mov	r4, r0
 8007c1a:	f021 fff8 	bl	8029c0e <_ZdlPvj>
 8007c1e:	4620      	mov	r0, r4
 8007c20:	bd10      	pop	{r4, pc}
	...

08007c24 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007c24:	b510      	push	{r4, lr}
 8007c26:	4b03      	ldr	r3, [pc, #12]	; (8007c34 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8007c28:	6003      	str	r3, [r0, #0]
 8007c2a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007c2c:	f00c fa76 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007c30:	4620      	mov	r0, r4
 8007c32:	bd10      	pop	{r4, pc}
 8007c34:	0802e138 	.word	0x0802e138

08007c38 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007c38:	b507      	push	{r0, r1, r2, lr}
 8007c3a:	4b07      	ldr	r3, [pc, #28]	; (8007c58 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8007c3c:	6003      	str	r3, [r0, #0]
 8007c3e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007c40:	f00c fa6c 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007c44:	9801      	ldr	r0, [sp, #4]
 8007c46:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8007c4a:	f021 ffe0 	bl	8029c0e <_ZdlPvj>
 8007c4e:	9801      	ldr	r0, [sp, #4]
 8007c50:	b003      	add	sp, #12
 8007c52:	f85d fb04 	ldr.w	pc, [sp], #4
 8007c56:	bf00      	nop
 8007c58:	0802e138 	.word	0x0802e138

08007c5c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8007c5c:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8007c5e:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8007c62:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 8007c66:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8007c68:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8007c6a:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8007c6e:	d105      	bne.n	8007c7c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8007c70:	6803      	ldr	r3, [r0, #0]
 8007c72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007c74:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8007c76:	2300      	movs	r3, #0
 8007c78:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 8007c7c:	bd10      	pop	{r4, pc}

08007c7e <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8007c7e:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 8007c82:	4288      	cmp	r0, r1
{
 8007c84:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007c86:	d105      	bne.n	8007c94 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007c88:	f00d ff4a 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
}
 8007c8c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007c90:	f7fc bd64 	b.w	800475c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007c94:	bd08      	pop	{r3, pc}
	...

08007c98 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8007c98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007c9c:	ed2d 8b0a 	vpush	{d8-d12}
 8007ca0:	4604      	mov	r4, r0
 8007ca2:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8007ca4:	46a1      	mov	r9, r4
 8007ca6:	2500      	movs	r5, #0
 8007ca8:	f00f fbba 	bl	8017420 <_ZN8touchgfx6ScreenC1Ev>
 8007cac:	4ba9      	ldr	r3, [pc, #676]	; (8007f54 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2bc>)
 8007cae:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007cb0:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8007cb4:	2226      	movs	r2, #38	; 0x26
 8007cb6:	4629      	mov	r1, r5
 8007cb8:	4648      	mov	r0, r9
 8007cba:	f023 f894 	bl	802ade6 <memset>
 8007cbe:	4648      	mov	r0, r9
 8007cc0:	f7fb f966 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 8007cc4:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8007cc8:	26ff      	movs	r6, #255	; 0xff
 8007cca:	4ba3      	ldr	r3, [pc, #652]	; (8007f58 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 8007ccc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007cce:	2226      	movs	r2, #38	; 0x26
 8007cd0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007cd4:	4629      	mov	r1, r5
 8007cd6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007cda:	4640      	mov	r0, r8
 8007cdc:	66a5      	str	r5, [r4, #104]	; 0x68
 8007cde:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007ce2:	f023 f880 	bl	802ade6 <memset>
 8007ce6:	4640      	mov	r0, r8
 8007ce8:	f7fb f952 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 8007cec:	4b9b      	ldr	r3, [pc, #620]	; (8007f5c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 8007cee:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007cf0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007cf4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007cf8:	a90a      	add	r1, sp, #40	; 0x28
 8007cfa:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8007cfe:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8007d00:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007d04:	f00b fa03 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007d08:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8007d0c:	4658      	mov	r0, fp
 8007d0e:	f7fb f951 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8007d12:	4638      	mov	r0, r7
 8007d14:	f00a febe 	bl	8012a94 <_ZN8touchgfx5GaugeC1Ev>
 8007d18:	f504 7320 	add.w	r3, r4, #640	; 0x280
        : TextArea()
 8007d1c:	4618      	mov	r0, r3
 8007d1e:	ee09 3a10 	vmov	s18, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007d22:	4e8f      	ldr	r6, [pc, #572]	; (8007f60 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
        : TextArea()
 8007d24:	f7fb f946 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8007d28:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextAreaWithWildcardBase(), wc1(0)
 8007d2c:	f8c4 6280 	str.w	r6, [r4, #640]	; 0x280
        : TextArea()
 8007d30:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007d32:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 8007d36:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 8007d3a:	f7fb f93b 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8007d3e:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 8007d42:	f8c4 62cc 	str.w	r6, [r4, #716]	; 0x2cc
        : TextArea()
 8007d46:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007d48:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8007d4c:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8007d50:	f7fb f930 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8007d54:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 8007d58:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 8007d5c:	4618      	mov	r0, r3
 8007d5e:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 8007d62:	ee0a 3a90 	vmov	s21, r3
 8007d66:	f7fb f925 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8007d6a:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 8007d6e:	4618      	mov	r0, r3
 8007d70:	ee0b 3a10 	vmov	s22, r3
 8007d74:	f7fb f91e 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8007d78:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8007d7c:	4618      	mov	r0, r3
 8007d7e:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 8007d82:	ee0b 3a90 	vmov	s23, r3
 8007d86:	f7fb f915 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8007d8a:	4650      	mov	r0, sl
 8007d8c:	f00a f888 	bl	8011ea0 <_ZN8touchgfx4LineC1Ev>
 8007d90:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007d94:	4618      	mov	r0, r3
 8007d96:	9303      	str	r3, [sp, #12]
 8007d98:	f7f9 fc8a 	bl	80016b0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007d9c:	4b71      	ldr	r3, [pc, #452]	; (8007f64 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 8007d9e:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 8007da2:	3324      	adds	r3, #36	; 0x24
 8007da4:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8007da8:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8007dac:	4618      	mov	r0, r3
 8007dae:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8007db2:	ee08 3a10 	vmov	s16, r3
 8007db6:	f7fb f8fd 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8007dba:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8007dbe:	4618      	mov	r0, r3
 8007dc0:	ee08 3a90 	vmov	s17, r3
 8007dc4:	f7fb f8f6 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8007dc8:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8007dcc:	4618      	mov	r0, r3
 8007dce:	ee0c 3a10 	vmov	s24, r3
 8007dd2:	f00b fadd 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007dd6:	4a64      	ldr	r2, [pc, #400]	; (8007f68 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 8007dd8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007ddc:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8007de0:	4a62      	ldr	r2, [pc, #392]	; (8007f6c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8007de2:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 8007de6:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007dea:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007dee:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 8007df2:	f00c f989 	bl	8014108 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007df6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007dfa:	462a      	mov	r2, r5
 8007dfc:	4648      	mov	r0, r9
 8007dfe:	9300      	str	r3, [sp, #0]
 8007e00:	4629      	mov	r1, r5
 8007e02:	23f0      	movs	r3, #240	; 0xf0
 8007e04:	f7fb f8b0 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007e08:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007e0a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007e0e:	66a3      	str	r3, [r4, #104]	; 0x68
 8007e10:	4649      	mov	r1, r9
 8007e12:	4630      	mov	r0, r6
 8007e14:	f008 fbec 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007e18:	462a      	mov	r2, r5
 8007e1a:	4640      	mov	r0, r8
 8007e1c:	4629      	mov	r1, r5
 8007e1e:	f7fb f896 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8007e22:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007e24:	4640      	mov	r0, r8
 8007e26:	a90a      	add	r1, sp, #40	; 0x28
 8007e28:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007e2c:	f00b f96f 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007e30:	4641      	mov	r1, r8
 8007e32:	4630      	mov	r0, r6
 8007e34:	f008 fbdc 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8007e38:	223c      	movs	r2, #60	; 0x3c
 8007e3a:	211f      	movs	r1, #31
 8007e3c:	4658      	mov	r0, fp
 8007e3e:	f7fb f886 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8007e42:	f10d 0810 	add.w	r8, sp, #16
        color = newColor;
 8007e46:	f04f 33ff 	mov.w	r3, #4294967295
 8007e4a:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007e4e:	4659      	mov	r1, fp
 8007e50:	4640      	mov	r0, r8
        linespace = space;
 8007e52:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007e56:	f00a fae5 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007e5a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007e5e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007e62:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007e66:	4b42      	ldr	r3, [pc, #264]	; (8007f70 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8007e68:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8007e6a:	a90a      	add	r1, sp, #40	; 0x28
 8007e6c:	2337      	movs	r3, #55	; 0x37
 8007e6e:	4658      	mov	r0, fp
 8007e70:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007e74:	f00a fd70 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007e78:	4659      	mov	r1, fp
 8007e7a:	4630      	mov	r0, r6
 8007e7c:	f008 fbb8 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e80:	2304      	movs	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8007e82:	4638      	mov	r0, r7
 8007e84:	a90a      	add	r1, sp, #40	; 0x28
 8007e86:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007e8a:	f008 fb43 	bl	8010514 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 8007e8e:	236a      	movs	r3, #106	; 0x6a
 8007e90:	4638      	mov	r0, r7
 8007e92:	9300      	str	r3, [sp, #0]
 8007e94:	225e      	movs	r2, #94	; 0x5e
 8007e96:	23b8      	movs	r3, #184	; 0xb8
 8007e98:	211c      	movs	r1, #28
 8007e9a:	f7fb f865 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 8007e9e:	225c      	movs	r2, #92	; 0x5c
 8007ea0:	4611      	mov	r1, r2
 8007ea2:	4638      	mov	r0, r7
 8007ea4:	f00a fea1 	bl	8012bea <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 8007ea8:	4638      	mov	r0, r7
 8007eaa:	225a      	movs	r2, #90	; 0x5a
 8007eac:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007eb0:	f00a ff20 	bl	8012cf4 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 8007eb4:	462b      	mov	r3, r5
 8007eb6:	225a      	movs	r2, #90	; 0x5a
 8007eb8:	4638      	mov	r0, r7
 8007eba:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007ebe:	9500      	str	r5, [sp, #0]
 8007ec0:	f008 f9d5 	bl	801026e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 8007ec4:	4638      	mov	r0, r7
 8007ec6:	4629      	mov	r1, r5
 8007ec8:	f00a febe 	bl	8012c48 <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007ecc:	2335      	movs	r3, #53	; 0x35
 8007ece:	2208      	movs	r2, #8
 8007ed0:	4638      	mov	r0, r7
 8007ed2:	2105      	movs	r1, #5
 8007ed4:	f00a fe74 	bl	8012bc0 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007ed8:	4638      	mov	r0, r7
 8007eda:	2101      	movs	r1, #1
 8007edc:	f00a fe12 	bl	8012b04 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007ee0:	4638      	mov	r0, r7
 8007ee2:	2101      	movs	r1, #1
 8007ee4:	f00a fe11 	bl	8012b0a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007ee8:	4639      	mov	r1, r7
 8007eea:	4630      	mov	r0, r6
 8007eec:	f008 fb80 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 8007ef0:	230f      	movs	r3, #15
 8007ef2:	22e6      	movs	r2, #230	; 0xe6
 8007ef4:	ee19 0a10 	vmov	r0, s18
 8007ef8:	9300      	str	r3, [sp, #0]
 8007efa:	4629      	mov	r1, r5
 8007efc:	23f0      	movs	r3, #240	; 0xf0
 8007efe:	f7fb f833 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8007f02:	f04f 33ff 	mov.w	r3, #4294967295
 8007f06:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 8007f0a:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        linespace = space;
 8007f0e:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 8007f12:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007f16:	4f17      	ldr	r7, [pc, #92]	; (8007f74 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8007f18:	ee19 1a10 	vmov	r1, s18
 8007f1c:	4640      	mov	r0, r8
 8007f1e:	4798      	blx	r3
 8007f20:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007f24:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 8007f28:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007f2c:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 8007f2e:	f504 69b3 	add.w	r9, r4, #1432	; 0x598
 8007f32:	b92b      	cbnz	r3, 8007f40 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a8>
 8007f34:	4b10      	ldr	r3, [pc, #64]	; (8007f78 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 8007f36:	4a11      	ldr	r2, [pc, #68]	; (8007f7c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007f38:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007f3a:	4811      	ldr	r0, [pc, #68]	; (8007f80 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 8007f3c:	f022 fd4e 	bl	802a9dc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007f40:	f8df b044 	ldr.w	fp, [pc, #68]	; 8007f88 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007f44:	f8bb 3000 	ldrh.w	r3, [fp]
 8007f48:	2b10      	cmp	r3, #16
 8007f4a:	d81f      	bhi.n	8007f8c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>
 8007f4c:	4b0d      	ldr	r3, [pc, #52]	; (8007f84 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 8007f4e:	4a0b      	ldr	r2, [pc, #44]	; (8007f7c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007f50:	2161      	movs	r1, #97	; 0x61
 8007f52:	e7f2      	b.n	8007f3a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a2>
 8007f54:	0802e138 	.word	0x0802e138
 8007f58:	0802ef30 	.word	0x0802ef30
 8007f5c:	0802f0f8 	.word	0x0802f0f8
 8007f60:	0802c5e0 	.word	0x0802c5e0
 8007f64:	0802ec64 	.word	0x0802ec64
 8007f68:	0802e120 	.word	0x0802e120
 8007f6c:	08007c7f 	.word	0x08007c7f
 8007f70:	0802c5d0 	.word	0x0802c5d0
 8007f74:	20012e0c 	.word	0x20012e0c
 8007f78:	0802c420 	.word	0x0802c420
 8007f7c:	0802c522 	.word	0x0802c522
 8007f80:	0802c49d 	.word	0x0802c49d
 8007f84:	0802c4e4 	.word	0x0802c4e4
 8007f88:	20012e10 	.word	0x20012e10
        return texts->getText(typedTextId);
 8007f8c:	4bde      	ldr	r3, [pc, #888]	; (8008308 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007f8e:	2110      	movs	r1, #16
 8007f90:	6818      	ldr	r0, [r3, #0]
 8007f92:	f000 ffbf 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 8007f96:	4add      	ldr	r2, [pc, #884]	; (800830c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007f98:	4603      	mov	r3, r0
 8007f9a:	210a      	movs	r1, #10
 8007f9c:	4648      	mov	r0, r9
 8007f9e:	f010 ff2f 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007fa2:	4bdb      	ldr	r3, [pc, #876]	; (8008310 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        wc1 = value;
 8007fa4:	f8c4 92c8 	str.w	r9, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 8007fa8:	ee19 0a10 	vmov	r0, s18
 8007fac:	930a      	str	r3, [sp, #40]	; 0x28
 8007fae:	a90a      	add	r1, sp, #40	; 0x28
 8007fb0:	2313      	movs	r3, #19
 8007fb2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007fb6:	f00a fccf 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007fba:	ee19 1a10 	vmov	r1, s18
 8007fbe:	4630      	mov	r0, r6
 8007fc0:	f008 fb16 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 8007fc4:	210f      	movs	r1, #15
 8007fc6:	22d7      	movs	r2, #215	; 0xd7
 8007fc8:	ee19 0a90 	vmov	r0, s19
 8007fcc:	9100      	str	r1, [sp, #0]
 8007fce:	23f0      	movs	r3, #240	; 0xf0
 8007fd0:	4629      	mov	r1, r5
 8007fd2:	f7fa ffc9 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007fd6:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        linespace = space;
 8007fda:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        color = newColor;
 8007fde:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8007fe2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007fe6:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8007fea:	4640      	mov	r0, r8
 8007fec:	ee19 1a90 	vmov	r1, s19
 8007ff0:	4798      	blx	r3
 8007ff2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007ff6:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8007ffa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007ffe:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8008000:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 8008004:	2b00      	cmp	r3, #0
 8008006:	d095      	beq.n	8007f34 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008008:	f8bb 3000 	ldrh.w	r3, [fp]
 800800c:	2b11      	cmp	r3, #17
 800800e:	d99d      	bls.n	8007f4c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>
        return texts->getText(typedTextId);
 8008010:	4abd      	ldr	r2, [pc, #756]	; (8008308 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8008012:	2111      	movs	r1, #17
 8008014:	6810      	ldr	r0, [r2, #0]
 8008016:	f000 ff7d 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 800801a:	4abc      	ldr	r2, [pc, #752]	; (800830c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 800801c:	4603      	mov	r3, r0
 800801e:	210a      	movs	r1, #10
 8008020:	4648      	mov	r0, r9
 8008022:	f010 feed 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8008026:	4bba      	ldr	r3, [pc, #744]	; (8008310 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 8008028:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 800802c:	ee19 0a90 	vmov	r0, s19
 8008030:	930a      	str	r3, [sp, #40]	; 0x28
 8008032:	a90a      	add	r1, sp, #40	; 0x28
 8008034:	2314      	movs	r3, #20
 8008036:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800803a:	f00a fc8d 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800803e:	ee19 1a90 	vmov	r1, s19
 8008042:	4630      	mov	r0, r6
 8008044:	f008 fad4 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 8008048:	210f      	movs	r1, #15
 800804a:	22c8      	movs	r2, #200	; 0xc8
 800804c:	ee1a 0a10 	vmov	r0, s20
 8008050:	9100      	str	r1, [sp, #0]
 8008052:	23f0      	movs	r3, #240	; 0xf0
 8008054:	4629      	mov	r1, r5
 8008056:	f7fa ff87 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 800805a:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        linespace = space;
 800805e:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        color = newColor;
 8008062:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8008066:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800806a:	f8c4 1348 	str.w	r1, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 800806e:	4640      	mov	r0, r8
 8008070:	ee1a 1a10 	vmov	r1, s20
 8008074:	4798      	blx	r3
 8008076:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800807a:	f504 7355 	add.w	r3, r4, #852	; 0x354
 800807e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008082:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 8008084:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 8008088:	2b00      	cmp	r3, #0
 800808a:	f43f af53 	beq.w	8007f34 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800808e:	f8bb 3000 	ldrh.w	r3, [fp]
 8008092:	2b12      	cmp	r3, #18
 8008094:	f67f af5a 	bls.w	8007f4c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>
        return texts->getText(typedTextId);
 8008098:	4a9b      	ldr	r2, [pc, #620]	; (8008308 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
        : typedTextId(id)
 800809a:	4f9d      	ldr	r7, [pc, #628]	; (8008310 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        return texts->getText(typedTextId);
 800809c:	6810      	ldr	r0, [r2, #0]
 800809e:	2112      	movs	r1, #18
 80080a0:	f000 ff38 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 80080a4:	4a99      	ldr	r2, [pc, #612]	; (800830c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 80080a6:	4603      	mov	r3, r0
 80080a8:	210a      	movs	r1, #10
 80080aa:	4648      	mov	r0, r9
 80080ac:	f010 fea8 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80080b0:	2315      	movs	r3, #21
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 80080b2:	ee1a 0a10 	vmov	r0, s20
 80080b6:	a90a      	add	r1, sp, #40	; 0x28
 80080b8:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 80080bc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80080c0:	970a      	str	r7, [sp, #40]	; 0x28
 80080c2:	f00a fc49 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80080c6:	ee1a 1a10 	vmov	r1, s20
 80080ca:	4630      	mov	r0, r6
 80080cc:	f008 fa90 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 80080d0:	224c      	movs	r2, #76	; 0x4c
 80080d2:	ee1a 0a90 	vmov	r0, s21
 80080d6:	2171      	movs	r1, #113	; 0x71
 80080d8:	f7fa ff39 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80080dc:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80080e0:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 80080e4:	f8c4 3394 	str.w	r3, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 80080e8:	4640      	mov	r0, r8
        linespace = space;
 80080ea:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 80080ee:	f00a f999 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80080f2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80080f6:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 80080fa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80080fe:	2316      	movs	r3, #22
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 8008100:	ee1a 0a90 	vmov	r0, s21
 8008104:	a90a      	add	r1, sp, #40	; 0x28
 8008106:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800810a:	970a      	str	r7, [sp, #40]	; 0x28
 800810c:	f00a fc24 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008110:	ee1a 1a90 	vmov	r1, s21
 8008114:	4630      	mov	r0, r6
 8008116:	f008 fa6b 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 800811a:	22b9      	movs	r2, #185	; 0xb9
 800811c:	ee1b 0a10 	vmov	r0, s22
 8008120:	4629      	mov	r1, r5
 8008122:	f7fa ff14 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8008126:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800812a:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 800812e:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
        boundingArea = calculateBoundingArea();
 8008132:	4640      	mov	r0, r8
        linespace = space;
 8008134:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 8008138:	f00a f974 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800813c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8008140:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 8008144:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008148:	2317      	movs	r3, #23
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 800814a:	ee1b 0a10 	vmov	r0, s22
 800814e:	a90a      	add	r1, sp, #40	; 0x28
 8008150:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008154:	970a      	str	r7, [sp, #40]	; 0x28
 8008156:	f00a fbff 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800815a:	ee1b 1a10 	vmov	r1, s22
 800815e:	4630      	mov	r0, r6
 8008160:	f008 fa46 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 8008164:	22b9      	movs	r2, #185	; 0xb9
 8008166:	ee1b 0a90 	vmov	r0, s23
 800816a:	21d9      	movs	r1, #217	; 0xd9
 800816c:	f7fa feef 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8008170:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8008174:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 8008178:	f8c4 3424 	str.w	r3, [r4, #1060]	; 0x424
        boundingArea = calculateBoundingArea();
 800817c:	4640      	mov	r0, r8
        linespace = space;
 800817e:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 8008182:	f00a f94f 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008186:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800818a:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 800818e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008192:	2318      	movs	r3, #24
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8008194:	ee1b 0a90 	vmov	r0, s23
 8008198:	a90a      	add	r1, sp, #40	; 0x28
 800819a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800819e:	970a      	str	r7, [sp, #40]	; 0x28
 80081a0:	f00a fbda 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80081a4:	ee1b 1a90 	vmov	r1, s23
 80081a8:	4630      	mov	r0, r6
 80081aa:	f008 fa21 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80081ae:	230a      	movs	r3, #10
 80081b0:	9300      	str	r3, [sp, #0]
 80081b2:	2232      	movs	r2, #50	; 0x32
 80081b4:	23f0      	movs	r3, #240	; 0xf0
 80081b6:	4629      	mov	r1, r5
 80081b8:	4650      	mov	r0, sl
 80081ba:	f7fa fed5 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 80081be:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80081c2:	22a0      	movs	r2, #160	; 0xa0
 80081c4:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80081c8:	f8a4 34bc 	strh.w	r3, [r4, #1212]	; 0x4bc
 80081cc:	9b03      	ldr	r3, [sp, #12]
 80081ce:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
 80081d2:	4611      	mov	r1, r2
 80081d4:	4650      	mov	r0, sl
 80081d6:	f009 ff79 	bl	80120cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80081da:	22a0      	movs	r2, #160	; 0xa0
 80081dc:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80081e0:	4650      	mov	r0, sl
 80081e2:	f009 ff7e 	bl	80120e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80081e6:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 80081ea:	2b20      	cmp	r3, #32
 80081ec:	d005      	beq.n	80081fa <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x562>
        lineWidthQ5 = widthQ5;
 80081ee:	2320      	movs	r3, #32
 80081f0:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 80081f4:	4650      	mov	r0, sl
 80081f6:	f009 fe73 	bl	8011ee0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80081fa:	4650      	mov	r0, sl
 80081fc:	2101      	movs	r1, #1
 80081fe:	f009 ff7b 	bl	80120f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008202:	4651      	mov	r1, sl
 8008204:	4630      	mov	r0, r6
 8008206:	f008 f9f3 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800820a:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 800820e:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8008210:	ee18 0a10 	vmov	r0, s16
 8008214:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8008216:	f04f 0900 	mov.w	r9, #0
 800821a:	2145      	movs	r1, #69	; 0x45
 800821c:	f7fa fe97 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008220:	ee18 1a10 	vmov	r1, s16
 8008224:	4628      	mov	r0, r5
        color = newColor;
 8008226:	f8c4 74f0 	str.w	r7, [r4, #1264]	; 0x4f0
        linespace = space;
 800822a:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 800822e:	f00a f8f9 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008232:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008236:	ee18 3a10 	vmov	r3, s16
 800823a:	333c      	adds	r3, #60	; 0x3c
 800823c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008240:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 8008310 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>
 8008244:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8008248:	2344      	movs	r3, #68	; 0x44
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 800824a:	ee18 0a10 	vmov	r0, s16
 800824e:	a90a      	add	r1, sp, #40	; 0x28
 8008250:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008254:	f00a fb80 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008258:	ee18 1a10 	vmov	r1, s16
 800825c:	4630      	mov	r0, r6
 800825e:	f008 f9c7 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8008262:	ee18 0a90 	vmov	r0, s17
 8008266:	220c      	movs	r2, #12
 8008268:	2136      	movs	r1, #54	; 0x36
 800826a:	f7fa fe70 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 800826e:	ee18 1a90 	vmov	r1, s17
 8008272:	4628      	mov	r0, r5
        color = newColor;
 8008274:	f8c4 7538 	str.w	r7, [r4, #1336]	; 0x538
        linespace = space;
 8008278:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 800827c:	f00a f8d2 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008280:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008284:	ee18 3a90 	vmov	r3, s17
 8008288:	333c      	adds	r3, #60	; 0x3c
 800828a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800828e:	2343      	movs	r3, #67	; 0x43
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8008290:	ee18 0a90 	vmov	r0, s17
 8008294:	a90a      	add	r1, sp, #40	; 0x28
 8008296:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800829a:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800829e:	f00a fb5b 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80082a2:	ee18 1a90 	vmov	r1, s17
 80082a6:	4630      	mov	r0, r6
 80082a8:	f008 f9a2 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 80082ac:	ee1c 0a10 	vmov	r0, s24
 80082b0:	f44f 7280 	mov.w	r2, #256	; 0x100
 80082b4:	2121      	movs	r1, #33	; 0x21
 80082b6:	f7fa fe4a 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 80082ba:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80082bc:	aa0a      	add	r2, sp, #40	; 0x28
 80082be:	a909      	add	r1, sp, #36	; 0x24
 80082c0:	ee1c 0a10 	vmov	r0, s24
 80082c4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80082c8:	2302      	movs	r3, #2
 80082ca:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80082ce:	f00a fd28 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80082d2:	2342      	movs	r3, #66	; 0x42
        updateTextPosition();
 80082d4:	ee1c 0a10 	vmov	r0, s24
 80082d8:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 80082dc:	f7fa fe8c 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80082e0:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 80082e4:	3304      	adds	r3, #4
 80082e6:	4630      	mov	r0, r6
 80082e8:	ee1c 1a10 	vmov	r1, s24
        color = col;
 80082ec:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
        colorPressed = col;
 80082f0:	f8c4 7590 	str.w	r7, [r4, #1424]	; 0x590
 80082f4:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 80082f8:	f008 f97a 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80082fc:	4620      	mov	r0, r4
 80082fe:	b00d      	add	sp, #52	; 0x34
 8008300:	ecbd 8b0a 	vpop	{d8-d12}
 8008304:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008308:	20012e18 	.word	0x20012e18
 800830c:	0802c55a 	.word	0x0802c55a
 8008310:	0802c5d0 	.word	0x0802c5d0

08008314 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008314:	4770      	bx	lr

08008316 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008316:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008318:	68c2      	ldr	r2, [r0, #12]
 800831a:	6844      	ldr	r4, [r0, #4]
 800831c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800831e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8008320:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008324:	07d2      	lsls	r2, r2, #31
 8008326:	bf48      	it	mi
 8008328:	5962      	ldrmi	r2, [r4, r5]
 800832a:	689b      	ldr	r3, [r3, #8]
    }
 800832c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800832e:	bf48      	it	mi
 8008330:	58d3      	ldrmi	r3, [r2, r3]
 8008332:	4718      	bx	r3

08008334 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8008334:	6843      	ldr	r3, [r0, #4]
 8008336:	b12b      	cbz	r3, 8008344 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008338:	6883      	ldr	r3, [r0, #8]
 800833a:	b92b      	cbnz	r3, 8008348 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800833c:	68c0      	ldr	r0, [r0, #12]
 800833e:	f000 0001 	and.w	r0, r0, #1
 8008342:	4770      	bx	lr
 8008344:	4618      	mov	r0, r3
 8008346:	4770      	bx	lr
 8008348:	2001      	movs	r0, #1
    }
 800834a:	4770      	bx	lr

0800834c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800834c:	b510      	push	{r4, lr}
 800834e:	2110      	movs	r1, #16
 8008350:	4604      	mov	r4, r0
 8008352:	f021 fc5c 	bl	8029c0e <_ZdlPvj>
 8008356:	4620      	mov	r0, r4
 8008358:	bd10      	pop	{r4, pc}

0800835a <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 800835a:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800835e:	f000 bfb7 	b.w	80092d0 <_ZN17Gauge_with_Values10initializeEv>

08008362 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8008362:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8008366:	4288      	cmp	r0, r1
{
 8008368:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800836a:	d105      	bne.n	8008378 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800836c:	f00d fbd8 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8008370:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8008374:	f7fc b9f2 	b.w	800475c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8008378:	bd08      	pop	{r3, pc}
	...

0800837c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 800837c:	b510      	push	{r4, lr}
 800837e:	4b07      	ldr	r3, [pc, #28]	; (800839c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 8008380:	6003      	str	r3, [r0, #0]
 8008382:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008384:	f00b feca 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8008388:	4b05      	ldr	r3, [pc, #20]	; (80083a0 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 800838a:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800838e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8008392:	f7fd fc79 	bl	8005c88 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8008396:	4620      	mov	r0, r4
 8008398:	bd10      	pop	{r4, pc}
 800839a:	bf00      	nop
 800839c:	0802e188 	.word	0x0802e188
 80083a0:	0802e5bc 	.word	0x0802e5bc

080083a4 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80083a4:	b510      	push	{r4, lr}
 80083a6:	4604      	mov	r4, r0
}
 80083a8:	f7ff ffe8 	bl	800837c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 80083ac:	4620      	mov	r0, r4
 80083ae:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80083b2:	f021 fc2c 	bl	8029c0e <_ZdlPvj>
 80083b6:	4620      	mov	r0, r4
 80083b8:	bd10      	pop	{r4, pc}
	...

080083bc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 80083bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80083c0:	ed2d 8b04 	vpush	{d8-d9}
 80083c4:	4604      	mov	r4, r0
 80083c6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 80083c8:	46a3      	mov	fp, r4
 80083ca:	2500      	movs	r5, #0
 80083cc:	f00f f828 	bl	8017420 <_ZN8touchgfx6ScreenC1Ev>
 80083d0:	4bae      	ldr	r3, [pc, #696]	; (800868c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 80083d2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80083d4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80083d8:	2226      	movs	r2, #38	; 0x26
 80083da:	4629      	mov	r1, r5
 80083dc:	4658      	mov	r0, fp
 80083de:	f022 fd02 	bl	802ade6 <memset>
 80083e2:	4658      	mov	r0, fp
 80083e4:	f7fa fdd4 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 80083e8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80083ec:	26ff      	movs	r6, #255	; 0xff
 80083ee:	4ba8      	ldr	r3, [pc, #672]	; (8008690 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 80083f0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80083f2:	2226      	movs	r2, #38	; 0x26
 80083f4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80083f8:	4629      	mov	r1, r5
 80083fa:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80083fe:	66a5      	str	r5, [r4, #104]	; 0x68
 8008400:	4650      	mov	r0, sl
 8008402:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008406:	f022 fcee 	bl	802ade6 <memset>
 800840a:	4650      	mov	r0, sl
 800840c:	f7fa fdc0 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 8008410:	4ba0      	ldr	r3, [pc, #640]	; (8008694 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 8008412:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008414:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008418:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800841c:	a90a      	add	r1, sp, #40	; 0x28
 800841e:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8008422:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008426:	4650      	mov	r0, sl
 8008428:	f00a fe71 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800842c:	4638      	mov	r0, r7
 800842e:	f009 fd37 	bl	8011ea0 <_ZN8touchgfx4LineC1Ev>
 8008432:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008436:	4618      	mov	r0, r3
 8008438:	9303      	str	r3, [sp, #12]
 800843a:	f7f9 f939 	bl	80016b0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800843e:	4b96      	ldr	r3, [pc, #600]	; (8008698 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 8008440:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8008444:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 8008448:	3324      	adds	r3, #36	; 0x24
 800844a:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 800844e:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8008452:	4648      	mov	r0, r9
 8008454:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 8008458:	f7fa fdac 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 800845c:	4640      	mov	r0, r8
 800845e:	f7fa fda9 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8008462:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8008466:	4618      	mov	r0, r3
 8008468:	ee08 3a10 	vmov	s16, r3
 800846c:	f7fa fda2 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 8008470:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8008474:	4618      	mov	r0, r3
 8008476:	ee08 3a90 	vmov	s17, r3
 800847a:	f00a ff89 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800847e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8008482:	4618      	mov	r0, r3
 8008484:	ee09 3a10 	vmov	s18, r3
 8008488:	f000 ff18 	bl	80092bc <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800848c:	4a83      	ldr	r2, [pc, #524]	; (800869c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 800848e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008492:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8008496:	4a82      	ldr	r2, [pc, #520]	; (80086a0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008498:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800849c:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80084a0:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80084a4:	f00b fe30 	bl	8014108 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80084a8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80084ac:	462a      	mov	r2, r5
 80084ae:	9300      	str	r3, [sp, #0]
 80084b0:	4629      	mov	r1, r5
 80084b2:	23f0      	movs	r3, #240	; 0xf0
 80084b4:	4658      	mov	r0, fp
 80084b6:	f7fa fd57 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 80084ba:	1d26      	adds	r6, r4, #4
        color = newColor;
 80084bc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80084c0:	66a3      	str	r3, [r4, #104]	; 0x68
 80084c2:	4659      	mov	r1, fp
 80084c4:	4630      	mov	r0, r6
 80084c6:	f008 f893 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80084ca:	462a      	mov	r2, r5
 80084cc:	4629      	mov	r1, r5
 80084ce:	4650      	mov	r0, sl
 80084d0:	f7fa fd3d 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 80084d4:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80084d6:	a90a      	add	r1, sp, #40	; 0x28
 80084d8:	4650      	mov	r0, sl
 80084da:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80084de:	f00a fe16 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80084e2:	4651      	mov	r1, sl
 80084e4:	4630      	mov	r0, r6
 80084e6:	f008 f883 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80084ea:	230a      	movs	r3, #10
 80084ec:	9300      	str	r3, [sp, #0]
 80084ee:	2232      	movs	r2, #50	; 0x32
 80084f0:	23f0      	movs	r3, #240	; 0xf0
 80084f2:	4629      	mov	r1, r5
 80084f4:	4638      	mov	r0, r7
 80084f6:	f7fa fd37 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 80084fa:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80084fe:	22a0      	movs	r2, #160	; 0xa0
 8008500:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008504:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8008508:	9b03      	ldr	r3, [sp, #12]
 800850a:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800850e:	4611      	mov	r1, r2
 8008510:	4638      	mov	r0, r7
 8008512:	f009 fddb 	bl	80120cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008516:	22a0      	movs	r2, #160	; 0xa0
 8008518:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800851c:	4638      	mov	r0, r7
 800851e:	f009 fde0 	bl	80120e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008522:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8008526:	2b20      	cmp	r3, #32
 8008528:	d005      	beq.n	8008536 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 800852a:	2320      	movs	r3, #32
 800852c:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 8008530:	4638      	mov	r0, r7
 8008532:	f009 fcd5 	bl	8011ee0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008536:	4638      	mov	r0, r7
 8008538:	2101      	movs	r1, #1
 800853a:	f009 fddd 	bl	80120f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800853e:	4639      	mov	r1, r7
 8008540:	4630      	mov	r0, r6
 8008542:	ad04      	add	r5, sp, #16
 8008544:	f008 f854 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008548:	f04f 3aff 	mov.w	sl, #4294967295
        linespace = space;
 800854c:	2700      	movs	r7, #0
    textArea2.setXY(69, 35);
 800854e:	2223      	movs	r2, #35	; 0x23
 8008550:	4648      	mov	r0, r9
 8008552:	2145      	movs	r1, #69	; 0x45
 8008554:	f7fa fcfb 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008558:	4649      	mov	r1, r9
 800855a:	4628      	mov	r0, r5
        color = newColor;
 800855c:	f8c4 a14c 	str.w	sl, [r4, #332]	; 0x14c
        linespace = space;
 8008560:	f8a4 7150 	strh.w	r7, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8008564:	f009 ff5e 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008568:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800856c:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 8008570:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008574:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80086a4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 8008578:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800857c:	2347      	movs	r3, #71	; 0x47
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 800857e:	a90a      	add	r1, sp, #40	; 0x28
 8008580:	4648      	mov	r0, r9
 8008582:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008586:	f00a f9e7 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800858a:	4649      	mov	r1, r9
 800858c:	4630      	mov	r0, r6
 800858e:	f008 f82f 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8008592:	223c      	movs	r2, #60	; 0x3c
 8008594:	4640      	mov	r0, r8
 8008596:	211f      	movs	r1, #31
 8008598:	f7fa fcd9 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 800859c:	4641      	mov	r1, r8
 800859e:	4628      	mov	r0, r5
        color = newColor;
 80085a0:	f8c4 a194 	str.w	sl, [r4, #404]	; 0x194
        linespace = space;
 80085a4:	f8a4 7198 	strh.w	r7, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 80085a8:	f009 ff3c 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80085ac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80085b0:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80085b4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80085b8:	f04f 0936 	mov.w	r9, #54	; 0x36
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 80085bc:	a90a      	add	r1, sp, #40	; 0x28
 80085be:	4640      	mov	r0, r8
 80085c0:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80085c4:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80085c8:	f00a f9c6 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80085cc:	4641      	mov	r1, r8
 80085ce:	4630      	mov	r0, r6
 80085d0:	f008 f80e 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80085d4:	ee18 0a10 	vmov	r0, s16
 80085d8:	220c      	movs	r2, #12
 80085da:	4649      	mov	r1, r9
 80085dc:	f7fa fcb7 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 80085e0:	ee18 1a10 	vmov	r1, s16
 80085e4:	4628      	mov	r0, r5
        color = newColor;
 80085e6:	f8c4 a1dc 	str.w	sl, [r4, #476]	; 0x1dc
        linespace = space;
 80085ea:	f8a4 71e0 	strh.w	r7, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80085ee:	f009 ff19 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80085f2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80085f6:	ee18 3a10 	vmov	r3, s16
 80085fa:	333c      	adds	r3, #60	; 0x3c
 80085fc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008600:	2346      	movs	r3, #70	; 0x46
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8008602:	ee18 0a10 	vmov	r0, s16
 8008606:	a90a      	add	r1, sp, #40	; 0x28
 8008608:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800860c:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8008610:	f00a f9a2 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008614:	ee18 1a10 	vmov	r1, s16
 8008618:	4630      	mov	r0, r6
 800861a:	f007 ffe9 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800861e:	ee18 0a90 	vmov	r0, s17
 8008622:	f240 1201 	movw	r2, #257	; 0x101
 8008626:	2121      	movs	r1, #33	; 0x21
 8008628:	f7fa fc91 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 800862c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800862e:	aa0a      	add	r2, sp, #40	; 0x28
 8008630:	a909      	add	r1, sp, #36	; 0x24
 8008632:	ee18 0a90 	vmov	r0, s17
 8008636:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800863a:	2302      	movs	r3, #2
 800863c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008640:	f00a fb6f 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008644:	2345      	movs	r3, #69	; 0x45
        updateTextPosition();
 8008646:	ee18 0a90 	vmov	r0, s17
 800864a:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 800864e:	f7fa fcd3 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8008652:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8008656:	3314      	adds	r3, #20
 8008658:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 800865c:	ee18 1a90 	vmov	r1, s17
 8008660:	4630      	mov	r0, r6
        colorPressed = col;
 8008662:	e9c4 aa8c 	strd	sl, sl, [r4, #560]	; 0x230
 8008666:	f007 ffc3 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 800866a:	ee19 0a10 	vmov	r0, s18
 800866e:	224e      	movs	r2, #78	; 0x4e
 8008670:	4639      	mov	r1, r7
 8008672:	f7fa fc6c 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8008676:	4630      	mov	r0, r6
 8008678:	ee19 1a10 	vmov	r1, s18
 800867c:	f007 ffb8 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008680:	4620      	mov	r0, r4
 8008682:	b00d      	add	sp, #52	; 0x34
 8008684:	ecbd 8b04 	vpop	{d8-d9}
 8008688:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800868c:	0802e188 	.word	0x0802e188
 8008690:	0802ef30 	.word	0x0802ef30
 8008694:	0802f0f8 	.word	0x0802f0f8
 8008698:	0802ec64 	.word	0x0802ec64
 800869c:	0802e170 	.word	0x0802e170
 80086a0:	08008363 	.word	0x08008363
 80086a4:	0802c5d0 	.word	0x0802c5d0

080086a8 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 80086a8:	4770      	bx	lr

080086aa <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80086aa:	4770      	bx	lr

080086ac <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80086ac:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80086ae:	68c2      	ldr	r2, [r0, #12]
 80086b0:	6844      	ldr	r4, [r0, #4]
 80086b2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80086b4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80086b6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80086ba:	07d2      	lsls	r2, r2, #31
 80086bc:	bf48      	it	mi
 80086be:	5962      	ldrmi	r2, [r4, r5]
 80086c0:	689b      	ldr	r3, [r3, #8]
    }
 80086c2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80086c4:	bf48      	it	mi
 80086c6:	58d3      	ldrmi	r3, [r2, r3]
 80086c8:	4718      	bx	r3

080086ca <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80086ca:	6843      	ldr	r3, [r0, #4]
 80086cc:	b12b      	cbz	r3, 80086da <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80086ce:	6883      	ldr	r3, [r0, #8]
 80086d0:	b92b      	cbnz	r3, 80086de <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80086d2:	68c0      	ldr	r0, [r0, #12]
 80086d4:	f000 0001 	and.w	r0, r0, #1
 80086d8:	4770      	bx	lr
 80086da:	4618      	mov	r0, r3
 80086dc:	4770      	bx	lr
 80086de:	2001      	movs	r0, #1
    }
 80086e0:	4770      	bx	lr

080086e2 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80086e2:	b510      	push	{r4, lr}
 80086e4:	2110      	movs	r1, #16
 80086e6:	4604      	mov	r4, r0
 80086e8:	f021 fa91 	bl	8029c0e <_ZdlPvj>
 80086ec:	4620      	mov	r0, r4
 80086ee:	bd10      	pop	{r4, pc}

080086f0 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80086f0:	b510      	push	{r4, lr}
 80086f2:	4b03      	ldr	r3, [pc, #12]	; (8008700 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 80086f4:	6003      	str	r3, [r0, #0]
 80086f6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80086f8:	f00b fd10 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80086fc:	4620      	mov	r0, r4
 80086fe:	bd10      	pop	{r4, pc}
 8008700:	0802e1d4 	.word	0x0802e1d4

08008704 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8008704:	b507      	push	{r0, r1, r2, lr}
 8008706:	4b07      	ldr	r3, [pc, #28]	; (8008724 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8008708:	6003      	str	r3, [r0, #0]
 800870a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800870c:	f00b fd06 	bl	801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008710:	9801      	ldr	r0, [sp, #4]
 8008712:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8008716:	f021 fa7a 	bl	8029c0e <_ZdlPvj>
 800871a:	9801      	ldr	r0, [sp, #4]
 800871c:	b003      	add	sp, #12
 800871e:	f85d fb04 	ldr.w	pc, [sp], #4
 8008722:	bf00      	nop
 8008724:	0802e1d4 	.word	0x0802e1d4

08008728 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8008728:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 800872c:	4288      	cmp	r0, r1
{
 800872e:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8008730:	d105      	bne.n	800873e <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008732:	f00d f9f5 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8008736:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 800873a:	f7fb bfdf 	b.w	80046fc <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 800873e:	bd08      	pop	{r3, pc}

08008740 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8008740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008744:	ed2d 8b04 	vpush	{d8-d9}
 8008748:	4604      	mov	r4, r0
 800874a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 800874c:	46a3      	mov	fp, r4
 800874e:	2500      	movs	r5, #0
 8008750:	f00e fe66 	bl	8017420 <_ZN8touchgfx6ScreenC1Ev>
 8008754:	4bd1      	ldr	r3, [pc, #836]	; (8008a9c <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 8008756:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008758:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800875c:	2226      	movs	r2, #38	; 0x26
 800875e:	4629      	mov	r1, r5
 8008760:	4658      	mov	r0, fp
 8008762:	f022 fb40 	bl	802ade6 <memset>
 8008766:	4658      	mov	r0, fp
 8008768:	f7fa fc12 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 800876c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8008770:	26ff      	movs	r6, #255	; 0xff
 8008772:	4bcb      	ldr	r3, [pc, #812]	; (8008aa0 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8008774:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008776:	2226      	movs	r2, #38	; 0x26
 8008778:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800877c:	4629      	mov	r1, r5
 800877e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008782:	4650      	mov	r0, sl
 8008784:	66a5      	str	r5, [r4, #104]	; 0x68
 8008786:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800878a:	f022 fb2c 	bl	802ade6 <memset>
 800878e:	4650      	mov	r0, sl
 8008790:	f7fa fbfe 	bl	8002f90 <_ZN8touchgfx6WidgetC1Ev>
 8008794:	4bc3      	ldr	r3, [pc, #780]	; (8008aa4 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 8008796:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008798:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800879c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80087a0:	a90a      	add	r1, sp, #40	; 0x28
 80087a2:	4650      	mov	r0, sl
 80087a4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80087a8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80087ac:	f00a fcaf 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80087b0:	4648      	mov	r0, r9
 80087b2:	f7fa fbff 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 80087b6:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80087ba:	4bbb      	ldr	r3, [pc, #748]	; (8008aa8 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 80087bc:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80087c0:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80087c4:	4638      	mov	r0, r7
 80087c6:	f009 fb6b 	bl	8011ea0 <_ZN8touchgfx4LineC1Ev>
 80087ca:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80087ce:	4618      	mov	r0, r3
 80087d0:	9303      	str	r3, [sp, #12]
 80087d2:	f7f8 ff6d 	bl	80016b0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80087d6:	4bb5      	ldr	r3, [pc, #724]	; (8008aac <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 80087d8:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80087dc:	3324      	adds	r3, #36	; 0x24
 80087de:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80087e2:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 80087e6:	4618      	mov	r0, r3
 80087e8:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80087ec:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80087f0:	ee09 3a10 	vmov	s18, r3
 80087f4:	f00a fdcc 	bl	8013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80087f8:	4640      	mov	r0, r8
 80087fa:	f7fa fbdb 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 80087fe:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8008802:	4618      	mov	r0, r3
 8008804:	ee08 3a10 	vmov	s16, r3
 8008808:	f7fa fbd4 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
 800880c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8008810:	4618      	mov	r0, r3
 8008812:	ee08 3a90 	vmov	s17, r3
 8008816:	f7fa fbcd 	bl	8002fb4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800881a:	4aa5      	ldr	r2, [pc, #660]	; (8008ab0 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 800881c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008820:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8008824:	4aa3      	ldr	r2, [pc, #652]	; (8008ab4 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008826:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800882a:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 800882e:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8008832:	f00b fc69 	bl	8014108 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008836:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800883a:	462a      	mov	r2, r5
 800883c:	4658      	mov	r0, fp
 800883e:	9300      	str	r3, [sp, #0]
 8008840:	4629      	mov	r1, r5
 8008842:	23f0      	movs	r3, #240	; 0xf0
 8008844:	f7fa fb90 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008848:	1d26      	adds	r6, r4, #4
        color = newColor;
 800884a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800884e:	66a3      	str	r3, [r4, #104]	; 0x68
 8008850:	4659      	mov	r1, fp
 8008852:	4630      	mov	r0, r6
 8008854:	f007 fecc 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8008858:	462a      	mov	r2, r5
 800885a:	4650      	mov	r0, sl
 800885c:	4629      	mov	r1, r5
 800885e:	f7fa fb76 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8008862:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008864:	4650      	mov	r0, sl
 8008866:	a90a      	add	r1, sp, #40	; 0x28
 8008868:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800886c:	f00a fc4f 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008870:	4651      	mov	r1, sl
 8008872:	4630      	mov	r0, r6
 8008874:	f007 febc 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8008878:	f44f 729a 	mov.w	r2, #308	; 0x134
 800887c:	2156      	movs	r1, #86	; 0x56
 800887e:	4648      	mov	r0, r9
 8008880:	f7fa fb65 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8008884:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8008888:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800888c:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8008890:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8008894:	4650      	mov	r0, sl
 8008896:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800889a:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800889e:	4649      	mov	r1, r9
 80088a0:	4798      	blx	r3
 80088a2:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80088a6:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80088aa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80088ae:	4b82      	ldr	r3, [pc, #520]	; (8008ab8 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 80088b0:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 80088b2:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 80088b6:	b92b      	cbnz	r3, 80088c4 <_ZN20Project_InfoViewBaseC1Ev+0x184>
 80088b8:	4b80      	ldr	r3, [pc, #512]	; (8008abc <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 80088ba:	4a81      	ldr	r2, [pc, #516]	; (8008ac0 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80088bc:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80088be:	4881      	ldr	r0, [pc, #516]	; (8008ac4 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 80088c0:	f022 f88c 	bl	802a9dc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80088c4:	4b80      	ldr	r3, [pc, #512]	; (8008ac8 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80088c6:	881b      	ldrh	r3, [r3, #0]
 80088c8:	2b22      	cmp	r3, #34	; 0x22
 80088ca:	d803      	bhi.n	80088d4 <_ZN20Project_InfoViewBaseC1Ev+0x194>
 80088cc:	4b7f      	ldr	r3, [pc, #508]	; (8008acc <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 80088ce:	4a7c      	ldr	r2, [pc, #496]	; (8008ac0 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80088d0:	2161      	movs	r1, #97	; 0x61
 80088d2:	e7f4      	b.n	80088be <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 80088d4:	4b7e      	ldr	r3, [pc, #504]	; (8008ad0 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 80088d6:	2122      	movs	r1, #34	; 0x22
 80088d8:	6818      	ldr	r0, [r3, #0]
 80088da:	f000 fb1b 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 80088de:	4a7d      	ldr	r2, [pc, #500]	; (8008ad4 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 80088e0:	4603      	mov	r3, r0
 80088e2:	2104      	movs	r1, #4
 80088e4:	4650      	mov	r0, sl
 80088e6:	f010 fa8b 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 80088ea:	4648      	mov	r0, r9
        wc1 = value;
 80088ec:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80088f0:	f00a f812 	bl	8012918 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80088f4:	4b78      	ldr	r3, [pc, #480]	; (8008ad8 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 80088f6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 80088f8:	a90a      	add	r1, sp, #40	; 0x28
 80088fa:	2323      	movs	r3, #35	; 0x23
 80088fc:	4648      	mov	r0, r9
 80088fe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008902:	f00a f829 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008906:	4649      	mov	r1, r9
 8008908:	4630      	mov	r0, r6
 800890a:	f007 fe71 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800890e:	230a      	movs	r3, #10
 8008910:	9300      	str	r3, [sp, #0]
 8008912:	2232      	movs	r2, #50	; 0x32
 8008914:	23f0      	movs	r3, #240	; 0xf0
 8008916:	4629      	mov	r1, r5
 8008918:	4638      	mov	r0, r7
 800891a:	f7fa fb25 	bl	8002f68 <_ZN8touchgfx8Drawable11setPositionEssss>
 800891e:	9b03      	ldr	r3, [sp, #12]
 8008920:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008924:	22a0      	movs	r2, #160	; 0xa0
 8008926:	4611      	mov	r1, r2
 8008928:	4638      	mov	r0, r7
 800892a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 800892e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8008932:	f009 fbcb 	bl	80120cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008936:	22a0      	movs	r2, #160	; 0xa0
 8008938:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800893c:	4638      	mov	r0, r7
 800893e:	f009 fbd0 	bl	80120e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008942:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8008946:	2b20      	cmp	r3, #32
 8008948:	d005      	beq.n	8008956 <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 800894a:	2320      	movs	r3, #32
 800894c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8008950:	4638      	mov	r0, r7
 8008952:	f009 fac5 	bl	8011ee0 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008956:	4638      	mov	r0, r7
 8008958:	2101      	movs	r1, #1
 800895a:	f009 fbcd 	bl	80120f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800895e:	4639      	mov	r1, r7
 8008960:	4630      	mov	r0, r6
 8008962:	f007 fe45 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8008966:	ee19 0a10 	vmov	r0, s18
 800896a:	22f0      	movs	r2, #240	; 0xf0
 800896c:	2121      	movs	r1, #33	; 0x21
 800896e:	f7fa faee 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8008972:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008974:	aa0a      	add	r2, sp, #40	; 0x28
 8008976:	a909      	add	r1, sp, #36	; 0x24
 8008978:	ee19 0a10 	vmov	r0, s18
 800897c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008980:	2302      	movs	r3, #2
 8008982:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008986:	f00a f9cc 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800898a:	2352      	movs	r3, #82	; 0x52
        updateTextPosition();
 800898c:	ee19 0a10 	vmov	r0, s18
 8008990:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8008994:	f7fa fb30 	bl	8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8008998:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 800899c:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 80089a0:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 80089a4:	ee19 1a10 	vmov	r1, s18
 80089a8:	4630      	mov	r0, r6
        colorPressed = col;
 80089aa:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 80089ae:	ad04      	add	r5, sp, #16
 80089b0:	f007 fe1e 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80089b4:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 80089b8:	225b      	movs	r2, #91	; 0x5b
 80089ba:	4640      	mov	r0, r8
 80089bc:	2105      	movs	r1, #5
 80089be:	f7fa fac6 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80089c2:	4641      	mov	r1, r8
 80089c4:	4628      	mov	r0, r5
        color = newColor;
 80089c6:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80089ca:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80089ce:	f009 fd29 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80089d2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80089d6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80089da:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80089de:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8008ad8 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 80089e2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80089e6:	2353      	movs	r3, #83	; 0x53
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 80089e8:	a90a      	add	r1, sp, #40	; 0x28
 80089ea:	4640      	mov	r0, r8
 80089ec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80089f0:	f009 ffb2 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80089f4:	4641      	mov	r1, r8
 80089f6:	4630      	mov	r0, r6
 80089f8:	f007 fdfa 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 80089fc:	ee18 0a10 	vmov	r0, s16
 8008a00:	2223      	movs	r2, #35	; 0x23
 8008a02:	2145      	movs	r1, #69	; 0x45
 8008a04:	f7fa faa3 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8008a08:	ee18 1a10 	vmov	r1, s16
 8008a0c:	4628      	mov	r0, r5
        color = newColor;
 8008a0e:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8008a12:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8008a16:	f009 fd05 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008a1a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008a1e:	ee18 3a10 	vmov	r3, s16
 8008a22:	333c      	adds	r3, #60	; 0x3c
 8008a24:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008a28:	2355      	movs	r3, #85	; 0x55
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8008a2a:	ee18 0a10 	vmov	r0, s16
 8008a2e:	a90a      	add	r1, sp, #40	; 0x28
 8008a30:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008a34:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008a38:	f009 ff8e 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008a3c:	ee18 1a10 	vmov	r1, s16
 8008a40:	4630      	mov	r0, r6
 8008a42:	f007 fdd5 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8008a46:	ee18 0a90 	vmov	r0, s17
 8008a4a:	220c      	movs	r2, #12
 8008a4c:	2136      	movs	r1, #54	; 0x36
 8008a4e:	f7fa fa7e 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8008a52:	ee18 1a90 	vmov	r1, s17
 8008a56:	4628      	mov	r0, r5
        color = newColor;
 8008a58:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008a5c:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8008a60:	f009 fce0 	bl	8012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008a64:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008a68:	ee18 3a90 	vmov	r3, s17
 8008a6c:	333c      	adds	r3, #60	; 0x3c
 8008a6e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008a72:	2354      	movs	r3, #84	; 0x54
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8008a74:	ee18 0a90 	vmov	r0, s17
 8008a78:	a90a      	add	r1, sp, #40	; 0x28
 8008a7a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008a7e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008a82:	f009 ff69 	bl	8012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008a86:	4630      	mov	r0, r6
 8008a88:	ee18 1a90 	vmov	r1, s17
 8008a8c:	f007 fdb0 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008a90:	4620      	mov	r0, r4
 8008a92:	b00d      	add	sp, #52	; 0x34
 8008a94:	ecbd 8b04 	vpop	{d8-d9}
 8008a98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008a9c:	0802e1d4 	.word	0x0802e1d4
 8008aa0:	0802ef30 	.word	0x0802ef30
 8008aa4:	0802f0f8 	.word	0x0802f0f8
 8008aa8:	0802c5e0 	.word	0x0802c5e0
 8008aac:	0802ec64 	.word	0x0802ec64
 8008ab0:	0802e1bc 	.word	0x0802e1bc
 8008ab4:	08008729 	.word	0x08008729
 8008ab8:	20012e0c 	.word	0x20012e0c
 8008abc:	0802c420 	.word	0x0802c420
 8008ac0:	0802c522 	.word	0x0802c522
 8008ac4:	0802c49d 	.word	0x0802c49d
 8008ac8:	20012e10 	.word	0x20012e10
 8008acc:	0802c4e4 	.word	0x0802c4e4
 8008ad0:	20012e18 	.word	0x20012e18
 8008ad4:	0802c55a 	.word	0x0802c55a
 8008ad8:	0802c5d0 	.word	0x0802c5d0

08008adc <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8008adc:	4770      	bx	lr

08008ade <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8008ade:	4770      	bx	lr

08008ae0 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8008ae0:	b510      	push	{r4, lr}
}
 8008ae2:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8008ae4:	4604      	mov	r4, r0
}
 8008ae6:	f021 f892 	bl	8029c0e <_ZdlPvj>
 8008aea:	4620      	mov	r0, r4
 8008aec:	bd10      	pop	{r4, pc}
	...

08008af0 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8008af0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008af4:	4604      	mov	r4, r0
 8008af6:	4626      	mov	r6, r4
 8008af8:	f00e fc92 	bl	8017420 <_ZN8touchgfx6ScreenC1Ev>
 8008afc:	2500      	movs	r5, #0
 8008afe:	4b2e      	ldr	r3, [pc, #184]	; (8008bb8 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8008b00:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008b02:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8008b06:	4b2d      	ldr	r3, [pc, #180]	; (8008bbc <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8008b08:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8008b0a:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8008b0e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008b12:	23ff      	movs	r3, #255	; 0xff
 8008b14:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008b18:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8008b1c:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8008b20:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8008b24:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8008b28:	4a25      	ldr	r2, [pc, #148]	; (8008bc0 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8008b2a:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8008b2e:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8008b32:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8008b34:	a901      	add	r1, sp, #4
 8008b36:	4638      	mov	r0, r7
 8008b38:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8008b3c:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8008b40:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8008b44:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8008b48:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8008b4c:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8008b50:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8008b54:	66a5      	str	r5, [r4, #104]	; 0x68
 8008b56:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008b5a:	f00a fad8 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8008b5e:	462a      	mov	r2, r5
 8008b60:	4629      	mov	r1, r5
 8008b62:	4630      	mov	r0, r6
 8008b64:	f7fa f9f3 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8008b68:	4630      	mov	r0, r6
 8008b6a:	21f0      	movs	r1, #240	; 0xf0
 8008b6c:	f7f8 fcec 	bl	8001548 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8008b70:	4630      	mov	r0, r6
 8008b72:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8008b76:	f7f8 fce9 	bl	800154c <_ZN8touchgfx8Drawable9setHeightEs>
 8008b7a:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8008b7e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008b82:	66a3      	str	r3, [r4, #104]	; 0x68
 8008b84:	4631      	mov	r1, r6
 8008b86:	4640      	mov	r0, r8
 8008b88:	f007 fd32 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8008b8c:	462a      	mov	r2, r5
 8008b8e:	4638      	mov	r0, r7
 8008b90:	f06f 0102 	mvn.w	r1, #2
 8008b94:	f7fa f9db 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8008b98:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8008b9a:	a901      	add	r1, sp, #4
 8008b9c:	4638      	mov	r0, r7
 8008b9e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008ba2:	f00a fab4 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008ba6:	4640      	mov	r0, r8
 8008ba8:	4639      	mov	r1, r7
 8008baa:	f007 fd21 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008bae:	4620      	mov	r0, r4
 8008bb0:	b002      	add	sp, #8
 8008bb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008bb6:	bf00      	nop
 8008bb8:	0802e208 	.word	0x0802e208
 8008bbc:	0802ef30 	.word	0x0802ef30
 8008bc0:	0802f0f8 	.word	0x0802f0f8

08008bc4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008bc4:	4770      	bx	lr
	...

08008bc8 <_Z23getFont_verdana_10_4bppv>:
{
 8008bc8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008bca:	4d17      	ldr	r5, [pc, #92]	; (8008c28 <_Z23getFont_verdana_10_4bppv+0x60>)
 8008bcc:	682c      	ldr	r4, [r5, #0]
 8008bce:	f3bf 8f5b 	dmb	ish
 8008bd2:	f014 0401 	ands.w	r4, r4, #1
{
 8008bd6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008bd8:	d122      	bne.n	8008c20 <_Z23getFont_verdana_10_4bppv+0x58>
 8008bda:	4628      	mov	r0, r5
 8008bdc:	f021 f819 	bl	8029c12 <__cxa_guard_acquire>
 8008be0:	b1f0      	cbz	r0, 8008c20 <_Z23getFont_verdana_10_4bppv+0x58>
 8008be2:	233f      	movs	r3, #63	; 0x3f
 8008be4:	9309      	str	r3, [sp, #36]	; 0x24
 8008be6:	4b11      	ldr	r3, [pc, #68]	; (8008c2c <_Z23getFont_verdana_10_4bppv+0x64>)
 8008be8:	9308      	str	r3, [sp, #32]
 8008bea:	4b11      	ldr	r3, [pc, #68]	; (8008c30 <_Z23getFont_verdana_10_4bppv+0x68>)
 8008bec:	9307      	str	r3, [sp, #28]
 8008bee:	2301      	movs	r3, #1
 8008bf0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008bf4:	9304      	str	r3, [sp, #16]
 8008bf6:	2304      	movs	r3, #4
 8008bf8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008bfc:	230a      	movs	r3, #10
 8008bfe:	490d      	ldr	r1, [pc, #52]	; (8008c34 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8008c00:	9300      	str	r3, [sp, #0]
 8008c02:	225f      	movs	r2, #95	; 0x5f
 8008c04:	230c      	movs	r3, #12
 8008c06:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008c0a:	480b      	ldr	r0, [pc, #44]	; (8008c38 <_Z23getFont_verdana_10_4bppv+0x70>)
 8008c0c:	940a      	str	r4, [sp, #40]	; 0x28
 8008c0e:	9401      	str	r4, [sp, #4]
 8008c10:	f7fd f9ec 	bl	8005fec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008c14:	4809      	ldr	r0, [pc, #36]	; (8008c3c <_Z23getFont_verdana_10_4bppv+0x74>)
 8008c16:	f021 feff 	bl	802aa18 <atexit>
 8008c1a:	4628      	mov	r0, r5
 8008c1c:	f021 f805 	bl	8029c2a <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8008c20:	4805      	ldr	r0, [pc, #20]	; (8008c38 <_Z23getFont_verdana_10_4bppv+0x70>)
 8008c22:	b00f      	add	sp, #60	; 0x3c
 8008c24:	bd30      	pop	{r4, r5, pc}
 8008c26:	bf00      	nop
 8008c28:	20001ed0 	.word	0x20001ed0
 8008c2c:	08046d9c 	.word	0x08046d9c
 8008c30:	08046fd8 	.word	0x08046fd8
 8008c34:	08045de4 	.word	0x08045de4
 8008c38:	20001ed4 	.word	0x20001ed4
 8008c3c:	08008bc5 	.word	0x08008bc5

08008c40 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008c40:	4770      	bx	lr
	...

08008c44 <_Z23getFont_verdana_12_4bppv>:
{
 8008c44:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008c46:	4d17      	ldr	r5, [pc, #92]	; (8008ca4 <_Z23getFont_verdana_12_4bppv+0x60>)
 8008c48:	682c      	ldr	r4, [r5, #0]
 8008c4a:	f3bf 8f5b 	dmb	ish
 8008c4e:	f014 0401 	ands.w	r4, r4, #1
{
 8008c52:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008c54:	d122      	bne.n	8008c9c <_Z23getFont_verdana_12_4bppv+0x58>
 8008c56:	4628      	mov	r0, r5
 8008c58:	f020 ffdb 	bl	8029c12 <__cxa_guard_acquire>
 8008c5c:	b1f0      	cbz	r0, 8008c9c <_Z23getFont_verdana_12_4bppv+0x58>
 8008c5e:	233f      	movs	r3, #63	; 0x3f
 8008c60:	9309      	str	r3, [sp, #36]	; 0x24
 8008c62:	4b11      	ldr	r3, [pc, #68]	; (8008ca8 <_Z23getFont_verdana_12_4bppv+0x64>)
 8008c64:	9308      	str	r3, [sp, #32]
 8008c66:	4b11      	ldr	r3, [pc, #68]	; (8008cac <_Z23getFont_verdana_12_4bppv+0x68>)
 8008c68:	9307      	str	r3, [sp, #28]
 8008c6a:	2301      	movs	r3, #1
 8008c6c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008c70:	9304      	str	r3, [sp, #16]
 8008c72:	2304      	movs	r3, #4
 8008c74:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008c78:	230c      	movs	r3, #12
 8008c7a:	490d      	ldr	r1, [pc, #52]	; (8008cb0 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8008c7c:	9300      	str	r3, [sp, #0]
 8008c7e:	2260      	movs	r2, #96	; 0x60
 8008c80:	230f      	movs	r3, #15
 8008c82:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008c86:	480b      	ldr	r0, [pc, #44]	; (8008cb4 <_Z23getFont_verdana_12_4bppv+0x70>)
 8008c88:	940a      	str	r4, [sp, #40]	; 0x28
 8008c8a:	9401      	str	r4, [sp, #4]
 8008c8c:	f7fd f9ae 	bl	8005fec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008c90:	4809      	ldr	r0, [pc, #36]	; (8008cb8 <_Z23getFont_verdana_12_4bppv+0x74>)
 8008c92:	f021 fec1 	bl	802aa18 <atexit>
 8008c96:	4628      	mov	r0, r5
 8008c98:	f020 ffc7 	bl	8029c2a <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8008c9c:	4805      	ldr	r0, [pc, #20]	; (8008cb4 <_Z23getFont_verdana_12_4bppv+0x70>)
 8008c9e:	b00f      	add	sp, #60	; 0x3c
 8008ca0:	bd30      	pop	{r4, r5, pc}
 8008ca2:	bf00      	nop
 8008ca4:	20001f00 	.word	0x20001f00
 8008ca8:	08046dd0 	.word	0x08046dd0
 8008cac:	08046fdc 	.word	0x08046fdc
 8008cb0:	08046318 	.word	0x08046318
 8008cb4:	20001f04 	.word	0x20001f04
 8008cb8:	08008c41 	.word	0x08008c41

08008cbc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008cbc:	4770      	bx	lr
	...

08008cc0 <_Z23getFont_verdana_19_4bppv>:
{
 8008cc0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008cc2:	4d17      	ldr	r5, [pc, #92]	; (8008d20 <_Z23getFont_verdana_19_4bppv+0x60>)
 8008cc4:	682c      	ldr	r4, [r5, #0]
 8008cc6:	f3bf 8f5b 	dmb	ish
 8008cca:	f014 0401 	ands.w	r4, r4, #1
{
 8008cce:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008cd0:	d122      	bne.n	8008d18 <_Z23getFont_verdana_19_4bppv+0x58>
 8008cd2:	4628      	mov	r0, r5
 8008cd4:	f020 ff9d 	bl	8029c12 <__cxa_guard_acquire>
 8008cd8:	b1f0      	cbz	r0, 8008d18 <_Z23getFont_verdana_19_4bppv+0x58>
 8008cda:	233f      	movs	r3, #63	; 0x3f
 8008cdc:	9309      	str	r3, [sp, #36]	; 0x24
 8008cde:	4b11      	ldr	r3, [pc, #68]	; (8008d24 <_Z23getFont_verdana_19_4bppv+0x64>)
 8008ce0:	9308      	str	r3, [sp, #32]
 8008ce2:	4b11      	ldr	r3, [pc, #68]	; (8008d28 <_Z23getFont_verdana_19_4bppv+0x68>)
 8008ce4:	9307      	str	r3, [sp, #28]
 8008ce6:	2301      	movs	r3, #1
 8008ce8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008cec:	9304      	str	r3, [sp, #16]
 8008cee:	2304      	movs	r3, #4
 8008cf0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008cf4:	2313      	movs	r3, #19
 8008cf6:	490d      	ldr	r1, [pc, #52]	; (8008d2c <_Z23getFont_verdana_19_4bppv+0x6c>)
 8008cf8:	9300      	str	r3, [sp, #0]
 8008cfa:	225f      	movs	r2, #95	; 0x5f
 8008cfc:	2317      	movs	r3, #23
 8008cfe:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008d02:	480b      	ldr	r0, [pc, #44]	; (8008d30 <_Z23getFont_verdana_19_4bppv+0x70>)
 8008d04:	940a      	str	r4, [sp, #40]	; 0x28
 8008d06:	9401      	str	r4, [sp, #4]
 8008d08:	f7fd f970 	bl	8005fec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008d0c:	4809      	ldr	r0, [pc, #36]	; (8008d34 <_Z23getFont_verdana_19_4bppv+0x74>)
 8008d0e:	f021 fe83 	bl	802aa18 <atexit>
 8008d12:	4628      	mov	r0, r5
 8008d14:	f020 ff89 	bl	8029c2a <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8008d18:	4805      	ldr	r0, [pc, #20]	; (8008d30 <_Z23getFont_verdana_19_4bppv+0x70>)
 8008d1a:	b00f      	add	sp, #60	; 0x3c
 8008d1c:	bd30      	pop	{r4, r5, pc}
 8008d1e:	bf00      	nop
 8008d20:	20001f30 	.word	0x20001f30
 8008d24:	08046e54 	.word	0x08046e54
 8008d28:	08046fe0 	.word	0x08046fe0
 8008d2c:	08046858 	.word	0x08046858
 8008d30:	20001f34 	.word	0x20001f34
 8008d34:	08008cbd 	.word	0x08008cbd

08008d38 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008d38:	4770      	bx	lr
	...

08008d3c <_Z23getFont_verdana_40_4bppv>:
{
 8008d3c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008d3e:	4d16      	ldr	r5, [pc, #88]	; (8008d98 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8008d40:	682c      	ldr	r4, [r5, #0]
 8008d42:	f3bf 8f5b 	dmb	ish
 8008d46:	f014 0401 	ands.w	r4, r4, #1
{
 8008d4a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008d4c:	d120      	bne.n	8008d90 <_Z23getFont_verdana_40_4bppv+0x54>
 8008d4e:	4628      	mov	r0, r5
 8008d50:	f020 ff5f 	bl	8029c12 <__cxa_guard_acquire>
 8008d54:	b1e0      	cbz	r0, 8008d90 <_Z23getFont_verdana_40_4bppv+0x54>
 8008d56:	233f      	movs	r3, #63	; 0x3f
 8008d58:	9309      	str	r3, [sp, #36]	; 0x24
 8008d5a:	4b10      	ldr	r3, [pc, #64]	; (8008d9c <_Z23getFont_verdana_40_4bppv+0x60>)
 8008d5c:	9308      	str	r3, [sp, #32]
 8008d5e:	4b10      	ldr	r3, [pc, #64]	; (8008da0 <_Z23getFont_verdana_40_4bppv+0x64>)
 8008d60:	4910      	ldr	r1, [pc, #64]	; (8008da4 <_Z23getFont_verdana_40_4bppv+0x68>)
 8008d62:	4811      	ldr	r0, [pc, #68]	; (8008da8 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008d64:	940a      	str	r4, [sp, #40]	; 0x28
 8008d66:	2201      	movs	r2, #1
 8008d68:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8008d6c:	2304      	movs	r3, #4
 8008d6e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8008d72:	2328      	movs	r3, #40	; 0x28
 8008d74:	9300      	str	r3, [sp, #0]
 8008d76:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008d7a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8008d7e:	9405      	str	r4, [sp, #20]
 8008d80:	f7fd f934 	bl	8005fec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008d84:	4809      	ldr	r0, [pc, #36]	; (8008dac <_Z23getFont_verdana_40_4bppv+0x70>)
 8008d86:	f021 fe47 	bl	802aa18 <atexit>
 8008d8a:	4628      	mov	r0, r5
 8008d8c:	f020 ff4d 	bl	8029c2a <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8008d90:	4805      	ldr	r0, [pc, #20]	; (8008da8 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008d92:	b00f      	add	sp, #60	; 0x3c
 8008d94:	bd30      	pop	{r4, r5, pc}
 8008d96:	bf00      	nop
 8008d98:	20001f60 	.word	0x20001f60
 8008d9c:	08046fd4 	.word	0x08046fd4
 8008da0:	08046fe4 	.word	0x08046fe4
 8008da4:	08046d8c 	.word	0x08046d8c
 8008da8:	20001f64 	.word	0x20001f64
 8008dac:	08008d39 	.word	0x08008d39

08008db0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8008db0:	2000      	movs	r0, #0
 8008db2:	4770      	bx	lr

08008db4 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8008db4:	2000      	movs	r0, #0
 8008db6:	4770      	bx	lr

08008db8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008db8:	b40e      	push	{r1, r2, r3}
 8008dba:	b503      	push	{r0, r1, lr}
 8008dbc:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8008dbe:	2100      	movs	r1, #0
{
 8008dc0:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8008dc4:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8008dc6:	f00d fe69 	bl	8016a9c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008dca:	b002      	add	sp, #8
 8008dcc:	f85d eb04 	ldr.w	lr, [sp], #4
 8008dd0:	b003      	add	sp, #12
 8008dd2:	4770      	bx	lr

08008dd4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008dd4:	b40c      	push	{r2, r3}
 8008dd6:	b507      	push	{r0, r1, r2, lr}
 8008dd8:	ab04      	add	r3, sp, #16
 8008dda:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8008dde:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8008de0:	f00d fe5c 	bl	8016a9c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008de4:	b003      	add	sp, #12
 8008de6:	f85d eb04 	ldr.w	lr, [sp], #4
 8008dea:	b002      	add	sp, #8
 8008dec:	4770      	bx	lr
	...

08008df0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8008df0:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8008df2:	b510      	push	{r4, lr}
 8008df4:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8008df6:	b373      	cbz	r3, 8008e56 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8008df8:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8008dfa:	b92b      	cbnz	r3, 8008e08 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8008dfc:	4b18      	ldr	r3, [pc, #96]	; (8008e60 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8008dfe:	4a19      	ldr	r2, [pc, #100]	; (8008e64 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8008e00:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8008e02:	4819      	ldr	r0, [pc, #100]	; (8008e68 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8008e04:	f021 fdea 	bl	802a9dc <__assert_func>
            return buffer[pos];
 8008e08:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8008e0a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8008e0e:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8008e10:	b30b      	cbz	r3, 8008e56 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8008e12:	f00f fa40 	bl	8018296 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8008e16:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8008e18:	2b01      	cmp	r3, #1
 8008e1a:	d803      	bhi.n	8008e24 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8008e1c:	4b13      	ldr	r3, [pc, #76]	; (8008e6c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8008e1e:	4a14      	ldr	r2, [pc, #80]	; (8008e70 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8008e20:	21cb      	movs	r1, #203	; 0xcb
 8008e22:	e7ee      	b.n	8008e02 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8008e24:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8008e26:	1c53      	adds	r3, r2, #1
 8008e28:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8008e2a:	2b09      	cmp	r3, #9
 8008e2c:	4619      	mov	r1, r3
 8008e2e:	bf88      	it	hi
 8008e30:	f1a3 010a 	subhi.w	r1, r3, #10
 8008e34:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8008e38:	f640 103f 	movw	r0, #2367	; 0x93f
 8008e3c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8008e3e:	4281      	cmp	r1, r0
 8008e40:	d109      	bne.n	8008e56 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8008e42:	2b0a      	cmp	r3, #10
 8008e44:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8008e48:	bf28      	it	cs
 8008e4a:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8008e4c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8008e50:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8008e52:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8008e54:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8008e56:	4620      	mov	r0, r4
}
 8008e58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8008e5c:	f00f b91e 	b.w	801809c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8008e60:	0802e234 	.word	0x0802e234
 8008e64:	0802e23d 	.word	0x0802e23d
 8008e68:	0802e2e8 	.word	0x0802e2e8
 8008e6c:	0802e332 	.word	0x0802e332
 8008e70:	0802e340 	.word	0x0802e340

08008e74 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8008e74:	f00f b8d9 	b.w	801802a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08008e78 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8008e78:	b510      	push	{r4, lr}
 8008e7a:	b086      	sub	sp, #24
 8008e7c:	ac02      	add	r4, sp, #8
 8008e7e:	e884 0006 	stmia.w	r4, {r1, r2}
 8008e82:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8008e84:	ab0a      	add	r3, sp, #40	; 0x28
 8008e86:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8008e88:	9301      	str	r3, [sp, #4]
 8008e8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008e8c:	9300      	str	r3, [sp, #0]
 8008e8e:	4621      	mov	r1, r4
 8008e90:	9b08      	ldr	r3, [sp, #32]
 8008e92:	f00c f9c7 	bl	8015224 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8008e96:	b006      	add	sp, #24
 8008e98:	bd10      	pop	{r4, pc}
	...

08008e9c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8008e9c:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8008e9e:	bb18      	cbnz	r0, 8008ee8 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8008ea0:	4b12      	ldr	r3, [pc, #72]	; (8008eec <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8008ea2:	4813      	ldr	r0, [pc, #76]	; (8008ef0 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8008ea4:	681c      	ldr	r4, [r3, #0]
 8008ea6:	4913      	ldr	r1, [pc, #76]	; (8008ef4 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8008ea8:	b1b4      	cbz	r4, 8008ed8 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8008eaa:	6822      	ldr	r2, [r4, #0]
 8008eac:	4422      	add	r2, r4
 8008eae:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8008eb0:	6862      	ldr	r2, [r4, #4]
 8008eb2:	4422      	add	r2, r4
 8008eb4:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8008eb6:	68a2      	ldr	r2, [r4, #8]
 8008eb8:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8008eba:	4b0f      	ldr	r3, [pc, #60]	; (8008ef8 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8008ebc:	2200      	movs	r2, #0
 8008ebe:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8008ec0:	f000 f838 	bl	8008f34 <_ZN17TypedTextDatabase8getFontsEv>
 8008ec4:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8008ec6:	f000 f833 	bl	8008f30 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8008eca:	4b0c      	ldr	r3, [pc, #48]	; (8008efc <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8008ecc:	601c      	str	r4, [r3, #0]
        fonts = f;
 8008ece:	4b0c      	ldr	r3, [pc, #48]	; (8008f00 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8008ed0:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8008ed2:	4b0c      	ldr	r3, [pc, #48]	; (8008f04 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8008ed4:	8018      	strh	r0, [r3, #0]
    }
}
 8008ed6:	e007      	b.n	8008ee8 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8008ed8:	4b0b      	ldr	r3, [pc, #44]	; (8008f08 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8008eda:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8008edc:	4b0b      	ldr	r3, [pc, #44]	; (8008f0c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8008ede:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8008ee0:	4b0b      	ldr	r3, [pc, #44]	; (8008f10 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8008ee2:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8008ee4:	2c00      	cmp	r4, #0
 8008ee6:	d1e8      	bne.n	8008eba <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8008ee8:	bd38      	pop	{r3, r4, r5, pc}
 8008eea:	bf00      	nop
 8008eec:	20001f90 	.word	0x20001f90
 8008ef0:	20001f94 	.word	0x20001f94
 8008ef4:	20001f98 	.word	0x20001f98
 8008ef8:	20001f9c 	.word	0x20001f9c
 8008efc:	20012e0c 	.word	0x20012e0c
 8008f00:	20012e14 	.word	0x20012e14
 8008f04:	20012e10 	.word	0x20012e10
 8008f08:	0804717c 	.word	0x0804717c
 8008f0c:	08046fe8 	.word	0x08046fe8
 8008f10:	080477a8 	.word	0x080477a8

08008f14 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8008f14:	4b04      	ldr	r3, [pc, #16]	; (8008f28 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8008f16:	681b      	ldr	r3, [r3, #0]
 8008f18:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8008f1c:	4b03      	ldr	r3, [pc, #12]	; (8008f2c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8008f1e:	681b      	ldr	r3, [r3, #0]
}
 8008f20:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8008f24:	4770      	bx	lr
 8008f26:	bf00      	nop
 8008f28:	20001f98 	.word	0x20001f98
 8008f2c:	20001f94 	.word	0x20001f94

08008f30 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8008f30:	2065      	movs	r0, #101	; 0x65
 8008f32:	4770      	bx	lr

08008f34 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8008f34:	4800      	ldr	r0, [pc, #0]	; (8008f38 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8008f36:	4770      	bx	lr
 8008f38:	20001fa0 	.word	0x20001fa0

08008f3c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8008f3c:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8008f3e:	f7ff febf 	bl	8008cc0 <_Z23getFont_verdana_19_4bppv>
};
 8008f42:	4c06      	ldr	r4, [pc, #24]	; (8008f5c <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8008f44:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8008f46:	f7ff fef9 	bl	8008d3c <_Z23getFont_verdana_40_4bppv>
};
 8008f4a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8008f4c:	f7ff fe3c 	bl	8008bc8 <_Z23getFont_verdana_10_4bppv>
};
 8008f50:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8008f52:	f7ff fe77 	bl	8008c44 <_Z23getFont_verdana_12_4bppv>
};
 8008f56:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8008f58:	bd10      	pop	{r4, pc}
 8008f5a:	bf00      	nop
 8008f5c:	20001fa0 	.word	0x20001fa0

08008f60 <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 8008f60:	4770      	bx	lr

08008f62 <_ZThn4_N20CalibrationPresenterD1Ev>:
 8008f62:	3804      	subs	r0, #4
 8008f64:	4770      	bx	lr

08008f66 <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 8008f66:	4770      	bx	lr

08008f68 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008f68:	68c0      	ldr	r0, [r0, #12]
 8008f6a:	6803      	ldr	r3, [r0, #0]
 8008f6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008f6e:	4718      	bx	r3

08008f70 <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008f70:	f1a0 0004 	sub.w	r0, r0, #4
 8008f74:	f7ff bff8 	b.w	8008f68 <_ZN20CalibrationPresenter15setTimeoutValueEi>

08008f78 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 8008f78:	b510      	push	{r4, lr}
 8008f7a:	2110      	movs	r1, #16
 8008f7c:	4604      	mov	r4, r0
 8008f7e:	f020 fe46 	bl	8029c0e <_ZdlPvj>
 8008f82:	4620      	mov	r0, r4
 8008f84:	bd10      	pop	{r4, pc}

08008f86 <_ZThn4_N20CalibrationPresenterD0Ev>:
 8008f86:	f1a0 0004 	sub.w	r0, r0, #4
 8008f8a:	e7f5      	b.n	8008f78 <_ZN20CalibrationPresenterD0Ev>

08008f8c <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 8008f8c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8008f8e:	2200      	movs	r2, #0
 8008f90:	6082      	str	r2, [r0, #8]
    : view(v)
 8008f92:	4a04      	ldr	r2, [pc, #16]	; (8008fa4 <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 8008f94:	60c1      	str	r1, [r0, #12]
 8008f96:	f102 0408 	add.w	r4, r2, #8
 8008f9a:	3224      	adds	r2, #36	; 0x24
 8008f9c:	6004      	str	r4, [r0, #0]
 8008f9e:	6042      	str	r2, [r0, #4]
}
 8008fa0:	bd10      	pop	{r4, pc}
 8008fa2:	bf00      	nop
 8008fa4:	0802e414 	.word	0x0802e414

08008fa8 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 8008fa8:	4770      	bx	lr
	...

08008fac <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 8008fac:	b510      	push	{r4, lr}
 8008fae:	4b03      	ldr	r3, [pc, #12]	; (8008fbc <_ZN15CalibrationViewD1Ev+0x10>)
 8008fb0:	6003      	str	r3, [r0, #0]
 8008fb2:	4604      	mov	r4, r0
 8008fb4:	f7f9 ff50 	bl	8002e58 <_ZN19CalibrationViewBaseD1Ev>
 8008fb8:	4620      	mov	r0, r4
 8008fba:	bd10      	pop	{r4, pc}
 8008fbc:	0802e450 	.word	0x0802e450

08008fc0 <_ZN15CalibrationViewD0Ev>:
 8008fc0:	b510      	push	{r4, lr}
 8008fc2:	4604      	mov	r4, r0
 8008fc4:	f7ff fff2 	bl	8008fac <_ZN15CalibrationViewD1Ev>
 8008fc8:	4620      	mov	r0, r4
 8008fca:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008fce:	f020 fe1e 	bl	8029c0e <_ZdlPvj>
 8008fd2:	4620      	mov	r0, r4
 8008fd4:	bd10      	pop	{r4, pc}
	...

08008fd8 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 8008fd8:	b510      	push	{r4, lr}
 8008fda:	4604      	mov	r4, r0
 8008fdc:	f7fa f850 	bl	8003080 <_ZN19CalibrationViewBaseC1Ev>
 8008fe0:	4b01      	ldr	r3, [pc, #4]	; (8008fe8 <_ZN15CalibrationViewC1Ev+0x10>)
 8008fe2:	6023      	str	r3, [r4, #0]
}
 8008fe4:	4620      	mov	r0, r4
 8008fe6:	bd10      	pop	{r4, pc}
 8008fe8:	0802e450 	.word	0x0802e450

08008fec <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 8008fec:	f7f9 bf01 	b.w	8002df2 <_ZN19CalibrationViewBase11setupScreenEv>

08008ff0 <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 8008ff0:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008ff2:	4a0a      	ldr	r2, [pc, #40]	; (800901c <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 8008ff4:	4605      	mov	r5, r0
 8008ff6:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008ff8:	460b      	mov	r3, r1
 8008ffa:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008ffe:	2104      	movs	r1, #4
 8009000:	f00f fefe 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009004:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009008:	f00d fe72 	bl	8016cf0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800900c:	b92c      	cbnz	r4, 800901a <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 800900e:	f00c fd87 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009012:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009016:	f7fb bc61 	b.w	80048dc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800901a:	bd38      	pop	{r3, r4, r5, pc}
 800901c:	0802e444 	.word	0x0802e444

08009020 <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 8009020:	4770      	bx	lr

08009022 <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 8009022:	3804      	subs	r0, #4
 8009024:	4770      	bx	lr

08009026 <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 8009026:	4770      	bx	lr

08009028 <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 8009028:	4770      	bx	lr

0800902a <_ZN25Calibration_HallPresenterD0Ev>:
 800902a:	b510      	push	{r4, lr}
 800902c:	2110      	movs	r1, #16
 800902e:	4604      	mov	r4, r0
 8009030:	f020 fded 	bl	8029c0e <_ZdlPvj>
 8009034:	4620      	mov	r0, r4
 8009036:	bd10      	pop	{r4, pc}

08009038 <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 8009038:	f1a0 0004 	sub.w	r0, r0, #4
 800903c:	e7f5      	b.n	800902a <_ZN25Calibration_HallPresenterD0Ev>

0800903e <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 800903e:	4770      	bx	lr

08009040 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 8009040:	b510      	push	{r4, lr}
 8009042:	2200      	movs	r2, #0
 8009044:	6082      	str	r2, [r0, #8]
    : view(v)
 8009046:	4a04      	ldr	r2, [pc, #16]	; (8009058 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 8009048:	60c1      	str	r1, [r0, #12]
 800904a:	f102 0408 	add.w	r4, r2, #8
 800904e:	3224      	adds	r2, #36	; 0x24
 8009050:	6004      	str	r4, [r0, #0]
 8009052:	6042      	str	r2, [r0, #4]
}
 8009054:	bd10      	pop	{r4, pc}
 8009056:	bf00      	nop
 8009058:	0802e480 	.word	0x0802e480

0800905c <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 800905c:	4770      	bx	lr

0800905e <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 800905e:	4770      	bx	lr

08009060 <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 8009060:	b510      	push	{r4, lr}
 8009062:	4b03      	ldr	r3, [pc, #12]	; (8009070 <_ZN20Calibration_HallViewD1Ev+0x10>)
 8009064:	6003      	str	r3, [r0, #0]
 8009066:	4604      	mov	r4, r0
 8009068:	f7fa fa50 	bl	800350c <_ZN24Calibration_HallViewBaseD1Ev>
 800906c:	4620      	mov	r0, r4
 800906e:	bd10      	pop	{r4, pc}
 8009070:	0802e4c0 	.word	0x0802e4c0

08009074 <_ZN20Calibration_HallViewD0Ev>:
 8009074:	b510      	push	{r4, lr}
 8009076:	4604      	mov	r4, r0
 8009078:	f7ff fff2 	bl	8009060 <_ZN20Calibration_HallViewD1Ev>
 800907c:	4620      	mov	r0, r4
 800907e:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 8009082:	f020 fdc4 	bl	8029c0e <_ZdlPvj>
 8009086:	4620      	mov	r0, r4
 8009088:	bd10      	pop	{r4, pc}
	...

0800908c <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 800908c:	b510      	push	{r4, lr}
 800908e:	4604      	mov	r4, r0
 8009090:	f7fa fa82 	bl	8003598 <_ZN24Calibration_HallViewBaseC1Ev>
 8009094:	4b01      	ldr	r3, [pc, #4]	; (800909c <_ZN20Calibration_HallViewC1Ev+0x10>)
 8009096:	6023      	str	r3, [r4, #0]
}
 8009098:	4620      	mov	r0, r4
 800909a:	bd10      	pop	{r4, pc}
 800909c:	0802e4c0 	.word	0x0802e4c0

080090a0 <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 80090a0:	f7fa ba0f 	b.w	80034c2 <_ZN24Calibration_HallViewBase11setupScreenEv>

080090a4 <_ZN20Calibration_HallView25function_cali_hall_sensorEv>:

void Calibration_HallView::function_cali_hall_sensor()
{
 80090a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80090a6:	b085      	sub	sp, #20
 80090a8:	4604      	mov	r4, r0
#ifndef SIMULATOR

	uint32_t* Samples = MEAS_start_measure();
 80090aa:	f7f9 fa8d 	bl	80025c8 <MEAS_start_measure>
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 80090ae:	4d22      	ldr	r5, [pc, #136]	; (8009138 <_ZN20Calibration_HallView25function_cali_hall_sensorEv+0x94>)
 80090b0:	4606      	mov	r6, r0
	FFT fft = calculate_freq_and_signalstrength(3, Samples);
 80090b2:	4602      	mov	r2, r0
 80090b4:	2103      	movs	r1, #3
 80090b6:	a801      	add	r0, sp, #4
 80090b8:	f7f8 fba0 	bl	80017fc <calculate_freq_and_signalstrength>
 80090bc:	9b02      	ldr	r3, [sp, #8]
 80090be:	9300      	str	r3, [sp, #0]
 80090c0:	462a      	mov	r2, r5
 80090c2:	466b      	mov	r3, sp
 80090c4:	210a      	movs	r1, #10
 80090c6:	f504 706a 	add.w	r0, r4, #936	; 0x3a8
 80090ca:	9f01      	ldr	r7, [sp, #4]
 80090cc:	f010 f884 	bl	80191d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

	Unicode::snprintfFloat(CALIBRATION_HSR_SBuffer, CALIBRATION_HSR_S_SIZE, "%.2f", fft.signal_strength);
	CALIBRATION_HSR_S.invalidate();
 80090d0:	f504 70be 	add.w	r0, r4, #380	; 0x17c
 80090d4:	f00d fe0c 	bl	8016cf0 <_ZNK8touchgfx8Drawable10invalidateEv>
 80090d8:	466b      	mov	r3, sp
 80090da:	462a      	mov	r2, r5
 80090dc:	210a      	movs	r1, #10
 80090de:	f504 7065 	add.w	r0, r4, #916	; 0x394
 80090e2:	9700      	str	r7, [sp, #0]
 80090e4:	f010 f878 	bl	80191d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(CALIBRATION_HSR_FBuffer, CALIBRATION_HSR_F_SIZE, "%.2f", fft.main_freq);
	CALIBRATION_HSR_F.invalidate();
 80090e8:	f504 7098 	add.w	r0, r4, #304	; 0x130
 80090ec:	f00d fe00 	bl	8016cf0 <_ZNK8touchgfx8Drawable10invalidateEv>

	fft = calculate_freq_and_signalstrength(4, Samples);
 80090f0:	2104      	movs	r1, #4
 80090f2:	eb0d 0001 	add.w	r0, sp, r1
 80090f6:	4632      	mov	r2, r6
 80090f8:	f7f8 fb80 	bl	80017fc <calculate_freq_and_signalstrength>
 80090fc:	9b02      	ldr	r3, [sp, #8]
 80090fe:	9300      	str	r3, [sp, #0]
 8009100:	462a      	mov	r2, r5
 8009102:	466b      	mov	r3, sp
 8009104:	210a      	movs	r1, #10
 8009106:	f504 705b 	add.w	r0, r4, #876	; 0x36c
 800910a:	9e01      	ldr	r6, [sp, #4]
 800910c:	f010 f864 	bl	80191d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

	Unicode::snprintfFloat(CALIBRATION_HSL_SBuffer, CALIBRATION_HSL_S_SIZE, "%.2f", fft.signal_strength);
	CALIBRATION_HSL_S.invalidate();
 8009110:	f104 0098 	add.w	r0, r4, #152	; 0x98
 8009114:	f00d fdec 	bl	8016cf0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009118:	466b      	mov	r3, sp
 800911a:	462a      	mov	r2, r5
 800911c:	210a      	movs	r1, #10
 800911e:	f504 7060 	add.w	r0, r4, #896	; 0x380
 8009122:	9600      	str	r6, [sp, #0]
 8009124:	f010 f858 	bl	80191d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(CALIBRATION_HSL_FBuffer, CALIBRATION_HSL_F_SIZE, "%.2f", fft.main_freq);
	CALIBRATION_HSL_F.invalidate();
 8009128:	f104 00e4 	add.w	r0, r4, #228	; 0xe4

#endif
}
 800912c:	b005      	add	sp, #20
 800912e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	CALIBRATION_HSL_F.invalidate();
 8009132:	f00d bddd 	b.w	8016cf0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009136:	bf00      	nop
 8009138:	0802e4b0 	.word	0x0802e4b0

0800913c <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 800913c:	4770      	bx	lr

0800913e <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 800913e:	3804      	subs	r0, #4
 8009140:	4770      	bx	lr

08009142 <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 8009142:	4770      	bx	lr

08009144 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8009144:	4770      	bx	lr

08009146 <_ZN24Calibration_PadPresenterD0Ev>:
 8009146:	b510      	push	{r4, lr}
 8009148:	2110      	movs	r1, #16
 800914a:	4604      	mov	r4, r0
 800914c:	f020 fd5f 	bl	8029c0e <_ZdlPvj>
 8009150:	4620      	mov	r0, r4
 8009152:	bd10      	pop	{r4, pc}

08009154 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 8009154:	f1a0 0004 	sub.w	r0, r0, #4
 8009158:	e7f5      	b.n	8009146 <_ZN24Calibration_PadPresenterD0Ev>

0800915a <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 800915a:	4770      	bx	lr

0800915c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 800915c:	b510      	push	{r4, lr}
 800915e:	2200      	movs	r2, #0
 8009160:	6082      	str	r2, [r0, #8]
    : view(v)
 8009162:	4a04      	ldr	r2, [pc, #16]	; (8009174 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 8009164:	60c1      	str	r1, [r0, #12]
 8009166:	f102 0408 	add.w	r4, r2, #8
 800916a:	3224      	adds	r2, #36	; 0x24
 800916c:	6004      	str	r4, [r0, #0]
 800916e:	6042      	str	r2, [r0, #4]
}
 8009170:	bd10      	pop	{r4, pc}
 8009172:	bf00      	nop
 8009174:	0802e4f4 	.word	0x0802e4f4

08009178 <_ZN19Calibration_PadView14tearDownScreenEv>:
    Calibration_PadViewBase::setupScreen();
}

void Calibration_PadView::tearDownScreen() {
    Calibration_PadViewBase::tearDownScreen();
}
 8009178:	4770      	bx	lr

0800917a <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value) {}
 800917a:	4770      	bx	lr

0800917c <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 800917c:	b510      	push	{r4, lr}
 800917e:	4b03      	ldr	r3, [pc, #12]	; (800918c <_ZN19Calibration_PadViewD1Ev+0x10>)
 8009180:	6003      	str	r3, [r0, #0]
 8009182:	4604      	mov	r4, r0
 8009184:	f7fa fcde 	bl	8003b44 <_ZN23Calibration_PadViewBaseD1Ev>
 8009188:	4620      	mov	r0, r4
 800918a:	bd10      	pop	{r4, pc}
 800918c:	0802e52c 	.word	0x0802e52c

08009190 <_ZN19Calibration_PadViewD0Ev>:
 8009190:	b510      	push	{r4, lr}
 8009192:	4604      	mov	r4, r0
 8009194:	f7ff fff2 	bl	800917c <_ZN19Calibration_PadViewD1Ev>
 8009198:	4620      	mov	r0, r4
 800919a:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 800919e:	f020 fd36 	bl	8029c0e <_ZdlPvj>
 80091a2:	4620      	mov	r0, r4
 80091a4:	bd10      	pop	{r4, pc}
	...

080091a8 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView() {}
 80091a8:	b510      	push	{r4, lr}
 80091aa:	4604      	mov	r4, r0
 80091ac:	f7fa fd04 	bl	8003bb8 <_ZN23Calibration_PadViewBaseC1Ev>
 80091b0:	4b01      	ldr	r3, [pc, #4]	; (80091b8 <_ZN19Calibration_PadViewC1Ev+0x10>)
 80091b2:	6023      	str	r3, [r4, #0]
 80091b4:	4620      	mov	r0, r4
 80091b6:	bd10      	pop	{r4, pc}
 80091b8:	0802e52c 	.word	0x0802e52c

080091bc <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 80091bc:	f7fa bc9d 	b.w	8003afa <_ZN23Calibration_PadViewBase11setupScreenEv>

080091c0 <_ZN19Calibration_PadView17function_cali_padEv>:

void Calibration_PadView::function_cali_pad() {
 80091c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80091c2:	b085      	sub	sp, #20
 80091c4:	4604      	mov	r4, r0
#ifndef SIMULATOR
	
	uint32_t* Samples = MEAS_start_measure();
 80091c6:	f7f9 f9ff 	bl	80025c8 <MEAS_start_measure>
 80091ca:	4d21      	ldr	r5, [pc, #132]	; (8009250 <_ZN19Calibration_PadView17function_cali_padEv+0x90>)
 80091cc:	4606      	mov	r6, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples);
 80091ce:	4602      	mov	r2, r0
 80091d0:	2101      	movs	r1, #1
 80091d2:	a801      	add	r0, sp, #4
 80091d4:	f7f8 fb12 	bl	80017fc <calculate_freq_and_signalstrength>
 80091d8:	9b02      	ldr	r3, [sp, #8]
 80091da:	9300      	str	r3, [sp, #0]
 80091dc:	462a      	mov	r2, r5
 80091de:	466b      	mov	r3, sp
 80091e0:	210a      	movs	r1, #10
 80091e2:	f504 705b 	add.w	r0, r4, #876	; 0x36c
 80091e6:	9f01      	ldr	r7, [sp, #4]
 80091e8:	f00f fff6 	bl	80191d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(CALIBRATION_PADR_SBuffer, CALIBRATION_PADR_S_SIZE,
                           "%.2f", fft.signal_strength);
    CALIBRATION_PADR_S.invalidate();
 80091ec:	f104 0098 	add.w	r0, r4, #152	; 0x98
 80091f0:	f00d fd7e 	bl	8016cf0 <_ZNK8touchgfx8Drawable10invalidateEv>
 80091f4:	466b      	mov	r3, sp
 80091f6:	462a      	mov	r2, r5
 80091f8:	210a      	movs	r1, #10
 80091fa:	f504 7060 	add.w	r0, r4, #896	; 0x380
 80091fe:	9700      	str	r7, [sp, #0]
 8009200:	f00f ffea 	bl	80191d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(CALIBRATION_PADR_FBuffer, CALIBRATION_PADR_F_SIZE,
                           "%.2f", fft.main_freq);
    CALIBRATION_PADR_F.invalidate();
 8009204:	f104 00e4 	add.w	r0, r4, #228	; 0xe4
 8009208:	f00d fd72 	bl	8016cf0 <_ZNK8touchgfx8Drawable10invalidateEv>

    fft = calculate_freq_and_signalstrength(2, Samples);
 800920c:	4632      	mov	r2, r6
 800920e:	a801      	add	r0, sp, #4
 8009210:	2102      	movs	r1, #2
 8009212:	f7f8 faf3 	bl	80017fc <calculate_freq_and_signalstrength>
 8009216:	9b02      	ldr	r3, [sp, #8]
 8009218:	9300      	str	r3, [sp, #0]
 800921a:	462a      	mov	r2, r5
 800921c:	466b      	mov	r3, sp
 800921e:	210a      	movs	r1, #10
 8009220:	f504 706a 	add.w	r0, r4, #936	; 0x3a8
 8009224:	9e01      	ldr	r6, [sp, #4]
 8009226:	f00f ffd7 	bl	80191d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

    Unicode::snprintfFloat(CALIBRATION_PADL_SBuffer, CALIBRATION_PADL_S_SIZE,
                           "%.2f", fft.signal_strength);
    CALIBRATION_PADL_S.invalidate();
 800922a:	f504 70be 	add.w	r0, r4, #380	; 0x17c
 800922e:	f00d fd5f 	bl	8016cf0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009232:	466b      	mov	r3, sp
 8009234:	462a      	mov	r2, r5
 8009236:	210a      	movs	r1, #10
 8009238:	f504 7065 	add.w	r0, r4, #916	; 0x394
 800923c:	9600      	str	r6, [sp, #0]
 800923e:	f00f ffcb 	bl	80191d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(CALIBRATION_PADL_FBuffer, CALIBRATION_PADL_F_SIZE,
                           "%.2f", fft.main_freq);
    CALIBRATION_PADL_F.invalidate();
 8009242:	f504 7098 	add.w	r0, r4, #304	; 0x130

#endif
}
 8009246:	b005      	add	sp, #20
 8009248:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
    CALIBRATION_PADL_F.invalidate();
 800924c:	f00d bd50 	b.w	8016cf0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009250:	0802e4b0 	.word	0x0802e4b0

08009254 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8009254:	4770      	bx	lr

08009256 <_ZN19FrontendApplicationD0Ev>:
 8009256:	b510      	push	{r4, lr}
 8009258:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800925c:	4604      	mov	r4, r0
 800925e:	f020 fcd6 	bl	8029c0e <_ZdlPvj>
 8009262:	4620      	mov	r0, r4
 8009264:	bd10      	pop	{r4, pc}

08009266 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8009266:	b510      	push	{r4, lr}
 8009268:	4604      	mov	r4, r0
    {
        model.tick();
 800926a:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 800926e:	f000 fb07 	bl	8009880 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8009272:	4620      	mov	r0, r4
    }
 8009274:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8009278:	f00c bd16 	b.w	8015ca8 <_ZN8touchgfx11Application15handleTickEventEv>

0800927c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800927c:	b510      	push	{r4, lr}
 800927e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8009280:	f7fb f9fc 	bl	800467c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8009284:	4b01      	ldr	r3, [pc, #4]	; (800928c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8009286:	6023      	str	r3, [r4, #0]
{

}
 8009288:	4620      	mov	r0, r4
 800928a:	bd10      	pop	{r4, pc}
 800928c:	0802e568 	.word	0x0802e568

08009290 <_ZN17Gauge_with_ValuesD1Ev>:
 8009290:	b510      	push	{r4, lr}
 8009292:	4b03      	ldr	r3, [pc, #12]	; (80092a0 <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 8009294:	6003      	str	r3, [r0, #0]
 8009296:	4604      	mov	r4, r0
 8009298:	f7fc fcf6 	bl	8005c88 <_ZN21Gauge_with_ValuesBaseD1Ev>
 800929c:	4620      	mov	r0, r4
 800929e:	bd10      	pop	{r4, pc}
 80092a0:	0802e5bc 	.word	0x0802e5bc

080092a4 <_ZN17Gauge_with_ValuesD0Ev>:
 80092a4:	b510      	push	{r4, lr}
 80092a6:	4604      	mov	r4, r0
 80092a8:	f7ff fff2 	bl	8009290 <_ZN17Gauge_with_ValuesD1Ev>
 80092ac:	4620      	mov	r0, r4
 80092ae:	f44f 7162 	mov.w	r1, #904	; 0x388
 80092b2:	f020 fcac 	bl	8029c0e <_ZdlPvj>
 80092b6:	4620      	mov	r0, r4
 80092b8:	bd10      	pop	{r4, pc}
	...

080092bc <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 80092bc:	b510      	push	{r4, lr}
 80092be:	4604      	mov	r4, r0
 80092c0:	f7fc fcec 	bl	8005c9c <_ZN21Gauge_with_ValuesBaseC1Ev>
 80092c4:	4b01      	ldr	r3, [pc, #4]	; (80092cc <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 80092c6:	6023      	str	r3, [r4, #0]
{

}
 80092c8:	4620      	mov	r0, r4
 80092ca:	bd10      	pop	{r4, pc}
 80092cc:	0802e5bc 	.word	0x0802e5bc

080092d0 <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 80092d0:	f7fc bcdb 	b.w	8005c8a <_ZN21Gauge_with_ValuesBase10initializeEv>

080092d4 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 80092d4:	4770      	bx	lr

080092d6 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 80092d6:	3804      	subs	r0, #4
 80092d8:	4770      	bx	lr

080092da <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 80092da:	4770      	bx	lr

080092dc <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80092dc:	68c0      	ldr	r0, [r0, #12]
 80092de:	6803      	ldr	r3, [r0, #0]
 80092e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80092e2:	4718      	bx	r3

080092e4 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80092e4:	f1a0 0004 	sub.w	r0, r0, #4
 80092e8:	f7ff bff8 	b.w	80092dc <_ZN18Main_MenuPresenter15setTimeoutValueEi>

080092ec <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 80092ec:	b510      	push	{r4, lr}
 80092ee:	2110      	movs	r1, #16
 80092f0:	4604      	mov	r4, r0
 80092f2:	f020 fc8c 	bl	8029c0e <_ZdlPvj>
 80092f6:	4620      	mov	r0, r4
 80092f8:	bd10      	pop	{r4, pc}

080092fa <_ZThn4_N18Main_MenuPresenterD0Ev>:
 80092fa:	f1a0 0004 	sub.w	r0, r0, #4
 80092fe:	e7f5      	b.n	80092ec <_ZN18Main_MenuPresenterD0Ev>

08009300 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8009300:	b510      	push	{r4, lr}
 8009302:	2200      	movs	r2, #0
 8009304:	6082      	str	r2, [r0, #8]
    : view(v)
 8009306:	4a04      	ldr	r2, [pc, #16]	; (8009318 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8009308:	60c1      	str	r1, [r0, #12]
 800930a:	f102 0408 	add.w	r4, r2, #8
 800930e:	3224      	adds	r2, #36	; 0x24
 8009310:	6004      	str	r4, [r0, #0]
 8009312:	6042      	str	r2, [r0, #4]
}
 8009314:	bd10      	pop	{r4, pc}
 8009316:	bf00      	nop
 8009318:	0802e648 	.word	0x0802e648

0800931c <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 800931c:	4770      	bx	lr
	...

08009320 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8009320:	b510      	push	{r4, lr}
 8009322:	4b03      	ldr	r3, [pc, #12]	; (8009330 <_ZN13Main_MenuViewD1Ev+0x10>)
 8009324:	6003      	str	r3, [r0, #0]
 8009326:	4604      	mov	r4, r0
 8009328:	f7fc feb4 	bl	8006094 <_ZN17Main_MenuViewBaseD1Ev>
 800932c:	4620      	mov	r0, r4
 800932e:	bd10      	pop	{r4, pc}
 8009330:	0802e680 	.word	0x0802e680

08009334 <_ZN13Main_MenuViewD0Ev>:
 8009334:	b510      	push	{r4, lr}
 8009336:	4604      	mov	r4, r0
 8009338:	f7ff fff2 	bl	8009320 <_ZN13Main_MenuViewD1Ev>
 800933c:	4620      	mov	r0, r4
 800933e:	f241 117c 	movw	r1, #4476	; 0x117c
 8009342:	f020 fc64 	bl	8029c0e <_ZdlPvj>
 8009346:	4620      	mov	r0, r4
 8009348:	bd10      	pop	{r4, pc}
	...

0800934c <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 800934c:	b510      	push	{r4, lr}
 800934e:	4604      	mov	r4, r0
 8009350:	f7fc feea 	bl	8006128 <_ZN17Main_MenuViewBaseC1Ev>
 8009354:	4b01      	ldr	r3, [pc, #4]	; (800935c <_ZN13Main_MenuViewC1Ev+0x10>)
 8009356:	6023      	str	r3, [r4, #0]
}
 8009358:	4620      	mov	r0, r4
 800935a:	bd10      	pop	{r4, pc}
 800935c:	0802e680 	.word	0x0802e680

08009360 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8009360:	f7fc be74 	b.w	800604c <_ZN17Main_MenuViewBase11setupScreenEv>

08009364 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8009364:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8009366:	4a0a      	ldr	r2, [pc, #40]	; (8009390 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 8009368:	4605      	mov	r5, r0
 800936a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 800936c:	460b      	mov	r3, r1
 800936e:	f500 7055 	add.w	r0, r0, #852	; 0x354
 8009372:	2104      	movs	r1, #4
 8009374:	f00f fd44 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 8009378:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800937c:	f00d fcb8 	bl	8016cf0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8009380:	b92c      	cbnz	r4, 800938e <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 8009382:	f00c fbcd 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009386:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800938a:	f7fb baa7 	b.w	80048dc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800938e:	bd38      	pop	{r3, r4, r5, pc}
 8009390:	0802e444 	.word	0x0802e444

08009394 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8009394:	4770      	bx	lr

08009396 <_ZThn4_N20MeasurementPresenterD1Ev>:
 8009396:	3804      	subs	r0, #4
 8009398:	4770      	bx	lr

0800939a <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 800939a:	4770      	bx	lr

0800939c <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800939c:	68c0      	ldr	r0, [r0, #12]
 800939e:	6803      	ldr	r3, [r0, #0]
 80093a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80093a2:	4718      	bx	r3

080093a4 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80093a4:	f1a0 0004 	sub.w	r0, r0, #4
 80093a8:	f7ff bff8 	b.w	800939c <_ZN20MeasurementPresenter15setTimeoutValueEi>

080093ac <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 80093ac:	b510      	push	{r4, lr}
 80093ae:	2110      	movs	r1, #16
 80093b0:	4604      	mov	r4, r0
 80093b2:	f020 fc2c 	bl	8029c0e <_ZdlPvj>
 80093b6:	4620      	mov	r0, r4
 80093b8:	bd10      	pop	{r4, pc}

080093ba <_ZThn4_N20MeasurementPresenterD0Ev>:
 80093ba:	f1a0 0004 	sub.w	r0, r0, #4
 80093be:	e7f5      	b.n	80093ac <_ZN20MeasurementPresenterD0Ev>

080093c0 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 80093c0:	b510      	push	{r4, lr}
 80093c2:	2200      	movs	r2, #0
 80093c4:	6082      	str	r2, [r0, #8]
    : view(v)
 80093c6:	4a04      	ldr	r2, [pc, #16]	; (80093d8 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 80093c8:	60c1      	str	r1, [r0, #12]
 80093ca:	f102 0408 	add.w	r4, r2, #8
 80093ce:	3224      	adds	r2, #36	; 0x24
 80093d0:	6004      	str	r4, [r0, #0]
 80093d2:	6042      	str	r2, [r0, #4]
}
 80093d4:	bd10      	pop	{r4, pc}
 80093d6:	bf00      	nop
 80093d8:	0802e6b0 	.word	0x0802e6b0

080093dc <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 80093dc:	4770      	bx	lr
	...

080093e0 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 80093e0:	b510      	push	{r4, lr}
 80093e2:	4b03      	ldr	r3, [pc, #12]	; (80093f0 <_ZN15MeasurementViewD1Ev+0x10>)
 80093e4:	6003      	str	r3, [r0, #0]
 80093e6:	4604      	mov	r4, r0
 80093e8:	f7fd f90e 	bl	8006608 <_ZN19MeasurementViewBaseD1Ev>
 80093ec:	4620      	mov	r0, r4
 80093ee:	bd10      	pop	{r4, pc}
 80093f0:	0802e6e8 	.word	0x0802e6e8

080093f4 <_ZN15MeasurementViewD0Ev>:
 80093f4:	b510      	push	{r4, lr}
 80093f6:	4604      	mov	r4, r0
 80093f8:	f7ff fff2 	bl	80093e0 <_ZN15MeasurementViewD1Ev>
 80093fc:	4620      	mov	r0, r4
 80093fe:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8009402:	f020 fc04 	bl	8029c0e <_ZdlPvj>
 8009406:	4620      	mov	r0, r4
 8009408:	bd10      	pop	{r4, pc}
	...

0800940c <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 800940c:	b510      	push	{r4, lr}
 800940e:	4604      	mov	r4, r0
 8009410:	f7fd f934 	bl	800667c <_ZN19MeasurementViewBaseC1Ev>
 8009414:	4b01      	ldr	r3, [pc, #4]	; (800941c <_ZN15MeasurementViewC1Ev+0x10>)
 8009416:	6023      	str	r3, [r4, #0]
}
 8009418:	4620      	mov	r0, r4
 800941a:	bd10      	pop	{r4, pc}
 800941c:	0802e6e8 	.word	0x0802e6e8

08009420 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8009420:	f7fd b8ce 	b.w	80065c0 <_ZN19MeasurementViewBase11setupScreenEv>

08009424 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8009424:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009426:	4a0a      	ldr	r2, [pc, #40]	; (8009450 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8009428:	4605      	mov	r5, r0
 800942a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800942c:	460b      	mov	r3, r1
 800942e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8009432:	2104      	movs	r1, #4
 8009434:	f00f fce4 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009438:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800943c:	f00d fc58 	bl	8016cf0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8009440:	b92c      	cbnz	r4, 800944e <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 8009442:	f00c fb6d 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009446:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800944a:	f7fb ba47 	b.w	80048dc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800944e:	bd38      	pop	{r3, r4, r5, pc}
 8009450:	0802e444 	.word	0x0802e444

08009454 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8009454:	4770      	bx	lr

08009456 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 8009456:	3804      	subs	r0, #4
 8009458:	4770      	bx	lr

0800945a <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 800945a:	4770      	bx	lr

0800945c <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800945c:	68c0      	ldr	r0, [r0, #12]
 800945e:	6803      	ldr	r3, [r0, #0]
 8009460:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009462:	4718      	bx	r3

08009464 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009464:	f1a0 0004 	sub.w	r0, r0, #4
 8009468:	f7ff bff8 	b.w	800945c <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

0800946c <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 800946c:	b510      	push	{r4, lr}
 800946e:	2110      	movs	r1, #16
 8009470:	4604      	mov	r4, r0
 8009472:	f020 fbcc 	bl	8029c0e <_ZdlPvj>
 8009476:	4620      	mov	r0, r4
 8009478:	bd10      	pop	{r4, pc}

0800947a <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 800947a:	f1a0 0004 	sub.w	r0, r0, #4
 800947e:	e7f5      	b.n	800946c <_ZN29Measurement_AccuratePresenterD0Ev>

08009480 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8009480:	b510      	push	{r4, lr}
 8009482:	2200      	movs	r2, #0
 8009484:	6082      	str	r2, [r0, #8]
    : view(v)
 8009486:	4a04      	ldr	r2, [pc, #16]	; (8009498 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8009488:	60c1      	str	r1, [r0, #12]
 800948a:	f102 0408 	add.w	r4, r2, #8
 800948e:	3224      	adds	r2, #36	; 0x24
 8009490:	6004      	str	r4, [r0, #0]
 8009492:	6042      	str	r2, [r0, #4]
}
 8009494:	bd10      	pop	{r4, pc}
 8009496:	bf00      	nop
 8009498:	0802e718 	.word	0x0802e718

0800949c <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 800949c:	4770      	bx	lr
	...

080094a0 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 80094a0:	b510      	push	{r4, lr}
 80094a2:	4b03      	ldr	r3, [pc, #12]	; (80094b0 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 80094a4:	6003      	str	r3, [r0, #0]
 80094a6:	4604      	mov	r4, r0
 80094a8:	f7fd fb30 	bl	8006b0c <_ZN28Measurement_AccurateViewBaseD1Ev>
 80094ac:	4620      	mov	r0, r4
 80094ae:	bd10      	pop	{r4, pc}
 80094b0:	0802e750 	.word	0x0802e750

080094b4 <_ZN24Measurement_AccurateViewD0Ev>:
 80094b4:	b510      	push	{r4, lr}
 80094b6:	4604      	mov	r4, r0
 80094b8:	f7ff fff2 	bl	80094a0 <_ZN24Measurement_AccurateViewD1Ev>
 80094bc:	4620      	mov	r0, r4
 80094be:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80094c2:	f020 fba4 	bl	8029c0e <_ZdlPvj>
 80094c6:	4620      	mov	r0, r4
 80094c8:	bd10      	pop	{r4, pc}
	...

080094cc <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 80094cc:	b510      	push	{r4, lr}
 80094ce:	4604      	mov	r4, r0
 80094d0:	f7fd fb56 	bl	8006b80 <_ZN28Measurement_AccurateViewBaseC1Ev>
 80094d4:	4b01      	ldr	r3, [pc, #4]	; (80094dc <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 80094d6:	6023      	str	r3, [r4, #0]
}
 80094d8:	4620      	mov	r0, r4
 80094da:	bd10      	pop	{r4, pc}
 80094dc:	0802e750 	.word	0x0802e750

080094e0 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 80094e0:	f7fd baf0 	b.w	8006ac4 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

080094e4 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 80094e4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80094e6:	4a0a      	ldr	r2, [pc, #40]	; (8009510 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 80094e8:	4605      	mov	r5, r0
 80094ea:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80094ec:	460b      	mov	r3, r1
 80094ee:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80094f2:	2104      	movs	r1, #4
 80094f4:	f00f fc84 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80094f8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80094fc:	f00d fbf8 	bl	8016cf0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8009500:	b92c      	cbnz	r4, 800950e <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8009502:	f00c fb0d 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009506:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800950a:	f7fb b9e7 	b.w	80048dc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800950e:	bd38      	pop	{r3, r4, r5, pc}
 8009510:	0802e444 	.word	0x0802e444

08009514 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8009514:	4770      	bx	lr

08009516 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8009516:	3804      	subs	r0, #4
 8009518:	4770      	bx	lr

0800951a <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 800951a:	4770      	bx	lr

0800951c <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 800951c:	4770      	bx	lr

0800951e <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 800951e:	b510      	push	{r4, lr}
 8009520:	2110      	movs	r1, #16
 8009522:	4604      	mov	r4, r0
 8009524:	f020 fb73 	bl	8029c0e <_ZdlPvj>
 8009528:	4620      	mov	r0, r4
 800952a:	bd10      	pop	{r4, pc}

0800952c <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 800952c:	f1a0 0004 	sub.w	r0, r0, #4
 8009530:	e7f5      	b.n	800951e <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08009532 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8009532:	4770      	bx	lr

08009534 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8009534:	b510      	push	{r4, lr}
 8009536:	2200      	movs	r2, #0
 8009538:	6082      	str	r2, [r0, #8]
    : view(v)
 800953a:	4a04      	ldr	r2, [pc, #16]	; (800954c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 800953c:	60c1      	str	r1, [r0, #12]
 800953e:	f102 0408 	add.w	r4, r2, #8
 8009542:	3224      	adds	r2, #36	; 0x24
 8009544:	6004      	str	r4, [r0, #0]
 8009546:	6042      	str	r2, [r0, #4]
}
 8009548:	bd10      	pop	{r4, pc}
 800954a:	bf00      	nop
 800954c:	0802e780 	.word	0x0802e780

08009550 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8009550:	4770      	bx	lr
	...

08009554 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8009554:	b510      	push	{r4, lr}
 8009556:	4b03      	ldr	r3, [pc, #12]	; (8009564 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8009558:	6003      	str	r3, [r0, #0]
 800955a:	4604      	mov	r4, r0
 800955c:	f7fd fd62 	bl	8007024 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8009560:	4620      	mov	r0, r4
 8009562:	bd10      	pop	{r4, pc}
 8009564:	0802e7b8 	.word	0x0802e7b8

08009568 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8009568:	b510      	push	{r4, lr}
 800956a:	4604      	mov	r4, r0
 800956c:	f7ff fff2 	bl	8009554 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8009570:	4620      	mov	r0, r4
 8009572:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8009576:	f020 fb4a 	bl	8029c0e <_ZdlPvj>
 800957a:	4620      	mov	r0, r4
 800957c:	bd10      	pop	{r4, pc}
	...

08009580 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8009580:	b510      	push	{r4, lr}
 8009582:	4604      	mov	r4, r0
 8009584:	f7fd fd6e 	bl	8007064 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8009588:	4b01      	ldr	r3, [pc, #4]	; (8009590 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 800958a:	6023      	str	r3, [r4, #0]
}
 800958c:	4620      	mov	r0, r4
 800958e:	bd10      	pop	{r4, pc}
 8009590:	0802e7b8 	.word	0x0802e7b8

08009594 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8009594:	f7fd bd37 	b.w	8007006 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08009598 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8009598:	4770      	bx	lr

0800959a <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 800959a:	3804      	subs	r0, #4
 800959c:	4770      	bx	lr

0800959e <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 800959e:	4770      	bx	lr

080095a0 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 80095a0:	4770      	bx	lr

080095a2 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 80095a2:	b510      	push	{r4, lr}
 80095a4:	2110      	movs	r1, #16
 80095a6:	4604      	mov	r4, r0
 80095a8:	f020 fb31 	bl	8029c0e <_ZdlPvj>
 80095ac:	4620      	mov	r0, r4
 80095ae:	bd10      	pop	{r4, pc}

080095b0 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 80095b0:	f1a0 0004 	sub.w	r0, r0, #4
 80095b4:	e7f5      	b.n	80095a2 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

080095b6 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 80095b6:	4770      	bx	lr

080095b8 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 80095b8:	b510      	push	{r4, lr}
 80095ba:	2200      	movs	r2, #0
 80095bc:	6082      	str	r2, [r0, #8]
    : view(v)
 80095be:	4a04      	ldr	r2, [pc, #16]	; (80095d0 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 80095c0:	60c1      	str	r1, [r0, #12]
 80095c2:	f102 0408 	add.w	r4, r2, #8
 80095c6:	3224      	adds	r2, #36	; 0x24
 80095c8:	6004      	str	r4, [r0, #0]
 80095ca:	6042      	str	r2, [r0, #4]
}
 80095cc:	bd10      	pop	{r4, pc}
 80095ce:	bf00      	nop
 80095d0:	0802e7e4 	.word	0x0802e7e4

080095d4 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 80095d4:	4770      	bx	lr
	...

080095d8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 80095d8:	b510      	push	{r4, lr}
 80095da:	4b03      	ldr	r3, [pc, #12]	; (80095e8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 80095dc:	6003      	str	r3, [r0, #0]
 80095de:	4604      	mov	r4, r0
 80095e0:	f7fd fee6 	bl	80073b0 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 80095e4:	4620      	mov	r0, r4
 80095e6:	bd10      	pop	{r4, pc}
 80095e8:	0802e81c 	.word	0x0802e81c

080095ec <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 80095ec:	b510      	push	{r4, lr}
 80095ee:	4604      	mov	r4, r0
 80095f0:	f7ff fff2 	bl	80095d8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 80095f4:	4620      	mov	r0, r4
 80095f6:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80095fa:	f020 fb08 	bl	8029c0e <_ZdlPvj>
 80095fe:	4620      	mov	r0, r4
 8009600:	bd10      	pop	{r4, pc}
	...

08009604 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8009604:	b510      	push	{r4, lr}
 8009606:	4604      	mov	r4, r0
 8009608:	f7fd fef2 	bl	80073f0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 800960c:	4b01      	ldr	r3, [pc, #4]	; (8009614 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 800960e:	6023      	str	r3, [r4, #0]
}
 8009610:	4620      	mov	r0, r4
 8009612:	bd10      	pop	{r4, pc}
 8009614:	0802e81c 	.word	0x0802e81c

08009618 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8009618:	f7fd bebb 	b.w	8007392 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

0800961c <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 800961c:	4770      	bx	lr

0800961e <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 800961e:	3804      	subs	r0, #4
 8009620:	4770      	bx	lr

08009622 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8009622:	4770      	bx	lr

08009624 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009624:	68c0      	ldr	r0, [r0, #12]
 8009626:	6803      	ldr	r3, [r0, #0]
 8009628:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800962a:	4718      	bx	r3

0800962c <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800962c:	f1a0 0004 	sub.w	r0, r0, #4
 8009630:	f7ff bff8 	b.w	8009624 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08009634 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8009634:	b510      	push	{r4, lr}
 8009636:	2110      	movs	r1, #16
 8009638:	4604      	mov	r4, r0
 800963a:	f020 fae8 	bl	8029c0e <_ZdlPvj>
 800963e:	4620      	mov	r0, r4
 8009640:	bd10      	pop	{r4, pc}

08009642 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 8009642:	f1a0 0004 	sub.w	r0, r0, #4
 8009646:	e7f5      	b.n	8009634 <_ZN27Measurement_SinglePresenterD0Ev>

08009648 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8009648:	b510      	push	{r4, lr}
 800964a:	2200      	movs	r2, #0
 800964c:	6082      	str	r2, [r0, #8]
    : view(v)
 800964e:	4a04      	ldr	r2, [pc, #16]	; (8009660 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8009650:	60c1      	str	r1, [r0, #12]
 8009652:	f102 0408 	add.w	r4, r2, #8
 8009656:	3224      	adds	r2, #36	; 0x24
 8009658:	6004      	str	r4, [r0, #0]
 800965a:	6042      	str	r2, [r0, #4]
}
 800965c:	bd10      	pop	{r4, pc}
 800965e:	bf00      	nop
 8009660:	0802e848 	.word	0x0802e848

08009664 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 8009664:	4770      	bx	lr
	...

08009668 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8009668:	b510      	push	{r4, lr}
 800966a:	4b03      	ldr	r3, [pc, #12]	; (8009678 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 800966c:	6003      	str	r3, [r0, #0]
 800966e:	4604      	mov	r4, r0
 8009670:	f7fe f854 	bl	800771c <_ZN26Measurement_SingleViewBaseD1Ev>
 8009674:	4620      	mov	r0, r4
 8009676:	bd10      	pop	{r4, pc}
 8009678:	0802e880 	.word	0x0802e880

0800967c <_ZN22Measurement_SingleViewD0Ev>:
 800967c:	b510      	push	{r4, lr}
 800967e:	4604      	mov	r4, r0
 8009680:	f7ff fff2 	bl	8009668 <_ZN22Measurement_SingleViewD1Ev>
 8009684:	4620      	mov	r0, r4
 8009686:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800968a:	f020 fac0 	bl	8029c0e <_ZdlPvj>
 800968e:	4620      	mov	r0, r4
 8009690:	bd10      	pop	{r4, pc}
	...

08009694 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 8009694:	b510      	push	{r4, lr}
 8009696:	4604      	mov	r4, r0
 8009698:	f7fe f87a 	bl	8007790 <_ZN26Measurement_SingleViewBaseC1Ev>
 800969c:	4b01      	ldr	r3, [pc, #4]	; (80096a4 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 800969e:	6023      	str	r3, [r4, #0]
}
 80096a0:	4620      	mov	r0, r4
 80096a2:	bd10      	pop	{r4, pc}
 80096a4:	0802e880 	.word	0x0802e880

080096a8 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 80096a8:	f7fe b814 	b.w	80076d4 <_ZN26Measurement_SingleViewBase11setupScreenEv>

080096ac <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 80096ac:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80096ae:	4a0a      	ldr	r2, [pc, #40]	; (80096d8 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 80096b0:	4605      	mov	r5, r0
 80096b2:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80096b4:	460b      	mov	r3, r1
 80096b6:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80096ba:	2104      	movs	r1, #4
 80096bc:	f00f fba0 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80096c0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80096c4:	f00d fb14 	bl	8016cf0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80096c8:	b92c      	cbnz	r4, 80096d6 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 80096ca:	f00c fa29 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80096ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80096d2:	f7fb b903 	b.w	80048dc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80096d6:	bd38      	pop	{r3, r4, r5, pc}
 80096d8:	0802e444 	.word	0x0802e444

080096dc <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 80096dc:	4770      	bx	lr

080096de <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 80096de:	3804      	subs	r0, #4
 80096e0:	4770      	bx	lr

080096e2 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 80096e2:	4770      	bx	lr

080096e4 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 80096e4:	4770      	bx	lr

080096e6 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 80096e6:	b510      	push	{r4, lr}
 80096e8:	2110      	movs	r1, #16
 80096ea:	4604      	mov	r4, r0
 80096ec:	f020 fa8f 	bl	8029c0e <_ZdlPvj>
 80096f0:	4620      	mov	r0, r4
 80096f2:	bd10      	pop	{r4, pc}

080096f4 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 80096f4:	f1a0 0004 	sub.w	r0, r0, #4
 80096f8:	e7f5      	b.n	80096e6 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

080096fa <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 80096fa:	4770      	bx	lr

080096fc <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 80096fc:	b510      	push	{r4, lr}
 80096fe:	2200      	movs	r2, #0
 8009700:	6082      	str	r2, [r0, #8]
    : view(v)
 8009702:	4a04      	ldr	r2, [pc, #16]	; (8009714 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 8009704:	60c1      	str	r1, [r0, #12]
 8009706:	f102 0408 	add.w	r4, r2, #8
 800970a:	3224      	adds	r2, #36	; 0x24
 800970c:	6004      	str	r4, [r0, #0]
 800970e:	6042      	str	r2, [r0, #4]
}
 8009710:	bd10      	pop	{r4, pc}
 8009712:	bf00      	nop
 8009714:	0802e8b0 	.word	0x0802e8b0

08009718 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8009718:	4770      	bx	lr
	...

0800971c <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 800971c:	b510      	push	{r4, lr}
 800971e:	4b03      	ldr	r3, [pc, #12]	; (800972c <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8009720:	6003      	str	r3, [r0, #0]
 8009722:	4604      	mov	r4, r0
 8009724:	f7fe fa7e 	bl	8007c24 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8009728:	4620      	mov	r0, r4
 800972a:	bd10      	pop	{r4, pc}
 800972c:	0802e8e8 	.word	0x0802e8e8

08009730 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8009730:	b510      	push	{r4, lr}
 8009732:	4604      	mov	r4, r0
 8009734:	f7ff fff2 	bl	800971c <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8009738:	4620      	mov	r0, r4
 800973a:	f241 31f8 	movw	r1, #5112	; 0x13f8
 800973e:	f020 fa66 	bl	8029c0e <_ZdlPvj>
 8009742:	4620      	mov	r0, r4
 8009744:	bd10      	pop	{r4, pc}
	...

08009748 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8009748:	b510      	push	{r4, lr}
 800974a:	4604      	mov	r4, r0
 800974c:	f7fe faa4 	bl	8007c98 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8009750:	4b01      	ldr	r3, [pc, #4]	; (8009758 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 8009752:	6023      	str	r3, [r4, #0]
}
 8009754:	4620      	mov	r0, r4
 8009756:	bd10      	pop	{r4, pc}
 8009758:	0802e8e8 	.word	0x0802e8e8

0800975c <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 800975c:	f7fe ba3d 	b.w	8007bda <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08009760 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 8009760:	b530      	push	{r4, r5, lr}
 8009762:	4d20      	ldr	r5, [pc, #128]	; (80097e4 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x84>)
 8009764:	4604      	mov	r4, r0
 8009766:	6828      	ldr	r0, [r5, #0]
#ifndef SIMULATOR
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();
 8009768:	6803      	ldr	r3, [r0, #0]
{
 800976a:	b08b      	sub	sp, #44	; 0x2c
	touchgfx::HAL::getInstance()->disableInterrupts();
 800976c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800976e:	4798      	blx	r3

	int test = 	0;

	//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);

	test = updateGUI_test();
 8009770:	f7f8 fa3c 	bl	8001bec <updateGUI_test>
 8009774:	9001      	str	r0, [sp, #4]

	uint32_t* Samples = MEAS_start_measure();
 8009776:	f7f8 ff27 	bl	80025c8 <MEAS_start_measure>


	//callback to fft
	//FFT fft = calculate_freq_and_signalstrength(1, Samples);
	DISTANCE_ANGLE distance_angle = calculate_distance_and_angle();
 800977a:	a804      	add	r0, sp, #16
 800977c:	f7f8 f964 	bl	8001a48 <calculate_distance_and_angle>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(distance_angle.angle);
 8009780:	eddd 7a09 	vldr	s15, [sp, #36]	; 0x24
 8009784:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009788:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 800978c:	ee17 1a90 	vmov	r1, s15
 8009790:	9000      	str	r0, [sp, #0]
 8009792:	f009 fa59 	bl	8012c48 <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 8009796:	9800      	ldr	r0, [sp, #0]
 8009798:	f00d faaa 	bl	8016cf0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 800979c:	9b01      	ldr	r3, [sp, #4]
 800979e:	4a12      	ldr	r2, [pc, #72]	; (80097e8 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 80097a0:	210a      	movs	r1, #10
 80097a2:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 80097a6:	f00f fb2b 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 80097aa:	f504 7020 	add.w	r0, r4, #640	; 0x280
 80097ae:	f00d fa9f 	bl	8016cf0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	//Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
	SMD1_Frequency.invalidate();
 80097b2:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 80097b6:	f00d fa9b 	bl	8016cf0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	//if(fft.error == CALC_ERROR_NONE)
	//{
		Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", distance_angle.distance);
 80097ba:	9b08      	ldr	r3, [sp, #32]
 80097bc:	4a0b      	ldr	r2, [pc, #44]	; (80097ec <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x8c>)
 80097be:	9303      	str	r3, [sp, #12]
 80097c0:	210a      	movs	r1, #10
 80097c2:	ab03      	add	r3, sp, #12
 80097c4:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 80097c8:	f00f fd06 	bl	80191d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	//} else Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "Error");
	
	SMD1_Distance.invalidate();
 80097cc:	f504 7046 	add.w	r0, r4, #792	; 0x318
 80097d0:	f00d fa8e 	bl	8016cf0 <_ZNK8touchgfx8Drawable10invalidateEv>
 80097d4:	6828      	ldr	r0, [r5, #0]

	//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 80097d6:	6803      	ldr	r3, [r0, #0]
 80097d8:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 80097da:	b00b      	add	sp, #44	; 0x2c
 80097dc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 80097e0:	4718      	bx	r3
 80097e2:	bf00      	nop
 80097e4:	20012db4 	.word	0x20012db4
 80097e8:	0802e444 	.word	0x0802e444
 80097ec:	0802e4b0 	.word	0x0802e4b0

080097f0 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 80097f0:	4770      	bx	lr

080097f2 <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 80097f2:	3804      	subs	r0, #4
 80097f4:	4770      	bx	lr

080097f6 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 80097f6:	4770      	bx	lr

080097f8 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 80097f8:	4770      	bx	lr

080097fa <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 80097fa:	b510      	push	{r4, lr}
 80097fc:	2110      	movs	r1, #16
 80097fe:	4604      	mov	r4, r0
 8009800:	f020 fa05 	bl	8029c0e <_ZdlPvj>
 8009804:	4620      	mov	r0, r4
 8009806:	bd10      	pop	{r4, pc}

08009808 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8009808:	f1a0 0004 	sub.w	r0, r0, #4
 800980c:	e7f5      	b.n	80097fa <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

0800980e <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 800980e:	4770      	bx	lr

08009810 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8009810:	b510      	push	{r4, lr}
 8009812:	2200      	movs	r2, #0
 8009814:	6082      	str	r2, [r0, #8]
    : view(v)
 8009816:	4a04      	ldr	r2, [pc, #16]	; (8009828 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8009818:	60c1      	str	r1, [r0, #12]
 800981a:	f102 0408 	add.w	r4, r2, #8
 800981e:	3224      	adds	r2, #36	; 0x24
 8009820:	6004      	str	r4, [r0, #0]
 8009822:	6042      	str	r2, [r0, #4]
}
 8009824:	bd10      	pop	{r4, pc}
 8009826:	bf00      	nop
 8009828:	0802e918 	.word	0x0802e918

0800982c <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 800982c:	4770      	bx	lr
	...

08009830 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8009830:	b510      	push	{r4, lr}
 8009832:	4b03      	ldr	r3, [pc, #12]	; (8009840 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8009834:	6003      	str	r3, [r0, #0]
 8009836:	4604      	mov	r4, r0
 8009838:	f7fe fda0 	bl	800837c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 800983c:	4620      	mov	r0, r4
 800983e:	bd10      	pop	{r4, pc}
 8009840:	0802e950 	.word	0x0802e950

08009844 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8009844:	b510      	push	{r4, lr}
 8009846:	4604      	mov	r4, r0
 8009848:	f7ff fff2 	bl	8009830 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 800984c:	4620      	mov	r0, r4
 800984e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8009852:	f020 f9dc 	bl	8029c0e <_ZdlPvj>
 8009856:	4620      	mov	r0, r4
 8009858:	bd10      	pop	{r4, pc}
	...

0800985c <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 800985c:	b510      	push	{r4, lr}
 800985e:	4604      	mov	r4, r0
 8009860:	f7fe fdac 	bl	80083bc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8009864:	4b01      	ldr	r3, [pc, #4]	; (800986c <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8009866:	6023      	str	r3, [r4, #0]
}
 8009868:	4620      	mov	r0, r4
 800986a:	bd10      	pop	{r4, pc}
 800986c:	0802e950 	.word	0x0802e950

08009870 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8009870:	f7fe bd73 	b.w	800835a <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08009874 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8009874:	2100      	movs	r1, #0
 8009876:	223c      	movs	r2, #60	; 0x3c
 8009878:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 800987c:	4770      	bx	lr
	...

08009880 <_ZN5Model4tickEv>:

void Model::tick()
{
 8009880:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8009882:	4d0a      	ldr	r5, [pc, #40]	; (80098ac <_ZN5Model4tickEv+0x2c>)
{
 8009884:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8009886:	6828      	ldr	r0, [r5, #0]
 8009888:	f004 f8ac 	bl	800d9e4 <osMessageQueueGetCount>
 800988c:	b168      	cbz	r0, 80098aa <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 800988e:	2300      	movs	r3, #0
 8009890:	6828      	ldr	r0, [r5, #0]
 8009892:	461a      	mov	r2, r3
 8009894:	1d21      	adds	r1, r4, #4
 8009896:	f004 f871 	bl	800d97c <osMessageQueueGet>
 800989a:	b930      	cbnz	r0, 80098aa <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 800989c:	6820      	ldr	r0, [r4, #0]
 800989e:	6861      	ldr	r1, [r4, #4]
 80098a0:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 80098a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 80098a6:	689b      	ldr	r3, [r3, #8]
 80098a8:	4718      	bx	r3
}
 80098aa:	bd70      	pop	{r4, r5, r6, pc}
 80098ac:	200018e4 	.word	0x200018e4

080098b0 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 80098b0:	4770      	bx	lr

080098b2 <_ZThn4_N21Project_InfoPresenterD1Ev>:
 80098b2:	3804      	subs	r0, #4
 80098b4:	4770      	bx	lr

080098b6 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 80098b6:	4770      	bx	lr

080098b8 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80098b8:	68c0      	ldr	r0, [r0, #12]
 80098ba:	6803      	ldr	r3, [r0, #0]
 80098bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80098be:	4718      	bx	r3

080098c0 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80098c0:	f1a0 0004 	sub.w	r0, r0, #4
 80098c4:	f7ff bff8 	b.w	80098b8 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

080098c8 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 80098c8:	b510      	push	{r4, lr}
 80098ca:	2110      	movs	r1, #16
 80098cc:	4604      	mov	r4, r0
 80098ce:	f020 f99e 	bl	8029c0e <_ZdlPvj>
 80098d2:	4620      	mov	r0, r4
 80098d4:	bd10      	pop	{r4, pc}

080098d6 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 80098d6:	f1a0 0004 	sub.w	r0, r0, #4
 80098da:	e7f5      	b.n	80098c8 <_ZN21Project_InfoPresenterD0Ev>

080098dc <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 80098dc:	b510      	push	{r4, lr}
 80098de:	2200      	movs	r2, #0
 80098e0:	6082      	str	r2, [r0, #8]
    : view(v)
 80098e2:	4a04      	ldr	r2, [pc, #16]	; (80098f4 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 80098e4:	60c1      	str	r1, [r0, #12]
 80098e6:	f102 0408 	add.w	r4, r2, #8
 80098ea:	3224      	adds	r2, #36	; 0x24
 80098ec:	6004      	str	r4, [r0, #0]
 80098ee:	6042      	str	r2, [r0, #4]
}
 80098f0:	bd10      	pop	{r4, pc}
 80098f2:	bf00      	nop
 80098f4:	0802e97c 	.word	0x0802e97c

080098f8 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 80098f8:	4770      	bx	lr
	...

080098fc <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 80098fc:	b510      	push	{r4, lr}
 80098fe:	4b03      	ldr	r3, [pc, #12]	; (800990c <_ZN16Project_InfoViewD1Ev+0x10>)
 8009900:	6003      	str	r3, [r0, #0]
 8009902:	4604      	mov	r4, r0
 8009904:	f7fe fef4 	bl	80086f0 <_ZN20Project_InfoViewBaseD1Ev>
 8009908:	4620      	mov	r0, r4
 800990a:	bd10      	pop	{r4, pc}
 800990c:	0802e9b4 	.word	0x0802e9b4

08009910 <_ZN16Project_InfoViewD0Ev>:
 8009910:	b510      	push	{r4, lr}
 8009912:	4604      	mov	r4, r0
 8009914:	f7ff fff2 	bl	80098fc <_ZN16Project_InfoViewD1Ev>
 8009918:	4620      	mov	r0, r4
 800991a:	f241 01b0 	movw	r1, #4272	; 0x10b0
 800991e:	f020 f976 	bl	8029c0e <_ZdlPvj>
 8009922:	4620      	mov	r0, r4
 8009924:	bd10      	pop	{r4, pc}
	...

08009928 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8009928:	b510      	push	{r4, lr}
 800992a:	4604      	mov	r4, r0
 800992c:	f7fe ff08 	bl	8008740 <_ZN20Project_InfoViewBaseC1Ev>
 8009930:	4b01      	ldr	r3, [pc, #4]	; (8009938 <_ZN16Project_InfoViewC1Ev+0x10>)
 8009932:	6023      	str	r3, [r4, #0]
}
 8009934:	4620      	mov	r0, r4
 8009936:	bd10      	pop	{r4, pc}
 8009938:	0802e9b4 	.word	0x0802e9b4

0800993c <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 800993c:	f7fe beb4 	b.w	80086a8 <_ZN20Project_InfoViewBase11setupScreenEv>

08009940 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8009940:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009942:	4a0a      	ldr	r2, [pc, #40]	; (800996c <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8009944:	4605      	mov	r5, r0
 8009946:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009948:	460b      	mov	r3, r1
 800994a:	f500 7022 	add.w	r0, r0, #648	; 0x288
 800994e:	2104      	movs	r1, #4
 8009950:	f00f fa56 	bl	8018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009954:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009958:	f00d f9ca 	bl	8016cf0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 800995c:	b92c      	cbnz	r4, 800996a <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 800995e:	f00c f8df 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009962:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009966:	f7fa bfb9 	b.w	80048dc <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800996a:	bd38      	pop	{r3, r4, r5, pc}
 800996c:	0802e444 	.word	0x0802e444

08009970 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8009970:	4770      	bx	lr

08009972 <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 8009972:	3804      	subs	r0, #4
 8009974:	4770      	bx	lr

08009976 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8009976:	4770      	bx	lr

08009978 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8009978:	4770      	bx	lr

0800997a <_ZN21Shutting_OffPresenterD0Ev>:
 800997a:	b510      	push	{r4, lr}
 800997c:	2110      	movs	r1, #16
 800997e:	4604      	mov	r4, r0
 8009980:	f020 f945 	bl	8029c0e <_ZdlPvj>
 8009984:	4620      	mov	r0, r4
 8009986:	bd10      	pop	{r4, pc}

08009988 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8009988:	f1a0 0004 	sub.w	r0, r0, #4
 800998c:	e7f5      	b.n	800997a <_ZN21Shutting_OffPresenterD0Ev>

0800998e <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 800998e:	4770      	bx	lr

08009990 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 8009990:	b510      	push	{r4, lr}
 8009992:	2200      	movs	r2, #0
 8009994:	6082      	str	r2, [r0, #8]
    : view(v)
 8009996:	4a04      	ldr	r2, [pc, #16]	; (80099a8 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8009998:	60c1      	str	r1, [r0, #12]
 800999a:	f102 0408 	add.w	r4, r2, #8
 800999e:	3224      	adds	r2, #36	; 0x24
 80099a0:	6004      	str	r4, [r0, #0]
 80099a2:	6042      	str	r2, [r0, #4]
}
 80099a4:	bd10      	pop	{r4, pc}
 80099a6:	bf00      	nop
 80099a8:	0802e9e4 	.word	0x0802e9e4

080099ac <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 80099ac:	4770      	bx	lr
	...

080099b0 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 80099b0:	b510      	push	{r4, lr}
 80099b2:	4b03      	ldr	r3, [pc, #12]	; (80099c0 <_ZN16Shutting_OffViewD1Ev+0x10>)
 80099b4:	6003      	str	r3, [r0, #0]
 80099b6:	4604      	mov	r4, r0
 80099b8:	f7ff f890 	bl	8008adc <_ZN20Shutting_OffViewBaseD1Ev>
 80099bc:	4620      	mov	r0, r4
 80099be:	bd10      	pop	{r4, pc}
 80099c0:	0802ea1c 	.word	0x0802ea1c

080099c4 <_ZN16Shutting_OffViewD0Ev>:
 80099c4:	b510      	push	{r4, lr}
 80099c6:	4604      	mov	r4, r0
 80099c8:	f7ff fff2 	bl	80099b0 <_ZN16Shutting_OffViewD1Ev>
 80099cc:	4620      	mov	r0, r4
 80099ce:	2198      	movs	r1, #152	; 0x98
 80099d0:	f020 f91d 	bl	8029c0e <_ZdlPvj>
 80099d4:	4620      	mov	r0, r4
 80099d6:	bd10      	pop	{r4, pc}

080099d8 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 80099d8:	b510      	push	{r4, lr}
 80099da:	4604      	mov	r4, r0
 80099dc:	f7ff f888 	bl	8008af0 <_ZN20Shutting_OffViewBaseC1Ev>
 80099e0:	4b01      	ldr	r3, [pc, #4]	; (80099e8 <_ZN16Shutting_OffViewC1Ev+0x10>)
 80099e2:	6023      	str	r3, [r4, #0]
}
 80099e4:	4620      	mov	r0, r4
 80099e6:	bd10      	pop	{r4, pc}
 80099e8:	0802ea1c 	.word	0x0802ea1c

080099ec <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 80099ec:	f7ff b877 	b.w	8008ade <_ZN20Shutting_OffViewBase11setupScreenEv>

080099f0 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 80099f0:	20f0      	movs	r0, #240	; 0xf0
 80099f2:	4770      	bx	lr

080099f4 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 80099f4:	f44f 70a0 	mov.w	r0, #320	; 0x140
 80099f8:	4770      	bx	lr
 80099fa:	bf00      	nop

080099fc <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 80099fc:	2029      	movs	r0, #41	; 0x29
 80099fe:	f7f8 bc5b 	b.w	80022b8 <LCD_IO_WriteReg>
 8009a02:	bf00      	nop

08009a04 <ili9341_DisplayOff>:
 8009a04:	2028      	movs	r0, #40	; 0x28
 8009a06:	f7f8 bc57 	b.w	80022b8 <LCD_IO_WriteReg>
 8009a0a:	bf00      	nop

08009a0c <ili9341_Init>:
{
 8009a0c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8009a0e:	f7f8 fc19 	bl	8002244 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8009a12:	20ca      	movs	r0, #202	; 0xca
 8009a14:	f7f8 fc50 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009a18:	20c3      	movs	r0, #195	; 0xc3
 8009a1a:	f7f8 fc23 	bl	8002264 <LCD_IO_WriteData>
 8009a1e:	2008      	movs	r0, #8
 8009a20:	f7f8 fc20 	bl	8002264 <LCD_IO_WriteData>
 8009a24:	2050      	movs	r0, #80	; 0x50
 8009a26:	f7f8 fc1d 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009a2a:	20cf      	movs	r0, #207	; 0xcf
 8009a2c:	f7f8 fc44 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009a30:	2000      	movs	r0, #0
 8009a32:	f7f8 fc17 	bl	8002264 <LCD_IO_WriteData>
 8009a36:	20c1      	movs	r0, #193	; 0xc1
 8009a38:	f7f8 fc14 	bl	8002264 <LCD_IO_WriteData>
 8009a3c:	2030      	movs	r0, #48	; 0x30
 8009a3e:	f7f8 fc11 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009a42:	20ed      	movs	r0, #237	; 0xed
 8009a44:	f7f8 fc38 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009a48:	2064      	movs	r0, #100	; 0x64
 8009a4a:	f7f8 fc0b 	bl	8002264 <LCD_IO_WriteData>
 8009a4e:	2003      	movs	r0, #3
 8009a50:	f7f8 fc08 	bl	8002264 <LCD_IO_WriteData>
 8009a54:	2012      	movs	r0, #18
 8009a56:	f7f8 fc05 	bl	8002264 <LCD_IO_WriteData>
 8009a5a:	2081      	movs	r0, #129	; 0x81
 8009a5c:	f7f8 fc02 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009a60:	20e8      	movs	r0, #232	; 0xe8
 8009a62:	f7f8 fc29 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009a66:	2085      	movs	r0, #133	; 0x85
 8009a68:	f7f8 fbfc 	bl	8002264 <LCD_IO_WriteData>
 8009a6c:	2000      	movs	r0, #0
 8009a6e:	f7f8 fbf9 	bl	8002264 <LCD_IO_WriteData>
 8009a72:	2078      	movs	r0, #120	; 0x78
 8009a74:	f7f8 fbf6 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009a78:	20cb      	movs	r0, #203	; 0xcb
 8009a7a:	f7f8 fc1d 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009a7e:	2039      	movs	r0, #57	; 0x39
 8009a80:	f7f8 fbf0 	bl	8002264 <LCD_IO_WriteData>
 8009a84:	202c      	movs	r0, #44	; 0x2c
 8009a86:	f7f8 fbed 	bl	8002264 <LCD_IO_WriteData>
 8009a8a:	2000      	movs	r0, #0
 8009a8c:	f7f8 fbea 	bl	8002264 <LCD_IO_WriteData>
 8009a90:	2034      	movs	r0, #52	; 0x34
 8009a92:	f7f8 fbe7 	bl	8002264 <LCD_IO_WriteData>
 8009a96:	2002      	movs	r0, #2
 8009a98:	f7f8 fbe4 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009a9c:	20f7      	movs	r0, #247	; 0xf7
 8009a9e:	f7f8 fc0b 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009aa2:	2020      	movs	r0, #32
 8009aa4:	f7f8 fbde 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009aa8:	20ea      	movs	r0, #234	; 0xea
 8009aaa:	f7f8 fc05 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009aae:	2000      	movs	r0, #0
 8009ab0:	f7f8 fbd8 	bl	8002264 <LCD_IO_WriteData>
 8009ab4:	2000      	movs	r0, #0
 8009ab6:	f7f8 fbd5 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009aba:	20b1      	movs	r0, #177	; 0xb1
 8009abc:	f7f8 fbfc 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009ac0:	2000      	movs	r0, #0
 8009ac2:	f7f8 fbcf 	bl	8002264 <LCD_IO_WriteData>
 8009ac6:	201b      	movs	r0, #27
 8009ac8:	f7f8 fbcc 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009acc:	20b6      	movs	r0, #182	; 0xb6
 8009ace:	f7f8 fbf3 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009ad2:	200a      	movs	r0, #10
 8009ad4:	f7f8 fbc6 	bl	8002264 <LCD_IO_WriteData>
 8009ad8:	20a2      	movs	r0, #162	; 0xa2
 8009ada:	f7f8 fbc3 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009ade:	20c0      	movs	r0, #192	; 0xc0
 8009ae0:	f7f8 fbea 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009ae4:	2010      	movs	r0, #16
 8009ae6:	f7f8 fbbd 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009aea:	20c1      	movs	r0, #193	; 0xc1
 8009aec:	f7f8 fbe4 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009af0:	2010      	movs	r0, #16
 8009af2:	f7f8 fbb7 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009af6:	20c5      	movs	r0, #197	; 0xc5
 8009af8:	f7f8 fbde 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009afc:	2045      	movs	r0, #69	; 0x45
 8009afe:	f7f8 fbb1 	bl	8002264 <LCD_IO_WriteData>
 8009b02:	2015      	movs	r0, #21
 8009b04:	f7f8 fbae 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b08:	20c7      	movs	r0, #199	; 0xc7
 8009b0a:	f7f8 fbd5 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b0e:	2090      	movs	r0, #144	; 0x90
 8009b10:	f7f8 fba8 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b14:	2036      	movs	r0, #54	; 0x36
 8009b16:	f7f8 fbcf 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b1a:	20c8      	movs	r0, #200	; 0xc8
 8009b1c:	f7f8 fba2 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b20:	20f2      	movs	r0, #242	; 0xf2
 8009b22:	f7f8 fbc9 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b26:	2000      	movs	r0, #0
 8009b28:	f7f8 fb9c 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b2c:	20b0      	movs	r0, #176	; 0xb0
 8009b2e:	f7f8 fbc3 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b32:	20c2      	movs	r0, #194	; 0xc2
 8009b34:	f7f8 fb96 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b38:	20b6      	movs	r0, #182	; 0xb6
 8009b3a:	f7f8 fbbd 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b3e:	200a      	movs	r0, #10
 8009b40:	f7f8 fb90 	bl	8002264 <LCD_IO_WriteData>
 8009b44:	20a7      	movs	r0, #167	; 0xa7
 8009b46:	f7f8 fb8d 	bl	8002264 <LCD_IO_WriteData>
 8009b4a:	2027      	movs	r0, #39	; 0x27
 8009b4c:	f7f8 fb8a 	bl	8002264 <LCD_IO_WriteData>
 8009b50:	2004      	movs	r0, #4
 8009b52:	f7f8 fb87 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b56:	202a      	movs	r0, #42	; 0x2a
 8009b58:	f7f8 fbae 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b5c:	2000      	movs	r0, #0
 8009b5e:	f7f8 fb81 	bl	8002264 <LCD_IO_WriteData>
 8009b62:	2000      	movs	r0, #0
 8009b64:	f7f8 fb7e 	bl	8002264 <LCD_IO_WriteData>
 8009b68:	2000      	movs	r0, #0
 8009b6a:	f7f8 fb7b 	bl	8002264 <LCD_IO_WriteData>
 8009b6e:	20ef      	movs	r0, #239	; 0xef
 8009b70:	f7f8 fb78 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b74:	202b      	movs	r0, #43	; 0x2b
 8009b76:	f7f8 fb9f 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b7a:	2000      	movs	r0, #0
 8009b7c:	f7f8 fb72 	bl	8002264 <LCD_IO_WriteData>
 8009b80:	2000      	movs	r0, #0
 8009b82:	f7f8 fb6f 	bl	8002264 <LCD_IO_WriteData>
 8009b86:	2001      	movs	r0, #1
 8009b88:	f7f8 fb6c 	bl	8002264 <LCD_IO_WriteData>
 8009b8c:	203f      	movs	r0, #63	; 0x3f
 8009b8e:	f7f8 fb69 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b92:	20f6      	movs	r0, #246	; 0xf6
 8009b94:	f7f8 fb90 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b98:	2001      	movs	r0, #1
 8009b9a:	f7f8 fb63 	bl	8002264 <LCD_IO_WriteData>
 8009b9e:	2000      	movs	r0, #0
 8009ba0:	f7f8 fb60 	bl	8002264 <LCD_IO_WriteData>
 8009ba4:	2006      	movs	r0, #6
 8009ba6:	f7f8 fb5d 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009baa:	202c      	movs	r0, #44	; 0x2c
 8009bac:	f7f8 fb84 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8009bb0:	20c8      	movs	r0, #200	; 0xc8
 8009bb2:	f7f8 fbe9 	bl	8002388 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8009bb6:	2026      	movs	r0, #38	; 0x26
 8009bb8:	f7f8 fb7e 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009bbc:	2001      	movs	r0, #1
 8009bbe:	f7f8 fb51 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009bc2:	20e0      	movs	r0, #224	; 0xe0
 8009bc4:	f7f8 fb78 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009bc8:	200f      	movs	r0, #15
 8009bca:	f7f8 fb4b 	bl	8002264 <LCD_IO_WriteData>
 8009bce:	2029      	movs	r0, #41	; 0x29
 8009bd0:	f7f8 fb48 	bl	8002264 <LCD_IO_WriteData>
 8009bd4:	2024      	movs	r0, #36	; 0x24
 8009bd6:	f7f8 fb45 	bl	8002264 <LCD_IO_WriteData>
 8009bda:	200c      	movs	r0, #12
 8009bdc:	f7f8 fb42 	bl	8002264 <LCD_IO_WriteData>
 8009be0:	200e      	movs	r0, #14
 8009be2:	f7f8 fb3f 	bl	8002264 <LCD_IO_WriteData>
 8009be6:	2009      	movs	r0, #9
 8009be8:	f7f8 fb3c 	bl	8002264 <LCD_IO_WriteData>
 8009bec:	204e      	movs	r0, #78	; 0x4e
 8009bee:	f7f8 fb39 	bl	8002264 <LCD_IO_WriteData>
 8009bf2:	2078      	movs	r0, #120	; 0x78
 8009bf4:	f7f8 fb36 	bl	8002264 <LCD_IO_WriteData>
 8009bf8:	203c      	movs	r0, #60	; 0x3c
 8009bfa:	f7f8 fb33 	bl	8002264 <LCD_IO_WriteData>
 8009bfe:	2009      	movs	r0, #9
 8009c00:	f7f8 fb30 	bl	8002264 <LCD_IO_WriteData>
 8009c04:	2013      	movs	r0, #19
 8009c06:	f7f8 fb2d 	bl	8002264 <LCD_IO_WriteData>
 8009c0a:	2005      	movs	r0, #5
 8009c0c:	f7f8 fb2a 	bl	8002264 <LCD_IO_WriteData>
 8009c10:	2017      	movs	r0, #23
 8009c12:	f7f8 fb27 	bl	8002264 <LCD_IO_WriteData>
 8009c16:	2011      	movs	r0, #17
 8009c18:	f7f8 fb24 	bl	8002264 <LCD_IO_WriteData>
 8009c1c:	2000      	movs	r0, #0
 8009c1e:	f7f8 fb21 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c22:	20e1      	movs	r0, #225	; 0xe1
 8009c24:	f7f8 fb48 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c28:	2000      	movs	r0, #0
 8009c2a:	f7f8 fb1b 	bl	8002264 <LCD_IO_WriteData>
 8009c2e:	2016      	movs	r0, #22
 8009c30:	f7f8 fb18 	bl	8002264 <LCD_IO_WriteData>
 8009c34:	201b      	movs	r0, #27
 8009c36:	f7f8 fb15 	bl	8002264 <LCD_IO_WriteData>
 8009c3a:	2004      	movs	r0, #4
 8009c3c:	f7f8 fb12 	bl	8002264 <LCD_IO_WriteData>
 8009c40:	2011      	movs	r0, #17
 8009c42:	f7f8 fb0f 	bl	8002264 <LCD_IO_WriteData>
 8009c46:	2007      	movs	r0, #7
 8009c48:	f7f8 fb0c 	bl	8002264 <LCD_IO_WriteData>
 8009c4c:	2031      	movs	r0, #49	; 0x31
 8009c4e:	f7f8 fb09 	bl	8002264 <LCD_IO_WriteData>
 8009c52:	2033      	movs	r0, #51	; 0x33
 8009c54:	f7f8 fb06 	bl	8002264 <LCD_IO_WriteData>
 8009c58:	2042      	movs	r0, #66	; 0x42
 8009c5a:	f7f8 fb03 	bl	8002264 <LCD_IO_WriteData>
 8009c5e:	2005      	movs	r0, #5
 8009c60:	f7f8 fb00 	bl	8002264 <LCD_IO_WriteData>
 8009c64:	200c      	movs	r0, #12
 8009c66:	f7f8 fafd 	bl	8002264 <LCD_IO_WriteData>
 8009c6a:	200a      	movs	r0, #10
 8009c6c:	f7f8 fafa 	bl	8002264 <LCD_IO_WriteData>
 8009c70:	2028      	movs	r0, #40	; 0x28
 8009c72:	f7f8 faf7 	bl	8002264 <LCD_IO_WriteData>
 8009c76:	202f      	movs	r0, #47	; 0x2f
 8009c78:	f7f8 faf4 	bl	8002264 <LCD_IO_WriteData>
 8009c7c:	200f      	movs	r0, #15
 8009c7e:	f7f8 faf1 	bl	8002264 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c82:	2011      	movs	r0, #17
 8009c84:	f7f8 fb18 	bl	80022b8 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8009c88:	20c8      	movs	r0, #200	; 0xc8
 8009c8a:	f7f8 fb7d 	bl	8002388 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8009c8e:	2029      	movs	r0, #41	; 0x29
 8009c90:	f7f8 fb12 	bl	80022b8 <LCD_IO_WriteReg>
}
 8009c94:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8009c98:	202c      	movs	r0, #44	; 0x2c
 8009c9a:	f7f8 bb0d 	b.w	80022b8 <LCD_IO_WriteReg>
 8009c9e:	bf00      	nop

08009ca0 <ili9341_ReadID>:
{
 8009ca0:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8009ca2:	f7f8 facf 	bl	8002244 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8009ca6:	2103      	movs	r1, #3
 8009ca8:	20d3      	movs	r0, #211	; 0xd3
 8009caa:	f7f8 fb2f 	bl	800230c <LCD_IO_ReadData>
}
 8009cae:	b280      	uxth	r0, r0
 8009cb0:	bd08      	pop	{r3, pc}
 8009cb2:	bf00      	nop

08009cb4 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8009cb4:	221f      	movs	r2, #31
 8009cb6:	210b      	movs	r1, #11
 8009cb8:	b2c0      	uxtb	r0, r0
 8009cba:	f7f8 ba75 	b.w	80021a8 <IOE_Write>
 8009cbe:	bf00      	nop

08009cc0 <stmpe811_Reset>:
{
 8009cc0:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8009cc2:	b2c4      	uxtb	r4, r0
 8009cc4:	2202      	movs	r2, #2
 8009cc6:	2103      	movs	r1, #3
 8009cc8:	4620      	mov	r0, r4
 8009cca:	f7f8 fa6d 	bl	80021a8 <IOE_Write>
  IOE_Delay(10); 
 8009cce:	200a      	movs	r0, #10
 8009cd0:	f7f8 fab6 	bl	8002240 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009cd4:	4620      	mov	r0, r4
 8009cd6:	2200      	movs	r2, #0
 8009cd8:	2103      	movs	r1, #3
 8009cda:	f7f8 fa65 	bl	80021a8 <IOE_Write>
}
 8009cde:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8009ce2:	2002      	movs	r0, #2
 8009ce4:	f7f8 baac 	b.w	8002240 <IOE_Delay>

08009ce8 <stmpe811_ReadID>:
{
 8009ce8:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009cea:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8009cec:	f7f8 fa58 	bl	80021a0 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009cf0:	2100      	movs	r1, #0
 8009cf2:	4620      	mov	r0, r4
 8009cf4:	f7f8 fa70 	bl	80021d8 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009cf8:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009cfa:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009cfc:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009cfe:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009d00:	f7f8 fa6a 	bl	80021d8 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009d04:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8009d08:	b280      	uxth	r0, r0
 8009d0a:	bd10      	pop	{r4, pc}

08009d0c <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8009d0c:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8009d0e:	b2c4      	uxtb	r4, r0
 8009d10:	2140      	movs	r1, #64	; 0x40
 8009d12:	4620      	mov	r0, r4
 8009d14:	f7f8 fa60 	bl	80021d8 <IOE_Read>
  
  if(state > 0)
 8009d18:	0603      	lsls	r3, r0, #24
 8009d1a:	d40b      	bmi.n	8009d34 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009d1c:	4620      	mov	r0, r4
 8009d1e:	2201      	movs	r2, #1
 8009d20:	214b      	movs	r1, #75	; 0x4b
 8009d22:	f7f8 fa41 	bl	80021a8 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009d26:	4620      	mov	r0, r4
 8009d28:	2200      	movs	r2, #0
 8009d2a:	214b      	movs	r1, #75	; 0x4b
 8009d2c:	f7f8 fa3c 	bl	80021a8 <IOE_Write>
  uint8_t ret = 0;
 8009d30:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8009d32:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8009d34:	214c      	movs	r1, #76	; 0x4c
 8009d36:	4620      	mov	r0, r4
 8009d38:	f7f8 fa4e 	bl	80021d8 <IOE_Read>
      ret = 1;
 8009d3c:	3800      	subs	r0, #0
 8009d3e:	bf18      	it	ne
 8009d40:	2001      	movne	r0, #1
}
 8009d42:	bd10      	pop	{r4, pc}

08009d44 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8009d44:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8009d46:	210b      	movs	r1, #11
 8009d48:	b2c0      	uxtb	r0, r0
 8009d4a:	f7f8 fa45 	bl	80021d8 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8009d4e:	f000 001f 	and.w	r0, r0, #31
 8009d52:	bd08      	pop	{r3, pc}

08009d54 <stmpe811_TS_GetXY>:
{
 8009d54:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009d56:	2304      	movs	r3, #4
{
 8009d58:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009d5a:	b2c4      	uxtb	r4, r0
{
 8009d5c:	4615      	mov	r5, r2
 8009d5e:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009d60:	eb0d 0203 	add.w	r2, sp, r3
 8009d64:	21d7      	movs	r1, #215	; 0xd7
 8009d66:	4620      	mov	r0, r4
 8009d68:	f7f8 fa52 	bl	8002210 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8009d6c:	9b01      	ldr	r3, [sp, #4]
 8009d6e:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009d70:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009d72:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009d76:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009d78:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009d7a:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009d7c:	2201      	movs	r2, #1
 8009d7e:	214b      	movs	r1, #75	; 0x4b
 8009d80:	f7f8 fa12 	bl	80021a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009d84:	2200      	movs	r2, #0
 8009d86:	214b      	movs	r1, #75	; 0x4b
 8009d88:	4620      	mov	r0, r4
 8009d8a:	f7f8 fa0d 	bl	80021a8 <IOE_Write>
}
 8009d8e:	b002      	add	sp, #8
 8009d90:	bd70      	pop	{r4, r5, r6, pc}
 8009d92:	bf00      	nop

08009d94 <stmpe811_TS_Start>:
{
 8009d94:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8009d96:	b2c4      	uxtb	r4, r0
 8009d98:	2104      	movs	r1, #4
 8009d9a:	4620      	mov	r0, r4
 8009d9c:	f7f8 fa1c 	bl	80021d8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009da0:	2104      	movs	r1, #4
 8009da2:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8009da6:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009da8:	4620      	mov	r0, r4
 8009daa:	f7f8 f9fd 	bl	80021a8 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8009dae:	2117      	movs	r1, #23
 8009db0:	4620      	mov	r0, r4
 8009db2:	f7f8 fa11 	bl	80021d8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8009db6:	2117      	movs	r1, #23
 8009db8:	f000 020f 	and.w	r2, r0, #15
 8009dbc:	4620      	mov	r0, r4
 8009dbe:	f7f8 f9f3 	bl	80021a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009dc2:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8009dc6:	4620      	mov	r0, r4
 8009dc8:	2104      	movs	r1, #4
 8009dca:	f7f8 f9ed 	bl	80021a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8009dce:	2249      	movs	r2, #73	; 0x49
 8009dd0:	2120      	movs	r1, #32
 8009dd2:	4620      	mov	r0, r4
 8009dd4:	f7f8 f9e8 	bl	80021a8 <IOE_Write>
  IOE_Delay(2); 
 8009dd8:	2002      	movs	r0, #2
 8009dda:	f7f8 fa31 	bl	8002240 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8009dde:	4620      	mov	r0, r4
 8009de0:	2201      	movs	r2, #1
 8009de2:	2121      	movs	r1, #33	; 0x21
 8009de4:	f7f8 f9e0 	bl	80021a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8009de8:	4620      	mov	r0, r4
 8009dea:	229a      	movs	r2, #154	; 0x9a
 8009dec:	2141      	movs	r1, #65	; 0x41
 8009dee:	f7f8 f9db 	bl	80021a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8009df2:	4620      	mov	r0, r4
 8009df4:	2201      	movs	r2, #1
 8009df6:	214a      	movs	r1, #74	; 0x4a
 8009df8:	f7f8 f9d6 	bl	80021a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009dfc:	4620      	mov	r0, r4
 8009dfe:	2201      	movs	r2, #1
 8009e00:	214b      	movs	r1, #75	; 0x4b
 8009e02:	f7f8 f9d1 	bl	80021a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009e06:	4620      	mov	r0, r4
 8009e08:	2200      	movs	r2, #0
 8009e0a:	214b      	movs	r1, #75	; 0x4b
 8009e0c:	f7f8 f9cc 	bl	80021a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8009e10:	4620      	mov	r0, r4
 8009e12:	2201      	movs	r2, #1
 8009e14:	2156      	movs	r1, #86	; 0x56
 8009e16:	f7f8 f9c7 	bl	80021a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8009e1a:	4620      	mov	r0, r4
 8009e1c:	2201      	movs	r2, #1
 8009e1e:	2158      	movs	r1, #88	; 0x58
 8009e20:	f7f8 f9c2 	bl	80021a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8009e24:	4620      	mov	r0, r4
 8009e26:	2201      	movs	r2, #1
 8009e28:	2140      	movs	r1, #64	; 0x40
 8009e2a:	f7f8 f9bd 	bl	80021a8 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8009e2e:	4620      	mov	r0, r4
 8009e30:	22ff      	movs	r2, #255	; 0xff
 8009e32:	210b      	movs	r1, #11
 8009e34:	f7f8 f9b8 	bl	80021a8 <IOE_Write>
}
 8009e38:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8009e3c:	2002      	movs	r0, #2
 8009e3e:	f7f8 b9ff 	b.w	8002240 <IOE_Delay>
 8009e42:	bf00      	nop

08009e44 <stmpe811_TS_DisableIT>:
{
 8009e44:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8009e46:	b2c4      	uxtb	r4, r0
 8009e48:	2109      	movs	r1, #9
 8009e4a:	4620      	mov	r0, r4
 8009e4c:	f7f8 f9c4 	bl	80021d8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8009e50:	2109      	movs	r1, #9
 8009e52:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8009e56:	4620      	mov	r0, r4
 8009e58:	f7f8 f9a6 	bl	80021a8 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009e5c:	210a      	movs	r1, #10
 8009e5e:	4620      	mov	r0, r4
 8009e60:	f7f8 f9ba 	bl	80021d8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009e64:	210a      	movs	r1, #10
 8009e66:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8009e6a:	4620      	mov	r0, r4
}
 8009e6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009e70:	f7f8 b99a 	b.w	80021a8 <IOE_Write>

08009e74 <stmpe811_TS_EnableIT>:
{
 8009e74:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009e76:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8009e78:	f7f8 f994 	bl	80021a4 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009e7c:	210a      	movs	r1, #10
 8009e7e:	4620      	mov	r0, r4
 8009e80:	f7f8 f9aa 	bl	80021d8 <IOE_Read>
  tmp |= Source; 
 8009e84:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009e88:	b2c2      	uxtb	r2, r0
 8009e8a:	210a      	movs	r1, #10
 8009e8c:	4620      	mov	r0, r4
 8009e8e:	f7f8 f98b 	bl	80021a8 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8009e92:	2109      	movs	r1, #9
 8009e94:	4620      	mov	r0, r4
 8009e96:	f7f8 f99f 	bl	80021d8 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8009e9a:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8009e9e:	b2c2      	uxtb	r2, r0
 8009ea0:	2109      	movs	r1, #9
 8009ea2:	4620      	mov	r0, r4
}
 8009ea4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8009ea8:	f7f8 b97e 	b.w	80021a8 <IOE_Write>

08009eac <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8009eac:	4a10      	ldr	r2, [pc, #64]	; (8009ef0 <stmpe811_Init+0x44>)
 8009eae:	7813      	ldrb	r3, [r2, #0]
 8009eb0:	4298      	cmp	r0, r3
 8009eb2:	d004      	beq.n	8009ebe <stmpe811_Init+0x12>
 8009eb4:	7851      	ldrb	r1, [r2, #1]
 8009eb6:	4288      	cmp	r0, r1
 8009eb8:	d001      	beq.n	8009ebe <stmpe811_Init+0x12>
 8009eba:	b113      	cbz	r3, 8009ec2 <stmpe811_Init+0x16>
 8009ebc:	b101      	cbz	r1, 8009ec0 <stmpe811_Init+0x14>
 8009ebe:	4770      	bx	lr
 8009ec0:	2301      	movs	r3, #1
{
 8009ec2:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 8009ec4:	b2c4      	uxtb	r4, r0
 8009ec6:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8009ec8:	f7f8 f96a 	bl	80021a0 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8009ecc:	2202      	movs	r2, #2
 8009ece:	2103      	movs	r1, #3
 8009ed0:	4620      	mov	r0, r4
 8009ed2:	f7f8 f969 	bl	80021a8 <IOE_Write>
  IOE_Delay(10); 
 8009ed6:	200a      	movs	r0, #10
 8009ed8:	f7f8 f9b2 	bl	8002240 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009edc:	4620      	mov	r0, r4
 8009ede:	2200      	movs	r2, #0
 8009ee0:	2103      	movs	r1, #3
 8009ee2:	f7f8 f961 	bl	80021a8 <IOE_Write>
}
 8009ee6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8009eea:	2002      	movs	r0, #2
 8009eec:	f7f8 b9a8 	b.w	8002240 <IOE_Delay>
 8009ef0:	20001fb0 	.word	0x20001fb0

08009ef4 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009ef4:	4b05      	ldr	r3, [pc, #20]	; (8009f0c <SystemInit+0x18>)
 8009ef6:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009efa:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009efe:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8009f02:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009f06:	6099      	str	r1, [r3, #8]
#endif
}
 8009f08:	4770      	bx	lr
 8009f0a:	bf00      	nop
 8009f0c:	e000ed00 	.word	0xe000ed00

08009f10 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8009f10:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009f12:	4b0b      	ldr	r3, [pc, #44]	; (8009f40 <HAL_Init+0x30>)
 8009f14:	681a      	ldr	r2, [r3, #0]
 8009f16:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009f1a:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009f1c:	681a      	ldr	r2, [r3, #0]
 8009f1e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009f22:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8009f24:	681a      	ldr	r2, [r3, #0]
 8009f26:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009f2a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8009f2c:	2003      	movs	r0, #3
 8009f2e:	f000 f82d 	bl	8009f8c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8009f32:	2000      	movs	r0, #0
 8009f34:	f7f8 fdfa 	bl	8002b2c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8009f38:	f7f8 fb7a 	bl	8002630 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8009f3c:	2000      	movs	r0, #0
 8009f3e:	bd08      	pop	{r3, pc}
 8009f40:	40023c00 	.word	0x40023c00

08009f44 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8009f44:	4a03      	ldr	r2, [pc, #12]	; (8009f54 <HAL_IncTick+0x10>)
 8009f46:	4b04      	ldr	r3, [pc, #16]	; (8009f58 <HAL_IncTick+0x14>)
 8009f48:	6811      	ldr	r1, [r2, #0]
 8009f4a:	781b      	ldrb	r3, [r3, #0]
 8009f4c:	440b      	add	r3, r1
 8009f4e:	6013      	str	r3, [r2, #0]
}
 8009f50:	4770      	bx	lr
 8009f52:	bf00      	nop
 8009f54:	20001fb4 	.word	0x20001fb4
 8009f58:	2000007c 	.word	0x2000007c

08009f5c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8009f5c:	4b01      	ldr	r3, [pc, #4]	; (8009f64 <HAL_GetTick+0x8>)
 8009f5e:	6818      	ldr	r0, [r3, #0]
}
 8009f60:	4770      	bx	lr
 8009f62:	bf00      	nop
 8009f64:	20001fb4 	.word	0x20001fb4

08009f68 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8009f68:	b538      	push	{r3, r4, r5, lr}
 8009f6a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009f6c:	f7ff fff6 	bl	8009f5c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8009f70:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 8009f72:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8009f74:	d002      	beq.n	8009f7c <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8009f76:	4b04      	ldr	r3, [pc, #16]	; (8009f88 <HAL_Delay+0x20>)
 8009f78:	781b      	ldrb	r3, [r3, #0]
 8009f7a:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8009f7c:	f7ff ffee 	bl	8009f5c <HAL_GetTick>
 8009f80:	1b43      	subs	r3, r0, r5
 8009f82:	42a3      	cmp	r3, r4
 8009f84:	d3fa      	bcc.n	8009f7c <HAL_Delay+0x14>
  {
  }
}
 8009f86:	bd38      	pop	{r3, r4, r5, pc}
 8009f88:	2000007c 	.word	0x2000007c

08009f8c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8009f8c:	4907      	ldr	r1, [pc, #28]	; (8009fac <HAL_NVIC_SetPriorityGrouping+0x20>)
 8009f8e:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009f90:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009f92:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009f96:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009f9a:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8009f9c:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8009f9e:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8009fa2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8009fa6:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8009fa8:	4770      	bx	lr
 8009faa:	bf00      	nop
 8009fac:	e000ed00 	.word	0xe000ed00

08009fb0 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8009fb0:	4b1c      	ldr	r3, [pc, #112]	; (800a024 <HAL_NVIC_SetPriority+0x74>)
 8009fb2:	68db      	ldr	r3, [r3, #12]
 8009fb4:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8009fb8:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009fba:	f1c3 0e07 	rsb	lr, r3, #7
 8009fbe:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009fc2:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009fc6:	bf28      	it	cs
 8009fc8:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009fcc:	f1bc 0f06 	cmp.w	ip, #6
 8009fd0:	d91b      	bls.n	800a00a <HAL_NVIC_SetPriority+0x5a>
 8009fd2:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8009fd4:	f04f 3cff 	mov.w	ip, #4294967295
 8009fd8:	fa0c fc03 	lsl.w	ip, ip, r3
 8009fdc:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009fe0:	f04f 3cff 	mov.w	ip, #4294967295
 8009fe4:	fa0c fc0e 	lsl.w	ip, ip, lr
 8009fe8:	ea21 010c 	bic.w	r1, r1, ip
 8009fec:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8009fee:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009ff0:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8009ff4:	db0c      	blt.n	800a010 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009ff6:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8009ffa:	0109      	lsls	r1, r1, #4
 8009ffc:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800a000:	b2c9      	uxtb	r1, r1
 800a002:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800a006:	f85d fb04 	ldr.w	pc, [sp], #4
 800a00a:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a00c:	4613      	mov	r3, r2
 800a00e:	e7e7      	b.n	8009fe0 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a010:	4b05      	ldr	r3, [pc, #20]	; (800a028 <HAL_NVIC_SetPriority+0x78>)
 800a012:	f000 000f 	and.w	r0, r0, #15
 800a016:	0109      	lsls	r1, r1, #4
 800a018:	4403      	add	r3, r0
 800a01a:	b2c9      	uxtb	r1, r1
 800a01c:	7619      	strb	r1, [r3, #24]
 800a01e:	f85d fb04 	ldr.w	pc, [sp], #4
 800a022:	bf00      	nop
 800a024:	e000ed00 	.word	0xe000ed00
 800a028:	e000ecfc 	.word	0xe000ecfc

0800a02c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800a02c:	2800      	cmp	r0, #0
 800a02e:	db07      	blt.n	800a040 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800a030:	0941      	lsrs	r1, r0, #5
 800a032:	4a04      	ldr	r2, [pc, #16]	; (800a044 <HAL_NVIC_EnableIRQ+0x18>)
 800a034:	f000 001f 	and.w	r0, r0, #31
 800a038:	2301      	movs	r3, #1
 800a03a:	4083      	lsls	r3, r0
 800a03c:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800a040:	4770      	bx	lr
 800a042:	bf00      	nop
 800a044:	e000e100 	.word	0xe000e100

0800a048 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800a048:	b180      	cbz	r0, 800a06c <HAL_CRC_Init+0x24>
{
 800a04a:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800a04c:	7943      	ldrb	r3, [r0, #5]
 800a04e:	4604      	mov	r4, r0
 800a050:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a054:	b11b      	cbz	r3, 800a05e <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800a056:	2301      	movs	r3, #1
 800a058:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800a05a:	2000      	movs	r0, #0
}
 800a05c:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800a05e:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 800a060:	f7f8 fb06 	bl	8002670 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 800a064:	2301      	movs	r3, #1
 800a066:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 800a068:	2000      	movs	r0, #0
}
 800a06a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800a06c:	2001      	movs	r0, #1
}
 800a06e:	4770      	bx	lr

0800a070 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800a070:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a074:	2b02      	cmp	r3, #2
 800a076:	d003      	beq.n	800a080 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800a078:	2380      	movs	r3, #128	; 0x80
 800a07a:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 800a07c:	2001      	movs	r0, #1
 800a07e:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800a080:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800a082:	2305      	movs	r3, #5
 800a084:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 800a088:	6813      	ldr	r3, [r2, #0]
 800a08a:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 800a08e:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 800a090:	6013      	str	r3, [r2, #0]
}
 800a092:	4770      	bx	lr

0800a094 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 800a094:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 800a098:	4770      	bx	lr
 800a09a:	bf00      	nop

0800a09c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800a09c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800a0a0:	2200      	movs	r2, #0
 800a0a2:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800a0a4:	f8df a260 	ldr.w	sl, [pc, #608]	; 800a308 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800a0a8:	4e90      	ldr	r6, [pc, #576]	; (800a2ec <HAL_GPIO_Init+0x250>)
{
 800a0aa:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a0ac:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a0ae:	4689      	mov	r9, r1
 800a0b0:	e005      	b.n	800a0be <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a0b2:	3301      	adds	r3, #1
 800a0b4:	2b10      	cmp	r3, #16
 800a0b6:	f102 0202 	add.w	r2, r2, #2
 800a0ba:	f000 8095 	beq.w	800a1e8 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 800a0be:	2101      	movs	r1, #1
 800a0c0:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800a0c2:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 800a0c6:	43a1      	bics	r1, r4
 800a0c8:	d1f3      	bne.n	800a0b2 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800a0ca:	f8d9 c004 	ldr.w	ip, [r9, #4]
 800a0ce:	f00c 0103 	and.w	r1, ip, #3
 800a0d2:	1e4d      	subs	r5, r1, #1
 800a0d4:	2d01      	cmp	r5, #1
 800a0d6:	f240 808a 	bls.w	800a1ee <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800a0da:	2903      	cmp	r1, #3
 800a0dc:	f040 80ca 	bne.w	800a274 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a0e0:	4091      	lsls	r1, r2
 800a0e2:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 800a0e4:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800a0e6:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800a0e8:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800a0ea:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 800a0ee:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800a0f0:	d0df      	beq.n	800a0b2 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800a0f2:	2100      	movs	r1, #0
 800a0f4:	9103      	str	r1, [sp, #12]
 800a0f6:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800a0fa:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800a0fe:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800a102:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800a106:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800a10a:	9103      	str	r1, [sp, #12]
 800a10c:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800a10e:	f023 0103 	bic.w	r1, r3, #3
 800a112:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800a116:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800a11a:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800a11e:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800a120:	00bf      	lsls	r7, r7, #2
 800a122:	f04f 0e0f 	mov.w	lr, #15
 800a126:	fa0e fe07 	lsl.w	lr, lr, r7
 800a12a:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a12e:	4d70      	ldr	r5, [pc, #448]	; (800a2f0 <HAL_GPIO_Init+0x254>)
 800a130:	42a8      	cmp	r0, r5
 800a132:	d02e      	beq.n	800a192 <HAL_GPIO_Init+0xf6>
 800a134:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800a138:	42a8      	cmp	r0, r5
 800a13a:	f000 809f 	beq.w	800a27c <HAL_GPIO_Init+0x1e0>
 800a13e:	4d6d      	ldr	r5, [pc, #436]	; (800a2f4 <HAL_GPIO_Init+0x258>)
 800a140:	42a8      	cmp	r0, r5
 800a142:	f000 80a2 	beq.w	800a28a <HAL_GPIO_Init+0x1ee>
 800a146:	4d6c      	ldr	r5, [pc, #432]	; (800a2f8 <HAL_GPIO_Init+0x25c>)
 800a148:	42a8      	cmp	r0, r5
 800a14a:	f000 80a5 	beq.w	800a298 <HAL_GPIO_Init+0x1fc>
 800a14e:	4d6b      	ldr	r5, [pc, #428]	; (800a2fc <HAL_GPIO_Init+0x260>)
 800a150:	42a8      	cmp	r0, r5
 800a152:	f000 80a8 	beq.w	800a2a6 <HAL_GPIO_Init+0x20a>
 800a156:	4d6a      	ldr	r5, [pc, #424]	; (800a300 <HAL_GPIO_Init+0x264>)
 800a158:	42a8      	cmp	r0, r5
 800a15a:	f000 80b2 	beq.w	800a2c2 <HAL_GPIO_Init+0x226>
 800a15e:	4d69      	ldr	r5, [pc, #420]	; (800a304 <HAL_GPIO_Init+0x268>)
 800a160:	42a8      	cmp	r0, r5
 800a162:	f000 80b5 	beq.w	800a2d0 <HAL_GPIO_Init+0x234>
 800a166:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800a30c <HAL_GPIO_Init+0x270>
 800a16a:	4570      	cmp	r0, lr
 800a16c:	f000 80a2 	beq.w	800a2b4 <HAL_GPIO_Init+0x218>
 800a170:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800a310 <HAL_GPIO_Init+0x274>
 800a174:	4570      	cmp	r0, lr
 800a176:	f000 80b2 	beq.w	800a2de <HAL_GPIO_Init+0x242>
 800a17a:	f8df e198 	ldr.w	lr, [pc, #408]	; 800a314 <HAL_GPIO_Init+0x278>
 800a17e:	4570      	cmp	r0, lr
 800a180:	bf0c      	ite	eq
 800a182:	f04f 0e09 	moveq.w	lr, #9
 800a186:	f04f 0e0a 	movne.w	lr, #10
 800a18a:	fa0e f707 	lsl.w	r7, lr, r7
 800a18e:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800a192:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 800a196:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 800a198:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800a19c:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800a1a0:	bf0c      	ite	eq
 800a1a2:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a1a4:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 800a1a8:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800a1aa:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800a1ac:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 800a1b0:	bf0c      	ite	eq
 800a1b2:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a1b4:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 800a1b8:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 800a1ba:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800a1bc:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800a1c0:	bf0c      	ite	eq
 800a1c2:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a1c4:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 800a1c8:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800a1ca:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800a1cc:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a1d0:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 800a1d4:	bf0c      	ite	eq
 800a1d6:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a1d8:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a1dc:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 800a1de:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a1e0:	f102 0202 	add.w	r2, r2, #2
 800a1e4:	f47f af6b 	bne.w	800a0be <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 800a1e8:	b005      	add	sp, #20
 800a1ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a1ee:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800a1f2:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a1f6:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a1fa:	2503      	movs	r5, #3
 800a1fc:	fa05 f802 	lsl.w	r8, r5, r2
 800a200:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a204:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800a208:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800a20a:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800a20c:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800a210:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800a214:	409f      	lsls	r7, r3
 800a216:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a21a:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800a21e:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800a220:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800a222:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800a226:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800a22a:	4097      	lsls	r7, r2
 800a22c:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a230:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800a232:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a234:	fa01 f102 	lsl.w	r1, r1, r2
 800a238:	f47f af54 	bne.w	800a0e4 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800a23c:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800a240:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a244:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800a248:	f8de 7020 	ldr.w	r7, [lr, #32]
 800a24c:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a24e:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a252:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a256:	fa07 f708 	lsl.w	r7, r7, r8
 800a25a:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a25c:	270f      	movs	r7, #15
 800a25e:	fa07 f808 	lsl.w	r8, r7, r8
 800a262:	9f00      	ldr	r7, [sp, #0]
 800a264:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a268:	9f01      	ldr	r7, [sp, #4]
 800a26a:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800a26e:	f8ce 7020 	str.w	r7, [lr, #32]
 800a272:	e737      	b.n	800a0e4 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a274:	2503      	movs	r5, #3
 800a276:	4095      	lsls	r5, r2
 800a278:	43ed      	mvns	r5, r5
 800a27a:	e7d1      	b.n	800a220 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a27c:	f04f 0e01 	mov.w	lr, #1
 800a280:	fa0e f707 	lsl.w	r7, lr, r7
 800a284:	ea48 0807 	orr.w	r8, r8, r7
 800a288:	e783      	b.n	800a192 <HAL_GPIO_Init+0xf6>
 800a28a:	f04f 0e02 	mov.w	lr, #2
 800a28e:	fa0e f707 	lsl.w	r7, lr, r7
 800a292:	ea48 0807 	orr.w	r8, r8, r7
 800a296:	e77c      	b.n	800a192 <HAL_GPIO_Init+0xf6>
 800a298:	f04f 0e03 	mov.w	lr, #3
 800a29c:	fa0e f707 	lsl.w	r7, lr, r7
 800a2a0:	ea48 0807 	orr.w	r8, r8, r7
 800a2a4:	e775      	b.n	800a192 <HAL_GPIO_Init+0xf6>
 800a2a6:	f04f 0e04 	mov.w	lr, #4
 800a2aa:	fa0e f707 	lsl.w	r7, lr, r7
 800a2ae:	ea48 0807 	orr.w	r8, r8, r7
 800a2b2:	e76e      	b.n	800a192 <HAL_GPIO_Init+0xf6>
 800a2b4:	f04f 0e07 	mov.w	lr, #7
 800a2b8:	fa0e f707 	lsl.w	r7, lr, r7
 800a2bc:	ea48 0807 	orr.w	r8, r8, r7
 800a2c0:	e767      	b.n	800a192 <HAL_GPIO_Init+0xf6>
 800a2c2:	f04f 0e05 	mov.w	lr, #5
 800a2c6:	fa0e f707 	lsl.w	r7, lr, r7
 800a2ca:	ea48 0807 	orr.w	r8, r8, r7
 800a2ce:	e760      	b.n	800a192 <HAL_GPIO_Init+0xf6>
 800a2d0:	f04f 0e06 	mov.w	lr, #6
 800a2d4:	fa0e f707 	lsl.w	r7, lr, r7
 800a2d8:	ea48 0807 	orr.w	r8, r8, r7
 800a2dc:	e759      	b.n	800a192 <HAL_GPIO_Init+0xf6>
 800a2de:	f04f 0e08 	mov.w	lr, #8
 800a2e2:	fa0e f707 	lsl.w	r7, lr, r7
 800a2e6:	ea48 0807 	orr.w	r8, r8, r7
 800a2ea:	e752      	b.n	800a192 <HAL_GPIO_Init+0xf6>
 800a2ec:	40013c00 	.word	0x40013c00
 800a2f0:	40020000 	.word	0x40020000
 800a2f4:	40020800 	.word	0x40020800
 800a2f8:	40020c00 	.word	0x40020c00
 800a2fc:	40021000 	.word	0x40021000
 800a300:	40021400 	.word	0x40021400
 800a304:	40021800 	.word	0x40021800
 800a308:	40023800 	.word	0x40023800
 800a30c:	40021c00 	.word	0x40021c00
 800a310:	40022000 	.word	0x40022000
 800a314:	40022400 	.word	0x40022400

0800a318 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800a318:	6903      	ldr	r3, [r0, #16]
 800a31a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800a31c:	bf14      	ite	ne
 800a31e:	2001      	movne	r0, #1
 800a320:	2000      	moveq	r0, #0
 800a322:	4770      	bx	lr

0800a324 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800a324:	b902      	cbnz	r2, 800a328 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800a326:	0409      	lsls	r1, r1, #16
 800a328:	6181      	str	r1, [r0, #24]
  }
}
 800a32a:	4770      	bx	lr

0800a32c <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800a32c:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800a32e:	ea01 0203 	and.w	r2, r1, r3
 800a332:	ea21 0103 	bic.w	r1, r1, r3
 800a336:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800a33a:	6181      	str	r1, [r0, #24]
}
 800a33c:	4770      	bx	lr
 800a33e:	bf00      	nop

0800a340 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800a340:	4770      	bx	lr
 800a342:	bf00      	nop

0800a344 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800a344:	4a04      	ldr	r2, [pc, #16]	; (800a358 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800a346:	6951      	ldr	r1, [r2, #20]
 800a348:	4201      	tst	r1, r0
 800a34a:	d100      	bne.n	800a34e <HAL_GPIO_EXTI_IRQHandler+0xa>
 800a34c:	4770      	bx	lr
{
 800a34e:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800a350:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800a352:	f7ff fff5 	bl	800a340 <HAL_GPIO_EXTI_Callback>
}
 800a356:	bd08      	pop	{r3, pc}
 800a358:	40013c00 	.word	0x40013c00

0800a35c <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800a35c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a360:	6804      	ldr	r4, [r0, #0]
{
 800a362:	b083      	sub	sp, #12
 800a364:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a366:	6823      	ldr	r3, [r4, #0]
{
 800a368:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800a36c:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a370:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a374:	4606      	mov	r6, r0
 800a376:	468a      	mov	sl, r1
 800a378:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a37a:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a37c:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a380:	d136      	bne.n	800a3f0 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a382:	6965      	ldr	r5, [r4, #20]
 800a384:	07e8      	lsls	r0, r5, #31
 800a386:	d5fc      	bpl.n	800a382 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a388:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800a38c:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a38e:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a392:	d003      	beq.n	800a39c <I2C_RequestMemoryWrite+0x40>
 800a394:	e04f      	b.n	800a436 <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a396:	6961      	ldr	r1, [r4, #20]
 800a398:	054d      	lsls	r5, r1, #21
 800a39a:	d45d      	bmi.n	800a458 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a39c:	6961      	ldr	r1, [r4, #20]
 800a39e:	078b      	lsls	r3, r1, #30
 800a3a0:	d5f9      	bpl.n	800a396 <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a3a2:	2300      	movs	r3, #0
 800a3a4:	9301      	str	r3, [sp, #4]
 800a3a6:	6963      	ldr	r3, [r4, #20]
 800a3a8:	9301      	str	r3, [sp, #4]
 800a3aa:	69a3      	ldr	r3, [r4, #24]
 800a3ac:	9301      	str	r3, [sp, #4]
 800a3ae:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a3b0:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a3b4:	f040 8088 	bne.w	800a4c8 <I2C_RequestMemoryWrite+0x16c>
 800a3b8:	6963      	ldr	r3, [r4, #20]
 800a3ba:	061a      	lsls	r2, r3, #24
 800a3bc:	d464      	bmi.n	800a488 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a3be:	6963      	ldr	r3, [r4, #20]
 800a3c0:	055b      	lsls	r3, r3, #21
 800a3c2:	d5f9      	bpl.n	800a3b8 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800a3c4:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a3c6:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a3ca:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a3cc:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a3ce:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a3d0:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a3d4:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a3d8:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a3da:	f043 0304 	orr.w	r3, r3, #4
 800a3de:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a3e0:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800a3e2:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a3e4:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a3e6:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a3ea:	d066      	beq.n	800a4ba <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800a3ec:	2001      	movs	r0, #1
 800a3ee:	e01f      	b.n	800a430 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a3f0:	6963      	ldr	r3, [r4, #20]
 800a3f2:	07d9      	lsls	r1, r3, #31
 800a3f4:	d4c8      	bmi.n	800a388 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a3f6:	f7ff fdb1 	bl	8009f5c <HAL_GetTick>
 800a3fa:	eba0 000b 	sub.w	r0, r0, fp
 800a3fe:	4581      	cmp	r9, r0
 800a400:	d304      	bcc.n	800a40c <I2C_RequestMemoryWrite+0xb0>
 800a402:	f1b9 0f00 	cmp.w	r9, #0
 800a406:	d001      	beq.n	800a40c <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a408:	6834      	ldr	r4, [r6, #0]
 800a40a:	e7b7      	b.n	800a37c <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a40c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a40e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a410:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a412:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a416:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a41a:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a41c:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a41e:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a422:	f042 0220 	orr.w	r2, r2, #32
 800a426:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a428:	680b      	ldr	r3, [r1, #0]
 800a42a:	05dc      	lsls	r4, r3, #23
 800a42c:	d435      	bmi.n	800a49a <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800a42e:	2003      	movs	r0, #3
}
 800a430:	b003      	add	sp, #12
 800a432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a436:	6963      	ldr	r3, [r4, #20]
 800a438:	0798      	lsls	r0, r3, #30
 800a43a:	d4b2      	bmi.n	800a3a2 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a43c:	6963      	ldr	r3, [r4, #20]
 800a43e:	055a      	lsls	r2, r3, #21
 800a440:	d40a      	bmi.n	800a458 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a442:	f7ff fd8b 	bl	8009f5c <HAL_GetTick>
 800a446:	eba0 000b 	sub.w	r0, r0, fp
 800a44a:	4581      	cmp	r9, r0
 800a44c:	d34e      	bcc.n	800a4ec <I2C_RequestMemoryWrite+0x190>
 800a44e:	f1b9 0f00 	cmp.w	r9, #0
 800a452:	d04b      	beq.n	800a4ec <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a454:	6834      	ldr	r4, [r6, #0]
 800a456:	e79a      	b.n	800a38e <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a458:	6823      	ldr	r3, [r4, #0]
 800a45a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a45e:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a460:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a462:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a466:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a468:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a46a:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a46c:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a470:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a474:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a476:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a47a:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a47e:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a480:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a482:	b003      	add	sp, #12
 800a484:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a488:	f1b8 0f01 	cmp.w	r8, #1
 800a48c:	d109      	bne.n	800a4a2 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a48e:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800a490:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a492:	6127      	str	r7, [r4, #16]
}
 800a494:	b003      	add	sp, #12
 800a496:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a49a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a49e:	6433      	str	r3, [r6, #64]	; 0x40
 800a4a0:	e7c5      	b.n	800a42e <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a4a2:	0a3b      	lsrs	r3, r7, #8
 800a4a4:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a4a6:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a4aa:	d12e      	bne.n	800a50a <I2C_RequestMemoryWrite+0x1ae>
 800a4ac:	6963      	ldr	r3, [r4, #20]
 800a4ae:	0619      	lsls	r1, r3, #24
 800a4b0:	d4ed      	bmi.n	800a48e <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a4b2:	6963      	ldr	r3, [r4, #20]
 800a4b4:	055a      	lsls	r2, r3, #21
 800a4b6:	d5f9      	bpl.n	800a4ac <I2C_RequestMemoryWrite+0x150>
 800a4b8:	e784      	b.n	800a3c4 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a4ba:	6832      	ldr	r2, [r6, #0]
 800a4bc:	6813      	ldr	r3, [r2, #0]
 800a4be:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a4c2:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a4c4:	6013      	str	r3, [r2, #0]
 800a4c6:	e7b3      	b.n	800a430 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a4c8:	6963      	ldr	r3, [r4, #20]
 800a4ca:	061d      	lsls	r5, r3, #24
 800a4cc:	d4dc      	bmi.n	800a488 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a4ce:	6963      	ldr	r3, [r4, #20]
 800a4d0:	0559      	lsls	r1, r3, #21
 800a4d2:	f53f af77 	bmi.w	800a3c4 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a4d6:	f7ff fd41 	bl	8009f5c <HAL_GetTick>
 800a4da:	eba0 000b 	sub.w	r0, r0, fp
 800a4de:	4581      	cmp	r9, r0
 800a4e0:	d325      	bcc.n	800a52e <I2C_RequestMemoryWrite+0x1d2>
 800a4e2:	f1b9 0f00 	cmp.w	r9, #0
 800a4e6:	d022      	beq.n	800a52e <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a4e8:	6834      	ldr	r4, [r6, #0]
 800a4ea:	e761      	b.n	800a3b0 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a4ec:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a4ee:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a4f0:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a4f2:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a4f6:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a4fa:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a4fc:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a500:	f043 0320 	orr.w	r3, r3, #32
 800a504:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800a506:	2001      	movs	r0, #1
 800a508:	e792      	b.n	800a430 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a50a:	6963      	ldr	r3, [r4, #20]
 800a50c:	061b      	lsls	r3, r3, #24
 800a50e:	d4be      	bmi.n	800a48e <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a510:	6963      	ldr	r3, [r4, #20]
 800a512:	0558      	lsls	r0, r3, #21
 800a514:	f53f af56 	bmi.w	800a3c4 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a518:	f7ff fd20 	bl	8009f5c <HAL_GetTick>
 800a51c:	eba0 000b 	sub.w	r0, r0, fp
 800a520:	4581      	cmp	r9, r0
 800a522:	d304      	bcc.n	800a52e <I2C_RequestMemoryWrite+0x1d2>
 800a524:	f1b9 0f00 	cmp.w	r9, #0
 800a528:	d001      	beq.n	800a52e <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a52a:	6834      	ldr	r4, [r6, #0]
 800a52c:	e7bb      	b.n	800a4a6 <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a52e:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a530:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a532:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a534:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a538:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a53c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a53e:	4313      	orrs	r3, r2
 800a540:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a542:	e74d      	b.n	800a3e0 <I2C_RequestMemoryWrite+0x84>

0800a544 <I2C_RequestMemoryRead>:
{
 800a544:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a548:	6804      	ldr	r4, [r0, #0]
{
 800a54a:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a54c:	6823      	ldr	r3, [r4, #0]
 800a54e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a552:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a554:	6823      	ldr	r3, [r4, #0]
{
 800a556:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a558:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a55c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800a560:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a564:	6023      	str	r3, [r4, #0]
{
 800a566:	4606      	mov	r6, r0
 800a568:	468b      	mov	fp, r1
 800a56a:	4617      	mov	r7, r2
 800a56c:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a570:	d13a      	bne.n	800a5e8 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a572:	6965      	ldr	r5, [r4, #20]
 800a574:	07eb      	lsls	r3, r5, #31
 800a576:	d5fc      	bpl.n	800a572 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a578:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800a57c:	6123      	str	r3, [r4, #16]
 800a57e:	fa5f fb8b 	uxtb.w	fp, fp
 800a582:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a586:	d003      	beq.n	800a590 <I2C_RequestMemoryRead+0x4c>
 800a588:	e069      	b.n	800a65e <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a58a:	6965      	ldr	r5, [r4, #20]
 800a58c:	056a      	lsls	r2, r5, #21
 800a58e:	d44e      	bmi.n	800a62e <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a590:	6965      	ldr	r5, [r4, #20]
 800a592:	07a9      	lsls	r1, r5, #30
 800a594:	d5f9      	bpl.n	800a58a <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a596:	2300      	movs	r3, #0
 800a598:	9301      	str	r3, [sp, #4]
 800a59a:	6963      	ldr	r3, [r4, #20]
 800a59c:	9301      	str	r3, [sp, #4]
 800a59e:	69a3      	ldr	r3, [r4, #24]
 800a5a0:	9301      	str	r3, [sp, #4]
 800a5a2:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a5a4:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a5a8:	f040 80bd 	bne.w	800a726 <I2C_RequestMemoryRead+0x1e2>
 800a5ac:	6963      	ldr	r3, [r4, #20]
 800a5ae:	0618      	lsls	r0, r3, #24
 800a5b0:	d468      	bmi.n	800a684 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a5b2:	6963      	ldr	r3, [r4, #20]
 800a5b4:	0559      	lsls	r1, r3, #21
 800a5b6:	d5f9      	bpl.n	800a5ac <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a5b8:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a5ba:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a5be:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a5c0:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a5c2:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a5c4:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a5c8:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a5cc:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a5ce:	f043 0304 	orr.w	r3, r3, #4
 800a5d2:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a5d4:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a5d6:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a5d8:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a5da:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a5de:	d070      	beq.n	800a6c2 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800a5e0:	2001      	movs	r0, #1
}
 800a5e2:	b003      	add	sp, #12
 800a5e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a5e8:	6963      	ldr	r3, [r4, #20]
 800a5ea:	07dd      	lsls	r5, r3, #31
 800a5ec:	d4c4      	bmi.n	800a578 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a5ee:	f7ff fcb5 	bl	8009f5c <HAL_GetTick>
 800a5f2:	eba0 0009 	sub.w	r0, r0, r9
 800a5f6:	4582      	cmp	sl, r0
 800a5f8:	d304      	bcc.n	800a604 <I2C_RequestMemoryRead+0xc0>
 800a5fa:	f1ba 0f00 	cmp.w	sl, #0
 800a5fe:	d001      	beq.n	800a604 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a600:	6834      	ldr	r4, [r6, #0]
 800a602:	e7b3      	b.n	800a56c <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a604:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a606:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a608:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a60a:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a60e:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a612:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a614:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a616:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a61a:	f042 0220 	orr.w	r2, r2, #32
 800a61e:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a620:	680b      	ldr	r3, [r1, #0]
 800a622:	05dc      	lsls	r4, r3, #23
 800a624:	d43d      	bmi.n	800a6a2 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800a626:	2003      	movs	r0, #3
}
 800a628:	b003      	add	sp, #12
 800a62a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a62e:	6823      	ldr	r3, [r4, #0]
 800a630:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a634:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a636:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a638:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a63c:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a63e:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a640:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a642:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a646:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a64a:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a64c:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a650:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a654:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a656:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a658:	b003      	add	sp, #12
 800a65a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a65e:	6963      	ldr	r3, [r4, #20]
 800a660:	079b      	lsls	r3, r3, #30
 800a662:	d498      	bmi.n	800a596 <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a664:	6963      	ldr	r3, [r4, #20]
 800a666:	0558      	lsls	r0, r3, #21
 800a668:	d4e1      	bmi.n	800a62e <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a66a:	f7ff fc77 	bl	8009f5c <HAL_GetTick>
 800a66e:	eba0 0009 	sub.w	r0, r0, r9
 800a672:	4582      	cmp	sl, r0
 800a674:	f0c0 808f 	bcc.w	800a796 <I2C_RequestMemoryRead+0x252>
 800a678:	f1ba 0f00 	cmp.w	sl, #0
 800a67c:	f000 808b 	beq.w	800a796 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a680:	6834      	ldr	r4, [r6, #0]
 800a682:	e77e      	b.n	800a582 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a684:	f1b8 0f01 	cmp.w	r8, #1
 800a688:	d10f      	bne.n	800a6aa <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a68a:	b2ff      	uxtb	r7, r7
 800a68c:	6127      	str	r7, [r4, #16]
 800a68e:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a692:	d16e      	bne.n	800a772 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a694:	6963      	ldr	r3, [r4, #20]
 800a696:	061b      	lsls	r3, r3, #24
 800a698:	d41a      	bmi.n	800a6d0 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a69a:	6963      	ldr	r3, [r4, #20]
 800a69c:	055f      	lsls	r7, r3, #21
 800a69e:	d5f9      	bpl.n	800a694 <I2C_RequestMemoryRead+0x150>
 800a6a0:	e78a      	b.n	800a5b8 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a6a2:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a6a6:	6433      	str	r3, [r6, #64]	; 0x40
 800a6a8:	e7bd      	b.n	800a626 <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a6aa:	0a3b      	lsrs	r3, r7, #8
 800a6ac:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a6ae:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a6b2:	d17e      	bne.n	800a7b2 <I2C_RequestMemoryRead+0x26e>
 800a6b4:	6963      	ldr	r3, [r4, #20]
 800a6b6:	061d      	lsls	r5, r3, #24
 800a6b8:	d4e7      	bmi.n	800a68a <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a6ba:	6963      	ldr	r3, [r4, #20]
 800a6bc:	0558      	lsls	r0, r3, #21
 800a6be:	d5f9      	bpl.n	800a6b4 <I2C_RequestMemoryRead+0x170>
 800a6c0:	e77a      	b.n	800a5b8 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a6c2:	6832      	ldr	r2, [r6, #0]
 800a6c4:	6813      	ldr	r3, [r2, #0]
 800a6c6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800a6ca:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a6cc:	6013      	str	r3, [r2, #0]
 800a6ce:	e7ab      	b.n	800a628 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a6d0:	6823      	ldr	r3, [r4, #0]
 800a6d2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a6d6:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a6d8:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a6dc:	d113      	bne.n	800a706 <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a6de:	6963      	ldr	r3, [r4, #20]
 800a6e0:	07d8      	lsls	r0, r3, #31
 800a6e2:	d5fc      	bpl.n	800a6de <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800a6e4:	f04b 0301 	orr.w	r3, fp, #1
 800a6e8:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a6ea:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a6ee:	d003      	beq.n	800a6f8 <I2C_RequestMemoryRead+0x1b4>
 800a6f0:	e02b      	b.n	800a74a <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a6f2:	6963      	ldr	r3, [r4, #20]
 800a6f4:	055b      	lsls	r3, r3, #21
 800a6f6:	d49a      	bmi.n	800a62e <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a6f8:	6963      	ldr	r3, [r4, #20]
 800a6fa:	43db      	mvns	r3, r3
 800a6fc:	f013 0302 	ands.w	r3, r3, #2
 800a700:	d1f7      	bne.n	800a6f2 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800a702:	4618      	mov	r0, r3
 800a704:	e790      	b.n	800a628 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a706:	6963      	ldr	r3, [r4, #20]
 800a708:	07d9      	lsls	r1, r3, #31
 800a70a:	d4eb      	bmi.n	800a6e4 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a70c:	f7ff fc26 	bl	8009f5c <HAL_GetTick>
 800a710:	eba0 0009 	sub.w	r0, r0, r9
 800a714:	4582      	cmp	sl, r0
 800a716:	f4ff af75 	bcc.w	800a604 <I2C_RequestMemoryRead+0xc0>
 800a71a:	f1ba 0f00 	cmp.w	sl, #0
 800a71e:	f43f af71 	beq.w	800a604 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a722:	6834      	ldr	r4, [r6, #0]
 800a724:	e7d8      	b.n	800a6d8 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a726:	6963      	ldr	r3, [r4, #20]
 800a728:	061a      	lsls	r2, r3, #24
 800a72a:	d4ab      	bmi.n	800a684 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a72c:	6963      	ldr	r3, [r4, #20]
 800a72e:	055d      	lsls	r5, r3, #21
 800a730:	f53f af42 	bmi.w	800a5b8 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a734:	f7ff fc12 	bl	8009f5c <HAL_GetTick>
 800a738:	eba0 0009 	sub.w	r0, r0, r9
 800a73c:	4582      	cmp	sl, r0
 800a73e:	d34b      	bcc.n	800a7d8 <I2C_RequestMemoryRead+0x294>
 800a740:	f1ba 0f00 	cmp.w	sl, #0
 800a744:	d048      	beq.n	800a7d8 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a746:	6834      	ldr	r4, [r6, #0]
 800a748:	e72c      	b.n	800a5a4 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a74a:	6963      	ldr	r3, [r4, #20]
 800a74c:	43db      	mvns	r3, r3
 800a74e:	f013 0302 	ands.w	r3, r3, #2
 800a752:	d0d6      	beq.n	800a702 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a754:	6963      	ldr	r3, [r4, #20]
 800a756:	055a      	lsls	r2, r3, #21
 800a758:	f53f af69 	bmi.w	800a62e <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a75c:	f7ff fbfe 	bl	8009f5c <HAL_GetTick>
 800a760:	eba0 0009 	sub.w	r0, r0, r9
 800a764:	4582      	cmp	sl, r0
 800a766:	d316      	bcc.n	800a796 <I2C_RequestMemoryRead+0x252>
 800a768:	f1ba 0f00 	cmp.w	sl, #0
 800a76c:	d013      	beq.n	800a796 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a76e:	6834      	ldr	r4, [r6, #0]
 800a770:	e7bb      	b.n	800a6ea <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a772:	6963      	ldr	r3, [r4, #20]
 800a774:	061d      	lsls	r5, r3, #24
 800a776:	d4ab      	bmi.n	800a6d0 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a778:	6963      	ldr	r3, [r4, #20]
 800a77a:	055a      	lsls	r2, r3, #21
 800a77c:	f53f af1c 	bmi.w	800a5b8 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a780:	f7ff fbec 	bl	8009f5c <HAL_GetTick>
 800a784:	eba0 0009 	sub.w	r0, r0, r9
 800a788:	4582      	cmp	sl, r0
 800a78a:	d325      	bcc.n	800a7d8 <I2C_RequestMemoryRead+0x294>
 800a78c:	f1ba 0f00 	cmp.w	sl, #0
 800a790:	d022      	beq.n	800a7d8 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a792:	6834      	ldr	r4, [r6, #0]
 800a794:	e77b      	b.n	800a68e <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a796:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a798:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a79a:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a79c:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a7a0:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a7a4:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a7a6:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a7aa:	f043 0320 	orr.w	r3, r3, #32
 800a7ae:	6433      	str	r3, [r6, #64]	; 0x40
 800a7b0:	e716      	b.n	800a5e0 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a7b2:	6963      	ldr	r3, [r4, #20]
 800a7b4:	0619      	lsls	r1, r3, #24
 800a7b6:	f53f af68 	bmi.w	800a68a <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a7ba:	6963      	ldr	r3, [r4, #20]
 800a7bc:	055b      	lsls	r3, r3, #21
 800a7be:	f53f aefb 	bmi.w	800a5b8 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a7c2:	f7ff fbcb 	bl	8009f5c <HAL_GetTick>
 800a7c6:	eba0 0009 	sub.w	r0, r0, r9
 800a7ca:	4582      	cmp	sl, r0
 800a7cc:	d304      	bcc.n	800a7d8 <I2C_RequestMemoryRead+0x294>
 800a7ce:	f1ba 0f00 	cmp.w	sl, #0
 800a7d2:	d001      	beq.n	800a7d8 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a7d4:	6834      	ldr	r4, [r6, #0]
 800a7d6:	e76a      	b.n	800a6ae <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a7d8:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a7da:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a7dc:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a7de:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a7e2:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a7e6:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a7e8:	4313      	orrs	r3, r2
 800a7ea:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a7ec:	e6f2      	b.n	800a5d4 <I2C_RequestMemoryRead+0x90>
 800a7ee:	bf00      	nop

0800a7f0 <HAL_I2C_Init>:
  if (hi2c == NULL)
 800a7f0:	2800      	cmp	r0, #0
 800a7f2:	f000 80b9 	beq.w	800a968 <HAL_I2C_Init+0x178>
{
 800a7f6:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800a7f8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a7fc:	4604      	mov	r4, r0
 800a7fe:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a802:	2b00      	cmp	r3, #0
 800a804:	f000 8098 	beq.w	800a938 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800a808:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800a80a:	2224      	movs	r2, #36	; 0x24
 800a80c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800a810:	681a      	ldr	r2, [r3, #0]
 800a812:	f022 0201 	bic.w	r2, r2, #1
 800a816:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800a818:	681a      	ldr	r2, [r3, #0]
 800a81a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800a81e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800a820:	681a      	ldr	r2, [r3, #0]
 800a822:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800a826:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800a828:	f001 fe70 	bl	800c50c <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a82c:	6865      	ldr	r5, [r4, #4]
 800a82e:	4b4f      	ldr	r3, [pc, #316]	; (800a96c <HAL_I2C_Init+0x17c>)
 800a830:	429d      	cmp	r5, r3
 800a832:	d84f      	bhi.n	800a8d4 <HAL_I2C_Init+0xe4>
 800a834:	4b4e      	ldr	r3, [pc, #312]	; (800a970 <HAL_I2C_Init+0x180>)
 800a836:	4298      	cmp	r0, r3
 800a838:	d97c      	bls.n	800a934 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800a83a:	4b4e      	ldr	r3, [pc, #312]	; (800a974 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a83c:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800a83e:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a842:	1e43      	subs	r3, r0, #1
 800a844:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a848:	6822      	ldr	r2, [r4, #0]
 800a84a:	6851      	ldr	r1, [r2, #4]
 800a84c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a850:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800a854:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a856:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800a858:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a85c:	f10c 0c01 	add.w	ip, ip, #1
 800a860:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a864:	ea41 010c 	orr.w	r1, r1, ip
 800a868:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a86a:	69d1      	ldr	r1, [r2, #28]
 800a86c:	f640 70fc 	movw	r0, #4092	; 0xffc
 800a870:	3301      	adds	r3, #1
 800a872:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a876:	4203      	tst	r3, r0
 800a878:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a87c:	d161      	bne.n	800a942 <HAL_I2C_Init+0x152>
 800a87e:	2304      	movs	r3, #4
 800a880:	430b      	orrs	r3, r1
 800a882:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800a884:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800a888:	6811      	ldr	r1, [r2, #0]
 800a88a:	4303      	orrs	r3, r0
 800a88c:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800a890:	430b      	orrs	r3, r1
 800a892:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800a894:	6891      	ldr	r1, [r2, #8]
 800a896:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800a89a:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800a89e:	4303      	orrs	r3, r0
 800a8a0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a8a4:	430b      	orrs	r3, r1
 800a8a6:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800a8a8:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800a8ac:	68d1      	ldr	r1, [r2, #12]
 800a8ae:	4303      	orrs	r3, r0
 800a8b0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a8b4:	430b      	orrs	r3, r1
 800a8b6:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800a8b8:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a8ba:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800a8bc:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800a8c0:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800a8c2:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a8c4:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800a8c6:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800a8ca:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800a8cc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800a8d0:	4618      	mov	r0, r3
}
 800a8d2:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a8d4:	4b28      	ldr	r3, [pc, #160]	; (800a978 <HAL_I2C_Init+0x188>)
 800a8d6:	4298      	cmp	r0, r3
 800a8d8:	d92c      	bls.n	800a934 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a8da:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800a8dc:	4b25      	ldr	r3, [pc, #148]	; (800a974 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a8de:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a8e0:	4e26      	ldr	r6, [pc, #152]	; (800a97c <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800a8e2:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a8e6:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a8ea:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800a8ee:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800a8f0:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a8f4:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800a8f8:	fb01 f303 	mul.w	r3, r1, r3
 800a8fc:	fba6 6303 	umull	r6, r3, r6, r3
 800a900:	6a11      	ldr	r1, [r2, #32]
 800a902:	099b      	lsrs	r3, r3, #6
 800a904:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a908:	3301      	adds	r3, #1
 800a90a:	430b      	orrs	r3, r1
 800a90c:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a90e:	69d1      	ldr	r1, [r2, #28]
 800a910:	68a3      	ldr	r3, [r4, #8]
 800a912:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a916:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a91a:	b9ab      	cbnz	r3, 800a948 <HAL_I2C_Init+0x158>
 800a91c:	1e43      	subs	r3, r0, #1
 800a91e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800a922:	fbb3 f3f5 	udiv	r3, r3, r5
 800a926:	3301      	adds	r3, #1
 800a928:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a92c:	b1d3      	cbz	r3, 800a964 <HAL_I2C_Init+0x174>
 800a92e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800a932:	e7a5      	b.n	800a880 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a934:	2001      	movs	r0, #1
}
 800a936:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800a938:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800a93c:	f7f7 feb2 	bl	80026a4 <HAL_I2C_MspInit>
 800a940:	e762      	b.n	800a808 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a942:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a946:	e79b      	b.n	800a880 <HAL_I2C_Init+0x90>
 800a948:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a94c:	1e43      	subs	r3, r0, #1
 800a94e:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a952:	fbb3 f3f5 	udiv	r3, r3, r5
 800a956:	3301      	adds	r3, #1
 800a958:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a95c:	b113      	cbz	r3, 800a964 <HAL_I2C_Init+0x174>
 800a95e:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800a962:	e78d      	b.n	800a880 <HAL_I2C_Init+0x90>
 800a964:	2301      	movs	r3, #1
 800a966:	e78b      	b.n	800a880 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a968:	2001      	movs	r0, #1
}
 800a96a:	4770      	bx	lr
 800a96c:	000186a0 	.word	0x000186a0
 800a970:	001e847f 	.word	0x001e847f
 800a974:	431bde83 	.word	0x431bde83
 800a978:	003d08ff 	.word	0x003d08ff
 800a97c:	10624dd3 	.word	0x10624dd3

0800a980 <HAL_I2C_Mem_Write>:
{
 800a980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a984:	4604      	mov	r4, r0
 800a986:	b083      	sub	sp, #12
 800a988:	4699      	mov	r9, r3
 800a98a:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800a98e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800a990:	460f      	mov	r7, r1
 800a992:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a994:	f7ff fae2 	bl	8009f5c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a998:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a99c:	2b20      	cmp	r3, #32
 800a99e:	d004      	beq.n	800a9aa <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800a9a0:	2702      	movs	r7, #2
}
 800a9a2:	4638      	mov	r0, r7
 800a9a4:	b003      	add	sp, #12
 800a9a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a9aa:	4605      	mov	r5, r0
 800a9ac:	e005      	b.n	800a9ba <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a9ae:	f7ff fad5 	bl	8009f5c <HAL_GetTick>
 800a9b2:	1b40      	subs	r0, r0, r5
 800a9b4:	2819      	cmp	r0, #25
 800a9b6:	f200 80a8 	bhi.w	800ab0a <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a9ba:	6820      	ldr	r0, [r4, #0]
 800a9bc:	6983      	ldr	r3, [r0, #24]
 800a9be:	ea6f 0c03 	mvn.w	ip, r3
 800a9c2:	f01c 0b02 	ands.w	fp, ip, #2
 800a9c6:	d0f2      	beq.n	800a9ae <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800a9c8:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a9cc:	2b01      	cmp	r3, #1
 800a9ce:	d0e7      	beq.n	800a9a0 <HAL_I2C_Mem_Write+0x20>
 800a9d0:	2301      	movs	r3, #1
 800a9d2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a9d6:	6803      	ldr	r3, [r0, #0]
 800a9d8:	07db      	lsls	r3, r3, #31
 800a9da:	d572      	bpl.n	800aac2 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a9dc:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a9de:	6807      	ldr	r7, [r0, #0]
 800a9e0:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800a9e4:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800a9e6:	980c      	ldr	r0, [sp, #48]	; 0x30
 800a9e8:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a9ea:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a9ec:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a9f0:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a9f4:	2040      	movs	r0, #64	; 0x40
 800a9f6:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a9fa:	2000      	movs	r0, #0
 800a9fc:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a9fe:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800aa02:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800aa04:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800aa06:	4856      	ldr	r0, [pc, #344]	; (800ab60 <HAL_I2C_Mem_Write+0x1e0>)
 800aa08:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800aa0a:	464b      	mov	r3, r9
 800aa0c:	4642      	mov	r2, r8
 800aa0e:	4620      	mov	r0, r4
 800aa10:	f7ff fca4 	bl	800a35c <I2C_RequestMemoryWrite>
 800aa14:	4607      	mov	r7, r0
 800aa16:	bb00      	cbnz	r0, 800aa5a <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800aa18:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800aa1a:	2b00      	cmp	r3, #0
 800aa1c:	f000 809e 	beq.w	800ab5c <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800aa20:	6823      	ldr	r3, [r4, #0]
 800aa22:	1c72      	adds	r2, r6, #1
 800aa24:	d159      	bne.n	800aada <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800aa26:	695a      	ldr	r2, [r3, #20]
 800aa28:	0610      	lsls	r0, r2, #24
 800aa2a:	d41b      	bmi.n	800aa64 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800aa2c:	695a      	ldr	r2, [r3, #20]
 800aa2e:	0551      	lsls	r1, r2, #21
 800aa30:	d5f9      	bpl.n	800aa26 <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800aa32:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800aa34:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800aa38:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800aa3a:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800aa3c:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800aa3e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800aa42:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800aa46:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800aa48:	f043 0304 	orr.w	r3, r3, #4
 800aa4c:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800aa4e:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800aa50:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800aa52:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800aa54:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800aa58:	d038      	beq.n	800aacc <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800aa5a:	2701      	movs	r7, #1
}
 800aa5c:	4638      	mov	r0, r7
 800aa5e:	b003      	add	sp, #12
 800aa60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800aa64:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800aa68:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800aa6c:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800aa6e:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800aa72:	f811 2b01 	ldrb.w	r2, [r1], #1
 800aa76:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800aa78:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800aa7a:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800aa7c:	3a01      	subs	r2, #1
 800aa7e:	b292      	uxth	r2, r2
 800aa80:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800aa82:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800aa84:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800aa86:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800aa88:	0740      	lsls	r0, r0, #29
 800aa8a:	d517      	bpl.n	800aabc <HAL_I2C_Mem_Write+0x13c>
 800aa8c:	b942      	cbnz	r2, 800aaa0 <HAL_I2C_Mem_Write+0x120>
 800aa8e:	1c72      	adds	r2, r6, #1
 800aa90:	d156      	bne.n	800ab40 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800aa92:	695a      	ldr	r2, [r3, #20]
 800aa94:	0750      	lsls	r0, r2, #29
 800aa96:	d446      	bmi.n	800ab26 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800aa98:	695a      	ldr	r2, [r3, #20]
 800aa9a:	0551      	lsls	r1, r2, #21
 800aa9c:	d5f9      	bpl.n	800aa92 <HAL_I2C_Mem_Write+0x112>
 800aa9e:	e7c8      	b.n	800aa32 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800aaa0:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800aaa4:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800aaa6:	f10c 0102 	add.w	r1, ip, #2
 800aaaa:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800aaac:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800aaae:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800aab2:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800aab4:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800aab6:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800aab8:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800aaba:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800aabc:	2a00      	cmp	r2, #0
 800aabe:	d1b0      	bne.n	800aa22 <HAL_I2C_Mem_Write+0xa2>
 800aac0:	e7e5      	b.n	800aa8e <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800aac2:	6803      	ldr	r3, [r0, #0]
 800aac4:	f043 0301 	orr.w	r3, r3, #1
 800aac8:	6003      	str	r3, [r0, #0]
 800aaca:	e787      	b.n	800a9dc <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aacc:	6822      	ldr	r2, [r4, #0]
 800aace:	6813      	ldr	r3, [r2, #0]
 800aad0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800aad4:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aad6:	6013      	str	r3, [r2, #0]
 800aad8:	e763      	b.n	800a9a2 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800aada:	695a      	ldr	r2, [r3, #20]
 800aadc:	0612      	lsls	r2, r2, #24
 800aade:	d4c1      	bmi.n	800aa64 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800aae0:	695a      	ldr	r2, [r3, #20]
 800aae2:	0551      	lsls	r1, r2, #21
 800aae4:	d4a5      	bmi.n	800aa32 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aae6:	f7ff fa39 	bl	8009f5c <HAL_GetTick>
 800aaea:	1b40      	subs	r0, r0, r5
 800aaec:	4286      	cmp	r6, r0
 800aaee:	d301      	bcc.n	800aaf4 <HAL_I2C_Mem_Write+0x174>
 800aaf0:	2e00      	cmp	r6, #0
 800aaf2:	d195      	bne.n	800aa20 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800aaf4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800aaf6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800aaf8:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800aafa:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800aafe:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ab02:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ab04:	4313      	orrs	r3, r2
 800ab06:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800ab08:	e7a1      	b.n	800aa4e <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800ab0a:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ab0c:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ab10:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ab14:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ab18:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ab1a:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ab1e:	f043 0320 	orr.w	r3, r3, #32
 800ab22:	6423      	str	r3, [r4, #64]	; 0x40
 800ab24:	e73c      	b.n	800a9a0 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab26:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab28:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab2a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800ab2e:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab30:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800ab32:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800ab36:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab3a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800ab3e:	e730      	b.n	800a9a2 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800ab40:	695a      	ldr	r2, [r3, #20]
 800ab42:	0752      	lsls	r2, r2, #29
 800ab44:	d4ef      	bmi.n	800ab26 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800ab46:	695a      	ldr	r2, [r3, #20]
 800ab48:	0551      	lsls	r1, r2, #21
 800ab4a:	f53f af72 	bmi.w	800aa32 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ab4e:	f7ff fa05 	bl	8009f5c <HAL_GetTick>
 800ab52:	1b40      	subs	r0, r0, r5
 800ab54:	4286      	cmp	r6, r0
 800ab56:	d3cd      	bcc.n	800aaf4 <HAL_I2C_Mem_Write+0x174>
 800ab58:	2e00      	cmp	r6, #0
 800ab5a:	d0cb      	beq.n	800aaf4 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800ab5c:	6823      	ldr	r3, [r4, #0]
 800ab5e:	e796      	b.n	800aa8e <HAL_I2C_Mem_Write+0x10e>
 800ab60:	ffff0000 	.word	0xffff0000

0800ab64 <HAL_I2C_Mem_Read>:
{
 800ab64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ab68:	4604      	mov	r4, r0
 800ab6a:	b087      	sub	sp, #28
 800ab6c:	4699      	mov	r9, r3
 800ab6e:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800ab72:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800ab74:	460f      	mov	r7, r1
 800ab76:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800ab78:	f7ff f9f0 	bl	8009f5c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800ab7c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800ab80:	2b20      	cmp	r3, #32
 800ab82:	d004      	beq.n	800ab8e <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800ab84:	2702      	movs	r7, #2
}
 800ab86:	4638      	mov	r0, r7
 800ab88:	b007      	add	sp, #28
 800ab8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ab8e:	4606      	mov	r6, r0
 800ab90:	e005      	b.n	800ab9e <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ab92:	f7ff f9e3 	bl	8009f5c <HAL_GetTick>
 800ab96:	1b80      	subs	r0, r0, r6
 800ab98:	2819      	cmp	r0, #25
 800ab9a:	f200 80d2 	bhi.w	800ad42 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ab9e:	f8d4 c000 	ldr.w	ip, [r4]
 800aba2:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800aba6:	43c0      	mvns	r0, r0
 800aba8:	f010 0b02 	ands.w	fp, r0, #2
 800abac:	d0f1      	beq.n	800ab92 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800abae:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800abb2:	2b01      	cmp	r3, #1
 800abb4:	d0e6      	beq.n	800ab84 <HAL_I2C_Mem_Read+0x20>
 800abb6:	2301      	movs	r3, #1
 800abb8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800abbc:	f8dc 3000 	ldr.w	r3, [ip]
 800abc0:	07d9      	lsls	r1, r3, #31
 800abc2:	d537      	bpl.n	800ac34 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800abc4:	f8dc 0000 	ldr.w	r0, [ip]
 800abc8:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800abcc:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800abd0:	9810      	ldr	r0, [sp, #64]	; 0x40
 800abd2:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800abd4:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800abd6:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800abda:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800abde:	2040      	movs	r0, #64	; 0x40
 800abe0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800abe4:	2000      	movs	r0, #0
 800abe6:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800abe8:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800abec:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800abee:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800abf0:	4893      	ldr	r0, [pc, #588]	; (800ae40 <HAL_I2C_Mem_Read+0x2dc>)
 800abf2:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800abf4:	4639      	mov	r1, r7
 800abf6:	464b      	mov	r3, r9
 800abf8:	4642      	mov	r2, r8
 800abfa:	4620      	mov	r0, r4
 800abfc:	f7ff fca2 	bl	800a544 <I2C_RequestMemoryRead>
 800ac00:	4607      	mov	r7, r0
 800ac02:	2800      	cmp	r0, #0
 800ac04:	f040 80ab 	bne.w	800ad5e <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800ac08:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800ac0a:	b9d2      	cbnz	r2, 800ac42 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ac0c:	6823      	ldr	r3, [r4, #0]
 800ac0e:	9002      	str	r0, [sp, #8]
 800ac10:	695a      	ldr	r2, [r3, #20]
 800ac12:	9202      	str	r2, [sp, #8]
 800ac14:	699a      	ldr	r2, [r3, #24]
 800ac16:	9202      	str	r2, [sp, #8]
 800ac18:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ac1a:	681a      	ldr	r2, [r3, #0]
 800ac1c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ac20:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac22:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800ac24:	2220      	movs	r2, #32
 800ac26:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800ac2a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac2e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800ac32:	e7a8      	b.n	800ab86 <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800ac34:	f8dc 3000 	ldr.w	r3, [ip]
 800ac38:	f043 0301 	orr.w	r3, r3, #1
 800ac3c:	f8cc 3000 	str.w	r3, [ip]
 800ac40:	e7c0      	b.n	800abc4 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800ac42:	2a01      	cmp	r2, #1
 800ac44:	f000 812c 	beq.w	800aea0 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800ac48:	2a02      	cmp	r2, #2
 800ac4a:	f000 80bd 	beq.w	800adc8 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ac4e:	6823      	ldr	r3, [r4, #0]
 800ac50:	9005      	str	r0, [sp, #20]
 800ac52:	6959      	ldr	r1, [r3, #20]
 800ac54:	9105      	str	r1, [sp, #20]
 800ac56:	6999      	ldr	r1, [r3, #24]
 800ac58:	9105      	str	r1, [sp, #20]
 800ac5a:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800ac5c:	2a03      	cmp	r2, #3
 800ac5e:	d849      	bhi.n	800acf4 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800ac60:	2a01      	cmp	r2, #1
 800ac62:	f000 80eb 	beq.w	800ae3c <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800ac66:	2a02      	cmp	r2, #2
 800ac68:	f000 8089 	beq.w	800ad7e <HAL_I2C_Mem_Read+0x21a>
 800ac6c:	1c69      	adds	r1, r5, #1
 800ac6e:	f040 80bb 	bne.w	800ade8 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ac72:	695a      	ldr	r2, [r3, #20]
 800ac74:	0752      	lsls	r2, r2, #29
 800ac76:	d5fc      	bpl.n	800ac72 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ac78:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac7a:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ac7c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ac80:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac82:	691b      	ldr	r3, [r3, #16]
 800ac84:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800ac86:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800ac88:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800ac8a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800ac8c:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800ac8e:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800ac90:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800ac92:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800ac94:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800ac96:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800ac98:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800ac9a:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ac9c:	6822      	ldr	r2, [r4, #0]
 800ac9e:	f040 80af 	bne.w	800ae00 <HAL_I2C_Mem_Read+0x29c>
 800aca2:	6953      	ldr	r3, [r2, #20]
 800aca4:	075b      	lsls	r3, r3, #29
 800aca6:	d5fc      	bpl.n	800aca2 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aca8:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800acaa:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800acac:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800acb0:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800acb2:	6913      	ldr	r3, [r2, #16]
 800acb4:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800acb6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800acb8:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800acba:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800acbc:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800acbe:	3b01      	subs	r3, #1
 800acc0:	b29b      	uxth	r3, r3
 800acc2:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800acc4:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800acc6:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800acc8:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800accc:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800acce:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800acd2:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800acd4:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800acd6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800acd8:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800acda:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800acdc:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800acde:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800ace0:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800ace2:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800ace4:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800ace6:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800ace8:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800acea:	2a00      	cmp	r2, #0
 800acec:	d099      	beq.n	800ac22 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800acee:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800acf0:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800acf2:	d9b5      	bls.n	800ac60 <HAL_I2C_Mem_Read+0xfc>
 800acf4:	b95d      	cbnz	r5, 800ad0e <HAL_I2C_Mem_Read+0x1aa>
 800acf6:	e0c5      	b.n	800ae84 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800acf8:	695a      	ldr	r2, [r3, #20]
 800acfa:	06d0      	lsls	r0, r2, #27
 800acfc:	f100 80b2 	bmi.w	800ae64 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ad00:	f7ff f92c 	bl	8009f5c <HAL_GetTick>
 800ad04:	1b80      	subs	r0, r0, r6
 800ad06:	4285      	cmp	r5, r0
 800ad08:	f0c0 8086 	bcc.w	800ae18 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ad0c:	6823      	ldr	r3, [r4, #0]
 800ad0e:	695a      	ldr	r2, [r3, #20]
 800ad10:	0652      	lsls	r2, r2, #25
 800ad12:	d5f1      	bpl.n	800acf8 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad14:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ad16:	691b      	ldr	r3, [r3, #16]
 800ad18:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800ad1a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ad1c:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800ad1e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800ad20:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ad22:	3b01      	subs	r3, #1
 800ad24:	b29b      	uxth	r3, r3
 800ad26:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ad28:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800ad2a:	3a01      	subs	r2, #1
 800ad2c:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800ad2e:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ad32:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800ad34:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800ad36:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ad3a:	d5d6      	bpl.n	800acea <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad3c:	6903      	ldr	r3, [r0, #16]
 800ad3e:	704b      	strb	r3, [r1, #1]
 800ad40:	e036      	b.n	800adb0 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800ad42:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ad44:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ad48:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ad4c:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ad50:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ad52:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ad56:	f043 0320 	orr.w	r3, r3, #32
 800ad5a:	6423      	str	r3, [r4, #64]	; 0x40
 800ad5c:	e712      	b.n	800ab84 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800ad5e:	2701      	movs	r7, #1
}
 800ad60:	4638      	mov	r0, r7
 800ad62:	b007      	add	sp, #28
 800ad64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ad68:	695a      	ldr	r2, [r3, #20]
 800ad6a:	0750      	lsls	r0, r2, #29
 800ad6c:	d40c      	bmi.n	800ad88 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ad6e:	f7ff f8f5 	bl	8009f5c <HAL_GetTick>
 800ad72:	1b80      	subs	r0, r0, r6
 800ad74:	4285      	cmp	r5, r0
 800ad76:	d34f      	bcc.n	800ae18 <HAL_I2C_Mem_Read+0x2b4>
 800ad78:	2d00      	cmp	r5, #0
 800ad7a:	d04d      	beq.n	800ae18 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ad7c:	6823      	ldr	r3, [r4, #0]
 800ad7e:	1c69      	adds	r1, r5, #1
 800ad80:	d1f2      	bne.n	800ad68 <HAL_I2C_Mem_Read+0x204>
 800ad82:	695a      	ldr	r2, [r3, #20]
 800ad84:	0752      	lsls	r2, r2, #29
 800ad86:	d5fc      	bpl.n	800ad82 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad88:	681a      	ldr	r2, [r3, #0]
 800ad8a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ad8e:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad90:	691a      	ldr	r2, [r3, #16]
 800ad92:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ad94:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800ad96:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800ad98:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800ad9a:	3b01      	subs	r3, #1
 800ad9c:	b29b      	uxth	r3, r3
 800ad9e:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800ada0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800ada2:	3b01      	subs	r3, #1
 800ada4:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ada6:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800ada8:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800adaa:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800adac:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800adae:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800adb0:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800adb2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800adb4:	3301      	adds	r3, #1
 800adb6:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800adb8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800adba:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800adbc:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800adbe:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800adc0:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800adc2:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800adc4:	8563      	strh	r3, [r4, #42]	; 0x2a
 800adc6:	e790      	b.n	800acea <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800adc8:	6823      	ldr	r3, [r4, #0]
 800adca:	6819      	ldr	r1, [r3, #0]
 800adcc:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800add0:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800add2:	6819      	ldr	r1, [r3, #0]
 800add4:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800add8:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800adda:	9004      	str	r0, [sp, #16]
 800addc:	6959      	ldr	r1, [r3, #20]
 800adde:	9104      	str	r1, [sp, #16]
 800ade0:	6999      	ldr	r1, [r3, #24]
 800ade2:	9104      	str	r1, [sp, #16]
 800ade4:	9904      	ldr	r1, [sp, #16]
 800ade6:	e739      	b.n	800ac5c <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ade8:	695a      	ldr	r2, [r3, #20]
 800adea:	0750      	lsls	r0, r2, #29
 800adec:	f53f af44 	bmi.w	800ac78 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800adf0:	f7ff f8b4 	bl	8009f5c <HAL_GetTick>
 800adf4:	1b80      	subs	r0, r0, r6
 800adf6:	4285      	cmp	r5, r0
 800adf8:	d30e      	bcc.n	800ae18 <HAL_I2C_Mem_Read+0x2b4>
 800adfa:	b16d      	cbz	r5, 800ae18 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800adfc:	6823      	ldr	r3, [r4, #0]
 800adfe:	e735      	b.n	800ac6c <HAL_I2C_Mem_Read+0x108>
 800ae00:	6953      	ldr	r3, [r2, #20]
 800ae02:	0758      	lsls	r0, r3, #29
 800ae04:	f53f af50 	bmi.w	800aca8 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ae08:	f7ff f8a8 	bl	8009f5c <HAL_GetTick>
 800ae0c:	1b80      	subs	r0, r0, r6
 800ae0e:	4285      	cmp	r5, r0
 800ae10:	d302      	bcc.n	800ae18 <HAL_I2C_Mem_Read+0x2b4>
 800ae12:	2d00      	cmp	r5, #0
 800ae14:	f47f af41 	bne.w	800ac9a <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ae18:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800ae1a:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ae1c:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ae1e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ae22:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ae26:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ae28:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800ae2c:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ae2e:	f043 0320 	orr.w	r3, r3, #32
}
 800ae32:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ae34:	6423      	str	r3, [r4, #64]	; 0x40
}
 800ae36:	b007      	add	sp, #28
 800ae38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ae3c:	b95d      	cbnz	r5, 800ae56 <HAL_I2C_Mem_Read+0x2f2>
 800ae3e:	e02b      	b.n	800ae98 <HAL_I2C_Mem_Read+0x334>
 800ae40:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ae44:	695a      	ldr	r2, [r3, #20]
 800ae46:	06d2      	lsls	r2, r2, #27
 800ae48:	d40c      	bmi.n	800ae64 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ae4a:	f7ff f887 	bl	8009f5c <HAL_GetTick>
 800ae4e:	1b80      	subs	r0, r0, r6
 800ae50:	4285      	cmp	r5, r0
 800ae52:	d3e1      	bcc.n	800ae18 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ae54:	6823      	ldr	r3, [r4, #0]
 800ae56:	695a      	ldr	r2, [r3, #20]
 800ae58:	0651      	lsls	r1, r2, #25
 800ae5a:	d5f3      	bpl.n	800ae44 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae5c:	691a      	ldr	r2, [r3, #16]
 800ae5e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ae60:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800ae62:	e7a5      	b.n	800adb0 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ae64:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ae66:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800ae6a:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ae6c:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ae6e:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800ae70:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ae74:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800ae78:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ae7a:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800ae7c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800ae80:	2701      	movs	r7, #1
 800ae82:	e680      	b.n	800ab86 <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ae84:	695a      	ldr	r2, [r3, #20]
 800ae86:	0652      	lsls	r2, r2, #25
 800ae88:	f53f af44 	bmi.w	800ad14 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ae8c:	695a      	ldr	r2, [r3, #20]
 800ae8e:	06d1      	lsls	r1, r2, #27
 800ae90:	d4e8      	bmi.n	800ae64 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ae92:	f7ff f863 	bl	8009f5c <HAL_GetTick>
 800ae96:	e7bf      	b.n	800ae18 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ae98:	695a      	ldr	r2, [r3, #20]
 800ae9a:	0650      	lsls	r0, r2, #25
 800ae9c:	d5f6      	bpl.n	800ae8c <HAL_I2C_Mem_Read+0x328>
 800ae9e:	e7dd      	b.n	800ae5c <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aea0:	6823      	ldr	r3, [r4, #0]
 800aea2:	6819      	ldr	r1, [r3, #0]
 800aea4:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800aea8:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aeaa:	9003      	str	r0, [sp, #12]
 800aeac:	6959      	ldr	r1, [r3, #20]
 800aeae:	9103      	str	r1, [sp, #12]
 800aeb0:	6999      	ldr	r1, [r3, #24]
 800aeb2:	9103      	str	r1, [sp, #12]
 800aeb4:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aeb6:	6819      	ldr	r1, [r3, #0]
 800aeb8:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800aebc:	6019      	str	r1, [r3, #0]
 800aebe:	e6cd      	b.n	800ac5c <HAL_I2C_Mem_Read+0xf8>

0800aec0 <HAL_I2C_MasterTxCpltCallback>:
 800aec0:	4770      	bx	lr
 800aec2:	bf00      	nop

0800aec4 <HAL_I2C_MasterRxCpltCallback>:
 800aec4:	4770      	bx	lr
 800aec6:	bf00      	nop

0800aec8 <HAL_I2C_SlaveTxCpltCallback>:
 800aec8:	4770      	bx	lr
 800aeca:	bf00      	nop

0800aecc <HAL_I2C_SlaveRxCpltCallback>:
 800aecc:	4770      	bx	lr
 800aece:	bf00      	nop

0800aed0 <HAL_I2C_AddrCallback>:
}
 800aed0:	4770      	bx	lr
 800aed2:	bf00      	nop

0800aed4 <HAL_I2C_ListenCpltCallback>:
 800aed4:	4770      	bx	lr
 800aed6:	bf00      	nop

0800aed8 <HAL_I2C_MemTxCpltCallback>:
 800aed8:	4770      	bx	lr
 800aeda:	bf00      	nop

0800aedc <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aedc:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800aee0:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800aee2:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800aee4:	b959      	cbnz	r1, 800aefe <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800aee6:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800aee8:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800aeea:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800aeec:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800aeee:	d00d      	beq.n	800af0c <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800aef0:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800aef4:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800aef6:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800aef8:	3201      	adds	r2, #1
 800aefa:	6502      	str	r2, [r0, #80]	; 0x50
 800aefc:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800aefe:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800af00:	2901      	cmp	r1, #1
 800af02:	d009      	beq.n	800af18 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800af04:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800af06:	2902      	cmp	r1, #2
 800af08:	d00e      	beq.n	800af28 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800af0a:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800af0c:	b2d2      	uxtb	r2, r2
 800af0e:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800af10:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800af12:	3202      	adds	r2, #2
 800af14:	6502      	str	r2, [r0, #80]	; 0x50
 800af16:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800af18:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800af1a:	6801      	ldr	r1, [r0, #0]
 800af1c:	b2d2      	uxtb	r2, r2
 800af1e:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800af20:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800af22:	3201      	adds	r2, #1
 800af24:	6502      	str	r2, [r0, #80]	; 0x50
 800af26:	4770      	bx	lr
 800af28:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800af2a:	2a22      	cmp	r2, #34	; 0x22
 800af2c:	d01f      	beq.n	800af6e <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800af2e:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800af30:	b289      	uxth	r1, r1
 800af32:	b9c1      	cbnz	r1, 800af66 <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800af34:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800af36:	b289      	uxth	r1, r1
 800af38:	2900      	cmp	r1, #0
 800af3a:	d1e6      	bne.n	800af0a <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800af3c:	2a21      	cmp	r2, #33	; 0x21
 800af3e:	d1e4      	bne.n	800af0a <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800af40:	6802      	ldr	r2, [r0, #0]
{
 800af42:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800af44:	6854      	ldr	r4, [r2, #4]
 800af46:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800af4a:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800af4c:	6814      	ldr	r4, [r2, #0]
 800af4e:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800af52:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800af54:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800af56:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800af58:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800af5c:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800af60:	f7ff ffba 	bl	800aed8 <HAL_I2C_MemTxCpltCallback>
}
 800af64:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800af66:	2a21      	cmp	r2, #33	; 0x21
 800af68:	d00a      	beq.n	800af80 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800af6a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800af6c:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800af6e:	6801      	ldr	r1, [r0, #0]
 800af70:	680a      	ldr	r2, [r1, #0]
 800af72:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800af76:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800af78:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800af7a:	3201      	adds	r2, #1
 800af7c:	6502      	str	r2, [r0, #80]	; 0x50
 800af7e:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800af80:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800af82:	6802      	ldr	r2, [r0, #0]
 800af84:	f811 0b01 	ldrb.w	r0, [r1], #1
 800af88:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800af8a:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800af8c:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800af8e:	3a01      	subs	r2, #1
 800af90:	b292      	uxth	r2, r2
 800af92:	855a      	strh	r2, [r3, #42]	; 0x2a
 800af94:	4770      	bx	lr
 800af96:	bf00      	nop

0800af98 <HAL_I2C_MemRxCpltCallback>:
 800af98:	4770      	bx	lr
 800af9a:	bf00      	nop

0800af9c <HAL_I2C_ErrorCallback>:
 800af9c:	4770      	bx	lr
 800af9e:	bf00      	nop

0800afa0 <HAL_I2C_AbortCpltCallback>:
 800afa0:	4770      	bx	lr
 800afa2:	bf00      	nop

0800afa4 <I2C_DMAAbort>:
{
 800afa4:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800afa6:	4b3a      	ldr	r3, [pc, #232]	; (800b090 <I2C_DMAAbort+0xec>)
 800afa8:	4a3a      	ldr	r2, [pc, #232]	; (800b094 <I2C_DMAAbort+0xf0>)
 800afaa:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800afac:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800afae:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800afb0:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800afb2:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800afb4:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800afb8:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800afba:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800afbc:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800afc0:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800afc2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800afc6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800afca:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800afcc:	9301      	str	r3, [sp, #4]
 800afce:	e005      	b.n	800afdc <I2C_DMAAbort+0x38>
    count--;
 800afd0:	9b01      	ldr	r3, [sp, #4]
 800afd2:	3b01      	subs	r3, #1
 800afd4:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800afd6:	6813      	ldr	r3, [r2, #0]
 800afd8:	059b      	lsls	r3, r3, #22
 800afda:	d506      	bpl.n	800afea <I2C_DMAAbort+0x46>
    if (count == 0U)
 800afdc:	9b01      	ldr	r3, [sp, #4]
 800afde:	2b00      	cmp	r3, #0
 800afe0:	d1f6      	bne.n	800afd0 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800afe2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800afe4:	f043 0320 	orr.w	r3, r3, #32
 800afe8:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800afea:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800afec:	b34c      	cbz	r4, 800b042 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800afee:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800aff0:	2500      	movs	r5, #0
 800aff2:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800aff4:	b1f3      	cbz	r3, 800b034 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aff6:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800aff8:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800affa:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800affe:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800b000:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800b002:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800b004:	2400      	movs	r4, #0
 800b006:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800b008:	6813      	ldr	r3, [r2, #0]
 800b00a:	f023 0301 	bic.w	r3, r3, #1
 800b00e:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800b010:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800b014:	2b60      	cmp	r3, #96	; 0x60
 800b016:	d02a      	beq.n	800b06e <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b018:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800b01c:	2928      	cmp	r1, #40	; 0x28
 800b01e:	d019      	beq.n	800b054 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800b020:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b022:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b024:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b028:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800b02c:	f7ff ffb6 	bl	800af9c <HAL_I2C_ErrorCallback>
}
 800b030:	b002      	add	sp, #8
 800b032:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b034:	6815      	ldr	r5, [r2, #0]
 800b036:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800b03a:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800b03c:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800b03e:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800b040:	e7e2      	b.n	800b008 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800b042:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800b044:	b1f3      	cbz	r3, 800b084 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b046:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800b048:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b04a:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800b04e:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800b050:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800b052:	e7d7      	b.n	800b004 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800b054:	6813      	ldr	r3, [r2, #0]
 800b056:	f043 0301 	orr.w	r3, r3, #1
 800b05a:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b05c:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800b05e:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b060:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800b064:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800b066:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b068:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800b06c:	e7de      	b.n	800b02c <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b06e:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800b070:	2220      	movs	r2, #32
 800b072:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b076:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800b07a:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800b07c:	f7ff ff90 	bl	800afa0 <HAL_I2C_AbortCpltCallback>
}
 800b080:	b002      	add	sp, #8
 800b082:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b084:	6814      	ldr	r4, [r2, #0]
 800b086:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800b08a:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800b08c:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800b08e:	e7bb      	b.n	800b008 <I2C_DMAAbort+0x64>
 800b090:	20000078 	.word	0x20000078
 800b094:	14f8b589 	.word	0x14f8b589

0800b098 <I2C_ITError>:
{
 800b098:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b09a:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800b09e:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b0a2:	2b10      	cmp	r3, #16
{
 800b0a4:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b0a6:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b0a8:	d039      	beq.n	800b11e <I2C_ITError+0x86>
 800b0aa:	b2d9      	uxtb	r1, r3
 800b0ac:	2940      	cmp	r1, #64	; 0x40
 800b0ae:	d036      	beq.n	800b11e <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b0b0:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800b0b4:	2928      	cmp	r1, #40	; 0x28
 800b0b6:	d03d      	beq.n	800b134 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800b0b8:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800b0ba:	6859      	ldr	r1, [r3, #4]
 800b0bc:	0508      	lsls	r0, r1, #20
 800b0be:	d407      	bmi.n	800b0d0 <I2C_ITError+0x38>
 800b0c0:	2a60      	cmp	r2, #96	; 0x60
 800b0c2:	d005      	beq.n	800b0d0 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800b0c4:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b0c6:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b0c8:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b0cc:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800b0d0:	2200      	movs	r2, #0
 800b0d2:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b0d4:	685a      	ldr	r2, [r3, #4]
 800b0d6:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b0da:	d134      	bne.n	800b146 <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800b0dc:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800b0e0:	2960      	cmp	r1, #96	; 0x60
 800b0e2:	d075      	beq.n	800b1d0 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b0e4:	695a      	ldr	r2, [r3, #20]
 800b0e6:	0650      	lsls	r0, r2, #25
 800b0e8:	d505      	bpl.n	800b0f6 <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b0ea:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b0ec:	691b      	ldr	r3, [r3, #16]
 800b0ee:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800b0f0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b0f2:	3301      	adds	r3, #1
 800b0f4:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800b0f6:	4620      	mov	r0, r4
 800b0f8:	f7ff ff50 	bl	800af9c <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800b0fc:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800b0fe:	0719      	lsls	r1, r3, #28
 800b100:	d004      	beq.n	800b10c <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b102:	6822      	ldr	r2, [r4, #0]
 800b104:	6853      	ldr	r3, [r2, #4]
 800b106:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800b10a:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800b10c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800b110:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b112:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800b114:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800b116:	d501      	bpl.n	800b11c <I2C_ITError+0x84>
 800b118:	2b28      	cmp	r3, #40	; 0x28
 800b11a:	d02f      	beq.n	800b17c <I2C_ITError+0xe4>
}
 800b11c:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b11e:	2a22      	cmp	r2, #34	; 0x22
 800b120:	d1c6      	bne.n	800b0b0 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800b122:	6823      	ldr	r3, [r4, #0]
 800b124:	681a      	ldr	r2, [r3, #0]
 800b126:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b12a:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800b12c:	685a      	ldr	r2, [r3, #4]
 800b12e:	0512      	lsls	r2, r2, #20
 800b130:	d5c8      	bpl.n	800b0c4 <I2C_ITError+0x2c>
 800b132:	e7cd      	b.n	800b0d0 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800b134:	2300      	movs	r3, #0
 800b136:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800b138:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800b13a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b13e:	685a      	ldr	r2, [r3, #4]
 800b140:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b144:	d0ca      	beq.n	800b0dc <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800b146:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800b148:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800b14a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b14e:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800b150:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800b154:	2b01      	cmp	r3, #1
 800b156:	d01e      	beq.n	800b196 <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800b158:	4b28      	ldr	r3, [pc, #160]	; (800b1fc <I2C_ITError+0x164>)
 800b15a:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800b15c:	f7fe ff88 	bl	800a070 <HAL_DMA_Abort_IT>
 800b160:	2800      	cmp	r0, #0
 800b162:	d0cb      	beq.n	800b0fc <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800b164:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b166:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800b168:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b16a:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800b16c:	f023 0301 	bic.w	r3, r3, #1
 800b170:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b172:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b176:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b178:	4798      	blx	r3
 800b17a:	e7bf      	b.n	800b0fc <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800b17c:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800b17e:	4920      	ldr	r1, [pc, #128]	; (800b200 <I2C_ITError+0x168>)
 800b180:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800b182:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800b184:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800b186:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800b188:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b18c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800b190:	f7ff fea0 	bl	800aed4 <HAL_I2C_ListenCpltCallback>
}
 800b194:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b196:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b198:	4b18      	ldr	r3, [pc, #96]	; (800b1fc <I2C_ITError+0x164>)
 800b19a:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b19c:	f7fe ff68 	bl	800a070 <HAL_DMA_Abort_IT>
 800b1a0:	2800      	cmp	r0, #0
 800b1a2:	d0ab      	beq.n	800b0fc <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b1a4:	6823      	ldr	r3, [r4, #0]
 800b1a6:	695a      	ldr	r2, [r3, #20]
 800b1a8:	0651      	lsls	r1, r2, #25
 800b1aa:	d506      	bpl.n	800b1ba <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b1ac:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b1ae:	691b      	ldr	r3, [r3, #16]
 800b1b0:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800b1b2:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800b1b4:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800b1b6:	3201      	adds	r2, #1
 800b1b8:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800b1ba:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b1bc:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800b1be:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800b1c2:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800b1c4:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b1c6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b1ca:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b1cc:	4798      	blx	r3
 800b1ce:	e795      	b.n	800b0fc <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800b1d0:	2120      	movs	r1, #32
 800b1d2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b1d6:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b1d8:	695a      	ldr	r2, [r3, #20]
 800b1da:	0652      	lsls	r2, r2, #25
 800b1dc:	d506      	bpl.n	800b1ec <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b1de:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b1e0:	691b      	ldr	r3, [r3, #16]
 800b1e2:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800b1e4:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800b1e6:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800b1e8:	3201      	adds	r2, #1
 800b1ea:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800b1ec:	681a      	ldr	r2, [r3, #0]
 800b1ee:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800b1f2:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800b1f4:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800b1f6:	f7ff fed3 	bl	800afa0 <HAL_I2C_AbortCpltCallback>
 800b1fa:	e77f      	b.n	800b0fc <I2C_ITError+0x64>
 800b1fc:	0800afa5 	.word	0x0800afa5
 800b200:	ffff0000 	.word	0xffff0000

0800b204 <HAL_I2C_EV_IRQHandler>:
{
 800b204:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b206:	6803      	ldr	r3, [r0, #0]
{
 800b208:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b20a:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b20c:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b20e:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b212:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b216:	2910      	cmp	r1, #16
{
 800b218:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b21a:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b21c:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b220:	d022      	beq.n	800b268 <HAL_I2C_EV_IRQHandler+0x64>
 800b222:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b226:	d01f      	beq.n	800b268 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b228:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800b22a:	2900      	cmp	r1, #0
 800b22c:	f000 8094 	beq.w	800b358 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b230:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800b232:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b234:	f011 0602 	ands.w	r6, r1, #2
 800b238:	d059      	beq.n	800b2ee <HAL_I2C_EV_IRQHandler+0xea>
 800b23a:	0586      	lsls	r6, r0, #22
 800b23c:	d559      	bpl.n	800b2f2 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b23e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b240:	b102      	cbz	r2, 800b244 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b242:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b244:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b248:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800b24c:	2a28      	cmp	r2, #40	; 0x28
 800b24e:	f000 821e 	beq.w	800b68e <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b252:	2200      	movs	r2, #0
 800b254:	920c      	str	r2, [sp, #48]	; 0x30
 800b256:	6959      	ldr	r1, [r3, #20]
 800b258:	910c      	str	r1, [sp, #48]	; 0x30
 800b25a:	699b      	ldr	r3, [r3, #24]
 800b25c:	930c      	str	r3, [sp, #48]	; 0x30
 800b25e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800b260:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800b264:	b00e      	add	sp, #56	; 0x38
 800b266:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b268:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b26a:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800b26c:	f011 0f01 	tst.w	r1, #1
 800b270:	d11a      	bne.n	800b2a8 <HAL_I2C_EV_IRQHandler+0xa4>
 800b272:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800b276:	d0f5      	beq.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
 800b278:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800b27c:	d0f2      	beq.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b27e:	070d      	lsls	r5, r1, #28
 800b280:	d56d      	bpl.n	800b35e <HAL_I2C_EV_IRQHandler+0x15a>
 800b282:	0585      	lsls	r5, r0, #22
 800b284:	f140 8083 	bpl.w	800b38e <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b288:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b28a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800b28c:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b28e:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b290:	2900      	cmp	r1, #0
 800b292:	f000 81e3 	beq.w	800b65c <HAL_I2C_EV_IRQHandler+0x458>
 800b296:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800b298:	2a00      	cmp	r2, #0
 800b29a:	f000 81df 	beq.w	800b65c <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b29e:	685a      	ldr	r2, [r3, #4]
 800b2a0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b2a4:	605a      	str	r2, [r3, #4]
 800b2a6:	e7dd      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b2a8:	0585      	lsls	r5, r0, #22
 800b2aa:	d56e      	bpl.n	800b38a <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800b2ac:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b2ae:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800b2b2:	f000 81e9 	beq.w	800b688 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800b2b6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b2b8:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800b2bc:	bf04      	itt	eq
 800b2be:	2208      	moveq	r2, #8
 800b2c0:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b2c2:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b2c6:	2a40      	cmp	r2, #64	; 0x40
 800b2c8:	f000 81d7 	beq.w	800b67a <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800b2cc:	6922      	ldr	r2, [r4, #16]
 800b2ce:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800b2d2:	f000 81b2 	beq.w	800b63a <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800b2d6:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b2d8:	2a00      	cmp	r2, #0
 800b2da:	f040 81ef 	bne.w	800b6bc <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800b2de:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b2e0:	11d2      	asrs	r2, r2, #7
 800b2e2:	f002 0206 	and.w	r2, r2, #6
 800b2e6:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800b2ea:	611a      	str	r2, [r3, #16]
 800b2ec:	e7ba      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b2ee:	06cd      	lsls	r5, r1, #27
 800b2f0:	d47c      	bmi.n	800b3ec <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b2f2:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800b2f6:	2a21      	cmp	r2, #33	; 0x21
 800b2f8:	f000 80f5 	beq.w	800b4e6 <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b2fc:	064e      	lsls	r6, r1, #25
 800b2fe:	f140 8132 	bpl.w	800b566 <HAL_I2C_EV_IRQHandler+0x362>
 800b302:	0545      	lsls	r5, r0, #21
 800b304:	f140 812f 	bpl.w	800b566 <HAL_I2C_EV_IRQHandler+0x362>
 800b308:	0749      	lsls	r1, r1, #29
 800b30a:	f100 812f 	bmi.w	800b56c <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b30e:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b312:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b314:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b316:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800b318:	2a00      	cmp	r2, #0
 800b31a:	d0a3      	beq.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b31c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b31e:	691b      	ldr	r3, [r3, #16]
 800b320:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b322:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b324:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b326:	3b01      	subs	r3, #1
 800b328:	b29b      	uxth	r3, r3
 800b32a:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b32c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b32e:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b330:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b332:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b334:	2b00      	cmp	r3, #0
 800b336:	d195      	bne.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
 800b338:	292a      	cmp	r1, #42	; 0x2a
 800b33a:	d193      	bne.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b33c:	6822      	ldr	r2, [r4, #0]
 800b33e:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b340:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b342:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b344:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b348:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b34a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b34c:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b34e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b352:	f7ff fdbb 	bl	800aecc <HAL_I2C_SlaveRxCpltCallback>
 800b356:	e785      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b358:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b35a:	6959      	ldr	r1, [r3, #20]
 800b35c:	e76a      	b.n	800b234 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b35e:	078d      	lsls	r5, r1, #30
 800b360:	d515      	bpl.n	800b38e <HAL_I2C_EV_IRQHandler+0x18a>
 800b362:	0585      	lsls	r5, r0, #22
 800b364:	d513      	bpl.n	800b38e <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b366:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800b36a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800b36c:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b36e:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800b372:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b374:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b376:	f000 81b3 	beq.w	800b6e0 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b37a:	2200      	movs	r2, #0
 800b37c:	920a      	str	r2, [sp, #40]	; 0x28
 800b37e:	695a      	ldr	r2, [r3, #20]
 800b380:	920a      	str	r2, [sp, #40]	; 0x28
 800b382:	699b      	ldr	r3, [r3, #24]
 800b384:	930a      	str	r3, [sp, #40]	; 0x28
 800b386:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b388:	e76c      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b38a:	070d      	lsls	r5, r1, #28
 800b38c:	d5e7      	bpl.n	800b35e <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800b38e:	0776      	lsls	r6, r6, #29
 800b390:	f140 80f5 	bpl.w	800b57e <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b394:	685d      	ldr	r5, [r3, #4]
 800b396:	052d      	lsls	r5, r5, #20
 800b398:	f53f af64 	bmi.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b39c:	060e      	lsls	r6, r1, #24
 800b39e:	f140 8115 	bpl.w	800b5cc <HAL_I2C_EV_IRQHandler+0x3c8>
 800b3a2:	0545      	lsls	r5, r0, #21
 800b3a4:	f140 8112 	bpl.w	800b5cc <HAL_I2C_EV_IRQHandler+0x3c8>
 800b3a8:	074e      	lsls	r6, r1, #29
 800b3aa:	f100 8112 	bmi.w	800b5d2 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b3ae:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b3b2:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b3b4:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b3b8:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b3ba:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b3bc:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b3be:	2800      	cmp	r0, #0
 800b3c0:	f040 8235 	bne.w	800b82e <HAL_I2C_EV_IRQHandler+0x62a>
 800b3c4:	2a21      	cmp	r2, #33	; 0x21
 800b3c6:	f000 8347 	beq.w	800ba58 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b3ca:	2940      	cmp	r1, #64	; 0x40
 800b3cc:	f47f af4a 	bne.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800b3d0:	2a22      	cmp	r2, #34	; 0x22
 800b3d2:	f47f af47 	bne.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800b3d6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b3d8:	b292      	uxth	r2, r2
 800b3da:	2a00      	cmp	r2, #0
 800b3dc:	f000 8268 	beq.w	800b8b0 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b3e0:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b3e4:	2a40      	cmp	r2, #64	; 0x40
 800b3e6:	f040 80b4 	bne.w	800b552 <HAL_I2C_EV_IRQHandler+0x34e>
 800b3ea:	e0fc      	b.n	800b5e6 <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b3ec:	0585      	lsls	r5, r0, #22
 800b3ee:	d580      	bpl.n	800b2f2 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b3f0:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b3f4:	685a      	ldr	r2, [r3, #4]
 800b3f6:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b3fa:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800b3fc:	960d      	str	r6, [sp, #52]	; 0x34
 800b3fe:	695a      	ldr	r2, [r3, #20]
 800b400:	920d      	str	r2, [sp, #52]	; 0x34
 800b402:	681a      	ldr	r2, [r3, #0]
 800b404:	f042 0201 	orr.w	r2, r2, #1
 800b408:	601a      	str	r2, [r3, #0]
 800b40a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b40c:	681a      	ldr	r2, [r3, #0]
 800b40e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b412:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b414:	685a      	ldr	r2, [r3, #4]
 800b416:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b418:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b41a:	d521      	bpl.n	800b460 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b41c:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800b420:	2a22      	cmp	r2, #34	; 0x22
 800b422:	f000 817a 	beq.w	800b71a <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800b426:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b428:	6802      	ldr	r2, [r0, #0]
 800b42a:	6852      	ldr	r2, [r2, #4]
 800b42c:	b292      	uxth	r2, r2
 800b42e:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b430:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b432:	b292      	uxth	r2, r2
 800b434:	b11a      	cbz	r2, 800b43e <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b436:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b438:	f042 0204 	orr.w	r2, r2, #4
 800b43c:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b43e:	685a      	ldr	r2, [r3, #4]
 800b440:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b444:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800b446:	f7fe fe25 	bl	800a094 <HAL_DMA_GetState>
 800b44a:	2801      	cmp	r0, #1
 800b44c:	d008      	beq.n	800b460 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800b44e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b450:	4b99      	ldr	r3, [pc, #612]	; (800b6b8 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800b452:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800b454:	f7fe fe0c 	bl	800a070 <HAL_DMA_Abort_IT>
 800b458:	b110      	cbz	r0, 800b460 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b45a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b45c:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b45e:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800b460:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b462:	b29b      	uxth	r3, r3
 800b464:	b313      	cbz	r3, 800b4ac <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b466:	6823      	ldr	r3, [r4, #0]
 800b468:	695a      	ldr	r2, [r3, #20]
 800b46a:	0752      	lsls	r2, r2, #29
 800b46c:	d50a      	bpl.n	800b484 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b46e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b470:	691b      	ldr	r3, [r3, #16]
 800b472:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b474:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b476:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b478:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800b47a:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800b47c:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b47e:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800b480:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b482:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b484:	695a      	ldr	r2, [r3, #20]
 800b486:	0656      	lsls	r6, r2, #25
 800b488:	d509      	bpl.n	800b49e <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b48a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b48c:	691b      	ldr	r3, [r3, #16]
 800b48e:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b490:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b492:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b494:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800b496:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800b498:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b49a:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b49c:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800b49e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b4a0:	b29b      	uxth	r3, r3
 800b4a2:	b11b      	cbz	r3, 800b4ac <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b4a4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b4a6:	f043 0304 	orr.w	r3, r3, #4
 800b4aa:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b4ac:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b4ae:	2b00      	cmp	r3, #0
 800b4b0:	f040 80dd 	bne.w	800b66e <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800b4b4:	2d2a      	cmp	r5, #42	; 0x2a
 800b4b6:	f000 8151 	beq.w	800b75c <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800b4ba:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b4be:	2b28      	cmp	r3, #40	; 0x28
 800b4c0:	f000 8154 	beq.w	800b76c <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b4c4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b4c6:	2b22      	cmp	r3, #34	; 0x22
 800b4c8:	d002      	beq.n	800b4d0 <HAL_I2C_EV_IRQHandler+0x2cc>
 800b4ca:	2d22      	cmp	r5, #34	; 0x22
 800b4cc:	f47f aeca 	bne.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800b4d0:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b4d2:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800b4d4:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b4d6:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b4d8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b4dc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b4e0:	f7ff fcf4 	bl	800aecc <HAL_I2C_SlaveRxCpltCallback>
 800b4e4:	e6be      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b4e6:	060d      	lsls	r5, r1, #24
 800b4e8:	d528      	bpl.n	800b53c <HAL_I2C_EV_IRQHandler+0x338>
 800b4ea:	0546      	lsls	r6, r0, #21
 800b4ec:	d526      	bpl.n	800b53c <HAL_I2C_EV_IRQHandler+0x338>
 800b4ee:	074d      	lsls	r5, r1, #29
 800b4f0:	d427      	bmi.n	800b542 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b4f2:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b4f6:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b4f8:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b4fa:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800b4fc:	2900      	cmp	r1, #0
 800b4fe:	f43f aeb1 	beq.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b502:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b504:	f811 5b01 	ldrb.w	r5, [r1], #1
 800b508:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800b50a:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b50c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b50e:	3901      	subs	r1, #1
 800b510:	b289      	uxth	r1, r1
 800b512:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b514:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b516:	b289      	uxth	r1, r1
 800b518:	2900      	cmp	r1, #0
 800b51a:	f47f aea3 	bne.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
 800b51e:	2829      	cmp	r0, #41	; 0x29
 800b520:	f47f aea0 	bne.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b524:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b526:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b528:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b52c:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b52e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800b530:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b532:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b536:	f7ff fcc7 	bl	800aec8 <HAL_I2C_SlaveTxCpltCallback>
 800b53a:	e693      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b53c:	0749      	lsls	r1, r1, #29
 800b53e:	f57f ae91 	bpl.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
 800b542:	0582      	lsls	r2, r0, #22
 800b544:	f57f ae8e 	bpl.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b548:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b54a:	b292      	uxth	r2, r2
 800b54c:	2a00      	cmp	r2, #0
 800b54e:	f43f ae89 	beq.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b552:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b554:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b558:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800b55a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b55c:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b55e:	3b01      	subs	r3, #1
 800b560:	b29b      	uxth	r3, r3
 800b562:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b564:	e67e      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b566:	074a      	lsls	r2, r1, #29
 800b568:	f57f ae7c 	bpl.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
 800b56c:	0586      	lsls	r6, r0, #22
 800b56e:	f57f ae79 	bpl.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b572:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b574:	b292      	uxth	r2, r2
 800b576:	2a00      	cmp	r2, #0
 800b578:	f43f ae74 	beq.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
 800b57c:	e01b      	b.n	800b5b6 <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b57e:	685a      	ldr	r2, [r3, #4]
 800b580:	0512      	lsls	r2, r2, #20
 800b582:	f53f ae6f 	bmi.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b586:	064e      	lsls	r6, r1, #25
 800b588:	d433      	bmi.n	800b5f2 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b58a:	0749      	lsls	r1, r1, #29
 800b58c:	f57f ae6a 	bpl.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
 800b590:	0582      	lsls	r2, r0, #22
 800b592:	f57f ae67 	bpl.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b596:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800b598:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b59a:	b292      	uxth	r2, r2
 800b59c:	2a04      	cmp	r2, #4
 800b59e:	f000 8113 	beq.w	800b7c8 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800b5a2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b5a4:	b292      	uxth	r2, r2
 800b5a6:	2a03      	cmp	r2, #3
 800b5a8:	f000 8153 	beq.w	800b852 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800b5ac:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b5ae:	b292      	uxth	r2, r2
 800b5b0:	2a02      	cmp	r2, #2
 800b5b2:	f000 8182 	beq.w	800b8ba <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b5b6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b5b8:	691b      	ldr	r3, [r3, #16]
 800b5ba:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b5bc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b5be:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b5c0:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800b5c2:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800b5c4:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b5c6:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b5c8:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800b5ca:	e64b      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b5cc:	074d      	lsls	r5, r1, #29
 800b5ce:	f57f ae49 	bpl.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
 800b5d2:	0581      	lsls	r1, r0, #22
 800b5d4:	f57f ae46 	bpl.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800b5d8:	2a21      	cmp	r2, #33	; 0x21
 800b5da:	f000 80fd 	beq.w	800b7d8 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800b5de:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b5e2:	f47f ae3f 	bne.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b5e6:	4620      	mov	r0, r4
}
 800b5e8:	b00e      	add	sp, #56	; 0x38
 800b5ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b5ee:	f7ff bc75 	b.w	800aedc <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b5f2:	0545      	lsls	r5, r0, #21
 800b5f4:	d5c9      	bpl.n	800b58a <HAL_I2C_EV_IRQHandler+0x386>
 800b5f6:	f011 0104 	ands.w	r1, r1, #4
 800b5fa:	d1c9      	bne.n	800b590 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b5fc:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b600:	2a22      	cmp	r2, #34	; 0x22
 800b602:	f47f ae2f 	bne.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800b606:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b608:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800b60a:	2a03      	cmp	r2, #3
 800b60c:	f240 81ec 	bls.w	800b9e8 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b610:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b612:	691b      	ldr	r3, [r3, #16]
 800b614:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b616:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b618:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b61a:	3b01      	subs	r3, #1
 800b61c:	b29b      	uxth	r3, r3
 800b61e:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800b620:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b622:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b624:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800b626:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800b628:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800b62a:	f47f ae1b 	bne.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b62e:	6822      	ldr	r2, [r4, #0]
 800b630:	6853      	ldr	r3, [r2, #4]
 800b632:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b636:	6053      	str	r3, [r2, #4]
 800b638:	e614      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b63a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b63e:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b640:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b642:	bf16      	itet	ne
 800b644:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b648:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b64c:	b2d2      	uxtbne	r2, r2
 800b64e:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b650:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800b652:	b11a      	cbz	r2, 800b65c <HAL_I2C_EV_IRQHandler+0x458>
 800b654:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b656:	2a00      	cmp	r2, #0
 800b658:	f47f ae21 	bne.w	800b29e <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800b65c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b65e:	2a00      	cmp	r2, #0
 800b660:	f43f ae00 	beq.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
 800b664:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b666:	2a00      	cmp	r2, #0
 800b668:	f47f ae19 	bne.w	800b29e <HAL_I2C_EV_IRQHandler+0x9a>
 800b66c:	e5fa      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800b66e:	4620      	mov	r0, r4
}
 800b670:	b00e      	add	sp, #56	; 0x38
 800b672:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800b676:	f7ff bd0f 	b.w	800b098 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800b67a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b67c:	bb52      	cbnz	r2, 800b6d4 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b67e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b680:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800b684:	611a      	str	r2, [r3, #16]
 800b686:	e5ed      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800b688:	2201      	movs	r2, #1
 800b68a:	62e2      	str	r2, [r4, #44]	; 0x2c
 800b68c:	e619      	b.n	800b2c2 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800b68e:	685a      	ldr	r2, [r3, #4]
 800b690:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b694:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800b696:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800b698:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800b69c:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800b6a0:	bf54      	ite	pl
 800b6a2:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800b6a4:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800b6a6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800b6aa:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800b6ae:	4620      	mov	r0, r4
 800b6b0:	f7ff fc0e 	bl	800aed0 <HAL_I2C_AddrCallback>
 800b6b4:	e5d6      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
 800b6b6:	bf00      	nop
 800b6b8:	0800afa5 	.word	0x0800afa5
      else if (hi2c->EventCount == 1U)
 800b6bc:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b6be:	2a01      	cmp	r2, #1
 800b6c0:	f47f add0 	bne.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800b6c4:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b6c6:	11d2      	asrs	r2, r2, #7
 800b6c8:	f002 0206 	and.w	r2, r2, #6
 800b6cc:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800b6d0:	611a      	str	r2, [r3, #16]
 800b6d2:	e5c7      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b6d4:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b6d6:	f042 0201 	orr.w	r2, r2, #1
 800b6da:	b2d2      	uxtb	r2, r2
 800b6dc:	611a      	str	r2, [r3, #16]
 800b6de:	e5c1      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800b6e0:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800b6e2:	b911      	cbnz	r1, 800b6ea <HAL_I2C_EV_IRQHandler+0x4e6>
 800b6e4:	2a40      	cmp	r2, #64	; 0x40
 800b6e6:	f000 809b 	beq.w	800b820 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800b6ea:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b6ec:	b922      	cbnz	r2, 800b6f8 <HAL_I2C_EV_IRQHandler+0x4f4>
 800b6ee:	6921      	ldr	r1, [r4, #16]
 800b6f0:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800b6f4:	f000 809f 	beq.w	800b836 <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800b6f8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b6fa:	b292      	uxth	r2, r2
 800b6fc:	2a00      	cmp	r2, #0
 800b6fe:	d142      	bne.n	800b786 <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b700:	9203      	str	r2, [sp, #12]
 800b702:	695a      	ldr	r2, [r3, #20]
 800b704:	9203      	str	r2, [sp, #12]
 800b706:	699a      	ldr	r2, [r3, #24]
 800b708:	9203      	str	r2, [sp, #12]
 800b70a:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b70c:	681a      	ldr	r2, [r3, #0]
 800b70e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b712:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800b714:	2300      	movs	r3, #0
 800b716:	6523      	str	r3, [r4, #80]	; 0x50
 800b718:	e5a4      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800b71a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b71c:	6802      	ldr	r2, [r0, #0]
 800b71e:	6852      	ldr	r2, [r2, #4]
 800b720:	b292      	uxth	r2, r2
 800b722:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b724:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b726:	b292      	uxth	r2, r2
 800b728:	b11a      	cbz	r2, 800b732 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b72a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b72c:	f042 0204 	orr.w	r2, r2, #4
 800b730:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b732:	685a      	ldr	r2, [r3, #4]
 800b734:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b738:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800b73a:	f7fe fcab 	bl	800a094 <HAL_DMA_GetState>
 800b73e:	2801      	cmp	r0, #1
 800b740:	f43f ae8e 	beq.w	800b460 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b744:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b746:	4b98      	ldr	r3, [pc, #608]	; (800b9a8 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800b748:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b74a:	f7fe fc91 	bl	800a070 <HAL_DMA_Abort_IT>
 800b74e:	2800      	cmp	r0, #0
 800b750:	f43f ae86 	beq.w	800b460 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b754:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b756:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b758:	4798      	blx	r3
 800b75a:	e681      	b.n	800b460 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b75c:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800b75e:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b760:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b762:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b766:	f7ff fbb1 	bl	800aecc <HAL_I2C_SlaveRxCpltCallback>
 800b76a:	e6a6      	b.n	800b4ba <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800b76c:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b76e:	498f      	ldr	r1, [pc, #572]	; (800b9ac <HAL_I2C_EV_IRQHandler+0x7a8>)
 800b770:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800b772:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800b774:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800b776:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b778:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b77c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800b780:	f7ff fba8 	bl	800aed4 <HAL_I2C_ListenCpltCallback>
 800b784:	e56e      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800b786:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b788:	b292      	uxth	r2, r2
 800b78a:	2a01      	cmp	r2, #1
 800b78c:	d070      	beq.n	800b870 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800b78e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b790:	b292      	uxth	r2, r2
 800b792:	2a02      	cmp	r2, #2
 800b794:	f000 80d6 	beq.w	800b944 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b798:	681a      	ldr	r2, [r3, #0]
 800b79a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b79e:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b7a0:	685a      	ldr	r2, [r3, #4]
 800b7a2:	0511      	lsls	r1, r2, #20
 800b7a4:	d508      	bpl.n	800b7b8 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b7a6:	2820      	cmp	r0, #32
 800b7a8:	f200 80f8 	bhi.w	800b99c <HAL_I2C_EV_IRQHandler+0x798>
 800b7ac:	2807      	cmp	r0, #7
 800b7ae:	f200 80ea 	bhi.w	800b986 <HAL_I2C_EV_IRQHandler+0x782>
 800b7b2:	2801      	cmp	r0, #1
 800b7b4:	f000 80ed 	beq.w	800b992 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b7b8:	2200      	movs	r2, #0
 800b7ba:	9209      	str	r2, [sp, #36]	; 0x24
 800b7bc:	695a      	ldr	r2, [r3, #20]
 800b7be:	9209      	str	r2, [sp, #36]	; 0x24
 800b7c0:	699b      	ldr	r3, [r3, #24]
 800b7c2:	9309      	str	r3, [sp, #36]	; 0x24
 800b7c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b7c6:	e7a5      	b.n	800b714 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b7c8:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b7ca:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b7cc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b7d0:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b7d2:	691b      	ldr	r3, [r3, #16]
 800b7d4:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800b7d6:	e6f1      	b.n	800b5bc <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b7d8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b7da:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b7de:	2a21      	cmp	r2, #33	; 0x21
 800b7e0:	f47f ad40 	bne.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800b7e4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b7e6:	b292      	uxth	r2, r2
 800b7e8:	2a00      	cmp	r2, #0
 800b7ea:	f47f aeb2 	bne.w	800b552 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b7ee:	2908      	cmp	r1, #8
 800b7f0:	f000 80e2 	beq.w	800b9b8 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b7f4:	2920      	cmp	r1, #32
 800b7f6:	f000 80df 	beq.w	800b9b8 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b7fa:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800b7fe:	f000 80db 	beq.w	800b9b8 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b802:	6859      	ldr	r1, [r3, #4]
 800b804:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b808:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b80a:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800b80c:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b80e:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b810:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b814:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b816:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b81a:	f7ff fb51 	bl	800aec0 <HAL_I2C_MasterTxCpltCallback>
 800b81e:	e521      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b820:	9101      	str	r1, [sp, #4]
 800b822:	695a      	ldr	r2, [r3, #20]
 800b824:	9201      	str	r2, [sp, #4]
 800b826:	699b      	ldr	r3, [r3, #24]
 800b828:	9301      	str	r3, [sp, #4]
 800b82a:	9b01      	ldr	r3, [sp, #4]
 800b82c:	e51a      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b82e:	2a21      	cmp	r2, #33	; 0x21
 800b830:	f43f add1 	beq.w	800b3d6 <HAL_I2C_EV_IRQHandler+0x1d2>
 800b834:	e5c9      	b.n	800b3ca <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b836:	9202      	str	r2, [sp, #8]
 800b838:	695a      	ldr	r2, [r3, #20]
 800b83a:	9202      	str	r2, [sp, #8]
 800b83c:	699a      	ldr	r2, [r3, #24]
 800b83e:	9202      	str	r2, [sp, #8]
 800b840:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b842:	681a      	ldr	r2, [r3, #0]
 800b844:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b848:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800b84a:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800b84c:	3301      	adds	r3, #1
 800b84e:	6523      	str	r3, [r4, #80]	; 0x50
 800b850:	e508      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b852:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b854:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b856:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b85a:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b85c:	f43f aeab 	beq.w	800b5b6 <HAL_I2C_EV_IRQHandler+0x3b2>
 800b860:	2902      	cmp	r1, #2
 800b862:	f43f aea8 	beq.w	800b5b6 <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b866:	681a      	ldr	r2, [r3, #0]
 800b868:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b86c:	601a      	str	r2, [r3, #0]
 800b86e:	e6a2      	b.n	800b5b6 <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800b870:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b874:	f000 811b 	beq.w	800baae <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800b878:	2808      	cmp	r0, #8
 800b87a:	f000 8108 	beq.w	800ba8e <HAL_I2C_EV_IRQHandler+0x88a>
 800b87e:	2820      	cmp	r0, #32
 800b880:	f000 8105 	beq.w	800ba8e <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b884:	2d12      	cmp	r5, #18
 800b886:	f000 80ff 	beq.w	800ba88 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b88a:	2810      	cmp	r0, #16
 800b88c:	d804      	bhi.n	800b898 <HAL_I2C_EV_IRQHandler+0x694>
 800b88e:	4a48      	ldr	r2, [pc, #288]	; (800b9b0 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b890:	40c2      	lsrs	r2, r0
 800b892:	07d1      	lsls	r1, r2, #31
 800b894:	f100 814c 	bmi.w	800bb30 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b898:	681a      	ldr	r2, [r3, #0]
 800b89a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b89e:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8a0:	2200      	movs	r2, #0
 800b8a2:	9206      	str	r2, [sp, #24]
 800b8a4:	695a      	ldr	r2, [r3, #20]
 800b8a6:	9206      	str	r2, [sp, #24]
 800b8a8:	699b      	ldr	r3, [r3, #24]
 800b8aa:	9306      	str	r3, [sp, #24]
 800b8ac:	9b06      	ldr	r3, [sp, #24]
 800b8ae:	e731      	b.n	800b714 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b8b0:	685a      	ldr	r2, [r3, #4]
 800b8b2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b8b6:	605a      	str	r2, [r3, #4]
 800b8b8:	e4d4      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800b8ba:	3901      	subs	r1, #1
 800b8bc:	290f      	cmp	r1, #15
 800b8be:	d809      	bhi.n	800b8d4 <HAL_I2C_EV_IRQHandler+0x6d0>
 800b8c0:	e8df f001 	tbb	[pc, r1]
 800b8c4:	3608363b 	.word	0x3608363b
 800b8c8:	08080808 	.word	0x08080808
 800b8cc:	08080808 	.word	0x08080808
 800b8d0:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b8d4:	681a      	ldr	r2, [r3, #0]
 800b8d6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b8da:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b8dc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b8de:	691b      	ldr	r3, [r3, #16]
 800b8e0:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b8e2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b8e4:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b8e6:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800b8e8:	3b01      	subs	r3, #1
 800b8ea:	b29b      	uxth	r3, r3
 800b8ec:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b8ee:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800b8f0:	1c51      	adds	r1, r2, #1
 800b8f2:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b8f4:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800b8f6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b8f8:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800b8fa:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b8fc:	3b01      	subs	r3, #1
 800b8fe:	b29b      	uxth	r3, r3
 800b900:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b902:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800b904:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b906:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800b90a:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800b90c:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b90e:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800b910:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b914:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800b918:	2b40      	cmp	r3, #64	; 0x40
 800b91a:	f000 80f5 	beq.w	800bb08 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b91e:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b920:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b922:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b926:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b928:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b92a:	f7ff facb 	bl	800aec4 <HAL_I2C_MasterRxCpltCallback>
 800b92e:	e499      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b930:	681a      	ldr	r2, [r3, #0]
 800b932:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b936:	601a      	str	r2, [r3, #0]
 800b938:	e7d0      	b.n	800b8dc <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b93a:	681a      	ldr	r2, [r3, #0]
 800b93c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b940:	601a      	str	r2, [r3, #0]
 800b942:	e7cb      	b.n	800b8dc <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b944:	2810      	cmp	r0, #16
 800b946:	d804      	bhi.n	800b952 <HAL_I2C_EV_IRQHandler+0x74e>
 800b948:	4a19      	ldr	r2, [pc, #100]	; (800b9b0 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b94a:	40c2      	lsrs	r2, r0
 800b94c:	07d2      	lsls	r2, r2, #31
 800b94e:	f100 80c2 	bmi.w	800bad6 <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b952:	681a      	ldr	r2, [r3, #0]
 800b954:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b958:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b95a:	681a      	ldr	r2, [r3, #0]
 800b95c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b960:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b962:	685a      	ldr	r2, [r3, #4]
 800b964:	0516      	lsls	r6, r2, #20
 800b966:	d506      	bpl.n	800b976 <HAL_I2C_EV_IRQHandler+0x772>
 800b968:	2820      	cmp	r0, #32
 800b96a:	f240 80bc 	bls.w	800bae6 <HAL_I2C_EV_IRQHandler+0x8e2>
 800b96e:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b972:	f000 80bd 	beq.w	800baf0 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b976:	2200      	movs	r2, #0
 800b978:	9208      	str	r2, [sp, #32]
 800b97a:	695a      	ldr	r2, [r3, #20]
 800b97c:	9208      	str	r2, [sp, #32]
 800b97e:	699b      	ldr	r3, [r3, #24]
 800b980:	9308      	str	r3, [sp, #32]
 800b982:	9b08      	ldr	r3, [sp, #32]
 800b984:	e6c6      	b.n	800b714 <HAL_I2C_EV_IRQHandler+0x510>
 800b986:	4a0b      	ldr	r2, [pc, #44]	; (800b9b4 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800b988:	3808      	subs	r0, #8
 800b98a:	40c2      	lsrs	r2, r0
 800b98c:	07d2      	lsls	r2, r2, #31
 800b98e:	f57f af13 	bpl.w	800b7b8 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b992:	685a      	ldr	r2, [r3, #4]
 800b994:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b998:	605a      	str	r2, [r3, #4]
 800b99a:	e70d      	b.n	800b7b8 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b99c:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b9a0:	f47f af0a 	bne.w	800b7b8 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b9a4:	e7f5      	b.n	800b992 <HAL_I2C_EV_IRQHandler+0x78e>
 800b9a6:	bf00      	nop
 800b9a8:	0800afa5 	.word	0x0800afa5
 800b9ac:	ffff0000 	.word	0xffff0000
 800b9b0:	00010014 	.word	0x00010014
 800b9b4:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b9b8:	6859      	ldr	r1, [r3, #4]
 800b9ba:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b9be:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b9c0:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b9c2:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b9c4:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b9c6:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800b9ca:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b9cc:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800b9ce:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b9d2:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b9d6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b9da:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b9dc:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b9de:	f47f af1c 	bne.w	800b81a <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b9e2:	f7ff fa79 	bl	800aed8 <HAL_I2C_MemTxCpltCallback>
 800b9e6:	e43d      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800b9e8:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800b9ea:	2802      	cmp	r0, #2
 800b9ec:	f43f af60 	beq.w	800b8b0 <HAL_I2C_EV_IRQHandler+0x6ac>
 800b9f0:	2a01      	cmp	r2, #1
 800b9f2:	f63f af5d 	bhi.w	800b8b0 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b9f6:	4a62      	ldr	r2, [pc, #392]	; (800bb80 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800b9f8:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b9fa:	6812      	ldr	r2, [r2, #0]
 800b9fc:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800ba00:	fbb2 f2f0 	udiv	r2, r2, r0
 800ba04:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800ba08:	920b      	str	r2, [sp, #44]	; 0x2c
 800ba0a:	e004      	b.n	800ba16 <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ba0c:	681a      	ldr	r2, [r3, #0]
 800ba0e:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800ba12:	f000 8092 	beq.w	800bb3a <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800ba16:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ba18:	3a01      	subs	r2, #1
 800ba1a:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800ba1c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ba1e:	2900      	cmp	r1, #0
 800ba20:	d1f4      	bne.n	800ba0c <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ba22:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ba24:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ba26:	f042 0220 	orr.w	r2, r2, #32
 800ba2a:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ba2c:	685a      	ldr	r2, [r3, #4]
 800ba2e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800ba32:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ba34:	691b      	ldr	r3, [r3, #16]
 800ba36:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800ba38:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800ba3a:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ba3c:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800ba3e:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800ba40:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800ba42:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800ba44:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800ba46:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800ba48:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800ba4c:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800ba4e:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800ba52:	f7ff faa3 	bl	800af9c <HAL_I2C_ErrorCallback>
 800ba56:	e405      	b.n	800b264 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800ba58:	2d08      	cmp	r5, #8
 800ba5a:	d0ad      	beq.n	800b9b8 <HAL_I2C_EV_IRQHandler+0x7b4>
 800ba5c:	2d20      	cmp	r5, #32
 800ba5e:	d0ab      	beq.n	800b9b8 <HAL_I2C_EV_IRQHandler+0x7b4>
 800ba60:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800ba64:	d0a8      	beq.n	800b9b8 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ba66:	685a      	ldr	r2, [r3, #4]
 800ba68:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800ba6c:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ba6e:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ba70:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800ba72:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ba74:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ba76:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800ba7a:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800ba7c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800ba80:	f7ff fa1e 	bl	800aec0 <HAL_I2C_MasterTxCpltCallback>
 800ba84:	f7ff bbee 	b.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800ba88:	2801      	cmp	r0, #1
 800ba8a:	f43f af05 	beq.w	800b898 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ba8e:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ba90:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ba92:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ba96:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ba98:	9107      	str	r1, [sp, #28]
 800ba9a:	695a      	ldr	r2, [r3, #20]
 800ba9c:	9207      	str	r2, [sp, #28]
 800ba9e:	699a      	ldr	r2, [r3, #24]
 800baa0:	9207      	str	r2, [sp, #28]
 800baa2:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800baa4:	681a      	ldr	r2, [r3, #0]
 800baa6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800baaa:	601a      	str	r2, [r3, #0]
 800baac:	e632      	b.n	800b714 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800baae:	681a      	ldr	r2, [r3, #0]
 800bab0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bab4:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800bab6:	685a      	ldr	r2, [r3, #4]
 800bab8:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800babc:	d02d      	beq.n	800bb1a <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800babe:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bac0:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bac2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bac6:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bac8:	9104      	str	r1, [sp, #16]
 800baca:	695a      	ldr	r2, [r3, #20]
 800bacc:	9204      	str	r2, [sp, #16]
 800bace:	699b      	ldr	r3, [r3, #24]
 800bad0:	9304      	str	r3, [sp, #16]
 800bad2:	9b04      	ldr	r3, [sp, #16]
 800bad4:	e61e      	b.n	800b714 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bad6:	681a      	ldr	r2, [r3, #0]
 800bad8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800badc:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800bade:	685a      	ldr	r2, [r3, #4]
 800bae0:	0515      	lsls	r5, r2, #20
 800bae2:	f57f af48 	bpl.w	800b976 <HAL_I2C_EV_IRQHandler+0x772>
 800bae6:	2807      	cmp	r0, #7
 800bae8:	d807      	bhi.n	800bafa <HAL_I2C_EV_IRQHandler+0x8f6>
 800baea:	2801      	cmp	r0, #1
 800baec:	f47f af43 	bne.w	800b976 <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800baf0:	685a      	ldr	r2, [r3, #4]
 800baf2:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800baf6:	605a      	str	r2, [r3, #4]
 800baf8:	e73d      	b.n	800b976 <HAL_I2C_EV_IRQHandler+0x772>
 800bafa:	4a22      	ldr	r2, [pc, #136]	; (800bb84 <HAL_I2C_EV_IRQHandler+0x980>)
 800bafc:	3808      	subs	r0, #8
 800bafe:	40c2      	lsrs	r2, r0
 800bb00:	07d0      	lsls	r0, r2, #31
 800bb02:	f57f af38 	bpl.w	800b976 <HAL_I2C_EV_IRQHandler+0x772>
 800bb06:	e7f3      	b.n	800baf0 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bb08:	2300      	movs	r3, #0
 800bb0a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800bb0e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800bb10:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800bb12:	f7ff fa41 	bl	800af98 <HAL_I2C_MemRxCpltCallback>
 800bb16:	f7ff bba5 	b.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bb1a:	9205      	str	r2, [sp, #20]
 800bb1c:	695a      	ldr	r2, [r3, #20]
 800bb1e:	9205      	str	r2, [sp, #20]
 800bb20:	699a      	ldr	r2, [r3, #24]
 800bb22:	9205      	str	r2, [sp, #20]
 800bb24:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bb26:	681a      	ldr	r2, [r3, #0]
 800bb28:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800bb2c:	601a      	str	r2, [r3, #0]
 800bb2e:	e5f1      	b.n	800b714 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb30:	681a      	ldr	r2, [r3, #0]
 800bb32:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800bb36:	601a      	str	r2, [r3, #0]
 800bb38:	e6b2      	b.n	800b8a0 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb3a:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bb3c:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb3e:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800bb42:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800bb44:	6859      	ldr	r1, [r3, #4]
 800bb46:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800bb4a:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bb4c:	691b      	ldr	r3, [r3, #16]
 800bb4e:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800bb50:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800bb52:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800bb54:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800bb56:	b29b      	uxth	r3, r3
 800bb58:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800bb5a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800bb5e:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bb60:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800bb64:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bb66:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800bb68:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bb6a:	f47f aed9 	bne.w	800b920 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800bb6e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800bb72:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800bb74:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800bb76:	f7ff fa0f 	bl	800af98 <HAL_I2C_MemRxCpltCallback>
 800bb7a:	f7ff bb73 	b.w	800b264 <HAL_I2C_EV_IRQHandler+0x60>
 800bb7e:	bf00      	nop
 800bb80:	20000078 	.word	0x20000078
 800bb84:	01000101 	.word	0x01000101

0800bb88 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800bb88:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800bb8c:	2a20      	cmp	r2, #32
{
 800bb8e:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800bb90:	fa5f fc82 	uxtb.w	ip, r2
 800bb94:	d001      	beq.n	800bb9a <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800bb96:	2002      	movs	r0, #2
  }
}
 800bb98:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800bb9a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800bb9c:	2024      	movs	r0, #36	; 0x24
 800bb9e:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800bba2:	6810      	ldr	r0, [r2, #0]
 800bba4:	f020 0001 	bic.w	r0, r0, #1
 800bba8:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800bbaa:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800bbac:	f020 0010 	bic.w	r0, r0, #16
 800bbb0:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800bbb2:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800bbb4:	4301      	orrs	r1, r0
 800bbb6:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800bbb8:	6811      	ldr	r1, [r2, #0]
 800bbba:	f041 0101 	orr.w	r1, r1, #1
 800bbbe:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800bbc0:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800bbc2:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800bbc6:	4770      	bx	lr

0800bbc8 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800bbc8:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800bbcc:	2a20      	cmp	r2, #32
 800bbce:	d001      	beq.n	800bbd4 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800bbd0:	2002      	movs	r0, #2
  }
}
 800bbd2:	4770      	bx	lr
{
 800bbd4:	b410      	push	{r4}
 800bbd6:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800bbda:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800bbdc:	2224      	movs	r2, #36	; 0x24
 800bbde:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800bbe2:	6822      	ldr	r2, [r4, #0]
 800bbe4:	f022 0201 	bic.w	r2, r2, #1
 800bbe8:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800bbea:	4603      	mov	r3, r0
 800bbec:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800bbee:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800bbf2:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800bbf4:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800bbf6:	b289      	uxth	r1, r1
 800bbf8:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800bbfa:	6822      	ldr	r2, [r4, #0]
 800bbfc:	f042 0201 	orr.w	r2, r2, #1
 800bc00:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800bc02:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800bc06:	2000      	movs	r0, #0
}
 800bc08:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bc0c:	4770      	bx	lr
 800bc0e:	bf00      	nop

0800bc10 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800bc10:	2800      	cmp	r0, #0
 800bc12:	d069      	beq.n	800bce8 <HAL_LTDC_Init+0xd8>
{
 800bc14:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800bc16:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800bc1a:	4604      	mov	r4, r0
 800bc1c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800bc20:	2b00      	cmp	r3, #0
 800bc22:	d05c      	beq.n	800bcde <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bc24:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800bc26:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bc28:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bc2c:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800bc30:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bc32:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800bc34:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800bc38:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800bc3c:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bc3e:	6999      	ldr	r1, [r3, #24]
 800bc40:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800bc42:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bc44:	430a      	orrs	r2, r1
 800bc46:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800bc48:	689a      	ldr	r2, [r3, #8]
 800bc4a:	4928      	ldr	r1, [pc, #160]	; (800bcec <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800bc4c:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800bc4e:	400a      	ands	r2, r1
 800bc50:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800bc52:	689a      	ldr	r2, [r3, #8]
 800bc54:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bc58:	69a0      	ldr	r0, [r4, #24]
 800bc5a:	4302      	orrs	r2, r0
 800bc5c:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800bc5e:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800bc60:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800bc62:	400a      	ands	r2, r1
 800bc64:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800bc66:	68da      	ldr	r2, [r3, #12]
 800bc68:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bc6c:	6a20      	ldr	r0, [r4, #32]
 800bc6e:	4302      	orrs	r2, r0
 800bc70:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800bc72:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800bc74:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800bc76:	400a      	ands	r2, r1
 800bc78:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800bc7a:	691a      	ldr	r2, [r3, #16]
 800bc7c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bc80:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800bc82:	4302      	orrs	r2, r0
 800bc84:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800bc86:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800bc88:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800bc8a:	400a      	ands	r2, r1
 800bc8c:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800bc8e:	695a      	ldr	r2, [r3, #20]
 800bc90:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bc92:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bc96:	430a      	orrs	r2, r1
 800bc98:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800bc9a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800bc9c:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800bca0:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800bca4:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800bca8:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800bcaa:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800bcac:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800bcb0:	432a      	orrs	r2, r5
 800bcb2:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800bcb6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800bcba:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800bcbc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bcbe:	f042 0206 	orr.w	r2, r2, #6
 800bcc2:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800bcc4:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800bcc6:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bcca:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800bccc:	ea42 020c 	orr.w	r2, r2, ip
 800bcd0:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bcd2:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800bcd6:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800bcda:	4608      	mov	r0, r1
}
 800bcdc:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800bcde:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800bce2:	f7f6 fd47 	bl	8002774 <HAL_LTDC_MspInit>
 800bce6:	e79d      	b.n	800bc24 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800bce8:	2001      	movs	r0, #1
}
 800bcea:	4770      	bx	lr
 800bcec:	f000f800 	.word	0xf000f800

0800bcf0 <HAL_LTDC_ErrorCallback>:
 800bcf0:	4770      	bx	lr
 800bcf2:	bf00      	nop

0800bcf4 <HAL_LTDC_ReloadEventCallback>:
 800bcf4:	4770      	bx	lr
 800bcf6:	bf00      	nop

0800bcf8 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800bcf8:	6803      	ldr	r3, [r0, #0]
{
 800bcfa:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800bcfc:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800bcfe:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bd00:	076a      	lsls	r2, r5, #29
{
 800bd02:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bd04:	d501      	bpl.n	800bd0a <HAL_LTDC_IRQHandler+0x12>
 800bd06:	0771      	lsls	r1, r6, #29
 800bd08:	d41d      	bmi.n	800bd46 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800bd0a:	07aa      	lsls	r2, r5, #30
 800bd0c:	d501      	bpl.n	800bd12 <HAL_LTDC_IRQHandler+0x1a>
 800bd0e:	07b3      	lsls	r3, r6, #30
 800bd10:	d42d      	bmi.n	800bd6e <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800bd12:	07e8      	lsls	r0, r5, #31
 800bd14:	d501      	bpl.n	800bd1a <HAL_LTDC_IRQHandler+0x22>
 800bd16:	07f1      	lsls	r1, r6, #31
 800bd18:	d440      	bmi.n	800bd9c <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800bd1a:	072a      	lsls	r2, r5, #28
 800bd1c:	d501      	bpl.n	800bd22 <HAL_LTDC_IRQHandler+0x2a>
 800bd1e:	0733      	lsls	r3, r6, #28
 800bd20:	d400      	bmi.n	800bd24 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800bd22:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bd24:	6823      	ldr	r3, [r4, #0]
 800bd26:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bd28:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bd2a:	f022 0208 	bic.w	r2, r2, #8
 800bd2e:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800bd30:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bd32:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bd34:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bd36:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bd3a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800bd3e:	4620      	mov	r0, r4
 800bd40:	f7ff ffd8 	bl	800bcf4 <HAL_LTDC_ReloadEventCallback>
}
 800bd44:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800bd46:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bd48:	f022 0204 	bic.w	r2, r2, #4
 800bd4c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800bd4e:	2204      	movs	r2, #4
 800bd50:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800bd52:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800bd56:	f043 0301 	orr.w	r3, r3, #1
 800bd5a:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800bd5e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bd60:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bd64:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bd68:	f7ff ffc2 	bl	800bcf0 <HAL_LTDC_ErrorCallback>
 800bd6c:	e7cd      	b.n	800bd0a <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800bd6e:	6823      	ldr	r3, [r4, #0]
 800bd70:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bd72:	f022 0202 	bic.w	r2, r2, #2
 800bd76:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800bd78:	2202      	movs	r2, #2
 800bd7a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800bd7c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800bd80:	f043 0302 	orr.w	r3, r3, #2
 800bd84:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bd88:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800bd8a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bd8c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bd90:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bd94:	4620      	mov	r0, r4
 800bd96:	f7ff ffab 	bl	800bcf0 <HAL_LTDC_ErrorCallback>
 800bd9a:	e7ba      	b.n	800bd12 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bd9c:	6823      	ldr	r3, [r4, #0]
 800bd9e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bda0:	f022 0201 	bic.w	r2, r2, #1
 800bda4:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800bda6:	2201      	movs	r2, #1
 800bda8:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bdaa:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bdac:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bdb0:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800bdb4:	4620      	mov	r0, r4
 800bdb6:	f7f5 fcef 	bl	8001798 <HAL_LTDC_LineEventCallback>
 800bdba:	e7ae      	b.n	800bd1a <HAL_LTDC_IRQHandler+0x22>

0800bdbc <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800bdbc:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800bdc0:	2b01      	cmp	r3, #1
 800bdc2:	f000 80c2 	beq.w	800bf4a <HAL_LTDC_ConfigLayer+0x18e>
{
 800bdc6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bdca:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bdce:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bdd2:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bdd6:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bdd8:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bdda:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bdde:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800bde2:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bde6:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800bdea:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bdee:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800bdf2:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bdf4:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bdf8:	460c      	mov	r4, r1
 800bdfa:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bdfc:	9301      	str	r3, [sp, #4]
 800bdfe:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800be00:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800be02:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800be06:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800be0a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800be0c:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800be0e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800be12:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800be14:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800be18:	6823      	ldr	r3, [r4, #0]
 800be1a:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800be1e:	9b01      	ldr	r3, [sp, #4]
 800be20:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800be24:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800be28:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800be2a:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800be2c:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800be30:	1c51      	adds	r1, r2, #1
 800be32:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800be36:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800be38:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800be3a:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800be3e:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800be42:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800be46:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800be4a:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800be4e:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800be52:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800be56:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800be58:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800be5a:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800be5e:	3301      	adds	r3, #1
 800be60:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800be64:	4403      	add	r3, r0
 800be66:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800be6a:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800be6e:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800be72:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800be74:	f023 0307 	bic.w	r3, r3, #7
 800be78:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800be7c:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800be80:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800be84:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800be88:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800be8c:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800be90:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800be94:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800be98:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800be9c:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800bea0:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800bea4:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800bea8:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800beac:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800beb0:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800beb4:	696b      	ldr	r3, [r5, #20]
 800beb6:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800beba:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800bebe:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800bec2:	f023 0307 	bic.w	r3, r3, #7
 800bec6:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800beca:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800bece:	4303      	orrs	r3, r0
 800bed0:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800bed4:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bed8:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800beda:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bede:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800bee2:	bb69      	cbnz	r1, 800bf40 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800bee4:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800bee6:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bee8:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800beea:	fb03 f707 	mul.w	r7, r3, r7
 800beee:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bef0:	fb02 f303 	mul.w	r3, r2, r3
 800bef4:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800bef8:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800befc:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800befe:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800bf02:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bf06:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800bf0a:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800bf0e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800bf12:	f023 0307 	bic.w	r3, r3, #7
 800bf16:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800bf1a:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800bf1e:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bf22:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800bf24:	4313      	orrs	r3, r2
 800bf26:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800bf2a:	2300      	movs	r3, #0
  return HAL_OK;
 800bf2c:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bf2e:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800bf32:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800bf36:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800bf3a:	b003      	add	sp, #12
 800bf3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800bf40:	3901      	subs	r1, #1
 800bf42:	2906      	cmp	r1, #6
 800bf44:	d903      	bls.n	800bf4e <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800bf46:	2301      	movs	r3, #1
 800bf48:	e7cd      	b.n	800bee6 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800bf4a:	2002      	movs	r0, #2
}
 800bf4c:	4770      	bx	lr
 800bf4e:	4b02      	ldr	r3, [pc, #8]	; (800bf58 <HAL_LTDC_ConfigLayer+0x19c>)
 800bf50:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800bf54:	e7c7      	b.n	800bee6 <HAL_LTDC_ConfigLayer+0x12a>
 800bf56:	bf00      	nop
 800bf58:	0802ea60 	.word	0x0802ea60

0800bf5c <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800bf5c:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800bf60:	2b01      	cmp	r3, #1
 800bf62:	d019      	beq.n	800bf98 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bf64:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bf66:	2302      	movs	r3, #2
{
 800bf68:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bf6a:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bf6e:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800bf70:	4c0a      	ldr	r4, [pc, #40]	; (800bf9c <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bf72:	f023 0301 	bic.w	r3, r3, #1
 800bf76:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800bf78:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bf7a:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800bf7c:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bf7e:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800bf82:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bf86:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800bf88:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800bf8c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800bf90:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800bf94:	4618      	mov	r0, r3
}
 800bf96:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800bf98:	2002      	movs	r0, #2
}
 800bf9a:	4770      	bx	lr
 800bf9c:	40016800 	.word	0x40016800

0800bfa0 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800bfa0:	2800      	cmp	r0, #0
 800bfa2:	f000 81a2 	beq.w	800c2ea <HAL_RCC_OscConfig+0x34a>
{
 800bfa6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800bfaa:	6803      	ldr	r3, [r0, #0]
 800bfac:	07dd      	lsls	r5, r3, #31
{
 800bfae:	b082      	sub	sp, #8
 800bfb0:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800bfb2:	d52f      	bpl.n	800c014 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800bfb4:	499e      	ldr	r1, [pc, #632]	; (800c230 <HAL_RCC_OscConfig+0x290>)
 800bfb6:	688a      	ldr	r2, [r1, #8]
 800bfb8:	f002 020c 	and.w	r2, r2, #12
 800bfbc:	2a04      	cmp	r2, #4
 800bfbe:	f000 80ed 	beq.w	800c19c <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800bfc2:	688a      	ldr	r2, [r1, #8]
 800bfc4:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800bfc8:	2a08      	cmp	r2, #8
 800bfca:	f000 80e3 	beq.w	800c194 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800bfce:	6863      	ldr	r3, [r4, #4]
 800bfd0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800bfd4:	f000 80ec 	beq.w	800c1b0 <HAL_RCC_OscConfig+0x210>
 800bfd8:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800bfdc:	f000 8175 	beq.w	800c2ca <HAL_RCC_OscConfig+0x32a>
 800bfe0:	4d93      	ldr	r5, [pc, #588]	; (800c230 <HAL_RCC_OscConfig+0x290>)
 800bfe2:	682a      	ldr	r2, [r5, #0]
 800bfe4:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800bfe8:	602a      	str	r2, [r5, #0]
 800bfea:	682a      	ldr	r2, [r5, #0]
 800bfec:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800bff0:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800bff2:	2b00      	cmp	r3, #0
 800bff4:	f040 80e1 	bne.w	800c1ba <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800bff8:	f7fd ffb0 	bl	8009f5c <HAL_GetTick>
 800bffc:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800bffe:	e005      	b.n	800c00c <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c000:	f7fd ffac 	bl	8009f5c <HAL_GetTick>
 800c004:	1b80      	subs	r0, r0, r6
 800c006:	2864      	cmp	r0, #100	; 0x64
 800c008:	f200 8101 	bhi.w	800c20e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800c00c:	682b      	ldr	r3, [r5, #0]
 800c00e:	039b      	lsls	r3, r3, #14
 800c010:	d4f6      	bmi.n	800c000 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800c012:	6823      	ldr	r3, [r4, #0]
 800c014:	079f      	lsls	r7, r3, #30
 800c016:	d528      	bpl.n	800c06a <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800c018:	4a85      	ldr	r2, [pc, #532]	; (800c230 <HAL_RCC_OscConfig+0x290>)
 800c01a:	6891      	ldr	r1, [r2, #8]
 800c01c:	f011 0f0c 	tst.w	r1, #12
 800c020:	f000 8090 	beq.w	800c144 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c024:	6891      	ldr	r1, [r2, #8]
 800c026:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800c02a:	2908      	cmp	r1, #8
 800c02c:	f000 8086 	beq.w	800c13c <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800c030:	68e3      	ldr	r3, [r4, #12]
 800c032:	2b00      	cmp	r3, #0
 800c034:	f000 810e 	beq.w	800c254 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800c038:	4b7e      	ldr	r3, [pc, #504]	; (800c234 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c03a:	4e7d      	ldr	r6, [pc, #500]	; (800c230 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800c03c:	2201      	movs	r2, #1
 800c03e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c040:	f7fd ff8c 	bl	8009f5c <HAL_GetTick>
 800c044:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c046:	e005      	b.n	800c054 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c048:	f7fd ff88 	bl	8009f5c <HAL_GetTick>
 800c04c:	1b40      	subs	r0, r0, r5
 800c04e:	2802      	cmp	r0, #2
 800c050:	f200 80dd 	bhi.w	800c20e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c054:	6833      	ldr	r3, [r6, #0]
 800c056:	0798      	lsls	r0, r3, #30
 800c058:	d5f6      	bpl.n	800c048 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c05a:	6833      	ldr	r3, [r6, #0]
 800c05c:	6922      	ldr	r2, [r4, #16]
 800c05e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800c062:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800c066:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c068:	6823      	ldr	r3, [r4, #0]
 800c06a:	071a      	lsls	r2, r3, #28
 800c06c:	d451      	bmi.n	800c112 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800c06e:	0758      	lsls	r0, r3, #29
 800c070:	d52f      	bpl.n	800c0d2 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800c072:	4a6f      	ldr	r2, [pc, #444]	; (800c230 <HAL_RCC_OscConfig+0x290>)
 800c074:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c076:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800c07a:	d07f      	beq.n	800c17c <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800c07c:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c07e:	4e6e      	ldr	r6, [pc, #440]	; (800c238 <HAL_RCC_OscConfig+0x298>)
 800c080:	6833      	ldr	r3, [r6, #0]
 800c082:	05d9      	lsls	r1, r3, #23
 800c084:	f140 80b3 	bpl.w	800c1ee <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c088:	68a3      	ldr	r3, [r4, #8]
 800c08a:	2b01      	cmp	r3, #1
 800c08c:	f000 80c3 	beq.w	800c216 <HAL_RCC_OscConfig+0x276>
 800c090:	2b05      	cmp	r3, #5
 800c092:	f000 812c 	beq.w	800c2ee <HAL_RCC_OscConfig+0x34e>
 800c096:	4e66      	ldr	r6, [pc, #408]	; (800c230 <HAL_RCC_OscConfig+0x290>)
 800c098:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800c09a:	f022 0201 	bic.w	r2, r2, #1
 800c09e:	6732      	str	r2, [r6, #112]	; 0x70
 800c0a0:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800c0a2:	f022 0204 	bic.w	r2, r2, #4
 800c0a6:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c0a8:	2b00      	cmp	r3, #0
 800c0aa:	f040 80b9 	bne.w	800c220 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800c0ae:	f7fd ff55 	bl	8009f5c <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c0b2:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800c0b6:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800c0b8:	e005      	b.n	800c0c6 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c0ba:	f7fd ff4f 	bl	8009f5c <HAL_GetTick>
 800c0be:	1bc0      	subs	r0, r0, r7
 800c0c0:	4540      	cmp	r0, r8
 800c0c2:	f200 80a4 	bhi.w	800c20e <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800c0c6:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800c0c8:	0798      	lsls	r0, r3, #30
 800c0ca:	d4f6      	bmi.n	800c0ba <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800c0cc:	2d00      	cmp	r5, #0
 800c0ce:	f040 8106 	bne.w	800c2de <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800c0d2:	69a0      	ldr	r0, [r4, #24]
 800c0d4:	b1c8      	cbz	r0, 800c10a <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800c0d6:	4d56      	ldr	r5, [pc, #344]	; (800c230 <HAL_RCC_OscConfig+0x290>)
 800c0d8:	68ab      	ldr	r3, [r5, #8]
 800c0da:	f003 030c 	and.w	r3, r3, #12
 800c0de:	2b08      	cmp	r3, #8
 800c0e0:	f000 80c9 	beq.w	800c276 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800c0e4:	4b53      	ldr	r3, [pc, #332]	; (800c234 <HAL_RCC_OscConfig+0x294>)
 800c0e6:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800c0e8:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800c0ea:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800c0ec:	f000 8109 	beq.w	800c302 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800c0f0:	f7fd ff34 	bl	8009f5c <HAL_GetTick>
 800c0f4:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c0f6:	e005      	b.n	800c104 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c0f8:	f7fd ff30 	bl	8009f5c <HAL_GetTick>
 800c0fc:	1b00      	subs	r0, r0, r4
 800c0fe:	2802      	cmp	r0, #2
 800c100:	f200 8085 	bhi.w	800c20e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c104:	682b      	ldr	r3, [r5, #0]
 800c106:	019b      	lsls	r3, r3, #6
 800c108:	d4f6      	bmi.n	800c0f8 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800c10a:	2000      	movs	r0, #0
}
 800c10c:	b002      	add	sp, #8
 800c10e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800c112:	6963      	ldr	r3, [r4, #20]
 800c114:	b30b      	cbz	r3, 800c15a <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800c116:	4b47      	ldr	r3, [pc, #284]	; (800c234 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c118:	4e45      	ldr	r6, [pc, #276]	; (800c230 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800c11a:	2201      	movs	r2, #1
 800c11c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800c120:	f7fd ff1c 	bl	8009f5c <HAL_GetTick>
 800c124:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c126:	e004      	b.n	800c132 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c128:	f7fd ff18 	bl	8009f5c <HAL_GetTick>
 800c12c:	1b40      	subs	r0, r0, r5
 800c12e:	2802      	cmp	r0, #2
 800c130:	d86d      	bhi.n	800c20e <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c132:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c134:	079b      	lsls	r3, r3, #30
 800c136:	d5f7      	bpl.n	800c128 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800c138:	6823      	ldr	r3, [r4, #0]
 800c13a:	e798      	b.n	800c06e <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c13c:	6852      	ldr	r2, [r2, #4]
 800c13e:	0256      	lsls	r6, r2, #9
 800c140:	f53f af76 	bmi.w	800c030 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800c144:	4a3a      	ldr	r2, [pc, #232]	; (800c230 <HAL_RCC_OscConfig+0x290>)
 800c146:	6812      	ldr	r2, [r2, #0]
 800c148:	0795      	lsls	r5, r2, #30
 800c14a:	d544      	bpl.n	800c1d6 <HAL_RCC_OscConfig+0x236>
 800c14c:	68e2      	ldr	r2, [r4, #12]
 800c14e:	2a01      	cmp	r2, #1
 800c150:	d041      	beq.n	800c1d6 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800c152:	2001      	movs	r0, #1
}
 800c154:	b002      	add	sp, #8
 800c156:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800c15a:	4a36      	ldr	r2, [pc, #216]	; (800c234 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c15c:	4e34      	ldr	r6, [pc, #208]	; (800c230 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800c15e:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800c162:	f7fd fefb 	bl	8009f5c <HAL_GetTick>
 800c166:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c168:	e004      	b.n	800c174 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c16a:	f7fd fef7 	bl	8009f5c <HAL_GetTick>
 800c16e:	1b40      	subs	r0, r0, r5
 800c170:	2802      	cmp	r0, #2
 800c172:	d84c      	bhi.n	800c20e <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c174:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c176:	079f      	lsls	r7, r3, #30
 800c178:	d4f7      	bmi.n	800c16a <HAL_RCC_OscConfig+0x1ca>
 800c17a:	e7dd      	b.n	800c138 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800c17c:	9301      	str	r3, [sp, #4]
 800c17e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c180:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800c184:	6413      	str	r3, [r2, #64]	; 0x40
 800c186:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c188:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c18c:	9301      	str	r3, [sp, #4]
 800c18e:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800c190:	2501      	movs	r5, #1
 800c192:	e774      	b.n	800c07e <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c194:	684a      	ldr	r2, [r1, #4]
 800c196:	0250      	lsls	r0, r2, #9
 800c198:	f57f af19 	bpl.w	800bfce <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800c19c:	4a24      	ldr	r2, [pc, #144]	; (800c230 <HAL_RCC_OscConfig+0x290>)
 800c19e:	6812      	ldr	r2, [r2, #0]
 800c1a0:	0391      	lsls	r1, r2, #14
 800c1a2:	f57f af37 	bpl.w	800c014 <HAL_RCC_OscConfig+0x74>
 800c1a6:	6862      	ldr	r2, [r4, #4]
 800c1a8:	2a00      	cmp	r2, #0
 800c1aa:	f47f af33 	bne.w	800c014 <HAL_RCC_OscConfig+0x74>
 800c1ae:	e7d0      	b.n	800c152 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c1b0:	4a1f      	ldr	r2, [pc, #124]	; (800c230 <HAL_RCC_OscConfig+0x290>)
 800c1b2:	6813      	ldr	r3, [r2, #0]
 800c1b4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800c1b8:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800c1ba:	f7fd fecf 	bl	8009f5c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c1be:	4e1c      	ldr	r6, [pc, #112]	; (800c230 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800c1c0:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c1c2:	e004      	b.n	800c1ce <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c1c4:	f7fd feca 	bl	8009f5c <HAL_GetTick>
 800c1c8:	1b40      	subs	r0, r0, r5
 800c1ca:	2864      	cmp	r0, #100	; 0x64
 800c1cc:	d81f      	bhi.n	800c20e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c1ce:	6833      	ldr	r3, [r6, #0]
 800c1d0:	039a      	lsls	r2, r3, #14
 800c1d2:	d5f7      	bpl.n	800c1c4 <HAL_RCC_OscConfig+0x224>
 800c1d4:	e71d      	b.n	800c012 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c1d6:	4916      	ldr	r1, [pc, #88]	; (800c230 <HAL_RCC_OscConfig+0x290>)
 800c1d8:	6920      	ldr	r0, [r4, #16]
 800c1da:	680a      	ldr	r2, [r1, #0]
 800c1dc:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800c1e0:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800c1e4:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c1e6:	071a      	lsls	r2, r3, #28
 800c1e8:	f57f af41 	bpl.w	800c06e <HAL_RCC_OscConfig+0xce>
 800c1ec:	e791      	b.n	800c112 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800c1ee:	6833      	ldr	r3, [r6, #0]
 800c1f0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c1f4:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800c1f6:	f7fd feb1 	bl	8009f5c <HAL_GetTick>
 800c1fa:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c1fc:	6833      	ldr	r3, [r6, #0]
 800c1fe:	05da      	lsls	r2, r3, #23
 800c200:	f53f af42 	bmi.w	800c088 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800c204:	f7fd feaa 	bl	8009f5c <HAL_GetTick>
 800c208:	1bc0      	subs	r0, r0, r7
 800c20a:	2802      	cmp	r0, #2
 800c20c:	d9f6      	bls.n	800c1fc <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800c20e:	2003      	movs	r0, #3
}
 800c210:	b002      	add	sp, #8
 800c212:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c216:	4a06      	ldr	r2, [pc, #24]	; (800c230 <HAL_RCC_OscConfig+0x290>)
 800c218:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800c21a:	f043 0301 	orr.w	r3, r3, #1
 800c21e:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800c220:	f7fd fe9c 	bl	8009f5c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c224:	4f02      	ldr	r7, [pc, #8]	; (800c230 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800c226:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c228:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c22c:	e00b      	b.n	800c246 <HAL_RCC_OscConfig+0x2a6>
 800c22e:	bf00      	nop
 800c230:	40023800 	.word	0x40023800
 800c234:	42470000 	.word	0x42470000
 800c238:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c23c:	f7fd fe8e 	bl	8009f5c <HAL_GetTick>
 800c240:	1b80      	subs	r0, r0, r6
 800c242:	4540      	cmp	r0, r8
 800c244:	d8e3      	bhi.n	800c20e <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c246:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800c248:	079b      	lsls	r3, r3, #30
 800c24a:	d5f7      	bpl.n	800c23c <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800c24c:	2d00      	cmp	r5, #0
 800c24e:	f43f af40 	beq.w	800c0d2 <HAL_RCC_OscConfig+0x132>
 800c252:	e044      	b.n	800c2de <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800c254:	4a42      	ldr	r2, [pc, #264]	; (800c360 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c256:	4e43      	ldr	r6, [pc, #268]	; (800c364 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800c258:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800c25a:	f7fd fe7f 	bl	8009f5c <HAL_GetTick>
 800c25e:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c260:	e004      	b.n	800c26c <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c262:	f7fd fe7b 	bl	8009f5c <HAL_GetTick>
 800c266:	1b40      	subs	r0, r0, r5
 800c268:	2802      	cmp	r0, #2
 800c26a:	d8d0      	bhi.n	800c20e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c26c:	6833      	ldr	r3, [r6, #0]
 800c26e:	0799      	lsls	r1, r3, #30
 800c270:	d4f7      	bmi.n	800c262 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c272:	6823      	ldr	r3, [r4, #0]
 800c274:	e6f9      	b.n	800c06a <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800c276:	2801      	cmp	r0, #1
 800c278:	f43f af48 	beq.w	800c10c <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800c27c:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c27e:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c280:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c284:	4291      	cmp	r1, r2
 800c286:	f47f af64 	bne.w	800c152 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c28a:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c28c:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c290:	4291      	cmp	r1, r2
 800c292:	f47f af5e 	bne.w	800c152 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c296:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c298:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800c29c:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c29e:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800c2a2:	f47f af56 	bne.w	800c152 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c2a6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c2a8:	0852      	lsrs	r2, r2, #1
 800c2aa:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800c2ae:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c2b0:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800c2b4:	f47f af4d 	bne.w	800c152 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800c2b8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c2ba:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c2be:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800c2c2:	bf14      	ite	ne
 800c2c4:	2001      	movne	r0, #1
 800c2c6:	2000      	moveq	r0, #0
 800c2c8:	e720      	b.n	800c10c <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c2ca:	4b26      	ldr	r3, [pc, #152]	; (800c364 <HAL_RCC_OscConfig+0x3c4>)
 800c2cc:	681a      	ldr	r2, [r3, #0]
 800c2ce:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800c2d2:	601a      	str	r2, [r3, #0]
 800c2d4:	681a      	ldr	r2, [r3, #0]
 800c2d6:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800c2da:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c2dc:	e76d      	b.n	800c1ba <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800c2de:	4a21      	ldr	r2, [pc, #132]	; (800c364 <HAL_RCC_OscConfig+0x3c4>)
 800c2e0:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c2e2:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c2e6:	6413      	str	r3, [r2, #64]	; 0x40
 800c2e8:	e6f3      	b.n	800c0d2 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800c2ea:	2001      	movs	r0, #1
}
 800c2ec:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c2ee:	4b1d      	ldr	r3, [pc, #116]	; (800c364 <HAL_RCC_OscConfig+0x3c4>)
 800c2f0:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c2f2:	f042 0204 	orr.w	r2, r2, #4
 800c2f6:	671a      	str	r2, [r3, #112]	; 0x70
 800c2f8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c2fa:	f042 0201 	orr.w	r2, r2, #1
 800c2fe:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c300:	e78e      	b.n	800c220 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800c302:	f7fd fe2b 	bl	8009f5c <HAL_GetTick>
 800c306:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c308:	e005      	b.n	800c316 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c30a:	f7fd fe27 	bl	8009f5c <HAL_GetTick>
 800c30e:	1b80      	subs	r0, r0, r6
 800c310:	2802      	cmp	r0, #2
 800c312:	f63f af7c 	bhi.w	800c20e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c316:	682b      	ldr	r3, [r5, #0]
 800c318:	0199      	lsls	r1, r3, #6
 800c31a:	d4f6      	bmi.n	800c30a <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c31c:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800c320:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c322:	430b      	orrs	r3, r1
 800c324:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c328:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800c32c:	0852      	lsrs	r2, r2, #1
 800c32e:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800c332:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800c334:	490a      	ldr	r1, [pc, #40]	; (800c360 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c336:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800c33a:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c33c:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800c33e:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800c340:	f7fd fe0c 	bl	8009f5c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c344:	4d07      	ldr	r5, [pc, #28]	; (800c364 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800c346:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c348:	e005      	b.n	800c356 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c34a:	f7fd fe07 	bl	8009f5c <HAL_GetTick>
 800c34e:	1b00      	subs	r0, r0, r4
 800c350:	2802      	cmp	r0, #2
 800c352:	f63f af5c 	bhi.w	800c20e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c356:	682b      	ldr	r3, [r5, #0]
 800c358:	019a      	lsls	r2, r3, #6
 800c35a:	d5f6      	bpl.n	800c34a <HAL_RCC_OscConfig+0x3aa>
 800c35c:	e6d5      	b.n	800c10a <HAL_RCC_OscConfig+0x16a>
 800c35e:	bf00      	nop
 800c360:	42470000 	.word	0x42470000
 800c364:	40023800 	.word	0x40023800

0800c368 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c368:	4916      	ldr	r1, [pc, #88]	; (800c3c4 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800c36a:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c36c:	688b      	ldr	r3, [r1, #8]
 800c36e:	f003 030c 	and.w	r3, r3, #12
 800c372:	2b04      	cmp	r3, #4
 800c374:	d01b      	beq.n	800c3ae <HAL_RCC_GetSysClockFreq+0x46>
 800c376:	2b08      	cmp	r3, #8
 800c378:	d117      	bne.n	800c3aa <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c37a:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c37c:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c37e:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c380:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c384:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c388:	d113      	bne.n	800c3b2 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c38a:	480f      	ldr	r0, [pc, #60]	; (800c3c8 <HAL_RCC_GetSysClockFreq+0x60>)
 800c38c:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c390:	fba1 0100 	umull	r0, r1, r1, r0
 800c394:	f7f4 fb12 	bl	80009bc <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800c398:	4b0a      	ldr	r3, [pc, #40]	; (800c3c4 <HAL_RCC_GetSysClockFreq+0x5c>)
 800c39a:	685b      	ldr	r3, [r3, #4]
 800c39c:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800c3a0:	3301      	adds	r3, #1
 800c3a2:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800c3a4:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800c3a8:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800c3aa:	4807      	ldr	r0, [pc, #28]	; (800c3c8 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800c3ac:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c3ae:	4807      	ldr	r0, [pc, #28]	; (800c3cc <HAL_RCC_GetSysClockFreq+0x64>)
}
 800c3b0:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c3b2:	4806      	ldr	r0, [pc, #24]	; (800c3cc <HAL_RCC_GetSysClockFreq+0x64>)
 800c3b4:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c3b8:	2300      	movs	r3, #0
 800c3ba:	fba1 0100 	umull	r0, r1, r1, r0
 800c3be:	f7f4 fafd 	bl	80009bc <__aeabi_uldivmod>
 800c3c2:	e7e9      	b.n	800c398 <HAL_RCC_GetSysClockFreq+0x30>
 800c3c4:	40023800 	.word	0x40023800
 800c3c8:	00f42400 	.word	0x00f42400
 800c3cc:	007a1200 	.word	0x007a1200

0800c3d0 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800c3d0:	2800      	cmp	r0, #0
 800c3d2:	f000 8087 	beq.w	800c4e4 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c3d6:	4a48      	ldr	r2, [pc, #288]	; (800c4f8 <HAL_RCC_ClockConfig+0x128>)
 800c3d8:	6813      	ldr	r3, [r2, #0]
 800c3da:	f003 030f 	and.w	r3, r3, #15
 800c3de:	428b      	cmp	r3, r1
{
 800c3e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c3e4:	460d      	mov	r5, r1
 800c3e6:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c3e8:	d209      	bcs.n	800c3fe <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c3ea:	b2cb      	uxtb	r3, r1
 800c3ec:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c3ee:	6813      	ldr	r3, [r2, #0]
 800c3f0:	f003 030f 	and.w	r3, r3, #15
 800c3f4:	428b      	cmp	r3, r1
 800c3f6:	d002      	beq.n	800c3fe <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800c3f8:	2001      	movs	r0, #1
}
 800c3fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800c3fe:	6823      	ldr	r3, [r4, #0]
 800c400:	0798      	lsls	r0, r3, #30
 800c402:	d514      	bpl.n	800c42e <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c404:	0759      	lsls	r1, r3, #29
 800c406:	d504      	bpl.n	800c412 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800c408:	493c      	ldr	r1, [pc, #240]	; (800c4fc <HAL_RCC_ClockConfig+0x12c>)
 800c40a:	688a      	ldr	r2, [r1, #8]
 800c40c:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800c410:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c412:	071a      	lsls	r2, r3, #28
 800c414:	d504      	bpl.n	800c420 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800c416:	4939      	ldr	r1, [pc, #228]	; (800c4fc <HAL_RCC_ClockConfig+0x12c>)
 800c418:	688a      	ldr	r2, [r1, #8]
 800c41a:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800c41e:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800c420:	4936      	ldr	r1, [pc, #216]	; (800c4fc <HAL_RCC_ClockConfig+0x12c>)
 800c422:	68a0      	ldr	r0, [r4, #8]
 800c424:	688a      	ldr	r2, [r1, #8]
 800c426:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800c42a:	4302      	orrs	r2, r0
 800c42c:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800c42e:	07df      	lsls	r7, r3, #31
 800c430:	d521      	bpl.n	800c476 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800c432:	6862      	ldr	r2, [r4, #4]
 800c434:	2a01      	cmp	r2, #1
 800c436:	d057      	beq.n	800c4e8 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c438:	1e93      	subs	r3, r2, #2
 800c43a:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c43c:	4b2f      	ldr	r3, [pc, #188]	; (800c4fc <HAL_RCC_ClockConfig+0x12c>)
 800c43e:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c440:	d94d      	bls.n	800c4de <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c442:	0799      	lsls	r1, r3, #30
 800c444:	d5d8      	bpl.n	800c3f8 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800c446:	4e2d      	ldr	r6, [pc, #180]	; (800c4fc <HAL_RCC_ClockConfig+0x12c>)
 800c448:	68b3      	ldr	r3, [r6, #8]
 800c44a:	f023 0303 	bic.w	r3, r3, #3
 800c44e:	4313      	orrs	r3, r2
 800c450:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800c452:	f7fd fd83 	bl	8009f5c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c456:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800c45a:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c45c:	e004      	b.n	800c468 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c45e:	f7fd fd7d 	bl	8009f5c <HAL_GetTick>
 800c462:	1bc0      	subs	r0, r0, r7
 800c464:	4540      	cmp	r0, r8
 800c466:	d844      	bhi.n	800c4f2 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c468:	68b3      	ldr	r3, [r6, #8]
 800c46a:	6862      	ldr	r2, [r4, #4]
 800c46c:	f003 030c 	and.w	r3, r3, #12
 800c470:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800c474:	d1f3      	bne.n	800c45e <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800c476:	4a20      	ldr	r2, [pc, #128]	; (800c4f8 <HAL_RCC_ClockConfig+0x128>)
 800c478:	6813      	ldr	r3, [r2, #0]
 800c47a:	f003 030f 	and.w	r3, r3, #15
 800c47e:	42ab      	cmp	r3, r5
 800c480:	d906      	bls.n	800c490 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c482:	b2eb      	uxtb	r3, r5
 800c484:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c486:	6813      	ldr	r3, [r2, #0]
 800c488:	f003 030f 	and.w	r3, r3, #15
 800c48c:	42ab      	cmp	r3, r5
 800c48e:	d1b3      	bne.n	800c3f8 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c490:	6823      	ldr	r3, [r4, #0]
 800c492:	075a      	lsls	r2, r3, #29
 800c494:	d506      	bpl.n	800c4a4 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800c496:	4919      	ldr	r1, [pc, #100]	; (800c4fc <HAL_RCC_ClockConfig+0x12c>)
 800c498:	68e0      	ldr	r0, [r4, #12]
 800c49a:	688a      	ldr	r2, [r1, #8]
 800c49c:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800c4a0:	4302      	orrs	r2, r0
 800c4a2:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c4a4:	071b      	lsls	r3, r3, #28
 800c4a6:	d507      	bpl.n	800c4b8 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800c4a8:	4a14      	ldr	r2, [pc, #80]	; (800c4fc <HAL_RCC_ClockConfig+0x12c>)
 800c4aa:	6921      	ldr	r1, [r4, #16]
 800c4ac:	6893      	ldr	r3, [r2, #8]
 800c4ae:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800c4b2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800c4b6:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c4b8:	f7ff ff56 	bl	800c368 <HAL_RCC_GetSysClockFreq>
 800c4bc:	4a0f      	ldr	r2, [pc, #60]	; (800c4fc <HAL_RCC_ClockConfig+0x12c>)
 800c4be:	4c10      	ldr	r4, [pc, #64]	; (800c500 <HAL_RCC_ClockConfig+0x130>)
 800c4c0:	6892      	ldr	r2, [r2, #8]
 800c4c2:	4910      	ldr	r1, [pc, #64]	; (800c504 <HAL_RCC_ClockConfig+0x134>)
 800c4c4:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800c4c8:	4603      	mov	r3, r0
 800c4ca:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800c4cc:	480e      	ldr	r0, [pc, #56]	; (800c508 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c4ce:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800c4d0:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c4d2:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800c4d4:	f7f6 fb2a 	bl	8002b2c <HAL_InitTick>
  return HAL_OK;
 800c4d8:	2000      	movs	r0, #0
}
 800c4da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c4de:	0198      	lsls	r0, r3, #6
 800c4e0:	d4b1      	bmi.n	800c446 <HAL_RCC_ClockConfig+0x76>
 800c4e2:	e789      	b.n	800c3f8 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800c4e4:	2001      	movs	r0, #1
}
 800c4e6:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c4e8:	4b04      	ldr	r3, [pc, #16]	; (800c4fc <HAL_RCC_ClockConfig+0x12c>)
 800c4ea:	681b      	ldr	r3, [r3, #0]
 800c4ec:	039e      	lsls	r6, r3, #14
 800c4ee:	d4aa      	bmi.n	800c446 <HAL_RCC_ClockConfig+0x76>
 800c4f0:	e782      	b.n	800c3f8 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800c4f2:	2003      	movs	r0, #3
 800c4f4:	e781      	b.n	800c3fa <HAL_RCC_ClockConfig+0x2a>
 800c4f6:	bf00      	nop
 800c4f8:	40023c00 	.word	0x40023c00
 800c4fc:	40023800 	.word	0x40023800
 800c500:	0802ea48 	.word	0x0802ea48
 800c504:	20000078 	.word	0x20000078
 800c508:	20000080 	.word	0x20000080

0800c50c <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c50c:	4b04      	ldr	r3, [pc, #16]	; (800c520 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800c50e:	4905      	ldr	r1, [pc, #20]	; (800c524 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c510:	689b      	ldr	r3, [r3, #8]
 800c512:	4a05      	ldr	r2, [pc, #20]	; (800c528 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800c514:	6808      	ldr	r0, [r1, #0]
 800c516:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800c51a:	5cd3      	ldrb	r3, [r2, r3]
}
 800c51c:	40d8      	lsrs	r0, r3
 800c51e:	4770      	bx	lr
 800c520:	40023800 	.word	0x40023800
 800c524:	20000078 	.word	0x20000078
 800c528:	0802ea58 	.word	0x0802ea58

0800c52c <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c52c:	4b0e      	ldr	r3, [pc, #56]	; (800c568 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800c52e:	220f      	movs	r2, #15
 800c530:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c532:	689a      	ldr	r2, [r3, #8]
 800c534:	f002 0203 	and.w	r2, r2, #3
 800c538:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800c53a:	689a      	ldr	r2, [r3, #8]
 800c53c:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800c540:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800c542:	689a      	ldr	r2, [r3, #8]
 800c544:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800c548:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c54a:	689b      	ldr	r3, [r3, #8]
 800c54c:	08db      	lsrs	r3, r3, #3
{
 800c54e:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c550:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c554:	4c05      	ldr	r4, [pc, #20]	; (800c56c <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c556:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c558:	6823      	ldr	r3, [r4, #0]
}
 800c55a:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c55e:	f003 030f 	and.w	r3, r3, #15
 800c562:	600b      	str	r3, [r1, #0]
}
 800c564:	4770      	bx	lr
 800c566:	bf00      	nop
 800c568:	40023800 	.word	0x40023800
 800c56c:	40023c00 	.word	0x40023c00

0800c570 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800c570:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800c572:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c574:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800c578:	b083      	sub	sp, #12
 800c57a:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c57c:	d111      	bne.n	800c5a2 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c57e:	f013 0f0c 	tst.w	r3, #12
 800c582:	d16f      	bne.n	800c664 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c584:	0698      	lsls	r0, r3, #26
 800c586:	f100 80c2 	bmi.w	800c70e <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c58a:	f013 0310 	ands.w	r3, r3, #16
 800c58e:	f000 80bb 	beq.w	800c708 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800c592:	4b89      	ldr	r3, [pc, #548]	; (800c7b8 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800c594:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800c598:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800c59c:	2000      	movs	r0, #0
}
 800c59e:	b003      	add	sp, #12
 800c5a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800c5a2:	4b86      	ldr	r3, [pc, #536]	; (800c7bc <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c5a4:	4e86      	ldr	r6, [pc, #536]	; (800c7c0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800c5a6:	2200      	movs	r2, #0
 800c5a8:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c5aa:	f7fd fcd7 	bl	8009f5c <HAL_GetTick>
 800c5ae:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c5b0:	e004      	b.n	800c5bc <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c5b2:	f7fd fcd3 	bl	8009f5c <HAL_GetTick>
 800c5b6:	1b43      	subs	r3, r0, r5
 800c5b8:	2b02      	cmp	r3, #2
 800c5ba:	d850      	bhi.n	800c65e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c5bc:	6833      	ldr	r3, [r6, #0]
 800c5be:	0118      	lsls	r0, r3, #4
 800c5c0:	d4f7      	bmi.n	800c5b2 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800c5c2:	6823      	ldr	r3, [r4, #0]
 800c5c4:	07d9      	lsls	r1, r3, #31
 800c5c6:	d506      	bpl.n	800c5d6 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800c5c8:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800c5cc:	0712      	lsls	r2, r2, #28
 800c5ce:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800c5d2:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800c5d6:	079a      	lsls	r2, r3, #30
 800c5d8:	d515      	bpl.n	800c606 <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c5da:	4979      	ldr	r1, [pc, #484]	; (800c7c0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c5dc:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c5de:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c5e2:	6865      	ldr	r5, [r4, #4]
 800c5e4:	0612      	lsls	r2, r2, #24
 800c5e6:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800c5ea:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800c5ee:	4302      	orrs	r2, r0
 800c5f0:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800c5f4:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800c5f8:	69e2      	ldr	r2, [r4, #28]
 800c5fa:	f020 001f 	bic.w	r0, r0, #31
 800c5fe:	3a01      	subs	r2, #1
 800c600:	4302      	orrs	r2, r0
 800c602:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800c606:	065b      	lsls	r3, r3, #25
 800c608:	d509      	bpl.n	800c61e <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800c60a:	1d20      	adds	r0, r4, #4
 800c60c:	c80b      	ldmia	r0, {r0, r1, r3}
 800c60e:	061b      	lsls	r3, r3, #24
 800c610:	4a6b      	ldr	r2, [pc, #428]	; (800c7c0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c612:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c616:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800c61a:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800c61e:	4b67      	ldr	r3, [pc, #412]	; (800c7bc <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c620:	4e67      	ldr	r6, [pc, #412]	; (800c7c0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800c622:	2201      	movs	r2, #1
 800c624:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c626:	f7fd fc99 	bl	8009f5c <HAL_GetTick>
 800c62a:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c62c:	e004      	b.n	800c638 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c62e:	f7fd fc95 	bl	8009f5c <HAL_GetTick>
 800c632:	1b40      	subs	r0, r0, r5
 800c634:	2802      	cmp	r0, #2
 800c636:	d812      	bhi.n	800c65e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c638:	6833      	ldr	r3, [r6, #0]
 800c63a:	011f      	lsls	r7, r3, #4
 800c63c:	d5f7      	bpl.n	800c62e <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c63e:	6823      	ldr	r3, [r4, #0]
 800c640:	e79d      	b.n	800c57e <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800c642:	f7fd fc8b 	bl	8009f5c <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c646:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800c64a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c64c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c64e:	079b      	lsls	r3, r3, #30
 800c650:	f100 80a5 	bmi.w	800c79e <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c654:	f7fd fc82 	bl	8009f5c <HAL_GetTick>
 800c658:	1b80      	subs	r0, r0, r6
 800c65a:	42b8      	cmp	r0, r7
 800c65c:	d9f6      	bls.n	800c64c <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800c65e:	2003      	movs	r0, #3
}
 800c660:	b003      	add	sp, #12
 800c662:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800c664:	4b55      	ldr	r3, [pc, #340]	; (800c7bc <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c666:	4e56      	ldr	r6, [pc, #344]	; (800c7c0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800c668:	2200      	movs	r2, #0
 800c66a:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c66c:	f7fd fc76 	bl	8009f5c <HAL_GetTick>
 800c670:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c672:	e004      	b.n	800c67e <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c674:	f7fd fc72 	bl	8009f5c <HAL_GetTick>
 800c678:	1b43      	subs	r3, r0, r5
 800c67a:	2b02      	cmp	r3, #2
 800c67c:	d8ef      	bhi.n	800c65e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c67e:	6833      	ldr	r3, [r6, #0]
 800c680:	0098      	lsls	r0, r3, #2
 800c682:	d4f7      	bmi.n	800c674 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800c684:	6822      	ldr	r2, [r4, #0]
 800c686:	0751      	lsls	r1, r2, #29
 800c688:	d515      	bpl.n	800c6b6 <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c68a:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c68c:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c690:	6920      	ldr	r0, [r4, #16]
 800c692:	061b      	lsls	r3, r3, #24
 800c694:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800c698:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c69c:	430b      	orrs	r3, r1
 800c69e:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800c6a2:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800c6a6:	6a21      	ldr	r1, [r4, #32]
 800c6a8:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800c6ac:	3901      	subs	r1, #1
 800c6ae:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c6b2:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800c6b6:	0713      	lsls	r3, r2, #28
 800c6b8:	d514      	bpl.n	800c6e4 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c6ba:	4a41      	ldr	r2, [pc, #260]	; (800c7c0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c6bc:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c6be:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c6c2:	6920      	ldr	r0, [r4, #16]
 800c6c4:	071b      	lsls	r3, r3, #28
 800c6c6:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800c6ca:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c6ce:	430b      	orrs	r3, r1
 800c6d0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800c6d4:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c6d8:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c6da:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c6de:	430b      	orrs	r3, r1
 800c6e0:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800c6e4:	4b35      	ldr	r3, [pc, #212]	; (800c7bc <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c6e6:	4e36      	ldr	r6, [pc, #216]	; (800c7c0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800c6e8:	2201      	movs	r2, #1
 800c6ea:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c6ec:	f7fd fc36 	bl	8009f5c <HAL_GetTick>
 800c6f0:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c6f2:	e004      	b.n	800c6fe <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c6f4:	f7fd fc32 	bl	8009f5c <HAL_GetTick>
 800c6f8:	1b40      	subs	r0, r0, r5
 800c6fa:	2802      	cmp	r0, #2
 800c6fc:	d8af      	bhi.n	800c65e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c6fe:	6833      	ldr	r3, [r6, #0]
 800c700:	009f      	lsls	r7, r3, #2
 800c702:	d5f7      	bpl.n	800c6f4 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c704:	6823      	ldr	r3, [r4, #0]
 800c706:	e73d      	b.n	800c584 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800c708:	4618      	mov	r0, r3
}
 800c70a:	b003      	add	sp, #12
 800c70c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800c70e:	4b2c      	ldr	r3, [pc, #176]	; (800c7c0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800c710:	4d2c      	ldr	r5, [pc, #176]	; (800c7c4 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800c712:	2200      	movs	r2, #0
 800c714:	9201      	str	r2, [sp, #4]
 800c716:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c718:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c71c:	641a      	str	r2, [r3, #64]	; 0x40
 800c71e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c720:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c724:	9301      	str	r3, [sp, #4]
 800c726:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800c728:	682b      	ldr	r3, [r5, #0]
 800c72a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c72e:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c730:	f7fd fc14 	bl	8009f5c <HAL_GetTick>
 800c734:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c736:	e004      	b.n	800c742 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800c738:	f7fd fc10 	bl	8009f5c <HAL_GetTick>
 800c73c:	1b83      	subs	r3, r0, r6
 800c73e:	2b02      	cmp	r3, #2
 800c740:	d88d      	bhi.n	800c65e <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c742:	682b      	ldr	r3, [r5, #0]
 800c744:	05d9      	lsls	r1, r3, #23
 800c746:	d5f7      	bpl.n	800c738 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c748:	4d1d      	ldr	r5, [pc, #116]	; (800c7c0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c74a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c74c:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c74e:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800c752:	d111      	bne.n	800c778 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c754:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800c758:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800c75c:	d021      	beq.n	800c7a2 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800c75e:	4918      	ldr	r1, [pc, #96]	; (800c7c0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c760:	688a      	ldr	r2, [r1, #8]
 800c762:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c766:	608a      	str	r2, [r1, #8]
 800c768:	4a15      	ldr	r2, [pc, #84]	; (800c7c0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c76a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800c76c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c770:	430b      	orrs	r3, r1
 800c772:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c774:	6823      	ldr	r3, [r4, #0]
 800c776:	e708      	b.n	800c58a <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c778:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800c77c:	4291      	cmp	r1, r2
 800c77e:	d0eb      	beq.n	800c758 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c780:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800c782:	4a0e      	ldr	r2, [pc, #56]	; (800c7bc <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800c784:	2101      	movs	r1, #1
 800c786:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c78a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800c78e:	2100      	movs	r1, #0
 800c790:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800c794:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800c796:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c798:	07da      	lsls	r2, r3, #31
 800c79a:	f53f af52 	bmi.w	800c642 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c79e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c7a0:	e7d8      	b.n	800c754 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800c7a2:	4807      	ldr	r0, [pc, #28]	; (800c7c0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c7a4:	6882      	ldr	r2, [r0, #8]
 800c7a6:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800c7aa:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800c7ae:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c7b2:	430a      	orrs	r2, r1
 800c7b4:	6082      	str	r2, [r0, #8]
 800c7b6:	e7d7      	b.n	800c768 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800c7b8:	42471000 	.word	0x42471000
 800c7bc:	42470000 	.word	0x42470000
 800c7c0:	40023800 	.word	0x40023800
 800c7c4:	40007000 	.word	0x40007000

0800c7c8 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800c7c8:	b1f0      	cbz	r0, 800c808 <HAL_SDRAM_Init+0x40>
{
 800c7ca:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800c7cc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c7d0:	460d      	mov	r5, r1
 800c7d2:	4604      	mov	r4, r0
 800c7d4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c7d8:	b18b      	cbz	r3, 800c7fe <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c7da:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c7dc:	2302      	movs	r3, #2
 800c7de:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c7e2:	f851 0b04 	ldr.w	r0, [r1], #4
 800c7e6:	f000 fe51 	bl	800d48c <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800c7ea:	e9d4 0200 	ldrd	r0, r2, [r4]
 800c7ee:	4629      	mov	r1, r5
 800c7f0:	f000 fe8a 	bl	800d508 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800c7f4:	2301      	movs	r3, #1
 800c7f6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800c7fa:	2000      	movs	r0, #0
}
 800c7fc:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800c7fe:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800c802:	f7f6 f92b 	bl	8002a5c <HAL_SDRAM_MspInit>
 800c806:	e7e8      	b.n	800c7da <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800c808:	2001      	movs	r0, #1
}
 800c80a:	4770      	bx	lr

0800c80c <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800c80c:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c80e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800c812:	2b02      	cmp	r3, #2
{
 800c814:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c816:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800c818:	d004      	beq.n	800c824 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800c81a:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800c81e:	2c01      	cmp	r4, #1
 800c820:	d001      	beq.n	800c826 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800c822:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c824:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c826:	460e      	mov	r6, r1
 800c828:	2302      	movs	r3, #2
 800c82a:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800c82e:	6828      	ldr	r0, [r5, #0]
 800c830:	f000 feb6 	bl	800d5a0 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800c834:	6833      	ldr	r3, [r6, #0]
 800c836:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800c838:	bf06      	itte	eq
 800c83a:	2305      	moveq	r3, #5
 800c83c:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800c840:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800c844:	2000      	movs	r0, #0
}
 800c846:	bd70      	pop	{r4, r5, r6, pc}

0800c848 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800c848:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c84a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c84e:	2b02      	cmp	r3, #2
{
 800c850:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c852:	b2d8      	uxtb	r0, r3
 800c854:	d005      	beq.n	800c862 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800c856:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c85a:	2b01      	cmp	r3, #1
 800c85c:	b2dd      	uxtb	r5, r3
 800c85e:	d001      	beq.n	800c864 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800c860:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c862:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c864:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c866:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c868:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c86c:	f000 fec2 	bl	800d5f4 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800c870:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800c874:	2000      	movs	r0, #0
}
 800c876:	bd38      	pop	{r3, r4, r5, pc}

0800c878 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800c878:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c87c:	b082      	sub	sp, #8
 800c87e:	461d      	mov	r5, r3
 800c880:	4616      	mov	r6, r2
 800c882:	460c      	mov	r4, r1
 800c884:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800c886:	f7fd fb69 	bl	8009f5c <HAL_GetTick>
 800c88a:	4435      	add	r5, r6
 800c88c:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800c88e:	f7fd fb65 	bl	8009f5c <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c892:	4b27      	ldr	r3, [pc, #156]	; (800c930 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800c894:	681b      	ldr	r3, [r3, #0]
 800c896:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800c89a:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800c89e:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c8a0:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c8a2:	1c73      	adds	r3, r6, #1
 800c8a4:	6839      	ldr	r1, [r7, #0]
 800c8a6:	d107      	bne.n	800c8b8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800c8a8:	688b      	ldr	r3, [r1, #8]
 800c8aa:	ea34 0303 	bics.w	r3, r4, r3
 800c8ae:	d0fb      	beq.n	800c8a8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800c8b0:	2000      	movs	r0, #0
}
 800c8b2:	b002      	add	sp, #8
 800c8b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c8b8:	688b      	ldr	r3, [r1, #8]
 800c8ba:	ea34 0303 	bics.w	r3, r4, r3
 800c8be:	d1f7      	bne.n	800c8b0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800c8c0:	f7fd fb4c 	bl	8009f5c <HAL_GetTick>
 800c8c4:	eba0 0008 	sub.w	r0, r0, r8
 800c8c8:	42a8      	cmp	r0, r5
 800c8ca:	d208      	bcs.n	800c8de <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800c8cc:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800c8ce:	2b00      	cmp	r3, #0
      count--;
 800c8d0:	9b01      	ldr	r3, [sp, #4]
 800c8d2:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800c8d6:	bf08      	it	eq
 800c8d8:	2500      	moveq	r5, #0
      count--;
 800c8da:	9301      	str	r3, [sp, #4]
 800c8dc:	e7e1      	b.n	800c8a2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c8de:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c8e2:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c8e4:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c8e8:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800c8ec:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c8ee:	d013      	beq.n	800c918 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800c8f0:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800c8f2:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800c8f6:	d107      	bne.n	800c908 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800c8f8:	681a      	ldr	r2, [r3, #0]
 800c8fa:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800c8fe:	601a      	str	r2, [r3, #0]
 800c900:	681a      	ldr	r2, [r3, #0]
 800c902:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800c906:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800c908:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800c90a:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800c90c:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800c910:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800c914:	2003      	movs	r0, #3
 800c916:	e7cc      	b.n	800c8b2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c918:	68ba      	ldr	r2, [r7, #8]
 800c91a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c91e:	d002      	beq.n	800c926 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c920:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c924:	d1e4      	bne.n	800c8f0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800c926:	681a      	ldr	r2, [r3, #0]
 800c928:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c92c:	601a      	str	r2, [r3, #0]
 800c92e:	e7df      	b.n	800c8f0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800c930:	20000078 	.word	0x20000078

0800c934 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800c934:	b538      	push	{r3, r4, r5, lr}
 800c936:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c938:	6842      	ldr	r2, [r0, #4]
 800c93a:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800c93e:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c940:	d006      	beq.n	800c950 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c942:	460a      	mov	r2, r1
 800c944:	2101      	movs	r1, #1
 800c946:	f7ff ff97 	bl	800c878 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c94a:	b978      	cbnz	r0, 800c96c <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800c94c:	2000      	movs	r0, #0
}
 800c94e:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c950:	6882      	ldr	r2, [r0, #8]
 800c952:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c956:	d01c      	beq.n	800c992 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c958:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c95c:	d00c      	beq.n	800c978 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c95e:	460a      	mov	r2, r1
 800c960:	4620      	mov	r0, r4
 800c962:	2180      	movs	r1, #128	; 0x80
 800c964:	f7ff ff88 	bl	800c878 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c968:	2800      	cmp	r0, #0
 800c96a:	d0ef      	beq.n	800c94c <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c96c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800c96e:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800c972:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c974:	6563      	str	r3, [r4, #84]	; 0x54
}
 800c976:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800c978:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c97a:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800c97c:	6829      	ldr	r1, [r5, #0]
 800c97e:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c982:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c984:	2101      	movs	r1, #1
 800c986:	f7ff ff77 	bl	800c878 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c98a:	2800      	cmp	r0, #0
 800c98c:	d1ee      	bne.n	800c96c <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800c98e:	2000      	movs	r0, #0
 800c990:	e7dd      	b.n	800c94e <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800c992:	6800      	ldr	r0, [r0, #0]
 800c994:	6802      	ldr	r2, [r0, #0]
 800c996:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c99a:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c99c:	460a      	mov	r2, r1
 800c99e:	4620      	mov	r0, r4
 800c9a0:	2180      	movs	r1, #128	; 0x80
 800c9a2:	f7ff ff69 	bl	800c878 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c9a6:	2800      	cmp	r0, #0
 800c9a8:	d0d0      	beq.n	800c94c <SPI_EndRxTransaction+0x18>
 800c9aa:	e7df      	b.n	800c96c <SPI_EndRxTransaction+0x38>

0800c9ac <HAL_SPI_Init>:
  if (hspi == NULL)
 800c9ac:	2800      	cmp	r0, #0
 800c9ae:	d05c      	beq.n	800ca6a <HAL_SPI_Init+0xbe>
{
 800c9b0:	b570      	push	{r4, r5, r6, lr}
 800c9b2:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800c9b4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800c9b6:	2800      	cmp	r0, #0
 800c9b8:	d047      	beq.n	800ca4a <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800c9ba:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800c9bc:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c9c0:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800c9c4:	2200      	movs	r2, #0
 800c9c6:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c9c8:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800c9cc:	2b00      	cmp	r3, #0
 800c9ce:	d042      	beq.n	800ca56 <HAL_SPI_Init+0xaa>
 800c9d0:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800c9d2:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c9d4:	68a5      	ldr	r5, [r4, #8]
 800c9d6:	69a2      	ldr	r2, [r4, #24]
 800c9d8:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800c9da:	2302      	movs	r3, #2
 800c9dc:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800c9e0:	680b      	ldr	r3, [r1, #0]
 800c9e2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c9e6:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c9e8:	6863      	ldr	r3, [r4, #4]
 800c9ea:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800c9ee:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800c9f2:	432b      	orrs	r3, r5
 800c9f4:	68e5      	ldr	r5, [r4, #12]
 800c9f6:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800c9fa:	432b      	orrs	r3, r5
 800c9fc:	6925      	ldr	r5, [r4, #16]
 800c9fe:	f005 0502 	and.w	r5, r5, #2
 800ca02:	432b      	orrs	r3, r5
 800ca04:	6965      	ldr	r5, [r4, #20]
 800ca06:	f005 0501 	and.w	r5, r5, #1
 800ca0a:	432b      	orrs	r3, r5
 800ca0c:	69e5      	ldr	r5, [r4, #28]
 800ca0e:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800ca12:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800ca16:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800ca1a:	4333      	orrs	r3, r6
 800ca1c:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800ca1e:	0c12      	lsrs	r2, r2, #16
 800ca20:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ca24:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800ca28:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ca2c:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800ca30:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ca32:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800ca34:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800ca36:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800ca38:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800ca3a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800ca3e:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800ca40:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800ca42:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800ca44:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800ca48:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ca4a:	6863      	ldr	r3, [r4, #4]
 800ca4c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800ca50:	d0b6      	beq.n	800c9c0 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800ca52:	61e0      	str	r0, [r4, #28]
 800ca54:	e7b4      	b.n	800c9c0 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800ca56:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800ca58:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800ca5c:	f7f5 ff78 	bl	8002950 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800ca60:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ca64:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800ca68:	e7b3      	b.n	800c9d2 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800ca6a:	2001      	movs	r0, #1
}
 800ca6c:	4770      	bx	lr
 800ca6e:	bf00      	nop

0800ca70 <HAL_SPI_Transmit>:
{
 800ca70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ca74:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800ca76:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800ca7a:	2801      	cmp	r0, #1
{
 800ca7c:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800ca7e:	f000 8085 	beq.w	800cb8c <HAL_SPI_Transmit+0x11c>
 800ca82:	461d      	mov	r5, r3
 800ca84:	2301      	movs	r3, #1
 800ca86:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800ca8a:	4688      	mov	r8, r1
 800ca8c:	4617      	mov	r7, r2
 800ca8e:	f7fd fa65 	bl	8009f5c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800ca92:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800ca96:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800ca98:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800ca9a:	b2d8      	uxtb	r0, r3
 800ca9c:	d009      	beq.n	800cab2 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800ca9e:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800caa0:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800caa2:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800caa4:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800caa8:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800caac:	b002      	add	sp, #8
 800caae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800cab2:	f1b8 0f00 	cmp.w	r8, #0
 800cab6:	d0f3      	beq.n	800caa0 <HAL_SPI_Transmit+0x30>
 800cab8:	2f00      	cmp	r7, #0
 800caba:	d0f1      	beq.n	800caa0 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cabc:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800cabe:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800cac0:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cac4:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800cac6:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cac8:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800cacc:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800cad0:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cad4:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800cad6:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800cad8:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800cada:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800cadc:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800cade:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cae0:	f000 8085 	beq.w	800cbee <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cae4:	6803      	ldr	r3, [r0, #0]
 800cae6:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800cae8:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800caea:	d403      	bmi.n	800caf4 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800caec:	6803      	ldr	r3, [r0, #0]
 800caee:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800caf2:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800caf4:	68e3      	ldr	r3, [r4, #12]
 800caf6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800cafa:	d04b      	beq.n	800cb94 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cafc:	6863      	ldr	r3, [r4, #4]
 800cafe:	2b00      	cmp	r3, #0
 800cb00:	f000 8097 	beq.w	800cc32 <HAL_SPI_Transmit+0x1c2>
 800cb04:	2f01      	cmp	r7, #1
 800cb06:	f000 8094 	beq.w	800cc32 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800cb0a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cb0c:	b29b      	uxth	r3, r3
 800cb0e:	b1ab      	cbz	r3, 800cb3c <HAL_SPI_Transmit+0xcc>
 800cb10:	1c68      	adds	r0, r5, #1
 800cb12:	f040 8083 	bne.w	800cc1c <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cb16:	6823      	ldr	r3, [r4, #0]
 800cb18:	689a      	ldr	r2, [r3, #8]
 800cb1a:	0791      	lsls	r1, r2, #30
 800cb1c:	f140 8094 	bpl.w	800cc48 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cb20:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cb22:	7812      	ldrb	r2, [r2, #0]
 800cb24:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800cb26:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cb28:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cb2a:	3901      	subs	r1, #1
 800cb2c:	b289      	uxth	r1, r1
 800cb2e:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cb30:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cb32:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800cb34:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cb36:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800cb38:	2900      	cmp	r1, #0
 800cb3a:	d1ec      	bne.n	800cb16 <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cb3c:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cb3e:	4b5b      	ldr	r3, [pc, #364]	; (800ccac <HAL_SPI_Transmit+0x23c>)
 800cb40:	4a5b      	ldr	r2, [pc, #364]	; (800ccb0 <HAL_SPI_Transmit+0x240>)
 800cb42:	681b      	ldr	r3, [r3, #0]
 800cb44:	fba2 2303 	umull	r2, r3, r2, r3
 800cb48:	0d5b      	lsrs	r3, r3, #21
 800cb4a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800cb4e:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cb52:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cb56:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cb58:	d107      	bne.n	800cb6a <HAL_SPI_Transmit+0xfa>
 800cb5a:	e098      	b.n	800cc8e <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800cb5c:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cb5e:	6822      	ldr	r2, [r4, #0]
      count--;
 800cb60:	3b01      	subs	r3, #1
 800cb62:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cb64:	6893      	ldr	r3, [r2, #8]
 800cb66:	061b      	lsls	r3, r3, #24
 800cb68:	d502      	bpl.n	800cb70 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800cb6a:	9b01      	ldr	r3, [sp, #4]
 800cb6c:	2b00      	cmp	r3, #0
 800cb6e:	d1f5      	bne.n	800cb5c <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800cb70:	68a3      	ldr	r3, [r4, #8]
 800cb72:	b933      	cbnz	r3, 800cb82 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800cb74:	6822      	ldr	r2, [r4, #0]
 800cb76:	9300      	str	r3, [sp, #0]
 800cb78:	68d3      	ldr	r3, [r2, #12]
 800cb7a:	9300      	str	r3, [sp, #0]
 800cb7c:	6893      	ldr	r3, [r2, #8]
 800cb7e:	9300      	str	r3, [sp, #0]
 800cb80:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800cb82:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800cb84:	3800      	subs	r0, #0
 800cb86:	bf18      	it	ne
 800cb88:	2001      	movne	r0, #1
error:
 800cb8a:	e789      	b.n	800caa0 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800cb8c:	2002      	movs	r0, #2
}
 800cb8e:	b002      	add	sp, #8
 800cb90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cb94:	6861      	ldr	r1, [r4, #4]
 800cb96:	2900      	cmp	r1, #0
 800cb98:	d176      	bne.n	800cc88 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cb9a:	4643      	mov	r3, r8
 800cb9c:	f833 7b02 	ldrh.w	r7, [r3], #2
 800cba0:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800cba2:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cba4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cba6:	3b01      	subs	r3, #1
 800cba8:	b29b      	uxth	r3, r3
 800cbaa:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cbac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cbae:	b29b      	uxth	r3, r3
 800cbb0:	2b00      	cmp	r3, #0
 800cbb2:	d0c4      	beq.n	800cb3e <HAL_SPI_Transmit+0xce>
 800cbb4:	1c6b      	adds	r3, r5, #1
 800cbb6:	d15e      	bne.n	800cc76 <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cbb8:	6883      	ldr	r3, [r0, #8]
 800cbba:	079f      	lsls	r7, r3, #30
 800cbbc:	d50f      	bpl.n	800cbde <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cbbe:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cbc0:	f832 3b02 	ldrh.w	r3, [r2], #2
 800cbc4:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800cbc6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cbc8:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cbca:	3b01      	subs	r3, #1
 800cbcc:	b29b      	uxth	r3, r3
 800cbce:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cbd0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cbd2:	b29b      	uxth	r3, r3
 800cbd4:	2b00      	cmp	r3, #0
 800cbd6:	d0b1      	beq.n	800cb3c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cbd8:	6883      	ldr	r3, [r0, #8]
 800cbda:	079f      	lsls	r7, r3, #30
 800cbdc:	d4ef      	bmi.n	800cbbe <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cbde:	f7fd f9bd 	bl	8009f5c <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800cbe2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cbe4:	b29b      	uxth	r3, r3
 800cbe6:	2b00      	cmp	r3, #0
 800cbe8:	d0a8      	beq.n	800cb3c <HAL_SPI_Transmit+0xcc>
 800cbea:	6820      	ldr	r0, [r4, #0]
 800cbec:	e7e4      	b.n	800cbb8 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800cbee:	6803      	ldr	r3, [r0, #0]
 800cbf0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800cbf4:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800cbf6:	6803      	ldr	r3, [r0, #0]
 800cbf8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800cbfc:	6003      	str	r3, [r0, #0]
 800cbfe:	e771      	b.n	800cae4 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cc00:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cc02:	7812      	ldrb	r2, [r2, #0]
 800cc04:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800cc06:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc08:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cc0a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc0c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cc0e:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc10:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cc12:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cc14:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc16:	b29b      	uxth	r3, r3
 800cc18:	2b00      	cmp	r3, #0
 800cc1a:	d08f      	beq.n	800cb3c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cc1c:	6823      	ldr	r3, [r4, #0]
 800cc1e:	689a      	ldr	r2, [r3, #8]
 800cc20:	0792      	lsls	r2, r2, #30
 800cc22:	d4ed      	bmi.n	800cc00 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cc24:	f7fd f99a 	bl	8009f5c <HAL_GetTick>
 800cc28:	1b80      	subs	r0, r0, r6
 800cc2a:	42a8      	cmp	r0, r5
 800cc2c:	d3f2      	bcc.n	800cc14 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800cc2e:	2003      	movs	r0, #3
 800cc30:	e736      	b.n	800caa0 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cc32:	f898 3000 	ldrb.w	r3, [r8]
 800cc36:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800cc38:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc3a:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cc3c:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc3e:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800cc40:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc42:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cc44:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cc46:	e760      	b.n	800cb0a <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cc48:	f7fd f988 	bl	8009f5c <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800cc4c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc4e:	b29b      	uxth	r3, r3
 800cc50:	2b00      	cmp	r3, #0
 800cc52:	f47f af60 	bne.w	800cb16 <HAL_SPI_Transmit+0xa6>
 800cc56:	e771      	b.n	800cb3c <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cc58:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cc5a:	f831 3b02 	ldrh.w	r3, [r1], #2
 800cc5e:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800cc60:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cc62:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cc64:	3b01      	subs	r3, #1
 800cc66:	b29b      	uxth	r3, r3
 800cc68:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cc6a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc6c:	b29b      	uxth	r3, r3
 800cc6e:	2b00      	cmp	r3, #0
 800cc70:	f43f af64 	beq.w	800cb3c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cc74:	6822      	ldr	r2, [r4, #0]
 800cc76:	6893      	ldr	r3, [r2, #8]
 800cc78:	0799      	lsls	r1, r3, #30
 800cc7a:	d4ed      	bmi.n	800cc58 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cc7c:	f7fd f96e 	bl	8009f5c <HAL_GetTick>
 800cc80:	1b80      	subs	r0, r0, r6
 800cc82:	42a8      	cmp	r0, r5
 800cc84:	d3f1      	bcc.n	800cc6a <HAL_SPI_Transmit+0x1fa>
 800cc86:	e7d2      	b.n	800cc2e <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cc88:	2f01      	cmp	r7, #1
 800cc8a:	d18f      	bne.n	800cbac <HAL_SPI_Transmit+0x13c>
 800cc8c:	e785      	b.n	800cb9a <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800cc8e:	4633      	mov	r3, r6
 800cc90:	462a      	mov	r2, r5
 800cc92:	2180      	movs	r1, #128	; 0x80
 800cc94:	4620      	mov	r0, r4
 800cc96:	f7ff fdef 	bl	800c878 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cc9a:	2800      	cmp	r0, #0
 800cc9c:	f43f af68 	beq.w	800cb70 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cca0:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cca2:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cca4:	4313      	orrs	r3, r2
 800cca6:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cca8:	6562      	str	r2, [r4, #84]	; 0x54
 800ccaa:	e761      	b.n	800cb70 <HAL_SPI_Transmit+0x100>
 800ccac:	20000078 	.word	0x20000078
 800ccb0:	165e9f81 	.word	0x165e9f81

0800ccb4 <HAL_SPI_TransmitReceive>:
{
 800ccb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ccb8:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800ccba:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800ccbe:	2801      	cmp	r0, #1
{
 800ccc0:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800ccc2:	f000 80ac 	beq.w	800ce1e <HAL_SPI_TransmitReceive+0x16a>
 800ccc6:	461e      	mov	r6, r3
 800ccc8:	2301      	movs	r3, #1
 800ccca:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800ccce:	4690      	mov	r8, r2
 800ccd0:	460f      	mov	r7, r1
 800ccd2:	f7fd f943 	bl	8009f5c <HAL_GetTick>
 800ccd6:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800ccd8:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800ccdc:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800ccde:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800cce0:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800cce2:	d011      	beq.n	800cd08 <HAL_SPI_TransmitReceive+0x54>
 800cce4:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800cce8:	d009      	beq.n	800ccfe <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800ccea:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800ccec:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800ccee:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800ccf0:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800ccf4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800ccf8:	b002      	add	sp, #8
 800ccfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800ccfe:	68a1      	ldr	r1, [r4, #8]
 800cd00:	2900      	cmp	r1, #0
 800cd02:	d1f2      	bne.n	800ccea <HAL_SPI_TransmitReceive+0x36>
 800cd04:	2a04      	cmp	r2, #4
 800cd06:	d1f0      	bne.n	800ccea <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800cd08:	2f00      	cmp	r7, #0
 800cd0a:	f000 808c 	beq.w	800ce26 <HAL_SPI_TransmitReceive+0x172>
 800cd0e:	f1b8 0f00 	cmp.w	r8, #0
 800cd12:	f000 8088 	beq.w	800ce26 <HAL_SPI_TransmitReceive+0x172>
 800cd16:	2e00      	cmp	r6, #0
 800cd18:	f000 8085 	beq.w	800ce26 <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cd1c:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800cd20:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cd24:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800cd26:	bf1c      	itt	ne
 800cd28:	2205      	movne	r2, #5
 800cd2a:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cd2e:	2200      	movs	r2, #0
 800cd30:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800cd32:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cd36:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800cd38:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800cd3a:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cd3c:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800cd3e:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cd40:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800cd42:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800cd44:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cd46:	d403      	bmi.n	800cd50 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800cd48:	6811      	ldr	r1, [r2, #0]
 800cd4a:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800cd4e:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800cd50:	68e1      	ldr	r1, [r4, #12]
 800cd52:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800cd56:	f000 809e 	beq.w	800ce96 <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cd5a:	2b00      	cmp	r3, #0
 800cd5c:	f000 8091 	beq.w	800ce82 <HAL_SPI_TransmitReceive+0x1ce>
 800cd60:	2e01      	cmp	r6, #1
 800cd62:	f000 808e 	beq.w	800ce82 <HAL_SPI_TransmitReceive+0x1ce>
 800cd66:	9b08      	ldr	r3, [sp, #32]
 800cd68:	3301      	adds	r3, #1
        txallowed = 1U;
 800cd6a:	f04f 0601 	mov.w	r6, #1
 800cd6e:	d028      	beq.n	800cdc2 <HAL_SPI_TransmitReceive+0x10e>
 800cd70:	e05b      	b.n	800ce2a <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cd72:	6821      	ldr	r1, [r4, #0]
 800cd74:	688b      	ldr	r3, [r1, #8]
 800cd76:	0798      	lsls	r0, r3, #30
 800cd78:	d50f      	bpl.n	800cd9a <HAL_SPI_TransmitReceive+0xe6>
 800cd7a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd7c:	b29b      	uxth	r3, r3
 800cd7e:	b163      	cbz	r3, 800cd9a <HAL_SPI_TransmitReceive+0xe6>
 800cd80:	b15e      	cbz	r6, 800cd9a <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800cd82:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cd84:	781b      	ldrb	r3, [r3, #0]
 800cd86:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800cd88:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cd8a:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cd8c:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800cd8e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cd90:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cd92:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800cd94:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800cd96:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cd98:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cd9a:	688a      	ldr	r2, [r1, #8]
 800cd9c:	f012 0201 	ands.w	r2, r2, #1
 800cda0:	d00d      	beq.n	800cdbe <HAL_SPI_TransmitReceive+0x10a>
 800cda2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cda4:	b29b      	uxth	r3, r3
 800cda6:	b153      	cbz	r3, 800cdbe <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800cda8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800cdaa:	68c9      	ldr	r1, [r1, #12]
 800cdac:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800cdae:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800cdb0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cdb2:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800cdb4:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800cdb6:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800cdb8:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cdba:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800cdbc:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800cdbe:	f7fd f8cd 	bl	8009f5c <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cdc2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800cdc4:	b292      	uxth	r2, r2
 800cdc6:	2a00      	cmp	r2, #0
 800cdc8:	d1d3      	bne.n	800cd72 <HAL_SPI_TransmitReceive+0xbe>
 800cdca:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cdcc:	b29b      	uxth	r3, r3
 800cdce:	2b00      	cmp	r3, #0
 800cdd0:	d1cf      	bne.n	800cd72 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cdd2:	4b79      	ldr	r3, [pc, #484]	; (800cfb8 <HAL_SPI_TransmitReceive+0x304>)
 800cdd4:	4a79      	ldr	r2, [pc, #484]	; (800cfbc <HAL_SPI_TransmitReceive+0x308>)
 800cdd6:	681b      	ldr	r3, [r3, #0]
 800cdd8:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cddc:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cdde:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800cde2:	0d5b      	lsrs	r3, r3, #21
 800cde4:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cde8:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cdec:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cdee:	d107      	bne.n	800ce00 <HAL_SPI_TransmitReceive+0x14c>
 800cdf0:	e0d2      	b.n	800cf98 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800cdf2:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cdf4:	6822      	ldr	r2, [r4, #0]
      count--;
 800cdf6:	3b01      	subs	r3, #1
 800cdf8:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cdfa:	6893      	ldr	r3, [r2, #8]
 800cdfc:	061b      	lsls	r3, r3, #24
 800cdfe:	d502      	bpl.n	800ce06 <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800ce00:	9b01      	ldr	r3, [sp, #4]
 800ce02:	2b00      	cmp	r3, #0
 800ce04:	d1f5      	bne.n	800cdf2 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800ce06:	68a0      	ldr	r0, [r4, #8]
 800ce08:	2800      	cmp	r0, #0
 800ce0a:	f040 8082 	bne.w	800cf12 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800ce0e:	6823      	ldr	r3, [r4, #0]
 800ce10:	9000      	str	r0, [sp, #0]
 800ce12:	68da      	ldr	r2, [r3, #12]
 800ce14:	9200      	str	r2, [sp, #0]
 800ce16:	689b      	ldr	r3, [r3, #8]
 800ce18:	9300      	str	r3, [sp, #0]
 800ce1a:	9b00      	ldr	r3, [sp, #0]
 800ce1c:	e766      	b.n	800ccec <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800ce1e:	2002      	movs	r0, #2
}
 800ce20:	b002      	add	sp, #8
 800ce22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800ce26:	2001      	movs	r0, #1
 800ce28:	e760      	b.n	800ccec <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800ce2a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ce2c:	b29b      	uxth	r3, r3
 800ce2e:	b91b      	cbnz	r3, 800ce38 <HAL_SPI_TransmitReceive+0x184>
 800ce30:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ce32:	b29b      	uxth	r3, r3
 800ce34:	2b00      	cmp	r3, #0
 800ce36:	d0cc      	beq.n	800cdd2 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ce38:	6822      	ldr	r2, [r4, #0]
 800ce3a:	6893      	ldr	r3, [r2, #8]
 800ce3c:	0799      	lsls	r1, r3, #30
 800ce3e:	d50f      	bpl.n	800ce60 <HAL_SPI_TransmitReceive+0x1ac>
 800ce40:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ce42:	b29b      	uxth	r3, r3
 800ce44:	b163      	cbz	r3, 800ce60 <HAL_SPI_TransmitReceive+0x1ac>
 800ce46:	b15e      	cbz	r6, 800ce60 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800ce48:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ce4a:	781b      	ldrb	r3, [r3, #0]
 800ce4c:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800ce4e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800ce50:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ce52:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800ce54:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800ce56:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800ce58:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ce5a:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800ce5c:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800ce5e:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ce60:	6893      	ldr	r3, [r2, #8]
 800ce62:	f013 0301 	ands.w	r3, r3, #1
 800ce66:	d004      	beq.n	800ce72 <HAL_SPI_TransmitReceive+0x1be>
 800ce68:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ce6a:	b289      	uxth	r1, r1
 800ce6c:	2900      	cmp	r1, #0
 800ce6e:	f040 8087 	bne.w	800cf80 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800ce72:	f7fd f873 	bl	8009f5c <HAL_GetTick>
 800ce76:	9b08      	ldr	r3, [sp, #32]
 800ce78:	1b40      	subs	r0, r0, r5
 800ce7a:	4298      	cmp	r0, r3
 800ce7c:	d3d5      	bcc.n	800ce2a <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800ce7e:	2003      	movs	r0, #3
 800ce80:	e734      	b.n	800ccec <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ce82:	783b      	ldrb	r3, [r7, #0]
 800ce84:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800ce86:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ce88:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ce8a:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ce8c:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800ce8e:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ce90:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ce92:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ce94:	e767      	b.n	800cd66 <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ce96:	2b00      	cmp	r3, #0
 800ce98:	d13d      	bne.n	800cf16 <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ce9a:	f837 3b02 	ldrh.w	r3, [r7], #2
 800ce9e:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800cea0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800cea2:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cea4:	3b01      	subs	r3, #1
 800cea6:	b29b      	uxth	r3, r3
 800cea8:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ceaa:	9b08      	ldr	r3, [sp, #32]
 800ceac:	3301      	adds	r3, #1
{
 800ceae:	f04f 0601 	mov.w	r6, #1
 800ceb2:	d025      	beq.n	800cf00 <HAL_SPI_TransmitReceive+0x24c>
 800ceb4:	e032      	b.n	800cf1c <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ceb6:	6823      	ldr	r3, [r4, #0]
 800ceb8:	689a      	ldr	r2, [r3, #8]
 800ceba:	0792      	lsls	r2, r2, #30
 800cebc:	d50d      	bpl.n	800ceda <HAL_SPI_TransmitReceive+0x226>
 800cebe:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800cec0:	b292      	uxth	r2, r2
 800cec2:	b152      	cbz	r2, 800ceda <HAL_SPI_TransmitReceive+0x226>
 800cec4:	b14e      	cbz	r6, 800ceda <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cec6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cec8:	f831 2b02 	ldrh.w	r2, [r1], #2
 800cecc:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800cece:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ced0:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ced2:	3a01      	subs	r2, #1
 800ced4:	b292      	uxth	r2, r2
        txallowed = 0U;
 800ced6:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800ced8:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ceda:	689a      	ldr	r2, [r3, #8]
 800cedc:	f012 0201 	ands.w	r2, r2, #1
 800cee0:	d00c      	beq.n	800cefc <HAL_SPI_TransmitReceive+0x248>
 800cee2:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cee4:	b289      	uxth	r1, r1
 800cee6:	b149      	cbz	r1, 800cefc <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cee8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800ceea:	68db      	ldr	r3, [r3, #12]
 800ceec:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800cef0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cef2:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cef4:	3b01      	subs	r3, #1
 800cef6:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800cef8:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800cefa:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800cefc:	f7fd f82e 	bl	8009f5c <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cf00:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cf02:	b29b      	uxth	r3, r3
 800cf04:	2b00      	cmp	r3, #0
 800cf06:	d1d6      	bne.n	800ceb6 <HAL_SPI_TransmitReceive+0x202>
 800cf08:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf0a:	b29b      	uxth	r3, r3
 800cf0c:	2b00      	cmp	r3, #0
 800cf0e:	d1d2      	bne.n	800ceb6 <HAL_SPI_TransmitReceive+0x202>
 800cf10:	e75f      	b.n	800cdd2 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800cf12:	2000      	movs	r0, #0
 800cf14:	e6ea      	b.n	800ccec <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cf16:	2e01      	cmp	r6, #1
 800cf18:	d1c7      	bne.n	800ceaa <HAL_SPI_TransmitReceive+0x1f6>
 800cf1a:	e7be      	b.n	800ce9a <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cf1c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cf1e:	b29b      	uxth	r3, r3
 800cf20:	b923      	cbnz	r3, 800cf2c <HAL_SPI_TransmitReceive+0x278>
 800cf22:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf24:	b29b      	uxth	r3, r3
 800cf26:	2b00      	cmp	r3, #0
 800cf28:	f43f af53 	beq.w	800cdd2 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cf2c:	6822      	ldr	r2, [r4, #0]
 800cf2e:	6893      	ldr	r3, [r2, #8]
 800cf30:	079f      	lsls	r7, r3, #30
 800cf32:	d50d      	bpl.n	800cf50 <HAL_SPI_TransmitReceive+0x29c>
 800cf34:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cf36:	b29b      	uxth	r3, r3
 800cf38:	b153      	cbz	r3, 800cf50 <HAL_SPI_TransmitReceive+0x29c>
 800cf3a:	b14e      	cbz	r6, 800cf50 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cf3c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cf3e:	f831 3b02 	ldrh.w	r3, [r1], #2
 800cf42:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800cf44:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cf46:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cf48:	3b01      	subs	r3, #1
 800cf4a:	b29b      	uxth	r3, r3
 800cf4c:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800cf4e:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cf50:	6893      	ldr	r3, [r2, #8]
 800cf52:	f013 0301 	ands.w	r3, r3, #1
 800cf56:	d00c      	beq.n	800cf72 <HAL_SPI_TransmitReceive+0x2be>
 800cf58:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cf5a:	b289      	uxth	r1, r1
 800cf5c:	b149      	cbz	r1, 800cf72 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cf5e:	68d1      	ldr	r1, [r2, #12]
 800cf60:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cf62:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800cf66:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800cf68:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cf6a:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf6c:	3b01      	subs	r3, #1
 800cf6e:	b29b      	uxth	r3, r3
 800cf70:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800cf72:	f7fc fff3 	bl	8009f5c <HAL_GetTick>
 800cf76:	9b08      	ldr	r3, [sp, #32]
 800cf78:	1b40      	subs	r0, r0, r5
 800cf7a:	4298      	cmp	r0, r3
 800cf7c:	d3ce      	bcc.n	800cf1c <HAL_SPI_TransmitReceive+0x268>
 800cf7e:	e77e      	b.n	800ce7e <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800cf80:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800cf82:	68d2      	ldr	r2, [r2, #12]
 800cf84:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800cf86:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800cf88:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf8a:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800cf8c:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800cf8e:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800cf90:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf92:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800cf94:	461e      	mov	r6, r3
 800cf96:	e76c      	b.n	800ce72 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800cf98:	9a08      	ldr	r2, [sp, #32]
 800cf9a:	462b      	mov	r3, r5
 800cf9c:	2180      	movs	r1, #128	; 0x80
 800cf9e:	4620      	mov	r0, r4
 800cfa0:	f7ff fc6a 	bl	800c878 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cfa4:	2800      	cmp	r0, #0
 800cfa6:	f43f af2e 	beq.w	800ce06 <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cfaa:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cfac:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cfae:	4313      	orrs	r3, r2
 800cfb0:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800cfb2:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cfb4:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800cfb6:	e699      	b.n	800ccec <HAL_SPI_TransmitReceive+0x38>
 800cfb8:	20000078 	.word	0x20000078
 800cfbc:	165e9f81 	.word	0x165e9f81

0800cfc0 <HAL_SPI_Receive>:
{
 800cfc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cfc4:	6846      	ldr	r6, [r0, #4]
 800cfc6:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800cfca:	b082      	sub	sp, #8
 800cfcc:	4604      	mov	r4, r0
 800cfce:	4690      	mov	r8, r2
 800cfd0:	461d      	mov	r5, r3
 800cfd2:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cfd4:	d06e      	beq.n	800d0b4 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800cfd6:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800cfda:	2b01      	cmp	r3, #1
 800cfdc:	d076      	beq.n	800d0cc <HAL_SPI_Receive+0x10c>
 800cfde:	2301      	movs	r3, #1
 800cfe0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cfe4:	f7fc ffba 	bl	8009f5c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800cfe8:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800cfec:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800cff0:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800cff2:	fa5f f08c 	uxtb.w	r0, ip
 800cff6:	d009      	beq.n	800d00c <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800cff8:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800cffa:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800cffc:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800cffe:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800d002:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800d006:	b002      	add	sp, #8
 800d008:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800d00c:	2f00      	cmp	r7, #0
 800d00e:	d0f4      	beq.n	800cffa <HAL_SPI_Receive+0x3a>
 800d010:	f1b8 0f00 	cmp.w	r8, #0
 800d014:	d0f1      	beq.n	800cffa <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d016:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800d018:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d01a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800d01e:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800d020:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800d024:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800d028:	f04f 0104 	mov.w	r1, #4
 800d02c:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800d030:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800d034:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800d036:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800d038:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800d03a:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800d03e:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800d040:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d042:	d107      	bne.n	800d054 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800d044:	6811      	ldr	r1, [r2, #0]
 800d046:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800d04a:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800d04c:	6811      	ldr	r1, [r2, #0]
 800d04e:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800d052:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800d054:	6811      	ldr	r1, [r2, #0]
 800d056:	0648      	lsls	r0, r1, #25
 800d058:	d403      	bmi.n	800d062 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800d05a:	6811      	ldr	r1, [r2, #0]
 800d05c:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800d060:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800d062:	68e1      	ldr	r1, [r4, #12]
 800d064:	2900      	cmp	r1, #0
 800d066:	d054      	beq.n	800d112 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800d068:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800d06a:	b289      	uxth	r1, r1
 800d06c:	b1a9      	cbz	r1, 800d09a <HAL_SPI_Receive+0xda>
 800d06e:	1c69      	adds	r1, r5, #1
 800d070:	d13e      	bne.n	800d0f0 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d072:	6893      	ldr	r3, [r2, #8]
 800d074:	07db      	lsls	r3, r3, #31
 800d076:	d544      	bpl.n	800d102 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d078:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800d07a:	68d1      	ldr	r1, [r2, #12]
 800d07c:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800d080:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d084:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d086:	f10c 3cff 	add.w	ip, ip, #4294967295
 800d08a:	fa1f fc8c 	uxth.w	ip, ip
 800d08e:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d092:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d094:	b29b      	uxth	r3, r3
 800d096:	2b00      	cmp	r3, #0
 800d098:	d1eb      	bne.n	800d072 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800d09a:	4632      	mov	r2, r6
 800d09c:	4629      	mov	r1, r5
 800d09e:	4620      	mov	r0, r4
 800d0a0:	f7ff fc48 	bl	800c934 <SPI_EndRxTransaction>
 800d0a4:	b108      	cbz	r0, 800d0aa <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d0a6:	2320      	movs	r3, #32
 800d0a8:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800d0aa:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800d0ac:	3800      	subs	r0, #0
 800d0ae:	bf18      	it	ne
 800d0b0:	2001      	movne	r0, #1
error :
 800d0b2:	e7a2      	b.n	800cffa <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800d0b4:	6883      	ldr	r3, [r0, #8]
 800d0b6:	2b00      	cmp	r3, #0
 800d0b8:	d18d      	bne.n	800cfd6 <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800d0ba:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800d0bc:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800d0be:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800d0c0:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800d0c4:	460a      	mov	r2, r1
 800d0c6:	f7ff fdf5 	bl	800ccb4 <HAL_SPI_TransmitReceive>
 800d0ca:	e79c      	b.n	800d006 <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800d0cc:	2002      	movs	r0, #2
}
 800d0ce:	b002      	add	sp, #8
 800d0d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d0d4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d0d6:	68db      	ldr	r3, [r3, #12]
 800d0d8:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800d0dc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d0de:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d0e0:	3b01      	subs	r3, #1
 800d0e2:	b29b      	uxth	r3, r3
 800d0e4:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d0e6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d0e8:	b29b      	uxth	r3, r3
 800d0ea:	2b00      	cmp	r3, #0
 800d0ec:	d0d5      	beq.n	800d09a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d0ee:	6823      	ldr	r3, [r4, #0]
 800d0f0:	689a      	ldr	r2, [r3, #8]
 800d0f2:	07d2      	lsls	r2, r2, #31
 800d0f4:	d4ee      	bmi.n	800d0d4 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d0f6:	f7fc ff31 	bl	8009f5c <HAL_GetTick>
 800d0fa:	1b80      	subs	r0, r0, r6
 800d0fc:	42a8      	cmp	r0, r5
 800d0fe:	d243      	bcs.n	800d188 <HAL_SPI_Receive+0x1c8>
 800d100:	e7f1      	b.n	800d0e6 <HAL_SPI_Receive+0x126>
 800d102:	f7fc ff2b 	bl	8009f5c <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800d106:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d108:	b29b      	uxth	r3, r3
 800d10a:	2b00      	cmp	r3, #0
 800d10c:	d0c5      	beq.n	800d09a <HAL_SPI_Receive+0xda>
 800d10e:	6822      	ldr	r2, [r4, #0]
 800d110:	e7af      	b.n	800d072 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800d112:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800d114:	b292      	uxth	r2, r2
 800d116:	2a00      	cmp	r2, #0
 800d118:	d0bf      	beq.n	800d09a <HAL_SPI_Receive+0xda>
 800d11a:	1c6f      	adds	r7, r5, #1
 800d11c:	d013      	beq.n	800d146 <HAL_SPI_Receive+0x186>
 800d11e:	e02b      	b.n	800d178 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800d120:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d122:	7b1b      	ldrb	r3, [r3, #12]
 800d124:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800d126:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d12a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d12c:	f10c 3cff 	add.w	ip, ip, #4294967295
 800d130:	fa1f fc8c 	uxth.w	ip, ip
 800d134:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d138:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d13a:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800d13c:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d13e:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800d140:	2b00      	cmp	r3, #0
 800d142:	d0aa      	beq.n	800d09a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d144:	6823      	ldr	r3, [r4, #0]
 800d146:	689a      	ldr	r2, [r3, #8]
 800d148:	07d0      	lsls	r0, r2, #31
 800d14a:	d4e9      	bmi.n	800d120 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d14c:	f7fc ff06 	bl	8009f5c <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800d150:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d152:	b29b      	uxth	r3, r3
 800d154:	2b00      	cmp	r3, #0
 800d156:	d1f5      	bne.n	800d144 <HAL_SPI_Receive+0x184>
 800d158:	e79f      	b.n	800d09a <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800d15a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d15c:	7b1b      	ldrb	r3, [r3, #12]
 800d15e:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800d160:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d162:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d164:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d166:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800d168:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d16a:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d16c:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d16e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d170:	b29b      	uxth	r3, r3
 800d172:	2b00      	cmp	r3, #0
 800d174:	d091      	beq.n	800d09a <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d176:	6823      	ldr	r3, [r4, #0]
 800d178:	689a      	ldr	r2, [r3, #8]
 800d17a:	07d1      	lsls	r1, r2, #31
 800d17c:	d4ed      	bmi.n	800d15a <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d17e:	f7fc feed 	bl	8009f5c <HAL_GetTick>
 800d182:	1b80      	subs	r0, r0, r6
 800d184:	42a8      	cmp	r0, r5
 800d186:	d3f2      	bcc.n	800d16e <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800d188:	2003      	movs	r0, #3
 800d18a:	e736      	b.n	800cffa <HAL_SPI_Receive+0x3a>

0800d18c <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800d18c:	2800      	cmp	r0, #0
 800d18e:	f000 8087 	beq.w	800d2a0 <HAL_TIM_Base_Init+0x114>
{
 800d192:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800d194:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d198:	4604      	mov	r4, r0
 800d19a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d19e:	2b00      	cmp	r3, #0
 800d1a0:	d079      	beq.n	800d296 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800d1a2:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d1a4:	493f      	ldr	r1, [pc, #252]	; (800d2a4 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d1a6:	2302      	movs	r3, #2
 800d1a8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d1ac:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800d1ae:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d1b0:	d05d      	beq.n	800d26e <HAL_TIM_Base_Init+0xe2>
 800d1b2:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800d1b6:	d031      	beq.n	800d21c <HAL_TIM_Base_Init+0x90>
 800d1b8:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800d1bc:	428a      	cmp	r2, r1
 800d1be:	d02d      	beq.n	800d21c <HAL_TIM_Base_Init+0x90>
 800d1c0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d1c4:	428a      	cmp	r2, r1
 800d1c6:	d029      	beq.n	800d21c <HAL_TIM_Base_Init+0x90>
 800d1c8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d1cc:	428a      	cmp	r2, r1
 800d1ce:	d025      	beq.n	800d21c <HAL_TIM_Base_Init+0x90>
 800d1d0:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800d1d4:	428a      	cmp	r2, r1
 800d1d6:	d04a      	beq.n	800d26e <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800d1d8:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800d1dc:	428a      	cmp	r2, r1
 800d1de:	d021      	beq.n	800d224 <HAL_TIM_Base_Init+0x98>
 800d1e0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d1e4:	428a      	cmp	r2, r1
 800d1e6:	d01d      	beq.n	800d224 <HAL_TIM_Base_Init+0x98>
 800d1e8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d1ec:	428a      	cmp	r2, r1
 800d1ee:	d019      	beq.n	800d224 <HAL_TIM_Base_Init+0x98>
 800d1f0:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800d1f4:	428a      	cmp	r2, r1
 800d1f6:	d015      	beq.n	800d224 <HAL_TIM_Base_Init+0x98>
 800d1f8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d1fc:	428a      	cmp	r2, r1
 800d1fe:	d011      	beq.n	800d224 <HAL_TIM_Base_Init+0x98>
 800d200:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d204:	428a      	cmp	r2, r1
 800d206:	d00d      	beq.n	800d224 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d208:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d20a:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d20c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d210:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800d212:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800d214:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d216:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d218:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800d21a:	e010      	b.n	800d23e <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800d21c:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d21e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d222:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d224:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d226:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800d228:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d22c:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d22e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d232:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d234:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800d236:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800d238:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d23a:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d23c:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800d23e:	2301      	movs	r3, #1
 800d240:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800d242:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d246:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800d24a:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800d24e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800d252:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d256:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800d25a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d25e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d262:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800d266:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800d26a:	2000      	movs	r0, #0
}
 800d26c:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800d26e:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d270:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d272:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d276:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800d278:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d27c:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d27e:	69a1      	ldr	r1, [r4, #24]
 800d280:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d284:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800d286:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d288:	68e3      	ldr	r3, [r4, #12]
 800d28a:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d28c:	6863      	ldr	r3, [r4, #4]
 800d28e:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800d290:	6963      	ldr	r3, [r4, #20]
 800d292:	6313      	str	r3, [r2, #48]	; 0x30
 800d294:	e7d3      	b.n	800d23e <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800d296:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800d29a:	f7f5 fb95 	bl	80029c8 <HAL_TIM_Base_MspInit>
 800d29e:	e780      	b.n	800d1a2 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800d2a0:	2001      	movs	r0, #1
}
 800d2a2:	4770      	bx	lr
 800d2a4:	40010000 	.word	0x40010000

0800d2a8 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800d2a8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d2ac:	2b01      	cmp	r3, #1
 800d2ae:	d12f      	bne.n	800d310 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d2b0:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d2b2:	4919      	ldr	r1, [pc, #100]	; (800d318 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d2b4:	2202      	movs	r2, #2
 800d2b6:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d2ba:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d2bc:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d2be:	f042 0201 	orr.w	r2, r2, #1
 800d2c2:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d2c4:	d019      	beq.n	800d2fa <HAL_TIM_Base_Start_IT+0x52>
 800d2c6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d2ca:	d016      	beq.n	800d2fa <HAL_TIM_Base_Start_IT+0x52>
 800d2cc:	4a13      	ldr	r2, [pc, #76]	; (800d31c <HAL_TIM_Base_Start_IT+0x74>)
 800d2ce:	4293      	cmp	r3, r2
 800d2d0:	d013      	beq.n	800d2fa <HAL_TIM_Base_Start_IT+0x52>
 800d2d2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d2d6:	4293      	cmp	r3, r2
 800d2d8:	d00f      	beq.n	800d2fa <HAL_TIM_Base_Start_IT+0x52>
 800d2da:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d2de:	4293      	cmp	r3, r2
 800d2e0:	d00b      	beq.n	800d2fa <HAL_TIM_Base_Start_IT+0x52>
 800d2e2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d2e6:	4293      	cmp	r3, r2
 800d2e8:	d007      	beq.n	800d2fa <HAL_TIM_Base_Start_IT+0x52>
 800d2ea:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d2ee:	4293      	cmp	r3, r2
 800d2f0:	d003      	beq.n	800d2fa <HAL_TIM_Base_Start_IT+0x52>
 800d2f2:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d2f6:	4293      	cmp	r3, r2
 800d2f8:	d104      	bne.n	800d304 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800d2fa:	689a      	ldr	r2, [r3, #8]
 800d2fc:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800d300:	2a06      	cmp	r2, #6
 800d302:	d007      	beq.n	800d314 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800d304:	681a      	ldr	r2, [r3, #0]
 800d306:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800d30a:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800d30c:	601a      	str	r2, [r3, #0]
 800d30e:	4770      	bx	lr
    return HAL_ERROR;
 800d310:	2001      	movs	r0, #1
 800d312:	4770      	bx	lr
  return HAL_OK;
 800d314:	2000      	movs	r0, #0
}
 800d316:	4770      	bx	lr
 800d318:	40010000 	.word	0x40010000
 800d31c:	40000400 	.word	0x40000400

0800d320 <HAL_TIM_OC_DelayElapsedCallback>:
 800d320:	4770      	bx	lr
 800d322:	bf00      	nop

0800d324 <HAL_TIM_IC_CaptureCallback>:
 800d324:	4770      	bx	lr
 800d326:	bf00      	nop

0800d328 <HAL_TIM_PWM_PulseFinishedCallback>:
 800d328:	4770      	bx	lr
 800d32a:	bf00      	nop

0800d32c <HAL_TIM_TriggerCallback>:
 800d32c:	4770      	bx	lr
 800d32e:	bf00      	nop

0800d330 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d330:	6803      	ldr	r3, [r0, #0]
 800d332:	691a      	ldr	r2, [r3, #16]
 800d334:	0791      	lsls	r1, r2, #30
{
 800d336:	b510      	push	{r4, lr}
 800d338:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d33a:	d502      	bpl.n	800d342 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800d33c:	68da      	ldr	r2, [r3, #12]
 800d33e:	0792      	lsls	r2, r2, #30
 800d340:	d45f      	bmi.n	800d402 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d342:	691a      	ldr	r2, [r3, #16]
 800d344:	0750      	lsls	r0, r2, #29
 800d346:	d502      	bpl.n	800d34e <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800d348:	68da      	ldr	r2, [r3, #12]
 800d34a:	0751      	lsls	r1, r2, #29
 800d34c:	d446      	bmi.n	800d3dc <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d34e:	691a      	ldr	r2, [r3, #16]
 800d350:	0712      	lsls	r2, r2, #28
 800d352:	d502      	bpl.n	800d35a <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800d354:	68da      	ldr	r2, [r3, #12]
 800d356:	0710      	lsls	r0, r2, #28
 800d358:	d42e      	bmi.n	800d3b8 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d35a:	691a      	ldr	r2, [r3, #16]
 800d35c:	06d2      	lsls	r2, r2, #27
 800d35e:	d502      	bpl.n	800d366 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800d360:	68da      	ldr	r2, [r3, #12]
 800d362:	06d0      	lsls	r0, r2, #27
 800d364:	d418      	bmi.n	800d398 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d366:	691a      	ldr	r2, [r3, #16]
 800d368:	07d1      	lsls	r1, r2, #31
 800d36a:	d502      	bpl.n	800d372 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800d36c:	68da      	ldr	r2, [r3, #12]
 800d36e:	07d2      	lsls	r2, r2, #31
 800d370:	d45d      	bmi.n	800d42e <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d372:	691a      	ldr	r2, [r3, #16]
 800d374:	0610      	lsls	r0, r2, #24
 800d376:	d502      	bpl.n	800d37e <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800d378:	68da      	ldr	r2, [r3, #12]
 800d37a:	0611      	lsls	r1, r2, #24
 800d37c:	d45f      	bmi.n	800d43e <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d37e:	691a      	ldr	r2, [r3, #16]
 800d380:	0652      	lsls	r2, r2, #25
 800d382:	d502      	bpl.n	800d38a <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800d384:	68da      	ldr	r2, [r3, #12]
 800d386:	0650      	lsls	r0, r2, #25
 800d388:	d461      	bmi.n	800d44e <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d38a:	691a      	ldr	r2, [r3, #16]
 800d38c:	0691      	lsls	r1, r2, #26
 800d38e:	d502      	bpl.n	800d396 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800d390:	68da      	ldr	r2, [r3, #12]
 800d392:	0692      	lsls	r2, r2, #26
 800d394:	d443      	bmi.n	800d41e <HAL_TIM_IRQHandler+0xee>
}
 800d396:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d398:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d39c:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d39e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d3a0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d3a2:	69db      	ldr	r3, [r3, #28]
 800d3a4:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d3a8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d3aa:	d064      	beq.n	800d476 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800d3ac:	f7ff ffba 	bl	800d324 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d3b0:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d3b2:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d3b4:	7722      	strb	r2, [r4, #28]
 800d3b6:	e7d6      	b.n	800d366 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d3b8:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d3bc:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d3be:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d3c0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d3c2:	69db      	ldr	r3, [r3, #28]
 800d3c4:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800d3c6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d3c8:	d152      	bne.n	800d470 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d3ca:	f7ff ffa9 	bl	800d320 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d3ce:	4620      	mov	r0, r4
 800d3d0:	f7ff ffaa 	bl	800d328 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d3d4:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d3d6:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d3d8:	7722      	strb	r2, [r4, #28]
 800d3da:	e7be      	b.n	800d35a <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d3dc:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d3e0:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d3e2:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d3e4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d3e6:	699b      	ldr	r3, [r3, #24]
 800d3e8:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d3ec:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d3ee:	d13c      	bne.n	800d46a <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d3f0:	f7ff ff96 	bl	800d320 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d3f4:	4620      	mov	r0, r4
 800d3f6:	f7ff ff97 	bl	800d328 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d3fa:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d3fc:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d3fe:	7722      	strb	r2, [r4, #28]
 800d400:	e7a5      	b.n	800d34e <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d402:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d406:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d408:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d40a:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800d40c:	699b      	ldr	r3, [r3, #24]
 800d40e:	079b      	lsls	r3, r3, #30
 800d410:	d025      	beq.n	800d45e <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800d412:	f7ff ff87 	bl	800d324 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d416:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d418:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d41a:	7722      	strb	r2, [r4, #28]
 800d41c:	e791      	b.n	800d342 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d41e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800d422:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d424:	611a      	str	r2, [r3, #16]
}
 800d426:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800d42a:	f000 b82b 	b.w	800d484 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800d42e:	f06f 0201 	mvn.w	r2, #1
 800d432:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800d434:	4620      	mov	r0, r4
 800d436:	f7f4 ffa9 	bl	800238c <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d43a:	6823      	ldr	r3, [r4, #0]
 800d43c:	e799      	b.n	800d372 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800d43e:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800d442:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800d444:	4620      	mov	r0, r4
 800d446:	f000 f81f 	bl	800d488 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d44a:	6823      	ldr	r3, [r4, #0]
 800d44c:	e797      	b.n	800d37e <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800d44e:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800d452:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800d454:	4620      	mov	r0, r4
 800d456:	f7ff ff69 	bl	800d32c <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d45a:	6823      	ldr	r3, [r4, #0]
 800d45c:	e795      	b.n	800d38a <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800d45e:	f7ff ff5f 	bl	800d320 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d462:	4620      	mov	r0, r4
 800d464:	f7ff ff60 	bl	800d328 <HAL_TIM_PWM_PulseFinishedCallback>
 800d468:	e7d5      	b.n	800d416 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800d46a:	f7ff ff5b 	bl	800d324 <HAL_TIM_IC_CaptureCallback>
 800d46e:	e7c4      	b.n	800d3fa <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800d470:	f7ff ff58 	bl	800d324 <HAL_TIM_IC_CaptureCallback>
 800d474:	e7ae      	b.n	800d3d4 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d476:	f7ff ff53 	bl	800d320 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d47a:	4620      	mov	r0, r4
 800d47c:	f7ff ff54 	bl	800d328 <HAL_TIM_PWM_PulseFinishedCallback>
 800d480:	e796      	b.n	800d3b0 <HAL_TIM_IRQHandler+0x80>
 800d482:	bf00      	nop

0800d484 <HAL_TIMEx_CommutCallback>:
 800d484:	4770      	bx	lr
 800d486:	bf00      	nop

0800d488 <HAL_TIMEx_BreakCallback>:
 800d488:	4770      	bx	lr
 800d48a:	bf00      	nop

0800d48c <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d48c:	680b      	ldr	r3, [r1, #0]
{
 800d48e:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d490:	b9d3      	cbnz	r3, 800d4c8 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d492:	6803      	ldr	r3, [r0, #0]
 800d494:	684c      	ldr	r4, [r1, #4]
 800d496:	688a      	ldr	r2, [r1, #8]
 800d498:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d49c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d4a0:	4323      	orrs	r3, r4
 800d4a2:	4313      	orrs	r3, r2
 800d4a4:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800d4a8:	4323      	orrs	r3, r4
 800d4aa:	4313      	orrs	r3, r2
 800d4ac:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800d4b0:	4323      	orrs	r3, r4
 800d4b2:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800d4b6:	4313      	orrs	r3, r2
 800d4b8:	432b      	orrs	r3, r5
 800d4ba:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800d4bc:	4323      	orrs	r3, r4
 800d4be:	4313      	orrs	r3, r2
 800d4c0:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800d4c2:	bc30      	pop	{r4, r5}
 800d4c4:	2000      	movs	r0, #0
 800d4c6:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d4c8:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800d4cc:	6803      	ldr	r3, [r0, #0]
 800d4ce:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800d4d2:	4323      	orrs	r3, r4
 800d4d4:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800d4d6:	4313      	orrs	r3, r2
 800d4d8:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d4da:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d4dc:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d4de:	6843      	ldr	r3, [r0, #4]
 800d4e0:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d4e4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d4e8:	4313      	orrs	r3, r2
 800d4ea:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d4ee:	4323      	orrs	r3, r4
 800d4f0:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d4f4:	4313      	orrs	r3, r2
 800d4f6:	432b      	orrs	r3, r5
 800d4f8:	698a      	ldr	r2, [r1, #24]
 800d4fa:	4323      	orrs	r3, r4
 800d4fc:	4313      	orrs	r3, r2
 800d4fe:	6043      	str	r3, [r0, #4]
}
 800d500:	bc30      	pop	{r4, r5}
 800d502:	2000      	movs	r0, #0
 800d504:	4770      	bx	lr
 800d506:	bf00      	nop

0800d508 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800d508:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d50a:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800d50c:	bb02      	cbnz	r2, 800d550 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d50e:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d512:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d516:	3c01      	subs	r4, #1
 800d518:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d51c:	3a01      	subs	r2, #1
 800d51e:	4313      	orrs	r3, r2
 800d520:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d524:	3c01      	subs	r4, #1
 800d526:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800d52a:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d52e:	3a01      	subs	r2, #1
 800d530:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800d534:	698a      	ldr	r2, [r1, #24]
 800d536:	1e69      	subs	r1, r5, #1
 800d538:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d53c:	1e61      	subs	r1, r4, #1
 800d53e:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800d542:	3a01      	subs	r2, #1
 800d544:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d548:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800d54a:	bc30      	pop	{r4, r5}
 800d54c:	2000      	movs	r0, #0
 800d54e:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d550:	68cc      	ldr	r4, [r1, #12]
 800d552:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d554:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d556:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800d55a:	3c01      	subs	r4, #1
 800d55c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800d560:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800d564:	3a01      	subs	r2, #1
 800d566:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800d56a:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d56c:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d570:	68c3      	ldr	r3, [r0, #12]
 800d572:	3c01      	subs	r4, #1
 800d574:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d578:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d57c:	3a01      	subs	r2, #1
 800d57e:	690c      	ldr	r4, [r1, #16]
 800d580:	4313      	orrs	r3, r2
 800d582:	698a      	ldr	r2, [r1, #24]
 800d584:	1e69      	subs	r1, r5, #1
 800d586:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800d58a:	1e61      	subs	r1, r4, #1
 800d58c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d590:	3a01      	subs	r2, #1
 800d592:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d596:	60c3      	str	r3, [r0, #12]
}
 800d598:	bc30      	pop	{r4, r5}
 800d59a:	2000      	movs	r0, #0
 800d59c:	4770      	bx	lr
 800d59e:	bf00      	nop

0800d5a0 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800d5a0:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d5a2:	680b      	ldr	r3, [r1, #0]
{
 800d5a4:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d5a6:	684a      	ldr	r2, [r1, #4]
{
 800d5a8:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d5aa:	4313      	orrs	r3, r2
 800d5ac:	6900      	ldr	r0, [r0, #16]
 800d5ae:	68ca      	ldr	r2, [r1, #12]
 800d5b0:	0d80      	lsrs	r0, r0, #22
 800d5b2:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800d5b6:	688a      	ldr	r2, [r1, #8]
 800d5b8:	0580      	lsls	r0, r0, #22
 800d5ba:	4303      	orrs	r3, r0
 800d5bc:	3a01      	subs	r2, #1
 800d5be:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800d5c2:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800d5c4:	f7fc fcca 	bl	8009f5c <HAL_GetTick>
 800d5c8:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d5ca:	1c6b      	adds	r3, r5, #1
 800d5cc:	d105      	bne.n	800d5da <FMC_SDRAM_SendCommand+0x3a>
 800d5ce:	69a3      	ldr	r3, [r4, #24]
 800d5d0:	f013 0320 	ands.w	r3, r3, #32
 800d5d4:	d1fb      	bne.n	800d5ce <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800d5d6:	4618      	mov	r0, r3
}
 800d5d8:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d5da:	69a3      	ldr	r3, [r4, #24]
 800d5dc:	f013 0320 	ands.w	r3, r3, #32
 800d5e0:	d0f9      	beq.n	800d5d6 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800d5e2:	b125      	cbz	r5, 800d5ee <FMC_SDRAM_SendCommand+0x4e>
 800d5e4:	f7fc fcba 	bl	8009f5c <HAL_GetTick>
 800d5e8:	1b80      	subs	r0, r0, r6
 800d5ea:	42a8      	cmp	r0, r5
 800d5ec:	d9ed      	bls.n	800d5ca <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800d5ee:	2003      	movs	r0, #3
}
 800d5f0:	bd70      	pop	{r4, r5, r6, pc}
 800d5f2:	bf00      	nop

0800d5f4 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d5f4:	6943      	ldr	r3, [r0, #20]
 800d5f6:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800d5fa:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d5fc:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800d600:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800d604:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d606:	6151      	str	r1, [r2, #20]
}
 800d608:	4770      	bx	lr
 800d60a:	bf00      	nop

0800d60c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800d60c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800d60e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d612:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800d614:	f002 fafe 	bl	800fc14 <xTaskGetSchedulerState>
 800d618:	2801      	cmp	r0, #1
 800d61a:	d100      	bne.n	800d61e <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800d61c:	bd08      	pop	{r3, pc}
 800d61e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800d622:	f000 bc3f 	b.w	800dea4 <xPortSysTickHandler>
 800d626:	bf00      	nop

0800d628 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800d628:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800d62c:	b92b      	cbnz	r3, 800d63a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800d62e:	4b06      	ldr	r3, [pc, #24]	; (800d648 <osKernelInitialize+0x20>)
 800d630:	6818      	ldr	r0, [r3, #0]
 800d632:	b928      	cbnz	r0, 800d640 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800d634:	2201      	movs	r2, #1
 800d636:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800d638:	4770      	bx	lr
    stat = osErrorISR;
 800d63a:	f06f 0005 	mvn.w	r0, #5
 800d63e:	4770      	bx	lr
    } else {
      stat = osError;
 800d640:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800d644:	4770      	bx	lr
 800d646:	bf00      	nop
 800d648:	20002264 	.word	0x20002264

0800d64c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800d64c:	b510      	push	{r4, lr}
 800d64e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d652:	b974      	cbnz	r4, 800d672 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800d654:	4b08      	ldr	r3, [pc, #32]	; (800d678 <osKernelStart+0x2c>)
 800d656:	681a      	ldr	r2, [r3, #0]
 800d658:	2a01      	cmp	r2, #1
 800d65a:	d107      	bne.n	800d66c <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800d65c:	4907      	ldr	r1, [pc, #28]	; (800d67c <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800d65e:	2202      	movs	r2, #2
 800d660:	77cc      	strb	r4, [r1, #31]
 800d662:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800d664:	f002 f8b0 	bl	800f7c8 <vTaskStartScheduler>
      stat = osOK;
 800d668:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800d66a:	bd10      	pop	{r4, pc}
      stat = osError;
 800d66c:	f04f 30ff 	mov.w	r0, #4294967295
}
 800d670:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d672:	f06f 0005 	mvn.w	r0, #5
}
 800d676:	bd10      	pop	{r4, pc}
 800d678:	20002264 	.word	0x20002264
 800d67c:	e000ed00 	.word	0xe000ed00

0800d680 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d680:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d682:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800d684:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d686:	4615      	mov	r5, r2
  hTask = NULL;
 800d688:	9405      	str	r4, [sp, #20]
 800d68a:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800d68e:	b9ea      	cbnz	r2, 800d6cc <osThreadNew+0x4c>
 800d690:	b350      	cbz	r0, 800d6e8 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800d692:	b1f5      	cbz	r5, 800d6d2 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800d694:	69ab      	ldr	r3, [r5, #24]
 800d696:	bb5b      	cbnz	r3, 800d6f0 <osThreadNew+0x70>
 800d698:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d69a:	686a      	ldr	r2, [r5, #4]
 800d69c:	07d2      	lsls	r2, r2, #31
 800d69e:	d423      	bmi.n	800d6e8 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800d6a0:	696e      	ldr	r6, [r5, #20]
 800d6a2:	b34e      	cbz	r6, 800d6f8 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800d6a4:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d6a8:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800d6aa:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d6ac:	b34c      	cbz	r4, 800d702 <osThreadNew+0x82>
 800d6ae:	68ea      	ldr	r2, [r5, #12]
 800d6b0:	2aab      	cmp	r2, #171	; 0xab
 800d6b2:	d919      	bls.n	800d6e8 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d6b4:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d6b6:	b1bd      	cbz	r5, 800d6e8 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d6b8:	b1b6      	cbz	r6, 800d6e8 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800d6ba:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800d6be:	9300      	str	r3, [sp, #0]
 800d6c0:	4662      	mov	r2, ip
 800d6c2:	460b      	mov	r3, r1
 800d6c4:	4639      	mov	r1, r7
 800d6c6:	f001 ffbd 	bl	800f644 <xTaskCreateStatic>
 800d6ca:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800d6cc:	4620      	mov	r0, r4
 800d6ce:	b007      	add	sp, #28
 800d6d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d6d2:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800d6d4:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d6d6:	ac05      	add	r4, sp, #20
 800d6d8:	9300      	str	r3, [sp, #0]
 800d6da:	9401      	str	r4, [sp, #4]
 800d6dc:	460b      	mov	r3, r1
 800d6de:	4629      	mov	r1, r5
 800d6e0:	f001 ffea 	bl	800f6b8 <xTaskCreate>
 800d6e4:	2801      	cmp	r0, #1
 800d6e6:	d00a      	beq.n	800d6fe <osThreadNew+0x7e>
        return (NULL);
 800d6e8:	2400      	movs	r4, #0
}
 800d6ea:	4620      	mov	r0, r4
 800d6ec:	b007      	add	sp, #28
 800d6ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d6f0:	1e5c      	subs	r4, r3, #1
 800d6f2:	2c37      	cmp	r4, #55	; 0x37
 800d6f4:	d9d1      	bls.n	800d69a <osThreadNew+0x1a>
 800d6f6:	e7f7      	b.n	800d6e8 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800d6f8:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800d6fc:	e7d4      	b.n	800d6a8 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800d6fe:	9c05      	ldr	r4, [sp, #20]
 800d700:	e7e4      	b.n	800d6cc <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800d702:	68ee      	ldr	r6, [r5, #12]
 800d704:	2e00      	cmp	r6, #0
 800d706:	d1e1      	bne.n	800d6cc <osThreadNew+0x4c>
 800d708:	692d      	ldr	r5, [r5, #16]
 800d70a:	2d00      	cmp	r5, #0
 800d70c:	d1de      	bne.n	800d6cc <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d70e:	fa1f f28c 	uxth.w	r2, ip
 800d712:	463d      	mov	r5, r7
 800d714:	e7df      	b.n	800d6d6 <osThreadNew+0x56>
 800d716:	bf00      	nop

0800d718 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800d718:	b510      	push	{r4, lr}
 800d71a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d71e:	b92c      	cbnz	r4, 800d72c <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800d720:	b900      	cbnz	r0, 800d724 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800d722:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800d724:	f001 fffa 	bl	800f71c <vTaskDelay>
    stat = osOK;
 800d728:	4620      	mov	r0, r4
}
 800d72a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d72c:	f06f 0005 	mvn.w	r0, #5
}
 800d730:	bd10      	pop	{r4, pc}
 800d732:	bf00      	nop

0800d734 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800d734:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d736:	b083      	sub	sp, #12
 800d738:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800d73c:	b9fe      	cbnz	r6, 800d77e <osSemaphoreNew+0x4a>
 800d73e:	b1f0      	cbz	r0, 800d77e <osSemaphoreNew+0x4a>
 800d740:	4288      	cmp	r0, r1
 800d742:	460f      	mov	r7, r1
 800d744:	d31b      	bcc.n	800d77e <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800d746:	4615      	mov	r5, r2
 800d748:	b192      	cbz	r2, 800d770 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800d74a:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800d74e:	b1d2      	cbz	r2, 800d786 <osSemaphoreNew+0x52>
 800d750:	2b4f      	cmp	r3, #79	; 0x4f
 800d752:	d914      	bls.n	800d77e <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800d754:	2801      	cmp	r0, #1
 800d756:	d038      	beq.n	800d7ca <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800d758:	f000 fd8a 	bl	800e270 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800d75c:	4604      	mov	r4, r0
 800d75e:	b170      	cbz	r0, 800d77e <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800d760:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800d762:	4620      	mov	r0, r4
 800d764:	4629      	mov	r1, r5
 800d766:	f001 fc35 	bl	800efd4 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800d76a:	4620      	mov	r0, r4
 800d76c:	b003      	add	sp, #12
 800d76e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800d770:	2801      	cmp	r0, #1
 800d772:	d012      	beq.n	800d79a <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d774:	f000 fddc 	bl	800e330 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d778:	4604      	mov	r4, r0
 800d77a:	2800      	cmp	r0, #0
 800d77c:	d1f1      	bne.n	800d762 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800d77e:	2400      	movs	r4, #0
}
 800d780:	4620      	mov	r0, r4
 800d782:	b003      	add	sp, #12
 800d784:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800d786:	2b00      	cmp	r3, #0
 800d788:	d1f9      	bne.n	800d77e <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800d78a:	2801      	cmp	r0, #1
 800d78c:	d005      	beq.n	800d79a <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d78e:	f000 fdcf 	bl	800e330 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d792:	4604      	mov	r4, r0
 800d794:	2800      	cmp	r0, #0
 800d796:	d1e3      	bne.n	800d760 <osSemaphoreNew+0x2c>
 800d798:	e7f1      	b.n	800d77e <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800d79a:	2203      	movs	r2, #3
 800d79c:	2100      	movs	r1, #0
 800d79e:	2001      	movs	r0, #1
 800d7a0:	f000 fd24 	bl	800e1ec <xQueueGenericCreate>
 800d7a4:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800d7a6:	2c00      	cmp	r4, #0
 800d7a8:	d0e9      	beq.n	800d77e <osSemaphoreNew+0x4a>
 800d7aa:	b917      	cbnz	r7, 800d7b2 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800d7ac:	2d00      	cmp	r5, #0
 800d7ae:	d1d7      	bne.n	800d760 <osSemaphoreNew+0x2c>
 800d7b0:	e7d7      	b.n	800d762 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d7b2:	2300      	movs	r3, #0
 800d7b4:	461a      	mov	r2, r3
 800d7b6:	4619      	mov	r1, r3
 800d7b8:	4620      	mov	r0, r4
 800d7ba:	f000 fdff 	bl	800e3bc <xQueueGenericSend>
 800d7be:	2801      	cmp	r0, #1
 800d7c0:	d0f4      	beq.n	800d7ac <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800d7c2:	4620      	mov	r0, r4
 800d7c4:	f001 fbc0 	bl	800ef48 <vQueueDelete>
 800d7c8:	e7d9      	b.n	800d77e <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800d7ca:	4613      	mov	r3, r2
 800d7cc:	2203      	movs	r2, #3
 800d7ce:	9200      	str	r2, [sp, #0]
 800d7d0:	4631      	mov	r1, r6
 800d7d2:	4632      	mov	r2, r6
 800d7d4:	f000 fc9c 	bl	800e110 <xQueueGenericCreateStatic>
 800d7d8:	4604      	mov	r4, r0
 800d7da:	e7e4      	b.n	800d7a6 <osSemaphoreNew+0x72>

0800d7dc <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d7dc:	b370      	cbz	r0, 800d83c <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800d7de:	b510      	push	{r4, lr}
 800d7e0:	460c      	mov	r4, r1
 800d7e2:	b082      	sub	sp, #8
 800d7e4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d7e8:	b1c3      	cbz	r3, 800d81c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800d7ea:	bb21      	cbnz	r1, 800d836 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d7ec:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d7ee:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d7f0:	f001 fb28 	bl	800ee44 <xQueueReceiveFromISR>
 800d7f4:	2801      	cmp	r0, #1
 800d7f6:	d11a      	bne.n	800d82e <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d7f8:	9b01      	ldr	r3, [sp, #4]
 800d7fa:	b913      	cbnz	r3, 800d802 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800d7fc:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d7fe:	b002      	add	sp, #8
 800d800:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800d802:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d806:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d80a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d80e:	f3bf 8f4f 	dsb	sy
 800d812:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d816:	4620      	mov	r0, r4
}
 800d818:	b002      	add	sp, #8
 800d81a:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800d81c:	f001 f988 	bl	800eb30 <xQueueSemaphoreTake>
 800d820:	2801      	cmp	r0, #1
 800d822:	d0eb      	beq.n	800d7fc <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800d824:	b11c      	cbz	r4, 800d82e <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800d826:	f06f 0001 	mvn.w	r0, #1
}
 800d82a:	b002      	add	sp, #8
 800d82c:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800d82e:	f06f 0002 	mvn.w	r0, #2
}
 800d832:	b002      	add	sp, #8
 800d834:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800d836:	f06f 0003 	mvn.w	r0, #3
 800d83a:	e7e0      	b.n	800d7fe <osSemaphoreAcquire+0x22>
 800d83c:	f06f 0003 	mvn.w	r0, #3
}
 800d840:	4770      	bx	lr
 800d842:	bf00      	nop

0800d844 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d844:	b330      	cbz	r0, 800d894 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800d846:	b510      	push	{r4, lr}
 800d848:	b082      	sub	sp, #8
 800d84a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d84e:	b1ab      	cbz	r3, 800d87c <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800d850:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d852:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800d854:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d856:	f000 ff95 	bl	800e784 <xQueueGiveFromISR>
 800d85a:	2801      	cmp	r0, #1
 800d85c:	d117      	bne.n	800d88e <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800d85e:	9b01      	ldr	r3, [sp, #4]
 800d860:	b193      	cbz	r3, 800d888 <osSemaphoreRelease+0x44>
 800d862:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d866:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d86a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d86e:	f3bf 8f4f 	dsb	sy
 800d872:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d876:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800d878:	b002      	add	sp, #8
 800d87a:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d87c:	461a      	mov	r2, r3
 800d87e:	4619      	mov	r1, r3
 800d880:	f000 fd9c 	bl	800e3bc <xQueueGenericSend>
 800d884:	2801      	cmp	r0, #1
 800d886:	d102      	bne.n	800d88e <osSemaphoreRelease+0x4a>
  stat = osOK;
 800d888:	2000      	movs	r0, #0
}
 800d88a:	b002      	add	sp, #8
 800d88c:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800d88e:	f06f 0002 	mvn.w	r0, #2
 800d892:	e7fa      	b.n	800d88a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800d894:	f06f 0003 	mvn.w	r0, #3
}
 800d898:	4770      	bx	lr
 800d89a:	bf00      	nop

0800d89c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800d89c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d89e:	b085      	sub	sp, #20
 800d8a0:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800d8a4:	b987      	cbnz	r7, 800d8c8 <osMessageQueueNew+0x2c>
 800d8a6:	4605      	mov	r5, r0
 800d8a8:	b170      	cbz	r0, 800d8c8 <osMessageQueueNew+0x2c>
 800d8aa:	b169      	cbz	r1, 800d8c8 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800d8ac:	4614      	mov	r4, r2
 800d8ae:	b1ea      	cbz	r2, 800d8ec <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d8b0:	6893      	ldr	r3, [r2, #8]
 800d8b2:	b163      	cbz	r3, 800d8ce <osMessageQueueNew+0x32>
 800d8b4:	68d2      	ldr	r2, [r2, #12]
 800d8b6:	2a4f      	cmp	r2, #79	; 0x4f
 800d8b8:	d906      	bls.n	800d8c8 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d8ba:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d8bc:	b122      	cbz	r2, 800d8c8 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d8be:	6966      	ldr	r6, [r4, #20]
 800d8c0:	fb01 f505 	mul.w	r5, r1, r5
 800d8c4:	42ae      	cmp	r6, r5
 800d8c6:	d21c      	bcs.n	800d902 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800d8c8:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800d8ca:	b005      	add	sp, #20
 800d8cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800d8ce:	68d3      	ldr	r3, [r2, #12]
 800d8d0:	2b00      	cmp	r3, #0
 800d8d2:	d1f9      	bne.n	800d8c8 <osMessageQueueNew+0x2c>
 800d8d4:	6913      	ldr	r3, [r2, #16]
 800d8d6:	2b00      	cmp	r3, #0
 800d8d8:	d1f6      	bne.n	800d8c8 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800d8da:	6952      	ldr	r2, [r2, #20]
 800d8dc:	2a00      	cmp	r2, #0
 800d8de:	d1f3      	bne.n	800d8c8 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d8e0:	f000 fc84 	bl	800e1ec <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d8e4:	2800      	cmp	r0, #0
 800d8e6:	d0ef      	beq.n	800d8c8 <osMessageQueueNew+0x2c>
        name = attr->name;
 800d8e8:	6824      	ldr	r4, [r4, #0]
 800d8ea:	e003      	b.n	800d8f4 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d8ec:	f000 fc7e 	bl	800e1ec <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d8f0:	2800      	cmp	r0, #0
 800d8f2:	d0e9      	beq.n	800d8c8 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800d8f4:	4621      	mov	r1, r4
 800d8f6:	9003      	str	r0, [sp, #12]
 800d8f8:	f001 fb6c 	bl	800efd4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800d8fc:	9803      	ldr	r0, [sp, #12]
}
 800d8fe:	b005      	add	sp, #20
 800d900:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800d902:	9700      	str	r7, [sp, #0]
 800d904:	f000 fc04 	bl	800e110 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800d908:	2800      	cmp	r0, #0
 800d90a:	d1ed      	bne.n	800d8e8 <osMessageQueueNew+0x4c>
 800d90c:	e7dc      	b.n	800d8c8 <osMessageQueueNew+0x2c>
 800d90e:	bf00      	nop

0800d910 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800d910:	b570      	push	{r4, r5, r6, lr}
 800d912:	461c      	mov	r4, r3
 800d914:	b082      	sub	sp, #8
 800d916:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d91a:	b1be      	cbz	r6, 800d94c <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d91c:	b350      	cbz	r0, 800d974 <osMessageQueuePut+0x64>
 800d91e:	b349      	cbz	r1, 800d974 <osMessageQueuePut+0x64>
 800d920:	bb43      	cbnz	r3, 800d974 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d922:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d924:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d926:	f000 fec7 	bl	800e6b8 <xQueueGenericSendFromISR>
 800d92a:	2801      	cmp	r0, #1
 800d92c:	d11e      	bne.n	800d96c <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d92e:	9b01      	ldr	r3, [sp, #4]
 800d930:	b1cb      	cbz	r3, 800d966 <osMessageQueuePut+0x56>
 800d932:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d936:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d93a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d93e:	f3bf 8f4f 	dsb	sy
 800d942:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d946:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800d948:	b002      	add	sp, #8
 800d94a:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d94c:	b190      	cbz	r0, 800d974 <osMessageQueuePut+0x64>
 800d94e:	b189      	cbz	r1, 800d974 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d950:	4633      	mov	r3, r6
 800d952:	4622      	mov	r2, r4
 800d954:	f000 fd32 	bl	800e3bc <xQueueGenericSend>
 800d958:	2801      	cmp	r0, #1
 800d95a:	d004      	beq.n	800d966 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800d95c:	b134      	cbz	r4, 800d96c <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800d95e:	f06f 0001 	mvn.w	r0, #1
}
 800d962:	b002      	add	sp, #8
 800d964:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800d966:	2000      	movs	r0, #0
}
 800d968:	b002      	add	sp, #8
 800d96a:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800d96c:	f06f 0002 	mvn.w	r0, #2
}
 800d970:	b002      	add	sp, #8
 800d972:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800d974:	f06f 0003 	mvn.w	r0, #3
 800d978:	e7e6      	b.n	800d948 <osMessageQueuePut+0x38>
 800d97a:	bf00      	nop

0800d97c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800d97c:	b530      	push	{r4, r5, lr}
 800d97e:	461c      	mov	r4, r3
 800d980:	b083      	sub	sp, #12
 800d982:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d986:	b1bb      	cbz	r3, 800d9b8 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d988:	b348      	cbz	r0, 800d9de <osMessageQueueGet+0x62>
 800d98a:	b341      	cbz	r1, 800d9de <osMessageQueueGet+0x62>
 800d98c:	bb3c      	cbnz	r4, 800d9de <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d98e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d990:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d992:	f001 fa57 	bl	800ee44 <xQueueReceiveFromISR>
 800d996:	2801      	cmp	r0, #1
 800d998:	d11d      	bne.n	800d9d6 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d99a:	9b01      	ldr	r3, [sp, #4]
 800d99c:	b1c3      	cbz	r3, 800d9d0 <osMessageQueueGet+0x54>
 800d99e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d9a2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d9a6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d9aa:	f3bf 8f4f 	dsb	sy
 800d9ae:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d9b2:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800d9b4:	b003      	add	sp, #12
 800d9b6:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d9b8:	b188      	cbz	r0, 800d9de <osMessageQueueGet+0x62>
 800d9ba:	b181      	cbz	r1, 800d9de <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d9bc:	4622      	mov	r2, r4
 800d9be:	f000 ff39 	bl	800e834 <xQueueReceive>
 800d9c2:	2801      	cmp	r0, #1
 800d9c4:	d004      	beq.n	800d9d0 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800d9c6:	b134      	cbz	r4, 800d9d6 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800d9c8:	f06f 0001 	mvn.w	r0, #1
}
 800d9cc:	b003      	add	sp, #12
 800d9ce:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800d9d0:	2000      	movs	r0, #0
}
 800d9d2:	b003      	add	sp, #12
 800d9d4:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800d9d6:	f06f 0002 	mvn.w	r0, #2
}
 800d9da:	b003      	add	sp, #12
 800d9dc:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800d9de:	f06f 0003 	mvn.w	r0, #3
 800d9e2:	e7e7      	b.n	800d9b4 <osMessageQueueGet+0x38>

0800d9e4 <osMessageQueueGetCount>:
 800d9e4:	b130      	cbz	r0, 800d9f4 <osMessageQueueGetCount+0x10>
 800d9e6:	f3ef 8305 	mrs	r3, IPSR
 800d9ea:	b10b      	cbz	r3, 800d9f0 <osMessageQueueGetCount+0xc>
 800d9ec:	f001 ba9e 	b.w	800ef2c <uxQueueMessagesWaitingFromISR>
 800d9f0:	f001 ba86 	b.w	800ef00 <uxQueueMessagesWaiting>
 800d9f4:	4770      	bx	lr
 800d9f6:	bf00      	nop

0800d9f8 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800d9f8:	4b04      	ldr	r3, [pc, #16]	; (800da0c <vApplicationGetIdleTaskMemory+0x14>)
 800d9fa:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800d9fc:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d9fe:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800da00:	4c03      	ldr	r4, [pc, #12]	; (800da10 <vApplicationGetIdleTaskMemory+0x18>)
 800da02:	600c      	str	r4, [r1, #0]
}
 800da04:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800da08:	6013      	str	r3, [r2, #0]
}
 800da0a:	4770      	bx	lr
 800da0c:	200021b8 	.word	0x200021b8
 800da10:	20001fb8 	.word	0x20001fb8

0800da14 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800da14:	4b05      	ldr	r3, [pc, #20]	; (800da2c <vApplicationGetTimerTaskMemory+0x18>)
 800da16:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800da18:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800da1a:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800da1e:	4c04      	ldr	r4, [pc, #16]	; (800da30 <vApplicationGetTimerTaskMemory+0x1c>)
 800da20:	600c      	str	r4, [r1, #0]
}
 800da22:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800da26:	6013      	str	r3, [r2, #0]
}
 800da28:	4770      	bx	lr
 800da2a:	bf00      	nop
 800da2c:	20002668 	.word	0x20002668
 800da30:	20002268 	.word	0x20002268

0800da34 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800da34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800da38:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800da3a:	f001 ff41 	bl	800f8c0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800da3e:	4a54      	ldr	r2, [pc, #336]	; (800db90 <pvPortMalloc+0x15c>)
 800da40:	6816      	ldr	r6, [r2, #0]
 800da42:	2e00      	cmp	r6, #0
 800da44:	d06e      	beq.n	800db24 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800da46:	4b53      	ldr	r3, [pc, #332]	; (800db94 <pvPortMalloc+0x160>)
 800da48:	681f      	ldr	r7, [r3, #0]
 800da4a:	423d      	tst	r5, r7
 800da4c:	d12e      	bne.n	800daac <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800da4e:	b36d      	cbz	r5, 800daac <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800da50:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800da54:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800da56:	bf1c      	itt	ne
 800da58:	f024 0407 	bicne.w	r4, r4, #7
 800da5c:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800da5e:	b32c      	cbz	r4, 800daac <pvPortMalloc+0x78>
 800da60:	f8df c144 	ldr.w	ip, [pc, #324]	; 800dba8 <pvPortMalloc+0x174>
 800da64:	f8dc 5000 	ldr.w	r5, [ip]
 800da68:	42a5      	cmp	r5, r4
 800da6a:	d31f      	bcc.n	800daac <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800da6c:	484a      	ldr	r0, [pc, #296]	; (800db98 <pvPortMalloc+0x164>)
 800da6e:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800da70:	e003      	b.n	800da7a <pvPortMalloc+0x46>
 800da72:	681a      	ldr	r2, [r3, #0]
 800da74:	b122      	cbz	r2, 800da80 <pvPortMalloc+0x4c>
 800da76:	4618      	mov	r0, r3
 800da78:	4613      	mov	r3, r2
 800da7a:	6859      	ldr	r1, [r3, #4]
 800da7c:	42a1      	cmp	r1, r4
 800da7e:	d3f8      	bcc.n	800da72 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800da80:	42b3      	cmp	r3, r6
 800da82:	d013      	beq.n	800daac <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800da84:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800da86:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800da88:	f858 eb08 	ldr.w	lr, [r8], #8
 800da8c:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800da90:	2a10      	cmp	r2, #16
 800da92:	d929      	bls.n	800dae8 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800da94:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800da96:	0748      	lsls	r0, r1, #29
 800da98:	d00f      	beq.n	800daba <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800da9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da9e:	f383 8811 	msr	BASEPRI, r3
 800daa2:	f3bf 8f6f 	isb	sy
 800daa6:	f3bf 8f4f 	dsb	sy
 800daaa:	e7fe      	b.n	800daaa <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800daac:	f001 ff10 	bl	800f8d0 <xTaskResumeAll>
 800dab0:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800dab4:	4640      	mov	r0, r8
 800dab6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800daba:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dabc:	4a36      	ldr	r2, [pc, #216]	; (800db98 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800dabe:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dac0:	4614      	mov	r4, r2
 800dac2:	6812      	ldr	r2, [r2, #0]
 800dac4:	4291      	cmp	r1, r2
 800dac6:	d8fb      	bhi.n	800dac0 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800dac8:	6860      	ldr	r0, [r4, #4]
 800daca:	eb04 0e00 	add.w	lr, r4, r0
 800dace:	4571      	cmp	r1, lr
 800dad0:	d04b      	beq.n	800db6a <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dad2:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dad6:	eb01 000e 	add.w	r0, r1, lr
 800dada:	4282      	cmp	r2, r0
 800dadc:	d051      	beq.n	800db82 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800dade:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dae0:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800dae2:	bf18      	it	ne
 800dae4:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800dae6:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800dae8:	4a2c      	ldr	r2, [pc, #176]	; (800db9c <pvPortMalloc+0x168>)
 800daea:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800daec:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800daee:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800daf0:	bf38      	it	cc
 800daf2:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800daf4:	4a2a      	ldr	r2, [pc, #168]	; (800dba0 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800daf6:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800dafa:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800dafc:	2000      	movs	r0, #0
 800dafe:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800db02:	6813      	ldr	r3, [r2, #0]
 800db04:	3301      	adds	r3, #1
 800db06:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800db08:	f001 fee2 	bl	800f8d0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800db0c:	f018 0f07 	tst.w	r8, #7
 800db10:	d0d0      	beq.n	800dab4 <pvPortMalloc+0x80>
 800db12:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db16:	f383 8811 	msr	BASEPRI, r3
 800db1a:	f3bf 8f6f 	isb	sy
 800db1e:	f3bf 8f4f 	dsb	sy
 800db22:	e7fe      	b.n	800db22 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800db24:	4b1f      	ldr	r3, [pc, #124]	; (800dba4 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800db26:	075e      	lsls	r6, r3, #29
 800db28:	d118      	bne.n	800db5c <pvPortMalloc+0x128>
 800db2a:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800db2e:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800db30:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800db32:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800db36:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800db38:	4a18      	ldr	r2, [pc, #96]	; (800db9c <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800db3a:	4817      	ldr	r0, [pc, #92]	; (800db98 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800db3c:	4c15      	ldr	r4, [pc, #84]	; (800db94 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800db3e:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800db40:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800db42:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800db44:	4a18      	ldr	r2, [pc, #96]	; (800dba8 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800db46:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800db4a:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800db4c:	2200      	movs	r2, #0
 800db4e:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800db50:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800db52:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800db56:	e9c1 6300 	strd	r6, r3, [r1]
}
 800db5a:	e776      	b.n	800da4a <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800db5c:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800db5e:	f021 0107 	bic.w	r1, r1, #7
 800db62:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800db66:	460b      	mov	r3, r1
 800db68:	e7e2      	b.n	800db30 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800db6a:	6849      	ldr	r1, [r1, #4]
 800db6c:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800db70:	eb04 010e 	add.w	r1, r4, lr
 800db74:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800db76:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800db7a:	d001      	beq.n	800db80 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800db7c:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800db7e:	e7b2      	b.n	800dae6 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800db80:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800db82:	42b2      	cmp	r2, r6
 800db84:	d0ab      	beq.n	800dade <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800db86:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800db88:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800db8a:	4470      	add	r0, lr
 800db8c:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800db8e:	e7a6      	b.n	800dade <pvPortMalloc+0xaa>
 800db90:	20002714 	.word	0x20002714
 800db94:	20012718 	.word	0x20012718
 800db98:	2001272c 	.word	0x2001272c
 800db9c:	20012720 	.word	0x20012720
 800dba0:	20012724 	.word	0x20012724
 800dba4:	20002718 	.word	0x20002718
 800dba8:	2001271c 	.word	0x2001271c

0800dbac <vPortFree>:
	if( pv != NULL )
 800dbac:	b1d0      	cbz	r0, 800dbe4 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800dbae:	4a2c      	ldr	r2, [pc, #176]	; (800dc60 <vPortFree+0xb4>)
 800dbb0:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800dbb4:	6812      	ldr	r2, [r2, #0]
 800dbb6:	4213      	tst	r3, r2
 800dbb8:	d00b      	beq.n	800dbd2 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800dbba:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800dbbe:	b191      	cbz	r1, 800dbe6 <vPortFree+0x3a>
 800dbc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbc4:	f383 8811 	msr	BASEPRI, r3
 800dbc8:	f3bf 8f6f 	isb	sy
 800dbcc:	f3bf 8f4f 	dsb	sy
 800dbd0:	e7fe      	b.n	800dbd0 <vPortFree+0x24>
 800dbd2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbd6:	f383 8811 	msr	BASEPRI, r3
 800dbda:	f3bf 8f6f 	isb	sy
 800dbde:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800dbe2:	e7fe      	b.n	800dbe2 <vPortFree+0x36>
 800dbe4:	4770      	bx	lr
{
 800dbe6:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800dbe8:	ea23 0302 	bic.w	r3, r3, r2
{
 800dbec:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800dbee:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dbf2:	4c1c      	ldr	r4, [pc, #112]	; (800dc64 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800dbf4:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800dbf6:	f001 fe63 	bl	800f8c0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dbfa:	9801      	ldr	r0, [sp, #4]
 800dbfc:	6822      	ldr	r2, [r4, #0]
 800dbfe:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dc02:	4b19      	ldr	r3, [pc, #100]	; (800dc68 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dc04:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800dc06:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dc08:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dc0a:	461a      	mov	r2, r3
 800dc0c:	681b      	ldr	r3, [r3, #0]
 800dc0e:	4298      	cmp	r0, r3
 800dc10:	d8fb      	bhi.n	800dc0a <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800dc12:	6854      	ldr	r4, [r2, #4]
 800dc14:	eb02 0e04 	add.w	lr, r2, r4
 800dc18:	4570      	cmp	r0, lr
 800dc1a:	d010      	beq.n	800dc3e <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dc1c:	eb00 0c01 	add.w	ip, r0, r1
 800dc20:	4563      	cmp	r3, ip
 800dc22:	d014      	beq.n	800dc4e <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800dc24:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dc26:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800dc28:	bf18      	it	ne
 800dc2a:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800dc2c:	4a0f      	ldr	r2, [pc, #60]	; (800dc6c <vPortFree+0xc0>)
 800dc2e:	6813      	ldr	r3, [r2, #0]
 800dc30:	3301      	adds	r3, #1
 800dc32:	6013      	str	r3, [r2, #0]
}
 800dc34:	b002      	add	sp, #8
 800dc36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800dc3a:	f001 be49 	b.w	800f8d0 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dc3e:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dc40:	1850      	adds	r0, r2, r1
 800dc42:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dc44:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dc46:	d001      	beq.n	800dc4c <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dc48:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800dc4a:	e7ef      	b.n	800dc2c <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dc4c:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800dc4e:	4c08      	ldr	r4, [pc, #32]	; (800dc70 <vPortFree+0xc4>)
 800dc50:	6824      	ldr	r4, [r4, #0]
 800dc52:	42a3      	cmp	r3, r4
 800dc54:	d0e6      	beq.n	800dc24 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dc56:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800dc5a:	4421      	add	r1, r4
 800dc5c:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dc5e:	e7e1      	b.n	800dc24 <vPortFree+0x78>
 800dc60:	20012718 	.word	0x20012718
 800dc64:	2001271c 	.word	0x2001271c
 800dc68:	2001272c 	.word	0x2001272c
 800dc6c:	20012728 	.word	0x20012728
 800dc70:	20002714 	.word	0x20002714

0800dc74 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800dc74:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800dc78:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800dc7c:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800dc7e:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800dc82:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800dc86:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800dc88:	4770      	bx	lr
 800dc8a:	bf00      	nop

0800dc8c <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800dc8c:	2300      	movs	r3, #0
 800dc8e:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800dc90:	4770      	bx	lr
 800dc92:	bf00      	nop

0800dc94 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800dc94:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800dc96:	689a      	ldr	r2, [r3, #8]
 800dc98:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800dc9a:	6802      	ldr	r2, [r0, #0]
{
 800dc9c:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800dc9e:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800dca0:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800dca2:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800dca4:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800dca6:	6099      	str	r1, [r3, #8]
}
 800dca8:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800dcac:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800dcae:	6002      	str	r2, [r0, #0]
}
 800dcb0:	4770      	bx	lr
 800dcb2:	bf00      	nop

0800dcb4 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800dcb4:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800dcb6:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800dcb8:	1c6b      	adds	r3, r5, #1
 800dcba:	d010      	beq.n	800dcde <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800dcbc:	f100 0308 	add.w	r3, r0, #8
 800dcc0:	461c      	mov	r4, r3
 800dcc2:	685b      	ldr	r3, [r3, #4]
 800dcc4:	681a      	ldr	r2, [r3, #0]
 800dcc6:	42aa      	cmp	r2, r5
 800dcc8:	d9fa      	bls.n	800dcc0 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800dcca:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800dccc:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800dcce:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800dcd0:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800dcd2:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800dcd4:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800dcd6:	6108      	str	r0, [r1, #16]
}
 800dcd8:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800dcda:	6002      	str	r2, [r0, #0]
}
 800dcdc:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800dcde:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800dce0:	6863      	ldr	r3, [r4, #4]
 800dce2:	e7f2      	b.n	800dcca <vListInsert+0x16>

0800dce4 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800dce4:	6903      	ldr	r3, [r0, #16]
{
 800dce6:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800dce8:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800dcec:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800dcee:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800dcf0:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800dcf2:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800dcf4:	bf08      	it	eq
 800dcf6:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800dcf8:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800dcfa:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800dcfe:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800dd00:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800dd02:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800dd04:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800dd06:	6818      	ldr	r0, [r3, #0]
}
 800dd08:	4770      	bx	lr
 800dd0a:	bf00      	nop

0800dd0c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800dd0c:	4808      	ldr	r0, [pc, #32]	; (800dd30 <prvPortStartFirstTask+0x24>)
 800dd0e:	6800      	ldr	r0, [r0, #0]
 800dd10:	6800      	ldr	r0, [r0, #0]
 800dd12:	f380 8808 	msr	MSP, r0
 800dd16:	f04f 0000 	mov.w	r0, #0
 800dd1a:	f380 8814 	msr	CONTROL, r0
 800dd1e:	b662      	cpsie	i
 800dd20:	b661      	cpsie	f
 800dd22:	f3bf 8f4f 	dsb	sy
 800dd26:	f3bf 8f6f 	isb	sy
 800dd2a:	df00      	svc	0
 800dd2c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800dd2e:	0000      	.short	0x0000
 800dd30:	e000ed08 	.word	0xe000ed08

0800dd34 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800dd34:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800dd44 <vPortEnableVFP+0x10>
 800dd38:	6801      	ldr	r1, [r0, #0]
 800dd3a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800dd3e:	6001      	str	r1, [r0, #0]
 800dd40:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800dd42:	0000      	.short	0x0000
 800dd44:	e000ed88 	.word	0xe000ed88

0800dd48 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800dd48:	4b0e      	ldr	r3, [pc, #56]	; (800dd84 <prvTaskExitError+0x3c>)
 800dd4a:	681b      	ldr	r3, [r3, #0]
{
 800dd4c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800dd4e:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800dd50:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800dd52:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800dd54:	d008      	beq.n	800dd68 <prvTaskExitError+0x20>
 800dd56:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd5a:	f383 8811 	msr	BASEPRI, r3
 800dd5e:	f3bf 8f6f 	isb	sy
 800dd62:	f3bf 8f4f 	dsb	sy
 800dd66:	e7fe      	b.n	800dd66 <prvTaskExitError+0x1e>
 800dd68:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd6c:	f383 8811 	msr	BASEPRI, r3
 800dd70:	f3bf 8f6f 	isb	sy
 800dd74:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800dd78:	9b01      	ldr	r3, [sp, #4]
 800dd7a:	2b00      	cmp	r3, #0
 800dd7c:	d0fc      	beq.n	800dd78 <prvTaskExitError+0x30>
}
 800dd7e:	b002      	add	sp, #8
 800dd80:	4770      	bx	lr
 800dd82:	bf00      	nop
 800dd84:	20000084 	.word	0x20000084

0800dd88 <pxPortInitialiseStack>:
{
 800dd88:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800dd8a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800dd8e:	4c07      	ldr	r4, [pc, #28]	; (800ddac <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800dd90:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800dd94:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800dd98:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800dd9c:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800dda0:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800dda4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800dda8:	3844      	subs	r0, #68	; 0x44
 800ddaa:	4770      	bx	lr
 800ddac:	0800dd49 	.word	0x0800dd49

0800ddb0 <SVC_Handler>:
	__asm volatile (
 800ddb0:	4b07      	ldr	r3, [pc, #28]	; (800ddd0 <pxCurrentTCBConst2>)
 800ddb2:	6819      	ldr	r1, [r3, #0]
 800ddb4:	6808      	ldr	r0, [r1, #0]
 800ddb6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ddba:	f380 8809 	msr	PSP, r0
 800ddbe:	f3bf 8f6f 	isb	sy
 800ddc2:	f04f 0000 	mov.w	r0, #0
 800ddc6:	f380 8811 	msr	BASEPRI, r0
 800ddca:	4770      	bx	lr
 800ddcc:	f3af 8000 	nop.w

0800ddd0 <pxCurrentTCBConst2>:
 800ddd0:	20012780 	.word	0x20012780

0800ddd4 <vPortEnterCritical>:
 800ddd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ddd8:	f383 8811 	msr	BASEPRI, r3
 800dddc:	f3bf 8f6f 	isb	sy
 800dde0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800dde4:	4a0b      	ldr	r2, [pc, #44]	; (800de14 <vPortEnterCritical+0x40>)
 800dde6:	6813      	ldr	r3, [r2, #0]
 800dde8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800ddea:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800ddec:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800ddee:	d000      	beq.n	800ddf2 <vPortEnterCritical+0x1e>
}
 800ddf0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800ddf2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ddf6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800ddfa:	b2db      	uxtb	r3, r3
 800ddfc:	2b00      	cmp	r3, #0
 800ddfe:	d0f7      	beq.n	800ddf0 <vPortEnterCritical+0x1c>
 800de00:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de04:	f383 8811 	msr	BASEPRI, r3
 800de08:	f3bf 8f6f 	isb	sy
 800de0c:	f3bf 8f4f 	dsb	sy
 800de10:	e7fe      	b.n	800de10 <vPortEnterCritical+0x3c>
 800de12:	bf00      	nop
 800de14:	20000084 	.word	0x20000084

0800de18 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800de18:	4a08      	ldr	r2, [pc, #32]	; (800de3c <vPortExitCritical+0x24>)
 800de1a:	6813      	ldr	r3, [r2, #0]
 800de1c:	b943      	cbnz	r3, 800de30 <vPortExitCritical+0x18>
 800de1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de22:	f383 8811 	msr	BASEPRI, r3
 800de26:	f3bf 8f6f 	isb	sy
 800de2a:	f3bf 8f4f 	dsb	sy
 800de2e:	e7fe      	b.n	800de2e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800de30:	3b01      	subs	r3, #1
 800de32:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800de34:	b90b      	cbnz	r3, 800de3a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800de36:	f383 8811 	msr	BASEPRI, r3
}
 800de3a:	4770      	bx	lr
 800de3c:	20000084 	.word	0x20000084

0800de40 <PendSV_Handler>:
	__asm volatile
 800de40:	f3ef 8009 	mrs	r0, PSP
 800de44:	f3bf 8f6f 	isb	sy
 800de48:	4b15      	ldr	r3, [pc, #84]	; (800dea0 <pxCurrentTCBConst>)
 800de4a:	681a      	ldr	r2, [r3, #0]
 800de4c:	f01e 0f10 	tst.w	lr, #16
 800de50:	bf08      	it	eq
 800de52:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800de56:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de5a:	6010      	str	r0, [r2, #0]
 800de5c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800de60:	f04f 0050 	mov.w	r0, #80	; 0x50
 800de64:	f380 8811 	msr	BASEPRI, r0
 800de68:	f3bf 8f4f 	dsb	sy
 800de6c:	f3bf 8f6f 	isb	sy
 800de70:	f001 fd54 	bl	800f91c <vTaskSwitchContext>
 800de74:	f04f 0000 	mov.w	r0, #0
 800de78:	f380 8811 	msr	BASEPRI, r0
 800de7c:	bc09      	pop	{r0, r3}
 800de7e:	6819      	ldr	r1, [r3, #0]
 800de80:	6808      	ldr	r0, [r1, #0]
 800de82:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de86:	f01e 0f10 	tst.w	lr, #16
 800de8a:	bf08      	it	eq
 800de8c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800de90:	f380 8809 	msr	PSP, r0
 800de94:	f3bf 8f6f 	isb	sy
 800de98:	4770      	bx	lr
 800de9a:	bf00      	nop
 800de9c:	f3af 8000 	nop.w

0800dea0 <pxCurrentTCBConst>:
 800dea0:	20012780 	.word	0x20012780

0800dea4 <xPortSysTickHandler>:
{
 800dea4:	b508      	push	{r3, lr}
	__asm volatile
 800dea6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800deaa:	f383 8811 	msr	BASEPRI, r3
 800deae:	f3bf 8f6f 	isb	sy
 800deb2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800deb6:	f001 fd21 	bl	800f8fc <xTaskIncrementTick>
 800deba:	b128      	cbz	r0, 800dec8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800debc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dec0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dec4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800dec8:	2300      	movs	r3, #0
 800deca:	f383 8811 	msr	BASEPRI, r3
}
 800dece:	bd08      	pop	{r3, pc}

0800ded0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800ded0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800ded4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800ded6:	4906      	ldr	r1, [pc, #24]	; (800def0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800ded8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800deda:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800dedc:	680b      	ldr	r3, [r1, #0]
 800dede:	4905      	ldr	r1, [pc, #20]	; (800def4 <vPortSetupTimerInterrupt+0x24>)
 800dee0:	fba1 1303 	umull	r1, r3, r1, r3
 800dee4:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800dee6:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800dee8:	3b01      	subs	r3, #1
 800deea:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800deec:	6110      	str	r0, [r2, #16]
}
 800deee:	4770      	bx	lr
 800def0:	20000078 	.word	0x20000078
 800def4:	10624dd3 	.word	0x10624dd3

0800def8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800def8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800defc:	4a49      	ldr	r2, [pc, #292]	; (800e024 <xPortStartScheduler+0x12c>)
 800defe:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800df02:	4291      	cmp	r1, r2
 800df04:	d043      	beq.n	800df8e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800df06:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800df0a:	4b47      	ldr	r3, [pc, #284]	; (800e028 <xPortStartScheduler+0x130>)
 800df0c:	429a      	cmp	r2, r3
 800df0e:	d035      	beq.n	800df7c <xPortStartScheduler+0x84>
{
 800df10:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800df12:	4b46      	ldr	r3, [pc, #280]	; (800e02c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800df14:	4846      	ldr	r0, [pc, #280]	; (800e030 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800df16:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800df18:	4c46      	ldr	r4, [pc, #280]	; (800e034 <xPortStartScheduler+0x13c>)
{
 800df1a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800df1c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800df1e:	b2d2      	uxtb	r2, r2
 800df20:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800df22:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800df24:	781b      	ldrb	r3, [r3, #0]
 800df26:	b2db      	uxtb	r3, r3
 800df28:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800df2c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800df30:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800df34:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800df38:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800df3a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800df3c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800df3e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800df40:	bf48      	it	mi
 800df42:	2206      	movmi	r2, #6
 800df44:	d511      	bpl.n	800df6a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800df46:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800df4a:	005b      	lsls	r3, r3, #1
 800df4c:	b2db      	uxtb	r3, r3
 800df4e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800df52:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800df56:	0609      	lsls	r1, r1, #24
 800df58:	4610      	mov	r0, r2
 800df5a:	f102 32ff 	add.w	r2, r2, #4294967295
 800df5e:	d4f2      	bmi.n	800df46 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800df60:	2803      	cmp	r0, #3
 800df62:	6020      	str	r0, [r4, #0]
 800df64:	f88d 3007 	strb.w	r3, [sp, #7]
 800df68:	d01a      	beq.n	800dfa0 <xPortStartScheduler+0xa8>
	__asm volatile
 800df6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df6e:	f383 8811 	msr	BASEPRI, r3
 800df72:	f3bf 8f6f 	isb	sy
 800df76:	f3bf 8f4f 	dsb	sy
 800df7a:	e7fe      	b.n	800df7a <xPortStartScheduler+0x82>
 800df7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df80:	f383 8811 	msr	BASEPRI, r3
 800df84:	f3bf 8f6f 	isb	sy
 800df88:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800df8c:	e7fe      	b.n	800df8c <xPortStartScheduler+0x94>
 800df8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df92:	f383 8811 	msr	BASEPRI, r3
 800df96:	f3bf 8f6f 	isb	sy
 800df9a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800df9e:	e7fe      	b.n	800df9e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800dfa0:	9b02      	ldr	r3, [sp, #8]
 800dfa2:	4a22      	ldr	r2, [pc, #136]	; (800e02c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800dfa4:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800dfa8:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800dfac:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800dfae:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800dfb0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800dfb2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800dfb6:	4c20      	ldr	r4, [pc, #128]	; (800e038 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800dfb8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800dfbc:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800dfc0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800dfc4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800dfc8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800dfcc:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800dfce:	f7ff ff7f 	bl	800ded0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800dfd2:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800dfd4:	f7ff feae 	bl	800dd34 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800dfd8:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800dfdc:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800dfe0:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800dfe4:	f7ff fe92 	bl	800dd0c <prvPortStartFirstTask>
	vTaskSwitchContext();
 800dfe8:	f001 fc98 	bl	800f91c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800dfec:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800dfee:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800dff0:	3301      	adds	r3, #1
 800dff2:	d008      	beq.n	800e006 <xPortStartScheduler+0x10e>
 800dff4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dff8:	f383 8811 	msr	BASEPRI, r3
 800dffc:	f3bf 8f6f 	isb	sy
 800e000:	f3bf 8f4f 	dsb	sy
 800e004:	e7fe      	b.n	800e004 <xPortStartScheduler+0x10c>
 800e006:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e00a:	f383 8811 	msr	BASEPRI, r3
 800e00e:	f3bf 8f6f 	isb	sy
 800e012:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800e016:	9b03      	ldr	r3, [sp, #12]
 800e018:	2b00      	cmp	r3, #0
 800e01a:	d0fc      	beq.n	800e016 <xPortStartScheduler+0x11e>
}
 800e01c:	2000      	movs	r0, #0
 800e01e:	b004      	add	sp, #16
 800e020:	bd70      	pop	{r4, r5, r6, pc}
 800e022:	bf00      	nop
 800e024:	410fc271 	.word	0x410fc271
 800e028:	410fc270 	.word	0x410fc270
 800e02c:	e000e400 	.word	0xe000e400
 800e030:	20012734 	.word	0x20012734
 800e034:	20012738 	.word	0x20012738
 800e038:	20000084 	.word	0x20000084

0800e03c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800e03c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800e040:	2b0f      	cmp	r3, #15
 800e042:	d90e      	bls.n	800e062 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e044:	4911      	ldr	r1, [pc, #68]	; (800e08c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e046:	4a12      	ldr	r2, [pc, #72]	; (800e090 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e048:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e04a:	7812      	ldrb	r2, [r2, #0]
 800e04c:	429a      	cmp	r2, r3
 800e04e:	d908      	bls.n	800e062 <vPortValidateInterruptPriority+0x26>
 800e050:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e054:	f383 8811 	msr	BASEPRI, r3
 800e058:	f3bf 8f6f 	isb	sy
 800e05c:	f3bf 8f4f 	dsb	sy
 800e060:	e7fe      	b.n	800e060 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800e062:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e066:	4a0b      	ldr	r2, [pc, #44]	; (800e094 <vPortValidateInterruptPriority+0x58>)
 800e068:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800e06c:	6812      	ldr	r2, [r2, #0]
 800e06e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800e072:	4293      	cmp	r3, r2
 800e074:	d908      	bls.n	800e088 <vPortValidateInterruptPriority+0x4c>
 800e076:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e07a:	f383 8811 	msr	BASEPRI, r3
 800e07e:	f3bf 8f6f 	isb	sy
 800e082:	f3bf 8f4f 	dsb	sy
 800e086:	e7fe      	b.n	800e086 <vPortValidateInterruptPriority+0x4a>
	}
 800e088:	4770      	bx	lr
 800e08a:	bf00      	nop
 800e08c:	e000e3f0 	.word	0xe000e3f0
 800e090:	20012734 	.word	0x20012734
 800e094:	20012738 	.word	0x20012738

0800e098 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800e098:	b570      	push	{r4, r5, r6, lr}
 800e09a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e09c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e09e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e0a0:	b920      	cbnz	r0, 800e0ac <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e0a2:	6825      	ldr	r5, [r4, #0]
 800e0a4:	b34d      	cbz	r5, 800e0fa <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e0a6:	3601      	adds	r6, #1
 800e0a8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800e0aa:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800e0ac:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e0ae:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800e0b0:	b97d      	cbnz	r5, 800e0d2 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e0b2:	6860      	ldr	r0, [r4, #4]
 800e0b4:	f01c ffbd 	bl	802b032 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e0b8:	6863      	ldr	r3, [r4, #4]
 800e0ba:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e0bc:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e0be:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e0c0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e0c2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800e0c4:	bf24      	itt	cs
 800e0c6:	6823      	ldrcs	r3, [r4, #0]
 800e0c8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e0ca:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e0cc:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e0ce:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e0d0:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800e0d2:	68e0      	ldr	r0, [r4, #12]
 800e0d4:	f01c ffad 	bl	802b032 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e0d8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e0da:	68e3      	ldr	r3, [r4, #12]
 800e0dc:	4251      	negs	r1, r2
 800e0de:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e0e0:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e0e2:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e0e4:	4293      	cmp	r3, r2
 800e0e6:	d202      	bcs.n	800e0ee <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800e0e8:	68a3      	ldr	r3, [r4, #8]
 800e0ea:	440b      	add	r3, r1
 800e0ec:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800e0ee:	2d02      	cmp	r5, #2
 800e0f0:	d008      	beq.n	800e104 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e0f2:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e0f4:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e0f6:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e0f8:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e0fa:	68a0      	ldr	r0, [r4, #8]
 800e0fc:	f001 fde0 	bl	800fcc0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800e100:	60a5      	str	r5, [r4, #8]
 800e102:	e7d0      	b.n	800e0a6 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e104:	2e01      	cmp	r6, #1
 800e106:	bf38      	it	cc
 800e108:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800e10a:	2000      	movs	r0, #0
 800e10c:	e7cc      	b.n	800e0a8 <prvCopyDataToQueue+0x10>
 800e10e:	bf00      	nop

0800e110 <xQueueGenericCreateStatic>:
	{
 800e110:	b530      	push	{r4, r5, lr}
 800e112:	b083      	sub	sp, #12
 800e114:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e118:	b940      	cbnz	r0, 800e12c <xQueueGenericCreateStatic+0x1c>
 800e11a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e11e:	f383 8811 	msr	BASEPRI, r3
 800e122:	f3bf 8f6f 	isb	sy
 800e126:	f3bf 8f4f 	dsb	sy
 800e12a:	e7fe      	b.n	800e12a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800e12c:	461d      	mov	r5, r3
 800e12e:	b17b      	cbz	r3, 800e150 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e130:	b302      	cbz	r2, 800e174 <xQueueGenericCreateStatic+0x64>
 800e132:	b1b1      	cbz	r1, 800e162 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e134:	2350      	movs	r3, #80	; 0x50
 800e136:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e138:	9b01      	ldr	r3, [sp, #4]
 800e13a:	2b50      	cmp	r3, #80	; 0x50
 800e13c:	d023      	beq.n	800e186 <xQueueGenericCreateStatic+0x76>
 800e13e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e142:	f383 8811 	msr	BASEPRI, r3
 800e146:	f3bf 8f6f 	isb	sy
 800e14a:	f3bf 8f4f 	dsb	sy
 800e14e:	e7fe      	b.n	800e14e <xQueueGenericCreateStatic+0x3e>
 800e150:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e154:	f383 8811 	msr	BASEPRI, r3
 800e158:	f3bf 8f6f 	isb	sy
 800e15c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e160:	e7fe      	b.n	800e160 <xQueueGenericCreateStatic+0x50>
 800e162:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e166:	f383 8811 	msr	BASEPRI, r3
 800e16a:	f3bf 8f6f 	isb	sy
 800e16e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e172:	e7fe      	b.n	800e172 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e174:	bb89      	cbnz	r1, 800e1da <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e176:	2250      	movs	r2, #80	; 0x50
 800e178:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e17a:	9a01      	ldr	r2, [sp, #4]
 800e17c:	2a50      	cmp	r2, #80	; 0x50
 800e17e:	d1de      	bne.n	800e13e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e180:	9a01      	ldr	r2, [sp, #4]
 800e182:	462a      	mov	r2, r5
 800e184:	e000      	b.n	800e188 <xQueueGenericCreateStatic+0x78>
 800e186:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e188:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e18a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800e18c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e190:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800e194:	f7ff fe1e 	bl	800ddd4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e198:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800e19c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e19e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e1a0:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e1a4:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e1a6:	4401      	add	r1, r0
 800e1a8:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e1aa:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e1ac:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e1ae:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e1b0:	21ff      	movs	r1, #255	; 0xff
 800e1b2:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e1b6:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e1b8:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e1bc:	f105 0010 	add.w	r0, r5, #16
 800e1c0:	f7ff fd58 	bl	800dc74 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e1c4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e1c8:	f7ff fd54 	bl	800dc74 <vListInitialise>
	taskEXIT_CRITICAL();
 800e1cc:	f7ff fe24 	bl	800de18 <vPortExitCritical>
	}
 800e1d0:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e1d2:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800e1d6:	b003      	add	sp, #12
 800e1d8:	bd30      	pop	{r4, r5, pc}
 800e1da:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1de:	f383 8811 	msr	BASEPRI, r3
 800e1e2:	f3bf 8f6f 	isb	sy
 800e1e6:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e1ea:	e7fe      	b.n	800e1ea <xQueueGenericCreateStatic+0xda>

0800e1ec <xQueueGenericCreate>:
	{
 800e1ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e1ee:	b940      	cbnz	r0, 800e202 <xQueueGenericCreate+0x16>
 800e1f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1f4:	f383 8811 	msr	BASEPRI, r3
 800e1f8:	f3bf 8f6f 	isb	sy
 800e1fc:	f3bf 8f4f 	dsb	sy
 800e200:	e7fe      	b.n	800e200 <xQueueGenericCreate+0x14>
 800e202:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e204:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e208:	3050      	adds	r0, #80	; 0x50
 800e20a:	460e      	mov	r6, r1
 800e20c:	4617      	mov	r7, r2
 800e20e:	f7ff fc11 	bl	800da34 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e212:	4604      	mov	r4, r0
 800e214:	b340      	cbz	r0, 800e268 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e216:	2300      	movs	r3, #0
 800e218:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e21c:	b336      	cbz	r6, 800e26c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e21e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800e222:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e224:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800e228:	f7ff fdd4 	bl	800ddd4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e22c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800e230:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e232:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e234:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e238:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e23a:	440a      	add	r2, r1
 800e23c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e23e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e240:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e242:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e244:	22ff      	movs	r2, #255	; 0xff
 800e246:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e24a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e24c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e250:	f104 0010 	add.w	r0, r4, #16
 800e254:	f7ff fd0e 	bl	800dc74 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e258:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e25c:	f7ff fd0a 	bl	800dc74 <vListInitialise>
	taskEXIT_CRITICAL();
 800e260:	f7ff fdda 	bl	800de18 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e264:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800e268:	4620      	mov	r0, r4
 800e26a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e26c:	4603      	mov	r3, r0
 800e26e:	e7d8      	b.n	800e222 <xQueueGenericCreate+0x36>

0800e270 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800e270:	b940      	cbnz	r0, 800e284 <xQueueCreateCountingSemaphoreStatic+0x14>
 800e272:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e276:	f383 8811 	msr	BASEPRI, r3
 800e27a:	f3bf 8f6f 	isb	sy
 800e27e:	f3bf 8f4f 	dsb	sy
 800e282:	e7fe      	b.n	800e282 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e284:	4288      	cmp	r0, r1
 800e286:	d208      	bcs.n	800e29a <xQueueCreateCountingSemaphoreStatic+0x2a>
 800e288:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e28c:	f383 8811 	msr	BASEPRI, r3
 800e290:	f3bf 8f6f 	isb	sy
 800e294:	f3bf 8f4f 	dsb	sy
 800e298:	e7fe      	b.n	800e298 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800e29a:	b530      	push	{r4, r5, lr}
 800e29c:	4615      	mov	r5, r2
 800e29e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800e2a0:	2a00      	cmp	r2, #0
 800e2a2:	d03c      	beq.n	800e31e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e2a4:	2350      	movs	r3, #80	; 0x50
 800e2a6:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e2a8:	9b03      	ldr	r3, [sp, #12]
 800e2aa:	2b50      	cmp	r3, #80	; 0x50
 800e2ac:	d008      	beq.n	800e2c0 <xQueueCreateCountingSemaphoreStatic+0x50>
 800e2ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2b2:	f383 8811 	msr	BASEPRI, r3
 800e2b6:	f3bf 8f6f 	isb	sy
 800e2ba:	f3bf 8f4f 	dsb	sy
 800e2be:	e7fe      	b.n	800e2be <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800e2c0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e2c2:	2301      	movs	r3, #1
 800e2c4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e2c8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e2ca:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800e2ce:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e2d0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800e2d2:	f7ff fd7f 	bl	800ddd4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e2d6:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800e2da:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e2dc:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e2de:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e2e2:	1ac3      	subs	r3, r0, r3
 800e2e4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e2e6:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800e2e8:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800e2ec:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e2f0:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e2f2:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e2f4:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e2f8:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e2fa:	f105 0010 	add.w	r0, r5, #16
 800e2fe:	f7ff fcb9 	bl	800dc74 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e302:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e306:	f7ff fcb5 	bl	800dc74 <vListInitialise>
	taskEXIT_CRITICAL();
 800e30a:	f7ff fd85 	bl	800de18 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e30e:	9901      	ldr	r1, [sp, #4]
 800e310:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800e312:	2302      	movs	r3, #2
	}
 800e314:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e316:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800e31a:	b005      	add	sp, #20
 800e31c:	bd30      	pop	{r4, r5, pc}
 800e31e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e322:	f383 8811 	msr	BASEPRI, r3
 800e326:	f3bf 8f6f 	isb	sy
 800e32a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e32e:	e7fe      	b.n	800e32e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800e330 <xQueueCreateCountingSemaphore>:
	{
 800e330:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800e332:	b940      	cbnz	r0, 800e346 <xQueueCreateCountingSemaphore+0x16>
 800e334:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e338:	f383 8811 	msr	BASEPRI, r3
 800e33c:	f3bf 8f6f 	isb	sy
 800e340:	f3bf 8f4f 	dsb	sy
 800e344:	e7fe      	b.n	800e344 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e346:	4288      	cmp	r0, r1
 800e348:	460e      	mov	r6, r1
 800e34a:	4604      	mov	r4, r0
 800e34c:	d208      	bcs.n	800e360 <xQueueCreateCountingSemaphore+0x30>
 800e34e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e352:	f383 8811 	msr	BASEPRI, r3
 800e356:	f3bf 8f6f 	isb	sy
 800e35a:	f3bf 8f4f 	dsb	sy
 800e35e:	e7fe      	b.n	800e35e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e360:	2050      	movs	r0, #80	; 0x50
 800e362:	f7ff fb67 	bl	800da34 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e366:	4605      	mov	r5, r0
 800e368:	b330      	cbz	r0, 800e3b8 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e36a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800e36c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e370:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e374:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800e376:	f7ff fd2d 	bl	800ddd4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e37a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800e37e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e380:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e382:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e386:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e388:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e38a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e38c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800e38e:	22ff      	movs	r2, #255	; 0xff
 800e390:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e394:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e396:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e398:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e39c:	f105 0010 	add.w	r0, r5, #16
 800e3a0:	f7ff fc68 	bl	800dc74 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e3a4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e3a8:	f7ff fc64 	bl	800dc74 <vListInitialise>
	taskEXIT_CRITICAL();
 800e3ac:	f7ff fd34 	bl	800de18 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e3b0:	2302      	movs	r3, #2
 800e3b2:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e3b6:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800e3b8:	4628      	mov	r0, r5
 800e3ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e3bc <xQueueGenericSend>:
{
 800e3bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e3c0:	b085      	sub	sp, #20
 800e3c2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800e3c4:	2800      	cmp	r0, #0
 800e3c6:	f000 80a4 	beq.w	800e512 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e3ca:	4688      	mov	r8, r1
 800e3cc:	461f      	mov	r7, r3
 800e3ce:	4604      	mov	r4, r0
 800e3d0:	2900      	cmp	r1, #0
 800e3d2:	f000 8091 	beq.w	800e4f8 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e3d6:	2f02      	cmp	r7, #2
 800e3d8:	d10b      	bne.n	800e3f2 <xQueueGenericSend+0x36>
 800e3da:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e3dc:	2b01      	cmp	r3, #1
 800e3de:	d008      	beq.n	800e3f2 <xQueueGenericSend+0x36>
 800e3e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3e4:	f383 8811 	msr	BASEPRI, r3
 800e3e8:	f3bf 8f6f 	isb	sy
 800e3ec:	f3bf 8f4f 	dsb	sy
 800e3f0:	e7fe      	b.n	800e3f0 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e3f2:	f001 fc0f 	bl	800fc14 <xTaskGetSchedulerState>
 800e3f6:	4605      	mov	r5, r0
 800e3f8:	2800      	cmp	r0, #0
 800e3fa:	f000 8093 	beq.w	800e524 <xQueueGenericSend+0x168>
 800e3fe:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e400:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e404:	f7ff fce6 	bl	800ddd4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e408:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e40a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e40c:	429a      	cmp	r2, r3
 800e40e:	f0c0 80ef 	bcc.w	800e5f0 <xQueueGenericSend+0x234>
 800e412:	2f02      	cmp	r7, #2
 800e414:	f000 80ec 	beq.w	800e5f0 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e418:	9801      	ldr	r0, [sp, #4]
 800e41a:	2800      	cmp	r0, #0
 800e41c:	f000 8101 	beq.w	800e622 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800e420:	2d00      	cmp	r5, #0
 800e422:	f000 80e1 	beq.w	800e5e8 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800e426:	f7ff fcf7 	bl	800de18 <vPortExitCritical>
		vTaskSuspendAll();
 800e42a:	f001 fa49 	bl	800f8c0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e42e:	f7ff fcd1 	bl	800ddd4 <vPortEnterCritical>
 800e432:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e436:	2bff      	cmp	r3, #255	; 0xff
 800e438:	bf04      	itt	eq
 800e43a:	2300      	moveq	r3, #0
 800e43c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e440:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e444:	2bff      	cmp	r3, #255	; 0xff
 800e446:	bf04      	itt	eq
 800e448:	2300      	moveq	r3, #0
 800e44a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e44e:	f7ff fce3 	bl	800de18 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e452:	a901      	add	r1, sp, #4
 800e454:	a802      	add	r0, sp, #8
 800e456:	f001 fb8f 	bl	800fb78 <xTaskCheckForTimeOut>
 800e45a:	2800      	cmp	r0, #0
 800e45c:	f040 80e6 	bne.w	800e62c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800e460:	f7ff fcb8 	bl	800ddd4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800e464:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e466:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e468:	429a      	cmp	r2, r3
 800e46a:	d068      	beq.n	800e53e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800e46c:	f7ff fcd4 	bl	800de18 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e470:	f7ff fcb0 	bl	800ddd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e474:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e478:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e47a:	2d00      	cmp	r5, #0
 800e47c:	dc04      	bgt.n	800e488 <xQueueGenericSend+0xcc>
 800e47e:	e011      	b.n	800e4a4 <xQueueGenericSend+0xe8>
			--cTxLock;
 800e480:	1e6a      	subs	r2, r5, #1
 800e482:	b2d3      	uxtb	r3, r2
 800e484:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e486:	b16b      	cbz	r3, 800e4a4 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e488:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e48a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e48c:	b153      	cbz	r3, 800e4a4 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e48e:	f001 fb1f 	bl	800fad0 <xTaskRemoveFromEventList>
 800e492:	2800      	cmp	r0, #0
 800e494:	d0f4      	beq.n	800e480 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800e496:	f001 fbb7 	bl	800fc08 <vTaskMissedYield>
			--cTxLock;
 800e49a:	1e6a      	subs	r2, r5, #1
 800e49c:	b2d3      	uxtb	r3, r2
 800e49e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e4a0:	2b00      	cmp	r3, #0
 800e4a2:	d1f1      	bne.n	800e488 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e4a4:	23ff      	movs	r3, #255	; 0xff
 800e4a6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e4aa:	f7ff fcb5 	bl	800de18 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e4ae:	f7ff fc91 	bl	800ddd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e4b2:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800e4b6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e4b8:	2d00      	cmp	r5, #0
 800e4ba:	dd14      	ble.n	800e4e6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e4bc:	f104 0910 	add.w	r9, r4, #16
 800e4c0:	e003      	b.n	800e4ca <xQueueGenericSend+0x10e>
				--cRxLock;
 800e4c2:	1e6a      	subs	r2, r5, #1
 800e4c4:	b2d3      	uxtb	r3, r2
 800e4c6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e4c8:	b16b      	cbz	r3, 800e4e6 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e4ca:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e4cc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e4ce:	b153      	cbz	r3, 800e4e6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e4d0:	f001 fafe 	bl	800fad0 <xTaskRemoveFromEventList>
 800e4d4:	2800      	cmp	r0, #0
 800e4d6:	d0f4      	beq.n	800e4c2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800e4d8:	f001 fb96 	bl	800fc08 <vTaskMissedYield>
				--cRxLock;
 800e4dc:	1e6a      	subs	r2, r5, #1
 800e4de:	b2d3      	uxtb	r3, r2
 800e4e0:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e4e2:	2b00      	cmp	r3, #0
 800e4e4:	d1f1      	bne.n	800e4ca <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800e4e6:	23ff      	movs	r3, #255	; 0xff
 800e4e8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e4ec:	f7ff fc94 	bl	800de18 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e4f0:	f001 f9ee 	bl	800f8d0 <xTaskResumeAll>
 800e4f4:	2501      	movs	r5, #1
 800e4f6:	e785      	b.n	800e404 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e4f8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e4fa:	2b00      	cmp	r3, #0
 800e4fc:	f43f af6b 	beq.w	800e3d6 <xQueueGenericSend+0x1a>
 800e500:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e504:	f383 8811 	msr	BASEPRI, r3
 800e508:	f3bf 8f6f 	isb	sy
 800e50c:	f3bf 8f4f 	dsb	sy
 800e510:	e7fe      	b.n	800e510 <xQueueGenericSend+0x154>
 800e512:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e516:	f383 8811 	msr	BASEPRI, r3
 800e51a:	f3bf 8f6f 	isb	sy
 800e51e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e522:	e7fe      	b.n	800e522 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e524:	9b01      	ldr	r3, [sp, #4]
 800e526:	2b00      	cmp	r3, #0
 800e528:	f43f af6a 	beq.w	800e400 <xQueueGenericSend+0x44>
 800e52c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e530:	f383 8811 	msr	BASEPRI, r3
 800e534:	f3bf 8f6f 	isb	sy
 800e538:	f3bf 8f4f 	dsb	sy
 800e53c:	e7fe      	b.n	800e53c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e53e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800e542:	f7ff fc69 	bl	800de18 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e546:	9901      	ldr	r1, [sp, #4]
 800e548:	4648      	mov	r0, r9
 800e54a:	f001 fa33 	bl	800f9b4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e54e:	f7ff fc41 	bl	800ddd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e552:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e556:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e558:	2d00      	cmp	r5, #0
 800e55a:	dc04      	bgt.n	800e566 <xQueueGenericSend+0x1aa>
 800e55c:	e011      	b.n	800e582 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800e55e:	1e6b      	subs	r3, r5, #1
 800e560:	b2da      	uxtb	r2, r3
 800e562:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e564:	b16a      	cbz	r2, 800e582 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e566:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e568:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e56a:	b153      	cbz	r3, 800e582 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e56c:	f001 fab0 	bl	800fad0 <xTaskRemoveFromEventList>
 800e570:	2800      	cmp	r0, #0
 800e572:	d0f4      	beq.n	800e55e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800e574:	f001 fb48 	bl	800fc08 <vTaskMissedYield>
			--cTxLock;
 800e578:	1e6b      	subs	r3, r5, #1
 800e57a:	b2da      	uxtb	r2, r3
 800e57c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e57e:	2a00      	cmp	r2, #0
 800e580:	d1f1      	bne.n	800e566 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800e582:	23ff      	movs	r3, #255	; 0xff
 800e584:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e588:	f7ff fc46 	bl	800de18 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e58c:	f7ff fc22 	bl	800ddd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e590:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e594:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e596:	2d00      	cmp	r5, #0
 800e598:	dc04      	bgt.n	800e5a4 <xQueueGenericSend+0x1e8>
 800e59a:	e011      	b.n	800e5c0 <xQueueGenericSend+0x204>
				--cRxLock;
 800e59c:	1e6b      	subs	r3, r5, #1
 800e59e:	b2da      	uxtb	r2, r3
 800e5a0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5a2:	b16a      	cbz	r2, 800e5c0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e5a4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e5a6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e5a8:	b153      	cbz	r3, 800e5c0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e5aa:	f001 fa91 	bl	800fad0 <xTaskRemoveFromEventList>
 800e5ae:	2800      	cmp	r0, #0
 800e5b0:	d0f4      	beq.n	800e59c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800e5b2:	f001 fb29 	bl	800fc08 <vTaskMissedYield>
				--cRxLock;
 800e5b6:	1e6b      	subs	r3, r5, #1
 800e5b8:	b2da      	uxtb	r2, r3
 800e5ba:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5bc:	2a00      	cmp	r2, #0
 800e5be:	d1f1      	bne.n	800e5a4 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800e5c0:	23ff      	movs	r3, #255	; 0xff
 800e5c2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e5c6:	f7ff fc27 	bl	800de18 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e5ca:	f001 f981 	bl	800f8d0 <xTaskResumeAll>
 800e5ce:	2800      	cmp	r0, #0
 800e5d0:	d190      	bne.n	800e4f4 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800e5d2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e5d6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e5da:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e5de:	f3bf 8f4f 	dsb	sy
 800e5e2:	f3bf 8f6f 	isb	sy
 800e5e6:	e785      	b.n	800e4f4 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e5e8:	a802      	add	r0, sp, #8
 800e5ea:	f001 fab9 	bl	800fb60 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e5ee:	e71a      	b.n	800e426 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e5f0:	463a      	mov	r2, r7
 800e5f2:	4641      	mov	r1, r8
 800e5f4:	4620      	mov	r0, r4
 800e5f6:	f7ff fd4f 	bl	800e098 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e5fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e5fc:	2b00      	cmp	r3, #0
 800e5fe:	d153      	bne.n	800e6a8 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800e600:	b148      	cbz	r0, 800e616 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800e602:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e606:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e60a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e60e:	f3bf 8f4f 	dsb	sy
 800e612:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800e616:	f7ff fbff 	bl	800de18 <vPortExitCritical>
				return pdPASS;
 800e61a:	2001      	movs	r0, #1
}
 800e61c:	b005      	add	sp, #20
 800e61e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e622:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800e624:	f7ff fbf8 	bl	800de18 <vPortExitCritical>
					return errQUEUE_FULL;
 800e628:	9800      	ldr	r0, [sp, #0]
 800e62a:	e7f7      	b.n	800e61c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800e62c:	f7ff fbd2 	bl	800ddd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e630:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e634:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e636:	2d00      	cmp	r5, #0
 800e638:	dd10      	ble.n	800e65c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e63a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800e63e:	e003      	b.n	800e648 <xQueueGenericSend+0x28c>
			--cTxLock;
 800e640:	1e6b      	subs	r3, r5, #1
 800e642:	b2da      	uxtb	r2, r3
 800e644:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e646:	b14a      	cbz	r2, 800e65c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e648:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e64a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e64c:	b133      	cbz	r3, 800e65c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e64e:	f001 fa3f 	bl	800fad0 <xTaskRemoveFromEventList>
 800e652:	2800      	cmp	r0, #0
 800e654:	d0f4      	beq.n	800e640 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800e656:	f001 fad7 	bl	800fc08 <vTaskMissedYield>
 800e65a:	e7f1      	b.n	800e640 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800e65c:	23ff      	movs	r3, #255	; 0xff
 800e65e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e662:	f7ff fbd9 	bl	800de18 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e666:	f7ff fbb5 	bl	800ddd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e66a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e66e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e670:	2d00      	cmp	r5, #0
 800e672:	dd10      	ble.n	800e696 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e674:	f104 0610 	add.w	r6, r4, #16
 800e678:	e003      	b.n	800e682 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800e67a:	1e6b      	subs	r3, r5, #1
 800e67c:	b2da      	uxtb	r2, r3
 800e67e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e680:	b14a      	cbz	r2, 800e696 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e682:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e684:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e686:	b133      	cbz	r3, 800e696 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e688:	f001 fa22 	bl	800fad0 <xTaskRemoveFromEventList>
 800e68c:	2800      	cmp	r0, #0
 800e68e:	d0f4      	beq.n	800e67a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800e690:	f001 faba 	bl	800fc08 <vTaskMissedYield>
 800e694:	e7f1      	b.n	800e67a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800e696:	23ff      	movs	r3, #255	; 0xff
 800e698:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e69c:	f7ff fbbc 	bl	800de18 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e6a0:	f001 f916 	bl	800f8d0 <xTaskResumeAll>
			return errQUEUE_FULL;
 800e6a4:	2000      	movs	r0, #0
 800e6a6:	e7b9      	b.n	800e61c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e6a8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e6ac:	f001 fa10 	bl	800fad0 <xTaskRemoveFromEventList>
 800e6b0:	2800      	cmp	r0, #0
 800e6b2:	d0b0      	beq.n	800e616 <xQueueGenericSend+0x25a>
 800e6b4:	e7a5      	b.n	800e602 <xQueueGenericSend+0x246>
 800e6b6:	bf00      	nop

0800e6b8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800e6b8:	2800      	cmp	r0, #0
 800e6ba:	d04b      	beq.n	800e754 <xQueueGenericSendFromISR+0x9c>
{
 800e6bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e6c0:	460e      	mov	r6, r1
 800e6c2:	4617      	mov	r7, r2
 800e6c4:	461d      	mov	r5, r3
 800e6c6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e6c8:	b321      	cbz	r1, 800e714 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e6ca:	2d02      	cmp	r5, #2
 800e6cc:	d10b      	bne.n	800e6e6 <xQueueGenericSendFromISR+0x2e>
 800e6ce:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e6d0:	2b01      	cmp	r3, #1
 800e6d2:	d008      	beq.n	800e6e6 <xQueueGenericSendFromISR+0x2e>
 800e6d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6d8:	f383 8811 	msr	BASEPRI, r3
 800e6dc:	f3bf 8f6f 	isb	sy
 800e6e0:	f3bf 8f4f 	dsb	sy
 800e6e4:	e7fe      	b.n	800e6e4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e6e6:	f7ff fca9 	bl	800e03c <vPortValidateInterruptPriority>
	__asm volatile
 800e6ea:	f3ef 8811 	mrs	r8, BASEPRI
 800e6ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6f2:	f383 8811 	msr	BASEPRI, r3
 800e6f6:	f3bf 8f6f 	isb	sy
 800e6fa:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e6fe:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e700:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e702:	429a      	cmp	r2, r3
 800e704:	d312      	bcc.n	800e72c <xQueueGenericSendFromISR+0x74>
 800e706:	2d02      	cmp	r5, #2
 800e708:	d010      	beq.n	800e72c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800e70a:	2000      	movs	r0, #0
	__asm volatile
 800e70c:	f388 8811 	msr	BASEPRI, r8
}
 800e710:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e714:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e716:	2b00      	cmp	r3, #0
 800e718:	d0d7      	beq.n	800e6ca <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800e71a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e71e:	f383 8811 	msr	BASEPRI, r3
 800e722:	f3bf 8f6f 	isb	sy
 800e726:	f3bf 8f4f 	dsb	sy
 800e72a:	e7fe      	b.n	800e72a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e72c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800e72e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e732:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e734:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800e736:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e738:	4620      	mov	r0, r4
 800e73a:	f7ff fcad 	bl	800e098 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800e73e:	1c6b      	adds	r3, r5, #1
 800e740:	d011      	beq.n	800e766 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e742:	1c6b      	adds	r3, r5, #1
 800e744:	b25b      	sxtb	r3, r3
 800e746:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800e74a:	2001      	movs	r0, #1
	__asm volatile
 800e74c:	f388 8811 	msr	BASEPRI, r8
}
 800e750:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800e754:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e758:	f383 8811 	msr	BASEPRI, r3
 800e75c:	f3bf 8f6f 	isb	sy
 800e760:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e764:	e7fe      	b.n	800e764 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e766:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e768:	2b00      	cmp	r3, #0
 800e76a:	d0ee      	beq.n	800e74a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e76c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e770:	f001 f9ae 	bl	800fad0 <xTaskRemoveFromEventList>
 800e774:	2800      	cmp	r0, #0
 800e776:	d0e8      	beq.n	800e74a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800e778:	2f00      	cmp	r7, #0
 800e77a:	d0e6      	beq.n	800e74a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e77c:	2001      	movs	r0, #1
 800e77e:	6038      	str	r0, [r7, #0]
 800e780:	e7c4      	b.n	800e70c <xQueueGenericSendFromISR+0x54>
 800e782:	bf00      	nop

0800e784 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800e784:	b370      	cbz	r0, 800e7e4 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e786:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800e788:	b570      	push	{r4, r5, r6, lr}
 800e78a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800e78c:	b143      	cbz	r3, 800e7a0 <xQueueGiveFromISR+0x1c>
 800e78e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e792:	f383 8811 	msr	BASEPRI, r3
 800e796:	f3bf 8f6f 	isb	sy
 800e79a:	f3bf 8f4f 	dsb	sy
 800e79e:	e7fe      	b.n	800e79e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e7a0:	6803      	ldr	r3, [r0, #0]
 800e7a2:	460c      	mov	r4, r1
 800e7a4:	b33b      	cbz	r3, 800e7f6 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e7a6:	f7ff fc49 	bl	800e03c <vPortValidateInterruptPriority>
	__asm volatile
 800e7aa:	f3ef 8511 	mrs	r5, BASEPRI
 800e7ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7b2:	f383 8811 	msr	BASEPRI, r3
 800e7b6:	f3bf 8f6f 	isb	sy
 800e7ba:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e7be:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800e7c0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800e7c2:	429a      	cmp	r2, r3
 800e7c4:	d923      	bls.n	800e80e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800e7c6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e7ca:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800e7cc:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e7ce:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800e7d0:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800e7d2:	d020      	beq.n	800e816 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e7d4:	3301      	adds	r3, #1
 800e7d6:	b25b      	sxtb	r3, r3
 800e7d8:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800e7dc:	2001      	movs	r0, #1
	__asm volatile
 800e7de:	f385 8811 	msr	BASEPRI, r5
}
 800e7e2:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800e7e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7e8:	f383 8811 	msr	BASEPRI, r3
 800e7ec:	f3bf 8f6f 	isb	sy
 800e7f0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e7f4:	e7fe      	b.n	800e7f4 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e7f6:	6883      	ldr	r3, [r0, #8]
 800e7f8:	2b00      	cmp	r3, #0
 800e7fa:	d0d4      	beq.n	800e7a6 <xQueueGiveFromISR+0x22>
 800e7fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e800:	f383 8811 	msr	BASEPRI, r3
 800e804:	f3bf 8f6f 	isb	sy
 800e808:	f3bf 8f4f 	dsb	sy
 800e80c:	e7fe      	b.n	800e80c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800e80e:	2000      	movs	r0, #0
	__asm volatile
 800e810:	f385 8811 	msr	BASEPRI, r5
}
 800e814:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e816:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800e818:	2b00      	cmp	r3, #0
 800e81a:	d0df      	beq.n	800e7dc <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e81c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800e820:	f001 f956 	bl	800fad0 <xTaskRemoveFromEventList>
 800e824:	2800      	cmp	r0, #0
 800e826:	d0d9      	beq.n	800e7dc <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800e828:	2c00      	cmp	r4, #0
 800e82a:	d0d7      	beq.n	800e7dc <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e82c:	2001      	movs	r0, #1
 800e82e:	6020      	str	r0, [r4, #0]
 800e830:	e7ee      	b.n	800e810 <xQueueGiveFromISR+0x8c>
 800e832:	bf00      	nop

0800e834 <xQueueReceive>:
{
 800e834:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e838:	b085      	sub	sp, #20
 800e83a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e83c:	2800      	cmp	r0, #0
 800e83e:	f000 815c 	beq.w	800eafa <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e842:	460f      	mov	r7, r1
 800e844:	4604      	mov	r4, r0
 800e846:	2900      	cmp	r1, #0
 800e848:	d079      	beq.n	800e93e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e84a:	f001 f9e3 	bl	800fc14 <xTaskGetSchedulerState>
 800e84e:	2800      	cmp	r0, #0
 800e850:	f000 8081 	beq.w	800e956 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800e854:	f7ff fabe 	bl	800ddd4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e858:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e85a:	2d00      	cmp	r5, #0
 800e85c:	f040 8138 	bne.w	800ead0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e860:	9b01      	ldr	r3, [sp, #4]
 800e862:	2b00      	cmp	r3, #0
 800e864:	f000 80d5 	beq.w	800ea12 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e868:	a802      	add	r0, sp, #8
 800e86a:	f001 f979 	bl	800fb60 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800e86e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e870:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800e874:	f7ff fad0 	bl	800de18 <vPortExitCritical>
		vTaskSuspendAll();
 800e878:	f001 f822 	bl	800f8c0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e87c:	f7ff faaa 	bl	800ddd4 <vPortEnterCritical>
 800e880:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e884:	2bff      	cmp	r3, #255	; 0xff
 800e886:	bf08      	it	eq
 800e888:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800e88c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e890:	2bff      	cmp	r3, #255	; 0xff
 800e892:	bf08      	it	eq
 800e894:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800e898:	f7ff fabe 	bl	800de18 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e89c:	a901      	add	r1, sp, #4
 800e89e:	a802      	add	r0, sp, #8
 800e8a0:	f001 f96a 	bl	800fb78 <xTaskCheckForTimeOut>
 800e8a4:	2800      	cmp	r0, #0
 800e8a6:	d163      	bne.n	800e970 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800e8a8:	f7ff fa94 	bl	800ddd4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e8ac:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e8ae:	2b00      	cmp	r3, #0
 800e8b0:	f000 80b5 	beq.w	800ea1e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800e8b4:	f7ff fab0 	bl	800de18 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e8b8:	f7ff fa8c 	bl	800ddd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e8bc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e8c0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e8c2:	2d00      	cmp	r5, #0
 800e8c4:	dc04      	bgt.n	800e8d0 <xQueueReceive+0x9c>
 800e8c6:	e011      	b.n	800e8ec <xQueueReceive+0xb8>
			--cTxLock;
 800e8c8:	1e6b      	subs	r3, r5, #1
 800e8ca:	b2da      	uxtb	r2, r3
 800e8cc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e8ce:	b16a      	cbz	r2, 800e8ec <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e8d0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e8d2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e8d4:	b153      	cbz	r3, 800e8ec <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e8d6:	f001 f8fb 	bl	800fad0 <xTaskRemoveFromEventList>
 800e8da:	2800      	cmp	r0, #0
 800e8dc:	d0f4      	beq.n	800e8c8 <xQueueReceive+0x94>
						vTaskMissedYield();
 800e8de:	f001 f993 	bl	800fc08 <vTaskMissedYield>
			--cTxLock;
 800e8e2:	1e6b      	subs	r3, r5, #1
 800e8e4:	b2da      	uxtb	r2, r3
 800e8e6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e8e8:	2a00      	cmp	r2, #0
 800e8ea:	d1f1      	bne.n	800e8d0 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800e8ec:	23ff      	movs	r3, #255	; 0xff
 800e8ee:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e8f2:	f7ff fa91 	bl	800de18 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e8f6:	f7ff fa6d 	bl	800ddd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e8fa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e8fe:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e900:	2d00      	cmp	r5, #0
 800e902:	dd14      	ble.n	800e92e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e904:	f104 0910 	add.w	r9, r4, #16
 800e908:	e003      	b.n	800e912 <xQueueReceive+0xde>
				--cRxLock;
 800e90a:	1e6b      	subs	r3, r5, #1
 800e90c:	b2da      	uxtb	r2, r3
 800e90e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e910:	b16a      	cbz	r2, 800e92e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e912:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e914:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e916:	b153      	cbz	r3, 800e92e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e918:	f001 f8da 	bl	800fad0 <xTaskRemoveFromEventList>
 800e91c:	2800      	cmp	r0, #0
 800e91e:	d0f4      	beq.n	800e90a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800e920:	f001 f972 	bl	800fc08 <vTaskMissedYield>
				--cRxLock;
 800e924:	1e6b      	subs	r3, r5, #1
 800e926:	b2da      	uxtb	r2, r3
 800e928:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e92a:	2a00      	cmp	r2, #0
 800e92c:	d1f1      	bne.n	800e912 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800e92e:	23ff      	movs	r3, #255	; 0xff
 800e930:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e934:	f7ff fa70 	bl	800de18 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e938:	f000 ffca 	bl	800f8d0 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800e93c:	e060      	b.n	800ea00 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e93e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e940:	2b00      	cmp	r3, #0
 800e942:	d082      	beq.n	800e84a <xQueueReceive+0x16>
	__asm volatile
 800e944:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e948:	f383 8811 	msr	BASEPRI, r3
 800e94c:	f3bf 8f6f 	isb	sy
 800e950:	f3bf 8f4f 	dsb	sy
 800e954:	e7fe      	b.n	800e954 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e956:	9b01      	ldr	r3, [sp, #4]
 800e958:	2b00      	cmp	r3, #0
 800e95a:	f43f af7b 	beq.w	800e854 <xQueueReceive+0x20>
 800e95e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e962:	f383 8811 	msr	BASEPRI, r3
 800e966:	f3bf 8f6f 	isb	sy
 800e96a:	f3bf 8f4f 	dsb	sy
 800e96e:	e7fe      	b.n	800e96e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800e970:	f7ff fa30 	bl	800ddd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e974:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e978:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e97a:	2d00      	cmp	r5, #0
 800e97c:	dc04      	bgt.n	800e988 <xQueueReceive+0x154>
 800e97e:	e011      	b.n	800e9a4 <xQueueReceive+0x170>
			--cTxLock;
 800e980:	1e6b      	subs	r3, r5, #1
 800e982:	b2da      	uxtb	r2, r3
 800e984:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e986:	b16a      	cbz	r2, 800e9a4 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e988:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e98a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e98c:	b153      	cbz	r3, 800e9a4 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e98e:	f001 f89f 	bl	800fad0 <xTaskRemoveFromEventList>
 800e992:	2800      	cmp	r0, #0
 800e994:	d0f4      	beq.n	800e980 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800e996:	f001 f937 	bl	800fc08 <vTaskMissedYield>
			--cTxLock;
 800e99a:	1e6b      	subs	r3, r5, #1
 800e99c:	b2da      	uxtb	r2, r3
 800e99e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9a0:	2a00      	cmp	r2, #0
 800e9a2:	d1f1      	bne.n	800e988 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800e9a4:	23ff      	movs	r3, #255	; 0xff
 800e9a6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e9aa:	f7ff fa35 	bl	800de18 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e9ae:	f7ff fa11 	bl	800ddd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e9b2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e9b6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e9b8:	2d00      	cmp	r5, #0
 800e9ba:	dd14      	ble.n	800e9e6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e9bc:	f104 0910 	add.w	r9, r4, #16
 800e9c0:	e003      	b.n	800e9ca <xQueueReceive+0x196>
				--cRxLock;
 800e9c2:	1e6b      	subs	r3, r5, #1
 800e9c4:	b2da      	uxtb	r2, r3
 800e9c6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e9c8:	b16a      	cbz	r2, 800e9e6 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e9ca:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e9cc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e9ce:	b153      	cbz	r3, 800e9e6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e9d0:	f001 f87e 	bl	800fad0 <xTaskRemoveFromEventList>
 800e9d4:	2800      	cmp	r0, #0
 800e9d6:	d0f4      	beq.n	800e9c2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800e9d8:	f001 f916 	bl	800fc08 <vTaskMissedYield>
				--cRxLock;
 800e9dc:	1e6b      	subs	r3, r5, #1
 800e9de:	b2da      	uxtb	r2, r3
 800e9e0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e9e2:	2a00      	cmp	r2, #0
 800e9e4:	d1f1      	bne.n	800e9ca <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800e9e6:	23ff      	movs	r3, #255	; 0xff
 800e9e8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e9ec:	f7ff fa14 	bl	800de18 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e9f0:	f000 ff6e 	bl	800f8d0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e9f4:	f7ff f9ee 	bl	800ddd4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e9f8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e9fa:	b153      	cbz	r3, 800ea12 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800e9fc:	f7ff fa0c 	bl	800de18 <vPortExitCritical>
		taskENTER_CRITICAL();
 800ea00:	f7ff f9e8 	bl	800ddd4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ea04:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ea06:	2d00      	cmp	r5, #0
 800ea08:	d162      	bne.n	800ead0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ea0a:	9b01      	ldr	r3, [sp, #4]
 800ea0c:	2b00      	cmp	r3, #0
 800ea0e:	f47f af31 	bne.w	800e874 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800ea12:	f7ff fa01 	bl	800de18 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ea16:	2000      	movs	r0, #0
}
 800ea18:	b005      	add	sp, #20
 800ea1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800ea1e:	f7ff f9fb 	bl	800de18 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800ea22:	9901      	ldr	r1, [sp, #4]
 800ea24:	4630      	mov	r0, r6
 800ea26:	f000 ffc5 	bl	800f9b4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ea2a:	f7ff f9d3 	bl	800ddd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ea2e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ea32:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea34:	2d00      	cmp	r5, #0
 800ea36:	dc04      	bgt.n	800ea42 <xQueueReceive+0x20e>
 800ea38:	e011      	b.n	800ea5e <xQueueReceive+0x22a>
			--cTxLock;
 800ea3a:	1e6b      	subs	r3, r5, #1
 800ea3c:	b2da      	uxtb	r2, r3
 800ea3e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea40:	b16a      	cbz	r2, 800ea5e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea42:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea44:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea46:	b153      	cbz	r3, 800ea5e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea48:	f001 f842 	bl	800fad0 <xTaskRemoveFromEventList>
 800ea4c:	2800      	cmp	r0, #0
 800ea4e:	d0f4      	beq.n	800ea3a <xQueueReceive+0x206>
						vTaskMissedYield();
 800ea50:	f001 f8da 	bl	800fc08 <vTaskMissedYield>
			--cTxLock;
 800ea54:	1e6b      	subs	r3, r5, #1
 800ea56:	b2da      	uxtb	r2, r3
 800ea58:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea5a:	2a00      	cmp	r2, #0
 800ea5c:	d1f1      	bne.n	800ea42 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800ea5e:	23ff      	movs	r3, #255	; 0xff
 800ea60:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ea64:	f7ff f9d8 	bl	800de18 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ea68:	f7ff f9b4 	bl	800ddd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ea6c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ea70:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea72:	2d00      	cmp	r5, #0
 800ea74:	dd14      	ble.n	800eaa0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea76:	f104 0910 	add.w	r9, r4, #16
 800ea7a:	e003      	b.n	800ea84 <xQueueReceive+0x250>
				--cRxLock;
 800ea7c:	1e6b      	subs	r3, r5, #1
 800ea7e:	b2da      	uxtb	r2, r3
 800ea80:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea82:	b16a      	cbz	r2, 800eaa0 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ea84:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea86:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ea88:	b153      	cbz	r3, 800eaa0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea8a:	f001 f821 	bl	800fad0 <xTaskRemoveFromEventList>
 800ea8e:	2800      	cmp	r0, #0
 800ea90:	d0f4      	beq.n	800ea7c <xQueueReceive+0x248>
					vTaskMissedYield();
 800ea92:	f001 f8b9 	bl	800fc08 <vTaskMissedYield>
				--cRxLock;
 800ea96:	1e6b      	subs	r3, r5, #1
 800ea98:	b2da      	uxtb	r2, r3
 800ea9a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea9c:	2a00      	cmp	r2, #0
 800ea9e:	d1f1      	bne.n	800ea84 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800eaa0:	23ff      	movs	r3, #255	; 0xff
 800eaa2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800eaa6:	f7ff f9b7 	bl	800de18 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800eaaa:	f000 ff11 	bl	800f8d0 <xTaskResumeAll>
 800eaae:	2800      	cmp	r0, #0
 800eab0:	d1a6      	bne.n	800ea00 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800eab2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eab6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eaba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eabe:	f3bf 8f4f 	dsb	sy
 800eac2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800eac6:	f7ff f985 	bl	800ddd4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800eaca:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800eacc:	2d00      	cmp	r5, #0
 800eace:	d09c      	beq.n	800ea0a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ead0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ead2:	b152      	cbz	r2, 800eaea <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ead4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ead6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ead8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800eada:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eadc:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800eade:	bf24      	itt	cs
 800eae0:	6821      	ldrcs	r1, [r4, #0]
 800eae2:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800eae4:	4638      	mov	r0, r7
 800eae6:	f01c faa4 	bl	802b032 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800eaea:	3d01      	subs	r5, #1
 800eaec:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eaee:	6923      	ldr	r3, [r4, #16]
 800eaf0:	b963      	cbnz	r3, 800eb0c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800eaf2:	f7ff f991 	bl	800de18 <vPortExitCritical>
				return pdPASS;
 800eaf6:	2001      	movs	r0, #1
 800eaf8:	e78e      	b.n	800ea18 <xQueueReceive+0x1e4>
 800eafa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eafe:	f383 8811 	msr	BASEPRI, r3
 800eb02:	f3bf 8f6f 	isb	sy
 800eb06:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800eb0a:	e7fe      	b.n	800eb0a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb0c:	f104 0010 	add.w	r0, r4, #16
 800eb10:	f000 ffde 	bl	800fad0 <xTaskRemoveFromEventList>
 800eb14:	2800      	cmp	r0, #0
 800eb16:	d0ec      	beq.n	800eaf2 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800eb18:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eb1c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eb20:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eb24:	f3bf 8f4f 	dsb	sy
 800eb28:	f3bf 8f6f 	isb	sy
 800eb2c:	e7e1      	b.n	800eaf2 <xQueueReceive+0x2be>
 800eb2e:	bf00      	nop

0800eb30 <xQueueSemaphoreTake>:
{
 800eb30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eb34:	b084      	sub	sp, #16
 800eb36:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800eb38:	2800      	cmp	r0, #0
 800eb3a:	d05c      	beq.n	800ebf6 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800eb3c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800eb3e:	4604      	mov	r4, r0
 800eb40:	b147      	cbz	r7, 800eb54 <xQueueSemaphoreTake+0x24>
 800eb42:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb46:	f383 8811 	msr	BASEPRI, r3
 800eb4a:	f3bf 8f6f 	isb	sy
 800eb4e:	f3bf 8f4f 	dsb	sy
 800eb52:	e7fe      	b.n	800eb52 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800eb54:	f001 f85e 	bl	800fc14 <xTaskGetSchedulerState>
 800eb58:	4605      	mov	r5, r0
 800eb5a:	2800      	cmp	r0, #0
 800eb5c:	d054      	beq.n	800ec08 <xQueueSemaphoreTake+0xd8>
 800eb5e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb60:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800eb64:	f7ff f936 	bl	800ddd4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800eb68:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800eb6a:	2b00      	cmp	r3, #0
 800eb6c:	f040 8148 	bne.w	800ee00 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800eb70:	9b01      	ldr	r3, [sp, #4]
 800eb72:	2b00      	cmp	r3, #0
 800eb74:	f000 813a 	beq.w	800edec <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800eb78:	2d00      	cmp	r5, #0
 800eb7a:	f000 809d 	beq.w	800ecb8 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800eb7e:	f7ff f94b 	bl	800de18 <vPortExitCritical>
		vTaskSuspendAll();
 800eb82:	f000 fe9d 	bl	800f8c0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800eb86:	f7ff f925 	bl	800ddd4 <vPortEnterCritical>
 800eb8a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eb8e:	2bff      	cmp	r3, #255	; 0xff
 800eb90:	bf04      	itt	eq
 800eb92:	2300      	moveq	r3, #0
 800eb94:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800eb98:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800eb9c:	2bff      	cmp	r3, #255	; 0xff
 800eb9e:	bf04      	itt	eq
 800eba0:	2300      	moveq	r3, #0
 800eba2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800eba6:	f7ff f937 	bl	800de18 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ebaa:	a901      	add	r1, sp, #4
 800ebac:	a802      	add	r0, sp, #8
 800ebae:	f000 ffe3 	bl	800fb78 <xTaskCheckForTimeOut>
 800ebb2:	2800      	cmp	r0, #0
 800ebb4:	d135      	bne.n	800ec22 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800ebb6:	f7ff f90d 	bl	800ddd4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ebba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ebbc:	2b00      	cmp	r3, #0
 800ebbe:	f000 80a4 	beq.w	800ed0a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800ebc2:	f7ff f929 	bl	800de18 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ebc6:	f7ff f905 	bl	800ddd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ebca:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ebce:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ebd0:	2d00      	cmp	r5, #0
 800ebd2:	dc05      	bgt.n	800ebe0 <xQueueSemaphoreTake+0xb0>
 800ebd4:	e074      	b.n	800ecc0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800ebd6:	1e6b      	subs	r3, r5, #1
 800ebd8:	b2da      	uxtb	r2, r3
 800ebda:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ebdc:	2a00      	cmp	r2, #0
 800ebde:	d06f      	beq.n	800ecc0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ebe0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ebe2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ebe4:	2b00      	cmp	r3, #0
 800ebe6:	d06b      	beq.n	800ecc0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ebe8:	f000 ff72 	bl	800fad0 <xTaskRemoveFromEventList>
 800ebec:	2800      	cmp	r0, #0
 800ebee:	d0f2      	beq.n	800ebd6 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800ebf0:	f001 f80a 	bl	800fc08 <vTaskMissedYield>
 800ebf4:	e7ef      	b.n	800ebd6 <xQueueSemaphoreTake+0xa6>
 800ebf6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebfa:	f383 8811 	msr	BASEPRI, r3
 800ebfe:	f3bf 8f6f 	isb	sy
 800ec02:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800ec06:	e7fe      	b.n	800ec06 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ec08:	9b01      	ldr	r3, [sp, #4]
 800ec0a:	2b00      	cmp	r3, #0
 800ec0c:	f000 80d4 	beq.w	800edb8 <xQueueSemaphoreTake+0x288>
 800ec10:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec14:	f383 8811 	msr	BASEPRI, r3
 800ec18:	f3bf 8f6f 	isb	sy
 800ec1c:	f3bf 8f4f 	dsb	sy
 800ec20:	e7fe      	b.n	800ec20 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800ec22:	f7ff f8d7 	bl	800ddd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ec26:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ec2a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ec2c:	2d00      	cmp	r5, #0
 800ec2e:	dc04      	bgt.n	800ec3a <xQueueSemaphoreTake+0x10a>
 800ec30:	e011      	b.n	800ec56 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800ec32:	1e6b      	subs	r3, r5, #1
 800ec34:	b2da      	uxtb	r2, r3
 800ec36:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ec38:	b16a      	cbz	r2, 800ec56 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec3a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec3c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec3e:	b153      	cbz	r3, 800ec56 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec40:	f000 ff46 	bl	800fad0 <xTaskRemoveFromEventList>
 800ec44:	2800      	cmp	r0, #0
 800ec46:	d0f4      	beq.n	800ec32 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800ec48:	f000 ffde 	bl	800fc08 <vTaskMissedYield>
			--cTxLock;
 800ec4c:	1e6b      	subs	r3, r5, #1
 800ec4e:	b2da      	uxtb	r2, r3
 800ec50:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ec52:	2a00      	cmp	r2, #0
 800ec54:	d1f1      	bne.n	800ec3a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800ec56:	23ff      	movs	r3, #255	; 0xff
 800ec58:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ec5c:	f7ff f8dc 	bl	800de18 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ec60:	f7ff f8b8 	bl	800ddd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ec64:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ec68:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ec6a:	2d00      	cmp	r5, #0
 800ec6c:	dd14      	ble.n	800ec98 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ec6e:	f104 0810 	add.w	r8, r4, #16
 800ec72:	e003      	b.n	800ec7c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800ec74:	1e6b      	subs	r3, r5, #1
 800ec76:	b2da      	uxtb	r2, r3
 800ec78:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ec7a:	b16a      	cbz	r2, 800ec98 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ec7c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ec7e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ec80:	b153      	cbz	r3, 800ec98 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ec82:	f000 ff25 	bl	800fad0 <xTaskRemoveFromEventList>
 800ec86:	2800      	cmp	r0, #0
 800ec88:	d0f4      	beq.n	800ec74 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800ec8a:	f000 ffbd 	bl	800fc08 <vTaskMissedYield>
				--cRxLock;
 800ec8e:	1e6b      	subs	r3, r5, #1
 800ec90:	b2da      	uxtb	r2, r3
 800ec92:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ec94:	2a00      	cmp	r2, #0
 800ec96:	d1f1      	bne.n	800ec7c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800ec98:	23ff      	movs	r3, #255	; 0xff
 800ec9a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ec9e:	f7ff f8bb 	bl	800de18 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800eca2:	f000 fe15 	bl	800f8d0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800eca6:	f7ff f895 	bl	800ddd4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ecaa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ecac:	2b00      	cmp	r3, #0
 800ecae:	d07c      	beq.n	800edaa <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800ecb0:	f7ff f8b2 	bl	800de18 <vPortExitCritical>
	return xReturn;
 800ecb4:	2501      	movs	r5, #1
 800ecb6:	e755      	b.n	800eb64 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ecb8:	a802      	add	r0, sp, #8
 800ecba:	f000 ff51 	bl	800fb60 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800ecbe:	e75e      	b.n	800eb7e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800ecc0:	23ff      	movs	r3, #255	; 0xff
 800ecc2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ecc6:	f7ff f8a7 	bl	800de18 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ecca:	f7ff f883 	bl	800ddd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ecce:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ecd2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ecd4:	2d00      	cmp	r5, #0
 800ecd6:	dd10      	ble.n	800ecfa <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ecd8:	f104 0810 	add.w	r8, r4, #16
 800ecdc:	e003      	b.n	800ece6 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800ecde:	1e6b      	subs	r3, r5, #1
 800ece0:	b2da      	uxtb	r2, r3
 800ece2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ece4:	b14a      	cbz	r2, 800ecfa <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ece6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ece8:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ecea:	b133      	cbz	r3, 800ecfa <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ecec:	f000 fef0 	bl	800fad0 <xTaskRemoveFromEventList>
 800ecf0:	2800      	cmp	r0, #0
 800ecf2:	d0f4      	beq.n	800ecde <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800ecf4:	f000 ff88 	bl	800fc08 <vTaskMissedYield>
 800ecf8:	e7f1      	b.n	800ecde <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800ecfa:	23ff      	movs	r3, #255	; 0xff
 800ecfc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ed00:	f7ff f88a 	bl	800de18 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800ed04:	f000 fde4 	bl	800f8d0 <xTaskResumeAll>
 800ed08:	e7d4      	b.n	800ecb4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800ed0a:	f7ff f885 	bl	800de18 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ed0e:	6823      	ldr	r3, [r4, #0]
 800ed10:	2b00      	cmp	r3, #0
 800ed12:	d062      	beq.n	800edda <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800ed14:	9901      	ldr	r1, [sp, #4]
 800ed16:	4630      	mov	r0, r6
 800ed18:	f000 fe4c 	bl	800f9b4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ed1c:	f7ff f85a 	bl	800ddd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ed20:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ed24:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ed26:	2d00      	cmp	r5, #0
 800ed28:	dc04      	bgt.n	800ed34 <xQueueSemaphoreTake+0x204>
 800ed2a:	e00d      	b.n	800ed48 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800ed2c:	1e6b      	subs	r3, r5, #1
 800ed2e:	b2da      	uxtb	r2, r3
 800ed30:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ed32:	b14a      	cbz	r2, 800ed48 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ed34:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed36:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ed38:	b133      	cbz	r3, 800ed48 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed3a:	f000 fec9 	bl	800fad0 <xTaskRemoveFromEventList>
 800ed3e:	2800      	cmp	r0, #0
 800ed40:	d0f4      	beq.n	800ed2c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800ed42:	f000 ff61 	bl	800fc08 <vTaskMissedYield>
 800ed46:	e7f1      	b.n	800ed2c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800ed48:	23ff      	movs	r3, #255	; 0xff
 800ed4a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ed4e:	f7ff f863 	bl	800de18 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ed52:	f7ff f83f 	bl	800ddd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ed56:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ed5a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ed5c:	2d00      	cmp	r5, #0
 800ed5e:	dd10      	ble.n	800ed82 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed60:	f104 0810 	add.w	r8, r4, #16
 800ed64:	e003      	b.n	800ed6e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800ed66:	1e6b      	subs	r3, r5, #1
 800ed68:	b2da      	uxtb	r2, r3
 800ed6a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ed6c:	b14a      	cbz	r2, 800ed82 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ed6e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed70:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ed72:	b133      	cbz	r3, 800ed82 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed74:	f000 feac 	bl	800fad0 <xTaskRemoveFromEventList>
 800ed78:	2800      	cmp	r0, #0
 800ed7a:	d0f4      	beq.n	800ed66 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800ed7c:	f000 ff44 	bl	800fc08 <vTaskMissedYield>
 800ed80:	e7f1      	b.n	800ed66 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800ed82:	23ff      	movs	r3, #255	; 0xff
 800ed84:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ed88:	f7ff f846 	bl	800de18 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800ed8c:	f000 fda0 	bl	800f8d0 <xTaskResumeAll>
 800ed90:	2800      	cmp	r0, #0
 800ed92:	d18f      	bne.n	800ecb4 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800ed94:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ed98:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ed9c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eda0:	f3bf 8f4f 	dsb	sy
 800eda4:	f3bf 8f6f 	isb	sy
 800eda8:	e784      	b.n	800ecb4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800edaa:	f7ff f835 	bl	800de18 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800edae:	b92f      	cbnz	r7, 800edbc <xQueueSemaphoreTake+0x28c>
}
 800edb0:	4638      	mov	r0, r7
 800edb2:	b004      	add	sp, #16
 800edb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800edb8:	4607      	mov	r7, r0
 800edba:	e6d1      	b.n	800eb60 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800edbc:	f7ff f80a 	bl	800ddd4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800edc0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800edc2:	b119      	cbz	r1, 800edcc <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800edc4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800edc6:	6819      	ldr	r1, [r3, #0]
 800edc8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800edcc:	68a0      	ldr	r0, [r4, #8]
 800edce:	f000 ffbd 	bl	800fd4c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800edd2:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800edd4:	f7ff f820 	bl	800de18 <vPortExitCritical>
 800edd8:	e7ea      	b.n	800edb0 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800edda:	f7fe fffb 	bl	800ddd4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800edde:	68a0      	ldr	r0, [r4, #8]
 800ede0:	f000 ff28 	bl	800fc34 <xTaskPriorityInherit>
 800ede4:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800ede6:	f7ff f817 	bl	800de18 <vPortExitCritical>
 800edea:	e793      	b.n	800ed14 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800edec:	b197      	cbz	r7, 800ee14 <xQueueSemaphoreTake+0x2e4>
 800edee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edf2:	f383 8811 	msr	BASEPRI, r3
 800edf6:	f3bf 8f6f 	isb	sy
 800edfa:	f3bf 8f4f 	dsb	sy
 800edfe:	e7fe      	b.n	800edfe <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ee00:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800ee02:	3b01      	subs	r3, #1
 800ee04:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ee06:	b1ca      	cbz	r2, 800ee3c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ee08:	6923      	ldr	r3, [r4, #16]
 800ee0a:	b933      	cbnz	r3, 800ee1a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800ee0c:	f7ff f804 	bl	800de18 <vPortExitCritical>
				return pdPASS;
 800ee10:	2701      	movs	r7, #1
 800ee12:	e7cd      	b.n	800edb0 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800ee14:	f7ff f800 	bl	800de18 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ee18:	e7ca      	b.n	800edb0 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee1a:	f104 0010 	add.w	r0, r4, #16
 800ee1e:	f000 fe57 	bl	800fad0 <xTaskRemoveFromEventList>
 800ee22:	2800      	cmp	r0, #0
 800ee24:	d0f2      	beq.n	800ee0c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800ee26:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ee2a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ee2e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ee32:	f3bf 8f4f 	dsb	sy
 800ee36:	f3bf 8f6f 	isb	sy
 800ee3a:	e7e7      	b.n	800ee0c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800ee3c:	f000 ffda 	bl	800fdf4 <pvTaskIncrementMutexHeldCount>
 800ee40:	60a0      	str	r0, [r4, #8]
 800ee42:	e7e1      	b.n	800ee08 <xQueueSemaphoreTake+0x2d8>

0800ee44 <xQueueReceiveFromISR>:
{
 800ee44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800ee48:	b310      	cbz	r0, 800ee90 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ee4a:	460e      	mov	r6, r1
 800ee4c:	4617      	mov	r7, r2
 800ee4e:	4604      	mov	r4, r0
 800ee50:	b191      	cbz	r1, 800ee78 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ee52:	f7ff f8f3 	bl	800e03c <vPortValidateInterruptPriority>
	__asm volatile
 800ee56:	f3ef 8911 	mrs	r9, BASEPRI
 800ee5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee5e:	f383 8811 	msr	BASEPRI, r3
 800ee62:	f3bf 8f6f 	isb	sy
 800ee66:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ee6a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ee6c:	b9cd      	cbnz	r5, 800eea2 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800ee6e:	4628      	mov	r0, r5
	__asm volatile
 800ee70:	f389 8811 	msr	BASEPRI, r9
}
 800ee74:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ee78:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ee7a:	2b00      	cmp	r3, #0
 800ee7c:	d0e9      	beq.n	800ee52 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800ee7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee82:	f383 8811 	msr	BASEPRI, r3
 800ee86:	f3bf 8f6f 	isb	sy
 800ee8a:	f3bf 8f4f 	dsb	sy
 800ee8e:	e7fe      	b.n	800ee8e <xQueueReceiveFromISR+0x4a>
 800ee90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee94:	f383 8811 	msr	BASEPRI, r3
 800ee98:	f3bf 8f6f 	isb	sy
 800ee9c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800eea0:	e7fe      	b.n	800eea0 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800eea2:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800eea6:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800eea8:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800eeac:	b152      	cbz	r2, 800eec4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eeae:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800eeb0:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eeb2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800eeb4:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eeb6:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800eeb8:	bf24      	itt	cs
 800eeba:	6821      	ldrcs	r1, [r4, #0]
 800eebc:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800eebe:	4630      	mov	r0, r6
 800eec0:	f01c f8b7 	bl	802b032 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800eec4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800eec6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800eeca:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800eecc:	d009      	beq.n	800eee2 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800eece:	f108 0301 	add.w	r3, r8, #1
 800eed2:	b25b      	sxtb	r3, r3
 800eed4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800eed8:	2001      	movs	r0, #1
	__asm volatile
 800eeda:	f389 8811 	msr	BASEPRI, r9
}
 800eede:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eee2:	6923      	ldr	r3, [r4, #16]
 800eee4:	2b00      	cmp	r3, #0
 800eee6:	d0f7      	beq.n	800eed8 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eee8:	f104 0010 	add.w	r0, r4, #16
 800eeec:	f000 fdf0 	bl	800fad0 <xTaskRemoveFromEventList>
 800eef0:	2800      	cmp	r0, #0
 800eef2:	d0f1      	beq.n	800eed8 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800eef4:	2f00      	cmp	r7, #0
 800eef6:	d0ef      	beq.n	800eed8 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800eef8:	2001      	movs	r0, #1
 800eefa:	6038      	str	r0, [r7, #0]
 800eefc:	e7b8      	b.n	800ee70 <xQueueReceiveFromISR+0x2c>
 800eefe:	bf00      	nop

0800ef00 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800ef00:	b158      	cbz	r0, 800ef1a <uxQueueMessagesWaiting+0x1a>
{
 800ef02:	b510      	push	{r4, lr}
 800ef04:	4604      	mov	r4, r0
 800ef06:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800ef08:	f7fe ff64 	bl	800ddd4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800ef0c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800ef0e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800ef10:	f7fe ff82 	bl	800de18 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800ef14:	9801      	ldr	r0, [sp, #4]
 800ef16:	b002      	add	sp, #8
 800ef18:	bd10      	pop	{r4, pc}
	__asm volatile
 800ef1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef1e:	f383 8811 	msr	BASEPRI, r3
 800ef22:	f3bf 8f6f 	isb	sy
 800ef26:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800ef2a:	e7fe      	b.n	800ef2a <uxQueueMessagesWaiting+0x2a>

0800ef2c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800ef2c:	b108      	cbz	r0, 800ef32 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800ef2e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800ef30:	4770      	bx	lr
 800ef32:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef36:	f383 8811 	msr	BASEPRI, r3
 800ef3a:	f3bf 8f6f 	isb	sy
 800ef3e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ef42:	e7fe      	b.n	800ef42 <uxQueueMessagesWaitingFromISR+0x16>
 800ef44:	0000      	movs	r0, r0
	...

0800ef48 <vQueueDelete>:
	configASSERT( pxQueue );
 800ef48:	b1f0      	cbz	r0, 800ef88 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800ef4a:	4b21      	ldr	r3, [pc, #132]	; (800efd0 <vQueueDelete+0x88>)
 800ef4c:	685a      	ldr	r2, [r3, #4]
 800ef4e:	4290      	cmp	r0, r2
 800ef50:	d025      	beq.n	800ef9e <vQueueDelete+0x56>
 800ef52:	68da      	ldr	r2, [r3, #12]
 800ef54:	4290      	cmp	r0, r2
 800ef56:	d02c      	beq.n	800efb2 <vQueueDelete+0x6a>
 800ef58:	695a      	ldr	r2, [r3, #20]
 800ef5a:	4290      	cmp	r0, r2
 800ef5c:	d02b      	beq.n	800efb6 <vQueueDelete+0x6e>
 800ef5e:	69da      	ldr	r2, [r3, #28]
 800ef60:	4290      	cmp	r0, r2
 800ef62:	d02a      	beq.n	800efba <vQueueDelete+0x72>
 800ef64:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800ef66:	4290      	cmp	r0, r2
 800ef68:	d029      	beq.n	800efbe <vQueueDelete+0x76>
 800ef6a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ef6c:	4290      	cmp	r0, r2
 800ef6e:	d01e      	beq.n	800efae <vQueueDelete+0x66>
 800ef70:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ef72:	4290      	cmp	r0, r2
 800ef74:	d025      	beq.n	800efc2 <vQueueDelete+0x7a>
 800ef76:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800ef78:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ef7a:	bf08      	it	eq
 800ef7c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800ef7e:	d00f      	beq.n	800efa0 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800ef80:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800ef84:	b14b      	cbz	r3, 800ef9a <vQueueDelete+0x52>
}
 800ef86:	4770      	bx	lr
 800ef88:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef8c:	f383 8811 	msr	BASEPRI, r3
 800ef90:	f3bf 8f6f 	isb	sy
 800ef94:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ef98:	e7fe      	b.n	800ef98 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800ef9a:	f7fe be07 	b.w	800dbac <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ef9e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800efa0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800efc8 <vQueueDelete+0x80>
 800efa4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800efa8:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800efac:	e7e8      	b.n	800ef80 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800efae:	2205      	movs	r2, #5
 800efb0:	e7f6      	b.n	800efa0 <vQueueDelete+0x58>
 800efb2:	2201      	movs	r2, #1
 800efb4:	e7f4      	b.n	800efa0 <vQueueDelete+0x58>
 800efb6:	2202      	movs	r2, #2
 800efb8:	e7f2      	b.n	800efa0 <vQueueDelete+0x58>
 800efba:	2203      	movs	r2, #3
 800efbc:	e7f0      	b.n	800efa0 <vQueueDelete+0x58>
 800efbe:	2204      	movs	r2, #4
 800efc0:	e7ee      	b.n	800efa0 <vQueueDelete+0x58>
 800efc2:	2206      	movs	r2, #6
 800efc4:	e7ec      	b.n	800efa0 <vQueueDelete+0x58>
 800efc6:	bf00      	nop
	...
 800efd0:	20012740 	.word	0x20012740

0800efd4 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800efd4:	4b12      	ldr	r3, [pc, #72]	; (800f020 <vQueueAddToRegistry+0x4c>)
 800efd6:	681a      	ldr	r2, [r3, #0]
 800efd8:	b17a      	cbz	r2, 800effa <vQueueAddToRegistry+0x26>
 800efda:	689a      	ldr	r2, [r3, #8]
 800efdc:	b162      	cbz	r2, 800eff8 <vQueueAddToRegistry+0x24>
 800efde:	691a      	ldr	r2, [r3, #16]
 800efe0:	b192      	cbz	r2, 800f008 <vQueueAddToRegistry+0x34>
 800efe2:	699a      	ldr	r2, [r3, #24]
 800efe4:	b192      	cbz	r2, 800f00c <vQueueAddToRegistry+0x38>
 800efe6:	6a1a      	ldr	r2, [r3, #32]
 800efe8:	b192      	cbz	r2, 800f010 <vQueueAddToRegistry+0x3c>
 800efea:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800efec:	b192      	cbz	r2, 800f014 <vQueueAddToRegistry+0x40>
 800efee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800eff0:	b192      	cbz	r2, 800f018 <vQueueAddToRegistry+0x44>
 800eff2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800eff4:	b192      	cbz	r2, 800f01c <vQueueAddToRegistry+0x48>
	}
 800eff6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800eff8:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800effa:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800effe:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f002:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800f006:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f008:	2202      	movs	r2, #2
 800f00a:	e7f6      	b.n	800effa <vQueueAddToRegistry+0x26>
 800f00c:	2203      	movs	r2, #3
 800f00e:	e7f4      	b.n	800effa <vQueueAddToRegistry+0x26>
 800f010:	2204      	movs	r2, #4
 800f012:	e7f2      	b.n	800effa <vQueueAddToRegistry+0x26>
 800f014:	2205      	movs	r2, #5
 800f016:	e7f0      	b.n	800effa <vQueueAddToRegistry+0x26>
 800f018:	2206      	movs	r2, #6
 800f01a:	e7ee      	b.n	800effa <vQueueAddToRegistry+0x26>
 800f01c:	2207      	movs	r2, #7
 800f01e:	e7ec      	b.n	800effa <vQueueAddToRegistry+0x26>
 800f020:	20012740 	.word	0x20012740

0800f024 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800f024:	b570      	push	{r4, r5, r6, lr}
 800f026:	4605      	mov	r5, r0
 800f028:	460e      	mov	r6, r1
 800f02a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800f02c:	f7fe fed2 	bl	800ddd4 <vPortEnterCritical>
 800f030:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f034:	2bff      	cmp	r3, #255	; 0xff
 800f036:	bf04      	itt	eq
 800f038:	2300      	moveq	r3, #0
 800f03a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800f03e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f042:	2bff      	cmp	r3, #255	; 0xff
 800f044:	bf04      	itt	eq
 800f046:	2300      	moveq	r3, #0
 800f048:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800f04c:	f7fe fee4 	bl	800de18 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800f050:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800f052:	2b00      	cmp	r3, #0
 800f054:	d043      	beq.n	800f0de <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800f056:	f7fe febd 	bl	800ddd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f05a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f05e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f060:	2c00      	cmp	r4, #0
 800f062:	dd14      	ble.n	800f08e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f064:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800f068:	e003      	b.n	800f072 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800f06a:	1e63      	subs	r3, r4, #1
 800f06c:	b2da      	uxtb	r2, r3
 800f06e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f070:	b16a      	cbz	r2, 800f08e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f072:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f074:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f076:	b153      	cbz	r3, 800f08e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f078:	f000 fd2a 	bl	800fad0 <xTaskRemoveFromEventList>
 800f07c:	2800      	cmp	r0, #0
 800f07e:	d0f4      	beq.n	800f06a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800f080:	f000 fdc2 	bl	800fc08 <vTaskMissedYield>
			--cTxLock;
 800f084:	1e63      	subs	r3, r4, #1
 800f086:	b2da      	uxtb	r2, r3
 800f088:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f08a:	2a00      	cmp	r2, #0
 800f08c:	d1f1      	bne.n	800f072 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800f08e:	23ff      	movs	r3, #255	; 0xff
 800f090:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f094:	f7fe fec0 	bl	800de18 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f098:	f7fe fe9c 	bl	800ddd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f09c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f0a0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f0a2:	2c00      	cmp	r4, #0
 800f0a4:	dd14      	ble.n	800f0d0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f0a6:	f105 0610 	add.w	r6, r5, #16
 800f0aa:	e003      	b.n	800f0b4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800f0ac:	1e63      	subs	r3, r4, #1
 800f0ae:	b2da      	uxtb	r2, r3
 800f0b0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f0b2:	b16a      	cbz	r2, 800f0d0 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f0b4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f0b6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f0b8:	b153      	cbz	r3, 800f0d0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f0ba:	f000 fd09 	bl	800fad0 <xTaskRemoveFromEventList>
 800f0be:	2800      	cmp	r0, #0
 800f0c0:	d0f4      	beq.n	800f0ac <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800f0c2:	f000 fda1 	bl	800fc08 <vTaskMissedYield>
				--cRxLock;
 800f0c6:	1e63      	subs	r3, r4, #1
 800f0c8:	b2da      	uxtb	r2, r3
 800f0ca:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f0cc:	2a00      	cmp	r2, #0
 800f0ce:	d1f1      	bne.n	800f0b4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800f0d0:	23ff      	movs	r3, #255	; 0xff
 800f0d2:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800f0d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800f0da:	f7fe be9d 	b.w	800de18 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800f0de:	4622      	mov	r2, r4
 800f0e0:	4631      	mov	r1, r6
 800f0e2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800f0e6:	f000 fca9 	bl	800fa3c <vTaskPlaceOnEventListRestricted>
 800f0ea:	e7b4      	b.n	800f056 <vQueueWaitForMessageRestricted+0x32>

0800f0ec <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800f0ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f0f0:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800f0f2:	f7fe fe6f 	bl	800ddd4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800f0f6:	4a34      	ldr	r2, [pc, #208]	; (800f1c8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800f0f8:	4e34      	ldr	r6, [pc, #208]	; (800f1cc <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800f0fa:	6813      	ldr	r3, [r2, #0]
 800f0fc:	3301      	adds	r3, #1
 800f0fe:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800f100:	6833      	ldr	r3, [r6, #0]
 800f102:	2b00      	cmp	r3, #0
 800f104:	d032      	beq.n	800f16c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800f106:	4c32      	ldr	r4, [pc, #200]	; (800f1d0 <prvAddNewTaskToReadyList+0xe4>)
 800f108:	6823      	ldr	r3, [r4, #0]
 800f10a:	b33b      	cbz	r3, 800f15c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f10c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f10e:	4f31      	ldr	r7, [pc, #196]	; (800f1d4 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800f110:	4a31      	ldr	r2, [pc, #196]	; (800f1d8 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800f112:	4932      	ldr	r1, [pc, #200]	; (800f1dc <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800f114:	6813      	ldr	r3, [r2, #0]
 800f116:	3301      	adds	r3, #1
 800f118:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800f11a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800f11c:	680b      	ldr	r3, [r1, #0]
 800f11e:	4283      	cmp	r3, r0
 800f120:	bf38      	it	cc
 800f122:	6008      	strcc	r0, [r1, #0]
 800f124:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f128:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800f12c:	1d29      	adds	r1, r5, #4
 800f12e:	f7fe fdb1 	bl	800dc94 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800f132:	f7fe fe71 	bl	800de18 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800f136:	6823      	ldr	r3, [r4, #0]
 800f138:	b173      	cbz	r3, 800f158 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800f13a:	6832      	ldr	r2, [r6, #0]
 800f13c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800f13e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f140:	429a      	cmp	r2, r3
 800f142:	d209      	bcs.n	800f158 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800f144:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f148:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f14c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f150:	f3bf 8f4f 	dsb	sy
 800f154:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800f158:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f15c:	6833      	ldr	r3, [r6, #0]
 800f15e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f160:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f162:	4f1c      	ldr	r7, [pc, #112]	; (800f1d4 <prvAddNewTaskToReadyList+0xe8>)
 800f164:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800f166:	bf98      	it	ls
 800f168:	6035      	strls	r5, [r6, #0]
 800f16a:	e7d1      	b.n	800f110 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800f16c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800f16e:	6813      	ldr	r3, [r2, #0]
 800f170:	2b01      	cmp	r3, #1
 800f172:	d003      	beq.n	800f17c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f174:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f176:	4f17      	ldr	r7, [pc, #92]	; (800f1d4 <prvAddNewTaskToReadyList+0xe8>)
 800f178:	4c15      	ldr	r4, [pc, #84]	; (800f1d0 <prvAddNewTaskToReadyList+0xe4>)
 800f17a:	e7c9      	b.n	800f110 <prvAddNewTaskToReadyList+0x24>
 800f17c:	4f15      	ldr	r7, [pc, #84]	; (800f1d4 <prvAddNewTaskToReadyList+0xe8>)
 800f17e:	463c      	mov	r4, r7
 800f180:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f184:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f186:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f188:	f7fe fd74 	bl	800dc74 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f18c:	45a0      	cmp	r8, r4
 800f18e:	d1f9      	bne.n	800f184 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800f190:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800f1f4 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800f194:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f1f8 <prvAddNewTaskToReadyList+0x10c>
 800f198:	4c0d      	ldr	r4, [pc, #52]	; (800f1d0 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800f19a:	4648      	mov	r0, r9
 800f19c:	f7fe fd6a 	bl	800dc74 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800f1a0:	4640      	mov	r0, r8
 800f1a2:	f7fe fd67 	bl	800dc74 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800f1a6:	480e      	ldr	r0, [pc, #56]	; (800f1e0 <prvAddNewTaskToReadyList+0xf4>)
 800f1a8:	f7fe fd64 	bl	800dc74 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800f1ac:	480d      	ldr	r0, [pc, #52]	; (800f1e4 <prvAddNewTaskToReadyList+0xf8>)
 800f1ae:	f7fe fd61 	bl	800dc74 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800f1b2:	480d      	ldr	r0, [pc, #52]	; (800f1e8 <prvAddNewTaskToReadyList+0xfc>)
 800f1b4:	f7fe fd5e 	bl	800dc74 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800f1b8:	4b0c      	ldr	r3, [pc, #48]	; (800f1ec <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800f1ba:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800f1bc:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800f1c0:	4b0b      	ldr	r3, [pc, #44]	; (800f1f0 <prvAddNewTaskToReadyList+0x104>)
 800f1c2:	f8c3 8000 	str.w	r8, [r3]
}
 800f1c6:	e7a3      	b.n	800f110 <prvAddNewTaskToReadyList+0x24>
 800f1c8:	20012bec 	.word	0x20012bec
 800f1cc:	20012780 	.word	0x20012780
 800f1d0:	20012c48 	.word	0x20012c48
 800f1d4:	2001278c 	.word	0x2001278c
 800f1d8:	20012bf8 	.word	0x20012bf8
 800f1dc:	20012bfc 	.word	0x20012bfc
 800f1e0:	20012c34 	.word	0x20012c34
 800f1e4:	20012c60 	.word	0x20012c60
 800f1e8:	20012c4c 	.word	0x20012c4c
 800f1ec:	20012784 	.word	0x20012784
 800f1f0:	20012788 	.word	0x20012788
 800f1f4:	20012c00 	.word	0x20012c00
 800f1f8:	20012c14 	.word	0x20012c14

0800f1fc <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f1fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f200:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f202:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f206:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800f20a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f20c:	4606      	mov	r6, r0
 800f20e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f210:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f212:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f214:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f216:	f01b fde6 	bl	802ade6 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800f21a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f21c:	f1a9 0904 	sub.w	r9, r9, #4
 800f220:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800f222:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800f226:	2d00      	cmp	r5, #0
 800f228:	d079      	beq.n	800f31e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f22a:	782b      	ldrb	r3, [r5, #0]
 800f22c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800f230:	2b00      	cmp	r3, #0
 800f232:	d03b      	beq.n	800f2ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f234:	786b      	ldrb	r3, [r5, #1]
 800f236:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800f23a:	2b00      	cmp	r3, #0
 800f23c:	d036      	beq.n	800f2ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f23e:	78ab      	ldrb	r3, [r5, #2]
 800f240:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800f244:	b393      	cbz	r3, 800f2ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f246:	78eb      	ldrb	r3, [r5, #3]
 800f248:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800f24c:	b373      	cbz	r3, 800f2ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f24e:	792b      	ldrb	r3, [r5, #4]
 800f250:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800f254:	b353      	cbz	r3, 800f2ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f256:	796b      	ldrb	r3, [r5, #5]
 800f258:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800f25c:	b333      	cbz	r3, 800f2ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f25e:	79ab      	ldrb	r3, [r5, #6]
 800f260:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800f264:	b313      	cbz	r3, 800f2ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f266:	79eb      	ldrb	r3, [r5, #7]
 800f268:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800f26c:	b1f3      	cbz	r3, 800f2ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f26e:	7a2b      	ldrb	r3, [r5, #8]
 800f270:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800f274:	b1d3      	cbz	r3, 800f2ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f276:	7a6b      	ldrb	r3, [r5, #9]
 800f278:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800f27c:	b1b3      	cbz	r3, 800f2ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f27e:	7aab      	ldrb	r3, [r5, #10]
 800f280:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800f284:	b193      	cbz	r3, 800f2ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f286:	7aeb      	ldrb	r3, [r5, #11]
 800f288:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800f28c:	b173      	cbz	r3, 800f2ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f28e:	7b2b      	ldrb	r3, [r5, #12]
 800f290:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800f294:	b153      	cbz	r3, 800f2ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f296:	7b6b      	ldrb	r3, [r5, #13]
 800f298:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800f29c:	b133      	cbz	r3, 800f2ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f29e:	7bab      	ldrb	r3, [r5, #14]
 800f2a0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800f2a4:	b113      	cbz	r3, 800f2ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2a6:	7beb      	ldrb	r3, [r5, #15]
 800f2a8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800f2ac:	2300      	movs	r3, #0
 800f2ae:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800f2b2:	9d08      	ldr	r5, [sp, #32]
 800f2b4:	2d37      	cmp	r5, #55	; 0x37
 800f2b6:	bf28      	it	cs
 800f2b8:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800f2ba:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800f2be:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800f2c0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f2c2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800f2c4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f2c8:	f7fe fce0 	bl	800dc8c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f2cc:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800f2d0:	f104 0018 	add.w	r0, r4, #24
 800f2d4:	f7fe fcda 	bl	800dc8c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f2d8:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800f2da:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f2de:	4651      	mov	r1, sl
 800f2e0:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800f2e2:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800f2e4:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800f2e6:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800f2ea:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f2ee:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f2f2:	f01b fd78 	bl	802ade6 <memset>
 800f2f6:	4b0b      	ldr	r3, [pc, #44]	; (800f324 <prvInitialiseNewTask.constprop.0+0x128>)
 800f2f8:	65e3      	str	r3, [r4, #92]	; 0x5c
 800f2fa:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800f2fe:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f300:	463a      	mov	r2, r7
 800f302:	4631      	mov	r1, r6
 800f304:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f306:	6625      	str	r5, [r4, #96]	; 0x60
 800f308:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f30a:	f7fe fd3d 	bl	800dd88 <pxPortInitialiseStack>
 800f30e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800f310:	f1b8 0f00 	cmp.w	r8, #0
 800f314:	d001      	beq.n	800f31a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800f316:	f8c8 4000 	str.w	r4, [r8]
}
 800f31a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800f31e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800f322:	e7c6      	b.n	800f2b2 <prvInitialiseNewTask.constprop.0+0xb6>
 800f324:	20013710 	.word	0x20013710

0800f328 <prvIdleTask>:
{
 800f328:	b580      	push	{r7, lr}
 800f32a:	4d23      	ldr	r5, [pc, #140]	; (800f3b8 <prvIdleTask+0x90>)
 800f32c:	4f23      	ldr	r7, [pc, #140]	; (800f3bc <prvIdleTask+0x94>)
 800f32e:	4e24      	ldr	r6, [pc, #144]	; (800f3c0 <prvIdleTask+0x98>)
 800f330:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800f3c4 <prvIdleTask+0x9c>
				taskYIELD();
 800f334:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800f338:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f33c:	682b      	ldr	r3, [r5, #0]
 800f33e:	b35b      	cbz	r3, 800f398 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800f340:	f7fe fd48 	bl	800ddd4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f344:	68fb      	ldr	r3, [r7, #12]
 800f346:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f348:	1d20      	adds	r0, r4, #4
 800f34a:	f7fe fccb 	bl	800dce4 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800f34e:	6833      	ldr	r3, [r6, #0]
 800f350:	3b01      	subs	r3, #1
 800f352:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800f354:	682b      	ldr	r3, [r5, #0]
 800f356:	3b01      	subs	r3, #1
 800f358:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800f35a:	f7fe fd5d 	bl	800de18 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800f35e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f362:	f01b fd89 	bl	802ae78 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800f366:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800f36a:	b163      	cbz	r3, 800f386 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800f36c:	2b01      	cmp	r3, #1
 800f36e:	d01e      	beq.n	800f3ae <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800f370:	2b02      	cmp	r3, #2
 800f372:	d0e3      	beq.n	800f33c <prvIdleTask+0x14>
 800f374:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f378:	f383 8811 	msr	BASEPRI, r3
 800f37c:	f3bf 8f6f 	isb	sy
 800f380:	f3bf 8f4f 	dsb	sy
 800f384:	e7fe      	b.n	800f384 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800f386:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f388:	f7fe fc10 	bl	800dbac <vPortFree>
				vPortFree( pxTCB );
 800f38c:	4620      	mov	r0, r4
 800f38e:	f7fe fc0d 	bl	800dbac <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f392:	682b      	ldr	r3, [r5, #0]
 800f394:	2b00      	cmp	r3, #0
 800f396:	d1d3      	bne.n	800f340 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800f398:	f8d8 3000 	ldr.w	r3, [r8]
 800f39c:	2b01      	cmp	r3, #1
 800f39e:	d9cd      	bls.n	800f33c <prvIdleTask+0x14>
				taskYIELD();
 800f3a0:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800f3a4:	f3bf 8f4f 	dsb	sy
 800f3a8:	f3bf 8f6f 	isb	sy
 800f3ac:	e7c6      	b.n	800f33c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800f3ae:	4620      	mov	r0, r4
 800f3b0:	f7fe fbfc 	bl	800dbac <vPortFree>
 800f3b4:	e7c2      	b.n	800f33c <prvIdleTask+0x14>
 800f3b6:	bf00      	nop
 800f3b8:	20012bf0 	.word	0x20012bf0
 800f3bc:	20012c60 	.word	0x20012c60
 800f3c0:	20012bec 	.word	0x20012bec
 800f3c4:	2001278c 	.word	0x2001278c

0800f3c8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800f3c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800f3cc:	4b47      	ldr	r3, [pc, #284]	; (800f4ec <xTaskIncrementTick.part.0+0x124>)
 800f3ce:	681e      	ldr	r6, [r3, #0]
 800f3d0:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800f3d2:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800f3d4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800f3d6:	2e00      	cmp	r6, #0
 800f3d8:	d040      	beq.n	800f45c <xTaskIncrementTick.part.0+0x94>
 800f3da:	f8df b124 	ldr.w	fp, [pc, #292]	; 800f500 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800f3de:	f8db 3000 	ldr.w	r3, [fp]
 800f3e2:	429e      	cmp	r6, r3
 800f3e4:	d347      	bcc.n	800f476 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f3e6:	4f42      	ldr	r7, [pc, #264]	; (800f4f0 <xTaskIncrementTick.part.0+0x128>)
 800f3e8:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800f504 <xTaskIncrementTick.part.0+0x13c>
 800f3ec:	683b      	ldr	r3, [r7, #0]
 800f3ee:	f8df a118 	ldr.w	sl, [pc, #280]	; 800f508 <xTaskIncrementTick.part.0+0x140>
 800f3f2:	681d      	ldr	r5, [r3, #0]
 800f3f4:	2d00      	cmp	r5, #0
 800f3f6:	d073      	beq.n	800f4e0 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800f3f8:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800f50c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800f3fc:	2500      	movs	r5, #0
 800f3fe:	e022      	b.n	800f446 <xTaskIncrementTick.part.0+0x7e>
 800f400:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f402:	f7fe fc6f 	bl	800dce4 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f406:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f408:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f40a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f40e:	b113      	cbz	r3, 800f416 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f410:	f7fe fc68 	bl	800dce4 <uxListRemove>
 800f414:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800f416:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f418:	f8d8 2000 	ldr.w	r2, [r8]
 800f41c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f420:	4293      	cmp	r3, r2
 800f422:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f426:	bf88      	it	hi
 800f428:	f8c8 3000 	strhi.w	r3, [r8]
 800f42c:	f7fe fc32 	bl	800dc94 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f430:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f434:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f436:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f438:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f43a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800f43c:	4291      	cmp	r1, r2
 800f43e:	bf28      	it	cs
 800f440:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f442:	2b00      	cmp	r3, #0
 800f444:	d04c      	beq.n	800f4e0 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f446:	683b      	ldr	r3, [r7, #0]
 800f448:	68db      	ldr	r3, [r3, #12]
 800f44a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800f44c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f44e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800f450:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f452:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800f454:	d2d4      	bcs.n	800f400 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800f456:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800f45a:	e011      	b.n	800f480 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800f45c:	4b24      	ldr	r3, [pc, #144]	; (800f4f0 <xTaskIncrementTick.part.0+0x128>)
 800f45e:	681a      	ldr	r2, [r3, #0]
 800f460:	6812      	ldr	r2, [r2, #0]
 800f462:	b30a      	cbz	r2, 800f4a8 <xTaskIncrementTick.part.0+0xe0>
 800f464:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f468:	f383 8811 	msr	BASEPRI, r3
 800f46c:	f3bf 8f6f 	isb	sy
 800f470:	f3bf 8f4f 	dsb	sy
 800f474:	e7fe      	b.n	800f474 <xTaskIncrementTick.part.0+0xac>
 800f476:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800f504 <xTaskIncrementTick.part.0+0x13c>
 800f47a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800f508 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800f47e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f480:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800f484:	491b      	ldr	r1, [pc, #108]	; (800f4f4 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f486:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f488:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f48c:	009b      	lsls	r3, r3, #2
 800f48e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800f492:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800f494:	2a02      	cmp	r2, #2
 800f496:	bf28      	it	cs
 800f498:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800f49a:	2b00      	cmp	r3, #0
}
 800f49c:	bf0c      	ite	eq
 800f49e:	4628      	moveq	r0, r5
 800f4a0:	2001      	movne	r0, #1
 800f4a2:	b003      	add	sp, #12
 800f4a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800f4a8:	4a13      	ldr	r2, [pc, #76]	; (800f4f8 <xTaskIncrementTick.part.0+0x130>)
 800f4aa:	6818      	ldr	r0, [r3, #0]
 800f4ac:	6811      	ldr	r1, [r2, #0]
 800f4ae:	6019      	str	r1, [r3, #0]
 800f4b0:	4912      	ldr	r1, [pc, #72]	; (800f4fc <xTaskIncrementTick.part.0+0x134>)
 800f4b2:	6010      	str	r0, [r2, #0]
 800f4b4:	680a      	ldr	r2, [r1, #0]
 800f4b6:	3201      	adds	r2, #1
 800f4b8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f4ba:	681a      	ldr	r2, [r3, #0]
 800f4bc:	6812      	ldr	r2, [r2, #0]
 800f4be:	b932      	cbnz	r2, 800f4ce <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800f4c0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800f500 <xTaskIncrementTick.part.0+0x138>
 800f4c4:	f04f 33ff 	mov.w	r3, #4294967295
 800f4c8:	f8cb 3000 	str.w	r3, [fp]
 800f4cc:	e787      	b.n	800f3de <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f4ce:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f4d0:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800f500 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f4d4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f4d6:	68db      	ldr	r3, [r3, #12]
 800f4d8:	685b      	ldr	r3, [r3, #4]
 800f4da:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800f4de:	e77e      	b.n	800f3de <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f4e0:	f04f 33ff 	mov.w	r3, #4294967295
 800f4e4:	f8cb 3000 	str.w	r3, [fp]
					break;
 800f4e8:	e7ca      	b.n	800f480 <xTaskIncrementTick.part.0+0xb8>
 800f4ea:	bf00      	nop
 800f4ec:	20012c74 	.word	0x20012c74
 800f4f0:	20012784 	.word	0x20012784
 800f4f4:	20012c78 	.word	0x20012c78
 800f4f8:	20012788 	.word	0x20012788
 800f4fc:	20012c2c 	.word	0x20012c2c
 800f500:	20012c28 	.word	0x20012c28
 800f504:	2001278c 	.word	0x2001278c
 800f508:	20012780 	.word	0x20012780
 800f50c:	20012bfc 	.word	0x20012bfc

0800f510 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800f510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800f514:	4d41      	ldr	r5, [pc, #260]	; (800f61c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800f516:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800f518:	f7fe fc5c 	bl	800ddd4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800f51c:	682b      	ldr	r3, [r5, #0]
 800f51e:	3b01      	subs	r3, #1
 800f520:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f522:	682b      	ldr	r3, [r5, #0]
 800f524:	2b00      	cmp	r3, #0
 800f526:	d161      	bne.n	800f5ec <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800f528:	4b3d      	ldr	r3, [pc, #244]	; (800f620 <xTaskResumeAll.part.0+0x110>)
 800f52a:	681b      	ldr	r3, [r3, #0]
 800f52c:	2b00      	cmp	r3, #0
 800f52e:	d05d      	beq.n	800f5ec <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f530:	4e3c      	ldr	r6, [pc, #240]	; (800f624 <xTaskResumeAll.part.0+0x114>)
 800f532:	6833      	ldr	r3, [r6, #0]
 800f534:	2b00      	cmp	r3, #0
 800f536:	d06e      	beq.n	800f616 <xTaskResumeAll.part.0+0x106>
 800f538:	4f3b      	ldr	r7, [pc, #236]	; (800f628 <xTaskResumeAll.part.0+0x118>)
 800f53a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800f638 <xTaskResumeAll.part.0+0x128>
 800f53e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800f63c <xTaskResumeAll.part.0+0x12c>
 800f542:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800f640 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f546:	68f3      	ldr	r3, [r6, #12]
 800f548:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f54a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f54e:	f104 0018 	add.w	r0, r4, #24
 800f552:	f7fe fbc7 	bl	800dce4 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f556:	4658      	mov	r0, fp
 800f558:	f7fe fbc4 	bl	800dce4 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800f55c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f55e:	683a      	ldr	r2, [r7, #0]
 800f560:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f564:	4293      	cmp	r3, r2
 800f566:	4659      	mov	r1, fp
 800f568:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f56c:	bf88      	it	hi
 800f56e:	603b      	strhi	r3, [r7, #0]
 800f570:	f7fe fb90 	bl	800dc94 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f574:	f8d8 3000 	ldr.w	r3, [r8]
 800f578:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f57a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f57c:	429a      	cmp	r2, r3
 800f57e:	d33d      	bcc.n	800f5fc <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800f580:	2301      	movs	r3, #1
 800f582:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f586:	6833      	ldr	r3, [r6, #0]
 800f588:	2b00      	cmp	r3, #0
 800f58a:	d1dc      	bne.n	800f546 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f58c:	4b27      	ldr	r3, [pc, #156]	; (800f62c <xTaskResumeAll.part.0+0x11c>)
 800f58e:	681a      	ldr	r2, [r3, #0]
 800f590:	6812      	ldr	r2, [r2, #0]
 800f592:	2a00      	cmp	r2, #0
 800f594:	d03a      	beq.n	800f60c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f596:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f598:	4b25      	ldr	r3, [pc, #148]	; (800f630 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f59a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f59c:	68d2      	ldr	r2, [r2, #12]
 800f59e:	6852      	ldr	r2, [r2, #4]
 800f5a0:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800f5a2:	4e24      	ldr	r6, [pc, #144]	; (800f634 <xTaskResumeAll.part.0+0x124>)
 800f5a4:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800f5a6:	b194      	cbz	r4, 800f5ce <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800f5a8:	2701      	movs	r7, #1
 800f5aa:	e006      	b.n	800f5ba <xTaskResumeAll.part.0+0xaa>
 800f5ac:	f7ff ff0c 	bl	800f3c8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800f5b0:	b108      	cbz	r0, 800f5b6 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800f5b2:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f5b6:	3c01      	subs	r4, #1
 800f5b8:	d008      	beq.n	800f5cc <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f5ba:	682b      	ldr	r3, [r5, #0]
 800f5bc:	2b00      	cmp	r3, #0
 800f5be:	d0f5      	beq.n	800f5ac <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800f5c0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f5c2:	3c01      	subs	r4, #1
		++xPendedTicks;
 800f5c4:	f103 0301 	add.w	r3, r3, #1
 800f5c8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f5ca:	d1f6      	bne.n	800f5ba <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800f5cc:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800f5ce:	f8da 3000 	ldr.w	r3, [sl]
 800f5d2:	b15b      	cbz	r3, 800f5ec <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800f5d4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f5d8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f5dc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f5e0:	f3bf 8f4f 	dsb	sy
 800f5e4:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800f5e8:	2001      	movs	r0, #1
 800f5ea:	e000      	b.n	800f5ee <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800f5ec:	2000      	movs	r0, #0
 800f5ee:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f5f0:	f7fe fc12 	bl	800de18 <vPortExitCritical>
}
 800f5f4:	9801      	ldr	r0, [sp, #4]
 800f5f6:	b003      	add	sp, #12
 800f5f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f5fc:	6833      	ldr	r3, [r6, #0]
 800f5fe:	2b00      	cmp	r3, #0
 800f600:	d1a1      	bne.n	800f546 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f602:	4b0a      	ldr	r3, [pc, #40]	; (800f62c <xTaskResumeAll.part.0+0x11c>)
 800f604:	681a      	ldr	r2, [r3, #0]
 800f606:	6812      	ldr	r2, [r2, #0]
 800f608:	2a00      	cmp	r2, #0
 800f60a:	d1c4      	bne.n	800f596 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800f60c:	4b08      	ldr	r3, [pc, #32]	; (800f630 <xTaskResumeAll.part.0+0x120>)
 800f60e:	f04f 32ff 	mov.w	r2, #4294967295
 800f612:	601a      	str	r2, [r3, #0]
 800f614:	e7c5      	b.n	800f5a2 <xTaskResumeAll.part.0+0x92>
 800f616:	f8df a028 	ldr.w	sl, [pc, #40]	; 800f640 <xTaskResumeAll.part.0+0x130>
 800f61a:	e7c2      	b.n	800f5a2 <xTaskResumeAll.part.0+0x92>
 800f61c:	20012bf4 	.word	0x20012bf4
 800f620:	20012bec 	.word	0x20012bec
 800f624:	20012c34 	.word	0x20012c34
 800f628:	20012bfc 	.word	0x20012bfc
 800f62c:	20012784 	.word	0x20012784
 800f630:	20012c28 	.word	0x20012c28
 800f634:	20012c30 	.word	0x20012c30
 800f638:	2001278c 	.word	0x2001278c
 800f63c:	20012780 	.word	0x20012780
 800f640:	20012c78 	.word	0x20012c78

0800f644 <xTaskCreateStatic>:
	{
 800f644:	b530      	push	{r4, r5, lr}
 800f646:	b087      	sub	sp, #28
 800f648:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800f64a:	b1c4      	cbz	r4, 800f67e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800f64c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f64e:	b16d      	cbz	r5, 800f66c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f650:	25ac      	movs	r5, #172	; 0xac
 800f652:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800f654:	9d05      	ldr	r5, [sp, #20]
 800f656:	2dac      	cmp	r5, #172	; 0xac
 800f658:	d01a      	beq.n	800f690 <xTaskCreateStatic+0x4c>
 800f65a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f65e:	f383 8811 	msr	BASEPRI, r3
 800f662:	f3bf 8f6f 	isb	sy
 800f666:	f3bf 8f4f 	dsb	sy
 800f66a:	e7fe      	b.n	800f66a <xTaskCreateStatic+0x26>
 800f66c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f670:	f383 8811 	msr	BASEPRI, r3
 800f674:	f3bf 8f6f 	isb	sy
 800f678:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f67c:	e7fe      	b.n	800f67c <xTaskCreateStatic+0x38>
 800f67e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f682:	f383 8811 	msr	BASEPRI, r3
 800f686:	f3bf 8f6f 	isb	sy
 800f68a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f68e:	e7fe      	b.n	800f68e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f690:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f692:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f694:	2402      	movs	r4, #2
 800f696:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f69a:	ac04      	add	r4, sp, #16
 800f69c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800f6a0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f6a2:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f6a4:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f6a6:	f7ff fda9 	bl	800f1fc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f6aa:	980c      	ldr	r0, [sp, #48]	; 0x30
 800f6ac:	f7ff fd1e 	bl	800f0ec <prvAddNewTaskToReadyList>
	}
 800f6b0:	9804      	ldr	r0, [sp, #16]
 800f6b2:	b007      	add	sp, #28
 800f6b4:	bd30      	pop	{r4, r5, pc}
 800f6b6:	bf00      	nop

0800f6b8 <xTaskCreate>:
	{
 800f6b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f6bc:	4607      	mov	r7, r0
 800f6be:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f6c0:	0090      	lsls	r0, r2, #2
	{
 800f6c2:	4615      	mov	r5, r2
 800f6c4:	4688      	mov	r8, r1
 800f6c6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f6c8:	f7fe f9b4 	bl	800da34 <pvPortMalloc>
			if( pxStack != NULL )
 800f6cc:	b1d8      	cbz	r0, 800f706 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800f6ce:	4604      	mov	r4, r0
 800f6d0:	20ac      	movs	r0, #172	; 0xac
 800f6d2:	f7fe f9af 	bl	800da34 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800f6d6:	4606      	mov	r6, r0
 800f6d8:	b1d0      	cbz	r0, 800f710 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800f6da:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800f6dc:	2400      	movs	r4, #0
 800f6de:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800f6e2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800f6e4:	9401      	str	r4, [sp, #4]
 800f6e6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800f6e8:	9602      	str	r6, [sp, #8]
 800f6ea:	464b      	mov	r3, r9
 800f6ec:	462a      	mov	r2, r5
 800f6ee:	4641      	mov	r1, r8
 800f6f0:	4638      	mov	r0, r7
 800f6f2:	9400      	str	r4, [sp, #0]
 800f6f4:	f7ff fd82 	bl	800f1fc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f6f8:	4630      	mov	r0, r6
 800f6fa:	f7ff fcf7 	bl	800f0ec <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800f6fe:	2001      	movs	r0, #1
	}
 800f700:	b005      	add	sp, #20
 800f702:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f706:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800f70a:	b005      	add	sp, #20
 800f70c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800f710:	4620      	mov	r0, r4
 800f712:	f7fe fa4b 	bl	800dbac <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f716:	f04f 30ff 	mov.w	r0, #4294967295
 800f71a:	e7f1      	b.n	800f700 <xTaskCreate+0x48>

0800f71c <vTaskDelay>:
	{
 800f71c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800f71e:	b950      	cbnz	r0, 800f736 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800f720:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f724:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f728:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f72c:	f3bf 8f4f 	dsb	sy
 800f730:	f3bf 8f6f 	isb	sy
	}
 800f734:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800f736:	4d1e      	ldr	r5, [pc, #120]	; (800f7b0 <vTaskDelay+0x94>)
 800f738:	682b      	ldr	r3, [r5, #0]
 800f73a:	b143      	cbz	r3, 800f74e <vTaskDelay+0x32>
 800f73c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f740:	f383 8811 	msr	BASEPRI, r3
 800f744:	f3bf 8f6f 	isb	sy
 800f748:	f3bf 8f4f 	dsb	sy
 800f74c:	e7fe      	b.n	800f74c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800f74e:	682b      	ldr	r3, [r5, #0]
 800f750:	3301      	adds	r3, #1
 800f752:	4604      	mov	r4, r0
 800f754:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800f756:	4b17      	ldr	r3, [pc, #92]	; (800f7b4 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f758:	4e17      	ldr	r6, [pc, #92]	; (800f7b8 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800f75a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f75c:	6830      	ldr	r0, [r6, #0]
 800f75e:	3004      	adds	r0, #4
 800f760:	f7fe fac0 	bl	800dce4 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f764:	6833      	ldr	r3, [r6, #0]
 800f766:	19e4      	adds	r4, r4, r7
 800f768:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800f76a:	d310      	bcc.n	800f78e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f76c:	4b13      	ldr	r3, [pc, #76]	; (800f7bc <vTaskDelay+0xa0>)
 800f76e:	6818      	ldr	r0, [r3, #0]
 800f770:	6831      	ldr	r1, [r6, #0]
 800f772:	3104      	adds	r1, #4
 800f774:	f7fe fa9e 	bl	800dcb4 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800f778:	682b      	ldr	r3, [r5, #0]
 800f77a:	b9a3      	cbnz	r3, 800f7a6 <vTaskDelay+0x8a>
 800f77c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f780:	f383 8811 	msr	BASEPRI, r3
 800f784:	f3bf 8f6f 	isb	sy
 800f788:	f3bf 8f4f 	dsb	sy
 800f78c:	e7fe      	b.n	800f78c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f78e:	4b0c      	ldr	r3, [pc, #48]	; (800f7c0 <vTaskDelay+0xa4>)
 800f790:	6818      	ldr	r0, [r3, #0]
 800f792:	6831      	ldr	r1, [r6, #0]
 800f794:	3104      	adds	r1, #4
 800f796:	f7fe fa8d 	bl	800dcb4 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800f79a:	4b0a      	ldr	r3, [pc, #40]	; (800f7c4 <vTaskDelay+0xa8>)
 800f79c:	681a      	ldr	r2, [r3, #0]
 800f79e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800f7a0:	bf38      	it	cc
 800f7a2:	601c      	strcc	r4, [r3, #0]
 800f7a4:	e7e8      	b.n	800f778 <vTaskDelay+0x5c>
 800f7a6:	f7ff feb3 	bl	800f510 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800f7aa:	2800      	cmp	r0, #0
 800f7ac:	d0b8      	beq.n	800f720 <vTaskDelay+0x4>
	}
 800f7ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f7b0:	20012bf4 	.word	0x20012bf4
 800f7b4:	20012c74 	.word	0x20012c74
 800f7b8:	20012780 	.word	0x20012780
 800f7bc:	20012788 	.word	0x20012788
 800f7c0:	20012784 	.word	0x20012784
 800f7c4:	20012c28 	.word	0x20012c28

0800f7c8 <vTaskStartScheduler>:
{
 800f7c8:	b530      	push	{r4, r5, lr}
 800f7ca:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f7cc:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800f7ce:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f7d0:	a906      	add	r1, sp, #24
 800f7d2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800f7d4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f7d8:	f7fe f90e 	bl	800d9f8 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800f7dc:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800f7e0:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800f7e2:	b1bb      	cbz	r3, 800f814 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800f7e4:	b16d      	cbz	r5, 800f802 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f7e6:	21ac      	movs	r1, #172	; 0xac
 800f7e8:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800f7ea:	9909      	ldr	r1, [sp, #36]	; 0x24
 800f7ec:	29ac      	cmp	r1, #172	; 0xac
 800f7ee:	d01a      	beq.n	800f826 <vTaskStartScheduler+0x5e>
 800f7f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f7f4:	f383 8811 	msr	BASEPRI, r3
 800f7f8:	f3bf 8f6f 	isb	sy
 800f7fc:	f3bf 8f4f 	dsb	sy
 800f800:	e7fe      	b.n	800f800 <vTaskStartScheduler+0x38>
 800f802:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f806:	f383 8811 	msr	BASEPRI, r3
 800f80a:	f3bf 8f6f 	isb	sy
 800f80e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f812:	e7fe      	b.n	800f812 <vTaskStartScheduler+0x4a>
 800f814:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f818:	f383 8811 	msr	BASEPRI, r3
 800f81c:	f3bf 8f6f 	isb	sy
 800f820:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f824:	e7fe      	b.n	800f824 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f826:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f828:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f82a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f82c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f830:	4623      	mov	r3, r4
 800f832:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800f836:	491b      	ldr	r1, [pc, #108]	; (800f8a4 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f838:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f83a:	9400      	str	r4, [sp, #0]
 800f83c:	481a      	ldr	r0, [pc, #104]	; (800f8a8 <vTaskStartScheduler+0xe0>)
 800f83e:	f7ff fcdd 	bl	800f1fc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f842:	4628      	mov	r0, r5
 800f844:	f7ff fc52 	bl	800f0ec <prvAddNewTaskToReadyList>
		return xReturn;
 800f848:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800f84a:	b1eb      	cbz	r3, 800f888 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800f84c:	f000 fc6e 	bl	801012c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800f850:	2801      	cmp	r0, #1
 800f852:	d11b      	bne.n	800f88c <vTaskStartScheduler+0xc4>
 800f854:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f858:	f383 8811 	msr	BASEPRI, r3
 800f85c:	f3bf 8f6f 	isb	sy
 800f860:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f864:	4b11      	ldr	r3, [pc, #68]	; (800f8ac <vTaskStartScheduler+0xe4>)
 800f866:	4a12      	ldr	r2, [pc, #72]	; (800f8b0 <vTaskStartScheduler+0xe8>)
 800f868:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800f86a:	4912      	ldr	r1, [pc, #72]	; (800f8b4 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f86c:	3358      	adds	r3, #88	; 0x58
 800f86e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800f870:	4a11      	ldr	r2, [pc, #68]	; (800f8b8 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f872:	4b12      	ldr	r3, [pc, #72]	; (800f8bc <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800f874:	f04f 35ff 	mov.w	r5, #4294967295
 800f878:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800f87a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f87c:	601c      	str	r4, [r3, #0]
}
 800f87e:	b00b      	add	sp, #44	; 0x2c
 800f880:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800f884:	f7fe bb38 	b.w	800def8 <xPortStartScheduler>
}
 800f888:	b00b      	add	sp, #44	; 0x2c
 800f88a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800f88c:	3001      	adds	r0, #1
 800f88e:	d1fb      	bne.n	800f888 <vTaskStartScheduler+0xc0>
 800f890:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f894:	f383 8811 	msr	BASEPRI, r3
 800f898:	f3bf 8f6f 	isb	sy
 800f89c:	f3bf 8f4f 	dsb	sy
 800f8a0:	e7fe      	b.n	800f8a0 <vTaskStartScheduler+0xd8>
 800f8a2:	bf00      	nop
 800f8a4:	0802ea7c 	.word	0x0802ea7c
 800f8a8:	0800f329 	.word	0x0800f329
 800f8ac:	20012780 	.word	0x20012780
 800f8b0:	20000160 	.word	0x20000160
 800f8b4:	20012c28 	.word	0x20012c28
 800f8b8:	20012c48 	.word	0x20012c48
 800f8bc:	20012c74 	.word	0x20012c74

0800f8c0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800f8c0:	4a02      	ldr	r2, [pc, #8]	; (800f8cc <vTaskSuspendAll+0xc>)
 800f8c2:	6813      	ldr	r3, [r2, #0]
 800f8c4:	3301      	adds	r3, #1
 800f8c6:	6013      	str	r3, [r2, #0]
}
 800f8c8:	4770      	bx	lr
 800f8ca:	bf00      	nop
 800f8cc:	20012bf4 	.word	0x20012bf4

0800f8d0 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800f8d0:	4b06      	ldr	r3, [pc, #24]	; (800f8ec <xTaskResumeAll+0x1c>)
 800f8d2:	681b      	ldr	r3, [r3, #0]
 800f8d4:	b943      	cbnz	r3, 800f8e8 <xTaskResumeAll+0x18>
 800f8d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f8da:	f383 8811 	msr	BASEPRI, r3
 800f8de:	f3bf 8f6f 	isb	sy
 800f8e2:	f3bf 8f4f 	dsb	sy
 800f8e6:	e7fe      	b.n	800f8e6 <xTaskResumeAll+0x16>
 800f8e8:	f7ff be12 	b.w	800f510 <xTaskResumeAll.part.0>
 800f8ec:	20012bf4 	.word	0x20012bf4

0800f8f0 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800f8f0:	4b01      	ldr	r3, [pc, #4]	; (800f8f8 <xTaskGetTickCount+0x8>)
 800f8f2:	6818      	ldr	r0, [r3, #0]
}
 800f8f4:	4770      	bx	lr
 800f8f6:	bf00      	nop
 800f8f8:	20012c74 	.word	0x20012c74

0800f8fc <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f8fc:	4b05      	ldr	r3, [pc, #20]	; (800f914 <xTaskIncrementTick+0x18>)
 800f8fe:	681b      	ldr	r3, [r3, #0]
 800f900:	b90b      	cbnz	r3, 800f906 <xTaskIncrementTick+0xa>
 800f902:	f7ff bd61 	b.w	800f3c8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800f906:	4a04      	ldr	r2, [pc, #16]	; (800f918 <xTaskIncrementTick+0x1c>)
 800f908:	6813      	ldr	r3, [r2, #0]
 800f90a:	3301      	adds	r3, #1
}
 800f90c:	2000      	movs	r0, #0
		++xPendedTicks;
 800f90e:	6013      	str	r3, [r2, #0]
}
 800f910:	4770      	bx	lr
 800f912:	bf00      	nop
 800f914:	20012bf4 	.word	0x20012bf4
 800f918:	20012c30 	.word	0x20012c30

0800f91c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800f91c:	4b1f      	ldr	r3, [pc, #124]	; (800f99c <vTaskSwitchContext+0x80>)
 800f91e:	681b      	ldr	r3, [r3, #0]
 800f920:	b11b      	cbz	r3, 800f92a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800f922:	4b1f      	ldr	r3, [pc, #124]	; (800f9a0 <vTaskSwitchContext+0x84>)
 800f924:	2201      	movs	r2, #1
 800f926:	601a      	str	r2, [r3, #0]
 800f928:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800f92a:	4a1d      	ldr	r2, [pc, #116]	; (800f9a0 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f92c:	491d      	ldr	r1, [pc, #116]	; (800f9a4 <vTaskSwitchContext+0x88>)
{
 800f92e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f930:	4c1d      	ldr	r4, [pc, #116]	; (800f9a8 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800f932:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f934:	6823      	ldr	r3, [r4, #0]
 800f936:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800f93a:	0092      	lsls	r2, r2, #2
 800f93c:	0098      	lsls	r0, r3, #2
 800f93e:	588a      	ldr	r2, [r1, r2]
 800f940:	b942      	cbnz	r2, 800f954 <vTaskSwitchContext+0x38>
 800f942:	b313      	cbz	r3, 800f98a <vTaskSwitchContext+0x6e>
 800f944:	3b01      	subs	r3, #1
 800f946:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800f94a:	0098      	lsls	r0, r3, #2
 800f94c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800f950:	2a00      	cmp	r2, #0
 800f952:	d0f6      	beq.n	800f942 <vTaskSwitchContext+0x26>
 800f954:	4418      	add	r0, r3
 800f956:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800f95a:	4662      	mov	r2, ip
 800f95c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800f960:	6849      	ldr	r1, [r1, #4]
 800f962:	f8cc 1004 	str.w	r1, [ip, #4]
 800f966:	3208      	adds	r2, #8
 800f968:	4291      	cmp	r1, r2
 800f96a:	bf08      	it	eq
 800f96c:	6849      	ldreq	r1, [r1, #4]
 800f96e:	4a0f      	ldr	r2, [pc, #60]	; (800f9ac <vTaskSwitchContext+0x90>)
 800f970:	bf08      	it	eq
 800f972:	f8cc 1004 	streq.w	r1, [ip, #4]
 800f976:	68c9      	ldr	r1, [r1, #12]
 800f978:	6011      	str	r1, [r2, #0]
 800f97a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f97c:	6813      	ldr	r3, [r2, #0]
 800f97e:	4a0c      	ldr	r2, [pc, #48]	; (800f9b0 <vTaskSwitchContext+0x94>)
}
 800f980:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f984:	3358      	adds	r3, #88	; 0x58
 800f986:	6013      	str	r3, [r2, #0]
}
 800f988:	4770      	bx	lr
 800f98a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f98e:	f383 8811 	msr	BASEPRI, r3
 800f992:	f3bf 8f6f 	isb	sy
 800f996:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f99a:	e7fe      	b.n	800f99a <vTaskSwitchContext+0x7e>
 800f99c:	20012bf4 	.word	0x20012bf4
 800f9a0:	20012c78 	.word	0x20012c78
 800f9a4:	2001278c 	.word	0x2001278c
 800f9a8:	20012bfc 	.word	0x20012bfc
 800f9ac:	20012780 	.word	0x20012780
 800f9b0:	20000160 	.word	0x20000160

0800f9b4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800f9b4:	b1d0      	cbz	r0, 800f9ec <vTaskPlaceOnEventList+0x38>
{
 800f9b6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f9b8:	4d1a      	ldr	r5, [pc, #104]	; (800fa24 <vTaskPlaceOnEventList+0x70>)
 800f9ba:	460c      	mov	r4, r1
 800f9bc:	6829      	ldr	r1, [r5, #0]
 800f9be:	3118      	adds	r1, #24
 800f9c0:	f7fe f978 	bl	800dcb4 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f9c4:	4b18      	ldr	r3, [pc, #96]	; (800fa28 <vTaskPlaceOnEventList+0x74>)
 800f9c6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f9c8:	6828      	ldr	r0, [r5, #0]
 800f9ca:	3004      	adds	r0, #4
 800f9cc:	f7fe f98a 	bl	800dce4 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800f9d0:	1c63      	adds	r3, r4, #1
 800f9d2:	d014      	beq.n	800f9fe <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f9d4:	682b      	ldr	r3, [r5, #0]
 800f9d6:	19a4      	adds	r4, r4, r6
 800f9d8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f9da:	d317      	bcc.n	800fa0c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f9dc:	4b13      	ldr	r3, [pc, #76]	; (800fa2c <vTaskPlaceOnEventList+0x78>)
 800f9de:	6818      	ldr	r0, [r3, #0]
 800f9e0:	6829      	ldr	r1, [r5, #0]
}
 800f9e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f9e6:	3104      	adds	r1, #4
 800f9e8:	f7fe b964 	b.w	800dcb4 <vListInsert>
 800f9ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9f0:	f383 8811 	msr	BASEPRI, r3
 800f9f4:	f3bf 8f6f 	isb	sy
 800f9f8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800f9fc:	e7fe      	b.n	800f9fc <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f9fe:	6829      	ldr	r1, [r5, #0]
 800fa00:	480b      	ldr	r0, [pc, #44]	; (800fa30 <vTaskPlaceOnEventList+0x7c>)
}
 800fa02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fa06:	3104      	adds	r1, #4
 800fa08:	f7fe b944 	b.w	800dc94 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fa0c:	4b09      	ldr	r3, [pc, #36]	; (800fa34 <vTaskPlaceOnEventList+0x80>)
 800fa0e:	6818      	ldr	r0, [r3, #0]
 800fa10:	6829      	ldr	r1, [r5, #0]
 800fa12:	3104      	adds	r1, #4
 800fa14:	f7fe f94e 	bl	800dcb4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800fa18:	4b07      	ldr	r3, [pc, #28]	; (800fa38 <vTaskPlaceOnEventList+0x84>)
 800fa1a:	681a      	ldr	r2, [r3, #0]
 800fa1c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800fa1e:	bf38      	it	cc
 800fa20:	601c      	strcc	r4, [r3, #0]
}
 800fa22:	bd70      	pop	{r4, r5, r6, pc}
 800fa24:	20012780 	.word	0x20012780
 800fa28:	20012c74 	.word	0x20012c74
 800fa2c:	20012788 	.word	0x20012788
 800fa30:	20012c4c 	.word	0x20012c4c
 800fa34:	20012784 	.word	0x20012784
 800fa38:	20012c28 	.word	0x20012c28

0800fa3c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800fa3c:	b330      	cbz	r0, 800fa8c <vTaskPlaceOnEventListRestricted+0x50>
	{
 800fa3e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800fa40:	4e1d      	ldr	r6, [pc, #116]	; (800fab8 <vTaskPlaceOnEventListRestricted+0x7c>)
 800fa42:	460c      	mov	r4, r1
 800fa44:	6831      	ldr	r1, [r6, #0]
 800fa46:	4615      	mov	r5, r2
 800fa48:	3118      	adds	r1, #24
 800fa4a:	f7fe f923 	bl	800dc94 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800fa4e:	4b1b      	ldr	r3, [pc, #108]	; (800fabc <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800fa50:	b985      	cbnz	r5, 800fa74 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800fa52:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fa54:	6830      	ldr	r0, [r6, #0]
 800fa56:	3004      	adds	r0, #4
 800fa58:	f7fe f944 	bl	800dce4 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fa5c:	6833      	ldr	r3, [r6, #0]
 800fa5e:	1964      	adds	r4, r4, r5
 800fa60:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800fa62:	d31c      	bcc.n	800fa9e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fa64:	4b16      	ldr	r3, [pc, #88]	; (800fac0 <vTaskPlaceOnEventListRestricted+0x84>)
 800fa66:	6818      	ldr	r0, [r3, #0]
 800fa68:	6831      	ldr	r1, [r6, #0]
	}
 800fa6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fa6e:	3104      	adds	r1, #4
 800fa70:	f7fe b920 	b.w	800dcb4 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800fa74:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fa76:	6830      	ldr	r0, [r6, #0]
 800fa78:	3004      	adds	r0, #4
 800fa7a:	f7fe f933 	bl	800dce4 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fa7e:	6831      	ldr	r1, [r6, #0]
 800fa80:	4810      	ldr	r0, [pc, #64]	; (800fac4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800fa82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fa86:	3104      	adds	r1, #4
 800fa88:	f7fe b904 	b.w	800dc94 <vListInsertEnd>
 800fa8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa90:	f383 8811 	msr	BASEPRI, r3
 800fa94:	f3bf 8f6f 	isb	sy
 800fa98:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800fa9c:	e7fe      	b.n	800fa9c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fa9e:	4b0a      	ldr	r3, [pc, #40]	; (800fac8 <vTaskPlaceOnEventListRestricted+0x8c>)
 800faa0:	6818      	ldr	r0, [r3, #0]
 800faa2:	6831      	ldr	r1, [r6, #0]
 800faa4:	3104      	adds	r1, #4
 800faa6:	f7fe f905 	bl	800dcb4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800faaa:	4b08      	ldr	r3, [pc, #32]	; (800facc <vTaskPlaceOnEventListRestricted+0x90>)
 800faac:	681a      	ldr	r2, [r3, #0]
 800faae:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800fab0:	bf38      	it	cc
 800fab2:	601c      	strcc	r4, [r3, #0]
	}
 800fab4:	bd70      	pop	{r4, r5, r6, pc}
 800fab6:	bf00      	nop
 800fab8:	20012780 	.word	0x20012780
 800fabc:	20012c74 	.word	0x20012c74
 800fac0:	20012788 	.word	0x20012788
 800fac4:	20012c4c 	.word	0x20012c4c
 800fac8:	20012784 	.word	0x20012784
 800facc:	20012c28 	.word	0x20012c28

0800fad0 <xTaskRemoveFromEventList>:
{
 800fad0:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fad2:	68c3      	ldr	r3, [r0, #12]
 800fad4:	68dc      	ldr	r4, [r3, #12]
{
 800fad6:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800fad8:	2c00      	cmp	r4, #0
 800fada:	d02b      	beq.n	800fb34 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800fadc:	f104 0518 	add.w	r5, r4, #24
 800fae0:	4628      	mov	r0, r5
 800fae2:	f7fe f8ff 	bl	800dce4 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fae6:	4b18      	ldr	r3, [pc, #96]	; (800fb48 <xTaskRemoveFromEventList+0x78>)
 800fae8:	681b      	ldr	r3, [r3, #0]
 800faea:	b17b      	cbz	r3, 800fb0c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800faec:	4817      	ldr	r0, [pc, #92]	; (800fb4c <xTaskRemoveFromEventList+0x7c>)
 800faee:	4629      	mov	r1, r5
 800faf0:	f7fe f8d0 	bl	800dc94 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800faf4:	4b16      	ldr	r3, [pc, #88]	; (800fb50 <xTaskRemoveFromEventList+0x80>)
 800faf6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800faf8:	681b      	ldr	r3, [r3, #0]
 800fafa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fafc:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800fafe:	bf85      	ittet	hi
 800fb00:	4b14      	ldrhi	r3, [pc, #80]	; (800fb54 <xTaskRemoveFromEventList+0x84>)
 800fb02:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800fb04:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800fb06:	6018      	strhi	r0, [r3, #0]
}
 800fb08:	b003      	add	sp, #12
 800fb0a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800fb0c:	1d21      	adds	r1, r4, #4
 800fb0e:	4608      	mov	r0, r1
 800fb10:	9101      	str	r1, [sp, #4]
 800fb12:	f7fe f8e7 	bl	800dce4 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800fb16:	4a10      	ldr	r2, [pc, #64]	; (800fb58 <xTaskRemoveFromEventList+0x88>)
 800fb18:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fb1a:	6810      	ldr	r0, [r2, #0]
 800fb1c:	9901      	ldr	r1, [sp, #4]
 800fb1e:	4283      	cmp	r3, r0
 800fb20:	480e      	ldr	r0, [pc, #56]	; (800fb5c <xTaskRemoveFromEventList+0x8c>)
 800fb22:	bf88      	it	hi
 800fb24:	6013      	strhi	r3, [r2, #0]
 800fb26:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fb2a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800fb2e:	f7fe f8b1 	bl	800dc94 <vListInsertEnd>
 800fb32:	e7df      	b.n	800faf4 <xTaskRemoveFromEventList+0x24>
 800fb34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb38:	f383 8811 	msr	BASEPRI, r3
 800fb3c:	f3bf 8f6f 	isb	sy
 800fb40:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800fb44:	e7fe      	b.n	800fb44 <xTaskRemoveFromEventList+0x74>
 800fb46:	bf00      	nop
 800fb48:	20012bf4 	.word	0x20012bf4
 800fb4c:	20012c34 	.word	0x20012c34
 800fb50:	20012780 	.word	0x20012780
 800fb54:	20012c78 	.word	0x20012c78
 800fb58:	20012bfc 	.word	0x20012bfc
 800fb5c:	2001278c 	.word	0x2001278c

0800fb60 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fb60:	4a03      	ldr	r2, [pc, #12]	; (800fb70 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fb62:	4b04      	ldr	r3, [pc, #16]	; (800fb74 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fb64:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fb66:	681b      	ldr	r3, [r3, #0]
 800fb68:	e9c0 2300 	strd	r2, r3, [r0]
}
 800fb6c:	4770      	bx	lr
 800fb6e:	bf00      	nop
 800fb70:	20012c2c 	.word	0x20012c2c
 800fb74:	20012c74 	.word	0x20012c74

0800fb78 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800fb78:	b328      	cbz	r0, 800fbc6 <xTaskCheckForTimeOut+0x4e>
{
 800fb7a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fb7c:	460d      	mov	r5, r1
 800fb7e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800fb80:	b1c1      	cbz	r1, 800fbb4 <xTaskCheckForTimeOut+0x3c>
 800fb82:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800fb84:	f7fe f926 	bl	800ddd4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800fb88:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800fb8a:	4a1d      	ldr	r2, [pc, #116]	; (800fc00 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800fb8c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800fb8e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800fb90:	d030      	beq.n	800fbf4 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800fb92:	f8df c070 	ldr.w	ip, [pc, #112]	; 800fc04 <xTaskCheckForTimeOut+0x8c>
 800fb96:	e9d4 6000 	ldrd	r6, r0, [r4]
 800fb9a:	f8dc 7000 	ldr.w	r7, [ip]
 800fb9e:	42be      	cmp	r6, r7
 800fba0:	d01a      	beq.n	800fbd8 <xTaskCheckForTimeOut+0x60>
 800fba2:	4288      	cmp	r0, r1
 800fba4:	d818      	bhi.n	800fbd8 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800fba6:	2001      	movs	r0, #1
 800fba8:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800fbaa:	f7fe f935 	bl	800de18 <vPortExitCritical>
}
 800fbae:	9801      	ldr	r0, [sp, #4]
 800fbb0:	b003      	add	sp, #12
 800fbb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fbb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fbb8:	f383 8811 	msr	BASEPRI, r3
 800fbbc:	f3bf 8f6f 	isb	sy
 800fbc0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800fbc4:	e7fe      	b.n	800fbc4 <xTaskCheckForTimeOut+0x4c>
 800fbc6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fbca:	f383 8811 	msr	BASEPRI, r3
 800fbce:	f3bf 8f6f 	isb	sy
 800fbd2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800fbd6:	e7fe      	b.n	800fbd6 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800fbd8:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800fbdc:	4573      	cmp	r3, lr
 800fbde:	d90b      	bls.n	800fbf8 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800fbe0:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fbe2:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fbe6:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800fbe8:	4403      	add	r3, r0
 800fbea:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800fbec:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fbee:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800fbf2:	e7d9      	b.n	800fba8 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800fbf4:	2000      	movs	r0, #0
 800fbf6:	e7d7      	b.n	800fba8 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800fbf8:	2300      	movs	r3, #0
 800fbfa:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800fbfc:	2001      	movs	r0, #1
 800fbfe:	e7d3      	b.n	800fba8 <xTaskCheckForTimeOut+0x30>
 800fc00:	20012c74 	.word	0x20012c74
 800fc04:	20012c2c 	.word	0x20012c2c

0800fc08 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800fc08:	4b01      	ldr	r3, [pc, #4]	; (800fc10 <vTaskMissedYield+0x8>)
 800fc0a:	2201      	movs	r2, #1
 800fc0c:	601a      	str	r2, [r3, #0]
}
 800fc0e:	4770      	bx	lr
 800fc10:	20012c78 	.word	0x20012c78

0800fc14 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800fc14:	4b05      	ldr	r3, [pc, #20]	; (800fc2c <xTaskGetSchedulerState+0x18>)
 800fc16:	681b      	ldr	r3, [r3, #0]
 800fc18:	b133      	cbz	r3, 800fc28 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fc1a:	4b05      	ldr	r3, [pc, #20]	; (800fc30 <xTaskGetSchedulerState+0x1c>)
 800fc1c:	6818      	ldr	r0, [r3, #0]
 800fc1e:	fab0 f080 	clz	r0, r0
 800fc22:	0940      	lsrs	r0, r0, #5
 800fc24:	0040      	lsls	r0, r0, #1
 800fc26:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800fc28:	2001      	movs	r0, #1
	}
 800fc2a:	4770      	bx	lr
 800fc2c:	20012c48 	.word	0x20012c48
 800fc30:	20012bf4 	.word	0x20012bf4

0800fc34 <xTaskPriorityInherit>:
	{
 800fc34:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800fc36:	4604      	mov	r4, r0
	{
 800fc38:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800fc3a:	b1c8      	cbz	r0, 800fc70 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800fc3c:	4d1d      	ldr	r5, [pc, #116]	; (800fcb4 <xTaskPriorityInherit+0x80>)
 800fc3e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800fc40:	682a      	ldr	r2, [r5, #0]
 800fc42:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fc44:	4293      	cmp	r3, r2
 800fc46:	d215      	bcs.n	800fc74 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fc48:	6982      	ldr	r2, [r0, #24]
 800fc4a:	2a00      	cmp	r2, #0
 800fc4c:	db04      	blt.n	800fc58 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fc4e:	682a      	ldr	r2, [r5, #0]
 800fc50:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fc52:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800fc56:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800fc58:	4e17      	ldr	r6, [pc, #92]	; (800fcb8 <xTaskPriorityInherit+0x84>)
 800fc5a:	6962      	ldr	r2, [r4, #20]
 800fc5c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fc60:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800fc64:	429a      	cmp	r2, r3
 800fc66:	d00e      	beq.n	800fc86 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fc68:	682b      	ldr	r3, [r5, #0]
 800fc6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fc6c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800fc6e:	2001      	movs	r0, #1
	}
 800fc70:	b002      	add	sp, #8
 800fc72:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800fc74:	682b      	ldr	r3, [r5, #0]
 800fc76:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800fc78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fc7a:	4298      	cmp	r0, r3
 800fc7c:	bf2c      	ite	cs
 800fc7e:	2000      	movcs	r0, #0
 800fc80:	2001      	movcc	r0, #1
	}
 800fc82:	b002      	add	sp, #8
 800fc84:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fc86:	1d21      	adds	r1, r4, #4
 800fc88:	4608      	mov	r0, r1
 800fc8a:	9101      	str	r1, [sp, #4]
 800fc8c:	f7fe f82a 	bl	800dce4 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fc90:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fc92:	4b0a      	ldr	r3, [pc, #40]	; (800fcbc <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fc94:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fc96:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fc98:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fc9a:	4290      	cmp	r0, r2
 800fc9c:	bf88      	it	hi
 800fc9e:	6018      	strhi	r0, [r3, #0]
 800fca0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800fca4:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800fca8:	9901      	ldr	r1, [sp, #4]
 800fcaa:	f7fd fff3 	bl	800dc94 <vListInsertEnd>
				xReturn = pdTRUE;
 800fcae:	2001      	movs	r0, #1
 800fcb0:	e7de      	b.n	800fc70 <xTaskPriorityInherit+0x3c>
 800fcb2:	bf00      	nop
 800fcb4:	20012780 	.word	0x20012780
 800fcb8:	2001278c 	.word	0x2001278c
 800fcbc:	20012bfc 	.word	0x20012bfc

0800fcc0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800fcc0:	b318      	cbz	r0, 800fd0a <xTaskPriorityDisinherit+0x4a>
	{
 800fcc2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800fcc4:	4b1e      	ldr	r3, [pc, #120]	; (800fd40 <xTaskPriorityDisinherit+0x80>)
 800fcc6:	681c      	ldr	r4, [r3, #0]
 800fcc8:	4284      	cmp	r4, r0
	{
 800fcca:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800fccc:	d008      	beq.n	800fce0 <xTaskPriorityDisinherit+0x20>
 800fcce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fcd2:	f383 8811 	msr	BASEPRI, r3
 800fcd6:	f3bf 8f6f 	isb	sy
 800fcda:	f3bf 8f4f 	dsb	sy
 800fcde:	e7fe      	b.n	800fcde <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800fce0:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800fce2:	b14b      	cbz	r3, 800fcf8 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fce4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800fce6:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800fce8:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fcea:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800fcec:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fcee:	d000      	beq.n	800fcf2 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800fcf0:	b16b      	cbz	r3, 800fd0e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800fcf2:	2000      	movs	r0, #0
	}
 800fcf4:	b002      	add	sp, #8
 800fcf6:	bd10      	pop	{r4, pc}
 800fcf8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fcfc:	f383 8811 	msr	BASEPRI, r3
 800fd00:	f3bf 8f6f 	isb	sy
 800fd04:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800fd08:	e7fe      	b.n	800fd08 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800fd0a:	2000      	movs	r0, #0
	}
 800fd0c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fd0e:	1d21      	adds	r1, r4, #4
 800fd10:	4608      	mov	r0, r1
 800fd12:	9101      	str	r1, [sp, #4]
 800fd14:	f7fd ffe6 	bl	800dce4 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800fd18:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800fd1a:	4a0a      	ldr	r2, [pc, #40]	; (800fd44 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800fd1c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fd1e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800fd22:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800fd24:	6810      	ldr	r0, [r2, #0]
 800fd26:	9901      	ldr	r1, [sp, #4]
 800fd28:	4283      	cmp	r3, r0
 800fd2a:	4807      	ldr	r0, [pc, #28]	; (800fd48 <xTaskPriorityDisinherit+0x88>)
 800fd2c:	bf88      	it	hi
 800fd2e:	6013      	strhi	r3, [r2, #0]
 800fd30:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fd34:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800fd38:	f7fd ffac 	bl	800dc94 <vListInsertEnd>
					xReturn = pdTRUE;
 800fd3c:	2001      	movs	r0, #1
		return xReturn;
 800fd3e:	e7d9      	b.n	800fcf4 <xTaskPriorityDisinherit+0x34>
 800fd40:	20012780 	.word	0x20012780
 800fd44:	20012bfc 	.word	0x20012bfc
 800fd48:	2001278c 	.word	0x2001278c

0800fd4c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800fd4c:	2800      	cmp	r0, #0
 800fd4e:	d041      	beq.n	800fdd4 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800fd50:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800fd52:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800fd54:	b083      	sub	sp, #12
 800fd56:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800fd58:	b153      	cbz	r3, 800fd70 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800fd5a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800fd5c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fd5e:	4281      	cmp	r1, r0
 800fd60:	bf38      	it	cc
 800fd62:	4601      	movcc	r1, r0
 800fd64:	428a      	cmp	r2, r1
 800fd66:	d001      	beq.n	800fd6c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800fd68:	2b01      	cmp	r3, #1
 800fd6a:	d00a      	beq.n	800fd82 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800fd6c:	b003      	add	sp, #12
 800fd6e:	bd30      	pop	{r4, r5, pc}
 800fd70:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd74:	f383 8811 	msr	BASEPRI, r3
 800fd78:	f3bf 8f6f 	isb	sy
 800fd7c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800fd80:	e7fe      	b.n	800fd80 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800fd82:	4b19      	ldr	r3, [pc, #100]	; (800fde8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800fd84:	681b      	ldr	r3, [r3, #0]
 800fd86:	42a3      	cmp	r3, r4
 800fd88:	d025      	beq.n	800fdd6 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fd8a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800fd8c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fd8e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fd90:	bfa8      	it	ge
 800fd92:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fd96:	4d15      	ldr	r5, [pc, #84]	; (800fdec <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fd98:	bfa8      	it	ge
 800fd9a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fd9c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800fda0:	6961      	ldr	r1, [r4, #20]
 800fda2:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800fda6:	4299      	cmp	r1, r3
 800fda8:	d1e0      	bne.n	800fd6c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fdaa:	1d21      	adds	r1, r4, #4
 800fdac:	4608      	mov	r0, r1
 800fdae:	9101      	str	r1, [sp, #4]
 800fdb0:	f7fd ff98 	bl	800dce4 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800fdb4:	4b0e      	ldr	r3, [pc, #56]	; (800fdf0 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800fdb6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800fdb8:	681a      	ldr	r2, [r3, #0]
 800fdba:	9901      	ldr	r1, [sp, #4]
 800fdbc:	4290      	cmp	r0, r2
 800fdbe:	bf88      	it	hi
 800fdc0:	6018      	strhi	r0, [r3, #0]
 800fdc2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800fdc6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800fdca:	b003      	add	sp, #12
 800fdcc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800fdd0:	f7fd bf60 	b.w	800dc94 <vListInsertEnd>
 800fdd4:	4770      	bx	lr
 800fdd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdda:	f383 8811 	msr	BASEPRI, r3
 800fdde:	f3bf 8f6f 	isb	sy
 800fde2:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800fde6:	e7fe      	b.n	800fde6 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800fde8:	20012780 	.word	0x20012780
 800fdec:	2001278c 	.word	0x2001278c
 800fdf0:	20012bfc 	.word	0x20012bfc

0800fdf4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800fdf4:	4b04      	ldr	r3, [pc, #16]	; (800fe08 <pvTaskIncrementMutexHeldCount+0x14>)
 800fdf6:	681a      	ldr	r2, [r3, #0]
 800fdf8:	b11a      	cbz	r2, 800fe02 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800fdfa:	6819      	ldr	r1, [r3, #0]
 800fdfc:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800fdfe:	3201      	adds	r2, #1
 800fe00:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800fe02:	6818      	ldr	r0, [r3, #0]
	}
 800fe04:	4770      	bx	lr
 800fe06:	bf00      	nop
 800fe08:	20012780 	.word	0x20012780

0800fe0c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800fe0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fe10:	4e22      	ldr	r6, [pc, #136]	; (800fe9c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800fe12:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800fea4 <prvSwitchTimerLists+0x98>
{
 800fe16:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800fe18:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800fe1c:	e00d      	b.n	800fe3a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fe1e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fe20:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fe22:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800fe24:	1d25      	adds	r5, r4, #4
 800fe26:	4628      	mov	r0, r5
 800fe28:	f7fd ff5c 	bl	800dce4 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800fe2c:	6a23      	ldr	r3, [r4, #32]
 800fe2e:	4620      	mov	r0, r4
 800fe30:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800fe32:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800fe36:	075b      	lsls	r3, r3, #29
 800fe38:	d40a      	bmi.n	800fe50 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800fe3a:	6833      	ldr	r3, [r6, #0]
 800fe3c:	681a      	ldr	r2, [r3, #0]
 800fe3e:	2a00      	cmp	r2, #0
 800fe40:	d1ed      	bne.n	800fe1e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800fe42:	4a17      	ldr	r2, [pc, #92]	; (800fea0 <prvSwitchTimerLists+0x94>)
 800fe44:	6811      	ldr	r1, [r2, #0]
 800fe46:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800fe48:	6013      	str	r3, [r2, #0]
}
 800fe4a:	b005      	add	sp, #20
 800fe4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800fe50:	69a3      	ldr	r3, [r4, #24]
 800fe52:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800fe54:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fe56:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800fe58:	d205      	bcs.n	800fe66 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fe5a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800fe5c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800fe5e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fe60:	f7fd ff28 	bl	800dcb4 <vListInsert>
 800fe64:	e7e9      	b.n	800fe3a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800fe66:	f8d9 3000 	ldr.w	r3, [r9]
 800fe6a:	b16b      	cbz	r3, 800fe88 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800fe6c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800fe70:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800fe72:	f7ff fecf 	bl	800fc14 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800fe76:	2300      	movs	r3, #0
 800fe78:	f8d9 0000 	ldr.w	r0, [r9]
 800fe7c:	461a      	mov	r2, r3
 800fe7e:	4669      	mov	r1, sp
 800fe80:	f7fe fa9c 	bl	800e3bc <xQueueGenericSend>
				configASSERT( xResult );
 800fe84:	2800      	cmp	r0, #0
 800fe86:	d1d8      	bne.n	800fe3a <prvSwitchTimerLists+0x2e>
 800fe88:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe8c:	f383 8811 	msr	BASEPRI, r3
 800fe90:	f3bf 8f6f 	isb	sy
 800fe94:	f3bf 8f4f 	dsb	sy
 800fe98:	e7fe      	b.n	800fe98 <prvSwitchTimerLists+0x8c>
 800fe9a:	bf00      	nop
 800fe9c:	20012c7c 	.word	0x20012c7c
 800fea0:	20012c80 	.word	0x20012c80
 800fea4:	20012da0 	.word	0x20012da0

0800fea8 <prvTimerTask>:
{
 800fea8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800feac:	4e9b      	ldr	r6, [pc, #620]	; (801011c <prvTimerTask+0x274>)
 800feae:	4d9c      	ldr	r5, [pc, #624]	; (8010120 <prvTimerTask+0x278>)
 800feb0:	4c9c      	ldr	r4, [pc, #624]	; (8010124 <prvTimerTask+0x27c>)
 800feb2:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800feb4:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800feb8:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800febc:	6833      	ldr	r3, [r6, #0]
 800febe:	681f      	ldr	r7, [r3, #0]
 800fec0:	2f00      	cmp	r7, #0
 800fec2:	f000 80a8 	beq.w	8010016 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fec6:	68db      	ldr	r3, [r3, #12]
 800fec8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800feca:	f7ff fcf9 	bl	800f8c0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800fece:	f7ff fd0f 	bl	800f8f0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800fed2:	682a      	ldr	r2, [r5, #0]
 800fed4:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800fed6:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800fed8:	f0c0 80ae 	bcc.w	8010038 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800fedc:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800fede:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800fee0:	f240 80b4 	bls.w	801004c <prvTimerTask+0x1a4>
 800fee4:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800fee6:	6820      	ldr	r0, [r4, #0]
 800fee8:	eba7 010a 	sub.w	r1, r7, sl
 800feec:	f7ff f89a 	bl	800f024 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800fef0:	f7ff fcee 	bl	800f8d0 <xTaskResumeAll>
 800fef4:	b928      	cbnz	r0, 800ff02 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800fef6:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800fefa:	f3bf 8f4f 	dsb	sy
 800fefe:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800ff02:	6820      	ldr	r0, [r4, #0]
 800ff04:	2200      	movs	r2, #0
 800ff06:	a902      	add	r1, sp, #8
 800ff08:	f7fe fc94 	bl	800e834 <xQueueReceive>
 800ff0c:	2800      	cmp	r0, #0
 800ff0e:	d0d5      	beq.n	800febc <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ff10:	9b02      	ldr	r3, [sp, #8]
 800ff12:	2b00      	cmp	r3, #0
 800ff14:	db76      	blt.n	8010004 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800ff16:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800ff18:	697b      	ldr	r3, [r7, #20]
 800ff1a:	b113      	cbz	r3, 800ff22 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ff1c:	1d38      	adds	r0, r7, #4
 800ff1e:	f7fd fee1 	bl	800dce4 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800ff22:	f7ff fce5 	bl	800f8f0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ff26:	682b      	ldr	r3, [r5, #0]
 800ff28:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800ff2a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800ff2c:	f0c0 808b 	bcc.w	8010046 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800ff30:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800ff32:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800ff36:	2b09      	cmp	r3, #9
 800ff38:	d8e3      	bhi.n	800ff02 <prvTimerTask+0x5a>
 800ff3a:	e8df f003 	tbb	[pc, r3]
 800ff3e:	0505      	.short	0x0505
 800ff40:	5a3d5305 	.word	0x5a3d5305
 800ff44:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ff48:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800ff4c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ff4e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ff50:	f043 0301 	orr.w	r3, r3, #1
 800ff54:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800ff58:	9b03      	ldr	r3, [sp, #12]
 800ff5a:	1899      	adds	r1, r3, r2
 800ff5c:	bf2c      	ite	cs
 800ff5e:	2001      	movcs	r0, #1
 800ff60:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800ff62:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800ff64:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800ff66:	f200 808c 	bhi.w	8010082 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ff6a:	ebaa 0303 	sub.w	r3, sl, r3
 800ff6e:	429a      	cmp	r2, r3
 800ff70:	d832      	bhi.n	800ffd8 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ff72:	6a3b      	ldr	r3, [r7, #32]
 800ff74:	4638      	mov	r0, r7
 800ff76:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ff78:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800ff7c:	075b      	lsls	r3, r3, #29
 800ff7e:	d5c0      	bpl.n	800ff02 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800ff80:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800ff82:	9903      	ldr	r1, [sp, #12]
 800ff84:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800ff86:	b172      	cbz	r2, 800ffa6 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800ff88:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800ff8a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800ff8e:	2300      	movs	r3, #0
 800ff90:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800ff92:	f7ff fe3f 	bl	800fc14 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800ff96:	2300      	movs	r3, #0
 800ff98:	6820      	ldr	r0, [r4, #0]
 800ff9a:	461a      	mov	r2, r3
 800ff9c:	a906      	add	r1, sp, #24
 800ff9e:	f7fe fa0d 	bl	800e3bc <xQueueGenericSend>
							configASSERT( xResult );
 800ffa2:	2800      	cmp	r0, #0
 800ffa4:	d1ad      	bne.n	800ff02 <prvTimerTask+0x5a>
 800ffa6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ffaa:	f383 8811 	msr	BASEPRI, r3
 800ffae:	f3bf 8f6f 	isb	sy
 800ffb2:	f3bf 8f4f 	dsb	sy
 800ffb6:	e7fe      	b.n	800ffb6 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ffb8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800ffbc:	f043 0301 	orr.w	r3, r3, #1
 800ffc0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800ffc4:	9b03      	ldr	r3, [sp, #12]
 800ffc6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800ffc8:	2b00      	cmp	r3, #0
 800ffca:	f000 809d 	beq.w	8010108 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800ffce:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800ffd0:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800ffd2:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ffd4:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800ffd6:	d85e      	bhi.n	8010096 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800ffd8:	4b53      	ldr	r3, [pc, #332]	; (8010128 <prvTimerTask+0x280>)
 800ffda:	1d39      	adds	r1, r7, #4
 800ffdc:	6818      	ldr	r0, [r3, #0]
 800ffde:	f7fd fe69 	bl	800dcb4 <vListInsert>
	return xProcessTimerNow;
 800ffe2:	e78e      	b.n	800ff02 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ffe4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800ffe8:	f023 0301 	bic.w	r3, r3, #1
 800ffec:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800fff0:	e787      	b.n	800ff02 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800fff2:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800fff6:	079a      	lsls	r2, r3, #30
 800fff8:	d552      	bpl.n	80100a0 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800fffa:	f023 0301 	bic.w	r3, r3, #1
 800fffe:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 8010002:	e77e      	b.n	800ff02 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8010004:	9b03      	ldr	r3, [sp, #12]
 8010006:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801000a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 801000c:	9b02      	ldr	r3, [sp, #8]
 801000e:	2b00      	cmp	r3, #0
 8010010:	f6ff af77 	blt.w	800ff02 <prvTimerTask+0x5a>
 8010014:	e77f      	b.n	800ff16 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 8010016:	f7ff fc53 	bl	800f8c0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801001a:	f7ff fc69 	bl	800f8f0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 801001e:	682a      	ldr	r2, [r5, #0]
 8010020:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 8010022:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8010024:	d808      	bhi.n	8010038 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8010026:	4b40      	ldr	r3, [pc, #256]	; (8010128 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 8010028:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 801002c:	681a      	ldr	r2, [r3, #0]
 801002e:	6812      	ldr	r2, [r2, #0]
 8010030:	fab2 f282 	clz	r2, r2
 8010034:	0952      	lsrs	r2, r2, #5
 8010036:	e756      	b.n	800fee6 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 8010038:	f7ff fee8 	bl	800fe0c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 801003c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 8010040:	f7ff fc46 	bl	800f8d0 <xTaskResumeAll>
 8010044:	e75d      	b.n	800ff02 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 8010046:	f7ff fee1 	bl	800fe0c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 801004a:	e771      	b.n	800ff30 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 801004c:	f7ff fc40 	bl	800f8d0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010050:	6832      	ldr	r2, [r6, #0]
 8010052:	68d2      	ldr	r2, [r2, #12]
 8010054:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8010058:	f10b 0104 	add.w	r1, fp, #4
 801005c:	4608      	mov	r0, r1
 801005e:	9101      	str	r1, [sp, #4]
 8010060:	f7fd fe40 	bl	800dce4 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010064:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 8010068:	9901      	ldr	r1, [sp, #4]
 801006a:	f010 0f04 	tst.w	r0, #4
 801006e:	d11b      	bne.n	80100a8 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8010070:	f020 0001 	bic.w	r0, r0, #1
 8010074:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8010078:	f8db 3020 	ldr.w	r3, [fp, #32]
 801007c:	4658      	mov	r0, fp
 801007e:	4798      	blx	r3
}
 8010080:	e73f      	b.n	800ff02 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8010082:	4553      	cmp	r3, sl
 8010084:	d902      	bls.n	801008c <prvTimerTask+0x1e4>
 8010086:	2800      	cmp	r0, #0
 8010088:	f43f af73 	beq.w	800ff72 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801008c:	6830      	ldr	r0, [r6, #0]
 801008e:	1d39      	adds	r1, r7, #4
 8010090:	f7fd fe10 	bl	800dcb4 <vListInsert>
	return xProcessTimerNow;
 8010094:	e735      	b.n	800ff02 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8010096:	6830      	ldr	r0, [r6, #0]
 8010098:	1d39      	adds	r1, r7, #4
 801009a:	f7fd fe0b 	bl	800dcb4 <vListInsert>
 801009e:	e730      	b.n	800ff02 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 80100a0:	4638      	mov	r0, r7
 80100a2:	f7fd fd83 	bl	800dbac <vPortFree>
 80100a6:	e72c      	b.n	800ff02 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80100a8:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80100ac:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80100b0:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 80100b2:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80100b4:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 80100b8:	d903      	bls.n	80100c2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80100ba:	6830      	ldr	r0, [r6, #0]
 80100bc:	f7fd fdfa 	bl	800dcb4 <vListInsert>
	return xProcessTimerNow;
 80100c0:	e7da      	b.n	8010078 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80100c2:	ebaa 0307 	sub.w	r3, sl, r7
 80100c6:	429a      	cmp	r2, r3
 80100c8:	d819      	bhi.n	80100fe <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 80100ca:	6823      	ldr	r3, [r4, #0]
 80100cc:	b173      	cbz	r3, 80100ec <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 80100ce:	2300      	movs	r3, #0
 80100d0:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80100d2:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80100d4:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80100d8:	f7ff fd9c 	bl	800fc14 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80100dc:	2300      	movs	r3, #0
 80100de:	6820      	ldr	r0, [r4, #0]
 80100e0:	461a      	mov	r2, r3
 80100e2:	a906      	add	r1, sp, #24
 80100e4:	f7fe f96a 	bl	800e3bc <xQueueGenericSend>
			configASSERT( xResult );
 80100e8:	2800      	cmp	r0, #0
 80100ea:	d1c5      	bne.n	8010078 <prvTimerTask+0x1d0>
 80100ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100f0:	f383 8811 	msr	BASEPRI, r3
 80100f4:	f3bf 8f6f 	isb	sy
 80100f8:	f3bf 8f4f 	dsb	sy
 80100fc:	e7fe      	b.n	80100fc <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80100fe:	4b0a      	ldr	r3, [pc, #40]	; (8010128 <prvTimerTask+0x280>)
 8010100:	6818      	ldr	r0, [r3, #0]
 8010102:	f7fd fdd7 	bl	800dcb4 <vListInsert>
	return xProcessTimerNow;
 8010106:	e7b7      	b.n	8010078 <prvTimerTask+0x1d0>
 8010108:	f04f 0350 	mov.w	r3, #80	; 0x50
 801010c:	f383 8811 	msr	BASEPRI, r3
 8010110:	f3bf 8f6f 	isb	sy
 8010114:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8010118:	e7fe      	b.n	8010118 <prvTimerTask+0x270>
 801011a:	bf00      	nop
 801011c:	20012c7c 	.word	0x20012c7c
 8010120:	20012d4c 	.word	0x20012d4c
 8010124:	20012da0 	.word	0x20012da0
 8010128:	20012c80 	.word	0x20012c80

0801012c <xTimerCreateTimerTask>:
{
 801012c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 801012e:	4c23      	ldr	r4, [pc, #140]	; (80101bc <xTimerCreateTimerTask+0x90>)
{
 8010130:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 8010132:	f7fd fe4f 	bl	800ddd4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8010136:	6825      	ldr	r5, [r4, #0]
 8010138:	b335      	cbz	r5, 8010188 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 801013a:	f7fd fe6d 	bl	800de18 <vPortExitCritical>
	if( xTimerQueue != NULL )
 801013e:	6823      	ldr	r3, [r4, #0]
 8010140:	b1cb      	cbz	r3, 8010176 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8010142:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8010144:	aa07      	add	r2, sp, #28
 8010146:	a906      	add	r1, sp, #24
 8010148:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 801014a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 801014e:	f7fd fc61 	bl	800da14 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8010152:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 8010156:	2302      	movs	r3, #2
 8010158:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801015c:	9300      	str	r3, [sp, #0]
 801015e:	9a07      	ldr	r2, [sp, #28]
 8010160:	4917      	ldr	r1, [pc, #92]	; (80101c0 <xTimerCreateTimerTask+0x94>)
 8010162:	4818      	ldr	r0, [pc, #96]	; (80101c4 <xTimerCreateTimerTask+0x98>)
 8010164:	4623      	mov	r3, r4
 8010166:	f7ff fa6d 	bl	800f644 <xTaskCreateStatic>
 801016a:	4b17      	ldr	r3, [pc, #92]	; (80101c8 <xTimerCreateTimerTask+0x9c>)
 801016c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 801016e:	b110      	cbz	r0, 8010176 <xTimerCreateTimerTask+0x4a>
}
 8010170:	2001      	movs	r0, #1
 8010172:	b009      	add	sp, #36	; 0x24
 8010174:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010176:	f04f 0350 	mov.w	r3, #80	; 0x50
 801017a:	f383 8811 	msr	BASEPRI, r3
 801017e:	f3bf 8f6f 	isb	sy
 8010182:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8010186:	e7fe      	b.n	8010186 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 8010188:	4f10      	ldr	r7, [pc, #64]	; (80101cc <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 801018a:	4e11      	ldr	r6, [pc, #68]	; (80101d0 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 801018c:	4638      	mov	r0, r7
 801018e:	f7fd fd71 	bl	800dc74 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8010192:	4630      	mov	r0, r6
 8010194:	f7fd fd6e 	bl	800dc74 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8010198:	4a0e      	ldr	r2, [pc, #56]	; (80101d4 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 801019a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 801019c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 801019e:	4a0e      	ldr	r2, [pc, #56]	; (80101d8 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80101a0:	4b0e      	ldr	r3, [pc, #56]	; (80101dc <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 80101a2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80101a4:	2110      	movs	r1, #16
 80101a6:	4a0e      	ldr	r2, [pc, #56]	; (80101e0 <xTimerCreateTimerTask+0xb4>)
 80101a8:	200a      	movs	r0, #10
 80101aa:	f7fd ffb1 	bl	800e110 <xQueueGenericCreateStatic>
 80101ae:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 80101b0:	2800      	cmp	r0, #0
 80101b2:	d0c2      	beq.n	801013a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 80101b4:	490b      	ldr	r1, [pc, #44]	; (80101e4 <xTimerCreateTimerTask+0xb8>)
 80101b6:	f7fe ff0d 	bl	800efd4 <vQueueAddToRegistry>
 80101ba:	e7be      	b.n	801013a <xTimerCreateTimerTask+0xe>
 80101bc:	20012da0 	.word	0x20012da0
 80101c0:	0802ea8c 	.word	0x0802ea8c
 80101c4:	0800fea9 	.word	0x0800fea9
 80101c8:	20012da4 	.word	0x20012da4
 80101cc:	20012d24 	.word	0x20012d24
 80101d0:	20012d38 	.word	0x20012d38
 80101d4:	20012c7c 	.word	0x20012c7c
 80101d8:	20012c80 	.word	0x20012c80
 80101dc:	20012d50 	.word	0x20012d50
 80101e0:	20012c84 	.word	0x20012c84
 80101e4:	0802ea84 	.word	0x0802ea84

080101e8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80101e8:	8880      	ldrh	r0, [r0, #4]
 80101ea:	4770      	bx	lr

080101ec <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80101ec:	b570      	push	{r4, r5, r6, lr}
 80101ee:	6803      	ldr	r3, [r0, #0]
 80101f0:	4605      	mov	r5, r0
 80101f2:	460c      	mov	r4, r1
 80101f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80101f6:	2100      	movs	r1, #0
 80101f8:	4798      	blx	r3
 80101fa:	682b      	ldr	r3, [r5, #0]
 80101fc:	4606      	mov	r6, r0
 80101fe:	6a1b      	ldr	r3, [r3, #32]
 8010200:	4628      	mov	r0, r5
 8010202:	4798      	blx	r3
 8010204:	1ba4      	subs	r4, r4, r6
 8010206:	b2a4      	uxth	r4, r4
 8010208:	fbb4 f0f0 	udiv	r0, r4, r0
 801020c:	bd70      	pop	{r4, r5, r6, pc}

0801020e <_ZN8touchgfx17AbstractPartition5clearEv>:
 801020e:	2300      	movs	r3, #0
 8010210:	8083      	strh	r3, [r0, #4]
 8010212:	4770      	bx	lr

08010214 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8010214:	b510      	push	{r4, lr}
 8010216:	6803      	ldr	r3, [r0, #0]
 8010218:	8881      	ldrh	r1, [r0, #4]
 801021a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801021c:	4604      	mov	r4, r0
 801021e:	4798      	blx	r3
 8010220:	88a3      	ldrh	r3, [r4, #4]
 8010222:	3301      	adds	r3, #1
 8010224:	80a3      	strh	r3, [r4, #4]
 8010226:	bd10      	pop	{r4, pc}

08010228 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8010228:	6803      	ldr	r3, [r0, #0]
 801022a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801022c:	4718      	bx	r3

0801022e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 801022e:	4770      	bx	lr

08010230 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8010230:	4a02      	ldr	r2, [pc, #8]	; (801023c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8010232:	6002      	str	r2, [r0, #0]
 8010234:	2200      	movs	r2, #0
 8010236:	8082      	strh	r2, [r0, #4]
 8010238:	4770      	bx	lr
 801023a:	bf00      	nop
 801023c:	0802ea9c 	.word	0x0802ea9c

08010240 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 8010240:	b510      	push	{r4, lr}
 8010242:	6803      	ldr	r3, [r0, #0]
 8010244:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010248:	4604      	mov	r4, r0
 801024a:	4798      	blx	r3
 801024c:	b110      	cbz	r0, 8010254 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 801024e:	4620      	mov	r0, r4
 8010250:	f7f1 fa1a 	bl	8001688 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8010254:	bd10      	pop	{r4, pc}

08010256 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8010256:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 801025a:	4770      	bx	lr

0801025c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 801025c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8010260:	4770      	bx	lr

08010262 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8010262:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8010266:	4770      	bx	lr

08010268 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8010268:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 801026c:	4770      	bx	lr

0801026e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 801026e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010270:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8010274:	461e      	mov	r6, r3
 8010276:	6803      	ldr	r3, [r0, #0]
 8010278:	460f      	mov	r7, r1
 801027a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801027e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8010282:	4604      	mov	r4, r0
 8010284:	4615      	mov	r5, r2
 8010286:	4798      	blx	r3
 8010288:	b93e      	cbnz	r6, 801029a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 801028a:	1bed      	subs	r5, r5, r7
 801028c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 8010290:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8010294:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8010298:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801029a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 801029e:	e7f7      	b.n	8010290 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

080102a0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 80102a0:	b510      	push	{r4, lr}
 80102a2:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80102a6:	600c      	str	r4, [r1, #0]
 80102a8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80102ac:	6011      	str	r1, [r2, #0]
 80102ae:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80102b2:	801a      	strh	r2, [r3, #0]
 80102b4:	9b02      	ldr	r3, [sp, #8]
 80102b6:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 80102ba:	801a      	strh	r2, [r3, #0]
 80102bc:	bd10      	pop	{r4, pc}

080102be <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 80102be:	b510      	push	{r4, lr}
 80102c0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80102c4:	600c      	str	r4, [r1, #0]
 80102c6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80102ca:	6011      	str	r1, [r2, #0]
 80102cc:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80102d0:	801a      	strh	r2, [r3, #0]
 80102d2:	bd10      	pop	{r4, pc}

080102d4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 80102d4:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80102d8:	600b      	str	r3, [r1, #0]
 80102da:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80102de:	6013      	str	r3, [r2, #0]
 80102e0:	4770      	bx	lr

080102e2 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 80102e2:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 80102e6:	4770      	bx	lr

080102e8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 80102e8:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 80102ec:	4770      	bx	lr

080102ee <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 80102ee:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 80102f2:	4770      	bx	lr

080102f4 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 80102f4:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 80102f8:	4770      	bx	lr

080102fa <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 80102fa:	4770      	bx	lr

080102fc <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 80102fc:	b510      	push	{r4, lr}
 80102fe:	21b4      	movs	r1, #180	; 0xb4
 8010300:	4604      	mov	r4, r0
 8010302:	f019 fc84 	bl	8029c0e <_ZdlPvj>
 8010306:	4620      	mov	r0, r4
 8010308:	bd10      	pop	{r4, pc}

0801030a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 801030a:	b570      	push	{r4, r5, r6, lr}
 801030c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8010310:	428d      	cmp	r5, r1
 8010312:	bfb8      	it	lt
 8010314:	460d      	movlt	r5, r1
 8010316:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801031a:	428d      	cmp	r5, r1
 801031c:	4604      	mov	r4, r0
 801031e:	bfa8      	it	ge
 8010320:	460d      	movge	r5, r1
 8010322:	4616      	mov	r6, r2
 8010324:	b99a      	cbnz	r2, 801034e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8010326:	6803      	ldr	r3, [r0, #0]
 8010328:	4629      	mov	r1, r5
 801032a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801032e:	4798      	blx	r3
 8010330:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010334:	b368      	cbz	r0, 8010392 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8010336:	6803      	ldr	r3, [r0, #0]
 8010338:	68db      	ldr	r3, [r3, #12]
 801033a:	4798      	blx	r3
 801033c:	b348      	cbz	r0, 8010392 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 801033e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010342:	6803      	ldr	r3, [r0, #0]
 8010344:	4621      	mov	r1, r4
 8010346:	689b      	ldr	r3, [r3, #8]
 8010348:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801034c:	4718      	bx	r3
 801034e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8010352:	2b00      	cmp	r3, #0
 8010354:	dd08      	ble.n	8010368 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8010356:	f005 fbe3 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
 801035a:	4621      	mov	r1, r4
 801035c:	3004      	adds	r0, #4
 801035e:	f005 fc2c 	bl	8015bba <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010362:	2300      	movs	r3, #0
 8010364:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010368:	6823      	ldr	r3, [r4, #0]
 801036a:	4620      	mov	r0, r4
 801036c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010370:	4798      	blx	r3
 8010372:	2300      	movs	r3, #0
 8010374:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8010378:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 801037c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8010380:	f005 fbce 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
 8010384:	4621      	mov	r1, r4
 8010386:	3004      	adds	r0, #4
 8010388:	f005 fcc0 	bl	8015d0c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 801038c:	2301      	movs	r3, #1
 801038e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010392:	bd70      	pop	{r4, r5, r6, pc}

08010394 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 8010394:	b510      	push	{r4, lr}
 8010396:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 801039a:	4299      	cmp	r1, r3
 801039c:	bfb8      	it	lt
 801039e:	4619      	movlt	r1, r3
 80103a0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80103a4:	4299      	cmp	r1, r3
 80103a6:	bfa8      	it	ge
 80103a8:	4619      	movge	r1, r3
 80103aa:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 80103ae:	428b      	cmp	r3, r1
 80103b0:	4604      	mov	r4, r0
 80103b2:	d010      	beq.n	80103d6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80103b4:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 80103b8:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 80103bc:	b158      	cbz	r0, 80103d6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80103be:	6803      	ldr	r3, [r0, #0]
 80103c0:	68db      	ldr	r3, [r3, #12]
 80103c2:	4798      	blx	r3
 80103c4:	b138      	cbz	r0, 80103d6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80103c6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 80103ca:	6803      	ldr	r3, [r0, #0]
 80103cc:	4621      	mov	r1, r4
 80103ce:	689b      	ldr	r3, [r3, #8]
 80103d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80103d4:	4718      	bx	r3
 80103d6:	bd10      	pop	{r4, pc}

080103d8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 80103d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80103da:	4604      	mov	r4, r0
 80103dc:	460d      	mov	r5, r1
 80103de:	b1a9      	cbz	r1, 801040c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 80103e0:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 80103e4:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 80103e8:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 80103ec:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 80103f0:	ab01      	add	r3, sp, #4
 80103f2:	1a12      	subs	r2, r2, r0
 80103f4:	1b89      	subs	r1, r1, r6
 80103f6:	1a38      	subs	r0, r7, r0
 80103f8:	f006 fe48 	bl	801708c <_ZN8touchgfx6muldivElllRl>
 80103fc:	4629      	mov	r1, r5
 80103fe:	ab01      	add	r3, sp, #4
 8010400:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8010404:	4430      	add	r0, r6
 8010406:	f006 fe41 	bl	801708c <_ZN8touchgfx6muldivElllRl>
 801040a:	b285      	uxth	r5, r0
 801040c:	4628      	mov	r0, r5
 801040e:	b003      	add	sp, #12
 8010410:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010412 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8010412:	b570      	push	{r4, r5, r6, lr}
 8010414:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8010418:	4604      	mov	r4, r0
 801041a:	2b00      	cmp	r3, #0
 801041c:	d035      	beq.n	801048a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801041e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8010422:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8010426:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 801042a:	3001      	adds	r0, #1
 801042c:	1ad2      	subs	r2, r2, r3
 801042e:	b212      	sxth	r2, r2
 8010430:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8010434:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8010438:	2100      	movs	r1, #0
 801043a:	b280      	uxth	r0, r0
 801043c:	47a8      	blx	r5
 801043e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8010442:	6823      	ldr	r3, [r4, #0]
 8010444:	4401      	add	r1, r0
 8010446:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801044a:	4620      	mov	r0, r4
 801044c:	4798      	blx	r3
 801044e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8010452:	429a      	cmp	r2, r3
 8010454:	db19      	blt.n	801048a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010456:	2500      	movs	r5, #0
 8010458:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 801045c:	f005 fb60 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
 8010460:	4621      	mov	r1, r4
 8010462:	3004      	adds	r0, #4
 8010464:	f005 fba9 	bl	8015bba <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010468:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801046c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8010470:	b158      	cbz	r0, 801048a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010472:	6803      	ldr	r3, [r0, #0]
 8010474:	68db      	ldr	r3, [r3, #12]
 8010476:	4798      	blx	r3
 8010478:	b138      	cbz	r0, 801048a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801047a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801047e:	6803      	ldr	r3, [r0, #0]
 8010480:	4621      	mov	r1, r4
 8010482:	689b      	ldr	r3, [r3, #8]
 8010484:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010488:	4718      	bx	r3
 801048a:	bd70      	pop	{r4, r5, r6, pc}

0801048c <_ZN8touchgfx8DrawableC1Ev>:
 801048c:	4a0a      	ldr	r2, [pc, #40]	; (80104b8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 801048e:	6002      	str	r2, [r0, #0]
 8010490:	2200      	movs	r2, #0
 8010492:	8082      	strh	r2, [r0, #4]
 8010494:	80c2      	strh	r2, [r0, #6]
 8010496:	8102      	strh	r2, [r0, #8]
 8010498:	8142      	strh	r2, [r0, #10]
 801049a:	8182      	strh	r2, [r0, #12]
 801049c:	81c2      	strh	r2, [r0, #14]
 801049e:	8202      	strh	r2, [r0, #16]
 80104a0:	8242      	strh	r2, [r0, #18]
 80104a2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80104a6:	61c2      	str	r2, [r0, #28]
 80104a8:	8402      	strh	r2, [r0, #32]
 80104aa:	8442      	strh	r2, [r0, #34]	; 0x22
 80104ac:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80104b0:	2201      	movs	r2, #1
 80104b2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80104b6:	4770      	bx	lr
 80104b8:	0802f23c 	.word	0x0802f23c

080104bc <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 80104bc:	b570      	push	{r4, r5, r6, lr}
 80104be:	6803      	ldr	r3, [r0, #0]
 80104c0:	4604      	mov	r4, r0
 80104c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80104c4:	4615      	mov	r5, r2
 80104c6:	4798      	blx	r3
 80104c8:	6823      	ldr	r3, [r4, #0]
 80104ca:	4629      	mov	r1, r5
 80104cc:	4620      	mov	r0, r4
 80104ce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80104d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80104d4:	4718      	bx	r3

080104d6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 80104d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80104da:	4604      	mov	r4, r0
 80104dc:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 80104e0:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 80104e4:	460e      	mov	r6, r1
 80104e6:	4615      	mov	r5, r2
 80104e8:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80104ec:	4619      	mov	r1, r3
 80104ee:	463a      	mov	r2, r7
 80104f0:	3058      	adds	r0, #88	; 0x58
 80104f2:	4698      	mov	r8, r3
 80104f4:	f7ff ffe2 	bl	80104bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80104f8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 80104fc:	4446      	add	r6, r8
 80104fe:	42b3      	cmp	r3, r6
 8010500:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010504:	bfb8      	it	lt
 8010506:	8126      	strhlt	r6, [r4, #8]
 8010508:	443d      	add	r5, r7
 801050a:	42ab      	cmp	r3, r5
 801050c:	bfb8      	it	lt
 801050e:	8165      	strhlt	r5, [r4, #10]
 8010510:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010514 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8010514:	b510      	push	{r4, lr}
 8010516:	4604      	mov	r4, r0
 8010518:	302c      	adds	r0, #44	; 0x2c
 801051a:	f002 fdf8 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801051e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8010522:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8010526:	4620      	mov	r0, r4
 8010528:	f7ff ffc8 	bl	80104bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801052c:	bd10      	pop	{r4, pc}
	...

08010530 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8010530:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010532:	4604      	mov	r4, r0
 8010534:	4626      	mov	r6, r4
 8010536:	2500      	movs	r5, #0
 8010538:	f7ff ffa8 	bl	801048c <_ZN8touchgfx8DrawableC1Ev>
 801053c:	4b23      	ldr	r3, [pc, #140]	; (80105cc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 801053e:	62a5      	str	r5, [r4, #40]	; 0x28
 8010540:	f846 3b2c 	str.w	r3, [r6], #44
 8010544:	2226      	movs	r2, #38	; 0x26
 8010546:	4629      	mov	r1, r5
 8010548:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801054c:	4630      	mov	r0, r6
 801054e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010552:	f01a fc48 	bl	802ade6 <memset>
 8010556:	4630      	mov	r0, r6
 8010558:	f7ff ff98 	bl	801048c <_ZN8touchgfx8DrawableC1Ev>
 801055c:	a902      	add	r1, sp, #8
 801055e:	4b1c      	ldr	r3, [pc, #112]	; (80105d0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8010560:	62e3      	str	r3, [r4, #44]	; 0x2c
 8010562:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8010566:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 801056a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 801056e:	4630      	mov	r0, r6
 8010570:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8010574:	f002 fdcb 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010578:	4638      	mov	r0, r7
 801057a:	f7ff ff87 	bl	801048c <_ZN8touchgfx8DrawableC1Ev>
 801057e:	4b15      	ldr	r3, [pc, #84]	; (80105d4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8010580:	65a3      	str	r3, [r4, #88]	; 0x58
 8010582:	2364      	movs	r3, #100	; 0x64
 8010584:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8010588:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 801058c:	4b12      	ldr	r3, [pc, #72]	; (80105d8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 801058e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8010592:	4629      	mov	r1, r5
 8010594:	4630      	mov	r0, r6
 8010596:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 801059a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 801059e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 80105a2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 80105a6:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 80105aa:	f7f0 ffc9 	bl	8001540 <_ZN8touchgfx8Drawable4setXEs>
 80105ae:	4629      	mov	r1, r5
 80105b0:	4630      	mov	r0, r6
 80105b2:	f7f0 ffc7 	bl	8001544 <_ZN8touchgfx8Drawable4setYEs>
 80105b6:	4631      	mov	r1, r6
 80105b8:	4620      	mov	r0, r4
 80105ba:	f000 f819 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80105be:	4620      	mov	r0, r4
 80105c0:	4639      	mov	r1, r7
 80105c2:	f000 f815 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80105c6:	4620      	mov	r0, r4
 80105c8:	b003      	add	sp, #12
 80105ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80105cc:	0802ead0 	.word	0x0802ead0
 80105d0:	0802f0f8 	.word	0x0802f0f8
 80105d4:	0802eba4 	.word	0x0802eba4
 80105d8:	080177eb 	.word	0x080177eb

080105dc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80105dc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80105de:	2000      	movs	r0, #0
 80105e0:	b12b      	cbz	r3, 80105ee <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80105e2:	b920      	cbnz	r0, 80105ee <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80105e4:	1a5a      	subs	r2, r3, r1
 80105e6:	4250      	negs	r0, r2
 80105e8:	4150      	adcs	r0, r2
 80105ea:	699b      	ldr	r3, [r3, #24]
 80105ec:	e7f8      	b.n	80105e0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80105ee:	4770      	bx	lr

080105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80105f0:	2300      	movs	r3, #0
 80105f2:	6148      	str	r0, [r1, #20]
 80105f4:	618b      	str	r3, [r1, #24]
 80105f6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80105f8:	b913      	cbnz	r3, 8010600 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80105fa:	6281      	str	r1, [r0, #40]	; 0x28
 80105fc:	4770      	bx	lr
 80105fe:	4613      	mov	r3, r2
 8010600:	699a      	ldr	r2, [r3, #24]
 8010602:	2a00      	cmp	r2, #0
 8010604:	d1fb      	bne.n	80105fe <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8010606:	6199      	str	r1, [r3, #24]
 8010608:	4770      	bx	lr

0801060a <_ZN8touchgfx9Container9removeAllEv>:
 801060a:	2200      	movs	r2, #0
 801060c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801060e:	b123      	cbz	r3, 801061a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8010610:	6999      	ldr	r1, [r3, #24]
 8010612:	6281      	str	r1, [r0, #40]	; 0x28
 8010614:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8010618:	e7f8      	b.n	801060c <_ZN8touchgfx9Container9removeAllEv+0x2>
 801061a:	4770      	bx	lr

0801061c <_ZN8touchgfx9Container6unlinkEv>:
 801061c:	2300      	movs	r3, #0
 801061e:	6283      	str	r3, [r0, #40]	; 0x28
 8010620:	4770      	bx	lr

08010622 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8010622:	2200      	movs	r2, #0
 8010624:	8002      	strh	r2, [r0, #0]
 8010626:	8042      	strh	r2, [r0, #2]
 8010628:	8082      	strh	r2, [r0, #4]
 801062a:	80c2      	strh	r2, [r0, #6]
 801062c:	4770      	bx	lr

0801062e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 801062e:	b570      	push	{r4, r5, r6, lr}
 8010630:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010632:	460d      	mov	r5, r1
 8010634:	4616      	mov	r6, r2
 8010636:	b13c      	cbz	r4, 8010648 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8010638:	6823      	ldr	r3, [r4, #0]
 801063a:	4620      	mov	r0, r4
 801063c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801063e:	4632      	mov	r2, r6
 8010640:	4629      	mov	r1, r5
 8010642:	4798      	blx	r3
 8010644:	69a4      	ldr	r4, [r4, #24]
 8010646:	e7f6      	b.n	8010636 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8010648:	bd70      	pop	{r4, r5, r6, pc}

0801064a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 801064a:	b538      	push	{r3, r4, r5, lr}
 801064c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801064e:	460d      	mov	r5, r1
 8010650:	b134      	cbz	r4, 8010660 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8010652:	682b      	ldr	r3, [r5, #0]
 8010654:	4621      	mov	r1, r4
 8010656:	689b      	ldr	r3, [r3, #8]
 8010658:	4628      	mov	r0, r5
 801065a:	4798      	blx	r3
 801065c:	69a4      	ldr	r4, [r4, #24]
 801065e:	e7f7      	b.n	8010650 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8010660:	bd38      	pop	{r3, r4, r5, pc}

08010662 <_ZN8touchgfx9ContainerD1Ev>:
 8010662:	4770      	bx	lr

08010664 <_ZN8touchgfx9ContainerD0Ev>:
 8010664:	b510      	push	{r4, lr}
 8010666:	212c      	movs	r1, #44	; 0x2c
 8010668:	4604      	mov	r4, r0
 801066a:	f019 fad0 	bl	8029c0e <_ZdlPvj>
 801066e:	4620      	mov	r0, r4
 8010670:	bd10      	pop	{r4, pc}

08010672 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8010672:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010674:	b19b      	cbz	r3, 801069e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010676:	428b      	cmp	r3, r1
 8010678:	d109      	bne.n	801068e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 801067a:	699a      	ldr	r2, [r3, #24]
 801067c:	2100      	movs	r1, #0
 801067e:	6159      	str	r1, [r3, #20]
 8010680:	6282      	str	r2, [r0, #40]	; 0x28
 8010682:	b902      	cbnz	r2, 8010686 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8010684:	4770      	bx	lr
 8010686:	6199      	str	r1, [r3, #24]
 8010688:	4770      	bx	lr
 801068a:	4613      	mov	r3, r2
 801068c:	b13a      	cbz	r2, 801069e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801068e:	699a      	ldr	r2, [r3, #24]
 8010690:	428a      	cmp	r2, r1
 8010692:	d1fa      	bne.n	801068a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8010694:	698a      	ldr	r2, [r1, #24]
 8010696:	619a      	str	r2, [r3, #24]
 8010698:	2300      	movs	r3, #0
 801069a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 801069e:	4770      	bx	lr

080106a0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80106a0:	b410      	push	{r4}
 80106a2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80106a4:	4604      	mov	r4, r0
 80106a6:	b92b      	cbnz	r3, 80106b4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80106a8:	6803      	ldr	r3, [r0, #0]
 80106aa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80106ae:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80106b0:	4611      	mov	r1, r2
 80106b2:	4718      	bx	r3
 80106b4:	b941      	cbnz	r1, 80106c8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80106b6:	6193      	str	r3, [r2, #24]
 80106b8:	6282      	str	r2, [r0, #40]	; 0x28
 80106ba:	6154      	str	r4, [r2, #20]
 80106bc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80106c0:	4770      	bx	lr
 80106c2:	4603      	mov	r3, r0
 80106c4:	2800      	cmp	r0, #0
 80106c6:	d0f9      	beq.n	80106bc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80106c8:	4299      	cmp	r1, r3
 80106ca:	6998      	ldr	r0, [r3, #24]
 80106cc:	d1f9      	bne.n	80106c2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80106ce:	6190      	str	r0, [r2, #24]
 80106d0:	618a      	str	r2, [r1, #24]
 80106d2:	e7f2      	b.n	80106ba <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080106d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80106d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80106d8:	461f      	mov	r7, r3
 80106da:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80106de:	460d      	mov	r5, r1
 80106e0:	4616      	mov	r6, r2
 80106e2:	b103      	cbz	r3, 80106e6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80106e4:	6038      	str	r0, [r7, #0]
 80106e6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80106e8:	b314      	cbz	r4, 8010730 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80106ea:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80106ee:	b1eb      	cbz	r3, 801072c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80106f0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80106f4:	428d      	cmp	r5, r1
 80106f6:	db19      	blt.n	801072c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80106f8:	8923      	ldrh	r3, [r4, #8]
 80106fa:	b289      	uxth	r1, r1
 80106fc:	440b      	add	r3, r1
 80106fe:	b21b      	sxth	r3, r3
 8010700:	429d      	cmp	r5, r3
 8010702:	da13      	bge.n	801072c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010704:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010708:	4296      	cmp	r6, r2
 801070a:	db0f      	blt.n	801072c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801070c:	8963      	ldrh	r3, [r4, #10]
 801070e:	b292      	uxth	r2, r2
 8010710:	4413      	add	r3, r2
 8010712:	b21b      	sxth	r3, r3
 8010714:	429e      	cmp	r6, r3
 8010716:	da09      	bge.n	801072c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010718:	6823      	ldr	r3, [r4, #0]
 801071a:	1ab2      	subs	r2, r6, r2
 801071c:	1a69      	subs	r1, r5, r1
 801071e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8010722:	b212      	sxth	r2, r2
 8010724:	463b      	mov	r3, r7
 8010726:	b209      	sxth	r1, r1
 8010728:	4620      	mov	r0, r4
 801072a:	47c0      	blx	r8
 801072c:	69a4      	ldr	r4, [r4, #24]
 801072e:	e7db      	b.n	80106e8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8010730:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010734 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8010734:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010738:	4c6e      	ldr	r4, [pc, #440]	; (80108f4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801073a:	b0a1      	sub	sp, #132	; 0x84
 801073c:	6824      	ldr	r4, [r4, #0]
 801073e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8010740:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8010744:	9303      	str	r3, [sp, #12]
 8010746:	2400      	movs	r4, #0
 8010748:	802c      	strh	r4, [r5, #0]
 801074a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 801074c:	802c      	strh	r4, [r5, #0]
 801074e:	601c      	str	r4, [r3, #0]
 8010750:	4606      	mov	r6, r0
 8010752:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8010756:	f7ff ffbd 	bl	80106d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801075a:	f1b9 0f03 	cmp.w	r9, #3
 801075e:	f340 80c2 	ble.w	80108e6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8010762:	4631      	mov	r1, r6
 8010764:	a80c      	add	r0, sp, #48	; 0x30
 8010766:	f006 fb5f 	bl	8016e28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801076a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801076e:	9306      	str	r3, [sp, #24]
 8010770:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8010774:	9307      	str	r3, [sp, #28]
 8010776:	9b03      	ldr	r3, [sp, #12]
 8010778:	f8d3 a000 	ldr.w	sl, [r3]
 801077c:	f1ba 0f00 	cmp.w	sl, #0
 8010780:	f000 80b4 	beq.w	80108ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8010784:	4651      	mov	r1, sl
 8010786:	a810      	add	r0, sp, #64	; 0x40
 8010788:	f006 fb4e 	bl	8016e28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801078c:	9b01      	ldr	r3, [sp, #4]
 801078e:	9a06      	ldr	r2, [sp, #24]
 8010790:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8010794:	189d      	adds	r5, r3, r2
 8010796:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 801079a:	9a07      	ldr	r2, [sp, #28]
 801079c:	2002      	movs	r0, #2
 801079e:	fb91 f1f0 	sdiv	r1, r1, r0
 80107a2:	4419      	add	r1, r3
 80107a4:	1a6d      	subs	r5, r5, r1
 80107a6:	9b02      	ldr	r3, [sp, #8]
 80107a8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80107ac:	4413      	add	r3, r2
 80107ae:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 80107b2:	fb92 f2f0 	sdiv	r2, r2, r0
 80107b6:	440a      	add	r2, r1
 80107b8:	1a9b      	subs	r3, r3, r2
 80107ba:	435b      	muls	r3, r3
 80107bc:	fb05 3505 	mla	r5, r5, r5, r3
 80107c0:	4f4d      	ldr	r7, [pc, #308]	; (80108f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80107c2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80107c4:	ac10      	add	r4, sp, #64	; 0x40
 80107c6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80107c8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80107ca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80107cc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80107ce:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80107d0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80107d4:	f1b9 0f0c 	cmp.w	r9, #12
 80107d8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80107dc:	f04f 0303 	mov.w	r3, #3
 80107e0:	bfc8      	it	gt
 80107e2:	4698      	movgt	r8, r3
 80107e4:	f8cd 9000 	str.w	r9, [sp]
 80107e8:	f04f 0400 	mov.w	r4, #0
 80107ec:	bfdc      	itt	le
 80107ee:	f109 32ff 	addle.w	r2, r9, #4294967295
 80107f2:	fb92 f8f3 	sdivle	r8, r2, r3
 80107f6:	1c63      	adds	r3, r4, #1
 80107f8:	aa10      	add	r2, sp, #64	; 0x40
 80107fa:	f004 0401 	and.w	r4, r4, #1
 80107fe:	9308      	str	r3, [sp, #32]
 8010800:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010804:	9b00      	ldr	r3, [sp, #0]
 8010806:	fb93 f3f8 	sdiv	r3, r3, r8
 801080a:	b29b      	uxth	r3, r3
 801080c:	3404      	adds	r4, #4
 801080e:	f04f 0b00 	mov.w	fp, #0
 8010812:	9304      	str	r3, [sp, #16]
 8010814:	9a04      	ldr	r2, [sp, #16]
 8010816:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801081a:	fb13 f302 	smulbb	r3, r3, r2
 801081e:	9a01      	ldr	r2, [sp, #4]
 8010820:	b29b      	uxth	r3, r3
 8010822:	1899      	adds	r1, r3, r2
 8010824:	9305      	str	r3, [sp, #20]
 8010826:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801082a:	b209      	sxth	r1, r1
 801082c:	4299      	cmp	r1, r3
 801082e:	db4d      	blt.n	80108cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010830:	8932      	ldrh	r2, [r6, #8]
 8010832:	4413      	add	r3, r2
 8010834:	b21b      	sxth	r3, r3
 8010836:	4299      	cmp	r1, r3
 8010838:	da48      	bge.n	80108cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801083a:	9b04      	ldr	r3, [sp, #16]
 801083c:	6827      	ldr	r7, [r4, #0]
 801083e:	fb17 f703 	smulbb	r7, r7, r3
 8010842:	9b02      	ldr	r3, [sp, #8]
 8010844:	b2bf      	uxth	r7, r7
 8010846:	18fa      	adds	r2, r7, r3
 8010848:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 801084c:	b212      	sxth	r2, r2
 801084e:	429a      	cmp	r2, r3
 8010850:	db3c      	blt.n	80108cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010852:	8970      	ldrh	r0, [r6, #10]
 8010854:	4403      	add	r3, r0
 8010856:	b21b      	sxth	r3, r3
 8010858:	429a      	cmp	r2, r3
 801085a:	da37      	bge.n	80108cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801085c:	2300      	movs	r3, #0
 801085e:	930b      	str	r3, [sp, #44]	; 0x2c
 8010860:	4630      	mov	r0, r6
 8010862:	ab0b      	add	r3, sp, #44	; 0x2c
 8010864:	f7ff ff36 	bl	80106d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010868:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801086a:	b37a      	cbz	r2, 80108cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801086c:	4552      	cmp	r2, sl
 801086e:	d02d      	beq.n	80108cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010870:	4611      	mov	r1, r2
 8010872:	a80e      	add	r0, sp, #56	; 0x38
 8010874:	9209      	str	r2, [sp, #36]	; 0x24
 8010876:	f006 fad7 	bl	8016e28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801087a:	9a06      	ldr	r2, [sp, #24]
 801087c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8010880:	9b01      	ldr	r3, [sp, #4]
 8010882:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8010886:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 801088a:	4413      	add	r3, r2
 801088c:	f04f 0e02 	mov.w	lr, #2
 8010890:	fb91 f1fe 	sdiv	r1, r1, lr
 8010894:	4401      	add	r1, r0
 8010896:	1a58      	subs	r0, r3, r1
 8010898:	9a07      	ldr	r2, [sp, #28]
 801089a:	9b02      	ldr	r3, [sp, #8]
 801089c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 80108a0:	fb9c fcfe 	sdiv	ip, ip, lr
 80108a4:	4413      	add	r3, r2
 80108a6:	448c      	add	ip, r1
 80108a8:	eba3 030c 	sub.w	r3, r3, ip
 80108ac:	435b      	muls	r3, r3
 80108ae:	fb00 3300 	mla	r3, r0, r0, r3
 80108b2:	42ab      	cmp	r3, r5
 80108b4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80108b6:	d208      	bcs.n	80108ca <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80108b8:	9803      	ldr	r0, [sp, #12]
 80108ba:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80108bc:	6001      	str	r1, [r0, #0]
 80108be:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80108c0:	9805      	ldr	r0, [sp, #20]
 80108c2:	8008      	strh	r0, [r1, #0]
 80108c4:	992b      	ldr	r1, [sp, #172]	; 0xac
 80108c6:	461d      	mov	r5, r3
 80108c8:	800f      	strh	r7, [r1, #0]
 80108ca:	4692      	mov	sl, r2
 80108cc:	f10b 0b01 	add.w	fp, fp, #1
 80108d0:	f1bb 0f04 	cmp.w	fp, #4
 80108d4:	f104 0408 	add.w	r4, r4, #8
 80108d8:	d19c      	bne.n	8010814 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80108da:	9b00      	ldr	r3, [sp, #0]
 80108dc:	9c08      	ldr	r4, [sp, #32]
 80108de:	444b      	add	r3, r9
 80108e0:	4544      	cmp	r4, r8
 80108e2:	9300      	str	r3, [sp, #0]
 80108e4:	d187      	bne.n	80107f6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 80108e6:	b021      	add	sp, #132	; 0x84
 80108e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80108ec:	f04f 35ff 	mov.w	r5, #4294967295
 80108f0:	e766      	b.n	80107c0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 80108f2:	bf00      	nop
 80108f4:	20012db4 	.word	0x20012db4
 80108f8:	0802bb18 	.word	0x0802bb18

080108fc <_ZN8touchgfx4RectaNERKS0_>:
 80108fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010900:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010904:	888c      	ldrh	r4, [r1, #4]
 8010906:	f9b0 9000 	ldrsh.w	r9, [r0]
 801090a:	443c      	add	r4, r7
 801090c:	b2a4      	uxth	r4, r4
 801090e:	fa0f f884 	sxth.w	r8, r4
 8010912:	45c1      	cmp	r9, r8
 8010914:	da2f      	bge.n	8010976 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010916:	8882      	ldrh	r2, [r0, #4]
 8010918:	444a      	add	r2, r9
 801091a:	b292      	uxth	r2, r2
 801091c:	fa0f fe82 	sxth.w	lr, r2
 8010920:	4577      	cmp	r7, lr
 8010922:	da28      	bge.n	8010976 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010924:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010928:	88cb      	ldrh	r3, [r1, #6]
 801092a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801092e:	442b      	add	r3, r5
 8010930:	b21b      	sxth	r3, r3
 8010932:	429e      	cmp	r6, r3
 8010934:	da1f      	bge.n	8010976 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010936:	88c3      	ldrh	r3, [r0, #6]
 8010938:	4433      	add	r3, r6
 801093a:	b29b      	uxth	r3, r3
 801093c:	fa0f fc83 	sxth.w	ip, r3
 8010940:	4565      	cmp	r5, ip
 8010942:	da18      	bge.n	8010976 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010944:	454f      	cmp	r7, r9
 8010946:	bfb8      	it	lt
 8010948:	464f      	movlt	r7, r9
 801094a:	42b5      	cmp	r5, r6
 801094c:	bfb8      	it	lt
 801094e:	4635      	movlt	r5, r6
 8010950:	45f0      	cmp	r8, lr
 8010952:	bfd8      	it	le
 8010954:	4622      	movle	r2, r4
 8010956:	1bd2      	subs	r2, r2, r7
 8010958:	8082      	strh	r2, [r0, #4]
 801095a:	884a      	ldrh	r2, [r1, #2]
 801095c:	88c9      	ldrh	r1, [r1, #6]
 801095e:	8007      	strh	r7, [r0, #0]
 8010960:	440a      	add	r2, r1
 8010962:	b292      	uxth	r2, r2
 8010964:	b211      	sxth	r1, r2
 8010966:	458c      	cmp	ip, r1
 8010968:	bfa8      	it	ge
 801096a:	4613      	movge	r3, r2
 801096c:	1b5b      	subs	r3, r3, r5
 801096e:	80c3      	strh	r3, [r0, #6]
 8010970:	8045      	strh	r5, [r0, #2]
 8010972:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010976:	2300      	movs	r3, #0
 8010978:	8003      	strh	r3, [r0, #0]
 801097a:	8043      	strh	r3, [r0, #2]
 801097c:	8083      	strh	r3, [r0, #4]
 801097e:	80c3      	strh	r3, [r0, #6]
 8010980:	e7f7      	b.n	8010972 <_ZN8touchgfx4RectaNERKS0_+0x76>

08010982 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010982:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010986:	2b00      	cmp	r3, #0
 8010988:	dd06      	ble.n	8010998 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 801098a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 801098e:	2800      	cmp	r0, #0
 8010990:	bfcc      	ite	gt
 8010992:	2000      	movgt	r0, #0
 8010994:	2001      	movle	r0, #1
 8010996:	4770      	bx	lr
 8010998:	2001      	movs	r0, #1
 801099a:	4770      	bx	lr

0801099c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 801099c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80109a0:	2300      	movs	r3, #0
 80109a2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80109a4:	8003      	strh	r3, [r0, #0]
 80109a6:	4604      	mov	r4, r0
 80109a8:	8043      	strh	r3, [r0, #2]
 80109aa:	8083      	strh	r3, [r0, #4]
 80109ac:	80c3      	strh	r3, [r0, #6]
 80109ae:	2d00      	cmp	r5, #0
 80109b0:	d040      	beq.n	8010a34 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80109b2:	1d28      	adds	r0, r5, #4
 80109b4:	f7ff ffe5 	bl	8010982 <_ZNK8touchgfx4Rect7isEmptyEv>
 80109b8:	b988      	cbnz	r0, 80109de <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80109ba:	4620      	mov	r0, r4
 80109bc:	f7ff ffe1 	bl	8010982 <_ZNK8touchgfx4Rect7isEmptyEv>
 80109c0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80109c4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80109c8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80109cc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80109d0:	b138      	cbz	r0, 80109e2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80109d2:	8022      	strh	r2, [r4, #0]
 80109d4:	8063      	strh	r3, [r4, #2]
 80109d6:	f8a4 e004 	strh.w	lr, [r4, #4]
 80109da:	f8a4 c006 	strh.w	ip, [r4, #6]
 80109de:	69ad      	ldr	r5, [r5, #24]
 80109e0:	e7e5      	b.n	80109ae <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80109e2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80109e6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80109ea:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80109ee:	4290      	cmp	r0, r2
 80109f0:	4607      	mov	r7, r0
 80109f2:	bfa8      	it	ge
 80109f4:	4617      	movge	r7, r2
 80109f6:	4472      	add	r2, lr
 80109f8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80109fc:	8027      	strh	r7, [r4, #0]
 80109fe:	4299      	cmp	r1, r3
 8010a00:	460e      	mov	r6, r1
 8010a02:	4440      	add	r0, r8
 8010a04:	bfa8      	it	ge
 8010a06:	461e      	movge	r6, r3
 8010a08:	4471      	add	r1, lr
 8010a0a:	4463      	add	r3, ip
 8010a0c:	b200      	sxth	r0, r0
 8010a0e:	b212      	sxth	r2, r2
 8010a10:	b209      	sxth	r1, r1
 8010a12:	b21b      	sxth	r3, r3
 8010a14:	4290      	cmp	r0, r2
 8010a16:	bfac      	ite	ge
 8010a18:	ebc7 0200 	rsbge	r2, r7, r0
 8010a1c:	ebc7 0202 	rsblt	r2, r7, r2
 8010a20:	4299      	cmp	r1, r3
 8010a22:	bfac      	ite	ge
 8010a24:	ebc6 0301 	rsbge	r3, r6, r1
 8010a28:	ebc6 0303 	rsblt	r3, r6, r3
 8010a2c:	8066      	strh	r6, [r4, #2]
 8010a2e:	80a2      	strh	r2, [r4, #4]
 8010a30:	80e3      	strh	r3, [r4, #6]
 8010a32:	e7d4      	b.n	80109de <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010a34:	4620      	mov	r0, r4
 8010a36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010a3a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8010a3a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010a3e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010a42:	b383      	cbz	r3, 8010aa6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010a44:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010a46:	b374      	cbz	r4, 8010aa6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010a48:	f9b1 5000 	ldrsh.w	r5, [r1]
 8010a4c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010a50:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010a54:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010a58:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010a5c:	b303      	cbz	r3, 8010aa0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010a5e:	4668      	mov	r0, sp
 8010a60:	1d21      	adds	r1, r4, #4
 8010a62:	f8ad 5000 	strh.w	r5, [sp]
 8010a66:	f8ad 6002 	strh.w	r6, [sp, #2]
 8010a6a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010a6e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010a72:	f7ff ff43 	bl	80108fc <_ZN8touchgfx4RectaNERKS0_>
 8010a76:	4668      	mov	r0, sp
 8010a78:	f7ff ff83 	bl	8010982 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010a7c:	b980      	cbnz	r0, 8010aa0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010a7e:	f8bd 3000 	ldrh.w	r3, [sp]
 8010a82:	88a2      	ldrh	r2, [r4, #4]
 8010a84:	1a9b      	subs	r3, r3, r2
 8010a86:	f8ad 3000 	strh.w	r3, [sp]
 8010a8a:	88e2      	ldrh	r2, [r4, #6]
 8010a8c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010a90:	1a9b      	subs	r3, r3, r2
 8010a92:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010a96:	6823      	ldr	r3, [r4, #0]
 8010a98:	4669      	mov	r1, sp
 8010a9a:	689b      	ldr	r3, [r3, #8]
 8010a9c:	4620      	mov	r0, r4
 8010a9e:	4798      	blx	r3
 8010aa0:	69a4      	ldr	r4, [r4, #24]
 8010aa2:	2c00      	cmp	r4, #0
 8010aa4:	d1d8      	bne.n	8010a58 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010aa6:	b002      	add	sp, #8
 8010aa8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010aac <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8010aac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010aae:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010ab2:	460d      	mov	r5, r1
 8010ab4:	4616      	mov	r6, r2
 8010ab6:	b323      	cbz	r3, 8010b02 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010ab8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010aba:	b314      	cbz	r4, 8010b02 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010abc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010ac0:	b1eb      	cbz	r3, 8010afe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010ac2:	6828      	ldr	r0, [r5, #0]
 8010ac4:	6869      	ldr	r1, [r5, #4]
 8010ac6:	466b      	mov	r3, sp
 8010ac8:	c303      	stmia	r3!, {r0, r1}
 8010aca:	4668      	mov	r0, sp
 8010acc:	1d21      	adds	r1, r4, #4
 8010ace:	f7ff ff15 	bl	80108fc <_ZN8touchgfx4RectaNERKS0_>
 8010ad2:	4668      	mov	r0, sp
 8010ad4:	f7ff ff55 	bl	8010982 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010ad8:	b988      	cbnz	r0, 8010afe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010ada:	f8bd 3000 	ldrh.w	r3, [sp]
 8010ade:	88a2      	ldrh	r2, [r4, #4]
 8010ae0:	1a9b      	subs	r3, r3, r2
 8010ae2:	f8ad 3000 	strh.w	r3, [sp]
 8010ae6:	88e2      	ldrh	r2, [r4, #6]
 8010ae8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010aec:	1a9b      	subs	r3, r3, r2
 8010aee:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010af2:	6823      	ldr	r3, [r4, #0]
 8010af4:	4632      	mov	r2, r6
 8010af6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010af8:	4669      	mov	r1, sp
 8010afa:	4620      	mov	r0, r4
 8010afc:	4798      	blx	r3
 8010afe:	69a4      	ldr	r4, [r4, #24]
 8010b00:	e7db      	b.n	8010aba <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010b02:	b002      	add	sp, #8
 8010b04:	bd70      	pop	{r4, r5, r6, pc}

08010b06 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8010b06:	b513      	push	{r0, r1, r4, lr}
 8010b08:	6803      	ldr	r3, [r0, #0]
 8010b0a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8010b0e:	2300      	movs	r3, #0
 8010b10:	e9cd 3300 	strd	r3, r3, [sp]
 8010b14:	466b      	mov	r3, sp
 8010b16:	47a0      	blx	r4
 8010b18:	b002      	add	sp, #8
 8010b1a:	bd10      	pop	{r4, pc}

08010b1c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8010b1c:	2301      	movs	r3, #1
 8010b1e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010b22:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010b26:	4770      	bx	lr

08010b28 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8010b28:	2301      	movs	r3, #1
 8010b2a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010b2e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010b32:	4770      	bx	lr

08010b34 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8010b34:	6843      	ldr	r3, [r0, #4]
 8010b36:	2201      	movs	r2, #1
 8010b38:	725a      	strb	r2, [r3, #9]
 8010b3a:	6840      	ldr	r0, [r0, #4]
 8010b3c:	6803      	ldr	r3, [r0, #0]
 8010b3e:	691b      	ldr	r3, [r3, #16]
 8010b40:	4718      	bx	r3

08010b42 <_ZN8touchgfx3HAL8flushDMAEv>:
 8010b42:	6840      	ldr	r0, [r0, #4]
 8010b44:	6803      	ldr	r3, [r0, #0]
 8010b46:	689b      	ldr	r3, [r3, #8]
 8010b48:	4718      	bx	r3

08010b4a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8010b4a:	b530      	push	{r4, r5, lr}
 8010b4c:	b08b      	sub	sp, #44	; 0x2c
 8010b4e:	6804      	ldr	r4, [r0, #0]
 8010b50:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8010b54:	9509      	str	r5, [sp, #36]	; 0x24
 8010b56:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8010b5a:	9508      	str	r5, [sp, #32]
 8010b5c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8010b60:	9507      	str	r5, [sp, #28]
 8010b62:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8010b66:	9506      	str	r5, [sp, #24]
 8010b68:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8010b6c:	9505      	str	r5, [sp, #20]
 8010b6e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8010b72:	9504      	str	r5, [sp, #16]
 8010b74:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8010b78:	9503      	str	r5, [sp, #12]
 8010b7a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8010b7e:	9502      	str	r5, [sp, #8]
 8010b80:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8010b84:	e9cd 3500 	strd	r3, r5, [sp]
 8010b88:	4613      	mov	r3, r2
 8010b8a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8010b8c:	2200      	movs	r2, #0
 8010b8e:	47a0      	blx	r4
 8010b90:	b00b      	add	sp, #44	; 0x2c
 8010b92:	bd30      	pop	{r4, r5, pc}

08010b94 <_ZN8touchgfx3HAL10beginFrameEv>:
 8010b94:	4b04      	ldr	r3, [pc, #16]	; (8010ba8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8010b96:	781b      	ldrb	r3, [r3, #0]
 8010b98:	b123      	cbz	r3, 8010ba4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8010b9a:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8010b9e:	f080 0001 	eor.w	r0, r0, #1
 8010ba2:	4770      	bx	lr
 8010ba4:	2001      	movs	r0, #1
 8010ba6:	4770      	bx	lr
 8010ba8:	20012db2 	.word	0x20012db2

08010bac <_ZN8touchgfx3HAL8endFrameEv>:
 8010bac:	b510      	push	{r4, lr}
 8010bae:	4604      	mov	r4, r0
 8010bb0:	6840      	ldr	r0, [r0, #4]
 8010bb2:	6803      	ldr	r3, [r0, #0]
 8010bb4:	689b      	ldr	r3, [r3, #8]
 8010bb6:	4798      	blx	r3
 8010bb8:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8010bbc:	b113      	cbz	r3, 8010bc4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8010bbe:	2301      	movs	r3, #1
 8010bc0:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010bc4:	bd10      	pop	{r4, pc}

08010bc6 <_ZN8touchgfx3HAL10initializeEv>:
 8010bc6:	b510      	push	{r4, lr}
 8010bc8:	4604      	mov	r4, r0
 8010bca:	f7f0 faa5 	bl	8001118 <_ZN8touchgfx10OSWrappers10initializeEv>
 8010bce:	f7f0 f9b1 	bl	8000f34 <_ZN8touchgfx4GPIO4initEv>
 8010bd2:	6860      	ldr	r0, [r4, #4]
 8010bd4:	6803      	ldr	r3, [r0, #0]
 8010bd6:	68db      	ldr	r3, [r3, #12]
 8010bd8:	4798      	blx	r3
 8010bda:	68e0      	ldr	r0, [r4, #12]
 8010bdc:	6803      	ldr	r3, [r0, #0]
 8010bde:	689b      	ldr	r3, [r3, #8]
 8010be0:	4798      	blx	r3
 8010be2:	6823      	ldr	r3, [r4, #0]
 8010be4:	4620      	mov	r0, r4
 8010be6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8010be8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010bec:	4718      	bx	r3
	...

08010bf0 <_ZN8touchgfx3HAL4tickEv>:
 8010bf0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010bf2:	6803      	ldr	r3, [r0, #0]
 8010bf4:	4d5b      	ldr	r5, [pc, #364]	; (8010d64 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010bf6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8010bfa:	4604      	mov	r4, r0
 8010bfc:	4798      	blx	r3
 8010bfe:	2800      	cmp	r0, #0
 8010c00:	f000 8095 	beq.w	8010d2e <_ZN8touchgfx3HAL4tickEv+0x13e>
 8010c04:	2001      	movs	r0, #1
 8010c06:	f7f0 f947 	bl	8000e98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010c0a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8010c0e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010c12:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8010c16:	2600      	movs	r6, #0
 8010c18:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8010c1c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8010c20:	b133      	cbz	r3, 8010c30 <_ZN8touchgfx3HAL4tickEv+0x40>
 8010c22:	6823      	ldr	r3, [r4, #0]
 8010c24:	4620      	mov	r0, r4
 8010c26:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8010c2a:	4798      	blx	r3
 8010c2c:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8010c30:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8010c34:	6862      	ldr	r2, [r4, #4]
 8010c36:	f083 0301 	eor.w	r3, r3, #1
 8010c3a:	7253      	strb	r3, [r2, #9]
 8010c3c:	2601      	movs	r6, #1
 8010c3e:	702e      	strb	r6, [r5, #0]
 8010c40:	f004 ff6e 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
 8010c44:	6803      	ldr	r3, [r0, #0]
 8010c46:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010c48:	4798      	blx	r3
 8010c4a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8010c4e:	b90b      	cbnz	r3, 8010c54 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010c50:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8010c54:	f004 ff64 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
 8010c58:	6803      	ldr	r3, [r0, #0]
 8010c5a:	695b      	ldr	r3, [r3, #20]
 8010c5c:	4798      	blx	r3
 8010c5e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010c60:	6803      	ldr	r3, [r0, #0]
 8010c62:	691b      	ldr	r3, [r3, #16]
 8010c64:	4798      	blx	r3
 8010c66:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8010c6a:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8010c6e:	3b01      	subs	r3, #1
 8010c70:	b2db      	uxtb	r3, r3
 8010c72:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010c76:	b10a      	cbz	r2, 8010c7c <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010c78:	2b00      	cmp	r3, #0
 8010c7a:	d1eb      	bne.n	8010c54 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010c7c:	4a3a      	ldr	r2, [pc, #232]	; (8010d68 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8010c7e:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8010c82:	7813      	ldrb	r3, [r2, #0]
 8010c84:	3301      	adds	r3, #1
 8010c86:	b25b      	sxtb	r3, r3
 8010c88:	4299      	cmp	r1, r3
 8010c8a:	7013      	strb	r3, [r2, #0]
 8010c8c:	dc10      	bgt.n	8010cb0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010c8e:	68e0      	ldr	r0, [r4, #12]
 8010c90:	2300      	movs	r3, #0
 8010c92:	7013      	strb	r3, [r2, #0]
 8010c94:	6803      	ldr	r3, [r0, #0]
 8010c96:	aa03      	add	r2, sp, #12
 8010c98:	68db      	ldr	r3, [r3, #12]
 8010c9a:	a902      	add	r1, sp, #8
 8010c9c:	4798      	blx	r3
 8010c9e:	6823      	ldr	r3, [r4, #0]
 8010ca0:	2800      	cmp	r0, #0
 8010ca2:	d050      	beq.n	8010d46 <_ZN8touchgfx3HAL4tickEv+0x156>
 8010ca4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010ca8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8010cac:	4620      	mov	r0, r4
 8010cae:	4798      	blx	r3
 8010cb0:	6960      	ldr	r0, [r4, #20]
 8010cb2:	2300      	movs	r3, #0
 8010cb4:	f88d 3007 	strb.w	r3, [sp, #7]
 8010cb8:	b158      	cbz	r0, 8010cd2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010cba:	6803      	ldr	r3, [r0, #0]
 8010cbc:	f10d 0107 	add.w	r1, sp, #7
 8010cc0:	68db      	ldr	r3, [r3, #12]
 8010cc2:	4798      	blx	r3
 8010cc4:	b128      	cbz	r0, 8010cd2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010cc6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010cc8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010ccc:	6803      	ldr	r3, [r0, #0]
 8010cce:	68db      	ldr	r3, [r3, #12]
 8010cd0:	4798      	blx	r3
 8010cd2:	f104 001c 	add.w	r0, r4, #28
 8010cd6:	f015 feb9 	bl	8026a4c <_ZN8touchgfx8Gestures4tickEv>
 8010cda:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8010cde:	b30b      	cbz	r3, 8010d24 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010ce0:	6920      	ldr	r0, [r4, #16]
 8010ce2:	6803      	ldr	r3, [r0, #0]
 8010ce4:	691b      	ldr	r3, [r3, #16]
 8010ce6:	4798      	blx	r3
 8010ce8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010cea:	4606      	mov	r6, r0
 8010cec:	b903      	cbnz	r3, 8010cf0 <_ZN8touchgfx3HAL4tickEv+0x100>
 8010cee:	6760      	str	r0, [r4, #116]	; 0x74
 8010cf0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010cf2:	4a1e      	ldr	r2, [pc, #120]	; (8010d6c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010cf4:	1af3      	subs	r3, r6, r3
 8010cf6:	4293      	cmp	r3, r2
 8010cf8:	d914      	bls.n	8010d24 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010cfa:	6920      	ldr	r0, [r4, #16]
 8010cfc:	6803      	ldr	r3, [r0, #0]
 8010cfe:	699b      	ldr	r3, [r3, #24]
 8010d00:	4798      	blx	r3
 8010d02:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010d04:	2264      	movs	r2, #100	; 0x64
 8010d06:	1af3      	subs	r3, r6, r3
 8010d08:	fbb3 f3f2 	udiv	r3, r3, r2
 8010d0c:	fbb0 f0f3 	udiv	r0, r0, r3
 8010d10:	2800      	cmp	r0, #0
 8010d12:	dc1d      	bgt.n	8010d50 <_ZN8touchgfx3HAL4tickEv+0x160>
 8010d14:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8010d18:	6920      	ldr	r0, [r4, #16]
 8010d1a:	6803      	ldr	r3, [r0, #0]
 8010d1c:	2100      	movs	r1, #0
 8010d1e:	69db      	ldr	r3, [r3, #28]
 8010d20:	4798      	blx	r3
 8010d22:	6766      	str	r6, [r4, #116]	; 0x74
 8010d24:	f004 fefc 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
 8010d28:	6803      	ldr	r3, [r0, #0]
 8010d2a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010d2c:	4798      	blx	r3
 8010d2e:	6823      	ldr	r3, [r4, #0]
 8010d30:	4620      	mov	r0, r4
 8010d32:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010d36:	4798      	blx	r3
 8010d38:	2001      	movs	r0, #1
 8010d3a:	f7f0 f8c5 	bl	8000ec8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010d3e:	2300      	movs	r3, #0
 8010d40:	702b      	strb	r3, [r5, #0]
 8010d42:	b004      	add	sp, #16
 8010d44:	bd70      	pop	{r4, r5, r6, pc}
 8010d46:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8010d4a:	4620      	mov	r0, r4
 8010d4c:	4798      	blx	r3
 8010d4e:	e7af      	b.n	8010cb0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010d50:	2863      	cmp	r0, #99	; 0x63
 8010d52:	bfcb      	itete	gt
 8010d54:	2300      	movgt	r3, #0
 8010d56:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8010d5a:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8010d5e:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8010d62:	e7d9      	b.n	8010d18 <_ZN8touchgfx3HAL4tickEv+0x128>
 8010d64:	20012db8 	.word	0x20012db8
 8010d68:	20012db9 	.word	0x20012db9
 8010d6c:	05f5e100 	.word	0x05f5e100

08010d70 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8010d70:	b510      	push	{r4, lr}
 8010d72:	4604      	mov	r4, r0
 8010d74:	f7f0 fa00 	bl	8001178 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8010d78:	6863      	ldr	r3, [r4, #4]
 8010d7a:	2200      	movs	r2, #0
 8010d7c:	729a      	strb	r2, [r3, #10]
 8010d7e:	bd10      	pop	{r4, pc}

08010d80 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8010d80:	65c1      	str	r1, [r0, #92]	; 0x5c
 8010d82:	301c      	adds	r0, #28
 8010d84:	f015 be60 	b.w	8026a48 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08010d88 <_ZN8touchgfx3HAL5touchEll>:
 8010d88:	b530      	push	{r4, r5, lr}
 8010d8a:	b087      	sub	sp, #28
 8010d8c:	4604      	mov	r4, r0
 8010d8e:	a804      	add	r0, sp, #16
 8010d90:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8010d94:	f004 fc90 	bl	80156b8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8010d98:	9b04      	ldr	r3, [sp, #16]
 8010d9a:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010d9e:	a906      	add	r1, sp, #24
 8010da0:	9b05      	ldr	r3, [sp, #20]
 8010da2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8010da6:	a803      	add	r0, sp, #12
 8010da8:	f004 fcd8 	bl	801575c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8010dac:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8010db0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010db4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8010db8:	f104 001c 	add.w	r0, r4, #28
 8010dbc:	b189      	cbz	r1, 8010de2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8010dbe:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8010dc2:	9300      	str	r3, [sp, #0]
 8010dc4:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8010dc8:	4613      	mov	r3, r2
 8010dca:	462a      	mov	r2, r5
 8010dcc:	f015 fe4c 	bl	8026a68 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010dd0:	b128      	cbz	r0, 8010dde <_ZN8touchgfx3HAL5touchEll+0x56>
 8010dd2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010dd6:	6623      	str	r3, [r4, #96]	; 0x60
 8010dd8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8010ddc:	6663      	str	r3, [r4, #100]	; 0x64
 8010dde:	b007      	add	sp, #28
 8010de0:	bd30      	pop	{r4, r5, pc}
 8010de2:	f015 fe81 	bl	8026ae8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010de6:	2301      	movs	r3, #1
 8010de8:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8010dec:	e7f1      	b.n	8010dd2 <_ZN8touchgfx3HAL5touchEll+0x4a>

08010dee <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8010dee:	b510      	push	{r4, lr}
 8010df0:	2b00      	cmp	r3, #0
 8010df2:	d046      	beq.n	8010e82 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010df4:	ea81 0002 	eor.w	r0, r1, r2
 8010df8:	07c4      	lsls	r4, r0, #31
 8010dfa:	d508      	bpl.n	8010e0e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8010dfc:	440b      	add	r3, r1
 8010dfe:	3a01      	subs	r2, #1
 8010e00:	428b      	cmp	r3, r1
 8010e02:	d93e      	bls.n	8010e82 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010e04:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010e08:	f801 0b01 	strb.w	r0, [r1], #1
 8010e0c:	e7f8      	b.n	8010e00 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8010e0e:	07d0      	lsls	r0, r2, #31
 8010e10:	bf42      	ittt	mi
 8010e12:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8010e16:	f801 0b01 	strbmi.w	r0, [r1], #1
 8010e1a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8010e1e:	2b01      	cmp	r3, #1
 8010e20:	d911      	bls.n	8010e46 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010e22:	ea81 0402 	eor.w	r4, r1, r2
 8010e26:	07a4      	lsls	r4, r4, #30
 8010e28:	4610      	mov	r0, r2
 8010e2a:	d022      	beq.n	8010e72 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8010e2c:	f023 0401 	bic.w	r4, r3, #1
 8010e30:	440c      	add	r4, r1
 8010e32:	428c      	cmp	r4, r1
 8010e34:	4602      	mov	r2, r0
 8010e36:	d904      	bls.n	8010e42 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8010e38:	8812      	ldrh	r2, [r2, #0]
 8010e3a:	f821 2b02 	strh.w	r2, [r1], #2
 8010e3e:	3002      	adds	r0, #2
 8010e40:	e7f7      	b.n	8010e32 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8010e42:	f003 0301 	and.w	r3, r3, #1
 8010e46:	f023 0003 	bic.w	r0, r3, #3
 8010e4a:	4408      	add	r0, r1
 8010e4c:	4288      	cmp	r0, r1
 8010e4e:	4614      	mov	r4, r2
 8010e50:	d904      	bls.n	8010e5c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8010e52:	6824      	ldr	r4, [r4, #0]
 8010e54:	f841 4b04 	str.w	r4, [r1], #4
 8010e58:	3204      	adds	r2, #4
 8010e5a:	e7f7      	b.n	8010e4c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8010e5c:	f003 0303 	and.w	r3, r3, #3
 8010e60:	440b      	add	r3, r1
 8010e62:	3a01      	subs	r2, #1
 8010e64:	428b      	cmp	r3, r1
 8010e66:	d90c      	bls.n	8010e82 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010e68:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010e6c:	f801 0b01 	strb.w	r0, [r1], #1
 8010e70:	e7f8      	b.n	8010e64 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8010e72:	0790      	lsls	r0, r2, #30
 8010e74:	d0e7      	beq.n	8010e46 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010e76:	f832 0b02 	ldrh.w	r0, [r2], #2
 8010e7a:	f821 0b02 	strh.w	r0, [r1], #2
 8010e7e:	3b02      	subs	r3, #2
 8010e80:	e7e1      	b.n	8010e46 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010e82:	2001      	movs	r0, #1
 8010e84:	bd10      	pop	{r4, pc}

08010e86 <_ZN8touchgfx3HAL7noTouchEv>:
 8010e86:	b510      	push	{r4, lr}
 8010e88:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8010e8c:	4604      	mov	r4, r0
 8010e8e:	b153      	cbz	r3, 8010ea6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8010e90:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8010e94:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8010e98:	2101      	movs	r1, #1
 8010e9a:	301c      	adds	r0, #28
 8010e9c:	f015 fe24 	bl	8026ae8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010ea0:	2300      	movs	r3, #0
 8010ea2:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8010ea6:	bd10      	pop	{r4, pc}

08010ea8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8010ea8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010eac:	b085      	sub	sp, #20
 8010eae:	ad04      	add	r5, sp, #16
 8010eb0:	4604      	mov	r4, r0
 8010eb2:	2000      	movs	r0, #0
 8010eb4:	f845 0d04 	str.w	r0, [r5, #-4]!
 8010eb8:	69a0      	ldr	r0, [r4, #24]
 8010eba:	6806      	ldr	r6, [r0, #0]
 8010ebc:	9501      	str	r5, [sp, #4]
 8010ebe:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8010ec2:	9500      	str	r5, [sp, #0]
 8010ec4:	6835      	ldr	r5, [r6, #0]
 8010ec6:	4699      	mov	r9, r3
 8010ec8:	460f      	mov	r7, r1
 8010eca:	4690      	mov	r8, r2
 8010ecc:	47a8      	blx	r5
 8010ece:	4d10      	ldr	r5, [pc, #64]	; (8010f10 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8010ed0:	4606      	mov	r6, r0
 8010ed2:	f8a5 9000 	strh.w	r9, [r5]
 8010ed6:	f7f3 fbc5 	bl	8004664 <_ZN8touchgfx3HAL3lcdEv>
 8010eda:	6803      	ldr	r3, [r0, #0]
 8010edc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010ede:	4798      	blx	r3
 8010ee0:	b128      	cbz	r0, 8010eee <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8010ee2:	2801      	cmp	r0, #1
 8010ee4:	d00b      	beq.n	8010efe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010ee6:	4630      	mov	r0, r6
 8010ee8:	b005      	add	sp, #20
 8010eea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010eee:	882b      	ldrh	r3, [r5, #0]
 8010ef0:	fb08 7203 	mla	r2, r8, r3, r7
 8010ef4:	9b03      	ldr	r3, [sp, #12]
 8010ef6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8010efa:	63e3      	str	r3, [r4, #60]	; 0x3c
 8010efc:	e7f3      	b.n	8010ee6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010efe:	882a      	ldrh	r2, [r5, #0]
 8010f00:	9b03      	ldr	r3, [sp, #12]
 8010f02:	fb08 7202 	mla	r2, r8, r2, r7
 8010f06:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8010f0a:	1a9a      	subs	r2, r3, r2
 8010f0c:	63e2      	str	r2, [r4, #60]	; 0x3c
 8010f0e:	e7ea      	b.n	8010ee6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010f10:	20012dae 	.word	0x20012dae

08010f14 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010f14:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010f16:	b08b      	sub	sp, #44	; 0x2c
 8010f18:	4617      	mov	r7, r2
 8010f1a:	4604      	mov	r4, r0
 8010f1c:	460e      	mov	r6, r1
 8010f1e:	461d      	mov	r5, r3
 8010f20:	f7f3 fba0 	bl	8004664 <_ZN8touchgfx3HAL3lcdEv>
 8010f24:	6803      	ldr	r3, [r0, #0]
 8010f26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010f28:	4798      	blx	r3
 8010f2a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8010f2e:	9007      	str	r0, [sp, #28]
 8010f30:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010f34:	4b0d      	ldr	r3, [pc, #52]	; (8010f6c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8010f36:	6822      	ldr	r2, [r4, #0]
 8010f38:	881b      	ldrh	r3, [r3, #0]
 8010f3a:	9306      	str	r3, [sp, #24]
 8010f3c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8010f40:	9305      	str	r3, [sp, #20]
 8010f42:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8010f46:	9304      	str	r3, [sp, #16]
 8010f48:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010f4c:	9303      	str	r3, [sp, #12]
 8010f4e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010f52:	9302      	str	r3, [sp, #8]
 8010f54:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010f58:	e9cd 5300 	strd	r5, r3, [sp]
 8010f5c:	4631      	mov	r1, r6
 8010f5e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8010f60:	463b      	mov	r3, r7
 8010f62:	2200      	movs	r2, #0
 8010f64:	4620      	mov	r0, r4
 8010f66:	47a8      	blx	r5
 8010f68:	b00b      	add	sp, #44	; 0x2c
 8010f6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010f6c:	20012dae 	.word	0x20012dae

08010f70 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8010f70:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010f74:	4698      	mov	r8, r3
 8010f76:	6803      	ldr	r3, [r0, #0]
 8010f78:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8010f7a:	4b15      	ldr	r3, [pc, #84]	; (8010fd0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8010f7c:	b08b      	sub	sp, #44	; 0x2c
 8010f7e:	4617      	mov	r7, r2
 8010f80:	f8b3 9000 	ldrh.w	r9, [r3]
 8010f84:	460e      	mov	r6, r1
 8010f86:	4604      	mov	r4, r0
 8010f88:	f7f3 fb6c 	bl	8004664 <_ZN8touchgfx3HAL3lcdEv>
 8010f8c:	6803      	ldr	r3, [r0, #0]
 8010f8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010f90:	4798      	blx	r3
 8010f92:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010f96:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010f9a:	2302      	movs	r3, #2
 8010f9c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8010fa0:	2301      	movs	r3, #1
 8010fa2:	9305      	str	r3, [sp, #20]
 8010fa4:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8010fa8:	9304      	str	r3, [sp, #16]
 8010faa:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8010fae:	9303      	str	r3, [sp, #12]
 8010fb0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010fb4:	9302      	str	r3, [sp, #8]
 8010fb6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010fba:	2200      	movs	r2, #0
 8010fbc:	e9cd 8300 	strd	r8, r3, [sp]
 8010fc0:	4631      	mov	r1, r6
 8010fc2:	463b      	mov	r3, r7
 8010fc4:	4620      	mov	r0, r4
 8010fc6:	47a8      	blx	r5
 8010fc8:	b00b      	add	sp, #44	; 0x2c
 8010fca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010fce:	bf00      	nop
 8010fd0:	20012dae 	.word	0x20012dae

08010fd4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8010fd4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010fd8:	4698      	mov	r8, r3
 8010fda:	6803      	ldr	r3, [r0, #0]
 8010fdc:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8010fde:	4b11      	ldr	r3, [pc, #68]	; (8011024 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8010fe0:	b087      	sub	sp, #28
 8010fe2:	f8b3 9000 	ldrh.w	r9, [r3]
 8010fe6:	460e      	mov	r6, r1
 8010fe8:	4617      	mov	r7, r2
 8010fea:	4604      	mov	r4, r0
 8010fec:	f7f3 fb3a 	bl	8004664 <_ZN8touchgfx3HAL3lcdEv>
 8010ff0:	6803      	ldr	r3, [r0, #0]
 8010ff2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010ff4:	4798      	blx	r3
 8010ff6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8010ffa:	f8cd 900c 	str.w	r9, [sp, #12]
 8010ffe:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8011002:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8011006:	9302      	str	r3, [sp, #8]
 8011008:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801100c:	9301      	str	r3, [sp, #4]
 801100e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011012:	9300      	str	r3, [sp, #0]
 8011014:	463a      	mov	r2, r7
 8011016:	4643      	mov	r3, r8
 8011018:	4631      	mov	r1, r6
 801101a:	4620      	mov	r0, r4
 801101c:	47a8      	blx	r5
 801101e:	b007      	add	sp, #28
 8011020:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011024:	20012dae 	.word	0x20012dae

08011028 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8011028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801102c:	4604      	mov	r4, r0
 801102e:	b08f      	sub	sp, #60	; 0x3c
 8011030:	4610      	mov	r0, r2
 8011032:	460d      	mov	r5, r1
 8011034:	4691      	mov	r9, r2
 8011036:	461e      	mov	r6, r3
 8011038:	f008 f8f0 	bl	801921c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801103c:	2800      	cmp	r0, #0
 801103e:	f000 809d 	beq.w	801117c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8011042:	6823      	ldr	r3, [r4, #0]
 8011044:	f8df b198 	ldr.w	fp, [pc, #408]	; 80111e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8011048:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801104a:	f8df a198 	ldr.w	sl, [pc, #408]	; 80111e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 801104e:	4f61      	ldr	r7, [pc, #388]	; (80111d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011050:	4620      	mov	r0, r4
 8011052:	4798      	blx	r3
 8011054:	6823      	ldr	r3, [r4, #0]
 8011056:	4620      	mov	r0, r4
 8011058:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801105a:	4798      	blx	r3
 801105c:	f8bb 3000 	ldrh.w	r3, [fp]
 8011060:	9301      	str	r3, [sp, #4]
 8011062:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8011066:	f8ba 3000 	ldrh.w	r3, [sl]
 801106a:	9302      	str	r3, [sp, #8]
 801106c:	883b      	ldrh	r3, [r7, #0]
 801106e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8011072:	9303      	str	r3, [sp, #12]
 8011074:	4b58      	ldr	r3, [pc, #352]	; (80111d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011076:	9305      	str	r3, [sp, #20]
 8011078:	881a      	ldrh	r2, [r3, #0]
 801107a:	9204      	str	r2, [sp, #16]
 801107c:	4640      	mov	r0, r8
 801107e:	f008 f961 	bl	8019344 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011082:	8038      	strh	r0, [r7, #0]
 8011084:	4640      	mov	r0, r8
 8011086:	f008 f991 	bl	80193ac <_ZNK8touchgfx6Bitmap9getHeightEv>
 801108a:	9b05      	ldr	r3, [sp, #20]
 801108c:	b280      	uxth	r0, r0
 801108e:	8018      	strh	r0, [r3, #0]
 8011090:	4b52      	ldr	r3, [pc, #328]	; (80111dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8011092:	781b      	ldrb	r3, [r3, #0]
 8011094:	2b00      	cmp	r3, #0
 8011096:	d174      	bne.n	8011182 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8011098:	883b      	ldrh	r3, [r7, #0]
 801109a:	f8ab 3000 	strh.w	r3, [fp]
 801109e:	f8aa 0000 	strh.w	r0, [sl]
 80110a2:	4648      	mov	r0, r9
 80110a4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 80110a8:	f008 f8b8 	bl	801921c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80110ac:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 80110b0:	2200      	movs	r2, #0
 80110b2:	4611      	mov	r1, r2
 80110b4:	4628      	mov	r0, r5
 80110b6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 80110ba:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 80110be:	f7f1 ff46 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 80110c2:	2301      	movs	r3, #1
 80110c4:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 80110c8:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 80110cc:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80110d0:	2b00      	cmp	r3, #0
 80110d2:	dd5c      	ble.n	801118e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80110d4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80110d8:	2b00      	cmp	r3, #0
 80110da:	dd58      	ble.n	801118e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80110dc:	462a      	mov	r2, r5
 80110de:	ab0a      	add	r3, sp, #40	; 0x28
 80110e0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80110e4:	6851      	ldr	r1, [r2, #4]
 80110e6:	c303      	stmia	r3!, {r0, r1}
 80110e8:	4631      	mov	r1, r6
 80110ea:	a80a      	add	r0, sp, #40	; 0x28
 80110ec:	f7ff fc06 	bl	80108fc <_ZN8touchgfx4RectaNERKS0_>
 80110f0:	4b38      	ldr	r3, [pc, #224]	; (80111d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80110f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80110f6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80110fa:	2100      	movs	r1, #0
 80110fc:	aa0a      	add	r2, sp, #40	; 0x28
 80110fe:	4b36      	ldr	r3, [pc, #216]	; (80111d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011100:	910c      	str	r1, [sp, #48]	; 0x30
 8011102:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011106:	f9b3 3000 	ldrsh.w	r3, [r3]
 801110a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801110e:	ab08      	add	r3, sp, #32
 8011110:	e883 0003 	stmia.w	r3, {r0, r1}
 8011114:	4618      	mov	r0, r3
 8011116:	a90c      	add	r1, sp, #48	; 0x30
 8011118:	f7ff fbf0 	bl	80108fc <_ZN8touchgfx4RectaNERKS0_>
 801111c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801111e:	2b00      	cmp	r3, #0
 8011120:	d13c      	bne.n	801119c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8011122:	2000      	movs	r0, #0
 8011124:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8011128:	2600      	movs	r6, #0
 801112a:	682a      	ldr	r2, [r5, #0]
 801112c:	696b      	ldr	r3, [r5, #20]
 801112e:	616e      	str	r6, [r5, #20]
 8011130:	9305      	str	r3, [sp, #20]
 8011132:	6892      	ldr	r2, [r2, #8]
 8011134:	a908      	add	r1, sp, #32
 8011136:	4628      	mov	r0, r5
 8011138:	4790      	blx	r2
 801113a:	9b05      	ldr	r3, [sp, #20]
 801113c:	616b      	str	r3, [r5, #20]
 801113e:	4652      	mov	r2, sl
 8011140:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8011144:	4649      	mov	r1, r9
 8011146:	4628      	mov	r0, r5
 8011148:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 801114c:	f7f1 feff 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8011150:	4b23      	ldr	r3, [pc, #140]	; (80111e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8011152:	9a01      	ldr	r2, [sp, #4]
 8011154:	801a      	strh	r2, [r3, #0]
 8011156:	4b23      	ldr	r3, [pc, #140]	; (80111e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8011158:	9a02      	ldr	r2, [sp, #8]
 801115a:	801a      	strh	r2, [r3, #0]
 801115c:	4b1d      	ldr	r3, [pc, #116]	; (80111d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801115e:	9a03      	ldr	r2, [sp, #12]
 8011160:	801a      	strh	r2, [r3, #0]
 8011162:	4b1d      	ldr	r3, [pc, #116]	; (80111d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011164:	9a04      	ldr	r2, [sp, #16]
 8011166:	801a      	strh	r2, [r3, #0]
 8011168:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 801116c:	6823      	ldr	r3, [r4, #0]
 801116e:	4620      	mov	r0, r4
 8011170:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011172:	4798      	blx	r3
 8011174:	6823      	ldr	r3, [r4, #0]
 8011176:	4620      	mov	r0, r4
 8011178:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801117a:	4798      	blx	r3
 801117c:	b00f      	add	sp, #60	; 0x3c
 801117e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011182:	883b      	ldrh	r3, [r7, #0]
 8011184:	f8ab 0000 	strh.w	r0, [fp]
 8011188:	f8aa 3000 	strh.w	r3, [sl]
 801118c:	e789      	b.n	80110a2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 801118e:	462a      	mov	r2, r5
 8011190:	ab0a      	add	r3, sp, #40	; 0x28
 8011192:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011196:	6851      	ldr	r1, [r2, #4]
 8011198:	c303      	stmia	r3!, {r0, r1}
 801119a:	e7a9      	b.n	80110f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 801119c:	a807      	add	r0, sp, #28
 801119e:	f008 fa41 	bl	8019624 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80111a2:	4606      	mov	r6, r0
 80111a4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80111a6:	6803      	ldr	r3, [r0, #0]
 80111a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80111aa:	4798      	blx	r3
 80111ac:	4286      	cmp	r6, r0
 80111ae:	d1b8      	bne.n	8011122 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 80111b0:	f7f3 fa58 	bl	8004664 <_ZN8touchgfx3HAL3lcdEv>
 80111b4:	6803      	ldr	r3, [r0, #0]
 80111b6:	4606      	mov	r6, r0
 80111b8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80111ba:	9305      	str	r3, [sp, #20]
 80111bc:	a807      	add	r0, sp, #28
 80111be:	f008 fa31 	bl	8019624 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80111c2:	9b05      	ldr	r3, [sp, #20]
 80111c4:	4601      	mov	r1, r0
 80111c6:	4630      	mov	r0, r6
 80111c8:	4798      	blx	r3
 80111ca:	f080 0001 	eor.w	r0, r0, #1
 80111ce:	b2c0      	uxtb	r0, r0
 80111d0:	e7a8      	b.n	8011124 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 80111d2:	bf00      	nop
 80111d4:	20012da8 	.word	0x20012da8
 80111d8:	20012daa 	.word	0x20012daa
 80111dc:	20012dac 	.word	0x20012dac
 80111e0:	20012dae 	.word	0x20012dae
 80111e4:	20012db0 	.word	0x20012db0

080111e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 80111e8:	b510      	push	{r4, lr}
 80111ea:	4b07      	ldr	r3, [pc, #28]	; (8011208 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 80111ec:	781b      	ldrb	r3, [r3, #0]
 80111ee:	4604      	mov	r4, r0
 80111f0:	b13b      	cbz	r3, 8011202 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80111f2:	6803      	ldr	r3, [r0, #0]
 80111f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80111f6:	4798      	blx	r3
 80111f8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80111fa:	4283      	cmp	r3, r0
 80111fc:	d101      	bne.n	8011202 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80111fe:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8011200:	bd10      	pop	{r4, pc}
 8011202:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011204:	e7fc      	b.n	8011200 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8011206:	bf00      	nop
 8011208:	20012db2 	.word	0x20012db2

0801120c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 801120c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011210:	b08a      	sub	sp, #40	; 0x28
 8011212:	461d      	mov	r5, r3
 8011214:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8011218:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801121c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011220:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011224:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011228:	f8ad 301a 	strh.w	r3, [sp, #26]
 801122c:	2400      	movs	r4, #0
 801122e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011232:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8011236:	f8ad 301c 	strh.w	r3, [sp, #28]
 801123a:	4690      	mov	r8, r2
 801123c:	4607      	mov	r7, r0
 801123e:	9404      	str	r4, [sp, #16]
 8011240:	f88d 4020 	strb.w	r4, [sp, #32]
 8011244:	f7ff ffd0 	bl	80111e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011248:	fb06 8505 	mla	r5, r6, r5, r8
 801124c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011250:	6878      	ldr	r0, [r7, #4]
 8011252:	9505      	str	r5, [sp, #20]
 8011254:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011258:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801125c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8011260:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8011264:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8011268:	6803      	ldr	r3, [r0, #0]
 801126a:	a901      	add	r1, sp, #4
 801126c:	685b      	ldr	r3, [r3, #4]
 801126e:	4798      	blx	r3
 8011270:	b00a      	add	sp, #40	; 0x28
 8011272:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011276 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8011276:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801127a:	b08b      	sub	sp, #44	; 0x2c
 801127c:	2400      	movs	r4, #0
 801127e:	461d      	mov	r5, r3
 8011280:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8011284:	4688      	mov	r8, r1
 8011286:	4691      	mov	r9, r2
 8011288:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 801128c:	9404      	str	r4, [sp, #16]
 801128e:	4607      	mov	r7, r0
 8011290:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011294:	f7ff ffa8 	bl	80111e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011298:	fb06 9505 	mla	r5, r6, r5, r9
 801129c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80112a0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80112a4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80112a8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80112ac:	6878      	ldr	r0, [r7, #4]
 80112ae:	9505      	str	r5, [sp, #20]
 80112b0:	f8ad 301a 	strh.w	r3, [sp, #26]
 80112b4:	f8ad 401c 	strh.w	r4, [sp, #28]
 80112b8:	f8ad 601e 	strh.w	r6, [sp, #30]
 80112bc:	f8cd 8010 	str.w	r8, [sp, #16]
 80112c0:	f8ad 4020 	strh.w	r4, [sp, #32]
 80112c4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80112c8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80112cc:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80112d0:	6803      	ldr	r3, [r0, #0]
 80112d2:	a901      	add	r1, sp, #4
 80112d4:	685b      	ldr	r3, [r3, #4]
 80112d6:	4798      	blx	r3
 80112d8:	b00b      	add	sp, #44	; 0x2c
 80112da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

080112e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 80112e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80112e4:	b08a      	sub	sp, #40	; 0x28
 80112e6:	4698      	mov	r8, r3
 80112e8:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 80112ec:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 80112f0:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 80112f4:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 80112f8:	2300      	movs	r3, #0
 80112fa:	2d0b      	cmp	r5, #11
 80112fc:	4606      	mov	r6, r0
 80112fe:	9304      	str	r3, [sp, #16]
 8011300:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8011304:	d138      	bne.n	8011378 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8011306:	2380      	movs	r3, #128	; 0x80
 8011308:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801130c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011310:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011314:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011318:	f8ad 301a 	strh.w	r3, [sp, #26]
 801131c:	f88d 0020 	strb.w	r0, [sp, #32]
 8011320:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011324:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011328:	4630      	mov	r0, r6
 801132a:	9203      	str	r2, [sp, #12]
 801132c:	f7ff ff5c 	bl	80111e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011330:	2c0b      	cmp	r4, #11
 8011332:	bf98      	it	ls
 8011334:	4b1b      	ldrls	r3, [pc, #108]	; (80113a4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8011336:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 801133a:	bf98      	it	ls
 801133c:	5d19      	ldrbls	r1, [r3, r4]
 801133e:	f8ad 701e 	strh.w	r7, [sp, #30]
 8011342:	bf88      	it	hi
 8011344:	2100      	movhi	r1, #0
 8011346:	fb02 8307 	mla	r3, r2, r7, r8
 801134a:	10c9      	asrs	r1, r1, #3
 801134c:	fb01 0003 	mla	r0, r1, r3, r0
 8011350:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8011354:	9005      	str	r0, [sp, #20]
 8011356:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 801135a:	6870      	ldr	r0, [r6, #4]
 801135c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8011360:	2300      	movs	r3, #0
 8011362:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011366:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801136a:	6803      	ldr	r3, [r0, #0]
 801136c:	a901      	add	r1, sp, #4
 801136e:	685b      	ldr	r3, [r3, #4]
 8011370:	4798      	blx	r3
 8011372:	b00a      	add	sp, #40	; 0x28
 8011374:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011378:	2d02      	cmp	r5, #2
 801137a:	d109      	bne.n	8011390 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 801137c:	28ff      	cmp	r0, #255	; 0xff
 801137e:	d105      	bne.n	801138c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8011380:	f1bc 0f00 	cmp.w	ip, #0
 8011384:	bf14      	ite	ne
 8011386:	2340      	movne	r3, #64	; 0x40
 8011388:	2320      	moveq	r3, #32
 801138a:	e7bd      	b.n	8011308 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801138c:	2340      	movs	r3, #64	; 0x40
 801138e:	e7bb      	b.n	8011308 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011390:	28ff      	cmp	r0, #255	; 0xff
 8011392:	d105      	bne.n	80113a0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8011394:	f1bc 0f00 	cmp.w	ip, #0
 8011398:	bf14      	ite	ne
 801139a:	2304      	movne	r3, #4
 801139c:	2301      	moveq	r3, #1
 801139e:	e7b3      	b.n	8011308 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80113a0:	2304      	movs	r3, #4
 80113a2:	e7b1      	b.n	8011308 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80113a4:	0802ec2c 	.word	0x0802ec2c

080113a8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 80113a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80113ac:	b08b      	sub	sp, #44	; 0x2c
 80113ae:	461d      	mov	r5, r3
 80113b0:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 80113b4:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 80113b8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 80113bc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80113c0:	bf14      	ite	ne
 80113c2:	2308      	movne	r3, #8
 80113c4:	2302      	moveq	r3, #2
 80113c6:	2400      	movs	r4, #0
 80113c8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80113cc:	4688      	mov	r8, r1
 80113ce:	4693      	mov	fp, r2
 80113d0:	9404      	str	r4, [sp, #16]
 80113d2:	4607      	mov	r7, r0
 80113d4:	f7ff ff08 	bl	80111e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80113d8:	2e0b      	cmp	r6, #11
 80113da:	bf98      	it	ls
 80113dc:	4b15      	ldrls	r3, [pc, #84]	; (8011434 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 80113de:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80113e2:	bf98      	it	ls
 80113e4:	5d9c      	ldrbls	r4, [r3, r6]
 80113e6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80113ea:	f8ad 3018 	strh.w	r3, [sp, #24]
 80113ee:	fb05 b50a 	mla	r5, r5, sl, fp
 80113f2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80113f6:	f8ad 301a 	strh.w	r3, [sp, #26]
 80113fa:	10e4      	asrs	r4, r4, #3
 80113fc:	fb04 0405 	mla	r4, r4, r5, r0
 8011400:	2300      	movs	r3, #0
 8011402:	6878      	ldr	r0, [r7, #4]
 8011404:	9405      	str	r4, [sp, #20]
 8011406:	f8ad 301c 	strh.w	r3, [sp, #28]
 801140a:	f8ad a01e 	strh.w	sl, [sp, #30]
 801140e:	f8cd 8010 	str.w	r8, [sp, #16]
 8011412:	f88d 9020 	strb.w	r9, [sp, #32]
 8011416:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 801141a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801141e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8011422:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8011426:	6803      	ldr	r3, [r0, #0]
 8011428:	a901      	add	r1, sp, #4
 801142a:	685b      	ldr	r3, [r3, #4]
 801142c:	4798      	blx	r3
 801142e:	b00b      	add	sp, #44	; 0x2c
 8011430:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011434:	0802ec2c 	.word	0x0802ec2c

08011438 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8011438:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801143c:	461e      	mov	r6, r3
 801143e:	4b0a      	ldr	r3, [pc, #40]	; (8011468 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8011440:	460f      	mov	r7, r1
 8011442:	881d      	ldrh	r5, [r3, #0]
 8011444:	4690      	mov	r8, r2
 8011446:	f7f3 f90d 	bl	8004664 <_ZN8touchgfx3HAL3lcdEv>
 801144a:	6803      	ldr	r3, [r0, #0]
 801144c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801144e:	4798      	blx	r3
 8011450:	280b      	cmp	r0, #11
 8011452:	bf9a      	itte	ls
 8011454:	4b05      	ldrls	r3, [pc, #20]	; (801146c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8011456:	5c1c      	ldrbls	r4, [r3, r0]
 8011458:	2400      	movhi	r4, #0
 801145a:	fb08 7005 	mla	r0, r8, r5, r7
 801145e:	10e4      	asrs	r4, r4, #3
 8011460:	fb04 6000 	mla	r0, r4, r0, r6
 8011464:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011468:	20012dae 	.word	0x20012dae
 801146c:	0802ec2c 	.word	0x0802ec2c

08011470 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8011470:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011472:	b08b      	sub	sp, #44	; 0x2c
 8011474:	461f      	mov	r7, r3
 8011476:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801147a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801147e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011482:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011486:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801148a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801148e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011492:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011496:	2500      	movs	r5, #0
 8011498:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801149c:	f88d 3020 	strb.w	r3, [sp, #32]
 80114a0:	4604      	mov	r4, r0
 80114a2:	4616      	mov	r6, r2
 80114a4:	9504      	str	r5, [sp, #16]
 80114a6:	f7ff fe9f 	bl	80111e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80114aa:	463a      	mov	r2, r7
 80114ac:	4631      	mov	r1, r6
 80114ae:	4603      	mov	r3, r0
 80114b0:	4620      	mov	r0, r4
 80114b2:	f7ff ffc1 	bl	8011438 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80114b6:	4b0e      	ldr	r3, [pc, #56]	; (80114f0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 80114b8:	9005      	str	r0, [sp, #20]
 80114ba:	881b      	ldrh	r3, [r3, #0]
 80114bc:	f8ad 301e 	strh.w	r3, [sp, #30]
 80114c0:	f7f3 f8d0 	bl	8004664 <_ZN8touchgfx3HAL3lcdEv>
 80114c4:	6803      	ldr	r3, [r0, #0]
 80114c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80114c8:	4798      	blx	r3
 80114ca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80114cc:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 80114d0:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80114d4:	9304      	str	r3, [sp, #16]
 80114d6:	6860      	ldr	r0, [r4, #4]
 80114d8:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80114dc:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80114e0:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 80114e4:	6803      	ldr	r3, [r0, #0]
 80114e6:	a901      	add	r1, sp, #4
 80114e8:	685b      	ldr	r3, [r3, #4]
 80114ea:	4798      	blx	r3
 80114ec:	b00b      	add	sp, #44	; 0x2c
 80114ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80114f0:	20012dae 	.word	0x20012dae

080114f4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80114f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80114f6:	b08d      	sub	sp, #52	; 0x34
 80114f8:	466b      	mov	r3, sp
 80114fa:	e883 0006 	stmia.w	r3, {r1, r2}
 80114fe:	2300      	movs	r3, #0
 8011500:	9306      	str	r3, [sp, #24]
 8011502:	6803      	ldr	r3, [r0, #0]
 8011504:	f8bd 6000 	ldrh.w	r6, [sp]
 8011508:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801150a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 801150e:	2501      	movs	r5, #1
 8011510:	9503      	str	r5, [sp, #12]
 8011512:	4604      	mov	r4, r0
 8011514:	4798      	blx	r3
 8011516:	463a      	mov	r2, r7
 8011518:	4631      	mov	r1, r6
 801151a:	4603      	mov	r3, r0
 801151c:	4620      	mov	r0, r4
 801151e:	f7ff ff8b 	bl	8011438 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011522:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011524:	9307      	str	r3, [sp, #28]
 8011526:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801152a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801152e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011532:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011536:	4b0f      	ldr	r3, [pc, #60]	; (8011574 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8011538:	9004      	str	r0, [sp, #16]
 801153a:	881b      	ldrh	r3, [r3, #0]
 801153c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011540:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011544:	f7f3 f88e 	bl	8004664 <_ZN8touchgfx3HAL3lcdEv>
 8011548:	6803      	ldr	r3, [r0, #0]
 801154a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801154c:	4798      	blx	r3
 801154e:	23ff      	movs	r3, #255	; 0xff
 8011550:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8011554:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011558:	6860      	ldr	r0, [r4, #4]
 801155a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 801155e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8011562:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8011566:	6803      	ldr	r3, [r0, #0]
 8011568:	a903      	add	r1, sp, #12
 801156a:	685b      	ldr	r3, [r3, #4]
 801156c:	4798      	blx	r3
 801156e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011570:	b00d      	add	sp, #52	; 0x34
 8011572:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011574:	20012dae 	.word	0x20012dae

08011578 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8011578:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801157c:	b08c      	sub	sp, #48	; 0x30
 801157e:	461e      	mov	r6, r3
 8011580:	466d      	mov	r5, sp
 8011582:	2300      	movs	r3, #0
 8011584:	e885 0006 	stmia.w	r5, {r1, r2}
 8011588:	9306      	str	r3, [sp, #24]
 801158a:	6803      	ldr	r3, [r0, #0]
 801158c:	f8bd 7000 	ldrh.w	r7, [sp]
 8011590:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011592:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8011596:	2501      	movs	r5, #1
 8011598:	9503      	str	r5, [sp, #12]
 801159a:	4604      	mov	r4, r0
 801159c:	4798      	blx	r3
 801159e:	4642      	mov	r2, r8
 80115a0:	4639      	mov	r1, r7
 80115a2:	4603      	mov	r3, r0
 80115a4:	4620      	mov	r0, r4
 80115a6:	f7ff ff47 	bl	8011438 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80115aa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80115ae:	f8ad 3020 	strh.w	r3, [sp, #32]
 80115b2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80115b6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80115ba:	4b11      	ldr	r3, [pc, #68]	; (8011600 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 80115bc:	9004      	str	r0, [sp, #16]
 80115be:	881b      	ldrh	r3, [r3, #0]
 80115c0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80115c4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80115c6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80115ca:	9607      	str	r6, [sp, #28]
 80115cc:	f7f3 f84a 	bl	8004664 <_ZN8touchgfx3HAL3lcdEv>
 80115d0:	6803      	ldr	r3, [r0, #0]
 80115d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80115d4:	4798      	blx	r3
 80115d6:	23ff      	movs	r3, #255	; 0xff
 80115d8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80115dc:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80115e0:	6860      	ldr	r0, [r4, #4]
 80115e2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80115e6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80115ea:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80115ee:	6803      	ldr	r3, [r0, #0]
 80115f0:	a903      	add	r1, sp, #12
 80115f2:	685b      	ldr	r3, [r3, #4]
 80115f4:	4798      	blx	r3
 80115f6:	4630      	mov	r0, r6
 80115f8:	b00c      	add	sp, #48	; 0x30
 80115fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80115fe:	bf00      	nop
 8011600:	20012dae 	.word	0x20012dae

08011604 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8011604:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011606:	b085      	sub	sp, #20
 8011608:	ac02      	add	r4, sp, #8
 801160a:	e884 0006 	stmia.w	r4, {r1, r2}
 801160e:	4605      	mov	r5, r0
 8011610:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8011614:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8011618:	f7ff fde6 	bl	80111e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801161c:	463a      	mov	r2, r7
 801161e:	4603      	mov	r3, r0
 8011620:	4631      	mov	r1, r6
 8011622:	4628      	mov	r0, r5
 8011624:	f7ff ff08 	bl	8011438 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011628:	4a05      	ldr	r2, [pc, #20]	; (8011640 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 801162a:	682b      	ldr	r3, [r5, #0]
 801162c:	8812      	ldrh	r2, [r2, #0]
 801162e:	9200      	str	r2, [sp, #0]
 8011630:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8011632:	e894 0006 	ldmia.w	r4, {r1, r2}
 8011636:	4603      	mov	r3, r0
 8011638:	4628      	mov	r0, r5
 801163a:	47b0      	blx	r6
 801163c:	b005      	add	sp, #20
 801163e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011640:	20012dae 	.word	0x20012dae

08011644 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8011644:	b570      	push	{r4, r5, r6, lr}
 8011646:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 801164a:	4604      	mov	r4, r0
 801164c:	b19b      	cbz	r3, 8011676 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 801164e:	2002      	movs	r0, #2
 8011650:	f7ef fc52 	bl	8000ef8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8011654:	2300      	movs	r3, #0
 8011656:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 801165a:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 801165e:	6823      	ldr	r3, [r4, #0]
 8011660:	4620      	mov	r0, r4
 8011662:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8011666:	f7ff fdbf 	bl	80111e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801166a:	462b      	mov	r3, r5
 801166c:	4601      	mov	r1, r0
 801166e:	4620      	mov	r0, r4
 8011670:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011674:	4718      	bx	r3
 8011676:	bd70      	pop	{r4, r5, r6, pc}

08011678 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8011678:	b538      	push	{r3, r4, r5, lr}
 801167a:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 801167e:	428b      	cmp	r3, r1
 8011680:	4604      	mov	r4, r0
 8011682:	460d      	mov	r5, r1
 8011684:	d006      	beq.n	8011694 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8011686:	6803      	ldr	r3, [r0, #0]
 8011688:	b929      	cbnz	r1, 8011696 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 801168a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801168e:	4798      	blx	r3
 8011690:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8011694:	bd38      	pop	{r3, r4, r5, pc}
 8011696:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 801169a:	e7f8      	b.n	801168e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0801169c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 801169c:	b510      	push	{r4, lr}
 801169e:	4b0d      	ldr	r3, [pc, #52]	; (80116d4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 80116a0:	781b      	ldrb	r3, [r3, #0]
 80116a2:	4604      	mov	r4, r0
 80116a4:	b95b      	cbnz	r3, 80116be <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80116a6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 80116aa:	2b02      	cmp	r3, #2
 80116ac:	d007      	beq.n	80116be <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80116ae:	6840      	ldr	r0, [r0, #4]
 80116b0:	f000 f92c 	bl	801190c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80116b4:	b118      	cbz	r0, 80116be <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80116b6:	6862      	ldr	r2, [r4, #4]
 80116b8:	7a53      	ldrb	r3, [r2, #9]
 80116ba:	2b00      	cmp	r3, #0
 80116bc:	d0fc      	beq.n	80116b8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80116be:	f7ef fd53 	bl	8001168 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80116c2:	4620      	mov	r0, r4
 80116c4:	2100      	movs	r1, #0
 80116c6:	f7ff ffd7 	bl	8011678 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80116ca:	4620      	mov	r0, r4
 80116cc:	f7ff fd8c 	bl	80111e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80116d0:	bd10      	pop	{r4, pc}
 80116d2:	bf00      	nop
 80116d4:	20012db2 	.word	0x20012db2

080116d8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80116d8:	b570      	push	{r4, r5, r6, lr}
 80116da:	4604      	mov	r4, r0
 80116dc:	6803      	ldr	r3, [r0, #0]
 80116de:	b919      	cbnz	r1, 80116e8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80116e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80116e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80116e6:	4718      	bx	r3
 80116e8:	2200      	movs	r2, #0
 80116ea:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 80116ee:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 80116f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80116f4:	4798      	blx	r3
 80116f6:	6863      	ldr	r3, [r4, #4]
 80116f8:	2101      	movs	r1, #1
 80116fa:	4605      	mov	r5, r0
 80116fc:	7299      	strb	r1, [r3, #10]
 80116fe:	4620      	mov	r0, r4
 8011700:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8011704:	f7ff ffb8 	bl	8011678 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011708:	4628      	mov	r0, r5
 801170a:	bd70      	pop	{r4, r5, r6, pc}

0801170c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 801170c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8011710:	1a13      	subs	r3, r2, r0
 8011712:	4258      	negs	r0, r3
 8011714:	4158      	adcs	r0, r3
 8011716:	4770      	bx	lr

08011718 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8011718:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 801171c:	1a9b      	subs	r3, r3, r2
 801171e:	2b00      	cmp	r3, #0
 8011720:	bfdc      	itt	le
 8011722:	6882      	ldrle	r2, [r0, #8]
 8011724:	189b      	addle	r3, r3, r2
 8011726:	2b01      	cmp	r3, #1
 8011728:	bfcc      	ite	gt
 801172a:	2000      	movgt	r0, #0
 801172c:	2001      	movle	r0, #1
 801172e:	4770      	bx	lr

08011730 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8011730:	6902      	ldr	r2, [r0, #16]
 8011732:	6843      	ldr	r3, [r0, #4]
 8011734:	2024      	movs	r0, #36	; 0x24
 8011736:	fb00 3002 	mla	r0, r0, r2, r3
 801173a:	4770      	bx	lr

0801173c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 801173c:	6803      	ldr	r3, [r0, #0]
 801173e:	691b      	ldr	r3, [r3, #16]
 8011740:	4718      	bx	r3

08011742 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8011742:	b570      	push	{r4, r5, r6, lr}
 8011744:	2301      	movs	r3, #1
 8011746:	7203      	strb	r3, [r0, #8]
 8011748:	4604      	mov	r4, r0
 801174a:	6840      	ldr	r0, [r0, #4]
 801174c:	6803      	ldr	r3, [r0, #0]
 801174e:	699b      	ldr	r3, [r3, #24]
 8011750:	4798      	blx	r3
 8011752:	6803      	ldr	r3, [r0, #0]
 8011754:	2b40      	cmp	r3, #64	; 0x40
 8011756:	4605      	mov	r5, r0
 8011758:	d00c      	beq.n	8011774 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801175a:	d810      	bhi.n	801177e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 801175c:	2b04      	cmp	r3, #4
 801175e:	d01d      	beq.n	801179c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8011760:	d804      	bhi.n	801176c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8011762:	2b01      	cmp	r3, #1
 8011764:	d006      	beq.n	8011774 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011766:	2b02      	cmp	r3, #2
 8011768:	d02c      	beq.n	80117c4 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 801176a:	bd70      	pop	{r4, r5, r6, pc}
 801176c:	2b08      	cmp	r3, #8
 801176e:	d01d      	beq.n	80117ac <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8011770:	2b20      	cmp	r3, #32
 8011772:	d1fa      	bne.n	801176a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8011774:	6823      	ldr	r3, [r4, #0]
 8011776:	4620      	mov	r0, r4
 8011778:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801177a:	4798      	blx	r3
 801177c:	e013      	b.n	80117a6 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 801177e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8011782:	d0f7      	beq.n	8011774 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011784:	d804      	bhi.n	8011790 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8011786:	2b80      	cmp	r3, #128	; 0x80
 8011788:	d0f4      	beq.n	8011774 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801178a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801178e:	e7f0      	b.n	8011772 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8011790:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8011794:	d0ee      	beq.n	8011774 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011796:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 801179a:	e7e5      	b.n	8011768 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 801179c:	6823      	ldr	r3, [r4, #0]
 801179e:	7f01      	ldrb	r1, [r0, #28]
 80117a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80117a2:	4620      	mov	r0, r4
 80117a4:	4798      	blx	r3
 80117a6:	6823      	ldr	r3, [r4, #0]
 80117a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80117aa:	e006      	b.n	80117ba <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 80117ac:	6823      	ldr	r3, [r4, #0]
 80117ae:	7f01      	ldrb	r1, [r0, #28]
 80117b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80117b2:	4620      	mov	r0, r4
 80117b4:	4798      	blx	r3
 80117b6:	6823      	ldr	r3, [r4, #0]
 80117b8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80117ba:	4629      	mov	r1, r5
 80117bc:	4620      	mov	r0, r4
 80117be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80117c2:	4718      	bx	r3
 80117c4:	6823      	ldr	r3, [r4, #0]
 80117c6:	4620      	mov	r0, r4
 80117c8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80117ca:	4798      	blx	r3
 80117cc:	e7f3      	b.n	80117b6 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

080117ce <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80117ce:	4770      	bx	lr

080117d0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80117d0:	4770      	bx	lr

080117d2 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 80117d2:	4770      	bx	lr

080117d4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80117d4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80117d8:	1ad2      	subs	r2, r2, r3
 80117da:	2a00      	cmp	r2, #0
 80117dc:	b510      	push	{r4, lr}
 80117de:	bfdc      	itt	le
 80117e0:	6884      	ldrle	r4, [r0, #8]
 80117e2:	1912      	addle	r2, r2, r4
 80117e4:	2a01      	cmp	r2, #1
 80117e6:	dd16      	ble.n	8011816 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80117e8:	6842      	ldr	r2, [r0, #4]
 80117ea:	2424      	movs	r4, #36	; 0x24
 80117ec:	fb04 2303 	mla	r3, r4, r3, r2
 80117f0:	f101 0220 	add.w	r2, r1, #32
 80117f4:	f851 4b04 	ldr.w	r4, [r1], #4
 80117f8:	f843 4b04 	str.w	r4, [r3], #4
 80117fc:	4291      	cmp	r1, r2
 80117fe:	d1f9      	bne.n	80117f4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8011800:	780a      	ldrb	r2, [r1, #0]
 8011802:	701a      	strb	r2, [r3, #0]
 8011804:	68c3      	ldr	r3, [r0, #12]
 8011806:	6882      	ldr	r2, [r0, #8]
 8011808:	f3bf 8f5b 	dmb	ish
 801180c:	3301      	adds	r3, #1
 801180e:	429a      	cmp	r2, r3
 8011810:	bfd8      	it	le
 8011812:	1a9b      	suble	r3, r3, r2
 8011814:	60c3      	str	r3, [r0, #12]
 8011816:	bd10      	pop	{r4, pc}

08011818 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8011818:	6903      	ldr	r3, [r0, #16]
 801181a:	6882      	ldr	r2, [r0, #8]
 801181c:	f3bf 8f5b 	dmb	ish
 8011820:	3301      	adds	r3, #1
 8011822:	429a      	cmp	r2, r3
 8011824:	bfd8      	it	le
 8011826:	1a9b      	suble	r3, r3, r2
 8011828:	6103      	str	r3, [r0, #16]
 801182a:	4770      	bx	lr

0801182c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 801182c:	b570      	push	{r4, r5, r6, lr}
 801182e:	4604      	mov	r4, r0
 8011830:	460e      	mov	r6, r1
 8011832:	6860      	ldr	r0, [r4, #4]
 8011834:	6803      	ldr	r3, [r0, #0]
 8011836:	685b      	ldr	r3, [r3, #4]
 8011838:	4798      	blx	r3
 801183a:	2800      	cmp	r0, #0
 801183c:	d1f9      	bne.n	8011832 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 801183e:	4d0d      	ldr	r5, [pc, #52]	; (8011874 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8011840:	6828      	ldr	r0, [r5, #0]
 8011842:	6803      	ldr	r3, [r0, #0]
 8011844:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011846:	4798      	blx	r3
 8011848:	f7ef fc9c 	bl	8001184 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 801184c:	6828      	ldr	r0, [r5, #0]
 801184e:	2101      	movs	r1, #1
 8011850:	f7ff ff12 	bl	8011678 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011854:	6860      	ldr	r0, [r4, #4]
 8011856:	6803      	ldr	r3, [r0, #0]
 8011858:	4631      	mov	r1, r6
 801185a:	689b      	ldr	r3, [r3, #8]
 801185c:	4798      	blx	r3
 801185e:	6823      	ldr	r3, [r4, #0]
 8011860:	4620      	mov	r0, r4
 8011862:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011864:	4798      	blx	r3
 8011866:	6828      	ldr	r0, [r5, #0]
 8011868:	6803      	ldr	r3, [r0, #0]
 801186a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801186e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8011870:	4718      	bx	r3
 8011872:	bf00      	nop
 8011874:	20012db4 	.word	0x20012db4

08011878 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8011878:	b508      	push	{r3, lr}
 801187a:	f7ef fc75 	bl	8001168 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801187e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011882:	f7ef bc79 	b.w	8001178 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08011886 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8011886:	b510      	push	{r4, lr}
 8011888:	2114      	movs	r1, #20
 801188a:	4604      	mov	r4, r0
 801188c:	f018 f9bf 	bl	8029c0e <_ZdlPvj>
 8011890:	4620      	mov	r0, r4
 8011892:	bd10      	pop	{r4, pc}

08011894 <_ZN8touchgfx13DMA_Interface5startEv>:
 8011894:	b510      	push	{r4, lr}
 8011896:	4604      	mov	r4, r0
 8011898:	6840      	ldr	r0, [r0, #4]
 801189a:	6803      	ldr	r3, [r0, #0]
 801189c:	681b      	ldr	r3, [r3, #0]
 801189e:	4798      	blx	r3
 80118a0:	b948      	cbnz	r0, 80118b6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80118a2:	7a63      	ldrb	r3, [r4, #9]
 80118a4:	b13b      	cbz	r3, 80118b6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80118a6:	7a23      	ldrb	r3, [r4, #8]
 80118a8:	b92b      	cbnz	r3, 80118b6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80118aa:	6823      	ldr	r3, [r4, #0]
 80118ac:	4620      	mov	r0, r4
 80118ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80118b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80118b4:	4718      	bx	r3
 80118b6:	bd10      	pop	{r4, pc}

080118b8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80118b8:	b570      	push	{r4, r5, r6, lr}
 80118ba:	4604      	mov	r4, r0
 80118bc:	6840      	ldr	r0, [r0, #4]
 80118be:	6803      	ldr	r3, [r0, #0]
 80118c0:	681b      	ldr	r3, [r3, #0]
 80118c2:	4798      	blx	r3
 80118c4:	4605      	mov	r5, r0
 80118c6:	b930      	cbnz	r0, 80118d6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80118c8:	7a23      	ldrb	r3, [r4, #8]
 80118ca:	b123      	cbz	r3, 80118d6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80118cc:	6860      	ldr	r0, [r4, #4]
 80118ce:	6803      	ldr	r3, [r0, #0]
 80118d0:	695b      	ldr	r3, [r3, #20]
 80118d2:	4798      	blx	r3
 80118d4:	7225      	strb	r5, [r4, #8]
 80118d6:	6860      	ldr	r0, [r4, #4]
 80118d8:	6803      	ldr	r3, [r0, #0]
 80118da:	681b      	ldr	r3, [r3, #0]
 80118dc:	4798      	blx	r3
 80118de:	b928      	cbnz	r0, 80118ec <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80118e0:	6823      	ldr	r3, [r4, #0]
 80118e2:	4620      	mov	r0, r4
 80118e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80118e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80118ea:	4718      	bx	r3
 80118ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80118f0:	f7ef bc50 	b.w	8001194 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

080118f4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80118f4:	b510      	push	{r4, lr}
 80118f6:	4c04      	ldr	r4, [pc, #16]	; (8011908 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80118f8:	6082      	str	r2, [r0, #8]
 80118fa:	2200      	movs	r2, #0
 80118fc:	e9c0 4100 	strd	r4, r1, [r0]
 8011900:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8011904:	bd10      	pop	{r4, pc}
 8011906:	bf00      	nop
 8011908:	0802ec40 	.word	0x0802ec40

0801190c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 801190c:	6840      	ldr	r0, [r0, #4]
 801190e:	6803      	ldr	r3, [r0, #0]
 8011910:	681b      	ldr	r3, [r3, #0]
 8011912:	4718      	bx	r3

08011914 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011914:	4b06      	ldr	r3, [pc, #24]	; (8011930 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8011916:	60c1      	str	r1, [r0, #12]
 8011918:	094a      	lsrs	r2, r1, #5
 801191a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 801191e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011922:	4313      	orrs	r3, r2
 8011924:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8011928:	4319      	orrs	r1, r3
 801192a:	8201      	strh	r1, [r0, #16]
 801192c:	4770      	bx	lr
 801192e:	bf00      	nop
 8011930:	fffff800 	.word	0xfffff800

08011934 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011934:	f1a0 0008 	sub.w	r0, r0, #8
 8011938:	e7ec      	b.n	8011914 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 801193a:	bf00      	nop

0801193c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 801193c:	b508      	push	{r3, lr}
 801193e:	4b05      	ldr	r3, [pc, #20]	; (8011954 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8011940:	6818      	ldr	r0, [r3, #0]
 8011942:	6803      	ldr	r3, [r0, #0]
 8011944:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8011948:	4798      	blx	r3
 801194a:	1e43      	subs	r3, r0, #1
 801194c:	4258      	negs	r0, r3
 801194e:	4158      	adcs	r0, r3
 8011950:	bd08      	pop	{r3, pc}
 8011952:	bf00      	nop
 8011954:	20012db4 	.word	0x20012db4

08011958 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8011958:	4770      	bx	lr

0801195a <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 801195a:	3808      	subs	r0, #8
 801195c:	4770      	bx	lr

0801195e <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 801195e:	b430      	push	{r4, r5}
 8011960:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8011964:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8011968:	8a02      	ldrh	r2, [r0, #16]
 801196a:	9202      	str	r2, [sp, #8]
 801196c:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011970:	68c2      	ldr	r2, [r0, #12]
 8011972:	4629      	mov	r1, r5
 8011974:	4620      	mov	r0, r4
 8011976:	bc30      	pop	{r4, r5}
 8011978:	f7ef bece 	b.w	8001718 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0801197c <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 801197c:	f7ef beca 	b.w	8001714 <_ZN8touchgfx5paint8tearDownEv>

08011980 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8011980:	b510      	push	{r4, lr}
 8011982:	2114      	movs	r1, #20
 8011984:	4604      	mov	r4, r0
 8011986:	f018 f942 	bl	8029c0e <_ZdlPvj>
 801198a:	4620      	mov	r0, r4
 801198c:	bd10      	pop	{r4, pc}

0801198e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 801198e:	f1a0 0008 	sub.w	r0, r0, #8
 8011992:	e7f5      	b.n	8011980 <_ZN8touchgfx13PainterRGB565D0Ev>

08011994 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8011994:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011996:	6803      	ldr	r3, [r0, #0]
 8011998:	460d      	mov	r5, r1
 801199a:	4604      	mov	r4, r0
 801199c:	4601      	mov	r1, r0
 801199e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80119a0:	a802      	add	r0, sp, #8
 80119a2:	4798      	blx	r3
 80119a4:	6828      	ldr	r0, [r5, #0]
 80119a6:	6869      	ldr	r1, [r5, #4]
 80119a8:	466b      	mov	r3, sp
 80119aa:	c303      	stmia	r3!, {r0, r1}
 80119ac:	4668      	mov	r0, sp
 80119ae:	4619      	mov	r1, r3
 80119b0:	f7fe ffa4 	bl	80108fc <_ZN8touchgfx4RectaNERKS0_>
 80119b4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80119b6:	b188      	cbz	r0, 80119dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80119b8:	6803      	ldr	r3, [r0, #0]
 80119ba:	1d21      	adds	r1, r4, #4
 80119bc:	68db      	ldr	r3, [r3, #12]
 80119be:	4798      	blx	r3
 80119c0:	b160      	cbz	r0, 80119dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80119c2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80119c6:	2b00      	cmp	r3, #0
 80119c8:	dd08      	ble.n	80119dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80119ca:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 80119ce:	2d00      	cmp	r5, #0
 80119d0:	dd04      	ble.n	80119dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80119d2:	4a2b      	ldr	r2, [pc, #172]	; (8011a80 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 80119d4:	7812      	ldrb	r2, [r2, #0]
 80119d6:	b11a      	cbz	r2, 80119e0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 80119d8:	2a01      	cmp	r2, #1
 80119da:	d029      	beq.n	8011a30 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 80119dc:	b004      	add	sp, #16
 80119de:	bd70      	pop	{r4, r5, r6, pc}
 80119e0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80119e4:	441d      	add	r5, r3
 80119e6:	b2ad      	uxth	r5, r5
 80119e8:	b22e      	sxth	r6, r5
 80119ea:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80119ee:	42b3      	cmp	r3, r6
 80119f0:	daf4      	bge.n	80119dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80119f2:	6823      	ldr	r3, [r4, #0]
 80119f4:	4669      	mov	r1, sp
 80119f6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80119f8:	4620      	mov	r0, r4
 80119fa:	4798      	blx	r3
 80119fc:	b940      	cbnz	r0, 8011a10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80119fe:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8011a02:	2b01      	cmp	r3, #1
 8011a04:	d004      	beq.n	8011a10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011a06:	3301      	adds	r3, #1
 8011a08:	105b      	asrs	r3, r3, #1
 8011a0a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011a0e:	e7f0      	b.n	80119f2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8011a10:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8011a14:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011a18:	4413      	add	r3, r2
 8011a1a:	b29b      	uxth	r3, r3
 8011a1c:	441a      	add	r2, r3
 8011a1e:	b212      	sxth	r2, r2
 8011a20:	4296      	cmp	r6, r2
 8011a22:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011a26:	dae0      	bge.n	80119ea <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011a28:	1aeb      	subs	r3, r5, r3
 8011a2a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011a2e:	e7dc      	b.n	80119ea <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011a30:	f8bd 5000 	ldrh.w	r5, [sp]
 8011a34:	441d      	add	r5, r3
 8011a36:	b2ad      	uxth	r5, r5
 8011a38:	b22e      	sxth	r6, r5
 8011a3a:	f9bd 3000 	ldrsh.w	r3, [sp]
 8011a3e:	42b3      	cmp	r3, r6
 8011a40:	dacc      	bge.n	80119dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011a42:	6823      	ldr	r3, [r4, #0]
 8011a44:	4669      	mov	r1, sp
 8011a46:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011a48:	4620      	mov	r0, r4
 8011a4a:	4798      	blx	r3
 8011a4c:	b940      	cbnz	r0, 8011a60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011a4e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011a52:	2b01      	cmp	r3, #1
 8011a54:	d004      	beq.n	8011a60 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011a56:	3301      	adds	r3, #1
 8011a58:	105b      	asrs	r3, r3, #1
 8011a5a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011a5e:	e7f0      	b.n	8011a42 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8011a60:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8011a64:	f8bd 3000 	ldrh.w	r3, [sp]
 8011a68:	4413      	add	r3, r2
 8011a6a:	b29b      	uxth	r3, r3
 8011a6c:	441a      	add	r2, r3
 8011a6e:	b212      	sxth	r2, r2
 8011a70:	4296      	cmp	r6, r2
 8011a72:	f8ad 3000 	strh.w	r3, [sp]
 8011a76:	dae0      	bge.n	8011a3a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011a78:	1aeb      	subs	r3, r5, r3
 8011a7a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011a7e:	e7dc      	b.n	8011a3a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011a80:	20012dac 	.word	0x20012dac

08011a84 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8011a84:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011a86:	6803      	ldr	r3, [r0, #0]
 8011a88:	4604      	mov	r4, r0
 8011a8a:	4601      	mov	r1, r0
 8011a8c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011a8e:	4668      	mov	r0, sp
 8011a90:	4798      	blx	r3
 8011a92:	2100      	movs	r1, #0
 8011a94:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8011a98:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011a9c:	9102      	str	r1, [sp, #8]
 8011a9e:	4668      	mov	r0, sp
 8011aa0:	a902      	add	r1, sp, #8
 8011aa2:	f8ad 200c 	strh.w	r2, [sp, #12]
 8011aa6:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011aaa:	f7fe ff27 	bl	80108fc <_ZN8touchgfx4RectaNERKS0_>
 8011aae:	6823      	ldr	r3, [r4, #0]
 8011ab0:	4669      	mov	r1, sp
 8011ab2:	691b      	ldr	r3, [r3, #16]
 8011ab4:	4620      	mov	r0, r4
 8011ab6:	4798      	blx	r3
 8011ab8:	b004      	add	sp, #16
 8011aba:	bd10      	pop	{r4, pc}

08011abc <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8011abc:	2101      	movs	r1, #1
 8011abe:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8011ac2:	490b      	ldr	r1, [pc, #44]	; (8011af0 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8011ac4:	6001      	str	r1, [r0, #0]
 8011ac6:	2200      	movs	r2, #0
 8011ac8:	21ff      	movs	r1, #255	; 0xff
 8011aca:	8082      	strh	r2, [r0, #4]
 8011acc:	80c2      	strh	r2, [r0, #6]
 8011ace:	8102      	strh	r2, [r0, #8]
 8011ad0:	8142      	strh	r2, [r0, #10]
 8011ad2:	8182      	strh	r2, [r0, #12]
 8011ad4:	81c2      	strh	r2, [r0, #14]
 8011ad6:	8202      	strh	r2, [r0, #16]
 8011ad8:	8242      	strh	r2, [r0, #18]
 8011ada:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011ade:	61c2      	str	r2, [r0, #28]
 8011ae0:	8402      	strh	r2, [r0, #32]
 8011ae2:	8442      	strh	r2, [r0, #34]	; 0x22
 8011ae4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8011ae8:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8011aec:	6282      	str	r2, [r0, #40]	; 0x28
 8011aee:	4770      	bx	lr
 8011af0:	0802ec9c 	.word	0x0802ec9c

08011af4 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8011af4:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8011af8:	4602      	mov	r2, r0
 8011afa:	cb03      	ldmia	r3!, {r0, r1}
 8011afc:	6010      	str	r0, [r2, #0]
 8011afe:	6051      	str	r1, [r2, #4]
 8011b00:	4610      	mov	r0, r2
 8011b02:	4770      	bx	lr

08011b04 <_ZN8touchgfx4LineD1Ev>:
 8011b04:	4770      	bx	lr

08011b06 <_ZN8touchgfx4LineD0Ev>:
 8011b06:	b510      	push	{r4, lr}
 8011b08:	2170      	movs	r1, #112	; 0x70
 8011b0a:	4604      	mov	r4, r0
 8011b0c:	f018 f87f 	bl	8029c0e <_ZdlPvj>
 8011b10:	4620      	mov	r0, r4
 8011b12:	bd10      	pop	{r4, pc}

08011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8011b14:	b507      	push	{r0, r1, r2, lr}
 8011b16:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8011b1a:	ab01      	add	r3, sp, #4
 8011b1c:	6809      	ldr	r1, [r1, #0]
 8011b1e:	6800      	ldr	r0, [r0, #0]
 8011b20:	f005 fab4 	bl	801708c <_ZN8touchgfx6muldivElllRl>
 8011b24:	b003      	add	sp, #12
 8011b26:	f85d fb04 	ldr.w	pc, [sp], #4

08011b2a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8011b2a:	6800      	ldr	r0, [r0, #0]
 8011b2c:	2800      	cmp	r0, #0
 8011b2e:	bfb9      	ittee	lt
 8011b30:	2320      	movlt	r3, #32
 8011b32:	fb90 f0f3 	sdivlt	r0, r0, r3
 8011b36:	301f      	addge	r0, #31
 8011b38:	1140      	asrge	r0, r0, #5
 8011b3a:	4770      	bx	lr

08011b3c <_ZNK8touchgfx4Line17invalidateContentEv>:
 8011b3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b40:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8011b44:	b089      	sub	sp, #36	; 0x24
 8011b46:	4604      	mov	r4, r0
 8011b48:	b353      	cbz	r3, 8011ba0 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8011b4a:	6803      	ldr	r3, [r0, #0]
 8011b4c:	4601      	mov	r1, r0
 8011b4e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011b50:	a802      	add	r0, sp, #8
 8011b52:	4798      	blx	r3
 8011b54:	2220      	movs	r2, #32
 8011b56:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8011b5a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011b5c:	fb9a f0f2 	sdiv	r0, sl, r2
 8011b60:	fb91 f5f2 	sdiv	r5, r1, r2
 8011b64:	1b40      	subs	r0, r0, r5
 8011b66:	2800      	cmp	r0, #0
 8011b68:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8011b6a:	fb93 f6f2 	sdiv	r6, r3, r2
 8011b6e:	bfb8      	it	lt
 8011b70:	4240      	neglt	r0, r0
 8011b72:	0076      	lsls	r6, r6, #1
 8011b74:	4286      	cmp	r6, r0
 8011b76:	f8d4 b000 	ldr.w	fp, [r4]
 8011b7a:	dc0c      	bgt.n	8011b96 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8011b7c:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8011b7e:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8011b82:	fb95 f0f2 	sdiv	r0, r5, r2
 8011b86:	fb98 f7f2 	sdiv	r7, r8, r2
 8011b8a:	1bc0      	subs	r0, r0, r7
 8011b8c:	2800      	cmp	r0, #0
 8011b8e:	bfb8      	it	lt
 8011b90:	4240      	neglt	r0, r0
 8011b92:	4286      	cmp	r6, r0
 8011b94:	dd07      	ble.n	8011ba6 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8011b96:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011b9a:	a902      	add	r1, sp, #8
 8011b9c:	4620      	mov	r0, r4
 8011b9e:	4798      	blx	r3
 8011ba0:	b009      	add	sp, #36	; 0x24
 8011ba2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011ba6:	3301      	adds	r3, #1
 8011ba8:	2002      	movs	r0, #2
 8011baa:	f10d 0920 	add.w	r9, sp, #32
 8011bae:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8011bb2:	4103      	asrs	r3, r0
 8011bb4:	f849 3d08 	str.w	r3, [r9, #-8]!
 8011bb8:	eb01 060a 	add.w	r6, r1, sl
 8011bbc:	eb08 0705 	add.w	r7, r8, r5
 8011bc0:	fb96 f6f0 	sdiv	r6, r6, r0
 8011bc4:	fb97 f7f0 	sdiv	r7, r7, r0
 8011bc8:	4648      	mov	r0, r9
 8011bca:	9101      	str	r1, [sp, #4]
 8011bcc:	b236      	sxth	r6, r6
 8011bce:	b23f      	sxth	r7, r7
 8011bd0:	fb96 f6f2 	sdiv	r6, r6, r2
 8011bd4:	fb97 f7f2 	sdiv	r7, r7, r2
 8011bd8:	f7ff ffa7 	bl	8011b2a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011bdc:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011be0:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8011be4:	9901      	ldr	r1, [sp, #4]
 8011be6:	4293      	cmp	r3, r2
 8011be8:	fa1f fe87 	uxth.w	lr, r7
 8011bec:	fa1f fc86 	uxth.w	ip, r6
 8011bf0:	eba1 0a0a 	sub.w	sl, r1, sl
 8011bf4:	b280      	uxth	r0, r0
 8011bf6:	da54      	bge.n	8011ca2 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8011bf8:	ebac 0100 	sub.w	r1, ip, r0
 8011bfc:	b289      	uxth	r1, r1
 8011bfe:	4460      	add	r0, ip
 8011c00:	f1ba 0f00 	cmp.w	sl, #0
 8011c04:	b20e      	sxth	r6, r1
 8011c06:	b280      	uxth	r0, r0
 8011c08:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8011c0c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8011c10:	da29      	bge.n	8011c66 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8011c12:	eba8 0505 	sub.w	r5, r8, r5
 8011c16:	2d00      	cmp	r5, #0
 8011c18:	da2a      	bge.n	8011c70 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011c1a:	fa1f f88a 	uxth.w	r8, sl
 8011c1e:	eba0 0008 	sub.w	r0, r0, r8
 8011c22:	fa1f f58c 	uxth.w	r5, ip
 8011c26:	4443      	add	r3, r8
 8011c28:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011c2c:	1a59      	subs	r1, r3, r1
 8011c2e:	ebae 0005 	sub.w	r0, lr, r5
 8011c32:	f8ad a010 	strh.w	sl, [sp, #16]
 8011c36:	f8ad c012 	strh.w	ip, [sp, #18]
 8011c3a:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011c3e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011c42:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011c46:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011c4a:	442a      	add	r2, r5
 8011c4c:	eba2 0e0e 	sub.w	lr, r2, lr
 8011c50:	f8ad e01e 	strh.w	lr, [sp, #30]
 8011c54:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011c58:	a904      	add	r1, sp, #16
 8011c5a:	4620      	mov	r0, r4
 8011c5c:	4798      	blx	r3
 8011c5e:	6823      	ldr	r3, [r4, #0]
 8011c60:	4649      	mov	r1, r9
 8011c62:	691b      	ldr	r3, [r3, #16]
 8011c64:	e79a      	b.n	8011b9c <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8011c66:	d003      	beq.n	8011c70 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011c68:	eba8 0505 	sub.w	r5, r8, r5
 8011c6c:	2d00      	cmp	r5, #0
 8011c6e:	dcd4      	bgt.n	8011c1a <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8011c70:	fa1f f88a 	uxth.w	r8, sl
 8011c74:	4443      	add	r3, r8
 8011c76:	fa1f f58c 	uxth.w	r5, ip
 8011c7a:	1a59      	subs	r1, r3, r1
 8011c7c:	eba0 0008 	sub.w	r0, r0, r8
 8011c80:	ebae 0305 	sub.w	r3, lr, r5
 8011c84:	f8ad 6010 	strh.w	r6, [sp, #16]
 8011c88:	f8ad c012 	strh.w	ip, [sp, #18]
 8011c8c:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011c90:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011c94:	f8ad a018 	strh.w	sl, [sp, #24]
 8011c98:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011c9c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011ca0:	e7d3      	b.n	8011c4a <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8011ca2:	ebae 0100 	sub.w	r1, lr, r0
 8011ca6:	b289      	uxth	r1, r1
 8011ca8:	4470      	add	r0, lr
 8011caa:	f1ba 0f00 	cmp.w	sl, #0
 8011cae:	b20f      	sxth	r7, r1
 8011cb0:	b280      	uxth	r0, r0
 8011cb2:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8011cb6:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8011cba:	da20      	bge.n	8011cfe <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8011cbc:	eba8 0505 	sub.w	r5, r8, r5
 8011cc0:	2d00      	cmp	r5, #0
 8011cc2:	da21      	bge.n	8011d08 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011cc4:	fa1f f88e 	uxth.w	r8, lr
 8011cc8:	fa1f f58a 	uxth.w	r5, sl
 8011ccc:	4443      	add	r3, r8
 8011cce:	442a      	add	r2, r5
 8011cd0:	f8ad e010 	strh.w	lr, [sp, #16]
 8011cd4:	1b40      	subs	r0, r0, r5
 8011cd6:	ebac 0e08 	sub.w	lr, ip, r8
 8011cda:	1a51      	subs	r1, r2, r1
 8011cdc:	eba3 0c0c 	sub.w	ip, r3, ip
 8011ce0:	f8ad a012 	strh.w	sl, [sp, #18]
 8011ce4:	f8ad e014 	strh.w	lr, [sp, #20]
 8011ce8:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011cec:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011cf0:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011cf4:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011cf8:	f8ad 101e 	strh.w	r1, [sp, #30]
 8011cfc:	e7aa      	b.n	8011c54 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8011cfe:	d003      	beq.n	8011d08 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011d00:	eba8 0505 	sub.w	r5, r8, r5
 8011d04:	2d00      	cmp	r5, #0
 8011d06:	dcdd      	bgt.n	8011cc4 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8011d08:	fa1f f58e 	uxth.w	r5, lr
 8011d0c:	fa1f f88a 	uxth.w	r8, sl
 8011d10:	4442      	add	r2, r8
 8011d12:	442b      	add	r3, r5
 8011d14:	f8ad 7012 	strh.w	r7, [sp, #18]
 8011d18:	1a51      	subs	r1, r2, r1
 8011d1a:	ebac 0705 	sub.w	r7, ip, r5
 8011d1e:	eba0 0008 	sub.w	r0, r0, r8
 8011d22:	eba3 0c0c 	sub.w	ip, r3, ip
 8011d26:	f8ad e010 	strh.w	lr, [sp, #16]
 8011d2a:	f8ad 7014 	strh.w	r7, [sp, #20]
 8011d2e:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011d32:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011d36:	f8ad a01a 	strh.w	sl, [sp, #26]
 8011d3a:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011d3e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011d42:	e787      	b.n	8011c54 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08011d44 <_ZN8touchgfx7CWRUtil4sineEi>:
 8011d44:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8011d48:	fb90 f2f3 	sdiv	r2, r0, r3
 8011d4c:	fb02 0013 	mls	r0, r2, r3, r0
 8011d50:	2800      	cmp	r0, #0
 8011d52:	bfb8      	it	lt
 8011d54:	18c0      	addlt	r0, r0, r3
 8011d56:	285a      	cmp	r0, #90	; 0x5a
 8011d58:	4b09      	ldr	r3, [pc, #36]	; (8011d80 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8011d5a:	dc02      	bgt.n	8011d62 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8011d5c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011d60:	4770      	bx	lr
 8011d62:	28b4      	cmp	r0, #180	; 0xb4
 8011d64:	dc02      	bgt.n	8011d6c <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8011d66:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8011d6a:	e7f7      	b.n	8011d5c <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8011d6c:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8011d70:	bfd4      	ite	le
 8011d72:	38b4      	suble	r0, #180	; 0xb4
 8011d74:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8011d78:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011d7c:	4240      	negs	r0, r0
 8011d7e:	4770      	bx	lr
 8011d80:	0802ed68 	.word	0x0802ed68

08011d84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8011d84:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8011d88:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011d8a:	fb90 f2f3 	sdiv	r2, r0, r3
 8011d8e:	fb02 0013 	mls	r0, r2, r3, r0
 8011d92:	2800      	cmp	r0, #0
 8011d94:	bfb8      	it	lt
 8011d96:	18c0      	addlt	r0, r0, r3
 8011d98:	1144      	asrs	r4, r0, #5
 8011d9a:	f000 061f 	and.w	r6, r0, #31
 8011d9e:	4620      	mov	r0, r4
 8011da0:	f7ff ffd0 	bl	8011d44 <_ZN8touchgfx7CWRUtil4sineEi>
 8011da4:	4605      	mov	r5, r0
 8011da6:	b90e      	cbnz	r6, 8011dac <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8011da8:	b002      	add	sp, #8
 8011daa:	bd70      	pop	{r4, r5, r6, pc}
 8011dac:	1c60      	adds	r0, r4, #1
 8011dae:	f7ff ffc9 	bl	8011d44 <_ZN8touchgfx7CWRUtil4sineEi>
 8011db2:	ab01      	add	r3, sp, #4
 8011db4:	2220      	movs	r2, #32
 8011db6:	4631      	mov	r1, r6
 8011db8:	1b40      	subs	r0, r0, r5
 8011dba:	f005 f967 	bl	801708c <_ZN8touchgfx6muldivElllRl>
 8011dbe:	4428      	add	r0, r5
 8011dc0:	e7f2      	b.n	8011da8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08011dc2 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8011dc2:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8011dc6:	bf2c      	ite	cs
 8011dc8:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8011dcc:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8011dd0:	2300      	movs	r3, #0
 8011dd2:	1899      	adds	r1, r3, r2
 8011dd4:	4288      	cmp	r0, r1
 8011dd6:	bf24      	itt	cs
 8011dd8:	1853      	addcs	r3, r2, r1
 8011dda:	1a40      	subcs	r0, r0, r1
 8011ddc:	0892      	lsrs	r2, r2, #2
 8011dde:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8011de2:	d1f6      	bne.n	8011dd2 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8011de4:	4618      	mov	r0, r3
 8011de6:	4770      	bx	lr

08011de8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8011de8:	b510      	push	{r4, lr}
 8011dea:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8011dee:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8011df2:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8011df6:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8011dfa:	13a4      	asrs	r4, r4, #14
 8011dfc:	139b      	asrs	r3, r3, #14
 8011dfe:	429c      	cmp	r4, r3
 8011e00:	bfb8      	it	lt
 8011e02:	461c      	movlt	r4, r3
 8011e04:	2c01      	cmp	r4, #1
 8011e06:	dd07      	ble.n	8011e18 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8011e08:	fb91 f1f4 	sdiv	r1, r1, r4
 8011e0c:	fb90 f0f4 	sdiv	r0, r0, r4
 8011e10:	f7ff ffea 	bl	8011de8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011e14:	4360      	muls	r0, r4
 8011e16:	bd10      	pop	{r4, pc}
 8011e18:	4340      	muls	r0, r0
 8011e1a:	fb01 0001 	mla	r0, r1, r1, r0
 8011e1e:	f7ff ffd0 	bl	8011dc2 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011e22:	e7f8      	b.n	8011e16 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08011e24 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8011e24:	2800      	cmp	r0, #0
 8011e26:	b508      	push	{r3, lr}
 8011e28:	da05      	bge.n	8011e36 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8011e2a:	4240      	negs	r0, r0
 8011e2c:	f7ff fffa 	bl	8011e24 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011e30:	4240      	negs	r0, r0
 8011e32:	b240      	sxtb	r0, r0
 8011e34:	bd08      	pop	{r3, pc}
 8011e36:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8011e3a:	dc11      	bgt.n	8011e60 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8011e3c:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8011e40:	dd09      	ble.n	8011e56 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8011e42:	4340      	muls	r0, r0
 8011e44:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8011e48:	f7ff ffbb 	bl	8011dc2 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011e4c:	f7ff ffea 	bl	8011e24 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011e50:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8011e54:	e7ed      	b.n	8011e32 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8011e56:	3003      	adds	r0, #3
 8011e58:	10c0      	asrs	r0, r0, #3
 8011e5a:	4b02      	ldr	r3, [pc, #8]	; (8011e64 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8011e5c:	5618      	ldrsb	r0, [r3, r0]
 8011e5e:	e7e9      	b.n	8011e34 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011e60:	2000      	movs	r0, #0
 8011e62:	e7e7      	b.n	8011e34 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011e64:	0802ed0c 	.word	0x0802ed0c

08011e68 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8011e68:	4281      	cmp	r1, r0
 8011e6a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011e6c:	460c      	mov	r4, r1
 8011e6e:	4615      	mov	r5, r2
 8011e70:	dd07      	ble.n	8011e82 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8011e72:	4601      	mov	r1, r0
 8011e74:	4620      	mov	r0, r4
 8011e76:	f7ff fff7 	bl	8011e68 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011e7a:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8011e7e:	b003      	add	sp, #12
 8011e80:	bd30      	pop	{r4, r5, pc}
 8011e82:	f7ff ffb1 	bl	8011de8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011e86:	6028      	str	r0, [r5, #0]
 8011e88:	2800      	cmp	r0, #0
 8011e8a:	d0f8      	beq.n	8011e7e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8011e8c:	4602      	mov	r2, r0
 8011e8e:	ab01      	add	r3, sp, #4
 8011e90:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8011e94:	4620      	mov	r0, r4
 8011e96:	f005 f8f9 	bl	801708c <_ZN8touchgfx6muldivElllRl>
 8011e9a:	f7ff ffc3 	bl	8011e24 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011e9e:	e7ee      	b.n	8011e7e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08011ea0 <_ZN8touchgfx4LineC1Ev>:
 8011ea0:	b510      	push	{r4, lr}
 8011ea2:	4604      	mov	r4, r0
 8011ea4:	f7ff fe0a 	bl	8011abc <_ZN8touchgfx12CanvasWidgetC1Ev>
 8011ea8:	4b0c      	ldr	r3, [pc, #48]	; (8011edc <_ZN8touchgfx4LineC1Ev+0x3c>)
 8011eaa:	6023      	str	r3, [r4, #0]
 8011eac:	2220      	movs	r2, #32
 8011eae:	2300      	movs	r3, #0
 8011eb0:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011eb2:	2212      	movs	r2, #18
 8011eb4:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8011eb8:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8011ebc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8011ec0:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8011ec4:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8011ec8:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8011ecc:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8011ed0:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8011ed4:	66e2      	str	r2, [r4, #108]	; 0x6c
 8011ed6:	60a3      	str	r3, [r4, #8]
 8011ed8:	4620      	mov	r0, r4
 8011eda:	bd10      	pop	{r4, pc}
 8011edc:	0802ee28 	.word	0x0802ee28

08011ee0 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8011ee0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011ee4:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8011ee6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011ee8:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8011eea:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8011eec:	1aff      	subs	r7, r7, r3
 8011eee:	4604      	mov	r4, r0
 8011ef0:	eba5 0502 	sub.w	r5, r5, r2
 8011ef4:	d142      	bne.n	8011f7c <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8011ef6:	b955      	cbnz	r5, 8011f0e <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8011ef8:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8011efc:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8011f00:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8011f04:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8011f08:	b002      	add	sp, #8
 8011f0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011f0e:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8011f12:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8011f16:	4629      	mov	r1, r5
 8011f18:	4642      	mov	r2, r8
 8011f1a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011f1c:	f005 f8d5 	bl	80170ca <_ZN8touchgfx6muldivElll>
 8011f20:	2502      	movs	r5, #2
 8011f22:	4642      	mov	r2, r8
 8011f24:	fb90 f6f5 	sdiv	r6, r0, r5
 8011f28:	4639      	mov	r1, r7
 8011f2a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011f2c:	f005 f8cd 	bl	80170ca <_ZN8touchgfx6muldivElll>
 8011f30:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8011f34:	fb90 f5f5 	sdiv	r5, r0, r5
 8011f38:	f1b9 0f00 	cmp.w	r9, #0
 8011f3c:	d067      	beq.n	801200e <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8011f3e:	f1b9 0f02 	cmp.w	r9, #2
 8011f42:	d878      	bhi.n	8012036 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8011f44:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011f46:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011f48:	1b93      	subs	r3, r2, r6
 8011f4a:	1b5b      	subs	r3, r3, r5
 8011f4c:	6463      	str	r3, [r4, #68]	; 0x44
 8011f4e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011f50:	18e9      	adds	r1, r5, r3
 8011f52:	1b89      	subs	r1, r1, r6
 8011f54:	6561      	str	r1, [r4, #84]	; 0x54
 8011f56:	1b81      	subs	r1, r0, r6
 8011f58:	4429      	add	r1, r5
 8011f5a:	64a1      	str	r1, [r4, #72]	; 0x48
 8011f5c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8011f5e:	4430      	add	r0, r6
 8011f60:	186f      	adds	r7, r5, r1
 8011f62:	4432      	add	r2, r6
 8011f64:	1b49      	subs	r1, r1, r5
 8011f66:	4437      	add	r7, r6
 8011f68:	4428      	add	r0, r5
 8011f6a:	4431      	add	r1, r6
 8011f6c:	1b52      	subs	r2, r2, r5
 8011f6e:	1b5b      	subs	r3, r3, r5
 8011f70:	65a7      	str	r7, [r4, #88]	; 0x58
 8011f72:	64e0      	str	r0, [r4, #76]	; 0x4c
 8011f74:	65e1      	str	r1, [r4, #92]	; 0x5c
 8011f76:	6522      	str	r2, [r4, #80]	; 0x50
 8011f78:	1b9b      	subs	r3, r3, r6
 8011f7a:	e05b      	b.n	8012034 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8011f7c:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8011f80:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8011f84:	2d00      	cmp	r5, #0
 8011f86:	d0c6      	beq.n	8011f16 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011f88:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8011f8c:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8011f90:	fb93 f2f8 	sdiv	r2, r3, r8
 8011f94:	fb08 3312 	mls	r3, r8, r2, r3
 8011f98:	b353      	cbz	r3, 8011ff0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8011f9a:	fb98 f2f3 	sdiv	r2, r8, r3
 8011f9e:	fb03 8812 	mls	r8, r3, r2, r8
 8011fa2:	f1b8 0f00 	cmp.w	r8, #0
 8011fa6:	d1f3      	bne.n	8011f90 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8011fa8:	2b01      	cmp	r3, #1
 8011faa:	bf1c      	itt	ne
 8011fac:	fb95 f5f3 	sdivne	r5, r5, r3
 8011fb0:	fb97 f7f3 	sdivne	r7, r7, r3
 8011fb4:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8011fb8:	f24b 5104 	movw	r1, #46340	; 0xb504
 8011fbc:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8011fc0:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8011fc4:	428b      	cmp	r3, r1
 8011fc6:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8011fca:	4608      	mov	r0, r1
 8011fcc:	dd01      	ble.n	8011fd2 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8011fce:	428a      	cmp	r2, r1
 8011fd0:	dc10      	bgt.n	8011ff4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8011fd2:	fb90 f3f3 	sdiv	r3, r0, r3
 8011fd6:	fb90 f2f2 	sdiv	r2, r0, r2
 8011fda:	4293      	cmp	r3, r2
 8011fdc:	bfa8      	it	ge
 8011fde:	4613      	movge	r3, r2
 8011fe0:	435f      	muls	r7, r3
 8011fe2:	435d      	muls	r5, r3
 8011fe4:	4629      	mov	r1, r5
 8011fe6:	4638      	mov	r0, r7
 8011fe8:	f7ff fefe 	bl	8011de8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011fec:	4680      	mov	r8, r0
 8011fee:	e792      	b.n	8011f16 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011ff0:	4643      	mov	r3, r8
 8011ff2:	e7d9      	b.n	8011fa8 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8011ff4:	fb93 f3f1 	sdiv	r3, r3, r1
 8011ff8:	fb92 f2f1 	sdiv	r2, r2, r1
 8011ffc:	4293      	cmp	r3, r2
 8011ffe:	bfcc      	ite	gt
 8012000:	3301      	addgt	r3, #1
 8012002:	1c53      	addle	r3, r2, #1
 8012004:	fb97 f7f3 	sdiv	r7, r7, r3
 8012008:	fb95 f5f3 	sdiv	r5, r5, r3
 801200c:	e7ea      	b.n	8011fe4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 801200e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012010:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012012:	1b93      	subs	r3, r2, r6
 8012014:	6463      	str	r3, [r4, #68]	; 0x44
 8012016:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012018:	18e9      	adds	r1, r5, r3
 801201a:	6561      	str	r1, [r4, #84]	; 0x54
 801201c:	1b81      	subs	r1, r0, r6
 801201e:	64a1      	str	r1, [r4, #72]	; 0x48
 8012020:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012022:	4430      	add	r0, r6
 8012024:	186f      	adds	r7, r5, r1
 8012026:	4432      	add	r2, r6
 8012028:	1b49      	subs	r1, r1, r5
 801202a:	65a7      	str	r7, [r4, #88]	; 0x58
 801202c:	64e0      	str	r0, [r4, #76]	; 0x4c
 801202e:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012030:	6522      	str	r2, [r4, #80]	; 0x50
 8012032:	1b5b      	subs	r3, r3, r5
 8012034:	6623      	str	r3, [r4, #96]	; 0x60
 8012036:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8012038:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801203a:	9200      	str	r2, [sp, #0]
 801203c:	9301      	str	r3, [sp, #4]
 801203e:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8012042:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8012046:	680f      	ldr	r7, [r1, #0]
 8012048:	9800      	ldr	r0, [sp, #0]
 801204a:	42ba      	cmp	r2, r7
 801204c:	bfa8      	it	ge
 801204e:	463a      	movge	r2, r7
 8012050:	4287      	cmp	r7, r0
 8012052:	bfc8      	it	gt
 8012054:	9700      	strgt	r7, [sp, #0]
 8012056:	690f      	ldr	r7, [r1, #16]
 8012058:	9801      	ldr	r0, [sp, #4]
 801205a:	42bb      	cmp	r3, r7
 801205c:	bfa8      	it	ge
 801205e:	463b      	movge	r3, r7
 8012060:	3104      	adds	r1, #4
 8012062:	4287      	cmp	r7, r0
 8012064:	bfc8      	it	gt
 8012066:	9701      	strgt	r7, [sp, #4]
 8012068:	458c      	cmp	ip, r1
 801206a:	d1ec      	bne.n	8012046 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 801206c:	4668      	mov	r0, sp
 801206e:	2720      	movs	r7, #32
 8012070:	fb92 f8f7 	sdiv	r8, r2, r7
 8012074:	fb93 f7f7 	sdiv	r7, r3, r7
 8012078:	f7ff fd57 	bl	8011b2a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801207c:	4682      	mov	sl, r0
 801207e:	a801      	add	r0, sp, #4
 8012080:	f7ff fd53 	bl	8011b2a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012084:	ebaa 0208 	sub.w	r2, sl, r8
 8012088:	1bc0      	subs	r0, r0, r7
 801208a:	f1b9 0f01 	cmp.w	r9, #1
 801208e:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8012092:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8012096:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 801209a:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 801209e:	f47f af33 	bne.w	8011f08 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 80120a2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 80120a4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80120a6:	1b83      	subs	r3, r0, r6
 80120a8:	6463      	str	r3, [r4, #68]	; 0x44
 80120aa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80120ac:	18ea      	adds	r2, r5, r3
 80120ae:	6562      	str	r2, [r4, #84]	; 0x54
 80120b0:	1b8a      	subs	r2, r1, r6
 80120b2:	64a2      	str	r2, [r4, #72]	; 0x48
 80120b4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80120b6:	4431      	add	r1, r6
 80120b8:	18af      	adds	r7, r5, r2
 80120ba:	4406      	add	r6, r0
 80120bc:	1b52      	subs	r2, r2, r5
 80120be:	1b5d      	subs	r5, r3, r5
 80120c0:	65a7      	str	r7, [r4, #88]	; 0x58
 80120c2:	64e1      	str	r1, [r4, #76]	; 0x4c
 80120c4:	65e2      	str	r2, [r4, #92]	; 0x5c
 80120c6:	6526      	str	r6, [r4, #80]	; 0x50
 80120c8:	6625      	str	r5, [r4, #96]	; 0x60
 80120ca:	e71d      	b.n	8011f08 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

080120cc <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 80120cc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80120ce:	428b      	cmp	r3, r1
 80120d0:	d102      	bne.n	80120d8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 80120d2:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80120d4:	4293      	cmp	r3, r2
 80120d6:	d003      	beq.n	80120e0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 80120d8:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 80120dc:	f7ff bf00 	b.w	8011ee0 <_ZN8touchgfx4Line17updateCachedShapeEv>
 80120e0:	4770      	bx	lr

080120e2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 80120e2:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80120e4:	428b      	cmp	r3, r1
 80120e6:	d102      	bne.n	80120ee <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 80120e8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80120ea:	4293      	cmp	r3, r2
 80120ec:	d003      	beq.n	80120f6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 80120ee:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 80120f2:	f7ff bef5 	b.w	8011ee0 <_ZN8touchgfx4Line17updateCachedShapeEv>
 80120f6:	4770      	bx	lr

080120f8 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 80120f8:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 80120fc:	f7ff bef0 	b.w	8011ee0 <_ZN8touchgfx4Line17updateCachedShapeEv>

08012100 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8012100:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012104:	b0a0      	sub	sp, #128	; 0x80
 8012106:	4604      	mov	r4, r0
 8012108:	460a      	mov	r2, r1
 801210a:	4601      	mov	r1, r0
 801210c:	a804      	add	r0, sp, #16
 801210e:	f014 fe3b 	bl	8026d88 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8012112:	2300      	movs	r3, #0
 8012114:	9301      	str	r3, [sp, #4]
 8012116:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 801211a:	2b01      	cmp	r3, #1
 801211c:	d17c      	bne.n	8012218 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 801211e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012120:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8012122:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8012124:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012126:	1ac0      	subs	r0, r0, r3
 8012128:	eba1 0102 	sub.w	r1, r1, r2
 801212c:	d437      	bmi.n	801219e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 801212e:	2900      	cmp	r1, #0
 8012130:	aa01      	add	r2, sp, #4
 8012132:	db2e      	blt.n	8012192 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8012134:	f7ff fe98 	bl	8011e68 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012138:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 801213c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801213e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012140:	a804      	add	r0, sp, #16
 8012142:	f014 ffa1 	bl	8027088 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8012146:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8012148:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801214a:	a804      	add	r0, sp, #16
 801214c:	f014 ffe9 	bl	8027122 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012150:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8012152:	2db3      	cmp	r5, #179	; 0xb3
 8012154:	dc33      	bgt.n	80121be <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8012156:	eba6 0805 	sub.w	r8, r6, r5
 801215a:	4640      	mov	r0, r8
 801215c:	f7ff fdf2 	bl	8011d44 <_ZN8touchgfx7CWRUtil4sineEi>
 8012160:	a902      	add	r1, sp, #8
 8012162:	9002      	str	r0, [sp, #8]
 8012164:	a801      	add	r0, sp, #4
 8012166:	f7ff fcd5 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801216a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801216c:	1847      	adds	r7, r0, r1
 801216e:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8012172:	f7ff fde7 	bl	8011d44 <_ZN8touchgfx7CWRUtil4sineEi>
 8012176:	a903      	add	r1, sp, #12
 8012178:	9003      	str	r0, [sp, #12]
 801217a:	a801      	add	r0, sp, #4
 801217c:	f7ff fcca 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012180:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8012182:	4639      	mov	r1, r7
 8012184:	1a12      	subs	r2, r2, r0
 8012186:	a804      	add	r0, sp, #16
 8012188:	f014 ffcb 	bl	8027122 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801218c:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 801218e:	441d      	add	r5, r3
 8012190:	e7df      	b.n	8012152 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8012192:	4249      	negs	r1, r1
 8012194:	f7ff fe68 	bl	8011e68 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012198:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 801219c:	e7ce      	b.n	801213c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801219e:	2900      	cmp	r1, #0
 80121a0:	f1c0 0000 	rsb	r0, r0, #0
 80121a4:	aa01      	add	r2, sp, #4
 80121a6:	db04      	blt.n	80121b2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 80121a8:	f7ff fe5e 	bl	8011e68 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80121ac:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 80121b0:	e7c4      	b.n	801213c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80121b2:	4249      	negs	r1, r1
 80121b4:	f7ff fe58 	bl	8011e68 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80121b8:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 80121bc:	e7be      	b.n	801213c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80121be:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80121c0:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80121c2:	a804      	add	r0, sp, #16
 80121c4:	f014 ffad 	bl	8027122 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80121c8:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80121ca:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80121cc:	a804      	add	r0, sp, #16
 80121ce:	f014 ffa8 	bl	8027122 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80121d2:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80121d4:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 80121d8:	2d00      	cmp	r5, #0
 80121da:	dd31      	ble.n	8012240 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 80121dc:	eb05 0806 	add.w	r8, r5, r6
 80121e0:	4640      	mov	r0, r8
 80121e2:	f7ff fdaf 	bl	8011d44 <_ZN8touchgfx7CWRUtil4sineEi>
 80121e6:	a902      	add	r1, sp, #8
 80121e8:	9002      	str	r0, [sp, #8]
 80121ea:	a801      	add	r0, sp, #4
 80121ec:	f7ff fc92 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80121f0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80121f2:	1847      	adds	r7, r0, r1
 80121f4:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80121f8:	f7ff fda4 	bl	8011d44 <_ZN8touchgfx7CWRUtil4sineEi>
 80121fc:	a903      	add	r1, sp, #12
 80121fe:	9003      	str	r0, [sp, #12]
 8012200:	a801      	add	r0, sp, #4
 8012202:	f7ff fc87 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012206:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012208:	4639      	mov	r1, r7
 801220a:	1a12      	subs	r2, r2, r0
 801220c:	a804      	add	r0, sp, #16
 801220e:	f014 ff88 	bl	8027122 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012212:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8012214:	1aed      	subs	r5, r5, r3
 8012216:	e7df      	b.n	80121d8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8012218:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801221a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 801221c:	a804      	add	r0, sp, #16
 801221e:	f014 ff33 	bl	8027088 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8012222:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8012224:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8012226:	a804      	add	r0, sp, #16
 8012228:	f014 ff7b 	bl	8027122 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801222c:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 801222e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012230:	a804      	add	r0, sp, #16
 8012232:	f014 ff76 	bl	8027122 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012236:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012238:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801223a:	a804      	add	r0, sp, #16
 801223c:	f014 ff71 	bl	8027122 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012240:	21ff      	movs	r1, #255	; 0xff
 8012242:	a804      	add	r0, sp, #16
 8012244:	f014 fe5c 	bl	8026f00 <_ZN8touchgfx6Canvas6renderEh>
 8012248:	4b04      	ldr	r3, [pc, #16]	; (801225c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 801224a:	9304      	str	r3, [sp, #16]
 801224c:	4604      	mov	r4, r0
 801224e:	a80c      	add	r0, sp, #48	; 0x30
 8012250:	f001 f8cc 	bl	80133ec <_ZN8touchgfx7OutlineD1Ev>
 8012254:	4620      	mov	r0, r4
 8012256:	b020      	add	sp, #128	; 0x80
 8012258:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801225c:	0802f650 	.word	0x0802f650

08012260 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8012260:	2000      	movs	r0, #0
 8012262:	4770      	bx	lr

08012264 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8012264:	4b07      	ldr	r3, [pc, #28]	; (8012284 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8012266:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012268:	881b      	ldrh	r3, [r3, #0]
 801226a:	4293      	cmp	r3, r2
 801226c:	bf81      	itttt	hi
 801226e:	4b06      	ldrhi	r3, [pc, #24]	; (8012288 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8012270:	681b      	ldrhi	r3, [r3, #0]
 8012272:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8012276:	7858      	ldrbhi	r0, [r3, #1]
 8012278:	bf8c      	ite	hi
 801227a:	f000 0003 	andhi.w	r0, r0, #3
 801227e:	2000      	movls	r0, #0
 8012280:	4770      	bx	lr
 8012282:	bf00      	nop
 8012284:	20012e10 	.word	0x20012e10
 8012288:	20012e0c 	.word	0x20012e0c

0801228c <_ZN8touchgfx8TextAreaD1Ev>:
 801228c:	4770      	bx	lr
	...

08012290 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8012290:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012294:	4b10      	ldr	r3, [pc, #64]	; (80122d8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8012296:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012298:	881b      	ldrh	r3, [r3, #0]
 801229a:	428b      	cmp	r3, r1
 801229c:	4604      	mov	r4, r0
 801229e:	d918      	bls.n	80122d2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 80122a0:	6803      	ldr	r3, [r0, #0]
 80122a2:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 80122a4:	4b0d      	ldr	r3, [pc, #52]	; (80122dc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 80122a6:	6818      	ldr	r0, [r3, #0]
 80122a8:	f7f6 fe34 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 80122ac:	6823      	ldr	r3, [r4, #0]
 80122ae:	4606      	mov	r6, r0
 80122b0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80122b2:	4620      	mov	r0, r4
 80122b4:	4798      	blx	r3
 80122b6:	6823      	ldr	r3, [r4, #0]
 80122b8:	4607      	mov	r7, r0
 80122ba:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80122be:	4620      	mov	r0, r4
 80122c0:	4798      	blx	r3
 80122c2:	463a      	mov	r2, r7
 80122c4:	4603      	mov	r3, r0
 80122c6:	4631      	mov	r1, r6
 80122c8:	4620      	mov	r0, r4
 80122ca:	46ac      	mov	ip, r5
 80122cc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80122d0:	4760      	bx	ip
 80122d2:	2000      	movs	r0, #0
 80122d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80122d8:	20012e10 	.word	0x20012e10
 80122dc:	20012e18 	.word	0x20012e18

080122e0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80122e0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80122e4:	4b17      	ldr	r3, [pc, #92]	; (8012344 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80122e6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80122e8:	881b      	ldrh	r3, [r3, #0]
 80122ea:	428b      	cmp	r3, r1
 80122ec:	4604      	mov	r4, r0
 80122ee:	d926      	bls.n	801233e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 80122f0:	4b15      	ldr	r3, [pc, #84]	; (8012348 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 80122f2:	681b      	ldr	r3, [r3, #0]
 80122f4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80122f8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80122fc:	4b13      	ldr	r3, [pc, #76]	; (801234c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80122fe:	7855      	ldrb	r5, [r2, #1]
 8012300:	681b      	ldr	r3, [r3, #0]
 8012302:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8012306:	6833      	ldr	r3, [r6, #0]
 8012308:	69df      	ldr	r7, [r3, #28]
 801230a:	4b11      	ldr	r3, [pc, #68]	; (8012350 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 801230c:	6818      	ldr	r0, [r3, #0]
 801230e:	f7f6 fe01 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 8012312:	6823      	ldr	r3, [r4, #0]
 8012314:	4680      	mov	r8, r0
 8012316:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012318:	4620      	mov	r0, r4
 801231a:	4798      	blx	r3
 801231c:	6823      	ldr	r3, [r4, #0]
 801231e:	4681      	mov	r9, r0
 8012320:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012324:	4620      	mov	r0, r4
 8012326:	4798      	blx	r3
 8012328:	f3c5 0581 	ubfx	r5, r5, #2, #2
 801232c:	9000      	str	r0, [sp, #0]
 801232e:	464b      	mov	r3, r9
 8012330:	4642      	mov	r2, r8
 8012332:	4629      	mov	r1, r5
 8012334:	4630      	mov	r0, r6
 8012336:	47b8      	blx	r7
 8012338:	b003      	add	sp, #12
 801233a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801233e:	2000      	movs	r0, #0
 8012340:	e7fa      	b.n	8012338 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8012342:	bf00      	nop
 8012344:	20012e10 	.word	0x20012e10
 8012348:	20012e0c 	.word	0x20012e0c
 801234c:	20012e14 	.word	0x20012e14
 8012350:	20012e18 	.word	0x20012e18

08012354 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8012354:	b40e      	push	{r1, r2, r3}
 8012356:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801235a:	4b2f      	ldr	r3, [pc, #188]	; (8012418 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 801235c:	881a      	ldrh	r2, [r3, #0]
 801235e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8012360:	429a      	cmp	r2, r3
 8012362:	b09d      	sub	sp, #116	; 0x74
 8012364:	4604      	mov	r4, r0
 8012366:	d954      	bls.n	8012412 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8012368:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 801241c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 801236c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8012420 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8012370:	aa26      	add	r2, sp, #152	; 0x98
 8012372:	9202      	str	r2, [sp, #8]
 8012374:	f8d9 2000 	ldr.w	r2, [r9]
 8012378:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801237c:	f8d8 3000 	ldr.w	r3, [r8]
 8012380:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8012384:	682b      	ldr	r3, [r5, #0]
 8012386:	4628      	mov	r0, r5
 8012388:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801238a:	4798      	blx	r3
 801238c:	b207      	sxth	r7, r0
 801238e:	4606      	mov	r6, r0
 8012390:	a803      	add	r0, sp, #12
 8012392:	f005 fa57 	bl	8017844 <_ZN8touchgfx12TextProviderC1Ev>
 8012396:	682b      	ldr	r3, [r5, #0]
 8012398:	4628      	mov	r0, r5
 801239a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801239c:	4798      	blx	r3
 801239e:	682b      	ldr	r3, [r5, #0]
 80123a0:	4682      	mov	sl, r0
 80123a2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80123a4:	4628      	mov	r0, r5
 80123a6:	4798      	blx	r3
 80123a8:	4653      	mov	r3, sl
 80123aa:	9000      	str	r0, [sp, #0]
 80123ac:	9a02      	ldr	r2, [sp, #8]
 80123ae:	9925      	ldr	r1, [sp, #148]	; 0x94
 80123b0:	a803      	add	r0, sp, #12
 80123b2:	f005 faa2 	bl	80178fa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80123b6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80123b8:	f8d9 3000 	ldr.w	r3, [r9]
 80123bc:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 80123c0:	8925      	ldrh	r5, [r4, #8]
 80123c2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 80123c6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 80123ca:	eba5 050c 	sub.w	r5, r5, ip
 80123ce:	784a      	ldrb	r2, [r1, #1]
 80123d0:	f8d8 3000 	ldr.w	r3, [r8]
 80123d4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 80123d8:	b22d      	sxth	r5, r5
 80123da:	9500      	str	r5, [sp, #0]
 80123dc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80123e0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80123e4:	a803      	add	r0, sp, #12
 80123e6:	f002 feed 	bl	80151c4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 80123ea:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 80123ee:	18b9      	adds	r1, r7, r2
 80123f0:	2900      	cmp	r1, #0
 80123f2:	b203      	sxth	r3, r0
 80123f4:	dd0b      	ble.n	801240e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 80123f6:	3b01      	subs	r3, #1
 80123f8:	fb13 f302 	smulbb	r3, r3, r2
 80123fc:	fb16 3300 	smlabb	r3, r6, r0, r3
 8012400:	b21f      	sxth	r7, r3
 8012402:	4638      	mov	r0, r7
 8012404:	b01d      	add	sp, #116	; 0x74
 8012406:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801240a:	b003      	add	sp, #12
 801240c:	4770      	bx	lr
 801240e:	2b00      	cmp	r3, #0
 8012410:	dcf7      	bgt.n	8012402 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012412:	2700      	movs	r7, #0
 8012414:	e7f5      	b.n	8012402 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012416:	bf00      	nop
 8012418:	20012e10 	.word	0x20012e10
 801241c:	20012e0c 	.word	0x20012e0c
 8012420:	20012e14 	.word	0x20012e14

08012424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8012424:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012428:	4bbc      	ldr	r3, [pc, #752]	; (801271c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 801242a:	460c      	mov	r4, r1
 801242c:	881b      	ldrh	r3, [r3, #0]
 801242e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8012430:	428b      	cmp	r3, r1
 8012432:	b0a9      	sub	sp, #164	; 0xa4
 8012434:	4680      	mov	r8, r0
 8012436:	d809      	bhi.n	801244c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8012438:	2300      	movs	r3, #0
 801243a:	f04f 32ff 	mov.w	r2, #4294967295
 801243e:	e9c0 3200 	strd	r3, r2, [r0]
 8012442:	6083      	str	r3, [r0, #8]
 8012444:	4640      	mov	r0, r8
 8012446:	b029      	add	sp, #164	; 0xa4
 8012448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801244c:	4eb4      	ldr	r6, [pc, #720]	; (8012720 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 801244e:	6833      	ldr	r3, [r6, #0]
 8012450:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8012454:	4bb3      	ldr	r3, [pc, #716]	; (8012724 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8012456:	681b      	ldr	r3, [r3, #0]
 8012458:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801245c:	4bb2      	ldr	r3, [pc, #712]	; (8012728 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801245e:	6818      	ldr	r0, [r3, #0]
 8012460:	f7f6 fd58 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 8012464:	682b      	ldr	r3, [r5, #0]
 8012466:	4681      	mov	r9, r0
 8012468:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801246a:	4628      	mov	r0, r5
 801246c:	4798      	blx	r3
 801246e:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8012470:	b203      	sxth	r3, r0
 8012472:	4407      	add	r7, r0
 8012474:	9304      	str	r3, [sp, #16]
 8012476:	b2bb      	uxth	r3, r7
 8012478:	9303      	str	r3, [sp, #12]
 801247a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801247e:	4682      	mov	sl, r0
 8012480:	a80f      	add	r0, sp, #60	; 0x3c
 8012482:	2b00      	cmp	r3, #0
 8012484:	f040 80a6 	bne.w	80125d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8012488:	f005 f9dc 	bl	8017844 <_ZN8touchgfx12TextProviderC1Ev>
 801248c:	682b      	ldr	r3, [r5, #0]
 801248e:	4628      	mov	r0, r5
 8012490:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012492:	4798      	blx	r3
 8012494:	682b      	ldr	r3, [r5, #0]
 8012496:	4606      	mov	r6, r0
 8012498:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801249a:	4628      	mov	r0, r5
 801249c:	4798      	blx	r3
 801249e:	6823      	ldr	r3, [r4, #0]
 80124a0:	4607      	mov	r7, r0
 80124a2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80124a4:	4620      	mov	r0, r4
 80124a6:	4798      	blx	r3
 80124a8:	6823      	ldr	r3, [r4, #0]
 80124aa:	4683      	mov	fp, r0
 80124ac:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80124b0:	4620      	mov	r0, r4
 80124b2:	4798      	blx	r3
 80124b4:	463b      	mov	r3, r7
 80124b6:	e9cd b000 	strd	fp, r0, [sp]
 80124ba:	4649      	mov	r1, r9
 80124bc:	4632      	mov	r2, r6
 80124be:	a80f      	add	r0, sp, #60	; 0x3c
 80124c0:	f005 fa30 	bl	8017924 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80124c4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80124c8:	f8df b254 	ldr.w	fp, [pc, #596]	; 8012720 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 80124cc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80124d0:	f04f 0600 	mov.w	r6, #0
 80124d4:	bf0c      	ite	eq
 80124d6:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 80124da:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 80124de:	4637      	mov	r7, r6
 80124e0:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80124e2:	f8db 3000 	ldr.w	r3, [fp]
 80124e6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80124ea:	4629      	mov	r1, r5
 80124ec:	785b      	ldrb	r3, [r3, #1]
 80124ee:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80124f2:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80124f6:	a80f      	add	r0, sp, #60	; 0x3c
 80124f8:	f002 fb7f 	bl	8014bfa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80124fc:	9b03      	ldr	r3, [sp, #12]
 80124fe:	4286      	cmp	r6, r0
 8012500:	bfb8      	it	lt
 8012502:	4606      	movlt	r6, r0
 8012504:	3701      	adds	r7, #1
 8012506:	eba9 0903 	sub.w	r9, r9, r3
 801250a:	a80f      	add	r0, sp, #60	; 0x3c
 801250c:	b236      	sxth	r6, r6
 801250e:	b2bf      	uxth	r7, r7
 8012510:	fa0f f989 	sxth.w	r9, r9
 8012514:	f005 f9bd 	bl	8017892 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8012518:	b918      	cbnz	r0, 8012522 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801251a:	7a2b      	ldrb	r3, [r5, #8]
 801251c:	444b      	add	r3, r9
 801251e:	2b00      	cmp	r3, #0
 8012520:	dcde      	bgt.n	80124e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8012522:	9b03      	ldr	r3, [sp, #12]
 8012524:	9a04      	ldr	r2, [sp, #16]
 8012526:	f895 9009 	ldrb.w	r9, [r5, #9]
 801252a:	fb13 f707 	smulbb	r7, r3, r7
 801252e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012530:	1aff      	subs	r7, r7, r3
 8012532:	b2bf      	uxth	r7, r7
 8012534:	b23b      	sxth	r3, r7
 8012536:	429a      	cmp	r2, r3
 8012538:	bfa8      	it	ge
 801253a:	4657      	movge	r7, sl
 801253c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012540:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012544:	6823      	ldr	r3, [r4, #0]
 8012546:	bf08      	it	eq
 8012548:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 801254c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801254e:	bf18      	it	ne
 8012550:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8012554:	4620      	mov	r0, r4
 8012556:	4798      	blx	r3
 8012558:	444f      	add	r7, r9
 801255a:	fa1f f987 	uxth.w	r9, r7
 801255e:	2801      	cmp	r0, #1
 8012560:	fa0f f789 	sxth.w	r7, r9
 8012564:	b2b3      	uxth	r3, r6
 8012566:	f000 80e1 	beq.w	801272c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 801256a:	2802      	cmp	r0, #2
 801256c:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8012570:	f000 80e2 	beq.w	8012738 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8012574:	7aea      	ldrb	r2, [r5, #11]
 8012576:	7b2d      	ldrb	r5, [r5, #12]
 8012578:	b236      	sxth	r6, r6
 801257a:	1ab6      	subs	r6, r6, r2
 801257c:	442a      	add	r2, r5
 801257e:	4413      	add	r3, r2
 8012580:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8012584:	fa1f fa86 	uxth.w	sl, r6
 8012588:	b29b      	uxth	r3, r3
 801258a:	2a02      	cmp	r2, #2
 801258c:	fa0f fb8a 	sxth.w	fp, sl
 8012590:	b21e      	sxth	r6, r3
 8012592:	f000 80d5 	beq.w	8012740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8012596:	2a03      	cmp	r2, #3
 8012598:	f000 80dd 	beq.w	8012756 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 801259c:	2a01      	cmp	r2, #1
 801259e:	f040 80e5 	bne.w	801276c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 80125a2:	8925      	ldrh	r5, [r4, #8]
 80125a4:	4633      	mov	r3, r6
 80125a6:	eba5 0909 	sub.w	r9, r5, r9
 80125aa:	463e      	mov	r6, r7
 80125ac:	465d      	mov	r5, fp
 80125ae:	461f      	mov	r7, r3
 80125b0:	fa0f fb89 	sxth.w	fp, r9
 80125b4:	4b5c      	ldr	r3, [pc, #368]	; (8012728 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80125b6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80125b8:	6818      	ldr	r0, [r3, #0]
 80125ba:	f7f6 fcab 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 80125be:	f8a8 b000 	strh.w	fp, [r8]
 80125c2:	f8a8 5002 	strh.w	r5, [r8, #2]
 80125c6:	f8a8 6004 	strh.w	r6, [r8, #4]
 80125ca:	f8a8 7006 	strh.w	r7, [r8, #6]
 80125ce:	f8c8 0008 	str.w	r0, [r8, #8]
 80125d2:	e737      	b.n	8012444 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80125d4:	f005 f936 	bl	8017844 <_ZN8touchgfx12TextProviderC1Ev>
 80125d8:	682b      	ldr	r3, [r5, #0]
 80125da:	4628      	mov	r0, r5
 80125dc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80125de:	4798      	blx	r3
 80125e0:	682b      	ldr	r3, [r5, #0]
 80125e2:	4607      	mov	r7, r0
 80125e4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80125e6:	4628      	mov	r0, r5
 80125e8:	4798      	blx	r3
 80125ea:	6823      	ldr	r3, [r4, #0]
 80125ec:	4683      	mov	fp, r0
 80125ee:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80125f0:	4620      	mov	r0, r4
 80125f2:	4798      	blx	r3
 80125f4:	6822      	ldr	r2, [r4, #0]
 80125f6:	9005      	str	r0, [sp, #20]
 80125f8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 80125fc:	4620      	mov	r0, r4
 80125fe:	4790      	blx	r2
 8012600:	9b05      	ldr	r3, [sp, #20]
 8012602:	9001      	str	r0, [sp, #4]
 8012604:	463a      	mov	r2, r7
 8012606:	4649      	mov	r1, r9
 8012608:	9300      	str	r3, [sp, #0]
 801260a:	a80f      	add	r0, sp, #60	; 0x3c
 801260c:	465b      	mov	r3, fp
 801260e:	f005 f989 	bl	8017924 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8012612:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012616:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 801261a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801261c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8012620:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012624:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012628:	bf0a      	itet	eq
 801262a:	464a      	moveq	r2, r9
 801262c:	461a      	movne	r2, r3
 801262e:	4699      	moveq	r9, r3
 8012630:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8012634:	1ad2      	subs	r2, r2, r3
 8012636:	6833      	ldr	r3, [r6, #0]
 8012638:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 801263c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012640:	af0f      	add	r7, sp, #60	; 0x3c
 8012642:	7859      	ldrb	r1, [r3, #1]
 8012644:	9707      	str	r7, [sp, #28]
 8012646:	2300      	movs	r3, #0
 8012648:	f3c1 0181 	ubfx	r1, r1, #2, #2
 801264c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012650:	f88d 1020 	strb.w	r1, [sp, #32]
 8012654:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8012658:	9509      	str	r5, [sp, #36]	; 0x24
 801265a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801265e:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8012662:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8012666:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801266a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801266e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012672:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8012676:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801267a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801267e:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8012682:	b350      	cbz	r0, 80126da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012684:	682b      	ldr	r3, [r5, #0]
 8012686:	4628      	mov	r0, r5
 8012688:	695b      	ldr	r3, [r3, #20]
 801268a:	4798      	blx	r3
 801268c:	4607      	mov	r7, r0
 801268e:	b320      	cbz	r0, 80126da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012690:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012692:	6803      	ldr	r3, [r0, #0]
 8012694:	4639      	mov	r1, r7
 8012696:	68db      	ldr	r3, [r3, #12]
 8012698:	4798      	blx	r3
 801269a:	4606      	mov	r6, r0
 801269c:	b1e8      	cbz	r0, 80126da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801269e:	7b43      	ldrb	r3, [r0, #13]
 80126a0:	7a82      	ldrb	r2, [r0, #10]
 80126a2:	005b      	lsls	r3, r3, #1
 80126a4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80126a8:	4313      	orrs	r3, r2
 80126aa:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80126ae:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 80126b2:	2b06      	cmp	r3, #6
 80126b4:	d111      	bne.n	80126da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80126b6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80126b8:	6803      	ldr	r3, [r0, #0]
 80126ba:	4632      	mov	r2, r6
 80126bc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80126be:	4639      	mov	r1, r7
 80126c0:	4798      	blx	r3
 80126c2:	7b73      	ldrb	r3, [r6, #13]
 80126c4:	005b      	lsls	r3, r3, #1
 80126c6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80126ca:	7ab3      	ldrb	r3, [r6, #10]
 80126cc:	4313      	orrs	r3, r2
 80126ce:	4418      	add	r0, r3
 80126d0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80126d4:	4418      	add	r0, r3
 80126d6:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 80126da:	2600      	movs	r6, #0
 80126dc:	4637      	mov	r7, r6
 80126de:	a806      	add	r0, sp, #24
 80126e0:	f002 fc6c 	bl	8014fbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80126e4:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 80126e8:	9b03      	ldr	r3, [sp, #12]
 80126ea:	4286      	cmp	r6, r0
 80126ec:	eba9 0903 	sub.w	r9, r9, r3
 80126f0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80126f4:	bfb8      	it	lt
 80126f6:	4606      	movlt	r6, r0
 80126f8:	3701      	adds	r7, #1
 80126fa:	b236      	sxth	r6, r6
 80126fc:	b2bf      	uxth	r7, r7
 80126fe:	fa0f f989 	sxth.w	r9, r9
 8012702:	2b00      	cmp	r3, #0
 8012704:	f43f af0d 	beq.w	8012522 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012708:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 801270c:	2b00      	cmp	r3, #0
 801270e:	f47f af08 	bne.w	8012522 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012712:	7a2b      	ldrb	r3, [r5, #8]
 8012714:	444b      	add	r3, r9
 8012716:	2b00      	cmp	r3, #0
 8012718:	dce1      	bgt.n	80126de <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 801271a:	e702      	b.n	8012522 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801271c:	20012e10 	.word	0x20012e10
 8012720:	20012e0c 	.word	0x20012e0c
 8012724:	20012e14 	.word	0x20012e14
 8012728:	20012e18 	.word	0x20012e18
 801272c:	ebaa 0606 	sub.w	r6, sl, r6
 8012730:	2002      	movs	r0, #2
 8012732:	fb96 f6f0 	sdiv	r6, r6, r0
 8012736:	e71d      	b.n	8012574 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8012738:	441e      	add	r6, r3
 801273a:	ebaa 0606 	sub.w	r6, sl, r6
 801273e:	e719      	b.n	8012574 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8012740:	8925      	ldrh	r5, [r4, #8]
 8012742:	1aed      	subs	r5, r5, r3
 8012744:	eba5 050a 	sub.w	r5, r5, sl
 8012748:	fa0f fb85 	sxth.w	fp, r5
 801274c:	8965      	ldrh	r5, [r4, #10]
 801274e:	eba5 0509 	sub.w	r5, r5, r9
 8012752:	b22d      	sxth	r5, r5
 8012754:	e72e      	b.n	80125b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8012756:	8965      	ldrh	r5, [r4, #10]
 8012758:	1aed      	subs	r5, r5, r3
 801275a:	eba5 050a 	sub.w	r5, r5, sl
 801275e:	4633      	mov	r3, r6
 8012760:	b22d      	sxth	r5, r5
 8012762:	463e      	mov	r6, r7
 8012764:	f04f 0b00 	mov.w	fp, #0
 8012768:	461f      	mov	r7, r3
 801276a:	e723      	b.n	80125b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801276c:	2500      	movs	r5, #0
 801276e:	e721      	b.n	80125b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08012770 <_ZN8touchgfx8TextAreaD0Ev>:
 8012770:	b510      	push	{r4, lr}
 8012772:	2148      	movs	r1, #72	; 0x48
 8012774:	4604      	mov	r4, r0
 8012776:	f017 fa4a 	bl	8029c0e <_ZdlPvj>
 801277a:	4620      	mov	r0, r4
 801277c:	bd10      	pop	{r4, pc}
	...

08012780 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8012780:	b513      	push	{r0, r1, r4, lr}
 8012782:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8012786:	4604      	mov	r4, r0
 8012788:	b1fb      	cbz	r3, 80127ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801278a:	4b16      	ldr	r3, [pc, #88]	; (80127e4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 801278c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801278e:	881b      	ldrh	r3, [r3, #0]
 8012790:	428b      	cmp	r3, r1
 8012792:	d91a      	bls.n	80127ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012794:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012798:	2b00      	cmp	r3, #0
 801279a:	dd16      	ble.n	80127ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801279c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80127a0:	2b00      	cmp	r3, #0
 80127a2:	dd12      	ble.n	80127ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80127a4:	4b10      	ldr	r3, [pc, #64]	; (80127e8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 80127a6:	6818      	ldr	r0, [r3, #0]
 80127a8:	f7f6 fbb4 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 80127ac:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80127b0:	6822      	ldr	r2, [r4, #0]
 80127b2:	2b00      	cmp	r3, #0
 80127b4:	db06      	blt.n	80127c4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80127b6:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80127ba:	2b00      	cmp	r3, #0
 80127bc:	db02      	blt.n	80127c4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80127be:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80127c0:	4298      	cmp	r0, r3
 80127c2:	d004      	beq.n	80127ce <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 80127c4:	6953      	ldr	r3, [r2, #20]
 80127c6:	4620      	mov	r0, r4
 80127c8:	4798      	blx	r3
 80127ca:	b002      	add	sp, #8
 80127cc:	bd10      	pop	{r4, pc}
 80127ce:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80127d2:	c903      	ldmia	r1, {r0, r1}
 80127d4:	466b      	mov	r3, sp
 80127d6:	e883 0003 	stmia.w	r3, {r0, r1}
 80127da:	6912      	ldr	r2, [r2, #16]
 80127dc:	4619      	mov	r1, r3
 80127de:	4620      	mov	r0, r4
 80127e0:	4790      	blx	r2
 80127e2:	e7f2      	b.n	80127ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80127e4:	20012e10 	.word	0x20012e10
 80127e8:	20012e18 	.word	0x20012e18

080127ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80127ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80127f0:	4b44      	ldr	r3, [pc, #272]	; (8012904 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80127f2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80127f4:	881b      	ldrh	r3, [r3, #0]
 80127f6:	4293      	cmp	r3, r2
 80127f8:	b08e      	sub	sp, #56	; 0x38
 80127fa:	4604      	mov	r4, r0
 80127fc:	d97e      	bls.n	80128fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80127fe:	6808      	ldr	r0, [r1, #0]
 8012800:	4d41      	ldr	r5, [pc, #260]	; (8012908 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8012802:	6849      	ldr	r1, [r1, #4]
 8012804:	ab05      	add	r3, sp, #20
 8012806:	c303      	stmia	r3!, {r0, r1}
 8012808:	4611      	mov	r1, r2
 801280a:	6828      	ldr	r0, [r5, #0]
 801280c:	f7f6 fb82 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 8012810:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012814:	2b00      	cmp	r3, #0
 8012816:	db11      	blt.n	801283c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012818:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801281c:	2b00      	cmp	r3, #0
 801281e:	db0d      	blt.n	801283c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012820:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012822:	4298      	cmp	r0, r3
 8012824:	d10a      	bne.n	801283c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012826:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 801282a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801282e:	ab09      	add	r3, sp, #36	; 0x24
 8012830:	e883 0003 	stmia.w	r3, {r0, r1}
 8012834:	4619      	mov	r1, r3
 8012836:	a805      	add	r0, sp, #20
 8012838:	f7fe f860 	bl	80108fc <_ZN8touchgfx4RectaNERKS0_>
 801283c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012840:	2b00      	cmp	r3, #0
 8012842:	dd5b      	ble.n	80128fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012844:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012848:	2b00      	cmp	r3, #0
 801284a:	dd57      	ble.n	80128fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801284c:	4f2f      	ldr	r7, [pc, #188]	; (801290c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 801284e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012850:	683b      	ldr	r3, [r7, #0]
 8012852:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8012856:	4b2e      	ldr	r3, [pc, #184]	; (8012910 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8012858:	681b      	ldr	r3, [r3, #0]
 801285a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801285e:	2e00      	cmp	r6, #0
 8012860:	d04c      	beq.n	80128fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012862:	6823      	ldr	r3, [r4, #0]
 8012864:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8012868:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801286a:	4620      	mov	r0, r4
 801286c:	4798      	blx	r3
 801286e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012870:	683b      	ldr	r3, [r7, #0]
 8012872:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8012876:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 801287a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 801287e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012880:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8012884:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8012888:	785b      	ldrb	r3, [r3, #1]
 801288a:	9609      	str	r6, [sp, #36]	; 0x24
 801288c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012890:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8012894:	4b1f      	ldr	r3, [pc, #124]	; (8012914 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8012896:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 801289a:	681b      	ldr	r3, [r3, #0]
 801289c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 80128a0:	910b      	str	r1, [sp, #44]	; 0x2c
 80128a2:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 80128a6:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 80128aa:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 80128ae:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 80128b2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80128b6:	b10a      	cbz	r2, 80128bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 80128b8:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 80128ba:	b906      	cbnz	r6, 80128be <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 80128bc:	689e      	ldr	r6, [r3, #8]
 80128be:	af07      	add	r7, sp, #28
 80128c0:	4621      	mov	r1, r4
 80128c2:	4638      	mov	r0, r7
 80128c4:	f004 fab0 	bl	8016e28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80128c8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80128ca:	6828      	ldr	r0, [r5, #0]
 80128cc:	f7f6 fb22 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 80128d0:	6823      	ldr	r3, [r4, #0]
 80128d2:	4605      	mov	r5, r0
 80128d4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80128d6:	4620      	mov	r0, r4
 80128d8:	4798      	blx	r3
 80128da:	6823      	ldr	r3, [r4, #0]
 80128dc:	4680      	mov	r8, r0
 80128de:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80128e2:	4620      	mov	r0, r4
 80128e4:	4798      	blx	r3
 80128e6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80128ea:	ab09      	add	r3, sp, #36	; 0x24
 80128ec:	9300      	str	r3, [sp, #0]
 80128ee:	9501      	str	r5, [sp, #4]
 80128f0:	ab05      	add	r3, sp, #20
 80128f2:	e897 0006 	ldmia.w	r7, {r1, r2}
 80128f6:	4630      	mov	r0, r6
 80128f8:	f7f6 fabe 	bl	8008e78 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80128fc:	b00e      	add	sp, #56	; 0x38
 80128fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012902:	bf00      	nop
 8012904:	20012e10 	.word	0x20012e10
 8012908:	20012e18 	.word	0x20012e18
 801290c:	20012e0c 	.word	0x20012e0c
 8012910:	20012e14 	.word	0x20012e14
 8012914:	20012db4 	.word	0x20012db4

08012918 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8012918:	b538      	push	{r3, r4, r5, lr}
 801291a:	4b0e      	ldr	r3, [pc, #56]	; (8012954 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 801291c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801291e:	881b      	ldrh	r3, [r3, #0]
 8012920:	429a      	cmp	r2, r3
 8012922:	4604      	mov	r4, r0
 8012924:	d214      	bcs.n	8012950 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8012926:	6803      	ldr	r3, [r0, #0]
 8012928:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801292a:	4798      	blx	r3
 801292c:	6823      	ldr	r3, [r4, #0]
 801292e:	4605      	mov	r5, r0
 8012930:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8012932:	4620      	mov	r0, r4
 8012934:	4798      	blx	r3
 8012936:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801293a:	b22d      	sxth	r5, r5
 801293c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012940:	4601      	mov	r1, r0
 8012942:	bf06      	itte	eq
 8012944:	4602      	moveq	r2, r0
 8012946:	4629      	moveq	r1, r5
 8012948:	462a      	movne	r2, r5
 801294a:	4620      	mov	r0, r4
 801294c:	f7fd fdb6 	bl	80104bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012950:	bd38      	pop	{r3, r4, r5, pc}
 8012952:	bf00      	nop
 8012954:	20012e10 	.word	0x20012e10

08012958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8012958:	b530      	push	{r4, r5, lr}
 801295a:	888b      	ldrh	r3, [r1, #4]
 801295c:	8583      	strh	r3, [r0, #44]	; 0x2c
 801295e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012962:	b085      	sub	sp, #20
 8012964:	4604      	mov	r4, r0
 8012966:	b923      	cbnz	r3, 8012972 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012968:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801296c:	b90b      	cbnz	r3, 8012972 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 801296e:	f7ff ffd3 	bl	8012918 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8012972:	6823      	ldr	r3, [r4, #0]
 8012974:	466d      	mov	r5, sp
 8012976:	4621      	mov	r1, r4
 8012978:	4628      	mov	r0, r5
 801297a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801297e:	4798      	blx	r3
 8012980:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8012984:	343c      	adds	r4, #60	; 0x3c
 8012986:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 801298a:	b005      	add	sp, #20
 801298c:	bd30      	pop	{r4, r5, pc}

0801298e <_ZNK8touchgfx3Box12getSolidRectEv>:
 801298e:	2300      	movs	r3, #0
 8012990:	8083      	strh	r3, [r0, #4]
 8012992:	80c3      	strh	r3, [r0, #6]
 8012994:	8003      	strh	r3, [r0, #0]
 8012996:	8043      	strh	r3, [r0, #2]
 8012998:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 801299c:	2bff      	cmp	r3, #255	; 0xff
 801299e:	bf01      	itttt	eq
 80129a0:	890b      	ldrheq	r3, [r1, #8]
 80129a2:	8083      	strheq	r3, [r0, #4]
 80129a4:	894b      	ldrheq	r3, [r1, #10]
 80129a6:	80c3      	strheq	r3, [r0, #6]
 80129a8:	4770      	bx	lr
	...

080129ac <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 80129ac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80129ae:	4604      	mov	r4, r0
 80129b0:	6808      	ldr	r0, [r1, #0]
 80129b2:	6849      	ldr	r1, [r1, #4]
 80129b4:	466b      	mov	r3, sp
 80129b6:	c303      	stmia	r3!, {r0, r1}
 80129b8:	6823      	ldr	r3, [r4, #0]
 80129ba:	4669      	mov	r1, sp
 80129bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80129be:	4620      	mov	r0, r4
 80129c0:	4798      	blx	r3
 80129c2:	4b08      	ldr	r3, [pc, #32]	; (80129e4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80129c4:	681b      	ldr	r3, [r3, #0]
 80129c6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80129ca:	b10a      	cbz	r2, 80129d0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80129cc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80129ce:	b900      	cbnz	r0, 80129d2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80129d0:	6898      	ldr	r0, [r3, #8]
 80129d2:	6803      	ldr	r3, [r0, #0]
 80129d4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80129d6:	6a1d      	ldr	r5, [r3, #32]
 80129d8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80129dc:	4669      	mov	r1, sp
 80129de:	47a8      	blx	r5
 80129e0:	b003      	add	sp, #12
 80129e2:	bd30      	pop	{r4, r5, pc}
 80129e4:	20012db4 	.word	0x20012db4

080129e8 <_ZN8touchgfx3BoxD1Ev>:
 80129e8:	4770      	bx	lr

080129ea <_ZN8touchgfx3BoxD0Ev>:
 80129ea:	b510      	push	{r4, lr}
 80129ec:	212c      	movs	r1, #44	; 0x2c
 80129ee:	4604      	mov	r4, r0
 80129f0:	f017 f90d 	bl	8029c0e <_ZdlPvj>
 80129f4:	4620      	mov	r0, r4
 80129f6:	bd10      	pop	{r4, pc}

080129f8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 80129f8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 80129fc:	b12a      	cbz	r2, 8012a0a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80129fe:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012a02:	b112      	cbz	r2, 8012a0a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012a04:	6803      	ldr	r3, [r0, #0]
 8012a06:	695b      	ldr	r3, [r3, #20]
 8012a08:	4718      	bx	r3
 8012a0a:	4770      	bx	lr

08012a0c <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8012a0c:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8012a10:	600b      	str	r3, [r1, #0]
 8012a12:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8012a16:	6013      	str	r3, [r2, #0]
 8012a18:	4770      	bx	lr

08012a1a <_ZN8touchgfx5Gauge8setWidthEs>:
 8012a1a:	8101      	strh	r1, [r0, #8]
 8012a1c:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8012a20:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8012a24:	4770      	bx	lr

08012a26 <_ZN8touchgfx5Gauge9setHeightEs>:
 8012a26:	8141      	strh	r1, [r0, #10]
 8012a28:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8012a2c:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8012a30:	4770      	bx	lr

08012a32 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8012a32:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8012a36:	4770      	bx	lr

08012a38 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8012a38:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8012a3c:	4770      	bx	lr

08012a3e <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8012a3e:	4770      	bx	lr

08012a40 <_ZN8touchgfx5GaugeD1Ev>:
 8012a40:	4770      	bx	lr

08012a42 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8012a42:	b538      	push	{r3, r4, r5, lr}
 8012a44:	4604      	mov	r4, r0
 8012a46:	460d      	mov	r5, r1
 8012a48:	f7fd fc51 	bl	80102ee <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8012a4c:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8012a50:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8012a54:	bd38      	pop	{r3, r4, r5, pc}

08012a56 <_ZN8touchgfx5GaugeD0Ev>:
 8012a56:	b510      	push	{r4, lr}
 8012a58:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8012a5c:	4604      	mov	r4, r0
 8012a5e:	f017 f8d6 	bl	8029c0e <_ZdlPvj>
 8012a62:	4620      	mov	r0, r4
 8012a64:	bd10      	pop	{r4, pc}

08012a66 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8012a66:	b510      	push	{r4, lr}
 8012a68:	6803      	ldr	r3, [r0, #0]
 8012a6a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012a6e:	4604      	mov	r4, r0
 8012a70:	4798      	blx	r3
 8012a72:	b170      	cbz	r0, 8012a92 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012a74:	6823      	ldr	r3, [r4, #0]
 8012a76:	4620      	mov	r0, r4
 8012a78:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012a7c:	4798      	blx	r3
 8012a7e:	b140      	cbz	r0, 8012a92 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012a80:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012a84:	b12b      	cbz	r3, 8012a92 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012a86:	6823      	ldr	r3, [r4, #0]
 8012a88:	4620      	mov	r0, r4
 8012a8a:	695b      	ldr	r3, [r3, #20]
 8012a8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012a90:	4718      	bx	r3
 8012a92:	bd10      	pop	{r4, pc}

08012a94 <_ZN8touchgfx5GaugeC1Ev>:
 8012a94:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012a96:	4604      	mov	r4, r0
 8012a98:	4626      	mov	r6, r4
 8012a9a:	f7fd fd49 	bl	8010530 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8012a9e:	4b18      	ldr	r3, [pc, #96]	; (8012b00 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8012aa0:	f846 3bb4 	str.w	r3, [r6], #180
 8012aa4:	a902      	add	r1, sp, #8
 8012aa6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012aaa:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8012aae:	4630      	mov	r0, r6
 8012ab0:	f015 f970 	bl	8027d94 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8012ab4:	2500      	movs	r5, #0
 8012ab6:	2301      	movs	r3, #1
 8012ab8:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8012abc:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8012ac0:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8012ac4:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8012ac8:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8012acc:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8012ad0:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8012ad4:	4638      	mov	r0, r7
 8012ad6:	f014 fba1 	bl	802721c <_ZN8touchgfx6CircleC1Ev>
 8012ada:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8012ade:	4620      	mov	r0, r4
 8012ae0:	f7fd fdc7 	bl	8010672 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8012ae4:	4639      	mov	r1, r7
 8012ae6:	4620      	mov	r0, r4
 8012ae8:	f7fd fd82 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012aec:	4620      	mov	r0, r4
 8012aee:	4631      	mov	r1, r6
 8012af0:	f7fd fd7e 	bl	80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012af4:	4620      	mov	r0, r4
 8012af6:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8012afa:	b003      	add	sp, #12
 8012afc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012afe:	bf00      	nop
 8012b00:	0802ef98 	.word	0x0802ef98

08012b04 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012b04:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8012b08:	4770      	bx	lr

08012b0a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012b0a:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8012b0e:	4770      	bx	lr

08012b10 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8012b10:	b538      	push	{r3, r4, r5, lr}
 8012b12:	8902      	ldrh	r2, [r0, #8]
 8012b14:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012b18:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8012b1c:	4604      	mov	r4, r0
 8012b1e:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8012b22:	2200      	movs	r2, #0
 8012b24:	4611      	mov	r1, r2
 8012b26:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8012b2a:	4628      	mov	r0, r5
 8012b2c:	f7f0 fa0f 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8012b30:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8012b34:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012b38:	1a9b      	subs	r3, r3, r2
 8012b3a:	ee07 3a90 	vmov	s15, r3
 8012b3e:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8012b42:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8012b46:	1a9b      	subs	r3, r3, r2
 8012b48:	ee07 3a10 	vmov	s14, r3
 8012b4c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012b50:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012b54:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8012b58:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8012b5c:	4628      	mov	r0, r5
 8012b5e:	f015 f965 	bl	8027e2c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012b62:	4b16      	ldr	r3, [pc, #88]	; (8012bbc <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8012b64:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8012b68:	4628      	mov	r0, r5
 8012b6a:	f015 f95f 	bl	8027e2c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012b6e:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012b72:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8012b76:	ee07 3a90 	vmov	s15, r3
 8012b7a:	ee07 2a10 	vmov	s14, r2
 8012b7e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012b82:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012b86:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8012b8a:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8012b8e:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8012b92:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8012b96:	4628      	mov	r0, r5
 8012b98:	f015 f948 	bl	8027e2c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012b9c:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8012ba0:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8012ba4:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8012ba8:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8012bac:	4628      	mov	r0, r5
 8012bae:	f015 f93d 	bl	8027e2c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012bb2:	2301      	movs	r3, #1
 8012bb4:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012bb8:	bd38      	pop	{r3, r4, r5, pc}
 8012bba:	bf00      	nop
 8012bbc:	43960000 	.word	0x43960000

08012bc0 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8012bc0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012bc2:	4604      	mov	r4, r0
 8012bc4:	a802      	add	r0, sp, #8
 8012bc6:	4616      	mov	r6, r2
 8012bc8:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8012bcc:	461d      	mov	r5, r3
 8012bce:	4601      	mov	r1, r0
 8012bd0:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012bd4:	f015 fa80 	bl	80280d8 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8012bd8:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8012bdc:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8012be0:	4620      	mov	r0, r4
 8012be2:	f7ff ff95 	bl	8012b10 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012be6:	b002      	add	sp, #8
 8012be8:	bd70      	pop	{r4, r5, r6, pc}

08012bea <_ZN8touchgfx5Gauge9setCenterEii>:
 8012bea:	b570      	push	{r4, r5, r6, lr}
 8012bec:	4606      	mov	r6, r0
 8012bee:	460d      	mov	r5, r1
 8012bf0:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8012bf4:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8012bf8:	4614      	mov	r4, r2
 8012bfa:	f7ff ff89 	bl	8012b10 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012bfe:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8012c02:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8012c06:	1aa4      	subs	r4, r4, r2
 8012c08:	1a6d      	subs	r5, r5, r1
 8012c0a:	0164      	lsls	r4, r4, #5
 8012c0c:	016d      	lsls	r5, r5, #5
 8012c0e:	3410      	adds	r4, #16
 8012c10:	3510      	adds	r5, #16
 8012c12:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8012c16:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8012c1a:	bd70      	pop	{r4, r5, r6, pc}

08012c1c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8012c1c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012c1e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8012c20:	0149      	lsls	r1, r1, #5
 8012c22:	4299      	cmp	r1, r3
 8012c24:	4604      	mov	r4, r0
 8012c26:	9101      	str	r1, [sp, #4]
 8012c28:	d00b      	beq.n	8012c42 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8012c2a:	4601      	mov	r1, r0
 8012c2c:	aa01      	add	r2, sp, #4
 8012c2e:	a802      	add	r0, sp, #8
 8012c30:	f014 fcf2 	bl	8027618 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8012c34:	9b01      	ldr	r3, [sp, #4]
 8012c36:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012c38:	6823      	ldr	r3, [r4, #0]
 8012c3a:	a902      	add	r1, sp, #8
 8012c3c:	691b      	ldr	r3, [r3, #16]
 8012c3e:	4620      	mov	r0, r4
 8012c40:	4798      	blx	r3
 8012c42:	b004      	add	sp, #16
 8012c44:	bd10      	pop	{r4, pc}
	...

08012c48 <_ZN8touchgfx5Gauge8setValueEi>:
 8012c48:	b570      	push	{r4, r5, r6, lr}
 8012c4a:	4604      	mov	r4, r0
 8012c4c:	f7fd fba2 	bl	8010394 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8012c50:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012c54:	429a      	cmp	r2, r3
 8012c56:	bfac      	ite	ge
 8012c58:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8012c5c:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8012c60:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012c64:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8012c68:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012c6c:	1ac9      	subs	r1, r1, r3
 8012c6e:	2900      	cmp	r1, #0
 8012c70:	bfb8      	it	lt
 8012c72:	4249      	neglt	r1, r1
 8012c74:	b289      	uxth	r1, r1
 8012c76:	4620      	mov	r0, r4
 8012c78:	f7fd fbae 	bl	80103d8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8012c7c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012c80:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8012c84:	eddf 6a19 	vldr	s13, [pc, #100]	; 8012cec <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8012c88:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8012cf0 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8012c8c:	429a      	cmp	r2, r3
 8012c8e:	4605      	mov	r5, r0
 8012c90:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8012c94:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012c98:	da15      	bge.n	8012cc6 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8012c9a:	1b5b      	subs	r3, r3, r5
 8012c9c:	ee07 3a90 	vmov	s15, r3
 8012ca0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012ca4:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012ca8:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012cac:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012cb0:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012cb4:	f015 f829 	bl	8027d0a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012cb8:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012cbc:	1b49      	subs	r1, r1, r5
 8012cbe:	4630      	mov	r0, r6
 8012cc0:	f7ff ffac 	bl	8012c1c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8012cc4:	bd70      	pop	{r4, r5, r6, pc}
 8012cc6:	442b      	add	r3, r5
 8012cc8:	ee07 3a90 	vmov	s15, r3
 8012ccc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012cd0:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012cd4:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012cd8:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012cdc:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012ce0:	f015 f813 	bl	8027d0a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012ce4:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012ce8:	4429      	add	r1, r5
 8012cea:	e7e8      	b.n	8012cbe <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8012cec:	43340000 	.word	0x43340000
 8012cf0:	40490fdb 	.word	0x40490fdb

08012cf4 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8012cf4:	b510      	push	{r4, lr}
 8012cf6:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8012cfa:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8012cfe:	0149      	lsls	r1, r1, #5
 8012d00:	0152      	lsls	r2, r2, #5
 8012d02:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8012d06:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8012d0a:	4604      	mov	r4, r0
 8012d0c:	f7fd faec 	bl	80102e8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8012d10:	4601      	mov	r1, r0
 8012d12:	4620      	mov	r0, r4
 8012d14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012d18:	f7ff bf96 	b.w	8012c48 <_ZN8touchgfx5Gauge8setValueEi>

08012d1c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8012d1c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012d20:	4770      	bx	lr

08012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8012d22:	b570      	push	{r4, r5, r6, lr}
 8012d24:	880b      	ldrh	r3, [r1, #0]
 8012d26:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8012d28:	4605      	mov	r5, r0
 8012d2a:	8813      	ldrh	r3, [r2, #0]
 8012d2c:	f825 3f30 	strh.w	r3, [r5, #48]!
 8012d30:	4604      	mov	r4, r0
 8012d32:	4628      	mov	r0, r5
 8012d34:	f006 fb06 	bl	8019344 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012d38:	4606      	mov	r6, r0
 8012d3a:	4628      	mov	r0, r5
 8012d3c:	f006 fb36 	bl	80193ac <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012d40:	6823      	ldr	r3, [r4, #0]
 8012d42:	4605      	mov	r5, r0
 8012d44:	4631      	mov	r1, r6
 8012d46:	4620      	mov	r0, r4
 8012d48:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012d4a:	4798      	blx	r3
 8012d4c:	6823      	ldr	r3, [r4, #0]
 8012d4e:	4629      	mov	r1, r5
 8012d50:	4620      	mov	r0, r4
 8012d52:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012d54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012d58:	4718      	bx	r3

08012d5a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8012d5a:	b510      	push	{r4, lr}
 8012d5c:	4604      	mov	r4, r0
 8012d5e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8012d60:	b150      	cbz	r0, 8012d78 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012d62:	6803      	ldr	r3, [r0, #0]
 8012d64:	68db      	ldr	r3, [r3, #12]
 8012d66:	4798      	blx	r3
 8012d68:	b130      	cbz	r0, 8012d78 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012d6a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8012d6c:	6803      	ldr	r3, [r0, #0]
 8012d6e:	4621      	mov	r1, r4
 8012d70:	689b      	ldr	r3, [r3, #8]
 8012d72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012d76:	4718      	bx	r3
 8012d78:	bd10      	pop	{r4, pc}

08012d7a <_ZNK8touchgfx6Button12getSolidRectEv>:
 8012d7a:	b510      	push	{r4, lr}
 8012d7c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8012d80:	2bff      	cmp	r3, #255	; 0xff
 8012d82:	4604      	mov	r4, r0
 8012d84:	d006      	beq.n	8012d94 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8012d86:	2300      	movs	r3, #0
 8012d88:	8003      	strh	r3, [r0, #0]
 8012d8a:	8043      	strh	r3, [r0, #2]
 8012d8c:	8083      	strh	r3, [r0, #4]
 8012d8e:	80c3      	strh	r3, [r0, #6]
 8012d90:	4620      	mov	r0, r4
 8012d92:	bd10      	pop	{r4, pc}
 8012d94:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8012d98:	b11b      	cbz	r3, 8012da2 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8012d9a:	3130      	adds	r1, #48	; 0x30
 8012d9c:	f006 fb3a 	bl	8019414 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012da0:	e7f6      	b.n	8012d90 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8012da2:	312e      	adds	r1, #46	; 0x2e
 8012da4:	e7fa      	b.n	8012d9c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08012da8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8012da8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012dac:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012db0:	b08a      	sub	sp, #40	; 0x28
 8012db2:	4604      	mov	r4, r0
 8012db4:	4688      	mov	r8, r1
 8012db6:	2b00      	cmp	r3, #0
 8012db8:	d066      	beq.n	8012e88 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8012dba:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012dbc:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012dc0:	a805      	add	r0, sp, #20
 8012dc2:	f006 fabf 	bl	8019344 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012dc6:	4607      	mov	r7, r0
 8012dc8:	a805      	add	r0, sp, #20
 8012dca:	f006 faef 	bl	80193ac <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012dce:	f9b8 6000 	ldrsh.w	r6, [r8]
 8012dd2:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8012dd6:	4432      	add	r2, r6
 8012dd8:	b292      	uxth	r2, r2
 8012dda:	2300      	movs	r3, #0
 8012ddc:	fa0f fc82 	sxth.w	ip, r2
 8012de0:	459c      	cmp	ip, r3
 8012de2:	9306      	str	r3, [sp, #24]
 8012de4:	dd52      	ble.n	8012e8c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012de6:	42b7      	cmp	r7, r6
 8012de8:	dd50      	ble.n	8012e8c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012dea:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8012dee:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8012df2:	442b      	add	r3, r5
 8012df4:	b29b      	uxth	r3, r3
 8012df6:	b219      	sxth	r1, r3
 8012df8:	2900      	cmp	r1, #0
 8012dfa:	dd47      	ble.n	8012e8c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012dfc:	42a8      	cmp	r0, r5
 8012dfe:	dd45      	ble.n	8012e8c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012e00:	4567      	cmp	r7, ip
 8012e02:	bfb8      	it	lt
 8012e04:	b2ba      	uxthlt	r2, r7
 8012e06:	4288      	cmp	r0, r1
 8012e08:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8012e0c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8012e10:	bfb8      	it	lt
 8012e12:	b283      	uxthlt	r3, r0
 8012e14:	1b92      	subs	r2, r2, r6
 8012e16:	1b5b      	subs	r3, r3, r5
 8012e18:	f8ad 201c 	strh.w	r2, [sp, #28]
 8012e1c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012e20:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012e24:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012e28:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012e2c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012e30:	429a      	cmp	r2, r3
 8012e32:	d026      	beq.n	8012e82 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012e34:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012e38:	2b00      	cmp	r3, #0
 8012e3a:	dd22      	ble.n	8012e82 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012e3c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012e40:	2b00      	cmp	r3, #0
 8012e42:	dd1e      	ble.n	8012e82 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012e44:	2300      	movs	r3, #0
 8012e46:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8012e4a:	6823      	ldr	r3, [r4, #0]
 8012e4c:	a908      	add	r1, sp, #32
 8012e4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012e50:	4620      	mov	r0, r4
 8012e52:	4798      	blx	r3
 8012e54:	4b0f      	ldr	r3, [pc, #60]	; (8012e94 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8012e56:	681b      	ldr	r3, [r3, #0]
 8012e58:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012e5c:	b10a      	cbz	r2, 8012e62 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8012e5e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012e60:	b900      	cbnz	r0, 8012e64 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8012e62:	6898      	ldr	r0, [r3, #8]
 8012e64:	6801      	ldr	r1, [r0, #0]
 8012e66:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012e6a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012e6e:	2501      	movs	r5, #1
 8012e70:	9502      	str	r5, [sp, #8]
 8012e72:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8012e76:	9401      	str	r4, [sp, #4]
 8012e78:	ac06      	add	r4, sp, #24
 8012e7a:	9400      	str	r4, [sp, #0]
 8012e7c:	688c      	ldr	r4, [r1, #8]
 8012e7e:	a905      	add	r1, sp, #20
 8012e80:	47a0      	blx	r4
 8012e82:	b00a      	add	sp, #40	; 0x28
 8012e84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012e88:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8012e8a:	e797      	b.n	8012dbc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8012e8c:	2300      	movs	r3, #0
 8012e8e:	9307      	str	r3, [sp, #28]
 8012e90:	e7ca      	b.n	8012e28 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8012e92:	bf00      	nop
 8012e94:	20012db4 	.word	0x20012db4

08012e98 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8012e98:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8012e9c:	b12a      	cbz	r2, 8012eaa <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8012e9e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012ea2:	b112      	cbz	r2, 8012eaa <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8012ea4:	6803      	ldr	r3, [r0, #0]
 8012ea6:	695b      	ldr	r3, [r3, #20]
 8012ea8:	4718      	bx	r3
 8012eaa:	4770      	bx	lr

08012eac <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8012eac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012eb0:	4b2f      	ldr	r3, [pc, #188]	; (8012f70 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8012eb2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012eb4:	881b      	ldrh	r3, [r3, #0]
 8012eb6:	4293      	cmp	r3, r2
 8012eb8:	b08d      	sub	sp, #52	; 0x34
 8012eba:	4604      	mov	r4, r0
 8012ebc:	460f      	mov	r7, r1
 8012ebe:	d954      	bls.n	8012f6a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012ec0:	4b2c      	ldr	r3, [pc, #176]	; (8012f74 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8012ec2:	6819      	ldr	r1, [r3, #0]
 8012ec4:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8012ec8:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8012ecc:	4a2a      	ldr	r2, [pc, #168]	; (8012f78 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8012ece:	6812      	ldr	r2, [r2, #0]
 8012ed0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8012ed4:	2900      	cmp	r1, #0
 8012ed6:	d048      	beq.n	8012f6a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012ed8:	785a      	ldrb	r2, [r3, #1]
 8012eda:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8012ede:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8012ee2:	4b26      	ldr	r3, [pc, #152]	; (8012f7c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8012ee4:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8012ee8:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8012eec:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8012ef0:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8012ef2:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8012ef6:	9107      	str	r1, [sp, #28]
 8012ef8:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8012efc:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012f00:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8012f04:	681a      	ldr	r2, [r3, #0]
 8012f06:	f88d 8020 	strb.w	r8, [sp, #32]
 8012f0a:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8012f0e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8012f12:	9609      	str	r6, [sp, #36]	; 0x24
 8012f14:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8012f18:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8012f1c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8012f20:	b10b      	cbz	r3, 8012f26 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8012f22:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8012f24:	b905      	cbnz	r5, 8012f28 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8012f26:	6895      	ldr	r5, [r2, #8]
 8012f28:	ae05      	add	r6, sp, #20
 8012f2a:	4621      	mov	r1, r4
 8012f2c:	4630      	mov	r0, r6
 8012f2e:	f003 ff7b 	bl	8016e28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012f32:	4b13      	ldr	r3, [pc, #76]	; (8012f80 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8012f34:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012f36:	6818      	ldr	r0, [r3, #0]
 8012f38:	f7f5 ffec 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 8012f3c:	6823      	ldr	r3, [r4, #0]
 8012f3e:	4680      	mov	r8, r0
 8012f40:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012f42:	4620      	mov	r0, r4
 8012f44:	4798      	blx	r3
 8012f46:	6823      	ldr	r3, [r4, #0]
 8012f48:	4681      	mov	r9, r0
 8012f4a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012f4e:	4620      	mov	r0, r4
 8012f50:	4798      	blx	r3
 8012f52:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8012f56:	ab07      	add	r3, sp, #28
 8012f58:	9300      	str	r3, [sp, #0]
 8012f5a:	f8cd 8004 	str.w	r8, [sp, #4]
 8012f5e:	463b      	mov	r3, r7
 8012f60:	e896 0006 	ldmia.w	r6, {r1, r2}
 8012f64:	4628      	mov	r0, r5
 8012f66:	f7f5 ff87 	bl	8008e78 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012f6a:	b00d      	add	sp, #52	; 0x34
 8012f6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012f70:	20012e10 	.word	0x20012e10
 8012f74:	20012e0c 	.word	0x20012e0c
 8012f78:	20012e14 	.word	0x20012e14
 8012f7c:	20012db4 	.word	0x20012db4
 8012f80:	20012e18 	.word	0x20012e18

08012f84 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8012f84:	4770      	bx	lr

08012f86 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8012f86:	4770      	bx	lr

08012f88 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8012f88:	b510      	push	{r4, lr}
 8012f8a:	213c      	movs	r1, #60	; 0x3c
 8012f8c:	4604      	mov	r4, r0
 8012f8e:	f016 fe3e 	bl	8029c0e <_ZdlPvj>
 8012f92:	4620      	mov	r0, r4
 8012f94:	bd10      	pop	{r4, pc}

08012f96 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8012f96:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012f9a:	461c      	mov	r4, r3
 8012f9c:	4606      	mov	r6, r0
 8012f9e:	9f06      	ldr	r7, [sp, #24]
 8012fa0:	f7ff febf 	bl	8012d22 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8012fa4:	8823      	ldrh	r3, [r4, #0]
 8012fa6:	86b3      	strh	r3, [r6, #52]	; 0x34
 8012fa8:	883b      	ldrh	r3, [r7, #0]
 8012faa:	86f3      	strh	r3, [r6, #54]	; 0x36
 8012fac:	4638      	mov	r0, r7
 8012fae:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8012fb2:	f006 f9c7 	bl	8019344 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012fb6:	f04f 0802 	mov.w	r8, #2
 8012fba:	fb95 f5f8 	sdiv	r5, r5, r8
 8012fbe:	b2ad      	uxth	r5, r5
 8012fc0:	fb90 f0f8 	sdiv	r0, r0, r8
 8012fc4:	1a2d      	subs	r5, r5, r0
 8012fc6:	8735      	strh	r5, [r6, #56]	; 0x38
 8012fc8:	4638      	mov	r0, r7
 8012fca:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8012fce:	fb94 f4f8 	sdiv	r4, r4, r8
 8012fd2:	f006 f9eb 	bl	80193ac <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012fd6:	b2a4      	uxth	r4, r4
 8012fd8:	fb90 f0f8 	sdiv	r0, r0, r8
 8012fdc:	1a24      	subs	r4, r4, r0
 8012fde:	8774      	strh	r4, [r6, #58]	; 0x3a
 8012fe0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012fe4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8012fe4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012fe8:	4604      	mov	r4, r0
 8012fea:	b08c      	sub	sp, #48	; 0x30
 8012fec:	460d      	mov	r5, r1
 8012fee:	f7ff fedb 	bl	8012da8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8012ff2:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8012ff6:	2b00      	cmp	r3, #0
 8012ff8:	d05d      	beq.n	80130b6 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8012ffa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8012ffc:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013000:	a805      	add	r0, sp, #20
 8013002:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8013006:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 801300a:	f006 f99b 	bl	8019344 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801300e:	4606      	mov	r6, r0
 8013010:	a805      	add	r0, sp, #20
 8013012:	f006 f9cb 	bl	80193ac <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013016:	6869      	ldr	r1, [r5, #4]
 8013018:	f8ad 001e 	strh.w	r0, [sp, #30]
 801301c:	6828      	ldr	r0, [r5, #0]
 801301e:	f8ad 8018 	strh.w	r8, [sp, #24]
 8013022:	ab08      	add	r3, sp, #32
 8013024:	ad08      	add	r5, sp, #32
 8013026:	c303      	stmia	r3!, {r0, r1}
 8013028:	a906      	add	r1, sp, #24
 801302a:	4628      	mov	r0, r5
 801302c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013030:	f8ad 601c 	strh.w	r6, [sp, #28]
 8013034:	f7fd fc62 	bl	80108fc <_ZN8touchgfx4RectaNERKS0_>
 8013038:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801303c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013040:	429a      	cmp	r2, r3
 8013042:	d035      	beq.n	80130b0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013044:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8013048:	2b00      	cmp	r3, #0
 801304a:	dd31      	ble.n	80130b0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 801304c:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8013050:	2b00      	cmp	r3, #0
 8013052:	dd2d      	ble.n	80130b0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013054:	2300      	movs	r3, #0
 8013056:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 801305a:	6823      	ldr	r3, [r4, #0]
 801305c:	a90a      	add	r1, sp, #40	; 0x28
 801305e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013060:	4620      	mov	r0, r4
 8013062:	4798      	blx	r3
 8013064:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8013068:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 801306a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801306e:	1a9b      	subs	r3, r3, r2
 8013070:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013074:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8013076:	1ac9      	subs	r1, r1, r3
 8013078:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 801307c:	490f      	ldr	r1, [pc, #60]	; (80130bc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 801307e:	6809      	ldr	r1, [r1, #0]
 8013080:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8013084:	b108      	cbz	r0, 801308a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8013086:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8013088:	b900      	cbnz	r0, 801308c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 801308a:	6888      	ldr	r0, [r1, #8]
 801308c:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8013090:	440b      	add	r3, r1
 8013092:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8013096:	2601      	movs	r6, #1
 8013098:	440a      	add	r2, r1
 801309a:	6801      	ldr	r1, [r0, #0]
 801309c:	9602      	str	r6, [sp, #8]
 801309e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80130a2:	e9cd 5400 	strd	r5, r4, [sp]
 80130a6:	b21b      	sxth	r3, r3
 80130a8:	688c      	ldr	r4, [r1, #8]
 80130aa:	b212      	sxth	r2, r2
 80130ac:	a905      	add	r1, sp, #20
 80130ae:	47a0      	blx	r4
 80130b0:	b00c      	add	sp, #48	; 0x30
 80130b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80130b6:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80130b8:	e7a0      	b.n	8012ffc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 80130ba:	bf00      	nop
 80130bc:	20012db4 	.word	0x20012db4

080130c0 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 80130c0:	b510      	push	{r4, lr}
 80130c2:	2101      	movs	r1, #1
 80130c4:	2200      	movs	r2, #0
 80130c6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80130ca:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80130ce:	4c0e      	ldr	r4, [pc, #56]	; (8013108 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 80130d0:	8082      	strh	r2, [r0, #4]
 80130d2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80130d6:	80c2      	strh	r2, [r0, #6]
 80130d8:	8102      	strh	r2, [r0, #8]
 80130da:	8142      	strh	r2, [r0, #10]
 80130dc:	8182      	strh	r2, [r0, #12]
 80130de:	81c2      	strh	r2, [r0, #14]
 80130e0:	8202      	strh	r2, [r0, #16]
 80130e2:	8242      	strh	r2, [r0, #18]
 80130e4:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80130e8:	61c2      	str	r2, [r0, #28]
 80130ea:	8402      	strh	r2, [r0, #32]
 80130ec:	8442      	strh	r2, [r0, #34]	; 0x22
 80130ee:	6282      	str	r2, [r0, #40]	; 0x28
 80130f0:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80130f4:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80130f6:	8601      	strh	r1, [r0, #48]	; 0x30
 80130f8:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80130fc:	6004      	str	r4, [r0, #0]
 80130fe:	8681      	strh	r1, [r0, #52]	; 0x34
 8013100:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013102:	8702      	strh	r2, [r0, #56]	; 0x38
 8013104:	8742      	strh	r2, [r0, #58]	; 0x3a
 8013106:	bd10      	pop	{r4, pc}
 8013108:	0802f080 	.word	0x0802f080

0801310c <_ZN8touchgfx5ImageD1Ev>:
 801310c:	4770      	bx	lr

0801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 801310e:	b570      	push	{r4, r5, r6, lr}
 8013110:	880b      	ldrh	r3, [r1, #0]
 8013112:	84c3      	strh	r3, [r0, #38]	; 0x26
 8013114:	4604      	mov	r4, r0
 8013116:	4608      	mov	r0, r1
 8013118:	460d      	mov	r5, r1
 801311a:	f006 f913 	bl	8019344 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801311e:	4606      	mov	r6, r0
 8013120:	4628      	mov	r0, r5
 8013122:	f006 f943 	bl	80193ac <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013126:	6823      	ldr	r3, [r4, #0]
 8013128:	4605      	mov	r5, r0
 801312a:	4631      	mov	r1, r6
 801312c:	4620      	mov	r0, r4
 801312e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013130:	4798      	blx	r3
 8013132:	6823      	ldr	r3, [r4, #0]
 8013134:	4629      	mov	r1, r5
 8013136:	4620      	mov	r0, r4
 8013138:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801313a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801313e:	4718      	bx	r3

08013140 <_ZN8touchgfx5ImageD0Ev>:
 8013140:	b510      	push	{r4, lr}
 8013142:	212c      	movs	r1, #44	; 0x2c
 8013144:	4604      	mov	r4, r0
 8013146:	f016 fd62 	bl	8029c0e <_ZdlPvj>
 801314a:	4620      	mov	r0, r4
 801314c:	bd10      	pop	{r4, pc}

0801314e <_ZNK8touchgfx5Image12getSolidRectEv>:
 801314e:	b510      	push	{r4, lr}
 8013150:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8013154:	2bff      	cmp	r3, #255	; 0xff
 8013156:	4604      	mov	r4, r0
 8013158:	d006      	beq.n	8013168 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 801315a:	2300      	movs	r3, #0
 801315c:	8003      	strh	r3, [r0, #0]
 801315e:	8043      	strh	r3, [r0, #2]
 8013160:	8083      	strh	r3, [r0, #4]
 8013162:	80c3      	strh	r3, [r0, #6]
 8013164:	4620      	mov	r0, r4
 8013166:	bd10      	pop	{r4, pc}
 8013168:	3126      	adds	r1, #38	; 0x26
 801316a:	f006 f953 	bl	8019414 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801316e:	e7f9      	b.n	8013164 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08013170 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8013170:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8013174:	b12a      	cbz	r2, 8013182 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8013176:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801317a:	b112      	cbz	r2, 8013182 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801317c:	6803      	ldr	r3, [r0, #0]
 801317e:	695b      	ldr	r3, [r3, #20]
 8013180:	4718      	bx	r3
 8013182:	4770      	bx	lr

08013184 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8013184:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013188:	4604      	mov	r4, r0
 801318a:	b088      	sub	sp, #32
 801318c:	f854 3b26 	ldr.w	r3, [r4], #38
 8013190:	2500      	movs	r5, #0
 8013192:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013194:	460f      	mov	r7, r1
 8013196:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801319a:	a904      	add	r1, sp, #16
 801319c:	4606      	mov	r6, r0
 801319e:	4798      	blx	r3
 80131a0:	4620      	mov	r0, r4
 80131a2:	f006 f8cf 	bl	8019344 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80131a6:	4680      	mov	r8, r0
 80131a8:	4620      	mov	r0, r4
 80131aa:	f006 f8ff 	bl	80193ac <_ZNK8touchgfx6Bitmap9getHeightEv>
 80131ae:	9506      	str	r5, [sp, #24]
 80131b0:	ad06      	add	r5, sp, #24
 80131b2:	f8ad 001e 	strh.w	r0, [sp, #30]
 80131b6:	4639      	mov	r1, r7
 80131b8:	4628      	mov	r0, r5
 80131ba:	f8ad 801c 	strh.w	r8, [sp, #28]
 80131be:	f7fd fb9d 	bl	80108fc <_ZN8touchgfx4RectaNERKS0_>
 80131c2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80131c6:	2b00      	cmp	r3, #0
 80131c8:	dd19      	ble.n	80131fe <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80131ca:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80131ce:	2b00      	cmp	r3, #0
 80131d0:	dd15      	ble.n	80131fe <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80131d2:	4b0c      	ldr	r3, [pc, #48]	; (8013204 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 80131d4:	681b      	ldr	r3, [r3, #0]
 80131d6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80131da:	b10a      	cbz	r2, 80131e0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 80131dc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80131de:	b900      	cbnz	r0, 80131e2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 80131e0:	6898      	ldr	r0, [r3, #8]
 80131e2:	6801      	ldr	r1, [r0, #0]
 80131e4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80131e8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80131ec:	2701      	movs	r7, #1
 80131ee:	9702      	str	r7, [sp, #8]
 80131f0:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 80131f4:	e9cd 5600 	strd	r5, r6, [sp]
 80131f8:	688d      	ldr	r5, [r1, #8]
 80131fa:	4621      	mov	r1, r4
 80131fc:	47a8      	blx	r5
 80131fe:	b008      	add	sp, #32
 8013200:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013204:	20012db4 	.word	0x20012db4

08013208 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8013208:	4770      	bx	lr

0801320a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801320a:	b510      	push	{r4, lr}
 801320c:	2148      	movs	r1, #72	; 0x48
 801320e:	4604      	mov	r4, r0
 8013210:	f016 fcfd 	bl	8029c0e <_ZdlPvj>
 8013214:	4620      	mov	r0, r4
 8013216:	bd10      	pop	{r4, pc}

08013218 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8013218:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801321c:	b08d      	sub	sp, #52	; 0x34
 801321e:	4604      	mov	r4, r0
 8013220:	460f      	mov	r7, r1
 8013222:	f7ff fdc1 	bl	8012da8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013226:	4a55      	ldr	r2, [pc, #340]	; (801337c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8013228:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801322a:	8812      	ldrh	r2, [r2, #0]
 801322c:	429a      	cmp	r2, r3
 801322e:	f240 8082 	bls.w	8013336 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013232:	4d53      	ldr	r5, [pc, #332]	; (8013380 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8013234:	682a      	ldr	r2, [r5, #0]
 8013236:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801323a:	4b52      	ldr	r3, [pc, #328]	; (8013384 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 801323c:	681b      	ldr	r3, [r3, #0]
 801323e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8013242:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8013246:	2200      	movs	r2, #0
 8013248:	e9cd 2203 	strd	r2, r2, [sp, #12]
 801324c:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8013250:	2a03      	cmp	r2, #3
 8013252:	d811      	bhi.n	8013278 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013254:	e8df f002 	tbb	[pc, r2]
 8013258:	89727902 	.word	0x89727902
 801325c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013260:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013264:	1ad2      	subs	r2, r2, r3
 8013266:	2002      	movs	r0, #2
 8013268:	f8ad 1010 	strh.w	r1, [sp, #16]
 801326c:	fb92 f2f0 	sdiv	r2, r2, r0
 8013270:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013274:	f8ad 200e 	strh.w	r2, [sp, #14]
 8013278:	f10d 080c 	add.w	r8, sp, #12
 801327c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013280:	f10d 0914 	add.w	r9, sp, #20
 8013284:	e889 0003 	stmia.w	r9, {r0, r1}
 8013288:	4639      	mov	r1, r7
 801328a:	4648      	mov	r0, r9
 801328c:	f7fd fb36 	bl	80108fc <_ZN8touchgfx4RectaNERKS0_>
 8013290:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013294:	2b00      	cmp	r3, #0
 8013296:	dd4e      	ble.n	8013336 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013298:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801329c:	2b00      	cmp	r3, #0
 801329e:	dd4a      	ble.n	8013336 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80132a0:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80132a4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80132a8:	1a9b      	subs	r3, r3, r2
 80132aa:	f8ad 3014 	strh.w	r3, [sp, #20]
 80132ae:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 80132b2:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 80132b6:	1a9b      	subs	r3, r3, r2
 80132b8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80132bc:	6823      	ldr	r3, [r4, #0]
 80132be:	4641      	mov	r1, r8
 80132c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80132c2:	4620      	mov	r0, r4
 80132c4:	4798      	blx	r3
 80132c6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80132ca:	2b00      	cmp	r3, #0
 80132cc:	d053      	beq.n	8013376 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 80132ce:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80132d0:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80132d2:	682b      	ldr	r3, [r5, #0]
 80132d4:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 80132d8:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 80132dc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80132e0:	785b      	ldrb	r3, [r3, #1]
 80132e2:	9209      	str	r2, [sp, #36]	; 0x24
 80132e4:	f3c3 0501 	ubfx	r5, r3, #0, #2
 80132e8:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80132ec:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 80132f0:	2300      	movs	r3, #0
 80132f2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80132f6:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 80132fa:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80132fe:	4b22      	ldr	r3, [pc, #136]	; (8013388 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8013300:	9607      	str	r6, [sp, #28]
 8013302:	681b      	ldr	r3, [r3, #0]
 8013304:	f88d 5020 	strb.w	r5, [sp, #32]
 8013308:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801330c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013310:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013314:	b10a      	cbz	r2, 801331a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8013316:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8013318:	b904      	cbnz	r4, 801331c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801331a:	689c      	ldr	r4, [r3, #8]
 801331c:	4b1b      	ldr	r3, [pc, #108]	; (801338c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801331e:	6818      	ldr	r0, [r3, #0]
 8013320:	f7f5 fdf8 	bl	8008f14 <_ZNK8touchgfx5Texts7getTextEt>
 8013324:	ab07      	add	r3, sp, #28
 8013326:	9001      	str	r0, [sp, #4]
 8013328:	9300      	str	r3, [sp, #0]
 801332a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801332e:	464b      	mov	r3, r9
 8013330:	4620      	mov	r0, r4
 8013332:	f7f5 fda1 	bl	8008e78 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013336:	b00d      	add	sp, #52	; 0x34
 8013338:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801333c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013340:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013344:	1ad2      	subs	r2, r2, r3
 8013346:	3201      	adds	r2, #1
 8013348:	e78d      	b.n	8013266 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 801334a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801334e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8013352:	1ad2      	subs	r2, r2, r3
 8013354:	3201      	adds	r2, #1
 8013356:	2002      	movs	r0, #2
 8013358:	f8ad 3010 	strh.w	r3, [sp, #16]
 801335c:	fb92 f2f0 	sdiv	r2, r2, r0
 8013360:	f8ad 1012 	strh.w	r1, [sp, #18]
 8013364:	f8ad 200c 	strh.w	r2, [sp, #12]
 8013368:	e786      	b.n	8013278 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801336a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801336e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8013372:	1ad2      	subs	r2, r2, r3
 8013374:	e7ef      	b.n	8013356 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8013376:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8013378:	e7aa      	b.n	80132d0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 801337a:	bf00      	nop
 801337c:	20012e10 	.word	0x20012e10
 8013380:	20012e0c 	.word	0x20012e0c
 8013384:	20012e14 	.word	0x20012e14
 8013388:	20012db4 	.word	0x20012db4
 801338c:	20012e18 	.word	0x20012e18

08013390 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8013390:	b510      	push	{r4, lr}
 8013392:	2101      	movs	r1, #1
 8013394:	4c13      	ldr	r4, [pc, #76]	; (80133e4 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8013396:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801339a:	2200      	movs	r2, #0
 801339c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80133a0:	6004      	str	r4, [r0, #0]
 80133a2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80133a6:	4c10      	ldr	r4, [pc, #64]	; (80133e8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 80133a8:	8082      	strh	r2, [r0, #4]
 80133aa:	80c2      	strh	r2, [r0, #6]
 80133ac:	8102      	strh	r2, [r0, #8]
 80133ae:	8142      	strh	r2, [r0, #10]
 80133b0:	8182      	strh	r2, [r0, #12]
 80133b2:	81c2      	strh	r2, [r0, #14]
 80133b4:	8202      	strh	r2, [r0, #16]
 80133b6:	8242      	strh	r2, [r0, #18]
 80133b8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80133bc:	61c2      	str	r2, [r0, #28]
 80133be:	8402      	strh	r2, [r0, #32]
 80133c0:	8442      	strh	r2, [r0, #34]	; 0x22
 80133c2:	6282      	str	r2, [r0, #40]	; 0x28
 80133c4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80133c8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80133ca:	8601      	strh	r1, [r0, #48]	; 0x30
 80133cc:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80133d0:	6344      	str	r4, [r0, #52]	; 0x34
 80133d2:	8701      	strh	r1, [r0, #56]	; 0x38
 80133d4:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 80133d8:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 80133dc:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 80133e0:	bd10      	pop	{r4, pc}
 80133e2:	bf00      	nop
 80133e4:	0802f164 	.word	0x0802f164
 80133e8:	0802c5d0 	.word	0x0802c5d0

080133ec <_ZN8touchgfx7OutlineD1Ev>:
 80133ec:	4770      	bx	lr

080133ee <_ZN8touchgfx7OutlineD0Ev>:
 80133ee:	b510      	push	{r4, lr}
 80133f0:	2130      	movs	r1, #48	; 0x30
 80133f2:	4604      	mov	r4, r0
 80133f4:	f016 fc0b 	bl	8029c0e <_ZdlPvj>
 80133f8:	4620      	mov	r0, r4
 80133fa:	bd10      	pop	{r4, pc}

080133fc <_ZN8touchgfx7Outline5resetEv>:
 80133fc:	b510      	push	{r4, lr}
 80133fe:	4604      	mov	r4, r0
 8013400:	f000 fe96 	bl	8014130 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8013404:	60e0      	str	r0, [r4, #12]
 8013406:	f000 fe99 	bl	801413c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801340a:	68e3      	ldr	r3, [r4, #12]
 801340c:	6123      	str	r3, [r4, #16]
 801340e:	08c0      	lsrs	r0, r0, #3
 8013410:	2200      	movs	r2, #0
 8013412:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8013416:	3801      	subs	r0, #1
 8013418:	6060      	str	r0, [r4, #4]
 801341a:	60a2      	str	r2, [r4, #8]
 801341c:	8019      	strh	r1, [r3, #0]
 801341e:	8059      	strh	r1, [r3, #2]
 8013420:	809a      	strh	r2, [r3, #4]
 8013422:	80da      	strh	r2, [r3, #6]
 8013424:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013426:	f023 0301 	bic.w	r3, r3, #1
 801342a:	f043 0302 	orr.w	r3, r3, #2
 801342e:	6263      	str	r3, [r4, #36]	; 0x24
 8013430:	bd10      	pop	{r4, pc}
	...

08013434 <_ZN8touchgfx7OutlineC1Ev>:
 8013434:	b510      	push	{r4, lr}
 8013436:	4b0a      	ldr	r3, [pc, #40]	; (8013460 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8013438:	6003      	str	r3, [r0, #0]
 801343a:	2300      	movs	r3, #0
 801343c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8013440:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8013444:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8013448:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801344c:	6243      	str	r3, [r0, #36]	; 0x24
 801344e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8013452:	4604      	mov	r4, r0
 8013454:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8013458:	f7ff ffd0 	bl	80133fc <_ZN8touchgfx7Outline5resetEv>
 801345c:	4620      	mov	r0, r4
 801345e:	bd10      	pop	{r4, pc}
 8013460:	0802f1d8 	.word	0x0802f1d8

08013464 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8013464:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013468:	b093      	sub	sp, #76	; 0x4c
 801346a:	1156      	asrs	r6, r2, #5
 801346c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801346e:	9305      	str	r3, [sp, #20]
 8013470:	f004 051f 	and.w	r5, r4, #31
 8013474:	1153      	asrs	r3, r2, #5
 8013476:	9504      	str	r5, [sp, #16]
 8013478:	1165      	asrs	r5, r4, #5
 801347a:	9303      	str	r3, [sp, #12]
 801347c:	42ae      	cmp	r6, r5
 801347e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8013482:	9306      	str	r3, [sp, #24]
 8013484:	f002 031f 	and.w	r3, r2, #31
 8013488:	f040 80f8 	bne.w	801367c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801348c:	9c04      	ldr	r4, [sp, #16]
 801348e:	9a05      	ldr	r2, [sp, #20]
 8013490:	42a3      	cmp	r3, r4
 8013492:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8013496:	6902      	ldr	r2, [r0, #16]
 8013498:	d125      	bne.n	80134e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801349a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801349e:	459e      	cmp	lr, r3
 80134a0:	d103      	bne.n	80134aa <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 80134a2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80134a6:	429e      	cmp	r6, r3
 80134a8:	d035      	beq.n	8013516 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80134aa:	88d1      	ldrh	r1, [r2, #6]
 80134ac:	8893      	ldrh	r3, [r2, #4]
 80134ae:	430b      	orrs	r3, r1
 80134b0:	d010      	beq.n	80134d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80134b2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80134b6:	2b00      	cmp	r3, #0
 80134b8:	db0c      	blt.n	80134d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80134ba:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80134bc:	428b      	cmp	r3, r1
 80134be:	da09      	bge.n	80134d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80134c0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80134c4:	428b      	cmp	r3, r1
 80134c6:	bf38      	it	cc
 80134c8:	3208      	addcc	r2, #8
 80134ca:	f103 0301 	add.w	r3, r3, #1
 80134ce:	bf38      	it	cc
 80134d0:	6102      	strcc	r2, [r0, #16]
 80134d2:	6083      	str	r3, [r0, #8]
 80134d4:	6903      	ldr	r3, [r0, #16]
 80134d6:	9a03      	ldr	r2, [sp, #12]
 80134d8:	f8a3 e000 	strh.w	lr, [r3]
 80134dc:	805a      	strh	r2, [r3, #2]
 80134de:	2200      	movs	r2, #0
 80134e0:	809a      	strh	r2, [r3, #4]
 80134e2:	80da      	strh	r2, [r3, #6]
 80134e4:	e017      	b.n	8013516 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80134e6:	9c05      	ldr	r4, [sp, #20]
 80134e8:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 80134ec:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 80134f0:	f004 041f 	and.w	r4, r4, #31
 80134f4:	114e      	asrs	r6, r1, #5
 80134f6:	9402      	str	r4, [sp, #8]
 80134f8:	9c04      	ldr	r4, [sp, #16]
 80134fa:	4576      	cmp	r6, lr
 80134fc:	f001 0c1f 	and.w	ip, r1, #31
 8013500:	eba4 0403 	sub.w	r4, r4, r3
 8013504:	d10a      	bne.n	801351c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8013506:	9b02      	ldr	r3, [sp, #8]
 8013508:	449c      	add	ip, r3
 801350a:	44a0      	add	r8, r4
 801350c:	fb04 a40c 	mla	r4, r4, ip, sl
 8013510:	f8a2 8004 	strh.w	r8, [r2, #4]
 8013514:	80d4      	strh	r4, [r2, #6]
 8013516:	b013      	add	sp, #76	; 0x4c
 8013518:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801351c:	9d05      	ldr	r5, [sp, #20]
 801351e:	1a69      	subs	r1, r5, r1
 8013520:	bf5b      	ittet	pl
 8013522:	f1cc 0520 	rsbpl	r5, ip, #32
 8013526:	436c      	mulpl	r4, r5
 8013528:	2500      	movmi	r5, #0
 801352a:	2520      	movpl	r5, #32
 801352c:	bf44      	itt	mi
 801352e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8013532:	4249      	negmi	r1, r1
 8013534:	9501      	str	r5, [sp, #4]
 8013536:	9f01      	ldr	r7, [sp, #4]
 8013538:	fb94 f5f1 	sdiv	r5, r4, r1
 801353c:	fb01 4415 	mls	r4, r1, r5, r4
 8013540:	bf54      	ite	pl
 8013542:	f04f 0901 	movpl.w	r9, #1
 8013546:	f04f 39ff 	movmi.w	r9, #4294967295
 801354a:	2c00      	cmp	r4, #0
 801354c:	bfb8      	it	lt
 801354e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8013552:	44bc      	add	ip, r7
 8013554:	44a8      	add	r8, r5
 8013556:	fb05 ac0c 	mla	ip, r5, ip, sl
 801355a:	f8a2 8004 	strh.w	r8, [r2, #4]
 801355e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8013562:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013566:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801356a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 801356e:	bfb8      	it	lt
 8013570:	1864      	addlt	r4, r4, r1
 8013572:	ea58 0202 	orrs.w	r2, r8, r2
 8013576:	444e      	add	r6, r9
 8013578:	d011      	beq.n	801359e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801357a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801357e:	f1b8 0f00 	cmp.w	r8, #0
 8013582:	db0c      	blt.n	801359e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8013584:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8013586:	4590      	cmp	r8, r2
 8013588:	da09      	bge.n	801359e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801358a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801358e:	4590      	cmp	r8, r2
 8013590:	bf3c      	itt	cc
 8013592:	f10c 0208 	addcc.w	r2, ip, #8
 8013596:	6102      	strcc	r2, [r0, #16]
 8013598:	f108 0201 	add.w	r2, r8, #1
 801359c:	6082      	str	r2, [r0, #8]
 801359e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80135a2:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80135a6:	f8ac 6000 	strh.w	r6, [ip]
 80135aa:	2700      	movs	r7, #0
 80135ac:	45b6      	cmp	lr, r6
 80135ae:	f8ac 2002 	strh.w	r2, [ip, #2]
 80135b2:	f8ac 7004 	strh.w	r7, [ip, #4]
 80135b6:	f8ac 7006 	strh.w	r7, [ip, #6]
 80135ba:	442b      	add	r3, r5
 80135bc:	d04d      	beq.n	801365a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 80135be:	9f04      	ldr	r7, [sp, #16]
 80135c0:	1aff      	subs	r7, r7, r3
 80135c2:	443d      	add	r5, r7
 80135c4:	016d      	lsls	r5, r5, #5
 80135c6:	fb95 f8f1 	sdiv	r8, r5, r1
 80135ca:	fb01 5518 	mls	r5, r1, r8, r5
 80135ce:	2d00      	cmp	r5, #0
 80135d0:	bfb8      	it	lt
 80135d2:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80135d6:	f108 0701 	add.w	r7, r8, #1
 80135da:	bfb8      	it	lt
 80135dc:	186d      	addlt	r5, r5, r1
 80135de:	1a64      	subs	r4, r4, r1
 80135e0:	9703      	str	r7, [sp, #12]
 80135e2:	f04f 0a00 	mov.w	sl, #0
 80135e6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80135ea:	1964      	adds	r4, r4, r5
 80135ec:	bf58      	it	pl
 80135ee:	9f03      	ldrpl	r7, [sp, #12]
 80135f0:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80135f4:	bf48      	it	mi
 80135f6:	4647      	movmi	r7, r8
 80135f8:	44bb      	add	fp, r7
 80135fa:	f8ac b004 	strh.w	fp, [ip, #4]
 80135fe:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013602:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013606:	f8ac b006 	strh.w	fp, [ip, #6]
 801360a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801360e:	443b      	add	r3, r7
 8013610:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013614:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013618:	bf58      	it	pl
 801361a:	1a64      	subpl	r4, r4, r1
 801361c:	ea5b 0707 	orrs.w	r7, fp, r7
 8013620:	444e      	add	r6, r9
 8013622:	d011      	beq.n	8013648 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013624:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8013628:	f1bb 0f00 	cmp.w	fp, #0
 801362c:	db0c      	blt.n	8013648 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801362e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013630:	45bb      	cmp	fp, r7
 8013632:	da09      	bge.n	8013648 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013634:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013638:	45bb      	cmp	fp, r7
 801363a:	bf3c      	itt	cc
 801363c:	f10c 0708 	addcc.w	r7, ip, #8
 8013640:	6107      	strcc	r7, [r0, #16]
 8013642:	f10b 0701 	add.w	r7, fp, #1
 8013646:	6087      	str	r7, [r0, #8]
 8013648:	6907      	ldr	r7, [r0, #16]
 801364a:	45b6      	cmp	lr, r6
 801364c:	803e      	strh	r6, [r7, #0]
 801364e:	807a      	strh	r2, [r7, #2]
 8013650:	f8a7 a004 	strh.w	sl, [r7, #4]
 8013654:	f8a7 a006 	strh.w	sl, [r7, #6]
 8013658:	d1c5      	bne.n	80135e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801365a:	9a04      	ldr	r2, [sp, #16]
 801365c:	1ad3      	subs	r3, r2, r3
 801365e:	6902      	ldr	r2, [r0, #16]
 8013660:	8891      	ldrh	r1, [r2, #4]
 8013662:	88d6      	ldrh	r6, [r2, #6]
 8013664:	4419      	add	r1, r3
 8013666:	8091      	strh	r1, [r2, #4]
 8013668:	9902      	ldr	r1, [sp, #8]
 801366a:	f101 0c20 	add.w	ip, r1, #32
 801366e:	9901      	ldr	r1, [sp, #4]
 8013670:	ebac 0c01 	sub.w	ip, ip, r1
 8013674:	fb03 630c 	mla	r3, r3, ip, r6
 8013678:	80d3      	strh	r3, [r2, #6]
 801367a:	e74c      	b.n	8013516 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801367c:	9d05      	ldr	r5, [sp, #20]
 801367e:	1aa2      	subs	r2, r4, r2
 8013680:	eba5 0501 	sub.w	r5, r5, r1
 8013684:	9508      	str	r5, [sp, #32]
 8013686:	9202      	str	r2, [sp, #8]
 8013688:	f140 8128 	bpl.w	80138dc <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801368c:	9a03      	ldr	r2, [sp, #12]
 801368e:	2a00      	cmp	r2, #0
 8013690:	f6ff af41 	blt.w	8013516 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013694:	9a02      	ldr	r2, [sp, #8]
 8013696:	4252      	negs	r2, r2
 8013698:	9202      	str	r2, [sp, #8]
 801369a:	9a06      	ldr	r2, [sp, #24]
 801369c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 80136a0:	f04f 34ff 	mov.w	r4, #4294967295
 80136a4:	9206      	str	r2, [sp, #24]
 80136a6:	462a      	mov	r2, r5
 80136a8:	940b      	str	r4, [sp, #44]	; 0x2c
 80136aa:	435a      	muls	r2, r3
 80136ac:	2400      	movs	r4, #0
 80136ae:	9d02      	ldr	r5, [sp, #8]
 80136b0:	9401      	str	r4, [sp, #4]
 80136b2:	9c02      	ldr	r4, [sp, #8]
 80136b4:	fb92 f4f4 	sdiv	r4, r2, r4
 80136b8:	fb05 2214 	mls	r2, r5, r4, r2
 80136bc:	2a00      	cmp	r2, #0
 80136be:	9207      	str	r2, [sp, #28]
 80136c0:	bfbc      	itt	lt
 80136c2:	1952      	addlt	r2, r2, r5
 80136c4:	9207      	strlt	r2, [sp, #28]
 80136c6:	9a01      	ldr	r2, [sp, #4]
 80136c8:	6905      	ldr	r5, [r0, #16]
 80136ca:	bfb8      	it	lt
 80136cc:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80136d0:	eb04 0901 	add.w	r9, r4, r1
 80136d4:	429a      	cmp	r2, r3
 80136d6:	ea4f 1669 	mov.w	r6, r9, asr #5
 80136da:	f040 8112 	bne.w	8013902 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 80136de:	f9b5 3000 	ldrsh.w	r3, [r5]
 80136e2:	429e      	cmp	r6, r3
 80136e4:	d104      	bne.n	80136f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 80136e6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80136ea:	9a03      	ldr	r2, [sp, #12]
 80136ec:	429a      	cmp	r2, r3
 80136ee:	d01b      	beq.n	8013728 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80136f0:	88ea      	ldrh	r2, [r5, #6]
 80136f2:	88ab      	ldrh	r3, [r5, #4]
 80136f4:	4313      	orrs	r3, r2
 80136f6:	d010      	beq.n	801371a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80136f8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80136fc:	2a00      	cmp	r2, #0
 80136fe:	db0c      	blt.n	801371a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013700:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013702:	429a      	cmp	r2, r3
 8013704:	da09      	bge.n	801371a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013706:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801370a:	429a      	cmp	r2, r3
 801370c:	bf38      	it	cc
 801370e:	3508      	addcc	r5, #8
 8013710:	f102 0201 	add.w	r2, r2, #1
 8013714:	bf38      	it	cc
 8013716:	6105      	strcc	r5, [r0, #16]
 8013718:	6082      	str	r2, [r0, #8]
 801371a:	6903      	ldr	r3, [r0, #16]
 801371c:	9a03      	ldr	r2, [sp, #12]
 801371e:	805a      	strh	r2, [r3, #2]
 8013720:	2200      	movs	r2, #0
 8013722:	801e      	strh	r6, [r3, #0]
 8013724:	809a      	strh	r2, [r3, #4]
 8013726:	80da      	strh	r2, [r3, #6]
 8013728:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801372a:	9a03      	ldr	r2, [sp, #12]
 801372c:	6901      	ldr	r1, [r0, #16]
 801372e:	441a      	add	r2, r3
 8013730:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013734:	42b3      	cmp	r3, r6
 8013736:	d103      	bne.n	8013740 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8013738:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801373c:	429a      	cmp	r2, r3
 801373e:	d01a      	beq.n	8013776 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8013740:	88cc      	ldrh	r4, [r1, #6]
 8013742:	888b      	ldrh	r3, [r1, #4]
 8013744:	4323      	orrs	r3, r4
 8013746:	d010      	beq.n	801376a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013748:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 801374c:	2c00      	cmp	r4, #0
 801374e:	db0c      	blt.n	801376a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013750:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013752:	429c      	cmp	r4, r3
 8013754:	da09      	bge.n	801376a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8013756:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801375a:	429c      	cmp	r4, r3
 801375c:	bf38      	it	cc
 801375e:	3108      	addcc	r1, #8
 8013760:	f104 0401 	add.w	r4, r4, #1
 8013764:	bf38      	it	cc
 8013766:	6101      	strcc	r1, [r0, #16]
 8013768:	6084      	str	r4, [r0, #8]
 801376a:	6903      	ldr	r3, [r0, #16]
 801376c:	2100      	movs	r1, #0
 801376e:	801e      	strh	r6, [r3, #0]
 8013770:	805a      	strh	r2, [r3, #2]
 8013772:	8099      	strh	r1, [r3, #4]
 8013774:	80d9      	strh	r1, [r3, #6]
 8013776:	9b06      	ldr	r3, [sp, #24]
 8013778:	4293      	cmp	r3, r2
 801377a:	f000 8082 	beq.w	8013882 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 801377e:	9b08      	ldr	r3, [sp, #32]
 8013780:	9c02      	ldr	r4, [sp, #8]
 8013782:	9902      	ldr	r1, [sp, #8]
 8013784:	015b      	lsls	r3, r3, #5
 8013786:	fb93 f1f1 	sdiv	r1, r3, r1
 801378a:	fb04 3311 	mls	r3, r4, r1, r3
 801378e:	2b00      	cmp	r3, #0
 8013790:	9103      	str	r1, [sp, #12]
 8013792:	9308      	str	r3, [sp, #32]
 8013794:	da04      	bge.n	80137a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8013796:	1e4b      	subs	r3, r1, #1
 8013798:	9303      	str	r3, [sp, #12]
 801379a:	9b08      	ldr	r3, [sp, #32]
 801379c:	4423      	add	r3, r4
 801379e:	9308      	str	r3, [sp, #32]
 80137a0:	9b07      	ldr	r3, [sp, #28]
 80137a2:	9902      	ldr	r1, [sp, #8]
 80137a4:	1a5b      	subs	r3, r3, r1
 80137a6:	9307      	str	r3, [sp, #28]
 80137a8:	9b01      	ldr	r3, [sp, #4]
 80137aa:	f1c3 0320 	rsb	r3, r3, #32
 80137ae:	930e      	str	r3, [sp, #56]	; 0x38
 80137b0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80137b2:	9b01      	ldr	r3, [sp, #4]
 80137b4:	1a5b      	subs	r3, r3, r1
 80137b6:	464f      	mov	r7, r9
 80137b8:	930a      	str	r3, [sp, #40]	; 0x28
 80137ba:	2600      	movs	r6, #0
 80137bc:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 80137c0:	185b      	adds	r3, r3, r1
 80137c2:	bf58      	it	pl
 80137c4:	9902      	ldrpl	r1, [sp, #8]
 80137c6:	9307      	str	r3, [sp, #28]
 80137c8:	bf5d      	ittte	pl
 80137ca:	1a5b      	subpl	r3, r3, r1
 80137cc:	9307      	strpl	r3, [sp, #28]
 80137ce:	9b03      	ldrpl	r3, [sp, #12]
 80137d0:	9903      	ldrmi	r1, [sp, #12]
 80137d2:	bf58      	it	pl
 80137d4:	1c59      	addpl	r1, r3, #1
 80137d6:	4489      	add	r9, r1
 80137d8:	2a00      	cmp	r2, #0
 80137da:	ea4f 1a69 	mov.w	sl, r9, asr #5
 80137de:	db2e      	blt.n	801383e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80137e0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80137e2:	4293      	cmp	r3, r2
 80137e4:	dd2b      	ble.n	801383e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80137e6:	9c01      	ldr	r4, [sp, #4]
 80137e8:	6905      	ldr	r5, [r0, #16]
 80137ea:	46a0      	mov	r8, r4
 80137ec:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80137ee:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 80137f2:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 80137f6:	45a0      	cmp	r8, r4
 80137f8:	f040 814f 	bne.w	8013a9a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 80137fc:	f9b5 1000 	ldrsh.w	r1, [r5]
 8013800:	4551      	cmp	r1, sl
 8013802:	d103      	bne.n	801380c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8013804:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013808:	4291      	cmp	r1, r2
 801380a:	d018      	beq.n	801383e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801380c:	ea5c 010e 	orrs.w	r1, ip, lr
 8013810:	d00f      	beq.n	8013832 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013812:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013816:	2900      	cmp	r1, #0
 8013818:	db0b      	blt.n	8013832 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801381a:	428b      	cmp	r3, r1
 801381c:	dd09      	ble.n	8013832 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801381e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8013822:	4299      	cmp	r1, r3
 8013824:	bf38      	it	cc
 8013826:	3508      	addcc	r5, #8
 8013828:	f101 0101 	add.w	r1, r1, #1
 801382c:	bf38      	it	cc
 801382e:	6105      	strcc	r5, [r0, #16]
 8013830:	6081      	str	r1, [r0, #8]
 8013832:	6903      	ldr	r3, [r0, #16]
 8013834:	f8a3 a000 	strh.w	sl, [r3]
 8013838:	805a      	strh	r2, [r3, #2]
 801383a:	809e      	strh	r6, [r3, #4]
 801383c:	80de      	strh	r6, [r3, #6]
 801383e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013840:	6901      	ldr	r1, [r0, #16]
 8013842:	441a      	add	r2, r3
 8013844:	88cc      	ldrh	r4, [r1, #6]
 8013846:	888b      	ldrh	r3, [r1, #4]
 8013848:	4323      	orrs	r3, r4
 801384a:	d010      	beq.n	801386e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801384c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8013850:	2c00      	cmp	r4, #0
 8013852:	db0c      	blt.n	801386e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8013854:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013856:	429c      	cmp	r4, r3
 8013858:	da09      	bge.n	801386e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801385a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801385e:	429c      	cmp	r4, r3
 8013860:	bf38      	it	cc
 8013862:	3108      	addcc	r1, #8
 8013864:	f104 0401 	add.w	r4, r4, #1
 8013868:	bf38      	it	cc
 801386a:	6101      	strcc	r1, [r0, #16]
 801386c:	6084      	str	r4, [r0, #8]
 801386e:	6903      	ldr	r3, [r0, #16]
 8013870:	f8a3 a000 	strh.w	sl, [r3]
 8013874:	805a      	strh	r2, [r3, #2]
 8013876:	809e      	strh	r6, [r3, #4]
 8013878:	80de      	strh	r6, [r3, #6]
 801387a:	9b06      	ldr	r3, [sp, #24]
 801387c:	4293      	cmp	r3, r2
 801387e:	464f      	mov	r7, r9
 8013880:	d19c      	bne.n	80137bc <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8013882:	9b01      	ldr	r3, [sp, #4]
 8013884:	6907      	ldr	r7, [r0, #16]
 8013886:	f1c3 0620 	rsb	r6, r3, #32
 801388a:	9b05      	ldr	r3, [sp, #20]
 801388c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8013890:	9b04      	ldr	r3, [sp, #16]
 8013892:	429e      	cmp	r6, r3
 8013894:	f040 81cc 	bne.w	8013c30 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8013898:	f9b7 3000 	ldrsh.w	r3, [r7]
 801389c:	459e      	cmp	lr, r3
 801389e:	d104      	bne.n	80138aa <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 80138a0:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80138a4:	429a      	cmp	r2, r3
 80138a6:	f43f ae36 	beq.w	8013516 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80138aa:	88f9      	ldrh	r1, [r7, #6]
 80138ac:	88bb      	ldrh	r3, [r7, #4]
 80138ae:	430b      	orrs	r3, r1
 80138b0:	d010      	beq.n	80138d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80138b2:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80138b6:	2b00      	cmp	r3, #0
 80138b8:	db0c      	blt.n	80138d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80138ba:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80138bc:	428b      	cmp	r3, r1
 80138be:	da09      	bge.n	80138d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80138c0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80138c4:	428b      	cmp	r3, r1
 80138c6:	bf38      	it	cc
 80138c8:	3708      	addcc	r7, #8
 80138ca:	f103 0301 	add.w	r3, r3, #1
 80138ce:	bf38      	it	cc
 80138d0:	6107      	strcc	r7, [r0, #16]
 80138d2:	6083      	str	r3, [r0, #8]
 80138d4:	6903      	ldr	r3, [r0, #16]
 80138d6:	f8a3 e000 	strh.w	lr, [r3]
 80138da:	e5ff      	b.n	80134dc <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 80138dc:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80138de:	9c03      	ldr	r4, [sp, #12]
 80138e0:	42a2      	cmp	r2, r4
 80138e2:	f6ff ae18 	blt.w	8013516 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80138e6:	9c06      	ldr	r4, [sp, #24]
 80138e8:	42a2      	cmp	r2, r4
 80138ea:	bfb8      	it	lt
 80138ec:	3201      	addlt	r2, #1
 80138ee:	9c08      	ldr	r4, [sp, #32]
 80138f0:	bfb8      	it	lt
 80138f2:	9206      	strlt	r2, [sp, #24]
 80138f4:	f1c3 0220 	rsb	r2, r3, #32
 80138f8:	4362      	muls	r2, r4
 80138fa:	2401      	movs	r4, #1
 80138fc:	940b      	str	r4, [sp, #44]	; 0x2c
 80138fe:	2420      	movs	r4, #32
 8013900:	e6d5      	b.n	80136ae <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8013902:	f009 021f 	and.w	r2, r9, #31
 8013906:	ea4f 1861 	mov.w	r8, r1, asr #5
 801390a:	920c      	str	r2, [sp, #48]	; 0x30
 801390c:	9a01      	ldr	r2, [sp, #4]
 801390e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8013912:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8013916:	45b0      	cmp	r8, r6
 8013918:	f001 011f 	and.w	r1, r1, #31
 801391c:	eba2 0203 	sub.w	r2, r2, r3
 8013920:	d108      	bne.n	8013934 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8013922:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013924:	4419      	add	r1, r3
 8013926:	4496      	add	lr, r2
 8013928:	fb02 a101 	mla	r1, r2, r1, sl
 801392c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013930:	80e9      	strh	r1, [r5, #6]
 8013932:	e6f9      	b.n	8013728 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013934:	2c00      	cmp	r4, #0
 8013936:	f2c0 80a9 	blt.w	8013a8c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 801393a:	2701      	movs	r7, #1
 801393c:	f1c1 0c20 	rsb	ip, r1, #32
 8013940:	970a      	str	r7, [sp, #40]	; 0x28
 8013942:	fb02 f20c 	mul.w	r2, r2, ip
 8013946:	2720      	movs	r7, #32
 8013948:	9709      	str	r7, [sp, #36]	; 0x24
 801394a:	fb92 fcf4 	sdiv	ip, r2, r4
 801394e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8013950:	fb04 221c 	mls	r2, r4, ip, r2
 8013954:	2a00      	cmp	r2, #0
 8013956:	bfb8      	it	lt
 8013958:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 801395c:	4439      	add	r1, r7
 801395e:	fb0c a101 	mla	r1, ip, r1, sl
 8013962:	80e9      	strh	r1, [r5, #6]
 8013964:	44e6      	add	lr, ip
 8013966:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013968:	f8a5 e004 	strh.w	lr, [r5, #4]
 801396c:	eb08 0501 	add.w	r5, r8, r1
 8013970:	6901      	ldr	r1, [r0, #16]
 8013972:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8013976:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 801397a:	bfb8      	it	lt
 801397c:	1912      	addlt	r2, r2, r4
 801397e:	ea58 070e 	orrs.w	r7, r8, lr
 8013982:	d010      	beq.n	80139a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013984:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8013988:	f1be 0f00 	cmp.w	lr, #0
 801398c:	db0b      	blt.n	80139a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801398e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013990:	45be      	cmp	lr, r7
 8013992:	da08      	bge.n	80139a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8013994:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013998:	45be      	cmp	lr, r7
 801399a:	bf3c      	itt	cc
 801399c:	3108      	addcc	r1, #8
 801399e:	6101      	strcc	r1, [r0, #16]
 80139a0:	f10e 0101 	add.w	r1, lr, #1
 80139a4:	6081      	str	r1, [r0, #8]
 80139a6:	6901      	ldr	r1, [r0, #16]
 80139a8:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80139ac:	800d      	strh	r5, [r1, #0]
 80139ae:	f04f 0e00 	mov.w	lr, #0
 80139b2:	42ae      	cmp	r6, r5
 80139b4:	f8a1 8002 	strh.w	r8, [r1, #2]
 80139b8:	f8a1 e004 	strh.w	lr, [r1, #4]
 80139bc:	f8a1 e006 	strh.w	lr, [r1, #6]
 80139c0:	4463      	add	r3, ip
 80139c2:	d054      	beq.n	8013a6e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 80139c4:	9901      	ldr	r1, [sp, #4]
 80139c6:	1ac9      	subs	r1, r1, r3
 80139c8:	4461      	add	r1, ip
 80139ca:	0149      	lsls	r1, r1, #5
 80139cc:	fb91 fef4 	sdiv	lr, r1, r4
 80139d0:	fb04 111e 	mls	r1, r4, lr, r1
 80139d4:	2900      	cmp	r1, #0
 80139d6:	bfb8      	it	lt
 80139d8:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 80139dc:	f10e 0701 	add.w	r7, lr, #1
 80139e0:	bfb8      	it	lt
 80139e2:	1909      	addlt	r1, r1, r4
 80139e4:	1b12      	subs	r2, r2, r4
 80139e6:	970d      	str	r7, [sp, #52]	; 0x34
 80139e8:	f8d0 a010 	ldr.w	sl, [r0, #16]
 80139ec:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80139ee:	f8ba b004 	ldrh.w	fp, [sl, #4]
 80139f2:	1852      	adds	r2, r2, r1
 80139f4:	bf54      	ite	pl
 80139f6:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 80139fa:	46f4      	movmi	ip, lr
 80139fc:	44e3      	add	fp, ip
 80139fe:	f8aa b004 	strh.w	fp, [sl, #4]
 8013a02:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8013a06:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8013a0a:	f8aa b006 	strh.w	fp, [sl, #6]
 8013a0e:	4463      	add	r3, ip
 8013a10:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013a14:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013a18:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8013a1c:	bf58      	it	pl
 8013a1e:	1b12      	subpl	r2, r2, r4
 8013a20:	443d      	add	r5, r7
 8013a22:	ea5b 070a 	orrs.w	r7, fp, sl
 8013a26:	d014      	beq.n	8013a52 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013a28:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8013a2c:	f1ba 0f00 	cmp.w	sl, #0
 8013a30:	db0f      	blt.n	8013a52 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013a32:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013a34:	45ba      	cmp	sl, r7
 8013a36:	da0c      	bge.n	8013a52 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013a38:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8013a3c:	45ba      	cmp	sl, r7
 8013a3e:	bf38      	it	cc
 8013a40:	f10c 0c08 	addcc.w	ip, ip, #8
 8013a44:	f10a 0a01 	add.w	sl, sl, #1
 8013a48:	bf38      	it	cc
 8013a4a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8013a4e:	f8c0 a008 	str.w	sl, [r0, #8]
 8013a52:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013a56:	f04f 0700 	mov.w	r7, #0
 8013a5a:	42ae      	cmp	r6, r5
 8013a5c:	f8ac 5000 	strh.w	r5, [ip]
 8013a60:	f8ac 8002 	strh.w	r8, [ip, #2]
 8013a64:	f8ac 7004 	strh.w	r7, [ip, #4]
 8013a68:	f8ac 7006 	strh.w	r7, [ip, #6]
 8013a6c:	d1bc      	bne.n	80139e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8013a6e:	6904      	ldr	r4, [r0, #16]
 8013a70:	9a01      	ldr	r2, [sp, #4]
 8013a72:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013a74:	1ad3      	subs	r3, r2, r3
 8013a76:	88a2      	ldrh	r2, [r4, #4]
 8013a78:	441a      	add	r2, r3
 8013a7a:	80a2      	strh	r2, [r4, #4]
 8013a7c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013a7e:	3120      	adds	r1, #32
 8013a80:	1a89      	subs	r1, r1, r2
 8013a82:	88e2      	ldrh	r2, [r4, #6]
 8013a84:	fb03 2301 	mla	r3, r3, r1, r2
 8013a88:	80e3      	strh	r3, [r4, #6]
 8013a8a:	e64d      	b.n	8013728 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013a8c:	f04f 37ff 	mov.w	r7, #4294967295
 8013a90:	970a      	str	r7, [sp, #40]	; 0x28
 8013a92:	434a      	muls	r2, r1
 8013a94:	4264      	negs	r4, r4
 8013a96:	2700      	movs	r7, #0
 8013a98:	e756      	b.n	8013948 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8013a9a:	ea4f 1867 	mov.w	r8, r7, asr #5
 8013a9e:	f009 031f 	and.w	r3, r9, #31
 8013aa2:	45d0      	cmp	r8, sl
 8013aa4:	f007 071f 	and.w	r7, r7, #31
 8013aa8:	930f      	str	r3, [sp, #60]	; 0x3c
 8013aaa:	fa1f fc8c 	uxth.w	ip, ip
 8013aae:	fa1f fe8e 	uxth.w	lr, lr
 8013ab2:	d10a      	bne.n	8013aca <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8013ab4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013ab6:	449c      	add	ip, r3
 8013ab8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013aba:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013abe:	441f      	add	r7, r3
 8013ac0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013ac2:	fb03 e707 	mla	r7, r3, r7, lr
 8013ac6:	80ef      	strh	r7, [r5, #6]
 8013ac8:	e6b9      	b.n	801383e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013aca:	2900      	cmp	r1, #0
 8013acc:	f2c0 80a8 	blt.w	8013c20 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8013ad0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013ad2:	f1c7 0320 	rsb	r3, r7, #32
 8013ad6:	4363      	muls	r3, r4
 8013ad8:	2401      	movs	r4, #1
 8013ada:	940d      	str	r4, [sp, #52]	; 0x34
 8013adc:	2420      	movs	r4, #32
 8013ade:	940c      	str	r4, [sp, #48]	; 0x30
 8013ae0:	fb93 f4f1 	sdiv	r4, r3, r1
 8013ae4:	fb01 3b14 	mls	fp, r1, r4, r3
 8013ae8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013aea:	f1bb 0f00 	cmp.w	fp, #0
 8013aee:	bfb8      	it	lt
 8013af0:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013af4:	441f      	add	r7, r3
 8013af6:	fb04 e707 	mla	r7, r4, r7, lr
 8013afa:	44a4      	add	ip, r4
 8013afc:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013b00:	80ef      	strh	r7, [r5, #6]
 8013b02:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013b06:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013b08:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8013b0c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013b10:	bfb8      	it	lt
 8013b12:	448b      	addlt	fp, r1
 8013b14:	eb08 0503 	add.w	r5, r8, r3
 8013b18:	ea5e 0307 	orrs.w	r3, lr, r7
 8013b1c:	d011      	beq.n	8013b42 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013b1e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8013b22:	f1be 0f00 	cmp.w	lr, #0
 8013b26:	db0c      	blt.n	8013b42 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013b28:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013b2a:	45be      	cmp	lr, r7
 8013b2c:	da09      	bge.n	8013b42 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013b2e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013b32:	45be      	cmp	lr, r7
 8013b34:	bf3c      	itt	cc
 8013b36:	f10c 0708 	addcc.w	r7, ip, #8
 8013b3a:	6107      	strcc	r7, [r0, #16]
 8013b3c:	f10e 0701 	add.w	r7, lr, #1
 8013b40:	6087      	str	r7, [r0, #8]
 8013b42:	6907      	ldr	r7, [r0, #16]
 8013b44:	b213      	sxth	r3, r2
 8013b46:	9310      	str	r3, [sp, #64]	; 0x40
 8013b48:	807b      	strh	r3, [r7, #2]
 8013b4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013b4c:	803d      	strh	r5, [r7, #0]
 8013b4e:	4555      	cmp	r5, sl
 8013b50:	80be      	strh	r6, [r7, #4]
 8013b52:	80fe      	strh	r6, [r7, #6]
 8013b54:	eb04 0c03 	add.w	ip, r4, r3
 8013b58:	d051      	beq.n	8013bfe <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8013b5a:	9b01      	ldr	r3, [sp, #4]
 8013b5c:	eba3 070c 	sub.w	r7, r3, ip
 8013b60:	443c      	add	r4, r7
 8013b62:	0164      	lsls	r4, r4, #5
 8013b64:	fb94 f8f1 	sdiv	r8, r4, r1
 8013b68:	fb01 4418 	mls	r4, r1, r8, r4
 8013b6c:	2c00      	cmp	r4, #0
 8013b6e:	bfb8      	it	lt
 8013b70:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013b74:	ebab 0301 	sub.w	r3, fp, r1
 8013b78:	f108 0701 	add.w	r7, r8, #1
 8013b7c:	bfb8      	it	lt
 8013b7e:	1864      	addlt	r4, r4, r1
 8013b80:	9309      	str	r3, [sp, #36]	; 0x24
 8013b82:	9711      	str	r7, [sp, #68]	; 0x44
 8013b84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013b86:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013b8a:	191b      	adds	r3, r3, r4
 8013b8c:	bf58      	it	pl
 8013b8e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8013b90:	f8be b004 	ldrh.w	fp, [lr, #4]
 8013b94:	9309      	str	r3, [sp, #36]	; 0x24
 8013b96:	bf48      	it	mi
 8013b98:	4647      	movmi	r7, r8
 8013b9a:	44bb      	add	fp, r7
 8013b9c:	f8ae b004 	strh.w	fp, [lr, #4]
 8013ba0:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013ba4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013ba8:	f8ae b006 	strh.w	fp, [lr, #6]
 8013bac:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013bb0:	44bc      	add	ip, r7
 8013bb2:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8013bb4:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013bb8:	443d      	add	r5, r7
 8013bba:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8013bbe:	bf5c      	itt	pl
 8013bc0:	1a5b      	subpl	r3, r3, r1
 8013bc2:	9309      	strpl	r3, [sp, #36]	; 0x24
 8013bc4:	ea5b 0307 	orrs.w	r3, fp, r7
 8013bc8:	d011      	beq.n	8013bee <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013bca:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8013bce:	f1bb 0f00 	cmp.w	fp, #0
 8013bd2:	db0c      	blt.n	8013bee <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013bd4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013bd6:	45bb      	cmp	fp, r7
 8013bd8:	da09      	bge.n	8013bee <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013bda:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013bde:	45bb      	cmp	fp, r7
 8013be0:	bf3c      	itt	cc
 8013be2:	f10e 0708 	addcc.w	r7, lr, #8
 8013be6:	6107      	strcc	r7, [r0, #16]
 8013be8:	f10b 0701 	add.w	r7, fp, #1
 8013bec:	6087      	str	r7, [r0, #8]
 8013bee:	6907      	ldr	r7, [r0, #16]
 8013bf0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013bf2:	803d      	strh	r5, [r7, #0]
 8013bf4:	4555      	cmp	r5, sl
 8013bf6:	807b      	strh	r3, [r7, #2]
 8013bf8:	80be      	strh	r6, [r7, #4]
 8013bfa:	80fe      	strh	r6, [r7, #6]
 8013bfc:	d1c2      	bne.n	8013b84 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8013bfe:	9b01      	ldr	r3, [sp, #4]
 8013c00:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013c02:	eba3 0c0c 	sub.w	ip, r3, ip
 8013c06:	6903      	ldr	r3, [r0, #16]
 8013c08:	8899      	ldrh	r1, [r3, #4]
 8013c0a:	4461      	add	r1, ip
 8013c0c:	8099      	strh	r1, [r3, #4]
 8013c0e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013c10:	3720      	adds	r7, #32
 8013c12:	1a7f      	subs	r7, r7, r1
 8013c14:	88d9      	ldrh	r1, [r3, #6]
 8013c16:	fb0c 1c07 	mla	ip, ip, r7, r1
 8013c1a:	f8a3 c006 	strh.w	ip, [r3, #6]
 8013c1e:	e60e      	b.n	801383e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013c20:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013c22:	f04f 34ff 	mov.w	r4, #4294967295
 8013c26:	940d      	str	r4, [sp, #52]	; 0x34
 8013c28:	437b      	muls	r3, r7
 8013c2a:	4249      	negs	r1, r1
 8013c2c:	2400      	movs	r4, #0
 8013c2e:	e756      	b.n	8013ade <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8013c30:	9905      	ldr	r1, [sp, #20]
 8013c32:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8013c36:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8013c3a:	f001 011f 	and.w	r1, r1, #31
 8013c3e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8013c42:	9102      	str	r1, [sp, #8]
 8013c44:	9904      	ldr	r1, [sp, #16]
 8013c46:	45f3      	cmp	fp, lr
 8013c48:	f009 0c1f 	and.w	ip, r9, #31
 8013c4c:	eba1 0406 	sub.w	r4, r1, r6
 8013c50:	d108      	bne.n	8013c64 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8013c52:	9b02      	ldr	r3, [sp, #8]
 8013c54:	449c      	add	ip, r3
 8013c56:	44a0      	add	r8, r4
 8013c58:	fb04 a40c 	mla	r4, r4, ip, sl
 8013c5c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013c60:	80fc      	strh	r4, [r7, #6]
 8013c62:	e458      	b.n	8013516 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013c64:	9905      	ldr	r1, [sp, #20]
 8013c66:	ebb1 0109 	subs.w	r1, r1, r9
 8013c6a:	bf5b      	ittet	pl
 8013c6c:	f1cc 0520 	rsbpl	r5, ip, #32
 8013c70:	436c      	mulpl	r4, r5
 8013c72:	2500      	movmi	r5, #0
 8013c74:	2520      	movpl	r5, #32
 8013c76:	bf44      	itt	mi
 8013c78:	fb04 f40c 	mulmi.w	r4, r4, ip
 8013c7c:	4249      	negmi	r1, r1
 8013c7e:	9501      	str	r5, [sp, #4]
 8013c80:	9b01      	ldr	r3, [sp, #4]
 8013c82:	fb94 f5f1 	sdiv	r5, r4, r1
 8013c86:	fb01 4415 	mls	r4, r1, r5, r4
 8013c8a:	bf54      	ite	pl
 8013c8c:	f04f 0901 	movpl.w	r9, #1
 8013c90:	f04f 39ff 	movmi.w	r9, #4294967295
 8013c94:	2c00      	cmp	r4, #0
 8013c96:	bfb8      	it	lt
 8013c98:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8013c9c:	449c      	add	ip, r3
 8013c9e:	44a8      	add	r8, r5
 8013ca0:	fb05 ac0c 	mla	ip, r5, ip, sl
 8013ca4:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013ca8:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013cac:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013cb0:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8013cb4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013cb8:	bfb8      	it	lt
 8013cba:	1864      	addlt	r4, r4, r1
 8013cbc:	ea58 0707 	orrs.w	r7, r8, r7
 8013cc0:	eb0b 0309 	add.w	r3, fp, r9
 8013cc4:	d011      	beq.n	8013cea <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013cc6:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8013cca:	f1b8 0f00 	cmp.w	r8, #0
 8013cce:	db0c      	blt.n	8013cea <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013cd0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013cd2:	45b8      	cmp	r8, r7
 8013cd4:	da09      	bge.n	8013cea <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013cd6:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8013cda:	45b8      	cmp	r8, r7
 8013cdc:	bf3c      	itt	cc
 8013cde:	f10c 0708 	addcc.w	r7, ip, #8
 8013ce2:	6107      	strcc	r7, [r0, #16]
 8013ce4:	f108 0701 	add.w	r7, r8, #1
 8013ce8:	6087      	str	r7, [r0, #8]
 8013cea:	6907      	ldr	r7, [r0, #16]
 8013cec:	f04f 0c00 	mov.w	ip, #0
 8013cf0:	b212      	sxth	r2, r2
 8013cf2:	459e      	cmp	lr, r3
 8013cf4:	803b      	strh	r3, [r7, #0]
 8013cf6:	807a      	strh	r2, [r7, #2]
 8013cf8:	f8a7 c004 	strh.w	ip, [r7, #4]
 8013cfc:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013d00:	442e      	add	r6, r5
 8013d02:	d04d      	beq.n	8013da0 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8013d04:	9f04      	ldr	r7, [sp, #16]
 8013d06:	1bbf      	subs	r7, r7, r6
 8013d08:	443d      	add	r5, r7
 8013d0a:	016d      	lsls	r5, r5, #5
 8013d0c:	fb95 f8f1 	sdiv	r8, r5, r1
 8013d10:	fb01 5518 	mls	r5, r1, r8, r5
 8013d14:	4565      	cmp	r5, ip
 8013d16:	bfb8      	it	lt
 8013d18:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013d1c:	f108 0701 	add.w	r7, r8, #1
 8013d20:	bfb8      	it	lt
 8013d22:	186d      	addlt	r5, r5, r1
 8013d24:	1a64      	subs	r4, r4, r1
 8013d26:	9703      	str	r7, [sp, #12]
 8013d28:	f04f 0a00 	mov.w	sl, #0
 8013d2c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013d30:	1964      	adds	r4, r4, r5
 8013d32:	bf58      	it	pl
 8013d34:	9f03      	ldrpl	r7, [sp, #12]
 8013d36:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8013d3a:	bf48      	it	mi
 8013d3c:	4647      	movmi	r7, r8
 8013d3e:	44bb      	add	fp, r7
 8013d40:	f8ac b004 	strh.w	fp, [ip, #4]
 8013d44:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013d48:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013d4c:	f8ac b006 	strh.w	fp, [ip, #6]
 8013d50:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013d54:	443e      	add	r6, r7
 8013d56:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013d5a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013d5e:	bf58      	it	pl
 8013d60:	1a64      	subpl	r4, r4, r1
 8013d62:	ea5b 0707 	orrs.w	r7, fp, r7
 8013d66:	444b      	add	r3, r9
 8013d68:	d011      	beq.n	8013d8e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013d6a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8013d6e:	f1bb 0f00 	cmp.w	fp, #0
 8013d72:	db0c      	blt.n	8013d8e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013d74:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013d76:	45bb      	cmp	fp, r7
 8013d78:	da09      	bge.n	8013d8e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013d7a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013d7e:	45bb      	cmp	fp, r7
 8013d80:	bf3c      	itt	cc
 8013d82:	f10c 0708 	addcc.w	r7, ip, #8
 8013d86:	6107      	strcc	r7, [r0, #16]
 8013d88:	f10b 0701 	add.w	r7, fp, #1
 8013d8c:	6087      	str	r7, [r0, #8]
 8013d8e:	6907      	ldr	r7, [r0, #16]
 8013d90:	459e      	cmp	lr, r3
 8013d92:	803b      	strh	r3, [r7, #0]
 8013d94:	807a      	strh	r2, [r7, #2]
 8013d96:	f8a7 a004 	strh.w	sl, [r7, #4]
 8013d9a:	f8a7 a006 	strh.w	sl, [r7, #6]
 8013d9e:	d1c5      	bne.n	8013d2c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8013da0:	9b04      	ldr	r3, [sp, #16]
 8013da2:	1b9e      	subs	r6, r3, r6
 8013da4:	6903      	ldr	r3, [r0, #16]
 8013da6:	889a      	ldrh	r2, [r3, #4]
 8013da8:	4432      	add	r2, r6
 8013daa:	809a      	strh	r2, [r3, #4]
 8013dac:	9a02      	ldr	r2, [sp, #8]
 8013dae:	f102 0c20 	add.w	ip, r2, #32
 8013db2:	9a01      	ldr	r2, [sp, #4]
 8013db4:	ebac 0c02 	sub.w	ip, ip, r2
 8013db8:	88da      	ldrh	r2, [r3, #6]
 8013dba:	fb06 260c 	mla	r6, r6, ip, r2
 8013dbe:	80de      	strh	r6, [r3, #6]
 8013dc0:	f7ff bba9 	b.w	8013516 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08013dc4 <_ZN8touchgfx7Outline6lineToEii>:
 8013dc4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013dc6:	079b      	lsls	r3, r3, #30
 8013dc8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013dca:	460e      	mov	r6, r1
 8013dcc:	4615      	mov	r5, r2
 8013dce:	d511      	bpl.n	8013df4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013dd0:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8013dd4:	ea86 0701 	eor.w	r7, r6, r1
 8013dd8:	ea85 0302 	eor.w	r3, r5, r2
 8013ddc:	433b      	orrs	r3, r7
 8013dde:	d009      	beq.n	8013df4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013de0:	4633      	mov	r3, r6
 8013de2:	9500      	str	r5, [sp, #0]
 8013de4:	f7ff fb3e 	bl	8013464 <_ZN8touchgfx7Outline10renderLineEiiii>
 8013de8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013dea:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8013dee:	f043 0301 	orr.w	r3, r3, #1
 8013df2:	6243      	str	r3, [r0, #36]	; 0x24
 8013df4:	b003      	add	sp, #12
 8013df6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013df8 <_ZN8touchgfx7Outline6moveToEii>:
 8013df8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013dfa:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013dfc:	4615      	mov	r5, r2
 8013dfe:	079a      	lsls	r2, r3, #30
 8013e00:	4604      	mov	r4, r0
 8013e02:	460e      	mov	r6, r1
 8013e04:	d401      	bmi.n	8013e0a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8013e06:	f7ff faf9 	bl	80133fc <_ZN8touchgfx7Outline5resetEv>
 8013e0a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013e0c:	07db      	lsls	r3, r3, #31
 8013e0e:	d504      	bpl.n	8013e1a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8013e10:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8013e14:	4620      	mov	r0, r4
 8013e16:	f7ff ffd5 	bl	8013dc4 <_ZN8touchgfx7Outline6lineToEii>
 8013e1a:	6923      	ldr	r3, [r4, #16]
 8013e1c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013e20:	1170      	asrs	r0, r6, #5
 8013e22:	4290      	cmp	r0, r2
 8013e24:	ea4f 1165 	mov.w	r1, r5, asr #5
 8013e28:	d103      	bne.n	8013e32 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8013e2a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8013e2e:	4291      	cmp	r1, r2
 8013e30:	d01a      	beq.n	8013e68 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8013e32:	88df      	ldrh	r7, [r3, #6]
 8013e34:	889a      	ldrh	r2, [r3, #4]
 8013e36:	433a      	orrs	r2, r7
 8013e38:	d010      	beq.n	8013e5c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013e3a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8013e3e:	2a00      	cmp	r2, #0
 8013e40:	db0c      	blt.n	8013e5c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013e42:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8013e44:	42ba      	cmp	r2, r7
 8013e46:	da09      	bge.n	8013e5c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013e48:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8013e4c:	42ba      	cmp	r2, r7
 8013e4e:	bf38      	it	cc
 8013e50:	3308      	addcc	r3, #8
 8013e52:	f102 0201 	add.w	r2, r2, #1
 8013e56:	bf38      	it	cc
 8013e58:	6123      	strcc	r3, [r4, #16]
 8013e5a:	60a2      	str	r2, [r4, #8]
 8013e5c:	6923      	ldr	r3, [r4, #16]
 8013e5e:	2200      	movs	r2, #0
 8013e60:	8018      	strh	r0, [r3, #0]
 8013e62:	8059      	strh	r1, [r3, #2]
 8013e64:	809a      	strh	r2, [r3, #4]
 8013e66:	80da      	strh	r2, [r3, #6]
 8013e68:	6166      	str	r6, [r4, #20]
 8013e6a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8013e6e:	6225      	str	r5, [r4, #32]
 8013e70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08013e72 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8013e72:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013e76:	b0d0      	sub	sp, #320	; 0x140
 8013e78:	466c      	mov	r4, sp
 8013e7a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8013e7e:	4627      	mov	r7, r4
 8013e80:	1a0d      	subs	r5, r1, r0
 8013e82:	2d48      	cmp	r5, #72	; 0x48
 8013e84:	f100 0308 	add.w	r3, r0, #8
 8013e88:	f340 80d5 	ble.w	8014036 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8013e8c:	112d      	asrs	r5, r5, #4
 8013e8e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8013e92:	f9b0 9000 	ldrsh.w	r9, [r0]
 8013e96:	6816      	ldr	r6, [r2, #0]
 8013e98:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8013e9c:	6006      	str	r6, [r0, #0]
 8013e9e:	6856      	ldr	r6, [r2, #4]
 8013ea0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8013ea4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013ea8:	6046      	str	r6, [r0, #4]
 8013eaa:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8013eae:	f8a2 8002 	strh.w	r8, [r2, #2]
 8013eb2:	f8a2 e004 	strh.w	lr, [r2, #4]
 8013eb6:	f8a2 c006 	strh.w	ip, [r2, #6]
 8013eba:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8013ebe:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8013ec2:	4565      	cmp	r5, ip
 8013ec4:	f1a1 0208 	sub.w	r2, r1, #8
 8013ec8:	db06      	blt.n	8013ed8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8013eca:	d119      	bne.n	8013f00 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8013ecc:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8013ed0:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8013ed4:	42ae      	cmp	r6, r5
 8013ed6:	dd13      	ble.n	8013f00 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8013ed8:	460e      	mov	r6, r1
 8013eda:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8013ede:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8013ee2:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8013ee6:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8013eea:	601d      	str	r5, [r3, #0]
 8013eec:	6875      	ldr	r5, [r6, #4]
 8013eee:	605d      	str	r5, [r3, #4]
 8013ef0:	f821 9c08 	strh.w	r9, [r1, #-8]
 8013ef4:	f821 cc06 	strh.w	ip, [r1, #-6]
 8013ef8:	f821 8c04 	strh.w	r8, [r1, #-4]
 8013efc:	f821 ec02 	strh.w	lr, [r1, #-2]
 8013f00:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8013f04:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8013f08:	42ae      	cmp	r6, r5
 8013f0a:	db06      	blt.n	8013f1a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8013f0c:	d116      	bne.n	8013f3c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8013f0e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8013f12:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8013f16:	45ac      	cmp	ip, r5
 8013f18:	da10      	bge.n	8013f3c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8013f1a:	681d      	ldr	r5, [r3, #0]
 8013f1c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8013f20:	6005      	str	r5, [r0, #0]
 8013f22:	685d      	ldr	r5, [r3, #4]
 8013f24:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013f28:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8013f2c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8013f30:	6045      	str	r5, [r0, #4]
 8013f32:	8146      	strh	r6, [r0, #10]
 8013f34:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8013f38:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8013f3c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8013f40:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8013f44:	4565      	cmp	r5, ip
 8013f46:	db06      	blt.n	8013f56 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8013f48:	d119      	bne.n	8013f7e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013f4a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8013f4e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013f52:	42ae      	cmp	r6, r5
 8013f54:	da13      	bge.n	8013f7e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013f56:	460e      	mov	r6, r1
 8013f58:	f9b0 9000 	ldrsh.w	r9, [r0]
 8013f5c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8013f60:	6005      	str	r5, [r0, #0]
 8013f62:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8013f66:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8013f6a:	6875      	ldr	r5, [r6, #4]
 8013f6c:	6045      	str	r5, [r0, #4]
 8013f6e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8013f72:	f821 cc06 	strh.w	ip, [r1, #-6]
 8013f76:	f821 8c04 	strh.w	r8, [r1, #-4]
 8013f7a:	f821 ec02 	strh.w	lr, [r1, #-2]
 8013f7e:	3308      	adds	r3, #8
 8013f80:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8013f84:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8013f88:	45e6      	cmp	lr, ip
 8013f8a:	dbf8      	blt.n	8013f7e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013f8c:	d105      	bne.n	8013f9a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8013f8e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8013f92:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013f96:	42ae      	cmp	r6, r5
 8013f98:	dbf1      	blt.n	8013f7e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013f9a:	4615      	mov	r5, r2
 8013f9c:	3a08      	subs	r2, #8
 8013f9e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8013fa2:	45b4      	cmp	ip, r6
 8013fa4:	dbf9      	blt.n	8013f9a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8013fa6:	d105      	bne.n	8013fb4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8013fa8:	f9b0 8000 	ldrsh.w	r8, [r0]
 8013fac:	f9b2 6000 	ldrsh.w	r6, [r2]
 8013fb0:	45b0      	cmp	r8, r6
 8013fb2:	dbf2      	blt.n	8013f9a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8013fb4:	4293      	cmp	r3, r2
 8013fb6:	f1a5 0608 	sub.w	r6, r5, #8
 8013fba:	d816      	bhi.n	8013fea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8013fbc:	f8d6 c000 	ldr.w	ip, [r6]
 8013fc0:	f9b3 a000 	ldrsh.w	sl, [r3]
 8013fc4:	f8c3 c000 	str.w	ip, [r3]
 8013fc8:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8013fcc:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8013fd0:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8013fd4:	f8c3 c004 	str.w	ip, [r3, #4]
 8013fd8:	f825 ac08 	strh.w	sl, [r5, #-8]
 8013fdc:	f825 ec06 	strh.w	lr, [r5, #-6]
 8013fe0:	f825 9c04 	strh.w	r9, [r5, #-4]
 8013fe4:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013fe8:	e7c9      	b.n	8013f7e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013fea:	f8d6 e000 	ldr.w	lr, [r6]
 8013fee:	f9b0 a000 	ldrsh.w	sl, [r0]
 8013ff2:	f8c0 e000 	str.w	lr, [r0]
 8013ff6:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8013ffa:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8013ffe:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8014002:	f8c0 e004 	str.w	lr, [r0, #4]
 8014006:	f825 ac08 	strh.w	sl, [r5, #-8]
 801400a:	f825 cc06 	strh.w	ip, [r5, #-6]
 801400e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014012:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014016:	1acd      	subs	r5, r1, r3
 8014018:	1a16      	subs	r6, r2, r0
 801401a:	10ed      	asrs	r5, r5, #3
 801401c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8014020:	bfb5      	itete	lt
 8014022:	e9c4 0200 	strdlt	r0, r2, [r4]
 8014026:	e9c4 3100 	strdge	r3, r1, [r4]
 801402a:	460a      	movlt	r2, r1
 801402c:	4603      	movge	r3, r0
 801402e:	3408      	adds	r4, #8
 8014030:	4618      	mov	r0, r3
 8014032:	4611      	mov	r1, r2
 8014034:	e724      	b.n	8013e80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014036:	4299      	cmp	r1, r3
 8014038:	d928      	bls.n	801408c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801403a:	f1a3 0210 	sub.w	r2, r3, #16
 801403e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8014042:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8014046:	45ac      	cmp	ip, r5
 8014048:	db06      	blt.n	8014058 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 801404a:	d11d      	bne.n	8014088 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 801404c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8014050:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8014054:	42ae      	cmp	r6, r5
 8014056:	da17      	bge.n	8014088 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8014058:	4615      	mov	r5, r2
 801405a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 801405e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8014062:	6116      	str	r6, [r2, #16]
 8014064:	686e      	ldr	r6, [r5, #4]
 8014066:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801406a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 801406e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8014072:	42a8      	cmp	r0, r5
 8014074:	6156      	str	r6, [r2, #20]
 8014076:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801407a:	f8a2 800c 	strh.w	r8, [r2, #12]
 801407e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8014082:	f1a2 0208 	sub.w	r2, r2, #8
 8014086:	d1da      	bne.n	801403e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8014088:	3308      	adds	r3, #8
 801408a:	e7d4      	b.n	8014036 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801408c:	42bc      	cmp	r4, r7
 801408e:	d903      	bls.n	8014098 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8014090:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8014094:	3c08      	subs	r4, #8
 8014096:	e6f3      	b.n	8013e80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014098:	b050      	add	sp, #320	; 0x140
 801409a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801409e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801409e:	b510      	push	{r4, lr}
 80140a0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80140a2:	07da      	lsls	r2, r3, #31
 80140a4:	4604      	mov	r4, r0
 80140a6:	d507      	bpl.n	80140b8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 80140a8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 80140ac:	f7ff fe8a 	bl	8013dc4 <_ZN8touchgfx7Outline6lineToEii>
 80140b0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80140b2:	f023 0301 	bic.w	r3, r3, #1
 80140b6:	6243      	str	r3, [r0, #36]	; 0x24
 80140b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80140ba:	079b      	lsls	r3, r3, #30
 80140bc:	d521      	bpl.n	8014102 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 80140be:	6923      	ldr	r3, [r4, #16]
 80140c0:	88d9      	ldrh	r1, [r3, #6]
 80140c2:	889a      	ldrh	r2, [r3, #4]
 80140c4:	430a      	orrs	r2, r1
 80140c6:	d010      	beq.n	80140ea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80140c8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80140cc:	2a00      	cmp	r2, #0
 80140ce:	db0c      	blt.n	80140ea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80140d0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80140d2:	428a      	cmp	r2, r1
 80140d4:	da09      	bge.n	80140ea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80140d6:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 80140da:	4291      	cmp	r1, r2
 80140dc:	bf88      	it	hi
 80140de:	3308      	addhi	r3, #8
 80140e0:	f102 0201 	add.w	r2, r2, #1
 80140e4:	bf88      	it	hi
 80140e6:	6123      	strhi	r3, [r4, #16]
 80140e8:	60a2      	str	r2, [r4, #8]
 80140ea:	68a1      	ldr	r1, [r4, #8]
 80140ec:	b129      	cbz	r1, 80140fa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80140ee:	6863      	ldr	r3, [r4, #4]
 80140f0:	4299      	cmp	r1, r3
 80140f2:	d802      	bhi.n	80140fa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80140f4:	68e0      	ldr	r0, [r4, #12]
 80140f6:	f7ff febc 	bl	8013e72 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 80140fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80140fc:	f023 0302 	bic.w	r3, r3, #2
 8014100:	6263      	str	r3, [r4, #36]	; 0x24
 8014102:	68e0      	ldr	r0, [r4, #12]
 8014104:	bd10      	pop	{r4, pc}
	...

08014108 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8014108:	4b02      	ldr	r3, [pc, #8]	; (8014114 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801410a:	6018      	str	r0, [r3, #0]
 801410c:	4b02      	ldr	r3, [pc, #8]	; (8014118 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801410e:	6019      	str	r1, [r3, #0]
 8014110:	4770      	bx	lr
 8014112:	bf00      	nop
 8014114:	20012dbc 	.word	0x20012dbc
 8014118:	20012dc0 	.word	0x20012dc0

0801411c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801411c:	4a02      	ldr	r2, [pc, #8]	; (8014128 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801411e:	2300      	movs	r3, #0
 8014120:	6013      	str	r3, [r2, #0]
 8014122:	4a02      	ldr	r2, [pc, #8]	; (801412c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8014124:	6013      	str	r3, [r2, #0]
 8014126:	4770      	bx	lr
 8014128:	20012dbc 	.word	0x20012dbc
 801412c:	20012dc0 	.word	0x20012dc0

08014130 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8014130:	4b01      	ldr	r3, [pc, #4]	; (8014138 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8014132:	6818      	ldr	r0, [r3, #0]
 8014134:	4770      	bx	lr
 8014136:	bf00      	nop
 8014138:	20012dbc 	.word	0x20012dbc

0801413c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 801413c:	4b01      	ldr	r3, [pc, #4]	; (8014144 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 801413e:	6818      	ldr	r0, [r3, #0]
 8014140:	4770      	bx	lr
 8014142:	bf00      	nop
 8014144:	20012dc0 	.word	0x20012dc0

08014148 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8014148:	b510      	push	{r4, lr}
 801414a:	6803      	ldr	r3, [r0, #0]
 801414c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801414e:	460c      	mov	r4, r1
 8014150:	4798      	blx	r3
 8014152:	1b03      	subs	r3, r0, r4
 8014154:	4258      	negs	r0, r3
 8014156:	4158      	adcs	r0, r3
 8014158:	bd10      	pop	{r4, pc}
	...

0801415c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 801415c:	4b01      	ldr	r3, [pc, #4]	; (8014164 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801415e:	6019      	str	r1, [r3, #0]
 8014160:	4770      	bx	lr
 8014162:	bf00      	nop
 8014164:	20012dc4 	.word	0x20012dc4

08014168 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801416c:	4696      	mov	lr, r2
 801416e:	4605      	mov	r5, r0
 8014170:	4614      	mov	r4, r2
 8014172:	460e      	mov	r6, r1
 8014174:	461f      	mov	r7, r3
 8014176:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801417a:	b097      	sub	sp, #92	; 0x5c
 801417c:	f10d 0c1c 	add.w	ip, sp, #28
 8014180:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014184:	f8de 3000 	ldr.w	r3, [lr]
 8014188:	f8cc 3000 	str.w	r3, [ip]
 801418c:	f104 0e14 	add.w	lr, r4, #20
 8014190:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014194:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014198:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801419c:	f8de 3000 	ldr.w	r3, [lr]
 80141a0:	f8cc 3000 	str.w	r3, [ip]
 80141a4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80141a8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80141ac:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80141b0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80141b4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 80141b8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 80141bc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 80141c0:	f8de 3000 	ldr.w	r3, [lr]
 80141c4:	f8cc 3000 	str.w	r3, [ip]
 80141c8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80141ca:	682b      	ldr	r3, [r5, #0]
 80141cc:	9201      	str	r2, [sp, #4]
 80141ce:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80141d2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80141d4:	9200      	str	r2, [sp, #0]
 80141d6:	f8cd 8008 	str.w	r8, [sp, #8]
 80141da:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 80141de:	aa07      	add	r2, sp, #28
 80141e0:	463b      	mov	r3, r7
 80141e2:	4631      	mov	r1, r6
 80141e4:	4628      	mov	r0, r5
 80141e6:	47d8      	blx	fp
 80141e8:	46a6      	mov	lr, r4
 80141ea:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80141ee:	f10d 0c1c 	add.w	ip, sp, #28
 80141f2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80141f6:	f8de 3000 	ldr.w	r3, [lr]
 80141fa:	f8cc 3000 	str.w	r3, [ip]
 80141fe:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014202:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014206:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801420a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801420e:	343c      	adds	r4, #60	; 0x3c
 8014210:	f8de 3000 	ldr.w	r3, [lr]
 8014214:	f8cc 3000 	str.w	r3, [ip]
 8014218:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801421a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801421e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014222:	6823      	ldr	r3, [r4, #0]
 8014224:	f8cc 3000 	str.w	r3, [ip]
 8014228:	682b      	ldr	r3, [r5, #0]
 801422a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801422e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014230:	9201      	str	r2, [sp, #4]
 8014232:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014234:	9200      	str	r2, [sp, #0]
 8014236:	f8cd 8008 	str.w	r8, [sp, #8]
 801423a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 801423c:	aa07      	add	r2, sp, #28
 801423e:	463b      	mov	r3, r7
 8014240:	4631      	mov	r1, r6
 8014242:	4628      	mov	r0, r5
 8014244:	47a0      	blx	r4
 8014246:	b017      	add	sp, #92	; 0x5c
 8014248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801424c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 801424c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014250:	b08d      	sub	sp, #52	; 0x34
 8014252:	4688      	mov	r8, r1
 8014254:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014256:	f8d3 c000 	ldr.w	ip, [r3]
 801425a:	680f      	ldr	r7, [r1, #0]
 801425c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8014260:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8014264:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8014268:	edd3 6a07 	vldr	s13, [r3, #28]
 801426c:	9918      	ldr	r1, [sp, #96]	; 0x60
 801426e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8014272:	f9b1 9000 	ldrsh.w	r9, [r1]
 8014276:	f9ba 1000 	ldrsh.w	r1, [sl]
 801427a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801427e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8014282:	eba7 070c 	sub.w	r7, r7, ip
 8014286:	42bc      	cmp	r4, r7
 8014288:	bfa8      	it	ge
 801428a:	463c      	movge	r4, r7
 801428c:	ee07 4a90 	vmov	s15, r4
 8014290:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8014294:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8014298:	ee25 4a04 	vmul.f32	s8, s10, s8
 801429c:	ee65 4a24 	vmul.f32	s9, s10, s9
 80142a0:	ee25 5a27 	vmul.f32	s10, s10, s15
 80142a4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80142a8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80142ac:	eb09 0e0c 	add.w	lr, r9, ip
 80142b0:	4571      	cmp	r1, lr
 80142b2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 80142b6:	ee32 1a05 	vadd.f32	s2, s4, s10
 80142ba:	ee36 0a84 	vadd.f32	s0, s13, s8
 80142be:	ee61 1a87 	vmul.f32	s3, s3, s14
 80142c2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80142c6:	f340 808d 	ble.w	80143e4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 80142ca:	eba1 060e 	sub.w	r6, r1, lr
 80142ce:	fb96 f5f4 	sdiv	r5, r6, r4
 80142d2:	ee07 5a10 	vmov	s14, r5
 80142d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80142da:	2d00      	cmp	r5, #0
 80142dc:	fb04 6615 	mls	r6, r4, r5, r6
 80142e0:	eea7 0a04 	vfma.f32	s0, s14, s8
 80142e4:	eee7 0a24 	vfma.f32	s1, s14, s9
 80142e8:	eea7 1a05 	vfma.f32	s2, s14, s10
 80142ec:	dd13      	ble.n	8014316 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 80142ee:	ee70 6a44 	vsub.f32	s13, s0, s8
 80142f2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 80142f6:	eef5 6a40 	vcmp.f32	s13, #0.0
 80142fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80142fe:	bf18      	it	ne
 8014300:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8014304:	ee31 2a45 	vsub.f32	s4, s2, s10
 8014308:	bf08      	it	eq
 801430a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801430e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014312:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014316:	fb05 f204 	mul.w	r2, r5, r4
 801431a:	1abf      	subs	r7, r7, r2
 801431c:	4494      	add	ip, r2
 801431e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8014322:	4411      	add	r1, r2
 8014324:	eb09 020c 	add.w	r2, r9, ip
 8014328:	443a      	add	r2, r7
 801432a:	b209      	sxth	r1, r1
 801432c:	428a      	cmp	r2, r1
 801432e:	bfc4      	itt	gt
 8014330:	eba1 0209 	subgt.w	r2, r1, r9
 8014334:	eba2 070c 	subgt.w	r7, r2, ip
 8014338:	2f00      	cmp	r7, #0
 801433a:	dd50      	ble.n	80143de <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 801433c:	fb97 f1f4 	sdiv	r1, r7, r4
 8014340:	fb04 7211 	mls	r2, r4, r1, r7
 8014344:	b90a      	cbnz	r2, 801434a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8014346:	3901      	subs	r1, #1
 8014348:	4622      	mov	r2, r4
 801434a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 801434e:	6840      	ldr	r0, [r0, #4]
 8014350:	900b      	str	r0, [sp, #44]	; 0x2c
 8014352:	f8d0 a000 	ldr.w	sl, [r0]
 8014356:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8014358:	9008      	str	r0, [sp, #32]
 801435a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 801435e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8014360:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8014364:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8014368:	695b      	ldr	r3, [r3, #20]
 801436a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801436c:	445b      	add	r3, fp
 801436e:	eef0 6a42 	vmov.f32	s13, s4
 8014372:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8014376:	ee21 3a23 	vmul.f32	s6, s2, s7
 801437a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801437e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014382:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014386:	9307      	str	r3, [sp, #28]
 8014388:	ee17 7a90 	vmov	r7, s15
 801438c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8014390:	eeb0 7a61 	vmov.f32	s14, s3
 8014394:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8014398:	ee16 3a90 	vmov	r3, s13
 801439c:	fb97 f7f4 	sdiv	r7, r7, r4
 80143a0:	ee17 ca90 	vmov	ip, s15
 80143a4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80143a8:	fb9c fcf4 	sdiv	ip, ip, r4
 80143ac:	fb0c 3306 	mla	r3, ip, r6, r3
 80143b0:	9302      	str	r3, [sp, #8]
 80143b2:	ee17 3a10 	vmov	r3, s14
 80143b6:	44b6      	add	lr, r6
 80143b8:	fb04 e505 	mla	r5, r4, r5, lr
 80143bc:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 80143c0:	fb07 3706 	mla	r7, r7, r6, r3
 80143c4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 80143c8:	e9cd 4700 	strd	r4, r7, [sp]
 80143cc:	2900      	cmp	r1, #0
 80143ce:	bfcc      	ite	gt
 80143d0:	46a1      	movgt	r9, r4
 80143d2:	4691      	movle	r9, r2
 80143d4:	eba9 0306 	sub.w	r3, r9, r6
 80143d8:	f8da 4008 	ldr.w	r4, [sl, #8]
 80143dc:	47a0      	blx	r4
 80143de:	b00d      	add	sp, #52	; 0x34
 80143e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80143e4:	2500      	movs	r5, #0
 80143e6:	462e      	mov	r6, r5
 80143e8:	e799      	b.n	801431e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

080143ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80143ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80143f0:	b0db      	sub	sp, #364	; 0x16c
 80143f2:	461d      	mov	r5, r3
 80143f4:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 80143f8:	930a      	str	r3, [sp, #40]	; 0x28
 80143fa:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 80143fe:	930b      	str	r3, [sp, #44]	; 0x2c
 8014400:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8014404:	9310      	str	r3, [sp, #64]	; 0x40
 8014406:	6803      	ldr	r3, [r0, #0]
 8014408:	910f      	str	r1, [sp, #60]	; 0x3c
 801440a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801440c:	9009      	str	r0, [sp, #36]	; 0x24
 801440e:	4614      	mov	r4, r2
 8014410:	4629      	mov	r1, r5
 8014412:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8014416:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801441a:	47b8      	blx	r7
 801441c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801441e:	6058      	str	r0, [r3, #4]
 8014420:	2800      	cmp	r0, #0
 8014422:	f000 83a1 	beq.w	8014b68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014426:	682b      	ldr	r3, [r5, #0]
 8014428:	9314      	str	r3, [sp, #80]	; 0x50
 801442a:	686b      	ldr	r3, [r5, #4]
 801442c:	9315      	str	r3, [sp, #84]	; 0x54
 801442e:	4bc4      	ldr	r3, [pc, #784]	; (8014740 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8014430:	ed94 7a02 	vldr	s14, [r4, #8]
 8014434:	7819      	ldrb	r1, [r3, #0]
 8014436:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801443a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 801443e:	2900      	cmp	r1, #0
 8014440:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014444:	bf16      	itet	ne
 8014446:	4619      	movne	r1, r3
 8014448:	4611      	moveq	r1, r2
 801444a:	4613      	movne	r3, r2
 801444c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014450:	9116      	str	r1, [sp, #88]	; 0x58
 8014452:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8014456:	f240 8387 	bls.w	8014b68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801445a:	ed94 7a07 	vldr	s14, [r4, #28]
 801445e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014462:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014466:	f240 837f 	bls.w	8014b68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801446a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801446e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8014472:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014476:	f240 8377 	bls.w	8014b68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801447a:	6822      	ldr	r2, [r4, #0]
 801447c:	4bb1      	ldr	r3, [pc, #708]	; (8014744 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801447e:	429a      	cmp	r2, r3
 8014480:	f2c0 8372 	blt.w	8014b68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014484:	49b0      	ldr	r1, [pc, #704]	; (8014748 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8014486:	6963      	ldr	r3, [r4, #20]
 8014488:	428a      	cmp	r2, r1
 801448a:	f300 836d 	bgt.w	8014b68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801448e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8014492:	48ae      	ldr	r0, [pc, #696]	; (801474c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8014494:	33ff      	adds	r3, #255	; 0xff
 8014496:	4283      	cmp	r3, r0
 8014498:	f200 8366 	bhi.w	8014b68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801449c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801449e:	4dac      	ldr	r5, [pc, #688]	; (8014750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 80144a0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80144a4:	33ff      	adds	r3, #255	; 0xff
 80144a6:	42ab      	cmp	r3, r5
 80144a8:	f200 835e 	bhi.w	8014b68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80144ac:	6862      	ldr	r2, [r4, #4]
 80144ae:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 80144b2:	33ff      	adds	r3, #255	; 0xff
 80144b4:	4283      	cmp	r3, r0
 80144b6:	f200 8357 	bhi.w	8014b68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80144ba:	69a1      	ldr	r1, [r4, #24]
 80144bc:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80144c0:	33ff      	adds	r3, #255	; 0xff
 80144c2:	4283      	cmp	r3, r0
 80144c4:	f200 8350 	bhi.w	8014b68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80144c8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80144ca:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 80144ce:	30ff      	adds	r0, #255	; 0xff
 80144d0:	42a8      	cmp	r0, r5
 80144d2:	f200 8349 	bhi.w	8014b68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80144d6:	428a      	cmp	r2, r1
 80144d8:	f280 8110 	bge.w	80146fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 80144dc:	429a      	cmp	r2, r3
 80144de:	f300 8119 	bgt.w	8014714 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 80144e2:	4299      	cmp	r1, r3
 80144e4:	f280 811d 	bge.w	8014722 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 80144e8:	2502      	movs	r5, #2
 80144ea:	2701      	movs	r7, #1
 80144ec:	46a9      	mov	r9, r5
 80144ee:	46b8      	mov	r8, r7
 80144f0:	f04f 0a00 	mov.w	sl, #0
 80144f4:	4621      	mov	r1, r4
 80144f6:	a849      	add	r0, sp, #292	; 0x124
 80144f8:	f003 feec 	bl	80182d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 80144fc:	4622      	mov	r2, r4
 80144fe:	4653      	mov	r3, sl
 8014500:	a949      	add	r1, sp, #292	; 0x124
 8014502:	f8cd 9000 	str.w	r9, [sp]
 8014506:	a819      	add	r0, sp, #100	; 0x64
 8014508:	f004 f814 	bl	8018534 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801450c:	4622      	mov	r2, r4
 801450e:	4653      	mov	r3, sl
 8014510:	a949      	add	r1, sp, #292	; 0x124
 8014512:	f8cd 8000 	str.w	r8, [sp]
 8014516:	a829      	add	r0, sp, #164	; 0xa4
 8014518:	f004 f80c 	bl	8018534 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801451c:	4643      	mov	r3, r8
 801451e:	4622      	mov	r2, r4
 8014520:	a949      	add	r1, sp, #292	; 0x124
 8014522:	f8cd 9000 	str.w	r9, [sp]
 8014526:	a839      	add	r0, sp, #228	; 0xe4
 8014528:	f004 f804 	bl	8018534 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801452c:	42af      	cmp	r7, r5
 801452e:	bfb5      	itete	lt
 8014530:	2300      	movlt	r3, #0
 8014532:	2301      	movge	r3, #1
 8014534:	930e      	strlt	r3, [sp, #56]	; 0x38
 8014536:	930e      	strge	r3, [sp, #56]	; 0x38
 8014538:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801453a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801453e:	af12      	add	r7, sp, #72	; 0x48
 8014540:	bfb9      	ittee	lt
 8014542:	ad29      	addlt	r5, sp, #164	; 0xa4
 8014544:	ac19      	addlt	r4, sp, #100	; 0x64
 8014546:	ad19      	addge	r5, sp, #100	; 0x64
 8014548:	ac29      	addge	r4, sp, #164	; 0xa4
 801454a:	e887 0003 	stmia.w	r7, {r0, r1}
 801454e:	b928      	cbnz	r0, 801455c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8014550:	4b80      	ldr	r3, [pc, #512]	; (8014754 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8014552:	6818      	ldr	r0, [r3, #0]
 8014554:	6803      	ldr	r3, [r0, #0]
 8014556:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014558:	4798      	blx	r3
 801455a:	6038      	str	r0, [r7, #0]
 801455c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801455e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8014562:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014566:	930c      	str	r3, [sp, #48]	; 0x30
 8014568:	990c      	ldr	r1, [sp, #48]	; 0x30
 801456a:	6963      	ldr	r3, [r4, #20]
 801456c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801456e:	440b      	add	r3, r1
 8014570:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014574:	4408      	add	r0, r1
 8014576:	b200      	sxth	r0, r0
 8014578:	4283      	cmp	r3, r0
 801457a:	900d      	str	r0, [sp, #52]	; 0x34
 801457c:	f280 80dd 	bge.w	801473a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8014580:	428b      	cmp	r3, r1
 8014582:	da08      	bge.n	8014596 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014584:	2a00      	cmp	r2, #0
 8014586:	dd06      	ble.n	8014596 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8014588:	1acb      	subs	r3, r1, r3
 801458a:	429a      	cmp	r2, r3
 801458c:	f2c0 80e4 	blt.w	8014758 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8014590:	2b00      	cmp	r3, #0
 8014592:	f300 80e2 	bgt.w	801475a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8014596:	6967      	ldr	r7, [r4, #20]
 8014598:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801459a:	443b      	add	r3, r7
 801459c:	461f      	mov	r7, r3
 801459e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80145a0:	1bdf      	subs	r7, r3, r7
 80145a2:	4297      	cmp	r7, r2
 80145a4:	bfa8      	it	ge
 80145a6:	4617      	movge	r7, r2
 80145a8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80145ac:	2f00      	cmp	r7, #0
 80145ae:	f340 8166 	ble.w	801487e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80145b2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80145b4:	6829      	ldr	r1, [r5, #0]
 80145b6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80145ba:	f9bb 3000 	ldrsh.w	r3, [fp]
 80145be:	6820      	ldr	r0, [r4, #0]
 80145c0:	4411      	add	r1, r2
 80145c2:	4299      	cmp	r1, r3
 80145c4:	dd1a      	ble.n	80145fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80145c6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80145ca:	440b      	add	r3, r1
 80145cc:	4402      	add	r2, r0
 80145ce:	b21b      	sxth	r3, r3
 80145d0:	429a      	cmp	r2, r3
 80145d2:	dc13      	bgt.n	80145fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80145d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80145d6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80145d8:	681b      	ldr	r3, [r3, #0]
 80145da:	9206      	str	r2, [sp, #24]
 80145dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80145de:	9205      	str	r2, [sp, #20]
 80145e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80145e2:	9500      	str	r5, [sp, #0]
 80145e4:	e9cd b203 	strd	fp, r2, [sp, #12]
 80145e8:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80145ea:	9809      	ldr	r0, [sp, #36]	; 0x24
 80145ec:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80145f0:	a912      	add	r1, sp, #72	; 0x48
 80145f2:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80145f6:	aa49      	add	r2, sp, #292	; 0x124
 80145f8:	4623      	mov	r3, r4
 80145fa:	47c8      	blx	r9
 80145fc:	e9d4 2300 	ldrd	r2, r3, [r4]
 8014600:	441a      	add	r2, r3
 8014602:	6963      	ldr	r3, [r4, #20]
 8014604:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014608:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801460c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8014610:	68a1      	ldr	r1, [r4, #8]
 8014612:	ed94 6a08 	vldr	s12, [r4, #32]
 8014616:	6022      	str	r2, [r4, #0]
 8014618:	3301      	adds	r3, #1
 801461a:	6163      	str	r3, [r4, #20]
 801461c:	69a3      	ldr	r3, [r4, #24]
 801461e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014622:	3b01      	subs	r3, #1
 8014624:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8014628:	61a3      	str	r3, [r4, #24]
 801462a:	6923      	ldr	r3, [r4, #16]
 801462c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014630:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014634:	edd4 6a07 	vldr	s13, [r4, #28]
 8014638:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801463c:	440b      	add	r3, r1
 801463e:	68e1      	ldr	r1, [r4, #12]
 8014640:	6123      	str	r3, [r4, #16]
 8014642:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014646:	428b      	cmp	r3, r1
 8014648:	edc4 6a07 	vstr	s13, [r4, #28]
 801464c:	db15      	blt.n	801467a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 801464e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8014652:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014656:	3201      	adds	r2, #1
 8014658:	edc4 6a07 	vstr	s13, [r4, #28]
 801465c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8014660:	6022      	str	r2, [r4, #0]
 8014662:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014666:	1a5b      	subs	r3, r3, r1
 8014668:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801466c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8014670:	6123      	str	r3, [r4, #16]
 8014672:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014676:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801467a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801467e:	441a      	add	r2, r3
 8014680:	696b      	ldr	r3, [r5, #20]
 8014682:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014686:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801468a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801468e:	68a9      	ldr	r1, [r5, #8]
 8014690:	ed95 6a08 	vldr	s12, [r5, #32]
 8014694:	602a      	str	r2, [r5, #0]
 8014696:	3301      	adds	r3, #1
 8014698:	616b      	str	r3, [r5, #20]
 801469a:	69ab      	ldr	r3, [r5, #24]
 801469c:	ee37 7a27 	vadd.f32	s14, s14, s15
 80146a0:	3b01      	subs	r3, #1
 80146a2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80146a6:	61ab      	str	r3, [r5, #24]
 80146a8:	692b      	ldr	r3, [r5, #16]
 80146aa:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80146ae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80146b2:	edd5 6a07 	vldr	s13, [r5, #28]
 80146b6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80146ba:	440b      	add	r3, r1
 80146bc:	68e9      	ldr	r1, [r5, #12]
 80146be:	612b      	str	r3, [r5, #16]
 80146c0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80146c4:	428b      	cmp	r3, r1
 80146c6:	edc5 6a07 	vstr	s13, [r5, #28]
 80146ca:	db15      	blt.n	80146f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80146cc:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80146d0:	ee76 6a26 	vadd.f32	s13, s12, s13
 80146d4:	3201      	adds	r2, #1
 80146d6:	edc5 6a07 	vstr	s13, [r5, #28]
 80146da:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80146de:	602a      	str	r2, [r5, #0]
 80146e0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80146e4:	1a5b      	subs	r3, r3, r1
 80146e6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80146ea:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80146ee:	612b      	str	r3, [r5, #16]
 80146f0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80146f4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80146f8:	3f01      	subs	r7, #1
 80146fa:	e757      	b.n	80145ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 80146fc:	4299      	cmp	r1, r3
 80146fe:	dc13      	bgt.n	8014728 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8014700:	429a      	cmp	r2, r3
 8014702:	da14      	bge.n	801472e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8014704:	2502      	movs	r5, #2
 8014706:	2703      	movs	r7, #3
 8014708:	46a9      	mov	r9, r5
 801470a:	f04f 0800 	mov.w	r8, #0
 801470e:	f04f 0a01 	mov.w	sl, #1
 8014712:	e6ef      	b.n	80144f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014714:	2501      	movs	r5, #1
 8014716:	2700      	movs	r7, #0
 8014718:	46a9      	mov	r9, r5
 801471a:	46b8      	mov	r8, r7
 801471c:	f04f 0a02 	mov.w	sl, #2
 8014720:	e6e8      	b.n	80144f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014722:	2501      	movs	r5, #1
 8014724:	2702      	movs	r7, #2
 8014726:	e6e1      	b.n	80144ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8014728:	2500      	movs	r5, #0
 801472a:	2701      	movs	r7, #1
 801472c:	e7f4      	b.n	8014718 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801472e:	2702      	movs	r7, #2
 8014730:	2503      	movs	r5, #3
 8014732:	f04f 0900 	mov.w	r9, #0
 8014736:	46b8      	mov	r8, r7
 8014738:	e7e9      	b.n	801470e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801473a:	4613      	mov	r3, r2
 801473c:	e728      	b.n	8014590 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801473e:	bf00      	nop
 8014740:	20012dac 	.word	0x20012dac
 8014744:	fffd8f01 	.word	0xfffd8f01
 8014748:	00027100 	.word	0x00027100
 801474c:	0004e1ff 	.word	0x0004e1ff
 8014750:	0004e1fe 	.word	0x0004e1fe
 8014754:	20012db4 	.word	0x20012db4
 8014758:	4613      	mov	r3, r2
 801475a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801475c:	9111      	str	r1, [sp, #68]	; 0x44
 801475e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8014762:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8014766:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8014768:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801476c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8014770:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8014774:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8014778:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801477c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8014780:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8014784:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8014788:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801478c:	469e      	mov	lr, r3
 801478e:	469c      	mov	ip, r3
 8014790:	f04f 0900 	mov.w	r9, #0
 8014794:	f1bc 0f00 	cmp.w	ip, #0
 8014798:	d147      	bne.n	801482a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801479a:	eb03 0c07 	add.w	ip, r3, r7
 801479e:	1ad7      	subs	r7, r2, r3
 80147a0:	f1b9 0f00 	cmp.w	r9, #0
 80147a4:	d009      	beq.n	80147ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80147a6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 80147aa:	9029      	str	r0, [sp, #164]	; 0xa4
 80147ac:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 80147b0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 80147b4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 80147b8:	912d      	str	r1, [sp, #180]	; 0xb4
 80147ba:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80147bc:	9111      	str	r1, [sp, #68]	; 0x44
 80147be:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80147c2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80147c6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80147ca:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80147ce:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80147d2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80147d6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80147da:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80147de:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80147e2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80147e6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80147ea:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80147ee:	f04f 0800 	mov.w	r8, #0
 80147f2:	f1be 0f00 	cmp.w	lr, #0
 80147f6:	d031      	beq.n	801485c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 80147f8:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80147fa:	4431      	add	r1, r6
 80147fc:	4549      	cmp	r1, r9
 80147fe:	4450      	add	r0, sl
 8014800:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014804:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014808:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801480c:	db08      	blt.n	8014820 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801480e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014812:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014816:	ee37 7a06 	vadd.f32	s14, s14, s12
 801481a:	3001      	adds	r0, #1
 801481c:	eba1 0109 	sub.w	r1, r1, r9
 8014820:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014824:	f04f 0801 	mov.w	r8, #1
 8014828:	e7e3      	b.n	80147f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801482a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801482c:	4431      	add	r1, r6
 801482e:	4541      	cmp	r1, r8
 8014830:	4450      	add	r0, sl
 8014832:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014836:	ee77 7a84 	vadd.f32	s15, s15, s8
 801483a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801483e:	db08      	blt.n	8014852 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8014840:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014844:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014848:	ee77 7a86 	vadd.f32	s15, s15, s12
 801484c:	3001      	adds	r0, #1
 801484e:	eba1 0108 	sub.w	r1, r1, r8
 8014852:	f10c 3cff 	add.w	ip, ip, #4294967295
 8014856:	f04f 0901 	mov.w	r9, #1
 801485a:	e79b      	b.n	8014794 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 801485c:	449c      	add	ip, r3
 801485e:	1aff      	subs	r7, r7, r3
 8014860:	f1b8 0f00 	cmp.w	r8, #0
 8014864:	d009      	beq.n	801487a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8014866:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801486a:	9019      	str	r0, [sp, #100]	; 0x64
 801486c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014870:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014874:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014878:	911d      	str	r1, [sp, #116]	; 0x74
 801487a:	1ad2      	subs	r2, r2, r3
 801487c:	e68b      	b.n	8014596 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801487e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014880:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8014882:	2b00      	cmp	r3, #0
 8014884:	f000 80d1 	beq.w	8014a2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8014888:	ad19      	add	r5, sp, #100	; 0x64
 801488a:	ac39      	add	r4, sp, #228	; 0xe4
 801488c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801488e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8014892:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014896:	930c      	str	r3, [sp, #48]	; 0x30
 8014898:	990c      	ldr	r1, [sp, #48]	; 0x30
 801489a:	6963      	ldr	r3, [r4, #20]
 801489c:	440b      	add	r3, r1
 801489e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80148a2:	4408      	add	r0, r1
 80148a4:	b200      	sxth	r0, r0
 80148a6:	4283      	cmp	r3, r0
 80148a8:	900d      	str	r0, [sp, #52]	; 0x34
 80148aa:	f280 80c1 	bge.w	8014a30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80148ae:	428b      	cmp	r3, r1
 80148b0:	da08      	bge.n	80148c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80148b2:	2a00      	cmp	r2, #0
 80148b4:	dd06      	ble.n	80148c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80148b6:	1acb      	subs	r3, r1, r3
 80148b8:	429a      	cmp	r2, r3
 80148ba:	f2c0 80bb 	blt.w	8014a34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80148be:	2b00      	cmp	r3, #0
 80148c0:	f300 80b9 	bgt.w	8014a36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80148c4:	6967      	ldr	r7, [r4, #20]
 80148c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80148c8:	443b      	add	r3, r7
 80148ca:	461f      	mov	r7, r3
 80148cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80148ce:	1bdf      	subs	r7, r3, r7
 80148d0:	4297      	cmp	r7, r2
 80148d2:	bfa8      	it	ge
 80148d4:	4617      	movge	r7, r2
 80148d6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80148da:	2f00      	cmp	r7, #0
 80148dc:	f340 813c 	ble.w	8014b58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 80148e0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80148e2:	6829      	ldr	r1, [r5, #0]
 80148e4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80148e8:	f9bb 3000 	ldrsh.w	r3, [fp]
 80148ec:	6820      	ldr	r0, [r4, #0]
 80148ee:	4411      	add	r1, r2
 80148f0:	4299      	cmp	r1, r3
 80148f2:	dd1a      	ble.n	801492a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80148f4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80148f8:	440b      	add	r3, r1
 80148fa:	4402      	add	r2, r0
 80148fc:	b21b      	sxth	r3, r3
 80148fe:	429a      	cmp	r2, r3
 8014900:	dc13      	bgt.n	801492a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014902:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014904:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014906:	681b      	ldr	r3, [r3, #0]
 8014908:	9206      	str	r2, [sp, #24]
 801490a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801490c:	9205      	str	r2, [sp, #20]
 801490e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014910:	9500      	str	r5, [sp, #0]
 8014912:	e9cd b203 	strd	fp, r2, [sp, #12]
 8014916:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8014918:	9809      	ldr	r0, [sp, #36]	; 0x24
 801491a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801491e:	a912      	add	r1, sp, #72	; 0x48
 8014920:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8014924:	aa49      	add	r2, sp, #292	; 0x124
 8014926:	4623      	mov	r3, r4
 8014928:	47c8      	blx	r9
 801492a:	e9d4 2300 	ldrd	r2, r3, [r4]
 801492e:	441a      	add	r2, r3
 8014930:	6963      	ldr	r3, [r4, #20]
 8014932:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014936:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801493a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801493e:	68a1      	ldr	r1, [r4, #8]
 8014940:	ed94 6a08 	vldr	s12, [r4, #32]
 8014944:	6022      	str	r2, [r4, #0]
 8014946:	3301      	adds	r3, #1
 8014948:	6163      	str	r3, [r4, #20]
 801494a:	69a3      	ldr	r3, [r4, #24]
 801494c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014950:	3b01      	subs	r3, #1
 8014952:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8014956:	61a3      	str	r3, [r4, #24]
 8014958:	6923      	ldr	r3, [r4, #16]
 801495a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801495e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014962:	edd4 6a07 	vldr	s13, [r4, #28]
 8014966:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801496a:	440b      	add	r3, r1
 801496c:	68e1      	ldr	r1, [r4, #12]
 801496e:	6123      	str	r3, [r4, #16]
 8014970:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014974:	428b      	cmp	r3, r1
 8014976:	edc4 6a07 	vstr	s13, [r4, #28]
 801497a:	db15      	blt.n	80149a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 801497c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8014980:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014984:	3201      	adds	r2, #1
 8014986:	edc4 6a07 	vstr	s13, [r4, #28]
 801498a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801498e:	6022      	str	r2, [r4, #0]
 8014990:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014994:	1a5b      	subs	r3, r3, r1
 8014996:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801499a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801499e:	6123      	str	r3, [r4, #16]
 80149a0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80149a4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80149a8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80149ac:	441a      	add	r2, r3
 80149ae:	696b      	ldr	r3, [r5, #20]
 80149b0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80149b4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80149b8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80149bc:	68a9      	ldr	r1, [r5, #8]
 80149be:	ed95 6a08 	vldr	s12, [r5, #32]
 80149c2:	602a      	str	r2, [r5, #0]
 80149c4:	3301      	adds	r3, #1
 80149c6:	616b      	str	r3, [r5, #20]
 80149c8:	69ab      	ldr	r3, [r5, #24]
 80149ca:	ee37 7a27 	vadd.f32	s14, s14, s15
 80149ce:	3b01      	subs	r3, #1
 80149d0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80149d4:	61ab      	str	r3, [r5, #24]
 80149d6:	692b      	ldr	r3, [r5, #16]
 80149d8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80149dc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80149e0:	edd5 6a07 	vldr	s13, [r5, #28]
 80149e4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80149e8:	440b      	add	r3, r1
 80149ea:	68e9      	ldr	r1, [r5, #12]
 80149ec:	612b      	str	r3, [r5, #16]
 80149ee:	ee76 6a86 	vadd.f32	s13, s13, s12
 80149f2:	428b      	cmp	r3, r1
 80149f4:	edc5 6a07 	vstr	s13, [r5, #28]
 80149f8:	db15      	blt.n	8014a26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 80149fa:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80149fe:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014a02:	3201      	adds	r2, #1
 8014a04:	edc5 6a07 	vstr	s13, [r5, #28]
 8014a08:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8014a0c:	602a      	str	r2, [r5, #0]
 8014a0e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014a12:	1a5b      	subs	r3, r3, r1
 8014a14:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014a18:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8014a1c:	612b      	str	r3, [r5, #16]
 8014a1e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014a22:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014a26:	3f01      	subs	r7, #1
 8014a28:	e757      	b.n	80148da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8014a2a:	ad39      	add	r5, sp, #228	; 0xe4
 8014a2c:	ac19      	add	r4, sp, #100	; 0x64
 8014a2e:	e72d      	b.n	801488c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8014a30:	4613      	mov	r3, r2
 8014a32:	e744      	b.n	80148be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8014a34:	4613      	mov	r3, r2
 8014a36:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8014a3a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8014a3c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8014a40:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8014a44:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8014a48:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8014a4c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8014a50:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8014a54:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8014a58:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8014a5a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8014a5e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8014a62:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8014a66:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8014a6a:	960e      	str	r6, [sp, #56]	; 0x38
 8014a6c:	469e      	mov	lr, r3
 8014a6e:	461f      	mov	r7, r3
 8014a70:	f04f 0900 	mov.w	r9, #0
 8014a74:	2f00      	cmp	r7, #0
 8014a76:	d146      	bne.n	8014b06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8014a78:	449c      	add	ip, r3
 8014a7a:	1ad7      	subs	r7, r2, r3
 8014a7c:	f1b9 0f00 	cmp.w	r9, #0
 8014a80:	d009      	beq.n	8014a96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8014a82:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8014a86:	9039      	str	r0, [sp, #228]	; 0xe4
 8014a88:	913d      	str	r1, [sp, #244]	; 0xf4
 8014a8a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8014a8e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8014a92:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8014a96:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8014a98:	910e      	str	r1, [sp, #56]	; 0x38
 8014a9a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014a9e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014aa2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8014aa6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8014aaa:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014aae:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014ab2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8014ab6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8014aba:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014abe:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014ac2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8014ac6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8014aca:	f04f 0800 	mov.w	r8, #0
 8014ace:	f1be 0f00 	cmp.w	lr, #0
 8014ad2:	d030      	beq.n	8014b36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8014ad4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014ad6:	4431      	add	r1, r6
 8014ad8:	4549      	cmp	r1, r9
 8014ada:	4450      	add	r0, sl
 8014adc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014ae0:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014ae4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014ae8:	db08      	blt.n	8014afc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8014aea:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014aee:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014af2:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014af6:	3001      	adds	r0, #1
 8014af8:	eba1 0109 	sub.w	r1, r1, r9
 8014afc:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014b00:	f04f 0801 	mov.w	r8, #1
 8014b04:	e7e3      	b.n	8014ace <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8014b06:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014b08:	4431      	add	r1, r6
 8014b0a:	4541      	cmp	r1, r8
 8014b0c:	4450      	add	r0, sl
 8014b0e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014b12:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014b16:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8014b1a:	db08      	blt.n	8014b2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8014b1c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014b20:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014b24:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014b28:	3001      	adds	r0, #1
 8014b2a:	eba1 0108 	sub.w	r1, r1, r8
 8014b2e:	3f01      	subs	r7, #1
 8014b30:	f04f 0901 	mov.w	r9, #1
 8014b34:	e79e      	b.n	8014a74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8014b36:	449c      	add	ip, r3
 8014b38:	1aff      	subs	r7, r7, r3
 8014b3a:	f1b8 0f00 	cmp.w	r8, #0
 8014b3e:	d009      	beq.n	8014b54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8014b40:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8014b44:	9019      	str	r0, [sp, #100]	; 0x64
 8014b46:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014b4a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014b4e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014b52:	911d      	str	r1, [sp, #116]	; 0x74
 8014b54:	1ad2      	subs	r2, r2, r3
 8014b56:	e6b5      	b.n	80148c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014b58:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014b5a:	681b      	ldr	r3, [r3, #0]
 8014b5c:	b923      	cbnz	r3, 8014b68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014b5e:	4b04      	ldr	r3, [pc, #16]	; (8014b70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8014b60:	6818      	ldr	r0, [r3, #0]
 8014b62:	6803      	ldr	r3, [r0, #0]
 8014b64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014b66:	4798      	blx	r3
 8014b68:	b05b      	add	sp, #364	; 0x16c
 8014b6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014b6e:	bf00      	nop
 8014b70:	20012db4 	.word	0x20012db4

08014b74 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8014b74:	b570      	push	{r4, r5, r6, lr}
 8014b76:	4604      	mov	r4, r0
 8014b78:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8014b7c:	9805      	ldr	r0, [sp, #20]
 8014b7e:	6061      	str	r1, [r4, #4]
 8014b80:	2500      	movs	r5, #0
 8014b82:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8014b86:	8263      	strh	r3, [r4, #18]
 8014b88:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014b8c:	8025      	strh	r5, [r4, #0]
 8014b8e:	7221      	strb	r1, [r4, #8]
 8014b90:	7266      	strb	r6, [r4, #9]
 8014b92:	60e0      	str	r0, [r4, #12]
 8014b94:	8222      	strh	r2, [r4, #16]
 8014b96:	82a3      	strh	r3, [r4, #20]
 8014b98:	82e5      	strh	r5, [r4, #22]
 8014b9a:	8325      	strh	r5, [r4, #24]
 8014b9c:	8365      	strh	r5, [r4, #26]
 8014b9e:	83a5      	strh	r5, [r4, #28]
 8014ba0:	83e5      	strh	r5, [r4, #30]
 8014ba2:	8425      	strh	r5, [r4, #32]
 8014ba4:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8014ba8:	b32e      	cbz	r6, 8014bf6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014baa:	6803      	ldr	r3, [r0, #0]
 8014bac:	695b      	ldr	r3, [r3, #20]
 8014bae:	4798      	blx	r3
 8014bb0:	4606      	mov	r6, r0
 8014bb2:	b300      	cbz	r0, 8014bf6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014bb4:	68e0      	ldr	r0, [r4, #12]
 8014bb6:	6803      	ldr	r3, [r0, #0]
 8014bb8:	4631      	mov	r1, r6
 8014bba:	68db      	ldr	r3, [r3, #12]
 8014bbc:	4798      	blx	r3
 8014bbe:	4605      	mov	r5, r0
 8014bc0:	b1c8      	cbz	r0, 8014bf6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014bc2:	7b43      	ldrb	r3, [r0, #13]
 8014bc4:	7a82      	ldrb	r2, [r0, #10]
 8014bc6:	005b      	lsls	r3, r3, #1
 8014bc8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014bcc:	4313      	orrs	r3, r2
 8014bce:	8423      	strh	r3, [r4, #32]
 8014bd0:	7a63      	ldrb	r3, [r4, #9]
 8014bd2:	2b06      	cmp	r3, #6
 8014bd4:	d10f      	bne.n	8014bf6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014bd6:	68e0      	ldr	r0, [r4, #12]
 8014bd8:	6803      	ldr	r3, [r0, #0]
 8014bda:	462a      	mov	r2, r5
 8014bdc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014bde:	4631      	mov	r1, r6
 8014be0:	4798      	blx	r3
 8014be2:	7b6b      	ldrb	r3, [r5, #13]
 8014be4:	005b      	lsls	r3, r3, #1
 8014be6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014bea:	7aab      	ldrb	r3, [r5, #10]
 8014bec:	4313      	orrs	r3, r2
 8014bee:	4418      	add	r0, r3
 8014bf0:	8c23      	ldrh	r3, [r4, #32]
 8014bf2:	4418      	add	r0, r3
 8014bf4:	8420      	strh	r0, [r4, #32]
 8014bf6:	4620      	mov	r0, r4
 8014bf8:	bd70      	pop	{r4, r5, r6, pc}

08014bfa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8014bfa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014bfe:	2400      	movs	r4, #0
 8014c00:	b085      	sub	sp, #20
 8014c02:	4681      	mov	r9, r0
 8014c04:	4688      	mov	r8, r1
 8014c06:	4692      	mov	sl, r2
 8014c08:	469b      	mov	fp, r3
 8014c0a:	4627      	mov	r7, r4
 8014c0c:	4625      	mov	r5, r4
 8014c0e:	4626      	mov	r6, r4
 8014c10:	4554      	cmp	r4, sl
 8014c12:	da2a      	bge.n	8014c6a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014c14:	2300      	movs	r3, #0
 8014c16:	9303      	str	r3, [sp, #12]
 8014c18:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014c1c:	429d      	cmp	r5, r3
 8014c1e:	d004      	beq.n	8014c2a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8014c20:	f242 030b 	movw	r3, #8203	; 0x200b
 8014c24:	429d      	cmp	r5, r3
 8014c26:	bf18      	it	ne
 8014c28:	462f      	movne	r7, r5
 8014c2a:	ab03      	add	r3, sp, #12
 8014c2c:	4642      	mov	r2, r8
 8014c2e:	4659      	mov	r1, fp
 8014c30:	4648      	mov	r0, r9
 8014c32:	f003 f965 	bl	8017f00 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014c36:	4605      	mov	r5, r0
 8014c38:	b1b8      	cbz	r0, 8014c6a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014c3a:	280a      	cmp	r0, #10
 8014c3c:	d015      	beq.n	8014c6a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014c3e:	9a03      	ldr	r2, [sp, #12]
 8014c40:	b18a      	cbz	r2, 8014c66 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8014c42:	7b50      	ldrb	r0, [r2, #13]
 8014c44:	7a93      	ldrb	r3, [r2, #10]
 8014c46:	8895      	ldrh	r5, [r2, #4]
 8014c48:	0040      	lsls	r0, r0, #1
 8014c4a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8014c4e:	4303      	orrs	r3, r0
 8014c50:	9301      	str	r3, [sp, #4]
 8014c52:	f8d8 3000 	ldr.w	r3, [r8]
 8014c56:	4639      	mov	r1, r7
 8014c58:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014c5a:	4640      	mov	r0, r8
 8014c5c:	4798      	blx	r3
 8014c5e:	9b01      	ldr	r3, [sp, #4]
 8014c60:	4418      	add	r0, r3
 8014c62:	4406      	add	r6, r0
 8014c64:	b2b6      	uxth	r6, r6
 8014c66:	3401      	adds	r4, #1
 8014c68:	e7d2      	b.n	8014c10 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8014c6a:	4630      	mov	r0, r6
 8014c6c:	b005      	add	sp, #20
 8014c6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014c72 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8014c72:	2a02      	cmp	r2, #2
 8014c74:	b530      	push	{r4, r5, lr}
 8014c76:	d011      	beq.n	8014c9c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8014c78:	2a03      	cmp	r2, #3
 8014c7a:	d01c      	beq.n	8014cb6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8014c7c:	2a01      	cmp	r2, #1
 8014c7e:	d10c      	bne.n	8014c9a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014c80:	888b      	ldrh	r3, [r1, #4]
 8014c82:	8801      	ldrh	r1, [r0, #0]
 8014c84:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8014c88:	8844      	ldrh	r4, [r0, #2]
 8014c8a:	8004      	strh	r4, [r0, #0]
 8014c8c:	1a5b      	subs	r3, r3, r1
 8014c8e:	1a9b      	subs	r3, r3, r2
 8014c90:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014c94:	8043      	strh	r3, [r0, #2]
 8014c96:	8081      	strh	r1, [r0, #4]
 8014c98:	80c2      	strh	r2, [r0, #6]
 8014c9a:	bd30      	pop	{r4, r5, pc}
 8014c9c:	88cb      	ldrh	r3, [r1, #6]
 8014c9e:	8842      	ldrh	r2, [r0, #2]
 8014ca0:	1a9b      	subs	r3, r3, r2
 8014ca2:	88c2      	ldrh	r2, [r0, #6]
 8014ca4:	1a9b      	subs	r3, r3, r2
 8014ca6:	888a      	ldrh	r2, [r1, #4]
 8014ca8:	8801      	ldrh	r1, [r0, #0]
 8014caa:	8043      	strh	r3, [r0, #2]
 8014cac:	1a52      	subs	r2, r2, r1
 8014cae:	8881      	ldrh	r1, [r0, #4]
 8014cb0:	1a52      	subs	r2, r2, r1
 8014cb2:	8002      	strh	r2, [r0, #0]
 8014cb4:	e7f1      	b.n	8014c9a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014cb6:	88cb      	ldrh	r3, [r1, #6]
 8014cb8:	8841      	ldrh	r1, [r0, #2]
 8014cba:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8014cbe:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014cc2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8014cc6:	8045      	strh	r5, [r0, #2]
 8014cc8:	1a5b      	subs	r3, r3, r1
 8014cca:	1a9b      	subs	r3, r3, r2
 8014ccc:	8003      	strh	r3, [r0, #0]
 8014cce:	8082      	strh	r2, [r0, #4]
 8014cd0:	80c4      	strh	r4, [r0, #6]
 8014cd2:	e7e2      	b.n	8014c9a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08014cd4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8014cd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014cd8:	b09f      	sub	sp, #124	; 0x7c
 8014cda:	9116      	str	r1, [sp, #88]	; 0x58
 8014cdc:	9317      	str	r3, [sp, #92]	; 0x5c
 8014cde:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014ce0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014ce2:	8809      	ldrh	r1, [r1, #0]
 8014ce4:	889b      	ldrh	r3, [r3, #4]
 8014ce6:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8014cea:	9212      	str	r2, [sp, #72]	; 0x48
 8014cec:	440b      	add	r3, r1
 8014cee:	b21b      	sxth	r3, r3
 8014cf0:	9310      	str	r3, [sp, #64]	; 0x40
 8014cf2:	f8d8 3000 	ldr.w	r3, [r8]
 8014cf6:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8014cfa:	7b19      	ldrb	r1, [r3, #12]
 8014cfc:	7adb      	ldrb	r3, [r3, #11]
 8014cfe:	9011      	str	r0, [sp, #68]	; 0x44
 8014d00:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8014d04:	9114      	str	r1, [sp, #80]	; 0x50
 8014d06:	9315      	str	r3, [sp, #84]	; 0x54
 8014d08:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8014d0c:	2a00      	cmp	r2, #0
 8014d0e:	d06a      	beq.n	8014de6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8014d10:	f898 3010 	ldrb.w	r3, [r8, #16]
 8014d14:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014d16:	2b06      	cmp	r3, #6
 8014d18:	bf14      	ite	ne
 8014d1a:	2301      	movne	r3, #1
 8014d1c:	2302      	moveq	r3, #2
 8014d1e:	4413      	add	r3, r2
 8014d20:	f04f 0900 	mov.w	r9, #0
 8014d24:	930f      	str	r3, [sp, #60]	; 0x3c
 8014d26:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8014d2a:	464c      	mov	r4, r9
 8014d2c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8014d30:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8014d34:	4293      	cmp	r3, r2
 8014d36:	f280 808f 	bge.w	8014e58 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014d3a:	2300      	movs	r3, #0
 8014d3c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8014d40:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8014d44:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014d48:	429c      	cmp	r4, r3
 8014d4a:	d006      	beq.n	8014d5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8014d4c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014d4e:	f242 020b 	movw	r2, #8203	; 0x200b
 8014d52:	4294      	cmp	r4, r2
 8014d54:	bf18      	it	ne
 8014d56:	4623      	movne	r3, r4
 8014d58:	930d      	str	r3, [sp, #52]	; 0x34
 8014d5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014d5c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8014d5e:	f8d8 2000 	ldr.w	r2, [r8]
 8014d62:	428b      	cmp	r3, r1
 8014d64:	db41      	blt.n	8014dea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8014d66:	6813      	ldr	r3, [r2, #0]
 8014d68:	4610      	mov	r0, r2
 8014d6a:	695b      	ldr	r3, [r3, #20]
 8014d6c:	4798      	blx	r3
 8014d6e:	4604      	mov	r4, r0
 8014d70:	f8d8 0000 	ldr.w	r0, [r8]
 8014d74:	6803      	ldr	r3, [r0, #0]
 8014d76:	aa1d      	add	r2, sp, #116	; 0x74
 8014d78:	689d      	ldr	r5, [r3, #8]
 8014d7a:	4621      	mov	r1, r4
 8014d7c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014d80:	47a8      	blx	r5
 8014d82:	901c      	str	r0, [sp, #112]	; 0x70
 8014d84:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014d88:	429c      	cmp	r4, r3
 8014d8a:	f000 80eb 	beq.w	8014f64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014d8e:	f242 030b 	movw	r3, #8203	; 0x200b
 8014d92:	429c      	cmp	r4, r3
 8014d94:	f000 80e6 	beq.w	8014f64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014d98:	2c00      	cmp	r4, #0
 8014d9a:	f000 80f8 	beq.w	8014f8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014d9e:	2c0a      	cmp	r4, #10
 8014da0:	d060      	beq.n	8014e64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8014da2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014da4:	b36a      	cbz	r2, 8014e02 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8014da6:	8894      	ldrh	r4, [r2, #4]
 8014da8:	f1bb 0f00 	cmp.w	fp, #0
 8014dac:	d03b      	beq.n	8014e26 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8014dae:	f892 900d 	ldrb.w	r9, [r2, #13]
 8014db2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014db6:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8014dba:	f892 900a 	ldrb.w	r9, [r2, #10]
 8014dbe:	f1bb 0f01 	cmp.w	fp, #1
 8014dc2:	ea49 0903 	orr.w	r9, r9, r3
 8014dc6:	d134      	bne.n	8014e32 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8014dc8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014dca:	eba6 0609 	sub.w	r6, r6, r9
 8014dce:	2b00      	cmp	r3, #0
 8014dd0:	d14f      	bne.n	8014e72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014dd2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014dd4:	eb09 0306 	add.w	r3, r9, r6
 8014dd8:	4413      	add	r3, r2
 8014dda:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014ddc:	f9b2 2000 	ldrsh.w	r2, [r2]
 8014de0:	4293      	cmp	r3, r2
 8014de2:	da51      	bge.n	8014e88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014de4:	e038      	b.n	8014e58 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014de6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014de8:	e79a      	b.n	8014d20 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8014dea:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014dee:	9301      	str	r3, [sp, #4]
 8014df0:	ab1d      	add	r3, sp, #116	; 0x74
 8014df2:	9300      	str	r3, [sp, #0]
 8014df4:	4659      	mov	r1, fp
 8014df6:	ab1c      	add	r3, sp, #112	; 0x70
 8014df8:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8014dfa:	f003 f8ca 	bl	8017f92 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8014dfe:	4604      	mov	r4, r0
 8014e00:	e7c0      	b.n	8014d84 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8014e02:	f8d8 0000 	ldr.w	r0, [r8]
 8014e06:	6803      	ldr	r3, [r0, #0]
 8014e08:	691b      	ldr	r3, [r3, #16]
 8014e0a:	4798      	blx	r3
 8014e0c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014e10:	4298      	cmp	r0, r3
 8014e12:	f000 80a7 	beq.w	8014f64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014e16:	f242 030b 	movw	r3, #8203	; 0x200b
 8014e1a:	4298      	cmp	r0, r3
 8014e1c:	f000 80a2 	beq.w	8014f64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014e20:	f1bb 0f00 	cmp.w	fp, #0
 8014e24:	d100      	bne.n	8014e28 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8014e26:	444e      	add	r6, r9
 8014e28:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014e2a:	2a00      	cmp	r2, #0
 8014e2c:	d1bf      	bne.n	8014dae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8014e2e:	4691      	mov	r9, r2
 8014e30:	e098      	b.n	8014f64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014e32:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014e34:	2b00      	cmp	r3, #0
 8014e36:	f000 80ac 	beq.w	8014f92 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8014e3a:	f1bb 0f00 	cmp.w	fp, #0
 8014e3e:	d118      	bne.n	8014e72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014e40:	f8d8 0000 	ldr.w	r0, [r8]
 8014e44:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014e46:	6803      	ldr	r3, [r0, #0]
 8014e48:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014e4a:	4798      	blx	r3
 8014e4c:	4406      	add	r6, r0
 8014e4e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014e50:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014e52:	1af3      	subs	r3, r6, r3
 8014e54:	4293      	cmp	r3, r2
 8014e56:	dd17      	ble.n	8014e88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014e58:	2c00      	cmp	r4, #0
 8014e5a:	f000 8098 	beq.w	8014f8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014e5e:	2c0a      	cmp	r4, #10
 8014e60:	f040 8086 	bne.w	8014f70 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8014e64:	240a      	movs	r4, #10
 8014e66:	fab4 f084 	clz	r0, r4
 8014e6a:	0940      	lsrs	r0, r0, #5
 8014e6c:	b01f      	add	sp, #124	; 0x7c
 8014e6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014e72:	f8d8 0000 	ldr.w	r0, [r8]
 8014e76:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014e78:	6803      	ldr	r3, [r0, #0]
 8014e7a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014e7c:	4798      	blx	r3
 8014e7e:	f1bb 0f01 	cmp.w	fp, #1
 8014e82:	eba6 0600 	sub.w	r6, r6, r0
 8014e86:	d0a4      	beq.n	8014dd2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8014e88:	981c      	ldr	r0, [sp, #112]	; 0x70
 8014e8a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014e8c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8014e90:	f9b3 7000 	ldrsh.w	r7, [r3]
 8014e94:	7b43      	ldrb	r3, [r0, #13]
 8014e96:	015b      	lsls	r3, r3, #5
 8014e98:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014e9c:	7983      	ldrb	r3, [r0, #6]
 8014e9e:	4431      	add	r1, r6
 8014ea0:	4313      	orrs	r3, r2
 8014ea2:	440b      	add	r3, r1
 8014ea4:	42bb      	cmp	r3, r7
 8014ea6:	db5d      	blt.n	8014f64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014ea8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014eaa:	4299      	cmp	r1, r3
 8014eac:	da5a      	bge.n	8014f64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014eae:	f8d8 0000 	ldr.w	r0, [r8]
 8014eb2:	6803      	ldr	r3, [r0, #0]
 8014eb4:	42b7      	cmp	r7, r6
 8014eb6:	bfc8      	it	gt
 8014eb8:	1bbf      	subgt	r7, r7, r6
 8014eba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014ebc:	bfcc      	ite	gt
 8014ebe:	b2bf      	uxthgt	r7, r7
 8014ec0:	2700      	movle	r7, #0
 8014ec2:	4798      	blx	r3
 8014ec4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014ec6:	7b5a      	ldrb	r2, [r3, #13]
 8014ec8:	00d1      	lsls	r1, r2, #3
 8014eca:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8014ece:	7a19      	ldrb	r1, [r3, #8]
 8014ed0:	4329      	orrs	r1, r5
 8014ed2:	0655      	lsls	r5, r2, #25
 8014ed4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8014ed6:	bf44      	itt	mi
 8014ed8:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8014edc:	b209      	sxthmi	r1, r1
 8014ede:	1945      	adds	r5, r0, r5
 8014ee0:	1a6d      	subs	r5, r5, r1
 8014ee2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014ee4:	b2ad      	uxth	r5, r5
 8014ee6:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8014eea:	fa0f fa85 	sxth.w	sl, r5
 8014eee:	4551      	cmp	r1, sl
 8014ef0:	dd3c      	ble.n	8014f6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8014ef2:	0112      	lsls	r2, r2, #4
 8014ef4:	79d8      	ldrb	r0, [r3, #7]
 8014ef6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8014efa:	4302      	orrs	r2, r0
 8014efc:	4492      	add	sl, r2
 8014efe:	4551      	cmp	r1, sl
 8014f00:	dc30      	bgt.n	8014f64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014f02:	1b4d      	subs	r5, r1, r5
 8014f04:	b22d      	sxth	r5, r5
 8014f06:	468a      	mov	sl, r1
 8014f08:	9319      	str	r3, [sp, #100]	; 0x64
 8014f0a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014f0c:	f8d8 0000 	ldr.w	r0, [r8]
 8014f10:	681a      	ldr	r2, [r3, #0]
 8014f12:	6801      	ldr	r1, [r0, #0]
 8014f14:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8014f16:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8014f18:	9313      	str	r3, [sp, #76]	; 0x4c
 8014f1a:	9218      	str	r2, [sp, #96]	; 0x60
 8014f1c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8014f1e:	4788      	blx	r1
 8014f20:	f898 1006 	ldrb.w	r1, [r8, #6]
 8014f24:	910b      	str	r1, [sp, #44]	; 0x2c
 8014f26:	f898 100e 	ldrb.w	r1, [r8, #14]
 8014f2a:	910a      	str	r1, [sp, #40]	; 0x28
 8014f2c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8014f30:	9109      	str	r1, [sp, #36]	; 0x24
 8014f32:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8014f36:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8014f38:	9305      	str	r3, [sp, #20]
 8014f3a:	b2ad      	uxth	r5, r5
 8014f3c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8014f40:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8014f44:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014f46:	9304      	str	r3, [sp, #16]
 8014f48:	4437      	add	r7, r6
 8014f4a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8014f4c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014f4e:	9206      	str	r2, [sp, #24]
 8014f50:	b23f      	sxth	r7, r7
 8014f52:	f8cd a004 	str.w	sl, [sp, #4]
 8014f56:	9700      	str	r7, [sp, #0]
 8014f58:	681a      	ldr	r2, [r3, #0]
 8014f5a:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014f5c:	685b      	ldr	r3, [r3, #4]
 8014f5e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014f60:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014f62:	47a8      	blx	r5
 8014f64:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f66:	3301      	adds	r3, #1
 8014f68:	930e      	str	r3, [sp, #56]	; 0x38
 8014f6a:	e6e1      	b.n	8014d30 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8014f6c:	2500      	movs	r5, #0
 8014f6e:	e7cb      	b.n	8014f08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8014f70:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014f72:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014f74:	3501      	adds	r5, #1
 8014f76:	429d      	cmp	r5, r3
 8014f78:	f6bf af75 	bge.w	8014e66 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8014f7c:	4659      	mov	r1, fp
 8014f7e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8014f80:	f7f3 ff36 	bl	8008df0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014f84:	4604      	mov	r4, r0
 8014f86:	b110      	cbz	r0, 8014f8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014f88:	280a      	cmp	r0, #10
 8014f8a:	d1f2      	bne.n	8014f72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8014f8c:	e76a      	b.n	8014e64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8014f8e:	2400      	movs	r4, #0
 8014f90:	e769      	b.n	8014e66 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8014f92:	f1bb 0f00 	cmp.w	fp, #0
 8014f96:	f43f af5a 	beq.w	8014e4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8014f9a:	e775      	b.n	8014e88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08014f9c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8014f9c:	b530      	push	{r4, r5, lr}
 8014f9e:	8ac4      	ldrh	r4, [r0, #22]
 8014fa0:	8b45      	ldrh	r5, [r0, #26]
 8014fa2:	8343      	strh	r3, [r0, #26]
 8014fa4:	442c      	add	r4, r5
 8014fa6:	1ae4      	subs	r4, r4, r3
 8014fa8:	82c4      	strh	r4, [r0, #22]
 8014faa:	8b83      	ldrh	r3, [r0, #28]
 8014fac:	8b04      	ldrh	r4, [r0, #24]
 8014fae:	4422      	add	r2, r4
 8014fb0:	440c      	add	r4, r1
 8014fb2:	1a59      	subs	r1, r3, r1
 8014fb4:	83c2      	strh	r2, [r0, #30]
 8014fb6:	8304      	strh	r4, [r0, #24]
 8014fb8:	8381      	strh	r1, [r0, #28]
 8014fba:	bd30      	pop	{r4, r5, pc}

08014fbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8014fbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014fc0:	4604      	mov	r4, r0
 8014fc2:	8a47      	ldrh	r7, [r0, #18]
 8014fc4:	68c0      	ldr	r0, [r0, #12]
 8014fc6:	6803      	ldr	r3, [r0, #0]
 8014fc8:	b085      	sub	sp, #20
 8014fca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014fcc:	4798      	blx	r3
 8014fce:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8014fd2:	7a63      	ldrb	r3, [r4, #9]
 8014fd4:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8014fd8:	42b7      	cmp	r7, r6
 8014fda:	f103 33ff 	add.w	r3, r3, #4294967295
 8014fde:	bfac      	ite	ge
 8014fe0:	f04f 0900 	movge.w	r9, #0
 8014fe4:	f04f 0901 	movlt.w	r9, #1
 8014fe8:	2b05      	cmp	r3, #5
 8014fea:	d804      	bhi.n	8014ff6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8014fec:	e8df f003 	tbb	[pc, r3]
 8014ff0:	470e0854 	.word	0x470e0854
 8014ff4:	4c4c      	.short	0x4c4c
 8014ff6:	2500      	movs	r5, #0
 8014ff8:	46a9      	mov	r9, r5
 8014ffa:	462e      	mov	r6, r5
 8014ffc:	462f      	mov	r7, r5
 8014ffe:	e00d      	b.n	801501c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015000:	42b7      	cmp	r7, r6
 8015002:	bfb4      	ite	lt
 8015004:	2600      	movlt	r6, #0
 8015006:	2601      	movge	r6, #1
 8015008:	2500      	movs	r5, #0
 801500a:	e7f7      	b.n	8014ffc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801500c:	42b7      	cmp	r7, r6
 801500e:	464d      	mov	r5, r9
 8015010:	f04f 0900 	mov.w	r9, #0
 8015014:	bfb4      	ite	lt
 8015016:	2600      	movlt	r6, #0
 8015018:	2601      	movge	r6, #1
 801501a:	464f      	mov	r7, r9
 801501c:	f04f 0800 	mov.w	r8, #0
 8015020:	f8a4 8016 	strh.w	r8, [r4, #22]
 8015024:	f8a4 8018 	strh.w	r8, [r4, #24]
 8015028:	f8cd 8004 	str.w	r8, [sp, #4]
 801502c:	2300      	movs	r3, #0
 801502e:	9303      	str	r3, [sp, #12]
 8015030:	8823      	ldrh	r3, [r4, #0]
 8015032:	2b20      	cmp	r3, #32
 8015034:	d034      	beq.n	80150a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8015036:	f242 010b 	movw	r1, #8203	; 0x200b
 801503a:	1a5a      	subs	r2, r3, r1
 801503c:	f1d2 0a00 	rsbs	sl, r2, #0
 8015040:	eb4a 0a02 	adc.w	sl, sl, r2
 8015044:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8015048:	4293      	cmp	r3, r2
 801504a:	d009      	beq.n	8015060 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 801504c:	428b      	cmp	r3, r1
 801504e:	9a01      	ldr	r2, [sp, #4]
 8015050:	bf18      	it	ne
 8015052:	461a      	movne	r2, r3
 8015054:	9201      	str	r2, [sp, #4]
 8015056:	bf0c      	ite	eq
 8015058:	f04f 0a01 	moveq.w	sl, #1
 801505c:	f04f 0a00 	movne.w	sl, #0
 8015060:	ab03      	add	r3, sp, #12
 8015062:	68e2      	ldr	r2, [r4, #12]
 8015064:	7a21      	ldrb	r1, [r4, #8]
 8015066:	6860      	ldr	r0, [r4, #4]
 8015068:	f002 ff4a 	bl	8017f00 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801506c:	8020      	strh	r0, [r4, #0]
 801506e:	b9d8      	cbnz	r0, 80150a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8015070:	8ba2      	ldrh	r2, [r4, #28]
 8015072:	2300      	movs	r3, #0
 8015074:	4611      	mov	r1, r2
 8015076:	4620      	mov	r0, r4
 8015078:	f7ff ff90 	bl	8014f9c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801507c:	e06e      	b.n	801515c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801507e:	2500      	movs	r5, #0
 8015080:	46a9      	mov	r9, r5
 8015082:	462e      	mov	r6, r5
 8015084:	2701      	movs	r7, #1
 8015086:	e7c9      	b.n	801501c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015088:	42b7      	cmp	r7, r6
 801508a:	f04f 0500 	mov.w	r5, #0
 801508e:	bfb4      	ite	lt
 8015090:	2700      	movlt	r7, #0
 8015092:	2701      	movge	r7, #1
 8015094:	462e      	mov	r6, r5
 8015096:	e7c1      	b.n	801501c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015098:	2500      	movs	r5, #0
 801509a:	46a9      	mov	r9, r5
 801509c:	2601      	movs	r6, #1
 801509e:	e7ad      	b.n	8014ffc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80150a0:	9301      	str	r3, [sp, #4]
 80150a2:	f04f 0a01 	mov.w	sl, #1
 80150a6:	e7db      	b.n	8015060 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80150a8:	8b63      	ldrh	r3, [r4, #26]
 80150aa:	280a      	cmp	r0, #10
 80150ac:	f103 0301 	add.w	r3, r3, #1
 80150b0:	8363      	strh	r3, [r4, #26]
 80150b2:	d0dd      	beq.n	8015070 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 80150b4:	9a03      	ldr	r2, [sp, #12]
 80150b6:	bb62      	cbnz	r2, 8015112 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 80150b8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80150bc:	4298      	cmp	r0, r3
 80150be:	d003      	beq.n	80150c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80150c0:	f242 030b 	movw	r3, #8203	; 0x200b
 80150c4:	4298      	cmp	r0, r3
 80150c6:	d1b1      	bne.n	801502c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80150c8:	8823      	ldrh	r3, [r4, #0]
 80150ca:	8ba1      	ldrh	r1, [r4, #28]
 80150cc:	2b20      	cmp	r3, #32
 80150ce:	d003      	beq.n	80150d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 80150d0:	f242 000b 	movw	r0, #8203	; 0x200b
 80150d4:	4283      	cmp	r3, r0
 80150d6:	d131      	bne.n	801513c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 80150d8:	f1ba 0f00 	cmp.w	sl, #0
 80150dc:	bf0a      	itet	eq
 80150de:	4688      	moveq	r8, r1
 80150e0:	4650      	movne	r0, sl
 80150e2:	2001      	moveq	r0, #1
 80150e4:	440a      	add	r2, r1
 80150e6:	8b23      	ldrh	r3, [r4, #24]
 80150e8:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 80150ec:	b292      	uxth	r2, r2
 80150ee:	83a2      	strh	r2, [r4, #28]
 80150f0:	4413      	add	r3, r2
 80150f2:	f1b9 0f00 	cmp.w	r9, #0
 80150f6:	d102      	bne.n	80150fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 80150f8:	2d00      	cmp	r5, #0
 80150fa:	d042      	beq.n	8015182 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 80150fc:	b300      	cbz	r0, 8015140 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 80150fe:	8c21      	ldrh	r1, [r4, #32]
 8015100:	4419      	add	r1, r3
 8015102:	458c      	cmp	ip, r1
 8015104:	da37      	bge.n	8015176 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015106:	8ae1      	ldrh	r1, [r4, #22]
 8015108:	2900      	cmp	r1, #0
 801510a:	d034      	beq.n	8015176 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801510c:	4563      	cmp	r3, ip
 801510e:	dd8d      	ble.n	801502c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015110:	e01d      	b.n	801514e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8015112:	8893      	ldrh	r3, [r2, #4]
 8015114:	8023      	strh	r3, [r4, #0]
 8015116:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801511a:	9901      	ldr	r1, [sp, #4]
 801511c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8015120:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8015124:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8015128:	ea4b 0b00 	orr.w	fp, fp, r0
 801512c:	68e0      	ldr	r0, [r4, #12]
 801512e:	6803      	ldr	r3, [r0, #0]
 8015130:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015132:	4798      	blx	r3
 8015134:	eb0b 0200 	add.w	r2, fp, r0
 8015138:	b292      	uxth	r2, r2
 801513a:	e7c5      	b.n	80150c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801513c:	2000      	movs	r0, #0
 801513e:	e7d1      	b.n	80150e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8015140:	4563      	cmp	r3, ip
 8015142:	f77f af73 	ble.w	801502c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015146:	8ae3      	ldrh	r3, [r4, #22]
 8015148:	2b00      	cmp	r3, #0
 801514a:	f43f af6f 	beq.w	801502c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801514e:	2301      	movs	r3, #1
 8015150:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8015154:	8c22      	ldrh	r2, [r4, #32]
 8015156:	8be3      	ldrh	r3, [r4, #30]
 8015158:	4413      	add	r3, r2
 801515a:	83e3      	strh	r3, [r4, #30]
 801515c:	68e0      	ldr	r0, [r4, #12]
 801515e:	6803      	ldr	r3, [r0, #0]
 8015160:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015162:	4798      	blx	r3
 8015164:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8015168:	4418      	add	r0, r3
 801516a:	8a63      	ldrh	r3, [r4, #18]
 801516c:	1a18      	subs	r0, r3, r0
 801516e:	8260      	strh	r0, [r4, #18]
 8015170:	b005      	add	sp, #20
 8015172:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015176:	2300      	movs	r3, #0
 8015178:	4611      	mov	r1, r2
 801517a:	4620      	mov	r0, r4
 801517c:	f7ff ff0e 	bl	8014f9c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015180:	e754      	b.n	801502c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015182:	4563      	cmp	r3, ip
 8015184:	dd14      	ble.n	80151b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8015186:	b117      	cbz	r7, 801518e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8015188:	2301      	movs	r3, #1
 801518a:	460a      	mov	r2, r1
 801518c:	e772      	b.n	8015074 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801518e:	2e00      	cmp	r6, #0
 8015190:	f43f af4c 	beq.w	801502c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015194:	2800      	cmp	r0, #0
 8015196:	f47f af49 	bne.w	801502c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801519a:	f1ba 0f00 	cmp.w	sl, #0
 801519e:	d002      	beq.n	80151a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 80151a0:	2301      	movs	r3, #1
 80151a2:	4642      	mov	r2, r8
 80151a4:	e767      	b.n	8015076 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 80151a6:	8ae3      	ldrh	r3, [r4, #22]
 80151a8:	2b00      	cmp	r3, #0
 80151aa:	f43f af3f 	beq.w	801502c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80151ae:	e7d5      	b.n	801515c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80151b0:	2800      	cmp	r0, #0
 80151b2:	f47f af3b 	bne.w	801502c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80151b6:	f1ba 0f00 	cmp.w	sl, #0
 80151ba:	f43f af37 	beq.w	801502c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80151be:	2301      	movs	r3, #1
 80151c0:	4642      	mov	r2, r8
 80151c2:	e7da      	b.n	801517a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

080151c4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80151c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80151c6:	4605      	mov	r5, r0
 80151c8:	b08f      	sub	sp, #60	; 0x3c
 80151ca:	4617      	mov	r7, r2
 80151cc:	461c      	mov	r4, r3
 80151ce:	460e      	mov	r6, r1
 80151d0:	b1d1      	cbz	r1, 8015208 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 80151d2:	681b      	ldr	r3, [r3, #0]
 80151d4:	4620      	mov	r0, r4
 80151d6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80151d8:	4798      	blx	r3
 80151da:	4240      	negs	r0, r0
 80151dc:	b200      	sxth	r0, r0
 80151de:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80151e2:	9603      	str	r6, [sp, #12]
 80151e4:	9700      	str	r7, [sp, #0]
 80151e6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80151ea:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80151ee:	4629      	mov	r1, r5
 80151f0:	a805      	add	r0, sp, #20
 80151f2:	f7ff fcbf 	bl	8014b74 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80151f6:	2401      	movs	r4, #1
 80151f8:	a805      	add	r0, sp, #20
 80151fa:	f7ff fedf 	bl	8014fbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80151fe:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8015202:	b163      	cbz	r3, 801521e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8015204:	3401      	adds	r4, #1
 8015206:	e7f7      	b.n	80151f8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8015208:	f002 ff48 	bl	801809c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801520c:	2401      	movs	r4, #1
 801520e:	280a      	cmp	r0, #10
 8015210:	4628      	mov	r0, r5
 8015212:	bf08      	it	eq
 8015214:	3401      	addeq	r4, #1
 8015216:	f002 ff41 	bl	801809c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801521a:	2800      	cmp	r0, #0
 801521c:	d1f7      	bne.n	801520e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801521e:	b2a0      	uxth	r0, r4
 8015220:	b00f      	add	sp, #60	; 0x3c
 8015222:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015224 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8015224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015228:	b0e3      	sub	sp, #396	; 0x18c
 801522a:	461c      	mov	r4, r3
 801522c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 801522e:	4683      	mov	fp, r0
 8015230:	4688      	mov	r8, r1
 8015232:	2b00      	cmp	r3, #0
 8015234:	f000 8112 	beq.w	801545c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015238:	6823      	ldr	r3, [r4, #0]
 801523a:	2b00      	cmp	r3, #0
 801523c:	f000 810e 	beq.w	801545c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015240:	7ba3      	ldrb	r3, [r4, #14]
 8015242:	2b00      	cmp	r3, #0
 8015244:	f000 810a 	beq.w	801545c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015248:	6810      	ldr	r0, [r2, #0]
 801524a:	6851      	ldr	r1, [r2, #4]
 801524c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8015250:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8015254:	ad0a      	add	r5, sp, #40	; 0x28
 8015256:	462b      	mov	r3, r5
 8015258:	c303      	stmia	r3!, {r0, r1}
 801525a:	2100      	movs	r1, #0
 801525c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8015260:	910c      	str	r1, [sp, #48]	; 0x30
 8015262:	79a2      	ldrb	r2, [r4, #6]
 8015264:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015268:	a90c      	add	r1, sp, #48	; 0x30
 801526a:	4628      	mov	r0, r5
 801526c:	f7ff fd01 	bl	8014c72 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015270:	a90c      	add	r1, sp, #48	; 0x30
 8015272:	4608      	mov	r0, r1
 8015274:	79a2      	ldrb	r2, [r4, #6]
 8015276:	f7ff fcfc 	bl	8014c72 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801527a:	a817      	add	r0, sp, #92	; 0x5c
 801527c:	f002 fae2 	bl	8017844 <_ZN8touchgfx12TextProviderC1Ev>
 8015280:	6820      	ldr	r0, [r4, #0]
 8015282:	6803      	ldr	r3, [r0, #0]
 8015284:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015286:	4798      	blx	r3
 8015288:	4606      	mov	r6, r0
 801528a:	6820      	ldr	r0, [r4, #0]
 801528c:	6803      	ldr	r3, [r0, #0]
 801528e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015290:	4798      	blx	r3
 8015292:	4633      	mov	r3, r6
 8015294:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8015296:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8015298:	9000      	str	r0, [sp, #0]
 801529a:	a817      	add	r0, sp, #92	; 0x5c
 801529c:	f002 fb2d 	bl	80178fa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80152a0:	6820      	ldr	r0, [r4, #0]
 80152a2:	f894 a004 	ldrb.w	sl, [r4, #4]
 80152a6:	6803      	ldr	r3, [r0, #0]
 80152a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80152aa:	4798      	blx	r3
 80152ac:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 80152b0:	6823      	ldr	r3, [r4, #0]
 80152b2:	4607      	mov	r7, r0
 80152b4:	4406      	add	r6, r0
 80152b6:	a830      	add	r0, sp, #192	; 0xc0
 80152b8:	f893 9009 	ldrb.w	r9, [r3, #9]
 80152bc:	f002 fac2 	bl	8017844 <_ZN8touchgfx12TextProviderC1Ev>
 80152c0:	7c23      	ldrb	r3, [r4, #16]
 80152c2:	b17b      	cbz	r3, 80152e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 80152c4:	6820      	ldr	r0, [r4, #0]
 80152c6:	6803      	ldr	r3, [r0, #0]
 80152c8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80152ca:	4798      	blx	r3
 80152cc:	9009      	str	r0, [sp, #36]	; 0x24
 80152ce:	6820      	ldr	r0, [r4, #0]
 80152d0:	6802      	ldr	r2, [r0, #0]
 80152d2:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80152d4:	4790      	blx	r2
 80152d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80152d8:	9000      	str	r0, [sp, #0]
 80152da:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80152dc:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80152de:	a830      	add	r0, sp, #192	; 0xc0
 80152e0:	f002 fb0b 	bl	80178fa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80152e4:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80152e8:	7be2      	ldrb	r2, [r4, #15]
 80152ea:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80152ee:	1a8a      	subs	r2, r1, r2
 80152f0:	7c21      	ldrb	r1, [r4, #16]
 80152f2:	9103      	str	r1, [sp, #12]
 80152f4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80152f8:	9102      	str	r1, [sp, #8]
 80152fa:	6821      	ldr	r1, [r4, #0]
 80152fc:	9101      	str	r1, [sp, #4]
 80152fe:	7961      	ldrb	r1, [r4, #5]
 8015300:	9100      	str	r1, [sp, #0]
 8015302:	b292      	uxth	r2, r2
 8015304:	a930      	add	r1, sp, #192	; 0xc0
 8015306:	a80e      	add	r0, sp, #56	; 0x38
 8015308:	f7ff fc34 	bl	8014b74 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801530c:	2e00      	cmp	r6, #0
 801530e:	dc5b      	bgt.n	80153c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8015310:	af17      	add	r7, sp, #92	; 0x5c
 8015312:	f04f 0900 	mov.w	r9, #0
 8015316:	7c23      	ldrb	r3, [r4, #16]
 8015318:	2b00      	cmp	r3, #0
 801531a:	f000 80b1 	beq.w	8015480 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801531e:	a80e      	add	r0, sp, #56	; 0x38
 8015320:	f7ff fe4c 	bl	8014fbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015324:	f1ba 0f00 	cmp.w	sl, #0
 8015328:	f000 80a5 	beq.w	8015476 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801532c:	7c23      	ldrb	r3, [r4, #16]
 801532e:	9309      	str	r3, [sp, #36]	; 0x24
 8015330:	2264      	movs	r2, #100	; 0x64
 8015332:	4639      	mov	r1, r7
 8015334:	a849      	add	r0, sp, #292	; 0x124
 8015336:	f015 fe7c 	bl	802b032 <memcpy>
 801533a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801533c:	2b00      	cmp	r3, #0
 801533e:	f000 80a7 	beq.w	8015490 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8015342:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8015346:	7922      	ldrb	r2, [r4, #4]
 8015348:	2a01      	cmp	r2, #1
 801534a:	f040 808a 	bne.w	8015462 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801534e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8015352:	1ac0      	subs	r0, r0, r3
 8015354:	2302      	movs	r3, #2
 8015356:	fb90 f0f3 	sdiv	r0, r0, r3
 801535a:	b200      	sxth	r0, r0
 801535c:	7c23      	ldrb	r3, [r4, #16]
 801535e:	2b00      	cmp	r3, #0
 8015360:	f000 808b 	beq.w	801547a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8015364:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8015368:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 801536c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015370:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8015374:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8015378:	4410      	add	r0, r2
 801537a:	b200      	sxth	r0, r0
 801537c:	9000      	str	r0, [sp, #0]
 801537e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8015382:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8015386:	4642      	mov	r2, r8
 8015388:	2100      	movs	r1, #0
 801538a:	4658      	mov	r0, fp
 801538c:	f7ff fca2 	bl	8014cd4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8015390:	2800      	cmp	r0, #0
 8015392:	d163      	bne.n	801545c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015394:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8015398:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801539c:	b2b2      	uxth	r2, r6
 801539e:	4413      	add	r3, r2
 80153a0:	1a8a      	subs	r2, r1, r2
 80153a2:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 80153a6:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 80153aa:	b21b      	sxth	r3, r3
 80153ac:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80153b0:	2a00      	cmp	r2, #0
 80153b2:	d153      	bne.n	801545c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80153b4:	6822      	ldr	r2, [r4, #0]
 80153b6:	8869      	ldrh	r1, [r5, #2]
 80153b8:	7a12      	ldrb	r2, [r2, #8]
 80153ba:	1a9b      	subs	r3, r3, r2
 80153bc:	88ea      	ldrh	r2, [r5, #6]
 80153be:	440a      	add	r2, r1
 80153c0:	b212      	sxth	r2, r2
 80153c2:	4293      	cmp	r3, r2
 80153c4:	dda7      	ble.n	8015316 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 80153c6:	e049      	b.n	801545c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80153c8:	7c23      	ldrb	r3, [r4, #16]
 80153ca:	444f      	add	r7, r9
 80153cc:	b1c3      	cbz	r3, 8015400 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 80153ce:	f64f 79ff 	movw	r9, #65535	; 0xffff
 80153d2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80153d6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80153da:	443b      	add	r3, r7
 80153dc:	4293      	cmp	r3, r2
 80153de:	da97      	bge.n	8015310 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80153e0:	a80e      	add	r0, sp, #56	; 0x38
 80153e2:	f7ff fdeb 	bl	8014fbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80153e6:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 80153ea:	3b01      	subs	r3, #1
 80153ec:	b29b      	uxth	r3, r3
 80153ee:	454b      	cmp	r3, r9
 80153f0:	9309      	str	r3, [sp, #36]	; 0x24
 80153f2:	d021      	beq.n	8015438 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 80153f4:	7961      	ldrb	r1, [r4, #5]
 80153f6:	a817      	add	r0, sp, #92	; 0x5c
 80153f8:	f7f3 fcfa 	bl	8008df0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80153fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80153fe:	e7f4      	b.n	80153ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8015400:	fa1f f986 	uxth.w	r9, r6
 8015404:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015408:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801540c:	443b      	add	r3, r7
 801540e:	4293      	cmp	r3, r2
 8015410:	f6bf af7e 	bge.w	8015310 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015414:	a817      	add	r0, sp, #92	; 0x5c
 8015416:	f002 fe41 	bl	801809c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801541a:	b1f8      	cbz	r0, 801545c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801541c:	280a      	cmp	r0, #10
 801541e:	d1f1      	bne.n	8015404 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015420:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8015424:	444b      	add	r3, r9
 8015426:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801542a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801542e:	eba3 0309 	sub.w	r3, r3, r9
 8015432:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015436:	e7e5      	b.n	8015404 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015438:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801543c:	b2b3      	uxth	r3, r6
 801543e:	441a      	add	r2, r3
 8015440:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8015444:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8015448:	1ad3      	subs	r3, r2, r3
 801544a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801544e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8015452:	b11b      	cbz	r3, 801545c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015454:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8015458:	2b00      	cmp	r3, #0
 801545a:	d0ba      	beq.n	80153d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801545c:	b063      	add	sp, #396	; 0x18c
 801545e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015462:	2a02      	cmp	r2, #2
 8015464:	d105      	bne.n	8015472 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8015466:	7be2      	ldrb	r2, [r4, #15]
 8015468:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801546c:	1a80      	subs	r0, r0, r2
 801546e:	1ac0      	subs	r0, r0, r3
 8015470:	e773      	b.n	801535a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8015472:	2000      	movs	r0, #0
 8015474:	e772      	b.n	801535c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8015476:	7be0      	ldrb	r0, [r4, #15]
 8015478:	e770      	b.n	801535c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801547a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801547e:	e773      	b.n	8015368 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8015480:	f1ba 0f00 	cmp.w	sl, #0
 8015484:	d0f7      	beq.n	8015476 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8015486:	2264      	movs	r2, #100	; 0x64
 8015488:	4639      	mov	r1, r7
 801548a:	a849      	add	r0, sp, #292	; 0x124
 801548c:	f015 fdd1 	bl	802b032 <memcpy>
 8015490:	2300      	movs	r3, #0
 8015492:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8015496:	6821      	ldr	r1, [r4, #0]
 8015498:	a849      	add	r0, sp, #292	; 0x124
 801549a:	f7ff fbae 	bl	8014bfa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801549e:	b203      	sxth	r3, r0
 80154a0:	e751      	b.n	8015346 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

080154a2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80154a2:	2b03      	cmp	r3, #3
 80154a4:	d818      	bhi.n	80154d8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80154a6:	e8df f003 	tbb	[pc, r3]
 80154aa:	0602      	.short	0x0602
 80154ac:	130d      	.short	0x130d
 80154ae:	f9b0 2000 	ldrsh.w	r2, [r0]
 80154b2:	1850      	adds	r0, r2, r1
 80154b4:	4770      	bx	lr
 80154b6:	8803      	ldrh	r3, [r0, #0]
 80154b8:	8880      	ldrh	r0, [r0, #4]
 80154ba:	4418      	add	r0, r3
 80154bc:	b200      	sxth	r0, r0
 80154be:	1a80      	subs	r0, r0, r2
 80154c0:	3801      	subs	r0, #1
 80154c2:	4770      	bx	lr
 80154c4:	8803      	ldrh	r3, [r0, #0]
 80154c6:	8880      	ldrh	r0, [r0, #4]
 80154c8:	4418      	add	r0, r3
 80154ca:	b200      	sxth	r0, r0
 80154cc:	1a40      	subs	r0, r0, r1
 80154ce:	e7f7      	b.n	80154c0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80154d0:	f9b0 0000 	ldrsh.w	r0, [r0]
 80154d4:	4410      	add	r0, r2
 80154d6:	4770      	bx	lr
 80154d8:	2000      	movs	r0, #0
 80154da:	4770      	bx	lr

080154dc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80154dc:	2b03      	cmp	r3, #3
 80154de:	d817      	bhi.n	8015510 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 80154e0:	e8df f003 	tbb	[pc, r3]
 80154e4:	10090602 	.word	0x10090602
 80154e8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80154ec:	1850      	adds	r0, r2, r1
 80154ee:	4770      	bx	lr
 80154f0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80154f4:	e7fa      	b.n	80154ec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80154f6:	8843      	ldrh	r3, [r0, #2]
 80154f8:	88c0      	ldrh	r0, [r0, #6]
 80154fa:	4418      	add	r0, r3
 80154fc:	b200      	sxth	r0, r0
 80154fe:	1a80      	subs	r0, r0, r2
 8015500:	3801      	subs	r0, #1
 8015502:	4770      	bx	lr
 8015504:	8843      	ldrh	r3, [r0, #2]
 8015506:	88c0      	ldrh	r0, [r0, #6]
 8015508:	4418      	add	r0, r3
 801550a:	b200      	sxth	r0, r0
 801550c:	1a40      	subs	r0, r0, r1
 801550e:	e7f7      	b.n	8015500 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8015510:	2000      	movs	r0, #0
 8015512:	4770      	bx	lr

08015514 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8015514:	4b01      	ldr	r3, [pc, #4]	; (801551c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8015516:	2200      	movs	r2, #0
 8015518:	601a      	str	r2, [r3, #0]
 801551a:	4770      	bx	lr
 801551c:	20012dc4 	.word	0x20012dc4

08015520 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8015520:	4603      	mov	r3, r0
 8015522:	b1c8      	cbz	r0, 8015558 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8015524:	0c02      	lsrs	r2, r0, #16
 8015526:	0412      	lsls	r2, r2, #16
 8015528:	b9a2      	cbnz	r2, 8015554 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801552a:	0403      	lsls	r3, r0, #16
 801552c:	2010      	movs	r0, #16
 801552e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8015532:	bf04      	itt	eq
 8015534:	021b      	lsleq	r3, r3, #8
 8015536:	3008      	addeq	r0, #8
 8015538:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801553c:	bf04      	itt	eq
 801553e:	011b      	lsleq	r3, r3, #4
 8015540:	3004      	addeq	r0, #4
 8015542:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8015546:	bf04      	itt	eq
 8015548:	009b      	lsleq	r3, r3, #2
 801554a:	3002      	addeq	r0, #2
 801554c:	2b00      	cmp	r3, #0
 801554e:	db04      	blt.n	801555a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8015550:	3001      	adds	r0, #1
 8015552:	4770      	bx	lr
 8015554:	2000      	movs	r0, #0
 8015556:	e7ea      	b.n	801552e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8015558:	2020      	movs	r0, #32
 801555a:	4770      	bx	lr

0801555c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801555c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015560:	b087      	sub	sp, #28
 8015562:	460d      	mov	r5, r1
 8015564:	4616      	mov	r6, r2
 8015566:	4698      	mov	r8, r3
 8015568:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801556c:	4601      	mov	r1, r0
 801556e:	b120      	cbz	r0, 801557a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015570:	b11a      	cbz	r2, 801557a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015572:	2d1f      	cmp	r5, #31
 8015574:	d801      	bhi.n	801557a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015576:	2b1f      	cmp	r3, #31
 8015578:	d904      	bls.n	8015584 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801557a:	2000      	movs	r0, #0
 801557c:	6038      	str	r0, [r7, #0]
 801557e:	b007      	add	sp, #28
 8015580:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015584:	b97d      	cbnz	r5, 80155a6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8015586:	b143      	cbz	r3, 801559a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8015588:	4602      	mov	r2, r0
 801558a:	e9cd 4700 	strd	r4, r7, [sp]
 801558e:	462b      	mov	r3, r5
 8015590:	4641      	mov	r1, r8
 8015592:	4630      	mov	r0, r6
 8015594:	f7ff ffe2 	bl	801555c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015598:	e7f1      	b.n	801557e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801559a:	f04f 33ff 	mov.w	r3, #4294967295
 801559e:	603b      	str	r3, [r7, #0]
 80155a0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80155a4:	e7eb      	b.n	801557e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80155a6:	fa32 fa05 	lsrs.w	sl, r2, r5
 80155aa:	d106      	bne.n	80155ba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 80155ac:	4346      	muls	r6, r0
 80155ae:	fbb6 f0f4 	udiv	r0, r6, r4
 80155b2:	fb04 6610 	mls	r6, r4, r0, r6
 80155b6:	603e      	str	r6, [r7, #0]
 80155b8:	e7e1      	b.n	801557e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80155ba:	2201      	movs	r2, #1
 80155bc:	40aa      	lsls	r2, r5
 80155be:	3a01      	subs	r2, #1
 80155c0:	4016      	ands	r6, r2
 80155c2:	fa00 fb05 	lsl.w	fp, r0, r5
 80155c6:	4630      	mov	r0, r6
 80155c8:	fbbb f9f4 	udiv	r9, fp, r4
 80155cc:	fb0a f309 	mul.w	r3, sl, r9
 80155d0:	9303      	str	r3, [sp, #12]
 80155d2:	f7ff ffa5 	bl	8015520 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80155d6:	462b      	mov	r3, r5
 80155d8:	460a      	mov	r2, r1
 80155da:	e9cd 4700 	strd	r4, r7, [sp]
 80155de:	4601      	mov	r1, r0
 80155e0:	4630      	mov	r0, r6
 80155e2:	f7ff ffbb 	bl	801555c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80155e6:	fb04 b919 	mls	r9, r4, r9, fp
 80155ea:	4606      	mov	r6, r0
 80155ec:	4648      	mov	r0, r9
 80155ee:	eb05 0108 	add.w	r1, r5, r8
 80155f2:	f7ff ff95 	bl	8015520 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80155f6:	ab05      	add	r3, sp, #20
 80155f8:	e9cd 4300 	strd	r4, r3, [sp]
 80155fc:	464a      	mov	r2, r9
 80155fe:	4603      	mov	r3, r0
 8015600:	4650      	mov	r0, sl
 8015602:	f7ff ffab 	bl	801555c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015606:	6839      	ldr	r1, [r7, #0]
 8015608:	9a05      	ldr	r2, [sp, #20]
 801560a:	9b03      	ldr	r3, [sp, #12]
 801560c:	4411      	add	r1, r2
 801560e:	fbb1 f2f4 	udiv	r2, r1, r4
 8015612:	18d3      	adds	r3, r2, r3
 8015614:	441e      	add	r6, r3
 8015616:	fb04 1412 	mls	r4, r4, r2, r1
 801561a:	4430      	add	r0, r6
 801561c:	603c      	str	r4, [r7, #0]
 801561e:	e7ae      	b.n	801557e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08015620 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8015620:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015624:	b085      	sub	sp, #20
 8015626:	f1b0 0900 	subs.w	r9, r0, #0
 801562a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801562c:	461d      	mov	r5, r3
 801562e:	bfbf      	itttt	lt
 8015630:	6823      	ldrlt	r3, [r4, #0]
 8015632:	425b      	neglt	r3, r3
 8015634:	f1c9 0900 	rsblt	r9, r9, #0
 8015638:	6023      	strlt	r3, [r4, #0]
 801563a:	bfb4      	ite	lt
 801563c:	f04f 36ff 	movlt.w	r6, #4294967295
 8015640:	2601      	movge	r6, #1
 8015642:	2a00      	cmp	r2, #0
 8015644:	4617      	mov	r7, r2
 8015646:	da04      	bge.n	8015652 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8015648:	6823      	ldr	r3, [r4, #0]
 801564a:	425b      	negs	r3, r3
 801564c:	4257      	negs	r7, r2
 801564e:	4276      	negs	r6, r6
 8015650:	6023      	str	r3, [r4, #0]
 8015652:	2d00      	cmp	r5, #0
 8015654:	4638      	mov	r0, r7
 8015656:	bfba      	itte	lt
 8015658:	426d      	neglt	r5, r5
 801565a:	f04f 38ff 	movlt.w	r8, #4294967295
 801565e:	f04f 0801 	movge.w	r8, #1
 8015662:	f7ff ff5d 	bl	8015520 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015666:	ab03      	add	r3, sp, #12
 8015668:	e9cd 5300 	strd	r5, r3, [sp]
 801566c:	463a      	mov	r2, r7
 801566e:	4603      	mov	r3, r0
 8015670:	4648      	mov	r0, r9
 8015672:	f7ff ff73 	bl	801555c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015676:	6823      	ldr	r3, [r4, #0]
 8015678:	9a03      	ldr	r2, [sp, #12]
 801567a:	4546      	cmp	r6, r8
 801567c:	441a      	add	r2, r3
 801567e:	fb92 f3f5 	sdiv	r3, r2, r5
 8015682:	4418      	add	r0, r3
 8015684:	bf18      	it	ne
 8015686:	4240      	negne	r0, r0
 8015688:	fb05 2313 	mls	r3, r5, r3, r2
 801568c:	1c72      	adds	r2, r6, #1
 801568e:	6023      	str	r3, [r4, #0]
 8015690:	d105      	bne.n	801569e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8015692:	2b00      	cmp	r3, #0
 8015694:	f1c3 0200 	rsb	r2, r3, #0
 8015698:	db0b      	blt.n	80156b2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801569a:	6022      	str	r2, [r4, #0]
 801569c:	e006      	b.n	80156ac <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801569e:	2e01      	cmp	r6, #1
 80156a0:	d104      	bne.n	80156ac <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80156a2:	2b00      	cmp	r3, #0
 80156a4:	da02      	bge.n	80156ac <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80156a6:	442b      	add	r3, r5
 80156a8:	3801      	subs	r0, #1
 80156aa:	6023      	str	r3, [r4, #0]
 80156ac:	b005      	add	sp, #20
 80156ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80156b2:	3801      	subs	r0, #1
 80156b4:	1b52      	subs	r2, r2, r5
 80156b6:	e7f0      	b.n	801569a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

080156b8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80156b8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80156bc:	4c1c      	ldr	r4, [pc, #112]	; (8015730 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80156be:	6807      	ldr	r7, [r0, #0]
 80156c0:	69a3      	ldr	r3, [r4, #24]
 80156c2:	4605      	mov	r5, r0
 80156c4:	b92b      	cbnz	r3, 80156d2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80156c6:	6840      	ldr	r0, [r0, #4]
 80156c8:	e9c5 7000 	strd	r7, r0, [r5]
 80156cc:	b004      	add	sp, #16
 80156ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80156d2:	68a2      	ldr	r2, [r4, #8]
 80156d4:	6820      	ldr	r0, [r4, #0]
 80156d6:	ae04      	add	r6, sp, #16
 80156d8:	f04f 0802 	mov.w	r8, #2
 80156dc:	fb93 f1f8 	sdiv	r1, r3, r8
 80156e0:	440a      	add	r2, r1
 80156e2:	f846 2d04 	str.w	r2, [r6, #-4]!
 80156e6:	69e1      	ldr	r1, [r4, #28]
 80156e8:	9600      	str	r6, [sp, #0]
 80156ea:	463a      	mov	r2, r7
 80156ec:	f7ff ff98 	bl	8015620 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80156f0:	69a3      	ldr	r3, [r4, #24]
 80156f2:	686a      	ldr	r2, [r5, #4]
 80156f4:	6a21      	ldr	r1, [r4, #32]
 80156f6:	9600      	str	r6, [sp, #0]
 80156f8:	4607      	mov	r7, r0
 80156fa:	6860      	ldr	r0, [r4, #4]
 80156fc:	f7ff ff90 	bl	8015620 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015700:	6962      	ldr	r2, [r4, #20]
 8015702:	69a3      	ldr	r3, [r4, #24]
 8015704:	fb93 f8f8 	sdiv	r8, r3, r8
 8015708:	4442      	add	r2, r8
 801570a:	9203      	str	r2, [sp, #12]
 801570c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801570e:	682a      	ldr	r2, [r5, #0]
 8015710:	9600      	str	r6, [sp, #0]
 8015712:	4407      	add	r7, r0
 8015714:	68e0      	ldr	r0, [r4, #12]
 8015716:	f7ff ff83 	bl	8015620 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801571a:	9600      	str	r6, [sp, #0]
 801571c:	4680      	mov	r8, r0
 801571e:	69a3      	ldr	r3, [r4, #24]
 8015720:	686a      	ldr	r2, [r5, #4]
 8015722:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8015724:	6920      	ldr	r0, [r4, #16]
 8015726:	f7ff ff7b 	bl	8015620 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801572a:	4440      	add	r0, r8
 801572c:	e7cc      	b.n	80156c8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801572e:	bf00      	nop
 8015730:	20012dc8 	.word	0x20012dc8

08015734 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8015734:	4b07      	ldr	r3, [pc, #28]	; (8015754 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8015736:	781b      	ldrb	r3, [r3, #0]
 8015738:	2b01      	cmp	r3, #1
 801573a:	d109      	bne.n	8015750 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801573c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015740:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015744:	8003      	strh	r3, [r0, #0]
 8015746:	4b04      	ldr	r3, [pc, #16]	; (8015758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8015748:	881b      	ldrh	r3, [r3, #0]
 801574a:	3b01      	subs	r3, #1
 801574c:	1a9b      	subs	r3, r3, r2
 801574e:	800b      	strh	r3, [r1, #0]
 8015750:	4770      	bx	lr
 8015752:	bf00      	nop
 8015754:	20012dac 	.word	0x20012dac
 8015758:	20012da8 	.word	0x20012da8

0801575c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801575c:	b510      	push	{r4, lr}
 801575e:	4b07      	ldr	r3, [pc, #28]	; (801577c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8015760:	781b      	ldrb	r3, [r3, #0]
 8015762:	2b01      	cmp	r3, #1
 8015764:	d108      	bne.n	8015778 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8015766:	4b06      	ldr	r3, [pc, #24]	; (8015780 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8015768:	880c      	ldrh	r4, [r1, #0]
 801576a:	881b      	ldrh	r3, [r3, #0]
 801576c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015770:	3b01      	subs	r3, #1
 8015772:	1b1b      	subs	r3, r3, r4
 8015774:	8003      	strh	r3, [r0, #0]
 8015776:	800a      	strh	r2, [r1, #0]
 8015778:	bd10      	pop	{r4, pc}
 801577a:	bf00      	nop
 801577c:	20012dac 	.word	0x20012dac
 8015780:	20012da8 	.word	0x20012da8

08015784 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8015784:	b510      	push	{r4, lr}
 8015786:	4b0a      	ldr	r3, [pc, #40]	; (80157b0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8015788:	781b      	ldrb	r3, [r3, #0]
 801578a:	2b01      	cmp	r3, #1
 801578c:	d10e      	bne.n	80157ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801578e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8015792:	8843      	ldrh	r3, [r0, #2]
 8015794:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015798:	8044      	strh	r4, [r0, #2]
 801579a:	18ca      	adds	r2, r1, r3
 801579c:	4b05      	ldr	r3, [pc, #20]	; (80157b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801579e:	881b      	ldrh	r3, [r3, #0]
 80157a0:	1a9b      	subs	r3, r3, r2
 80157a2:	8003      	strh	r3, [r0, #0]
 80157a4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80157a8:	80c3      	strh	r3, [r0, #6]
 80157aa:	8081      	strh	r1, [r0, #4]
 80157ac:	bd10      	pop	{r4, pc}
 80157ae:	bf00      	nop
 80157b0:	20012dac 	.word	0x20012dac
 80157b4:	20012da8 	.word	0x20012da8

080157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80157b8:	4b08      	ldr	r3, [pc, #32]	; (80157dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 80157ba:	781b      	ldrb	r3, [r3, #0]
 80157bc:	2b01      	cmp	r3, #1
 80157be:	d10c      	bne.n	80157da <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 80157c0:	8803      	ldrh	r3, [r0, #0]
 80157c2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80157c6:	8842      	ldrh	r2, [r0, #2]
 80157c8:	8002      	strh	r2, [r0, #0]
 80157ca:	185a      	adds	r2, r3, r1
 80157cc:	4b04      	ldr	r3, [pc, #16]	; (80157e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80157ce:	881b      	ldrh	r3, [r3, #0]
 80157d0:	1a9b      	subs	r3, r3, r2
 80157d2:	8043      	strh	r3, [r0, #2]
 80157d4:	88c3      	ldrh	r3, [r0, #6]
 80157d6:	8083      	strh	r3, [r0, #4]
 80157d8:	80c1      	strh	r1, [r0, #6]
 80157da:	4770      	bx	lr
 80157dc:	20012dac 	.word	0x20012dac
 80157e0:	20012da8 	.word	0x20012da8

080157e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 80157e4:	b510      	push	{r4, lr}
 80157e6:	4b07      	ldr	r3, [pc, #28]	; (8015804 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 80157e8:	781b      	ldrb	r3, [r3, #0]
 80157ea:	2b01      	cmp	r3, #1
 80157ec:	d108      	bne.n	8015800 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 80157ee:	f9b1 3000 	ldrsh.w	r3, [r1]
 80157f2:	f9b0 4000 	ldrsh.w	r4, [r0]
 80157f6:	8003      	strh	r3, [r0, #0]
 80157f8:	8893      	ldrh	r3, [r2, #4]
 80157fa:	3b01      	subs	r3, #1
 80157fc:	1b1b      	subs	r3, r3, r4
 80157fe:	800b      	strh	r3, [r1, #0]
 8015800:	bd10      	pop	{r4, pc}
 8015802:	bf00      	nop
 8015804:	20012dac 	.word	0x20012dac

08015808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8015808:	4b0b      	ldr	r3, [pc, #44]	; (8015838 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801580a:	781b      	ldrb	r3, [r3, #0]
 801580c:	2b01      	cmp	r3, #1
 801580e:	d111      	bne.n	8015834 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8015810:	680b      	ldr	r3, [r1, #0]
 8015812:	ed90 7a00 	vldr	s14, [r0]
 8015816:	6003      	str	r3, [r0, #0]
 8015818:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801581c:	eddf 6a07 	vldr	s13, [pc, #28]	; 801583c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8015820:	ee07 3a90 	vmov	s15, r3
 8015824:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015828:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801582c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8015830:	edc1 7a00 	vstr	s15, [r1]
 8015834:	4770      	bx	lr
 8015836:	bf00      	nop
 8015838:	20012dac 	.word	0x20012dac
 801583c:	38d1b717 	.word	0x38d1b717

08015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8015840:	b510      	push	{r4, lr}
 8015842:	4b0a      	ldr	r3, [pc, #40]	; (801586c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8015844:	781b      	ldrb	r3, [r3, #0]
 8015846:	2b01      	cmp	r3, #1
 8015848:	460a      	mov	r2, r1
 801584a:	d10d      	bne.n	8015868 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 801584c:	8881      	ldrh	r1, [r0, #4]
 801584e:	8803      	ldrh	r3, [r0, #0]
 8015850:	440b      	add	r3, r1
 8015852:	4601      	mov	r1, r0
 8015854:	3b01      	subs	r3, #1
 8015856:	f821 3b02 	strh.w	r3, [r1], #2
 801585a:	f7ff ffc3 	bl	80157e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801585e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015862:	88c2      	ldrh	r2, [r0, #6]
 8015864:	8082      	strh	r2, [r0, #4]
 8015866:	80c3      	strh	r3, [r0, #6]
 8015868:	bd10      	pop	{r4, pc}
 801586a:	bf00      	nop
 801586c:	20012dac 	.word	0x20012dac

08015870 <_ZN8touchgfx11Application13requestRedrawEv>:
 8015870:	4b06      	ldr	r3, [pc, #24]	; (801588c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8015872:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015876:	4b06      	ldr	r3, [pc, #24]	; (8015890 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8015878:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 801587c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015880:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8015884:	2100      	movs	r1, #0
 8015886:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 801588a:	4770      	bx	lr
 801588c:	20012da8 	.word	0x20012da8
 8015890:	20012daa 	.word	0x20012daa

08015894 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8015894:	4b03      	ldr	r3, [pc, #12]	; (80158a4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8015896:	6818      	ldr	r0, [r3, #0]
 8015898:	b110      	cbz	r0, 80158a0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801589a:	6803      	ldr	r3, [r0, #0]
 801589c:	699b      	ldr	r3, [r3, #24]
 801589e:	4718      	bx	r3
 80158a0:	4770      	bx	lr
 80158a2:	bf00      	nop
 80158a4:	20012df8 	.word	0x20012df8

080158a8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80158a8:	4770      	bx	lr
	...

080158ac <_ZN8touchgfx11Application4drawEv>:
 80158ac:	b507      	push	{r0, r1, r2, lr}
 80158ae:	4b09      	ldr	r3, [pc, #36]	; (80158d4 <_ZN8touchgfx11Application4drawEv+0x28>)
 80158b0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80158b4:	4b08      	ldr	r3, [pc, #32]	; (80158d8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 80158b6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80158ba:	f9b3 3000 	ldrsh.w	r3, [r3]
 80158be:	f8ad 3006 	strh.w	r3, [sp, #6]
 80158c2:	6803      	ldr	r3, [r0, #0]
 80158c4:	2100      	movs	r1, #0
 80158c6:	9100      	str	r1, [sp, #0]
 80158c8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80158ca:	4669      	mov	r1, sp
 80158cc:	4798      	blx	r3
 80158ce:	b003      	add	sp, #12
 80158d0:	f85d fb04 	ldr.w	pc, [sp], #4
 80158d4:	20012da8 	.word	0x20012da8
 80158d8:	20012daa 	.word	0x20012daa

080158dc <_ZN8touchgfx11Application10invalidateEv>:
 80158dc:	4b09      	ldr	r3, [pc, #36]	; (8015904 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80158de:	f9b3 2000 	ldrsh.w	r2, [r3]
 80158e2:	4b09      	ldr	r3, [pc, #36]	; (8015908 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80158e4:	b082      	sub	sp, #8
 80158e6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80158ea:	f8ad 2004 	strh.w	r2, [sp, #4]
 80158ee:	2100      	movs	r1, #0
 80158f0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80158f4:	9100      	str	r1, [sp, #0]
 80158f6:	6803      	ldr	r3, [r0, #0]
 80158f8:	aa02      	add	r2, sp, #8
 80158fa:	e912 0006 	ldmdb	r2, {r1, r2}
 80158fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015900:	b002      	add	sp, #8
 8015902:	4718      	bx	r3
 8015904:	20012da8 	.word	0x20012da8
 8015908:	20012daa 	.word	0x20012daa

0801590c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801590c:	4b03      	ldr	r3, [pc, #12]	; (801591c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801590e:	6818      	ldr	r0, [r3, #0]
 8015910:	b110      	cbz	r0, 8015918 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8015912:	6803      	ldr	r3, [r0, #0]
 8015914:	69db      	ldr	r3, [r3, #28]
 8015916:	4718      	bx	r3
 8015918:	4770      	bx	lr
 801591a:	bf00      	nop
 801591c:	20012df8 	.word	0x20012df8

08015920 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8015920:	4b03      	ldr	r3, [pc, #12]	; (8015930 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8015922:	6818      	ldr	r0, [r3, #0]
 8015924:	b110      	cbz	r0, 801592c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8015926:	6803      	ldr	r3, [r0, #0]
 8015928:	6a1b      	ldr	r3, [r3, #32]
 801592a:	4718      	bx	r3
 801592c:	4770      	bx	lr
 801592e:	bf00      	nop
 8015930:	20012df8 	.word	0x20012df8

08015934 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8015934:	2300      	movs	r3, #0
 8015936:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 801593a:	4770      	bx	lr

0801593c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801593c:	4b03      	ldr	r3, [pc, #12]	; (801594c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801593e:	6818      	ldr	r0, [r3, #0]
 8015940:	b110      	cbz	r0, 8015948 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8015942:	6803      	ldr	r3, [r0, #0]
 8015944:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015946:	4718      	bx	r3
 8015948:	4770      	bx	lr
 801594a:	bf00      	nop
 801594c:	20012df8 	.word	0x20012df8

08015950 <_ZN8touchgfx11ApplicationD1Ev>:
 8015950:	4770      	bx	lr

08015952 <_ZN8touchgfx11ApplicationD0Ev>:
 8015952:	b510      	push	{r4, lr}
 8015954:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8015958:	4604      	mov	r4, r0
 801595a:	f014 f958 	bl	8029c0e <_ZdlPvj>
 801595e:	4620      	mov	r0, r4
 8015960:	bd10      	pop	{r4, pc}

08015962 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8015962:	b510      	push	{r4, lr}
 8015964:	f9b1 4000 	ldrsh.w	r4, [r1]
 8015968:	888a      	ldrh	r2, [r1, #4]
 801596a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801596e:	4422      	add	r2, r4
 8015970:	b212      	sxth	r2, r2
 8015972:	4293      	cmp	r3, r2
 8015974:	da15      	bge.n	80159a2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015976:	8882      	ldrh	r2, [r0, #4]
 8015978:	4413      	add	r3, r2
 801597a:	b21b      	sxth	r3, r3
 801597c:	429c      	cmp	r4, r3
 801597e:	da10      	bge.n	80159a2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015980:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8015984:	88c9      	ldrh	r1, [r1, #6]
 8015986:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801598a:	4419      	add	r1, r3
 801598c:	b209      	sxth	r1, r1
 801598e:	428a      	cmp	r2, r1
 8015990:	da07      	bge.n	80159a2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8015992:	88c0      	ldrh	r0, [r0, #6]
 8015994:	4410      	add	r0, r2
 8015996:	b200      	sxth	r0, r0
 8015998:	4283      	cmp	r3, r0
 801599a:	bfac      	ite	ge
 801599c:	2000      	movge	r0, #0
 801599e:	2001      	movlt	r0, #1
 80159a0:	bd10      	pop	{r4, pc}
 80159a2:	2000      	movs	r0, #0
 80159a4:	e7fc      	b.n	80159a0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080159a6 <_ZN8touchgfx4Rect10restrictToEss>:
 80159a6:	f9b0 3000 	ldrsh.w	r3, [r0]
 80159aa:	2b00      	cmp	r3, #0
 80159ac:	b510      	push	{r4, lr}
 80159ae:	da04      	bge.n	80159ba <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80159b0:	8884      	ldrh	r4, [r0, #4]
 80159b2:	4423      	add	r3, r4
 80159b4:	8083      	strh	r3, [r0, #4]
 80159b6:	2300      	movs	r3, #0
 80159b8:	8003      	strh	r3, [r0, #0]
 80159ba:	f9b0 4000 	ldrsh.w	r4, [r0]
 80159be:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80159c2:	1b09      	subs	r1, r1, r4
 80159c4:	428b      	cmp	r3, r1
 80159c6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80159ca:	bfc8      	it	gt
 80159cc:	8081      	strhgt	r1, [r0, #4]
 80159ce:	2b00      	cmp	r3, #0
 80159d0:	da04      	bge.n	80159dc <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80159d2:	88c1      	ldrh	r1, [r0, #6]
 80159d4:	440b      	add	r3, r1
 80159d6:	80c3      	strh	r3, [r0, #6]
 80159d8:	2300      	movs	r3, #0
 80159da:	8043      	strh	r3, [r0, #2]
 80159dc:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80159e0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80159e4:	1a52      	subs	r2, r2, r1
 80159e6:	4293      	cmp	r3, r2
 80159e8:	bfc8      	it	gt
 80159ea:	80c2      	strhgt	r2, [r0, #6]
 80159ec:	bd10      	pop	{r4, pc}
	...

080159f0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80159f0:	b510      	push	{r4, lr}
 80159f2:	4b10      	ldr	r3, [pc, #64]	; (8015a34 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80159f4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80159f8:	4b0f      	ldr	r3, [pc, #60]	; (8015a38 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80159fa:	460c      	mov	r4, r1
 80159fc:	4620      	mov	r0, r4
 80159fe:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015a02:	f7ff ffd0 	bl	80159a6 <_ZN8touchgfx4Rect10restrictToEss>
 8015a06:	4b0d      	ldr	r3, [pc, #52]	; (8015a3c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8015a08:	6818      	ldr	r0, [r3, #0]
 8015a0a:	b190      	cbz	r0, 8015a32 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8015a0c:	6803      	ldr	r3, [r0, #0]
 8015a0e:	4621      	mov	r1, r4
 8015a10:	689b      	ldr	r3, [r3, #8]
 8015a12:	4798      	blx	r3
 8015a14:	4b0a      	ldr	r3, [pc, #40]	; (8015a40 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8015a16:	6818      	ldr	r0, [r3, #0]
 8015a18:	b118      	cbz	r0, 8015a22 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8015a1a:	6803      	ldr	r3, [r0, #0]
 8015a1c:	4621      	mov	r1, r4
 8015a1e:	689b      	ldr	r3, [r3, #8]
 8015a20:	4798      	blx	r3
 8015a22:	4b08      	ldr	r3, [pc, #32]	; (8015a44 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8015a24:	6818      	ldr	r0, [r3, #0]
 8015a26:	6803      	ldr	r3, [r0, #0]
 8015a28:	4621      	mov	r1, r4
 8015a2a:	69db      	ldr	r3, [r3, #28]
 8015a2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015a30:	4718      	bx	r3
 8015a32:	bd10      	pop	{r4, pc}
 8015a34:	20012daa 	.word	0x20012daa
 8015a38:	20012da8 	.word	0x20012da8
 8015a3c:	20012df8 	.word	0x20012df8
 8015a40:	20012df4 	.word	0x20012df4
 8015a44:	20012db4 	.word	0x20012db4

08015a48 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8015a48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015a4a:	4606      	mov	r6, r0
 8015a4c:	4608      	mov	r0, r1
 8015a4e:	460f      	mov	r7, r1
 8015a50:	f7fa ff97 	bl	8010982 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015a54:	b9e8      	cbnz	r0, 8015a92 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015a56:	f9b7 5000 	ldrsh.w	r5, [r7]
 8015a5a:	f9b6 4000 	ldrsh.w	r4, [r6]
 8015a5e:	42a5      	cmp	r5, r4
 8015a60:	db17      	blt.n	8015a92 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015a62:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8015a66:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8015a6a:	429a      	cmp	r2, r3
 8015a6c:	db11      	blt.n	8015a92 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015a6e:	88b9      	ldrh	r1, [r7, #4]
 8015a70:	440d      	add	r5, r1
 8015a72:	88b1      	ldrh	r1, [r6, #4]
 8015a74:	440c      	add	r4, r1
 8015a76:	b22d      	sxth	r5, r5
 8015a78:	b224      	sxth	r4, r4
 8015a7a:	42a5      	cmp	r5, r4
 8015a7c:	dc09      	bgt.n	8015a92 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015a7e:	88f8      	ldrh	r0, [r7, #6]
 8015a80:	4410      	add	r0, r2
 8015a82:	88f2      	ldrh	r2, [r6, #6]
 8015a84:	4413      	add	r3, r2
 8015a86:	b200      	sxth	r0, r0
 8015a88:	b21b      	sxth	r3, r3
 8015a8a:	4298      	cmp	r0, r3
 8015a8c:	bfcc      	ite	gt
 8015a8e:	2000      	movgt	r0, #0
 8015a90:	2001      	movle	r0, #1
 8015a92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08015a94 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8015a94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015a96:	4604      	mov	r4, r0
 8015a98:	4608      	mov	r0, r1
 8015a9a:	460d      	mov	r5, r1
 8015a9c:	f7fa ff71 	bl	8010982 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015aa0:	b978      	cbnz	r0, 8015ac2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8015aa2:	4620      	mov	r0, r4
 8015aa4:	f7fa ff6d 	bl	8010982 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015aa8:	f9b5 6000 	ldrsh.w	r6, [r5]
 8015aac:	b150      	cbz	r0, 8015ac4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8015aae:	8026      	strh	r6, [r4, #0]
 8015ab0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015ab4:	8063      	strh	r3, [r4, #2]
 8015ab6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8015aba:	80a3      	strh	r3, [r4, #4]
 8015abc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8015ac0:	80e3      	strh	r3, [r4, #6]
 8015ac2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015ac4:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015ac8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015acc:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8015ad0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8015ad4:	88ed      	ldrh	r5, [r5, #6]
 8015ad6:	42b1      	cmp	r1, r6
 8015ad8:	460f      	mov	r7, r1
 8015ada:	bfa8      	it	ge
 8015adc:	4637      	movge	r7, r6
 8015ade:	4293      	cmp	r3, r2
 8015ae0:	4618      	mov	r0, r3
 8015ae2:	4466      	add	r6, ip
 8015ae4:	bfa8      	it	ge
 8015ae6:	4610      	movge	r0, r2
 8015ae8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015aec:	8027      	strh	r7, [r4, #0]
 8015aee:	442a      	add	r2, r5
 8015af0:	88e5      	ldrh	r5, [r4, #6]
 8015af2:	8060      	strh	r0, [r4, #2]
 8015af4:	4461      	add	r1, ip
 8015af6:	442b      	add	r3, r5
 8015af8:	b236      	sxth	r6, r6
 8015afa:	b209      	sxth	r1, r1
 8015afc:	b212      	sxth	r2, r2
 8015afe:	b21b      	sxth	r3, r3
 8015b00:	428e      	cmp	r6, r1
 8015b02:	bfac      	ite	ge
 8015b04:	ebc7 0106 	rsbge	r1, r7, r6
 8015b08:	ebc7 0101 	rsblt	r1, r7, r1
 8015b0c:	429a      	cmp	r2, r3
 8015b0e:	bfac      	ite	ge
 8015b10:	ebc0 0202 	rsbge	r2, r0, r2
 8015b14:	ebc0 0203 	rsblt	r2, r0, r3
 8015b18:	80a1      	strh	r1, [r4, #4]
 8015b1a:	80e2      	strh	r2, [r4, #6]
 8015b1c:	e7d1      	b.n	8015ac2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08015b20 <_ZN8touchgfx11Application11getInstanceEv>:
 8015b20:	4b01      	ldr	r3, [pc, #4]	; (8015b28 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8015b22:	6818      	ldr	r0, [r3, #0]
 8015b24:	4770      	bx	lr
 8015b26:	bf00      	nop
 8015b28:	20012e08 	.word	0x20012e08

08015b2c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8015b2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015b2e:	4b10      	ldr	r3, [pc, #64]	; (8015b70 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8015b30:	781b      	ldrb	r3, [r3, #0]
 8015b32:	4605      	mov	r5, r0
 8015b34:	b1d3      	cbz	r3, 8015b6c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8015b36:	4b0f      	ldr	r3, [pc, #60]	; (8015b74 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8015b38:	4f0f      	ldr	r7, [pc, #60]	; (8015b78 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8015b3a:	881c      	ldrh	r4, [r3, #0]
 8015b3c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8015b40:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8015b44:	42a3      	cmp	r3, r4
 8015b46:	d90e      	bls.n	8015b66 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8015b48:	683b      	ldr	r3, [r7, #0]
 8015b4a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015b4e:	b10a      	cbz	r2, 8015b54 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8015b50:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015b52:	b900      	cbnz	r0, 8015b56 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8015b54:	6898      	ldr	r0, [r3, #8]
 8015b56:	6803      	ldr	r3, [r0, #0]
 8015b58:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8015b5c:	69db      	ldr	r3, [r3, #28]
 8015b5e:	3401      	adds	r4, #1
 8015b60:	4798      	blx	r3
 8015b62:	b2a4      	uxth	r4, r4
 8015b64:	e7ec      	b.n	8015b40 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8015b66:	2300      	movs	r3, #0
 8015b68:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8015b6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015b6e:	bf00      	nop
 8015b70:	20012db2 	.word	0x20012db2
 8015b74:	20000088 	.word	0x20000088
 8015b78:	20012db4 	.word	0x20012db4

08015b7c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8015b7c:	b510      	push	{r4, lr}
 8015b7e:	2300      	movs	r3, #0
 8015b80:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8015b84:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015b88:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015b8c:	4604      	mov	r4, r0
 8015b8e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015b92:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8015b96:	429a      	cmp	r2, r3
 8015b98:	d90e      	bls.n	8015bb8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8015b9a:	18e2      	adds	r2, r4, r3
 8015b9c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8015ba0:	b122      	cbz	r2, 8015bac <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8015ba2:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8015ba6:	6803      	ldr	r3, [r0, #0]
 8015ba8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015baa:	4798      	blx	r3
 8015bac:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015bb0:	3301      	adds	r3, #1
 8015bb2:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015bb6:	e7ea      	b.n	8015b8e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8015bb8:	bd10      	pop	{r4, pc}

08015bba <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8015bba:	b530      	push	{r4, r5, lr}
 8015bbc:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8015bc0:	2200      	movs	r2, #0
 8015bc2:	b293      	uxth	r3, r2
 8015bc4:	429d      	cmp	r5, r3
 8015bc6:	d90e      	bls.n	8015be6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015bc8:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8015bcc:	428b      	cmp	r3, r1
 8015bce:	d10b      	bne.n	8015be8 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015bd0:	1884      	adds	r4, r0, r2
 8015bd2:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8015bd6:	b13b      	cbz	r3, 8015be8 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015bd8:	3b01      	subs	r3, #1
 8015bda:	b2db      	uxtb	r3, r3
 8015bdc:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8015be0:	b90b      	cbnz	r3, 8015be6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015be2:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8015be6:	bd30      	pop	{r4, r5, pc}
 8015be8:	3201      	adds	r2, #1
 8015bea:	e7ea      	b.n	8015bc2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08015bec <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8015bec:	2300      	movs	r3, #0
 8015bee:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015bf2:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8015bf6:	30a4      	adds	r0, #164	; 0xa4
 8015bf8:	f802 3b01 	strb.w	r3, [r2], #1
 8015bfc:	4282      	cmp	r2, r0
 8015bfe:	d1fb      	bne.n	8015bf8 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8015c00:	4770      	bx	lr
	...

08015c04 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8015c04:	b570      	push	{r4, r5, r6, lr}
 8015c06:	4c0b      	ldr	r4, [pc, #44]	; (8015c34 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8015c08:	4605      	mov	r5, r0
 8015c0a:	6820      	ldr	r0, [r4, #0]
 8015c0c:	460e      	mov	r6, r1
 8015c0e:	b110      	cbz	r0, 8015c16 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8015c10:	6803      	ldr	r3, [r0, #0]
 8015c12:	695b      	ldr	r3, [r3, #20]
 8015c14:	4798      	blx	r3
 8015c16:	1d28      	adds	r0, r5, #4
 8015c18:	f7ff ffe8 	bl	8015bec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015c1c:	6026      	str	r6, [r4, #0]
 8015c1e:	6833      	ldr	r3, [r6, #0]
 8015c20:	4630      	mov	r0, r6
 8015c22:	68db      	ldr	r3, [r3, #12]
 8015c24:	4798      	blx	r3
 8015c26:	682b      	ldr	r3, [r5, #0]
 8015c28:	4628      	mov	r0, r5
 8015c2a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015c2c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015c30:	4718      	bx	r3
 8015c32:	bf00      	nop
 8015c34:	20012df8 	.word	0x20012df8

08015c38 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8015c38:	2300      	movs	r3, #0
 8015c3a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8015c3e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8015c42:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015c44:	461a      	mov	r2, r3
 8015c46:	461c      	mov	r4, r3
 8015c48:	461d      	mov	r5, r3
 8015c4a:	459c      	cmp	ip, r3
 8015c4c:	dd1a      	ble.n	8015c84 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8015c4e:	18c6      	adds	r6, r0, r3
 8015c50:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8015c54:	b16e      	cbz	r6, 8015c72 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8015c56:	429a      	cmp	r2, r3
 8015c58:	d008      	beq.n	8015c6c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8015c5a:	fa1f fe82 	uxth.w	lr, r2
 8015c5e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8015c62:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8015c66:	1887      	adds	r7, r0, r2
 8015c68:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8015c6c:	3201      	adds	r2, #1
 8015c6e:	3301      	adds	r3, #1
 8015c70:	e7eb      	b.n	8015c4a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8015c72:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8015c76:	4299      	cmp	r1, r3
 8015c78:	bfa8      	it	ge
 8015c7a:	3501      	addge	r5, #1
 8015c7c:	429e      	cmp	r6, r3
 8015c7e:	bfc8      	it	gt
 8015c80:	3401      	addgt	r4, #1
 8015c82:	e7f4      	b.n	8015c6e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8015c84:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8015c88:	1b49      	subs	r1, r1, r5
 8015c8a:	1b1b      	subs	r3, r3, r4
 8015c8c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8015c90:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015c94:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015c98:	4293      	cmp	r3, r2
 8015c9a:	dd03      	ble.n	8015ca4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8015c9c:	3b01      	subs	r3, #1
 8015c9e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015ca2:	e7f7      	b.n	8015c94 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8015ca4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08015ca8 <_ZN8touchgfx11Application15handleTickEventEv>:
 8015ca8:	b570      	push	{r4, r5, r6, lr}
 8015caa:	4d16      	ldr	r5, [pc, #88]	; (8015d04 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8015cac:	4604      	mov	r4, r0
 8015cae:	6828      	ldr	r0, [r5, #0]
 8015cb0:	b140      	cbz	r0, 8015cc4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015cb2:	7a03      	ldrb	r3, [r0, #8]
 8015cb4:	b933      	cbnz	r3, 8015cc4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015cb6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015cba:	6803      	ldr	r3, [r0, #0]
 8015cbc:	689b      	ldr	r3, [r3, #8]
 8015cbe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015cc2:	4718      	bx	r3
 8015cc4:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8015cc8:	4e0f      	ldr	r6, [pc, #60]	; (8015d08 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8015cca:	b973      	cbnz	r3, 8015cea <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015ccc:	b168      	cbz	r0, 8015cea <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015cce:	7a03      	ldrb	r3, [r0, #8]
 8015cd0:	b15b      	cbz	r3, 8015cea <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015cd2:	6830      	ldr	r0, [r6, #0]
 8015cd4:	b110      	cbz	r0, 8015cdc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8015cd6:	6803      	ldr	r3, [r0, #0]
 8015cd8:	691b      	ldr	r3, [r3, #16]
 8015cda:	4798      	blx	r3
 8015cdc:	6828      	ldr	r0, [r5, #0]
 8015cde:	6803      	ldr	r3, [r0, #0]
 8015ce0:	68db      	ldr	r3, [r3, #12]
 8015ce2:	4798      	blx	r3
 8015ce4:	2301      	movs	r3, #1
 8015ce6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015cea:	3404      	adds	r4, #4
 8015cec:	4620      	mov	r0, r4
 8015cee:	f7ff ff45 	bl	8015b7c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8015cf2:	4620      	mov	r0, r4
 8015cf4:	f7ff ffa0 	bl	8015c38 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015cf8:	6830      	ldr	r0, [r6, #0]
 8015cfa:	b110      	cbz	r0, 8015d02 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8015cfc:	6803      	ldr	r3, [r0, #0]
 8015cfe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015d00:	e7dd      	b.n	8015cbe <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8015d02:	bd70      	pop	{r4, r5, r6, pc}
 8015d04:	20012dfc 	.word	0x20012dfc
 8015d08:	20012df8 	.word	0x20012df8

08015d0c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8015d0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015d0e:	2300      	movs	r3, #0
 8015d10:	4604      	mov	r4, r0
 8015d12:	460d      	mov	r5, r1
 8015d14:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8015d18:	4618      	mov	r0, r3
 8015d1a:	b29a      	uxth	r2, r3
 8015d1c:	4291      	cmp	r1, r2
 8015d1e:	d911      	bls.n	8015d44 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8015d20:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8015d24:	18e6      	adds	r6, r4, r3
 8015d26:	42af      	cmp	r7, r5
 8015d28:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8015d2c:	d105      	bne.n	8015d3a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8015d2e:	2aff      	cmp	r2, #255	; 0xff
 8015d30:	d002      	beq.n	8015d38 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015d32:	3201      	adds	r2, #1
 8015d34:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8015d38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015d3a:	2a00      	cmp	r2, #0
 8015d3c:	bf08      	it	eq
 8015d3e:	2001      	moveq	r0, #1
 8015d40:	3301      	adds	r3, #1
 8015d42:	e7ea      	b.n	8015d1a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8015d44:	b120      	cbz	r0, 8015d50 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8015d46:	2920      	cmp	r1, #32
 8015d48:	d102      	bne.n	8015d50 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8015d4a:	4620      	mov	r0, r4
 8015d4c:	f7ff ff74 	bl	8015c38 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015d50:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8015d54:	2b1f      	cmp	r3, #31
 8015d56:	d8ef      	bhi.n	8015d38 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015d58:	18e2      	adds	r2, r4, r3
 8015d5a:	2101      	movs	r1, #1
 8015d5c:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8015d60:	185a      	adds	r2, r3, r1
 8015d62:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8015d66:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8015d6a:	e7e5      	b.n	8015d38 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08015d6c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8015d6c:	4603      	mov	r3, r0
 8015d6e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8015d72:	2200      	movs	r2, #0
 8015d74:	801a      	strh	r2, [r3, #0]
 8015d76:	805a      	strh	r2, [r3, #2]
 8015d78:	809a      	strh	r2, [r3, #4]
 8015d7a:	80da      	strh	r2, [r3, #6]
 8015d7c:	3308      	adds	r3, #8
 8015d7e:	428b      	cmp	r3, r1
 8015d80:	d1f8      	bne.n	8015d74 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8015d82:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8015d86:	4770      	bx	lr

08015d88 <_ZN8touchgfx11ApplicationC1Ev>:
 8015d88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015d8a:	4606      	mov	r6, r0
 8015d8c:	4b1c      	ldr	r3, [pc, #112]	; (8015e00 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8015d8e:	f846 3b04 	str.w	r3, [r6], #4
 8015d92:	4604      	mov	r4, r0
 8015d94:	2500      	movs	r5, #0
 8015d96:	22a8      	movs	r2, #168	; 0xa8
 8015d98:	2100      	movs	r1, #0
 8015d9a:	4630      	mov	r0, r6
 8015d9c:	f015 f823 	bl	802ade6 <memset>
 8015da0:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8015da4:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015da8:	f7ff ffe0 	bl	8015d6c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015dac:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015db0:	f7ff ffdc 	bl	8015d6c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015db4:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8015db8:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8015dbc:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8015dc0:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8015dc4:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8015dc8:	490e      	ldr	r1, [pc, #56]	; (8015e04 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8015dca:	480f      	ldr	r0, [pc, #60]	; (8015e08 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8015dcc:	4f0f      	ldr	r7, [pc, #60]	; (8015e0c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8015dce:	f010 fde9 	bl	80269a4 <CRC_Lock>
 8015dd2:	4b0f      	ldr	r3, [pc, #60]	; (8015e10 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8015dd4:	b158      	cbz	r0, 8015dee <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8015dd6:	801d      	strh	r5, [r3, #0]
 8015dd8:	4a0e      	ldr	r2, [pc, #56]	; (8015e14 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8015dda:	2300      	movs	r3, #0
 8015ddc:	6013      	str	r3, [r2, #0]
 8015dde:	4a0e      	ldr	r2, [pc, #56]	; (8015e18 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8015de0:	603b      	str	r3, [r7, #0]
 8015de2:	4630      	mov	r0, r6
 8015de4:	6013      	str	r3, [r2, #0]
 8015de6:	f7ff ff01 	bl	8015bec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015dea:	4620      	mov	r0, r4
 8015dec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015dee:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8015df2:	2002      	movs	r0, #2
 8015df4:	801a      	strh	r2, [r3, #0]
 8015df6:	6038      	str	r0, [r7, #0]
 8015df8:	f001 fb4a 	bl	8017490 <_ZN8touchgfx6Screen4drawEv>
 8015dfc:	e7ec      	b.n	8015dd8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8015dfe:	bf00      	nop
 8015e00:	0802f1e8 	.word	0x0802f1e8
 8015e04:	b5e8b5cd 	.word	0xb5e8b5cd
 8015e08:	f407a5c2 	.word	0xf407a5c2
 8015e0c:	20012df8 	.word	0x20012df8
 8015e10:	20000088 	.word	0x20000088
 8015e14:	20012e08 	.word	0x20012e08
 8015e18:	20012dfc 	.word	0x20012dfc

08015e1c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8015e1c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8015e20:	3b01      	subs	r3, #1
 8015e22:	b29b      	uxth	r3, r3
 8015e24:	428b      	cmp	r3, r1
 8015e26:	b510      	push	{r4, lr}
 8015e28:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8015e2c:	d908      	bls.n	8015e40 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8015e2e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8015e32:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8015e36:	681a      	ldr	r2, [r3, #0]
 8015e38:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8015e3c:	685a      	ldr	r2, [r3, #4]
 8015e3e:	6062      	str	r2, [r4, #4]
 8015e40:	bd10      	pop	{r4, pc}
	...

08015e44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8015e44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e48:	4b8f      	ldr	r3, [pc, #572]	; (8016088 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8015e4a:	b08f      	sub	sp, #60	; 0x3c
 8015e4c:	ac0a      	add	r4, sp, #40	; 0x28
 8015e4e:	e884 0006 	stmia.w	r4, {r1, r2}
 8015e52:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015e56:	4b8d      	ldr	r3, [pc, #564]	; (801608c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8015e58:	4683      	mov	fp, r0
 8015e5a:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015e5e:	4620      	mov	r0, r4
 8015e60:	f7ff fda1 	bl	80159a6 <_ZN8touchgfx4Rect10restrictToEss>
 8015e64:	4620      	mov	r0, r4
 8015e66:	f7fa fd8c 	bl	8010982 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015e6a:	2800      	cmp	r0, #0
 8015e6c:	d16a      	bne.n	8015f44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015e6e:	9403      	str	r4, [sp, #12]
 8015e70:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8015e74:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8015e78:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8015e7c:	35a4      	adds	r5, #164	; 0xa4
 8015e7e:	9301      	str	r3, [sp, #4]
 8015e80:	b15c      	cbz	r4, 8015e9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8015e82:	4629      	mov	r1, r5
 8015e84:	9803      	ldr	r0, [sp, #12]
 8015e86:	f7ff fddf 	bl	8015a48 <_ZNK8touchgfx4Rect8includesERKS0_>
 8015e8a:	3c01      	subs	r4, #1
 8015e8c:	b118      	cbz	r0, 8015e96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8015e8e:	b2a1      	uxth	r1, r4
 8015e90:	9801      	ldr	r0, [sp, #4]
 8015e92:	f7ff ffc3 	bl	8015e1c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015e96:	3d08      	subs	r5, #8
 8015e98:	e7f2      	b.n	8015e80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8015e9a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8015e9e:	f8cd a010 	str.w	sl, [sp, #16]
 8015ea2:	f10a 33ff 	add.w	r3, sl, #4294967295
 8015ea6:	9302      	str	r3, [sp, #8]
 8015ea8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8015eac:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8015eb0:	9306      	str	r3, [sp, #24]
 8015eb2:	445c      	add	r4, fp
 8015eb4:	2500      	movs	r5, #0
 8015eb6:	4626      	mov	r6, r4
 8015eb8:	f8cd a014 	str.w	sl, [sp, #20]
 8015ebc:	462f      	mov	r7, r5
 8015ebe:	9b05      	ldr	r3, [sp, #20]
 8015ec0:	2b00      	cmp	r3, #0
 8015ec2:	d073      	beq.n	8015fac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8015ec4:	9903      	ldr	r1, [sp, #12]
 8015ec6:	4630      	mov	r0, r6
 8015ec8:	f7ff fd4b 	bl	8015962 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015ecc:	b350      	cbz	r0, 8015f24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8015ece:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8015ed2:	f9b6 c000 	ldrsh.w	ip, [r6]
 8015ed6:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8015eda:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8015ede:	45e6      	cmp	lr, ip
 8015ee0:	db33      	blt.n	8015f4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015ee2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015ee6:	88b3      	ldrh	r3, [r6, #4]
 8015ee8:	4472      	add	r2, lr
 8015eea:	4463      	add	r3, ip
 8015eec:	b212      	sxth	r2, r2
 8015eee:	b21b      	sxth	r3, r3
 8015ef0:	429a      	cmp	r2, r3
 8015ef2:	dc2a      	bgt.n	8015f4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015ef4:	88f3      	ldrh	r3, [r6, #6]
 8015ef6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015efa:	fa1f f289 	uxth.w	r2, r9
 8015efe:	4413      	add	r3, r2
 8015f00:	b29b      	uxth	r3, r3
 8015f02:	45c8      	cmp	r8, r9
 8015f04:	fa1f fc88 	uxth.w	ip, r8
 8015f08:	fa0f fe83 	sxth.w	lr, r3
 8015f0c:	db0f      	blt.n	8015f2e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8015f0e:	eba3 030c 	sub.w	r3, r3, ip
 8015f12:	1ac9      	subs	r1, r1, r3
 8015f14:	b209      	sxth	r1, r1
 8015f16:	2900      	cmp	r1, #0
 8015f18:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015f1c:	dd12      	ble.n	8015f44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015f1e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8015f22:	4605      	mov	r5, r0
 8015f24:	9b05      	ldr	r3, [sp, #20]
 8015f26:	3b01      	subs	r3, #1
 8015f28:	9305      	str	r3, [sp, #20]
 8015f2a:	3e08      	subs	r6, #8
 8015f2c:	e7c7      	b.n	8015ebe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8015f2e:	4461      	add	r1, ip
 8015f30:	b209      	sxth	r1, r1
 8015f32:	4571      	cmp	r1, lr
 8015f34:	dc38      	bgt.n	8015fa8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015f36:	eba2 020c 	sub.w	r2, r2, ip
 8015f3a:	b212      	sxth	r2, r2
 8015f3c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8015f40:	2a00      	cmp	r2, #0
 8015f42:	dcee      	bgt.n	8015f22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8015f44:	b00f      	add	sp, #60	; 0x3c
 8015f46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015f4a:	45c8      	cmp	r8, r9
 8015f4c:	db2c      	blt.n	8015fa8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015f4e:	88f3      	ldrh	r3, [r6, #6]
 8015f50:	4499      	add	r9, r3
 8015f52:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8015f56:	4498      	add	r8, r3
 8015f58:	fa0f f989 	sxth.w	r9, r9
 8015f5c:	fa0f f888 	sxth.w	r8, r8
 8015f60:	45c1      	cmp	r9, r8
 8015f62:	db21      	blt.n	8015fa8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015f64:	88b3      	ldrh	r3, [r6, #4]
 8015f66:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8015f6a:	fa1f f28c 	uxth.w	r2, ip
 8015f6e:	4413      	add	r3, r2
 8015f70:	b29b      	uxth	r3, r3
 8015f72:	45e6      	cmp	lr, ip
 8015f74:	fa1f f88e 	uxth.w	r8, lr
 8015f78:	fa0f f983 	sxth.w	r9, r3
 8015f7c:	db0a      	blt.n	8015f94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8015f7e:	eba3 0308 	sub.w	r3, r3, r8
 8015f82:	1ac9      	subs	r1, r1, r3
 8015f84:	b209      	sxth	r1, r1
 8015f86:	2900      	cmp	r1, #0
 8015f88:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8015f8c:	ddda      	ble.n	8015f44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015f8e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8015f92:	e7c6      	b.n	8015f22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8015f94:	4441      	add	r1, r8
 8015f96:	b209      	sxth	r1, r1
 8015f98:	4549      	cmp	r1, r9
 8015f9a:	dc05      	bgt.n	8015fa8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015f9c:	eba2 0208 	sub.w	r2, r2, r8
 8015fa0:	b212      	sxth	r2, r2
 8015fa2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8015fa6:	e7cb      	b.n	8015f40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8015fa8:	4607      	mov	r7, r0
 8015faa:	e7bb      	b.n	8015f24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8015fac:	2d00      	cmp	r5, #0
 8015fae:	d181      	bne.n	8015eb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8015fb0:	2f00      	cmp	r7, #0
 8015fb2:	f000 81dd 	beq.w	8016370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015fb6:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8015fba:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8015fbe:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8015fc2:	b2b3      	uxth	r3, r6
 8015fc4:	9305      	str	r3, [sp, #20]
 8015fc6:	9a05      	ldr	r2, [sp, #20]
 8015fc8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8015fcc:	4413      	add	r3, r2
 8015fce:	b2ba      	uxth	r2, r7
 8015fd0:	4492      	add	sl, r2
 8015fd2:	b29b      	uxth	r3, r3
 8015fd4:	fa1f fa8a 	uxth.w	sl, sl
 8015fd8:	fa0f f883 	sxth.w	r8, r3
 8015fdc:	fa0f f98a 	sxth.w	r9, sl
 8015fe0:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8015fe4:	9b04      	ldr	r3, [sp, #16]
 8015fe6:	2b00      	cmp	r3, #0
 8015fe8:	d052      	beq.n	8016090 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8015fea:	9903      	ldr	r1, [sp, #12]
 8015fec:	4620      	mov	r0, r4
 8015fee:	f7ff fcb8 	bl	8015962 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015ff2:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8015ff6:	b1c0      	cbz	r0, 801602a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015ff8:	f9b4 e000 	ldrsh.w	lr, [r4]
 8015ffc:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8016000:	4576      	cmp	r6, lr
 8016002:	dc22      	bgt.n	801604a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016004:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016008:	44f4      	add	ip, lr
 801600a:	fa0f fc8c 	sxth.w	ip, ip
 801600e:	45e0      	cmp	r8, ip
 8016010:	db1b      	blt.n	801604a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016012:	428f      	cmp	r7, r1
 8016014:	fa1f fc81 	uxth.w	ip, r1
 8016018:	88e1      	ldrh	r1, [r4, #6]
 801601a:	dc0d      	bgt.n	8016038 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801601c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8016020:	eba1 010c 	sub.w	r1, r1, ip
 8016024:	f8a4 9002 	strh.w	r9, [r4, #2]
 8016028:	80e1      	strh	r1, [r4, #6]
 801602a:	4628      	mov	r0, r5
 801602c:	9904      	ldr	r1, [sp, #16]
 801602e:	3901      	subs	r1, #1
 8016030:	9104      	str	r1, [sp, #16]
 8016032:	3c08      	subs	r4, #8
 8016034:	4605      	mov	r5, r0
 8016036:	e7d3      	b.n	8015fe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8016038:	4461      	add	r1, ip
 801603a:	b209      	sxth	r1, r1
 801603c:	4549      	cmp	r1, r9
 801603e:	dcf5      	bgt.n	801602c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016040:	eba2 0c0c 	sub.w	ip, r2, ip
 8016044:	f8a4 c006 	strh.w	ip, [r4, #6]
 8016048:	e7ef      	b.n	801602a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801604a:	428f      	cmp	r7, r1
 801604c:	dcee      	bgt.n	801602c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801604e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8016052:	4461      	add	r1, ip
 8016054:	b209      	sxth	r1, r1
 8016056:	4589      	cmp	r9, r1
 8016058:	dbe8      	blt.n	801602c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801605a:	4576      	cmp	r6, lr
 801605c:	fa1f fc8e 	uxth.w	ip, lr
 8016060:	88a1      	ldrh	r1, [r4, #4]
 8016062:	dc07      	bgt.n	8016074 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8016064:	eba3 0c0c 	sub.w	ip, r3, ip
 8016068:	eba1 010c 	sub.w	r1, r1, ip
 801606c:	f8a4 8000 	strh.w	r8, [r4]
 8016070:	80a1      	strh	r1, [r4, #4]
 8016072:	e7da      	b.n	801602a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016074:	4461      	add	r1, ip
 8016076:	b209      	sxth	r1, r1
 8016078:	4588      	cmp	r8, r1
 801607a:	dbd7      	blt.n	801602c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801607c:	9905      	ldr	r1, [sp, #20]
 801607e:	eba1 0c0c 	sub.w	ip, r1, ip
 8016082:	f8a4 c004 	strh.w	ip, [r4, #4]
 8016086:	e7d0      	b.n	801602a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016088:	20012daa 	.word	0x20012daa
 801608c:	20012da8 	.word	0x20012da8
 8016090:	2d00      	cmp	r5, #0
 8016092:	f000 816d 	beq.w	8016370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016096:	9b06      	ldr	r3, [sp, #24]
 8016098:	445b      	add	r3, fp
 801609a:	461c      	mov	r4, r3
 801609c:	9b02      	ldr	r3, [sp, #8]
 801609e:	3301      	adds	r3, #1
 80160a0:	f000 8166 	beq.w	8016370 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80160a4:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 80160a8:	4629      	mov	r1, r5
 80160aa:	9803      	ldr	r0, [sp, #12]
 80160ac:	f7ff fccc 	bl	8015a48 <_ZNK8touchgfx4Rect8includesERKS0_>
 80160b0:	b120      	cbz	r0, 80160bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 80160b2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80160b6:	9801      	ldr	r0, [sp, #4]
 80160b8:	f7ff feb0 	bl	8015e1c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80160bc:	9903      	ldr	r1, [sp, #12]
 80160be:	4628      	mov	r0, r5
 80160c0:	f7ff fc4f 	bl	8015962 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80160c4:	2800      	cmp	r0, #0
 80160c6:	f000 809c 	beq.w	8016202 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80160ca:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 80160ce:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80160d2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80160d6:	9309      	str	r3, [sp, #36]	; 0x24
 80160d8:	fa1f f189 	uxth.w	r1, r9
 80160dc:	eb01 0c03 	add.w	ip, r1, r3
 80160e0:	fa1f fa8c 	uxth.w	sl, ip
 80160e4:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80160e8:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 80160ec:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 80160f0:	b283      	uxth	r3, r0
 80160f2:	eb03 050c 	add.w	r5, r3, ip
 80160f6:	b2ad      	uxth	r5, r5
 80160f8:	9505      	str	r5, [sp, #20]
 80160fa:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 80160fe:	9504      	str	r5, [sp, #16]
 8016100:	4548      	cmp	r0, r9
 8016102:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8016106:	f340 8099 	ble.w	801623c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801610a:	1a5b      	subs	r3, r3, r1
 801610c:	b29b      	uxth	r3, r3
 801610e:	4596      	cmp	lr, r2
 8016110:	fa0f f08a 	sxth.w	r0, sl
 8016114:	b21e      	sxth	r6, r3
 8016116:	dd2e      	ble.n	8016176 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8016118:	9f02      	ldr	r7, [sp, #8]
 801611a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801611e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8016122:	9f04      	ldr	r7, [sp, #16]
 8016124:	1a3f      	subs	r7, r7, r0
 8016126:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801612a:	fa1f fe8e 	uxth.w	lr, lr
 801612e:	b292      	uxth	r2, r2
 8016130:	ebae 0102 	sub.w	r1, lr, r2
 8016134:	44a6      	add	lr, r4
 8016136:	4402      	add	r2, r0
 8016138:	b289      	uxth	r1, r1
 801613a:	fa0f fe8e 	sxth.w	lr, lr
 801613e:	b212      	sxth	r2, r2
 8016140:	b20d      	sxth	r5, r1
 8016142:	ebae 0202 	sub.w	r2, lr, r2
 8016146:	436f      	muls	r7, r5
 8016148:	4372      	muls	r2, r6
 801614a:	4297      	cmp	r7, r2
 801614c:	db09      	blt.n	8016162 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801614e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8016152:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8016156:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801615a:	449c      	add	ip, r3
 801615c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016160:	e686      	b.n	8015e70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016162:	4421      	add	r1, r4
 8016164:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8016168:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 801616c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016170:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016174:	e67c      	b.n	8015e70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016176:	9f04      	ldr	r7, [sp, #16]
 8016178:	42b8      	cmp	r0, r7
 801617a:	da27      	bge.n	80161cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801617c:	9902      	ldr	r1, [sp, #8]
 801617e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8016182:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8016186:	eb05 010e 	add.w	r1, r5, lr
 801618a:	fa1f f881 	uxth.w	r8, r1
 801618e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8016192:	4411      	add	r1, r2
 8016194:	eba1 0108 	sub.w	r1, r1, r8
 8016198:	b289      	uxth	r1, r1
 801619a:	fa0f f988 	sxth.w	r9, r8
 801619e:	eba2 020e 	sub.w	r2, r2, lr
 80161a2:	fa0f f881 	sxth.w	r8, r1
 80161a6:	1a3f      	subs	r7, r7, r0
 80161a8:	4372      	muls	r2, r6
 80161aa:	fb08 f707 	mul.w	r7, r8, r7
 80161ae:	42ba      	cmp	r2, r7
 80161b0:	dc06      	bgt.n	80161c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 80161b2:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 80161b6:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 80161ba:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 80161be:	e7ca      	b.n	8016156 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80161c0:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 80161c4:	4429      	add	r1, r5
 80161c6:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80161ca:	e651      	b.n	8015e70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80161cc:	9805      	ldr	r0, [sp, #20]
 80161ce:	ebaa 0000 	sub.w	r0, sl, r0
 80161d2:	b280      	uxth	r0, r0
 80161d4:	2d06      	cmp	r5, #6
 80161d6:	fa0f fe80 	sxth.w	lr, r0
 80161da:	d817      	bhi.n	801620c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80161dc:	9b04      	ldr	r3, [sp, #16]
 80161de:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80161e2:	1c6b      	adds	r3, r5, #1
 80161e4:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 80161e8:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 80161ec:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80161f0:	9b01      	ldr	r3, [sp, #4]
 80161f2:	9801      	ldr	r0, [sp, #4]
 80161f4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80161f8:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80161fc:	805a      	strh	r2, [r3, #2]
 80161fe:	809e      	strh	r6, [r3, #4]
 8016200:	80d9      	strh	r1, [r3, #6]
 8016202:	9b02      	ldr	r3, [sp, #8]
 8016204:	3b01      	subs	r3, #1
 8016206:	9302      	str	r3, [sp, #8]
 8016208:	3c08      	subs	r4, #8
 801620a:	e747      	b.n	801609c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801620c:	9a02      	ldr	r2, [sp, #8]
 801620e:	45b6      	cmp	lr, r6
 8016210:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016214:	db0d      	blt.n	8016232 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8016216:	449c      	add	ip, r3
 8016218:	fa1f fc8c 	uxth.w	ip, ip
 801621c:	445a      	add	r2, fp
 801621e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016222:	448c      	add	ip, r1
 8016224:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016228:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 801622c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8016230:	e61e      	b.n	8015e70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016232:	445a      	add	r2, fp
 8016234:	4484      	add	ip, r0
 8016236:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801623a:	e78f      	b.n	801615c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801623c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8016240:	fa1f f18e 	uxth.w	r1, lr
 8016244:	eb01 0806 	add.w	r8, r1, r6
 8016248:	b293      	uxth	r3, r2
 801624a:	fa1f f888 	uxth.w	r8, r8
 801624e:	9306      	str	r3, [sp, #24]
 8016250:	fa0f f388 	sxth.w	r3, r8
 8016254:	9307      	str	r3, [sp, #28]
 8016256:	9f06      	ldr	r7, [sp, #24]
 8016258:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801625c:	443b      	add	r3, r7
 801625e:	b29b      	uxth	r3, r3
 8016260:	4596      	cmp	lr, r2
 8016262:	9308      	str	r3, [sp, #32]
 8016264:	da24      	bge.n	80162b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8016266:	9905      	ldr	r1, [sp, #20]
 8016268:	eba3 0308 	sub.w	r3, r3, r8
 801626c:	ebaa 0401 	sub.w	r4, sl, r1
 8016270:	b2a4      	uxth	r4, r4
 8016272:	b29b      	uxth	r3, r3
 8016274:	b225      	sxth	r5, r4
 8016276:	b219      	sxth	r1, r3
 8016278:	eba2 020e 	sub.w	r2, r2, lr
 801627c:	eba9 0000 	sub.w	r0, r9, r0
 8016280:	436a      	muls	r2, r5
 8016282:	4348      	muls	r0, r1
 8016284:	4282      	cmp	r2, r0
 8016286:	9a02      	ldr	r2, [sp, #8]
 8016288:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801628c:	445a      	add	r2, fp
 801628e:	dc06      	bgt.n	801629e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8016290:	9b07      	ldr	r3, [sp, #28]
 8016292:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8016296:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801629a:	44a4      	add	ip, r4
 801629c:	e75e      	b.n	801615c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801629e:	9904      	ldr	r1, [sp, #16]
 80162a0:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 80162a4:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 80162a8:	4433      	add	r3, r6
 80162aa:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80162ae:	e5df      	b.n	8015e70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80162b0:	9f06      	ldr	r7, [sp, #24]
 80162b2:	9b04      	ldr	r3, [sp, #16]
 80162b4:	1bc9      	subs	r1, r1, r7
 80162b6:	fa0f f78a 	sxth.w	r7, sl
 80162ba:	b289      	uxth	r1, r1
 80162bc:	429f      	cmp	r7, r3
 80162be:	fa0f fe81 	sxth.w	lr, r1
 80162c2:	dd23      	ble.n	801630c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80162c4:	9a05      	ldr	r2, [sp, #20]
 80162c6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80162ca:	9d07      	ldr	r5, [sp, #28]
 80162cc:	ebaa 0202 	sub.w	r2, sl, r2
 80162d0:	b292      	uxth	r2, r2
 80162d2:	eba5 0a03 	sub.w	sl, r5, r3
 80162d6:	b214      	sxth	r4, r2
 80162d8:	eba9 0000 	sub.w	r0, r9, r0
 80162dc:	9b02      	ldr	r3, [sp, #8]
 80162de:	fb0e f000 	mul.w	r0, lr, r0
 80162e2:	fb04 fa0a 	mul.w	sl, r4, sl
 80162e6:	00db      	lsls	r3, r3, #3
 80162e8:	4550      	cmp	r0, sl
 80162ea:	445b      	add	r3, fp
 80162ec:	db03      	blt.n	80162f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 80162ee:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 80162f2:	4494      	add	ip, r2
 80162f4:	e732      	b.n	801615c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80162f6:	9a04      	ldr	r2, [sp, #16]
 80162f8:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 80162fc:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8016300:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8016304:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016308:	4431      	add	r1, r6
 801630a:	e75c      	b.n	80161c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801630c:	9b08      	ldr	r3, [sp, #32]
 801630e:	eba3 0308 	sub.w	r3, r3, r8
 8016312:	b29b      	uxth	r3, r3
 8016314:	2d06      	cmp	r5, #6
 8016316:	b218      	sxth	r0, r3
 8016318:	d813      	bhi.n	8016342 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801631a:	9b07      	ldr	r3, [sp, #28]
 801631c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8016320:	1c6b      	adds	r3, r5, #1
 8016322:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8016326:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801632a:	9b01      	ldr	r3, [sp, #4]
 801632c:	9901      	ldr	r1, [sp, #4]
 801632e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016332:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8016336:	805a      	strh	r2, [r3, #2]
 8016338:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801633a:	809a      	strh	r2, [r3, #4]
 801633c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8016340:	e75f      	b.n	8016202 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8016342:	9c02      	ldr	r4, [sp, #8]
 8016344:	4570      	cmp	r0, lr
 8016346:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801634a:	db0d      	blt.n	8016368 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 801634c:	4431      	add	r1, r6
 801634e:	9b06      	ldr	r3, [sp, #24]
 8016350:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8016354:	b289      	uxth	r1, r1
 8016356:	445c      	add	r4, fp
 8016358:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801635c:	4419      	add	r1, r3
 801635e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8016362:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8016366:	e583      	b.n	8015e70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016368:	445c      	add	r4, fp
 801636a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 801636e:	e79b      	b.n	80162a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8016370:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8016374:	1e65      	subs	r5, r4, #1
 8016376:	b2ad      	uxth	r5, r5
 8016378:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801637c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8016380:	42b5      	cmp	r5, r6
 8016382:	d044      	beq.n	801640e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8016384:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8016388:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801638c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8016390:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8016394:	4282      	cmp	r2, r0
 8016396:	d11f      	bne.n	80163d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016398:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801639c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80163a0:	459c      	cmp	ip, r3
 80163a2:	d119      	bne.n	80163d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80163a4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 80163a8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80163ac:	19d8      	adds	r0, r3, r7
 80163ae:	b200      	sxth	r0, r0
 80163b0:	4288      	cmp	r0, r1
 80163b2:	d109      	bne.n	80163c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 80163b4:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80163b8:	4413      	add	r3, r2
 80163ba:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80163be:	4629      	mov	r1, r5
 80163c0:	9801      	ldr	r0, [sp, #4]
 80163c2:	f7ff fd2b 	bl	8015e1c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80163c6:	e003      	b.n	80163d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80163c8:	4411      	add	r1, r2
 80163ca:	b209      	sxth	r1, r1
 80163cc:	42b9      	cmp	r1, r7
 80163ce:	d0f3      	beq.n	80163b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 80163d0:	3d01      	subs	r5, #1
 80163d2:	b2ad      	uxth	r5, r5
 80163d4:	3c08      	subs	r4, #8
 80163d6:	e7d3      	b.n	8016380 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80163d8:	42b9      	cmp	r1, r7
 80163da:	d1f9      	bne.n	80163d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80163dc:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 80163e0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80163e4:	4299      	cmp	r1, r3
 80163e6:	d1f3      	bne.n	80163d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80163e8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80163ec:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80163f0:	181f      	adds	r7, r3, r0
 80163f2:	b23f      	sxth	r7, r7
 80163f4:	42ba      	cmp	r2, r7
 80163f6:	d105      	bne.n	8016404 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 80163f8:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 80163fc:	440b      	add	r3, r1
 80163fe:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016402:	e7dc      	b.n	80163be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8016404:	440a      	add	r2, r1
 8016406:	b212      	sxth	r2, r2
 8016408:	4290      	cmp	r0, r2
 801640a:	d1e1      	bne.n	80163d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801640c:	e7f6      	b.n	80163fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801640e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8016412:	2e07      	cmp	r6, #7
 8016414:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8016418:	d812      	bhi.n	8016440 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801641a:	1c75      	adds	r5, r6, #1
 801641c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8016420:	9d01      	ldr	r5, [sp, #4]
 8016422:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8016426:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801642a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801642e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8016432:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8016436:	442c      	add	r4, r5
 8016438:	8061      	strh	r1, [r4, #2]
 801643a:	80a2      	strh	r2, [r4, #4]
 801643c:	80e3      	strh	r3, [r4, #6]
 801643e:	e581      	b.n	8015f44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016440:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8016444:	3e01      	subs	r6, #1
 8016446:	445c      	add	r4, fp
 8016448:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 801644c:	f04f 37ff 	mov.w	r7, #4294967295
 8016450:	2500      	movs	r5, #0
 8016452:	9305      	str	r3, [sp, #20]
 8016454:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016458:	9302      	str	r3, [sp, #8]
 801645a:	1e72      	subs	r2, r6, #1
 801645c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8016460:	9304      	str	r3, [sp, #16]
 8016462:	4691      	mov	r9, r2
 8016464:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8016468:	f1b9 3fff 	cmp.w	r9, #4294967295
 801646c:	bf14      	ite	ne
 801646e:	9905      	ldrne	r1, [sp, #20]
 8016470:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8016474:	6818      	ldr	r0, [r3, #0]
 8016476:	9207      	str	r2, [sp, #28]
 8016478:	bf18      	it	ne
 801647a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801647e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8016482:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8016486:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801648a:	9306      	str	r3, [sp, #24]
 801648c:	fb18 f801 	smulbb	r8, r8, r1
 8016490:	6859      	ldr	r1, [r3, #4]
 8016492:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016496:	4671      	mov	r1, lr
 8016498:	a80c      	add	r0, sp, #48	; 0x30
 801649a:	f7ff fafb 	bl	8015a94 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801649e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80164a2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80164a6:	9b04      	ldr	r3, [sp, #16]
 80164a8:	9a02      	ldr	r2, [sp, #8]
 80164aa:	fb10 f001 	smulbb	r0, r0, r1
 80164ae:	fb02 8803 	mla	r8, r2, r3, r8
 80164b2:	eba0 0108 	sub.w	r1, r0, r8
 80164b6:	f04f 0c08 	mov.w	ip, #8
 80164ba:	fb90 f0fc 	sdiv	r0, r0, ip
 80164be:	4288      	cmp	r0, r1
 80164c0:	dc20      	bgt.n	8016504 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80164c2:	4551      	cmp	r1, sl
 80164c4:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80164c8:	da03      	bge.n	80164d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 80164ca:	b1d9      	cbz	r1, 8016504 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80164cc:	468a      	mov	sl, r1
 80164ce:	464f      	mov	r7, r9
 80164d0:	4635      	mov	r5, r6
 80164d2:	f109 39ff 	add.w	r9, r9, #4294967295
 80164d6:	f119 0f02 	cmn.w	r9, #2
 80164da:	d1c5      	bne.n	8016468 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 80164dc:	4616      	mov	r6, r2
 80164de:	3201      	adds	r2, #1
 80164e0:	f1a4 0408 	sub.w	r4, r4, #8
 80164e4:	d1b6      	bne.n	8016454 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 80164e6:	9b01      	ldr	r3, [sp, #4]
 80164e8:	b2ac      	uxth	r4, r5
 80164ea:	00ed      	lsls	r5, r5, #3
 80164ec:	1958      	adds	r0, r3, r5
 80164ee:	1c7b      	adds	r3, r7, #1
 80164f0:	d10b      	bne.n	801650a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 80164f2:	4601      	mov	r1, r0
 80164f4:	9803      	ldr	r0, [sp, #12]
 80164f6:	f7ff facd 	bl	8015a94 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80164fa:	4621      	mov	r1, r4
 80164fc:	9801      	ldr	r0, [sp, #4]
 80164fe:	f7ff fc8d 	bl	8015e1c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016502:	e4b5      	b.n	8015e70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016504:	464f      	mov	r7, r9
 8016506:	4635      	mov	r5, r6
 8016508:	e7ed      	b.n	80164e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801650a:	9b01      	ldr	r3, [sp, #4]
 801650c:	00ff      	lsls	r7, r7, #3
 801650e:	19d9      	adds	r1, r3, r7
 8016510:	f7ff fac0 	bl	8015a94 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016514:	9b03      	ldr	r3, [sp, #12]
 8016516:	cb03      	ldmia	r3!, {r0, r1}
 8016518:	445f      	add	r7, fp
 801651a:	445d      	add	r5, fp
 801651c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8016520:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8016524:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8016528:	9b03      	ldr	r3, [sp, #12]
 801652a:	6869      	ldr	r1, [r5, #4]
 801652c:	c303      	stmia	r3!, {r0, r1}
 801652e:	e7e4      	b.n	80164fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08016530 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8016530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016534:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8016538:	b09b      	sub	sp, #108	; 0x6c
 801653a:	4604      	mov	r4, r0
 801653c:	4630      	mov	r0, r6
 801653e:	f7fa fa20 	bl	8010982 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016542:	4605      	mov	r5, r0
 8016544:	b948      	cbnz	r0, 801655a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8016546:	6823      	ldr	r3, [r4, #0]
 8016548:	e896 0006 	ldmia.w	r6, {r1, r2}
 801654c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801654e:	4620      	mov	r0, r4
 8016550:	4798      	blx	r3
 8016552:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8016556:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 801655a:	4bc6      	ldr	r3, [pc, #792]	; (8016874 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 801655c:	681b      	ldr	r3, [r3, #0]
 801655e:	2b00      	cmp	r3, #0
 8016560:	d03f      	beq.n	80165e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8016562:	4dc5      	ldr	r5, [pc, #788]	; (8016878 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8016564:	4628      	mov	r0, r5
 8016566:	f7fa fa0c 	bl	8010982 <_ZNK8touchgfx4Rect7isEmptyEv>
 801656a:	4606      	mov	r6, r0
 801656c:	2800      	cmp	r0, #0
 801656e:	d138      	bne.n	80165e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8016570:	4628      	mov	r0, r5
 8016572:	f7ff f907 	bl	8015784 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016576:	6823      	ldr	r3, [r4, #0]
 8016578:	6829      	ldr	r1, [r5, #0]
 801657a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801657c:	686a      	ldr	r2, [r5, #4]
 801657e:	4620      	mov	r0, r4
 8016580:	4798      	blx	r3
 8016582:	802e      	strh	r6, [r5, #0]
 8016584:	806e      	strh	r6, [r5, #2]
 8016586:	80ae      	strh	r6, [r5, #4]
 8016588:	80ee      	strh	r6, [r5, #6]
 801658a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801658e:	4dbb      	ldr	r5, [pc, #748]	; (801687c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8016590:	4640      	mov	r0, r8
 8016592:	f7ff fbeb 	bl	8015d6c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016596:	882e      	ldrh	r6, [r5, #0]
 8016598:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801659c:	4633      	mov	r3, r6
 801659e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80165a2:	42bb      	cmp	r3, r7
 80165a4:	d224      	bcs.n	80165f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80165a6:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 80165aa:	2907      	cmp	r1, #7
 80165ac:	d816      	bhi.n	80165dc <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 80165ae:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80165b2:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80165b6:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80165ba:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80165be:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80165c2:	1c4a      	adds	r2, r1, #1
 80165c4:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80165c8:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80165cc:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80165d0:	f8a2 a002 	strh.w	sl, [r2, #2]
 80165d4:	f8a2 e004 	strh.w	lr, [r2, #4]
 80165d8:	f8a2 c006 	strh.w	ip, [r2, #6]
 80165dc:	3301      	adds	r3, #1
 80165de:	b29b      	uxth	r3, r3
 80165e0:	e7df      	b.n	80165a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80165e2:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80165e6:	2b00      	cmp	r3, #0
 80165e8:	d1cf      	bne.n	801658a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 80165ea:	b01b      	add	sp, #108	; 0x6c
 80165ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80165f0:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 80165f4:	42b3      	cmp	r3, r6
 80165f6:	d90c      	bls.n	8016612 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 80165f8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80165fc:	6822      	ldr	r2, [r4, #0]
 80165fe:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8016602:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8016604:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8016608:	4620      	mov	r0, r4
 801660a:	3601      	adds	r6, #1
 801660c:	47b8      	blx	r7
 801660e:	b2b6      	uxth	r6, r6
 8016610:	e7ee      	b.n	80165f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016612:	4a9b      	ldr	r2, [pc, #620]	; (8016880 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8016614:	6813      	ldr	r3, [r2, #0]
 8016616:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801661a:	2b01      	cmp	r3, #1
 801661c:	4691      	mov	r9, r2
 801661e:	f040 80e2 	bne.w	80167e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8016622:	8829      	ldrh	r1, [r5, #0]
 8016624:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8016628:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801662c:	33ae      	adds	r3, #174	; 0xae
 801662e:	2600      	movs	r6, #0
 8016630:	428f      	cmp	r7, r1
 8016632:	f103 0308 	add.w	r3, r3, #8
 8016636:	dd0a      	ble.n	801664e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8016638:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 801663c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8016640:	4402      	add	r2, r0
 8016642:	b212      	sxth	r2, r2
 8016644:	4296      	cmp	r6, r2
 8016646:	bfb8      	it	lt
 8016648:	4616      	movlt	r6, r2
 801664a:	3101      	adds	r1, #1
 801664c:	e7f0      	b.n	8016630 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 801664e:	4b8d      	ldr	r3, [pc, #564]	; (8016884 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8016650:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8016880 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8016654:	881b      	ldrh	r3, [r3, #0]
 8016656:	2b0f      	cmp	r3, #15
 8016658:	bf88      	it	hi
 801665a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801665e:	f04f 0300 	mov.w	r3, #0
 8016662:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8016666:	bf98      	it	ls
 8016668:	f04f 0b01 	movls.w	fp, #1
 801666c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8016670:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8016674:	4b82      	ldr	r3, [pc, #520]	; (8016880 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8016676:	4438      	add	r0, r7
 8016678:	b207      	sxth	r7, r0
 801667a:	6818      	ldr	r0, [r3, #0]
 801667c:	42b7      	cmp	r7, r6
 801667e:	6803      	ldr	r3, [r0, #0]
 8016680:	f280 8083 	bge.w	801678a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8016684:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8016688:	4798      	blx	r3
 801668a:	eb07 030b 	add.w	r3, r7, fp
 801668e:	4298      	cmp	r0, r3
 8016690:	da07      	bge.n	80166a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8016692:	42b0      	cmp	r0, r6
 8016694:	da05      	bge.n	80166a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8016696:	4287      	cmp	r7, r0
 8016698:	dd6c      	ble.n	8016774 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801669a:	2f00      	cmp	r7, #0
 801669c:	dd6a      	ble.n	8016774 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801669e:	4630      	mov	r0, r6
 80166a0:	e004      	b.n	80166ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 80166a2:	4287      	cmp	r7, r0
 80166a4:	dcfb      	bgt.n	801669e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 80166a6:	42b0      	cmp	r0, r6
 80166a8:	bfa8      	it	ge
 80166aa:	4630      	movge	r0, r6
 80166ac:	4b76      	ldr	r3, [pc, #472]	; (8016888 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 80166ae:	f8ad 7016 	strh.w	r7, [sp, #22]
 80166b2:	1bc0      	subs	r0, r0, r7
 80166b4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80166b8:	882f      	ldrh	r7, [r5, #0]
 80166ba:	f8ad 3018 	strh.w	r3, [sp, #24]
 80166be:	2200      	movs	r2, #0
 80166c0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80166c4:	f8ad 001a 	strh.w	r0, [sp, #26]
 80166c8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80166cc:	42bb      	cmp	r3, r7
 80166ce:	d9cd      	bls.n	801666c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80166d0:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80166d4:	ab07      	add	r3, sp, #28
 80166d6:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80166da:	6851      	ldr	r1, [r2, #4]
 80166dc:	c303      	stmia	r3!, {r0, r1}
 80166de:	a905      	add	r1, sp, #20
 80166e0:	a807      	add	r0, sp, #28
 80166e2:	f7ff f93e 	bl	8015962 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80166e6:	2800      	cmp	r0, #0
 80166e8:	d04c      	beq.n	8016784 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 80166ea:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80166ee:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80166f2:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80166f6:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80166fa:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80166fe:	9302      	str	r3, [sp, #8]
 8016700:	4686      	mov	lr, r0
 8016702:	4290      	cmp	r0, r2
 8016704:	4450      	add	r0, sl
 8016706:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801670a:	bfb8      	it	lt
 801670c:	4696      	movlt	lr, r2
 801670e:	4452      	add	r2, sl
 8016710:	4299      	cmp	r1, r3
 8016712:	b280      	uxth	r0, r0
 8016714:	b292      	uxth	r2, r2
 8016716:	468c      	mov	ip, r1
 8016718:	fa0f fa82 	sxth.w	sl, r2
 801671c:	bfb8      	it	lt
 801671e:	469c      	movlt	ip, r3
 8016720:	b203      	sxth	r3, r0
 8016722:	4553      	cmp	r3, sl
 8016724:	bfb8      	it	lt
 8016726:	4602      	movlt	r2, r0
 8016728:	eba2 020e 	sub.w	r2, r2, lr
 801672c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016730:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8016734:	9b02      	ldr	r3, [sp, #8]
 8016736:	f8ad e01c 	strh.w	lr, [sp, #28]
 801673a:	4411      	add	r1, r2
 801673c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016740:	f8ad c01e 	strh.w	ip, [sp, #30]
 8016744:	4413      	add	r3, r2
 8016746:	b289      	uxth	r1, r1
 8016748:	b29b      	uxth	r3, r3
 801674a:	b208      	sxth	r0, r1
 801674c:	b21a      	sxth	r2, r3
 801674e:	4290      	cmp	r0, r2
 8016750:	bfb8      	it	lt
 8016752:	460b      	movlt	r3, r1
 8016754:	eba3 030c 	sub.w	r3, r3, ip
 8016758:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801675c:	a807      	add	r0, sp, #28
 801675e:	f7fa f910 	bl	8010982 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016762:	b920      	cbnz	r0, 801676e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8016764:	6823      	ldr	r3, [r4, #0]
 8016766:	a907      	add	r1, sp, #28
 8016768:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801676a:	4620      	mov	r0, r4
 801676c:	4798      	blx	r3
 801676e:	3701      	adds	r7, #1
 8016770:	b2bf      	uxth	r7, r7
 8016772:	e7a9      	b.n	80166c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8016774:	f8d9 0000 	ldr.w	r0, [r9]
 8016778:	6803      	ldr	r3, [r0, #0]
 801677a:	2101      	movs	r1, #1
 801677c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8016780:	4798      	blx	r3
 8016782:	e773      	b.n	801666c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8016784:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8016788:	e7e8      	b.n	801675c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801678a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801678c:	4798      	blx	r3
 801678e:	4b3f      	ldr	r3, [pc, #252]	; (801688c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8016790:	781b      	ldrb	r3, [r3, #0]
 8016792:	2b00      	cmp	r3, #0
 8016794:	f43f af29 	beq.w	80165ea <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8016798:	2300      	movs	r3, #0
 801679a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801679e:	882b      	ldrh	r3, [r5, #0]
 80167a0:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 80167a4:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80167a8:	42ab      	cmp	r3, r5
 80167aa:	f4bf af1e 	bcs.w	80165ea <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80167ae:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 80167b2:	2907      	cmp	r1, #7
 80167b4:	d814      	bhi.n	80167e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 80167b6:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 80167ba:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 80167be:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 80167c2:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80167c6:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80167ca:	1c4a      	adds	r2, r1, #1
 80167cc:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 80167d0:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80167d4:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 80167d8:	f8a2 c002 	strh.w	ip, [r2, #2]
 80167dc:	8097      	strh	r7, [r2, #4]
 80167de:	80d6      	strh	r6, [r2, #6]
 80167e0:	3301      	adds	r3, #1
 80167e2:	b29b      	uxth	r3, r3
 80167e4:	e7e0      	b.n	80167a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 80167e6:	2b02      	cmp	r3, #2
 80167e8:	f040 8133 	bne.w	8016a52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 80167ec:	4b28      	ldr	r3, [pc, #160]	; (8016890 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 80167ee:	781b      	ldrb	r3, [r3, #0]
 80167f0:	2b01      	cmp	r3, #1
 80167f2:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 80167f6:	f000 8098 	beq.w	801692a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80167fa:	882a      	ldrh	r2, [r5, #0]
 80167fc:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8016800:	3201      	adds	r2, #1
 8016802:	b292      	uxth	r2, r2
 8016804:	2900      	cmp	r1, #0
 8016806:	d0c2      	beq.n	801678e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016808:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 801680c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8016810:	441e      	add	r6, r3
 8016812:	b236      	sxth	r6, r6
 8016814:	4694      	mov	ip, r2
 8016816:	f04f 0900 	mov.w	r9, #0
 801681a:	fa1f f38c 	uxth.w	r3, ip
 801681e:	4299      	cmp	r1, r3
 8016820:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8016824:	f240 80bf 	bls.w	80169a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8016828:	4427      	add	r7, r4
 801682a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801682e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8016832:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8016836:	4283      	cmp	r3, r0
 8016838:	f340 80a1 	ble.w	801697e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 801683c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8016840:	4406      	add	r6, r0
 8016842:	b236      	sxth	r6, r6
 8016844:	429e      	cmp	r6, r3
 8016846:	bfa8      	it	ge
 8016848:	461e      	movge	r6, r3
 801684a:	46e1      	mov	r9, ip
 801684c:	f10c 0c01 	add.w	ip, ip, #1
 8016850:	e7e3      	b.n	801681a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8016852:	d10a      	bne.n	801686a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8016854:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8016858:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 801685c:	4562      	cmp	r2, ip
 801685e:	bfb8      	it	lt
 8016860:	4662      	movlt	r2, ip
 8016862:	4288      	cmp	r0, r1
 8016864:	bfb8      	it	lt
 8016866:	461f      	movlt	r7, r3
 8016868:	e087      	b.n	801697a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801686a:	428a      	cmp	r2, r1
 801686c:	bfb8      	it	lt
 801686e:	460a      	movlt	r2, r1
 8016870:	e083      	b.n	801697a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8016872:	bf00      	nop
 8016874:	20012df4 	.word	0x20012df4
 8016878:	20012e00 	.word	0x20012e00
 801687c:	20000088 	.word	0x20000088
 8016880:	20012db4 	.word	0x20012db4
 8016884:	20012daa 	.word	0x20012daa
 8016888:	20012da8 	.word	0x20012da8
 801688c:	20012db2 	.word	0x20012db2
 8016890:	20012dac 	.word	0x20012dac
 8016894:	19a1      	adds	r1, r4, r6
 8016896:	ab07      	add	r3, sp, #28
 8016898:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801689c:	6849      	ldr	r1, [r1, #4]
 801689e:	c303      	stmia	r3!, {r0, r1}
 80168a0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80168a4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80168a8:	2b13      	cmp	r3, #19
 80168aa:	bfd8      	it	le
 80168ac:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80168b0:	f8ad 201c 	strh.w	r2, [sp, #28]
 80168b4:	440b      	add	r3, r1
 80168b6:	1a9b      	subs	r3, r3, r2
 80168b8:	a807      	add	r0, sp, #28
 80168ba:	f8ad 3020 	strh.w	r3, [sp, #32]
 80168be:	f7fe ff7b 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80168c2:	a807      	add	r0, sp, #28
 80168c4:	f7fa f85d 	bl	8010982 <_ZNK8touchgfx4Rect7isEmptyEv>
 80168c8:	bb78      	cbnz	r0, 801692a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80168ca:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80168ce:	f8d9 0000 	ldr.w	r0, [r9]
 80168d2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80168d6:	f8d0 e000 	ldr.w	lr, [r0]
 80168da:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80168de:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80168e2:	f1bc 0f14 	cmp.w	ip, #20
 80168e6:	bfa8      	it	ge
 80168e8:	f04f 0c14 	movge.w	ip, #20
 80168ec:	fa1f fc8c 	uxth.w	ip, ip
 80168f0:	f8cd c000 	str.w	ip, [sp]
 80168f4:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 80168f8:	47d8      	blx	fp
 80168fa:	4683      	mov	fp, r0
 80168fc:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016900:	a807      	add	r0, sp, #28
 8016902:	f7fe ff3f 	bl	8015784 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016906:	6823      	ldr	r3, [r4, #0]
 8016908:	4426      	add	r6, r4
 801690a:	4620      	mov	r0, r4
 801690c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801690e:	a907      	add	r1, sp, #28
 8016910:	4798      	blx	r3
 8016912:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8016916:	eba0 000b 	sub.w	r0, r0, fp
 801691a:	b200      	sxth	r0, r0
 801691c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8016920:	b918      	cbnz	r0, 801692a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016922:	b2b9      	uxth	r1, r7
 8016924:	4650      	mov	r0, sl
 8016926:	f7ff fa79 	bl	8015e1c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801692a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 801692e:	f1bb 0f00 	cmp.w	fp, #0
 8016932:	f43f af2c 	beq.w	801678e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016936:	882b      	ldrh	r3, [r5, #0]
 8016938:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 801693c:	3301      	adds	r3, #1
 801693e:	b29b      	uxth	r3, r3
 8016940:	2700      	movs	r7, #0
 8016942:	b299      	uxth	r1, r3
 8016944:	458b      	cmp	fp, r1
 8016946:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 801694a:	d9a3      	bls.n	8016894 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 801694c:	4426      	add	r6, r4
 801694e:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8016952:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8016956:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801695a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 801695e:	4408      	add	r0, r1
 8016960:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8016964:	4461      	add	r1, ip
 8016966:	b200      	sxth	r0, r0
 8016968:	b209      	sxth	r1, r1
 801696a:	4288      	cmp	r0, r1
 801696c:	f6bf af71 	bge.w	8016852 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8016970:	4584      	cmp	ip, r0
 8016972:	4662      	mov	r2, ip
 8016974:	461f      	mov	r7, r3
 8016976:	bfb8      	it	lt
 8016978:	4602      	movlt	r2, r0
 801697a:	3301      	adds	r3, #1
 801697c:	e7e1      	b.n	8016942 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 801697e:	d10e      	bne.n	801699e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8016980:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8016984:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8016988:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 801698c:	4473      	add	r3, lr
 801698e:	b21b      	sxth	r3, r3
 8016990:	429e      	cmp	r6, r3
 8016992:	bfa8      	it	ge
 8016994:	461e      	movge	r6, r3
 8016996:	4287      	cmp	r7, r0
 8016998:	bfb8      	it	lt
 801699a:	46e1      	movlt	r9, ip
 801699c:	e756      	b.n	801684c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801699e:	4286      	cmp	r6, r0
 80169a0:	bfa8      	it	ge
 80169a2:	4606      	movge	r6, r0
 80169a4:	e752      	b.n	801684c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80169a6:	eb0a 0007 	add.w	r0, sl, r7
 80169aa:	4427      	add	r7, r4
 80169ac:	e9cd 2102 	strd	r2, r1, [sp, #8]
 80169b0:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 80169b4:	f1bb 0f13 	cmp.w	fp, #19
 80169b8:	bfde      	ittt	le
 80169ba:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 80169be:	445e      	addle	r6, fp
 80169c0:	b236      	sxthle	r6, r6
 80169c2:	f7f9 ffde 	bl	8010982 <_ZNK8touchgfx4Rect7isEmptyEv>
 80169c6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80169ca:	2800      	cmp	r0, #0
 80169cc:	f47f af1a 	bne.w	8016804 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 80169d0:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 80169d4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80169d8:	482a      	ldr	r0, [pc, #168]	; (8016a84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 80169da:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 80169de:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 80169e2:	6800      	ldr	r0, [r0, #0]
 80169e4:	f8ad 101c 	strh.w	r1, [sp, #28]
 80169e8:	1ab6      	subs	r6, r6, r2
 80169ea:	2e14      	cmp	r6, #20
 80169ec:	f8ad 201e 	strh.w	r2, [sp, #30]
 80169f0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80169f4:	bfa8      	it	ge
 80169f6:	2614      	movge	r6, #20
 80169f8:	f8d0 c000 	ldr.w	ip, [r0]
 80169fc:	b2b6      	uxth	r6, r6
 80169fe:	fa1f fb8b 	uxth.w	fp, fp
 8016a02:	455e      	cmp	r6, fp
 8016a04:	bf94      	ite	ls
 8016a06:	9600      	strls	r6, [sp, #0]
 8016a08:	f8cd b000 	strhi.w	fp, [sp]
 8016a0c:	b292      	uxth	r2, r2
 8016a0e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8016a12:	b29b      	uxth	r3, r3
 8016a14:	b289      	uxth	r1, r1
 8016a16:	47b0      	blx	r6
 8016a18:	6823      	ldr	r3, [r4, #0]
 8016a1a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016a1e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016a20:	a907      	add	r1, sp, #28
 8016a22:	4620      	mov	r0, r4
 8016a24:	4798      	blx	r3
 8016a26:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8016a2a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8016a2e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8016a32:	1a5b      	subs	r3, r3, r1
 8016a34:	440a      	add	r2, r1
 8016a36:	b21b      	sxth	r3, r3
 8016a38:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8016a3c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8016a40:	2b00      	cmp	r3, #0
 8016a42:	f47f aeda 	bne.w	80167fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016a46:	fa1f f189 	uxth.w	r1, r9
 8016a4a:	4650      	mov	r0, sl
 8016a4c:	f7ff f9e6 	bl	8015e1c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016a50:	e6d3      	b.n	80167fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016a52:	882e      	ldrh	r6, [r5, #0]
 8016a54:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8016a58:	42b3      	cmp	r3, r6
 8016a5a:	f67f ae98 	bls.w	801678e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016a5e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8016a62:	ab07      	add	r3, sp, #28
 8016a64:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8016a68:	6851      	ldr	r1, [r2, #4]
 8016a6a:	c303      	stmia	r3!, {r0, r1}
 8016a6c:	a807      	add	r0, sp, #28
 8016a6e:	f7f9 ff88 	bl	8010982 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016a72:	b920      	cbnz	r0, 8016a7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8016a74:	6823      	ldr	r3, [r4, #0]
 8016a76:	a907      	add	r1, sp, #28
 8016a78:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016a7a:	4620      	mov	r0, r4
 8016a7c:	4798      	blx	r3
 8016a7e:	3601      	adds	r6, #1
 8016a80:	b2b6      	uxth	r6, r6
 8016a82:	e7e7      	b.n	8016a54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8016a84:	20012db4 	.word	0x20012db4

08016a88 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8016a88:	4b03      	ldr	r3, [pc, #12]	; (8016a98 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8016a8a:	2200      	movs	r2, #0
 8016a8c:	801a      	strh	r2, [r3, #0]
 8016a8e:	805a      	strh	r2, [r3, #2]
 8016a90:	809a      	strh	r2, [r3, #4]
 8016a92:	80da      	strh	r2, [r3, #6]
 8016a94:	4770      	bx	lr
 8016a96:	bf00      	nop
 8016a98:	20012e00 	.word	0x20012e00

08016a9c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8016a9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016aa0:	4606      	mov	r6, r0
 8016aa2:	b09d      	sub	sp, #116	; 0x74
 8016aa4:	a803      	add	r0, sp, #12
 8016aa6:	4614      	mov	r4, r2
 8016aa8:	468a      	mov	sl, r1
 8016aaa:	461d      	mov	r5, r3
 8016aac:	f000 feca 	bl	8017844 <_ZN8touchgfx12TextProviderC1Ev>
 8016ab0:	6833      	ldr	r3, [r6, #0]
 8016ab2:	4630      	mov	r0, r6
 8016ab4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016ab6:	4798      	blx	r3
 8016ab8:	6833      	ldr	r3, [r6, #0]
 8016aba:	4607      	mov	r7, r0
 8016abc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016abe:	4630      	mov	r0, r6
 8016ac0:	4798      	blx	r3
 8016ac2:	462a      	mov	r2, r5
 8016ac4:	9000      	str	r0, [sp, #0]
 8016ac6:	4621      	mov	r1, r4
 8016ac8:	463b      	mov	r3, r7
 8016aca:	a803      	add	r0, sp, #12
 8016acc:	f000 ff15 	bl	80178fa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016ad0:	2500      	movs	r5, #0
 8016ad2:	462c      	mov	r4, r5
 8016ad4:	46a9      	mov	r9, r5
 8016ad6:	46a8      	mov	r8, r5
 8016ad8:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8016adc:	2300      	movs	r3, #0
 8016ade:	9302      	str	r3, [sp, #8]
 8016ae0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016ae4:	429c      	cmp	r4, r3
 8016ae6:	d002      	beq.n	8016aee <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8016ae8:	455c      	cmp	r4, fp
 8016aea:	bf18      	it	ne
 8016aec:	4625      	movne	r5, r4
 8016aee:	ab02      	add	r3, sp, #8
 8016af0:	4632      	mov	r2, r6
 8016af2:	4651      	mov	r1, sl
 8016af4:	a803      	add	r0, sp, #12
 8016af6:	f001 fa03 	bl	8017f00 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016afa:	4604      	mov	r4, r0
 8016afc:	b108      	cbz	r0, 8016b02 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8016afe:	280a      	cmp	r0, #10
 8016b00:	d10a      	bne.n	8016b18 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8016b02:	45c1      	cmp	r9, r8
 8016b04:	bf38      	it	cc
 8016b06:	46c1      	movcc	r9, r8
 8016b08:	f04f 0800 	mov.w	r8, #0
 8016b0c:	2c00      	cmp	r4, #0
 8016b0e:	d1e5      	bne.n	8016adc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016b10:	4648      	mov	r0, r9
 8016b12:	b01d      	add	sp, #116	; 0x74
 8016b14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b18:	9a02      	ldr	r2, [sp, #8]
 8016b1a:	2a00      	cmp	r2, #0
 8016b1c:	d0de      	beq.n	8016adc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016b1e:	7b57      	ldrb	r7, [r2, #13]
 8016b20:	6833      	ldr	r3, [r6, #0]
 8016b22:	8894      	ldrh	r4, [r2, #4]
 8016b24:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016b26:	007f      	lsls	r7, r7, #1
 8016b28:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8016b2c:	7a97      	ldrb	r7, [r2, #10]
 8016b2e:	4629      	mov	r1, r5
 8016b30:	4307      	orrs	r7, r0
 8016b32:	4630      	mov	r0, r6
 8016b34:	4798      	blx	r3
 8016b36:	4438      	add	r0, r7
 8016b38:	4480      	add	r8, r0
 8016b3a:	fa1f f888 	uxth.w	r8, r8
 8016b3e:	e7e5      	b.n	8016b0c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08016b40 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8016b40:	b508      	push	{r3, lr}
 8016b42:	6803      	ldr	r3, [r0, #0]
 8016b44:	68db      	ldr	r3, [r3, #12]
 8016b46:	4798      	blx	r3
 8016b48:	b128      	cbz	r0, 8016b56 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8016b4a:	7b43      	ldrb	r3, [r0, #13]
 8016b4c:	7a80      	ldrb	r0, [r0, #10]
 8016b4e:	005b      	lsls	r3, r3, #1
 8016b50:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016b54:	4318      	orrs	r0, r3
 8016b56:	bd08      	pop	{r3, pc}

08016b58 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8016b58:	b40e      	push	{r1, r2, r3}
 8016b5a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016b5c:	b09e      	sub	sp, #120	; 0x78
 8016b5e:	ab23      	add	r3, sp, #140	; 0x8c
 8016b60:	4605      	mov	r5, r0
 8016b62:	f853 4b04 	ldr.w	r4, [r3], #4
 8016b66:	9303      	str	r3, [sp, #12]
 8016b68:	a805      	add	r0, sp, #20
 8016b6a:	f000 fe6b 	bl	8017844 <_ZN8touchgfx12TextProviderC1Ev>
 8016b6e:	682b      	ldr	r3, [r5, #0]
 8016b70:	4628      	mov	r0, r5
 8016b72:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016b74:	4798      	blx	r3
 8016b76:	682b      	ldr	r3, [r5, #0]
 8016b78:	4606      	mov	r6, r0
 8016b7a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016b7c:	4628      	mov	r0, r5
 8016b7e:	4798      	blx	r3
 8016b80:	4633      	mov	r3, r6
 8016b82:	ae1e      	add	r6, sp, #120	; 0x78
 8016b84:	4621      	mov	r1, r4
 8016b86:	9000      	str	r0, [sp, #0]
 8016b88:	9a03      	ldr	r2, [sp, #12]
 8016b8a:	2400      	movs	r4, #0
 8016b8c:	a805      	add	r0, sp, #20
 8016b8e:	f000 feb4 	bl	80178fa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016b92:	f846 4d68 	str.w	r4, [r6, #-104]!
 8016b96:	462a      	mov	r2, r5
 8016b98:	4633      	mov	r3, r6
 8016b9a:	4621      	mov	r1, r4
 8016b9c:	a805      	add	r0, sp, #20
 8016b9e:	f001 f9af 	bl	8017f00 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016ba2:	b1f0      	cbz	r0, 8016be2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8016ba4:	280a      	cmp	r0, #10
 8016ba6:	d018      	beq.n	8016bda <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016ba8:	9f04      	ldr	r7, [sp, #16]
 8016baa:	b1b7      	cbz	r7, 8016bda <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016bac:	7b78      	ldrb	r0, [r7, #13]
 8016bae:	7a3b      	ldrb	r3, [r7, #8]
 8016bb0:	88ea      	ldrh	r2, [r5, #6]
 8016bb2:	00c1      	lsls	r1, r0, #3
 8016bb4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016bb8:	4319      	orrs	r1, r3
 8016bba:	0643      	lsls	r3, r0, #25
 8016bbc:	bf44      	itt	mi
 8016bbe:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8016bc2:	b219      	sxthmi	r1, r3
 8016bc4:	0100      	lsls	r0, r0, #4
 8016bc6:	79fb      	ldrb	r3, [r7, #7]
 8016bc8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8016bcc:	4303      	orrs	r3, r0
 8016bce:	4413      	add	r3, r2
 8016bd0:	1a5b      	subs	r3, r3, r1
 8016bd2:	b21b      	sxth	r3, r3
 8016bd4:	429c      	cmp	r4, r3
 8016bd6:	bfb8      	it	lt
 8016bd8:	461c      	movlt	r4, r3
 8016bda:	4633      	mov	r3, r6
 8016bdc:	462a      	mov	r2, r5
 8016bde:	2100      	movs	r1, #0
 8016be0:	e7dc      	b.n	8016b9c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8016be2:	b2a0      	uxth	r0, r4
 8016be4:	b01e      	add	sp, #120	; 0x78
 8016be6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016bea:	b003      	add	sp, #12
 8016bec:	4770      	bx	lr

08016bee <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8016bee:	7a43      	ldrb	r3, [r0, #9]
 8016bf0:	8880      	ldrh	r0, [r0, #4]
 8016bf2:	4418      	add	r0, r3
 8016bf4:	b280      	uxth	r0, r0
 8016bf6:	4770      	bx	lr

08016bf8 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8016bf8:	6803      	ldr	r3, [r0, #0]
 8016bfa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016bfc:	4718      	bx	r3

08016bfe <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8016bfe:	b40e      	push	{r1, r2, r3}
 8016c00:	b570      	push	{r4, r5, r6, lr}
 8016c02:	b09d      	sub	sp, #116	; 0x74
 8016c04:	ab21      	add	r3, sp, #132	; 0x84
 8016c06:	4604      	mov	r4, r0
 8016c08:	f853 5b04 	ldr.w	r5, [r3], #4
 8016c0c:	9302      	str	r3, [sp, #8]
 8016c0e:	a803      	add	r0, sp, #12
 8016c10:	f000 fe18 	bl	8017844 <_ZN8touchgfx12TextProviderC1Ev>
 8016c14:	6823      	ldr	r3, [r4, #0]
 8016c16:	4620      	mov	r0, r4
 8016c18:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016c1a:	4798      	blx	r3
 8016c1c:	6823      	ldr	r3, [r4, #0]
 8016c1e:	4606      	mov	r6, r0
 8016c20:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016c22:	4620      	mov	r0, r4
 8016c24:	4798      	blx	r3
 8016c26:	4633      	mov	r3, r6
 8016c28:	9000      	str	r0, [sp, #0]
 8016c2a:	9a02      	ldr	r2, [sp, #8]
 8016c2c:	4629      	mov	r1, r5
 8016c2e:	a803      	add	r0, sp, #12
 8016c30:	f000 fe63 	bl	80178fa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016c34:	a803      	add	r0, sp, #12
 8016c36:	f001 fa31 	bl	801809c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016c3a:	2401      	movs	r4, #1
 8016c3c:	b2a3      	uxth	r3, r4
 8016c3e:	b140      	cbz	r0, 8016c52 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8016c40:	280a      	cmp	r0, #10
 8016c42:	bf08      	it	eq
 8016c44:	3301      	addeq	r3, #1
 8016c46:	a803      	add	r0, sp, #12
 8016c48:	bf08      	it	eq
 8016c4a:	b21c      	sxtheq	r4, r3
 8016c4c:	f001 fa26 	bl	801809c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016c50:	e7f4      	b.n	8016c3c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8016c52:	4618      	mov	r0, r3
 8016c54:	b01d      	add	sp, #116	; 0x74
 8016c56:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016c5a:	b003      	add	sp, #12
 8016c5c:	4770      	bx	lr

08016c5e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8016c5e:	b40e      	push	{r1, r2, r3}
 8016c60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016c62:	b09e      	sub	sp, #120	; 0x78
 8016c64:	ab23      	add	r3, sp, #140	; 0x8c
 8016c66:	4604      	mov	r4, r0
 8016c68:	f853 5b04 	ldr.w	r5, [r3], #4
 8016c6c:	9303      	str	r3, [sp, #12]
 8016c6e:	a805      	add	r0, sp, #20
 8016c70:	f000 fde8 	bl	8017844 <_ZN8touchgfx12TextProviderC1Ev>
 8016c74:	6823      	ldr	r3, [r4, #0]
 8016c76:	4620      	mov	r0, r4
 8016c78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016c7a:	4798      	blx	r3
 8016c7c:	6823      	ldr	r3, [r4, #0]
 8016c7e:	4606      	mov	r6, r0
 8016c80:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016c82:	4620      	mov	r0, r4
 8016c84:	4798      	blx	r3
 8016c86:	4633      	mov	r3, r6
 8016c88:	4629      	mov	r1, r5
 8016c8a:	9000      	str	r0, [sp, #0]
 8016c8c:	9a03      	ldr	r2, [sp, #12]
 8016c8e:	a805      	add	r0, sp, #20
 8016c90:	ad1e      	add	r5, sp, #120	; 0x78
 8016c92:	f000 fe32 	bl	80178fa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016c96:	2100      	movs	r1, #0
 8016c98:	f845 1d68 	str.w	r1, [r5, #-104]!
 8016c9c:	4622      	mov	r2, r4
 8016c9e:	462b      	mov	r3, r5
 8016ca0:	a805      	add	r0, sp, #20
 8016ca2:	f001 f92d 	bl	8017f00 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016ca6:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8016caa:	b1d8      	cbz	r0, 8016ce4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8016cac:	280a      	cmp	r0, #10
 8016cae:	d012      	beq.n	8016cd6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016cb0:	9804      	ldr	r0, [sp, #16]
 8016cb2:	b180      	cbz	r0, 8016cd6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016cb4:	7b47      	ldrb	r7, [r0, #13]
 8016cb6:	88e2      	ldrh	r2, [r4, #6]
 8016cb8:	00fb      	lsls	r3, r7, #3
 8016cba:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016cbe:	7a03      	ldrb	r3, [r0, #8]
 8016cc0:	430b      	orrs	r3, r1
 8016cc2:	0679      	lsls	r1, r7, #25
 8016cc4:	bf44      	itt	mi
 8016cc6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016cca:	b21b      	sxthmi	r3, r3
 8016ccc:	1ad3      	subs	r3, r2, r3
 8016cce:	b21b      	sxth	r3, r3
 8016cd0:	429e      	cmp	r6, r3
 8016cd2:	bfa8      	it	ge
 8016cd4:	461e      	movge	r6, r3
 8016cd6:	462b      	mov	r3, r5
 8016cd8:	4622      	mov	r2, r4
 8016cda:	2100      	movs	r1, #0
 8016cdc:	a805      	add	r0, sp, #20
 8016cde:	f001 f90f 	bl	8017f00 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016ce2:	e7e2      	b.n	8016caa <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8016ce4:	4630      	mov	r0, r6
 8016ce6:	b01e      	add	sp, #120	; 0x78
 8016ce8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016cec:	b003      	add	sp, #12
 8016cee:	4770      	bx	lr

08016cf0 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8016cf0:	b513      	push	{r0, r1, r4, lr}
 8016cf2:	6803      	ldr	r3, [r0, #0]
 8016cf4:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016cf8:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016cfc:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016d00:	2400      	movs	r4, #0
 8016d02:	9400      	str	r4, [sp, #0]
 8016d04:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016d08:	691b      	ldr	r3, [r3, #16]
 8016d0a:	4669      	mov	r1, sp
 8016d0c:	4798      	blx	r3
 8016d0e:	b002      	add	sp, #8
 8016d10:	bd10      	pop	{r4, pc}

08016d12 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8016d12:	b538      	push	{r3, r4, r5, lr}
 8016d14:	680b      	ldr	r3, [r1, #0]
 8016d16:	460c      	mov	r4, r1
 8016d18:	68db      	ldr	r3, [r3, #12]
 8016d1a:	4605      	mov	r5, r0
 8016d1c:	4798      	blx	r3
 8016d1e:	6823      	ldr	r3, [r4, #0]
 8016d20:	4620      	mov	r0, r4
 8016d22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016d24:	4629      	mov	r1, r5
 8016d26:	4798      	blx	r3
 8016d28:	4628      	mov	r0, r5
 8016d2a:	bd38      	pop	{r3, r4, r5, pc}

08016d2c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8016d2c:	b410      	push	{r4}
 8016d2e:	880a      	ldrh	r2, [r1, #0]
 8016d30:	8884      	ldrh	r4, [r0, #4]
 8016d32:	4422      	add	r2, r4
 8016d34:	800a      	strh	r2, [r1, #0]
 8016d36:	88c4      	ldrh	r4, [r0, #6]
 8016d38:	884a      	ldrh	r2, [r1, #2]
 8016d3a:	4422      	add	r2, r4
 8016d3c:	804a      	strh	r2, [r1, #2]
 8016d3e:	6940      	ldr	r0, [r0, #20]
 8016d40:	b120      	cbz	r0, 8016d4c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8016d42:	6803      	ldr	r3, [r0, #0]
 8016d44:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016d48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016d4a:	4718      	bx	r3
 8016d4c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016d50:	4770      	bx	lr

08016d52 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8016d52:	b570      	push	{r4, r5, r6, lr}
 8016d54:	8882      	ldrh	r2, [r0, #4]
 8016d56:	880b      	ldrh	r3, [r1, #0]
 8016d58:	4413      	add	r3, r2
 8016d5a:	800b      	strh	r3, [r1, #0]
 8016d5c:	88c2      	ldrh	r2, [r0, #6]
 8016d5e:	884b      	ldrh	r3, [r1, #2]
 8016d60:	460c      	mov	r4, r1
 8016d62:	4413      	add	r3, r2
 8016d64:	804b      	strh	r3, [r1, #2]
 8016d66:	4605      	mov	r5, r0
 8016d68:	1d01      	adds	r1, r0, #4
 8016d6a:	4620      	mov	r0, r4
 8016d6c:	f7f9 fdc6 	bl	80108fc <_ZN8touchgfx4RectaNERKS0_>
 8016d70:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016d74:	2b00      	cmp	r3, #0
 8016d76:	dd0b      	ble.n	8016d90 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016d78:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016d7c:	2b00      	cmp	r3, #0
 8016d7e:	dd07      	ble.n	8016d90 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016d80:	6968      	ldr	r0, [r5, #20]
 8016d82:	b128      	cbz	r0, 8016d90 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016d84:	6803      	ldr	r3, [r0, #0]
 8016d86:	4621      	mov	r1, r4
 8016d88:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016d8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016d8e:	4718      	bx	r3
 8016d90:	bd70      	pop	{r4, r5, r6, pc}
	...

08016d94 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8016d94:	b570      	push	{r4, r5, r6, lr}
 8016d96:	8882      	ldrh	r2, [r0, #4]
 8016d98:	880b      	ldrh	r3, [r1, #0]
 8016d9a:	4413      	add	r3, r2
 8016d9c:	800b      	strh	r3, [r1, #0]
 8016d9e:	88c2      	ldrh	r2, [r0, #6]
 8016da0:	884b      	ldrh	r3, [r1, #2]
 8016da2:	460c      	mov	r4, r1
 8016da4:	4413      	add	r3, r2
 8016da6:	804b      	strh	r3, [r1, #2]
 8016da8:	4605      	mov	r5, r0
 8016daa:	1d01      	adds	r1, r0, #4
 8016dac:	4620      	mov	r0, r4
 8016dae:	f7f9 fda5 	bl	80108fc <_ZN8touchgfx4RectaNERKS0_>
 8016db2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016db6:	2b00      	cmp	r3, #0
 8016db8:	dd19      	ble.n	8016dee <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016dba:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016dbe:	2b00      	cmp	r3, #0
 8016dc0:	dd15      	ble.n	8016dee <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016dc2:	6968      	ldr	r0, [r5, #20]
 8016dc4:	b128      	cbz	r0, 8016dd2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8016dc6:	6803      	ldr	r3, [r0, #0]
 8016dc8:	4621      	mov	r1, r4
 8016dca:	691b      	ldr	r3, [r3, #16]
 8016dcc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016dd0:	4718      	bx	r3
 8016dd2:	4b07      	ldr	r3, [pc, #28]	; (8016df0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8016dd4:	681b      	ldr	r3, [r3, #0]
 8016dd6:	3304      	adds	r3, #4
 8016dd8:	429d      	cmp	r5, r3
 8016dda:	d108      	bne.n	8016dee <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016ddc:	f7fe fea0 	bl	8015b20 <_ZN8touchgfx11Application11getInstanceEv>
 8016de0:	6803      	ldr	r3, [r0, #0]
 8016de2:	6821      	ldr	r1, [r4, #0]
 8016de4:	6862      	ldr	r2, [r4, #4]
 8016de6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016de8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016dec:	4718      	bx	r3
 8016dee:	bd70      	pop	{r4, r5, r6, pc}
 8016df0:	20012df8 	.word	0x20012df8

08016df4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8016df4:	b570      	push	{r4, r5, r6, lr}
 8016df6:	4604      	mov	r4, r0
 8016df8:	4616      	mov	r6, r2
 8016dfa:	460d      	mov	r5, r1
 8016dfc:	b901      	cbnz	r1, 8016e00 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8016dfe:	b192      	cbz	r2, 8016e26 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8016e00:	6823      	ldr	r3, [r4, #0]
 8016e02:	4620      	mov	r0, r4
 8016e04:	699b      	ldr	r3, [r3, #24]
 8016e06:	4798      	blx	r3
 8016e08:	88e2      	ldrh	r2, [r4, #6]
 8016e0a:	88a1      	ldrh	r1, [r4, #4]
 8016e0c:	4432      	add	r2, r6
 8016e0e:	4429      	add	r1, r5
 8016e10:	4620      	mov	r0, r4
 8016e12:	b212      	sxth	r2, r2
 8016e14:	b209      	sxth	r1, r1
 8016e16:	f7ec f89a 	bl	8002f4e <_ZN8touchgfx8Drawable5setXYEss>
 8016e1a:	6823      	ldr	r3, [r4, #0]
 8016e1c:	4620      	mov	r0, r4
 8016e1e:	699b      	ldr	r3, [r3, #24]
 8016e20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016e24:	4718      	bx	r3
 8016e26:	bd70      	pop	{r4, r5, r6, pc}

08016e28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8016e28:	b510      	push	{r4, lr}
 8016e2a:	4604      	mov	r4, r0
 8016e2c:	4608      	mov	r0, r1
 8016e2e:	2300      	movs	r3, #0
 8016e30:	8023      	strh	r3, [r4, #0]
 8016e32:	8063      	strh	r3, [r4, #2]
 8016e34:	6803      	ldr	r3, [r0, #0]
 8016e36:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016e3a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8016e3e:	80a1      	strh	r1, [r4, #4]
 8016e40:	80e2      	strh	r2, [r4, #6]
 8016e42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016e44:	4621      	mov	r1, r4
 8016e46:	4798      	blx	r3
 8016e48:	4620      	mov	r0, r4
 8016e4a:	bd10      	pop	{r4, pc}

08016e4c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8016e4c:	b530      	push	{r4, r5, lr}
 8016e4e:	8083      	strh	r3, [r0, #4]
 8016e50:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8016e54:	80c3      	strh	r3, [r0, #6]
 8016e56:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8016e5a:	7203      	strb	r3, [r0, #8]
 8016e5c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8016e60:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8016e64:	7243      	strb	r3, [r0, #9]
 8016e66:	7a83      	ldrb	r3, [r0, #10]
 8016e68:	6141      	str	r1, [r0, #20]
 8016e6a:	f365 0306 	bfi	r3, r5, #0, #7
 8016e6e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8016e72:	8302      	strh	r2, [r0, #24]
 8016e74:	f365 13c7 	bfi	r3, r5, #7, #1
 8016e78:	7283      	strb	r3, [r0, #10]
 8016e7a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8016e7e:	72c3      	strb	r3, [r0, #11]
 8016e80:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8016e84:	7303      	strb	r3, [r0, #12]
 8016e86:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8016e8a:	81c3      	strh	r3, [r0, #14]
 8016e8c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8016e90:	8203      	strh	r3, [r0, #16]
 8016e92:	4b01      	ldr	r3, [pc, #4]	; (8016e98 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8016e94:	6003      	str	r3, [r0, #0]
 8016e96:	bd30      	pop	{r4, r5, pc}
 8016e98:	0802f2a4 	.word	0x0802f2a4

08016e9c <_ZNK8touchgfx9ConstFont4findEt>:
 8016e9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016e9e:	6944      	ldr	r4, [r0, #20]
 8016ea0:	b3bc      	cbz	r4, 8016f12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016ea2:	88a3      	ldrh	r3, [r4, #4]
 8016ea4:	8b02      	ldrh	r2, [r0, #24]
 8016ea6:	1acb      	subs	r3, r1, r3
 8016ea8:	f102 32ff 	add.w	r2, r2, #4294967295
 8016eac:	d431      	bmi.n	8016f12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016eae:	4293      	cmp	r3, r2
 8016eb0:	dd0c      	ble.n	8016ecc <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8016eb2:	230e      	movs	r3, #14
 8016eb4:	fb03 4302 	mla	r3, r3, r2, r4
 8016eb8:	889b      	ldrh	r3, [r3, #4]
 8016eba:	1a5b      	subs	r3, r3, r1
 8016ebc:	1ad3      	subs	r3, r2, r3
 8016ebe:	429a      	cmp	r2, r3
 8016ec0:	db27      	blt.n	8016f12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016ec2:	2b00      	cmp	r3, #0
 8016ec4:	bfbc      	itt	lt
 8016ec6:	2302      	movlt	r3, #2
 8016ec8:	fb92 f3f3 	sdivlt	r3, r2, r3
 8016ecc:	2500      	movs	r5, #0
 8016ece:	260e      	movs	r6, #14
 8016ed0:	4295      	cmp	r5, r2
 8016ed2:	dc1e      	bgt.n	8016f12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016ed4:	fb06 4003 	mla	r0, r6, r3, r4
 8016ed8:	8887      	ldrh	r7, [r0, #4]
 8016eda:	42b9      	cmp	r1, r7
 8016edc:	d01a      	beq.n	8016f14 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8016ede:	d20d      	bcs.n	8016efc <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8016ee0:	1e5a      	subs	r2, r3, #1
 8016ee2:	4295      	cmp	r5, r2
 8016ee4:	dc15      	bgt.n	8016f12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016ee6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8016eea:	1a5b      	subs	r3, r3, r1
 8016eec:	1ad3      	subs	r3, r2, r3
 8016eee:	429a      	cmp	r2, r3
 8016ef0:	db0f      	blt.n	8016f12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016ef2:	429d      	cmp	r5, r3
 8016ef4:	ddec      	ble.n	8016ed0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016ef6:	1953      	adds	r3, r2, r5
 8016ef8:	105b      	asrs	r3, r3, #1
 8016efa:	e7e9      	b.n	8016ed0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016efc:	1c5d      	adds	r5, r3, #1
 8016efe:	42aa      	cmp	r2, r5
 8016f00:	db07      	blt.n	8016f12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016f02:	8a43      	ldrh	r3, [r0, #18]
 8016f04:	1acb      	subs	r3, r1, r3
 8016f06:	442b      	add	r3, r5
 8016f08:	429d      	cmp	r5, r3
 8016f0a:	dc02      	bgt.n	8016f12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016f0c:	429a      	cmp	r2, r3
 8016f0e:	dadf      	bge.n	8016ed0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016f10:	e7f1      	b.n	8016ef6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8016f12:	2000      	movs	r0, #0
 8016f14:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016f16 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8016f16:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016f18:	4604      	mov	r4, r0
 8016f1a:	4617      	mov	r7, r2
 8016f1c:	461e      	mov	r6, r3
 8016f1e:	b911      	cbnz	r1, 8016f26 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8016f20:	2500      	movs	r5, #0
 8016f22:	4628      	mov	r0, r5
 8016f24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016f26:	290a      	cmp	r1, #10
 8016f28:	d0fa      	beq.n	8016f20 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016f2a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8016f2e:	4291      	cmp	r1, r2
 8016f30:	d0f6      	beq.n	8016f20 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016f32:	f242 020b 	movw	r2, #8203	; 0x200b
 8016f36:	4291      	cmp	r1, r2
 8016f38:	d0f2      	beq.n	8016f20 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016f3a:	f7ff ffaf 	bl	8016e9c <_ZNK8touchgfx9ConstFont4findEt>
 8016f3e:	4605      	mov	r5, r0
 8016f40:	b950      	cbnz	r0, 8016f58 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8016f42:	6823      	ldr	r3, [r4, #0]
 8016f44:	4620      	mov	r0, r4
 8016f46:	691b      	ldr	r3, [r3, #16]
 8016f48:	4798      	blx	r3
 8016f4a:	4601      	mov	r1, r0
 8016f4c:	4620      	mov	r0, r4
 8016f4e:	f7ff ffa5 	bl	8016e9c <_ZNK8touchgfx9ConstFont4findEt>
 8016f52:	4605      	mov	r5, r0
 8016f54:	2800      	cmp	r0, #0
 8016f56:	d0e3      	beq.n	8016f20 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016f58:	6823      	ldr	r3, [r4, #0]
 8016f5a:	4629      	mov	r1, r5
 8016f5c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8016f5e:	4620      	mov	r0, r4
 8016f60:	4798      	blx	r3
 8016f62:	6038      	str	r0, [r7, #0]
 8016f64:	6823      	ldr	r3, [r4, #0]
 8016f66:	4620      	mov	r0, r4
 8016f68:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016f6a:	4798      	blx	r3
 8016f6c:	7030      	strb	r0, [r6, #0]
 8016f6e:	e7d8      	b.n	8016f22 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08016f70 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8016f70:	b538      	push	{r3, r4, r5, lr}
 8016f72:	4605      	mov	r5, r0
 8016f74:	f002 fb56 	bl	8019624 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016f78:	4604      	mov	r4, r0
 8016f7a:	4628      	mov	r0, r5
 8016f7c:	f002 fa96 	bl	80194ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016f80:	2800      	cmp	r0, #0
 8016f82:	bf14      	ite	ne
 8016f84:	2002      	movne	r0, #2
 8016f86:	2000      	moveq	r0, #0
 8016f88:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8016f8c:	b280      	uxth	r0, r0
 8016f8e:	bd38      	pop	{r3, r4, r5, pc}

08016f90 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8016f90:	b538      	push	{r3, r4, r5, lr}
 8016f92:	4605      	mov	r5, r0
 8016f94:	f002 fb46 	bl	8019624 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016f98:	4604      	mov	r4, r0
 8016f9a:	4628      	mov	r0, r5
 8016f9c:	f002 fa86 	bl	80194ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016fa0:	2800      	cmp	r0, #0
 8016fa2:	bf14      	ite	ne
 8016fa4:	2002      	movne	r0, #2
 8016fa6:	2000      	moveq	r0, #0
 8016fa8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8016fac:	f040 0001 	orr.w	r0, r0, #1
 8016fb0:	b280      	uxth	r0, r0
 8016fb2:	bd38      	pop	{r3, r4, r5, pc}

08016fb4 <_ZN8touchgfx4clzuEm>:
 8016fb4:	4603      	mov	r3, r0
 8016fb6:	b1c8      	cbz	r0, 8016fec <_ZN8touchgfx4clzuEm+0x38>
 8016fb8:	0c02      	lsrs	r2, r0, #16
 8016fba:	0412      	lsls	r2, r2, #16
 8016fbc:	b9a2      	cbnz	r2, 8016fe8 <_ZN8touchgfx4clzuEm+0x34>
 8016fbe:	0403      	lsls	r3, r0, #16
 8016fc0:	2010      	movs	r0, #16
 8016fc2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8016fc6:	bf04      	itt	eq
 8016fc8:	021b      	lsleq	r3, r3, #8
 8016fca:	3008      	addeq	r0, #8
 8016fcc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8016fd0:	bf04      	itt	eq
 8016fd2:	011b      	lsleq	r3, r3, #4
 8016fd4:	3004      	addeq	r0, #4
 8016fd6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8016fda:	bf04      	itt	eq
 8016fdc:	009b      	lsleq	r3, r3, #2
 8016fde:	3002      	addeq	r0, #2
 8016fe0:	2b00      	cmp	r3, #0
 8016fe2:	db04      	blt.n	8016fee <_ZN8touchgfx4clzuEm+0x3a>
 8016fe4:	3001      	adds	r0, #1
 8016fe6:	4770      	bx	lr
 8016fe8:	2000      	movs	r0, #0
 8016fea:	e7ea      	b.n	8016fc2 <_ZN8touchgfx4clzuEm+0xe>
 8016fec:	2020      	movs	r0, #32
 8016fee:	4770      	bx	lr

08016ff0 <_ZN8touchgfx7muldivuEmmmRm>:
 8016ff0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8016ff4:	460f      	mov	r7, r1
 8016ff6:	4615      	mov	r5, r2
 8016ff8:	461e      	mov	r6, r3
 8016ffa:	4601      	mov	r1, r0
 8016ffc:	b100      	cbz	r0, 8017000 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8016ffe:	b927      	cbnz	r7, 801700a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8017000:	2000      	movs	r0, #0
 8017002:	6030      	str	r0, [r6, #0]
 8017004:	b002      	add	sp, #8
 8017006:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801700a:	f7ff ffd3 	bl	8016fb4 <_ZN8touchgfx4clzuEm>
 801700e:	b980      	cbnz	r0, 8017032 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8017010:	4638      	mov	r0, r7
 8017012:	f7ff ffcf 	bl	8016fb4 <_ZN8touchgfx4clzuEm>
 8017016:	2800      	cmp	r0, #0
 8017018:	dd05      	ble.n	8017026 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801701a:	4633      	mov	r3, r6
 801701c:	462a      	mov	r2, r5
 801701e:	4638      	mov	r0, r7
 8017020:	f7ff ffe6 	bl	8016ff0 <_ZN8touchgfx7muldivuEmmmRm>
 8017024:	e7ee      	b.n	8017004 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017026:	f04f 33ff 	mov.w	r3, #4294967295
 801702a:	6033      	str	r3, [r6, #0]
 801702c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8017030:	e7e8      	b.n	8017004 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017032:	fa37 f800 	lsrs.w	r8, r7, r0
 8017036:	fb07 f301 	mul.w	r3, r7, r1
 801703a:	d105      	bne.n	8017048 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801703c:	fbb3 f0f5 	udiv	r0, r3, r5
 8017040:	fb05 3510 	mls	r5, r5, r0, r3
 8017044:	6035      	str	r5, [r6, #0]
 8017046:	e7dd      	b.n	8017004 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017048:	2301      	movs	r3, #1
 801704a:	fa01 fa00 	lsl.w	sl, r1, r0
 801704e:	fa03 f000 	lsl.w	r0, r3, r0
 8017052:	3801      	subs	r0, #1
 8017054:	462a      	mov	r2, r5
 8017056:	4633      	mov	r3, r6
 8017058:	4038      	ands	r0, r7
 801705a:	f7ff ffc9 	bl	8016ff0 <_ZN8touchgfx7muldivuEmmmRm>
 801705e:	fbba f9f5 	udiv	r9, sl, r5
 8017062:	462a      	mov	r2, r5
 8017064:	4607      	mov	r7, r0
 8017066:	ab01      	add	r3, sp, #4
 8017068:	fb05 a119 	mls	r1, r5, r9, sl
 801706c:	4640      	mov	r0, r8
 801706e:	f7ff ffbf 	bl	8016ff0 <_ZN8touchgfx7muldivuEmmmRm>
 8017072:	9b01      	ldr	r3, [sp, #4]
 8017074:	6832      	ldr	r2, [r6, #0]
 8017076:	fb08 f409 	mul.w	r4, r8, r9
 801707a:	441a      	add	r2, r3
 801707c:	fbb2 f3f5 	udiv	r3, r2, r5
 8017080:	441c      	add	r4, r3
 8017082:	443c      	add	r4, r7
 8017084:	4420      	add	r0, r4
 8017086:	fb05 2513 	mls	r5, r5, r3, r2
 801708a:	e7db      	b.n	8017044 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801708c <_ZN8touchgfx6muldivElllRl>:
 801708c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801708e:	2800      	cmp	r0, #0
 8017090:	bfba      	itte	lt
 8017092:	4240      	neglt	r0, r0
 8017094:	f04f 34ff 	movlt.w	r4, #4294967295
 8017098:	2401      	movge	r4, #1
 801709a:	2900      	cmp	r1, #0
 801709c:	bfbc      	itt	lt
 801709e:	4249      	neglt	r1, r1
 80170a0:	4264      	neglt	r4, r4
 80170a2:	2a00      	cmp	r2, #0
 80170a4:	bfb6      	itet	lt
 80170a6:	4265      	neglt	r5, r4
 80170a8:	4625      	movge	r5, r4
 80170aa:	4252      	neglt	r2, r2
 80170ac:	4288      	cmp	r0, r1
 80170ae:	461e      	mov	r6, r3
 80170b0:	bfc2      	ittt	gt
 80170b2:	4603      	movgt	r3, r0
 80170b4:	4608      	movgt	r0, r1
 80170b6:	4619      	movgt	r1, r3
 80170b8:	ab01      	add	r3, sp, #4
 80170ba:	f7ff ff99 	bl	8016ff0 <_ZN8touchgfx7muldivuEmmmRm>
 80170be:	9b01      	ldr	r3, [sp, #4]
 80170c0:	4368      	muls	r0, r5
 80170c2:	435c      	muls	r4, r3
 80170c4:	6034      	str	r4, [r6, #0]
 80170c6:	b002      	add	sp, #8
 80170c8:	bd70      	pop	{r4, r5, r6, pc}

080170ca <_ZN8touchgfx6muldivElll>:
 80170ca:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80170cc:	4606      	mov	r6, r0
 80170ce:	ab01      	add	r3, sp, #4
 80170d0:	460d      	mov	r5, r1
 80170d2:	4614      	mov	r4, r2
 80170d4:	f7ff ffda 	bl	801708c <_ZN8touchgfx6muldivElllRl>
 80170d8:	2e00      	cmp	r6, #0
 80170da:	db20      	blt.n	801711e <_ZN8touchgfx6muldivElll+0x54>
 80170dc:	bf14      	ite	ne
 80170de:	2301      	movne	r3, #1
 80170e0:	2300      	moveq	r3, #0
 80170e2:	2d00      	cmp	r5, #0
 80170e4:	db1e      	blt.n	8017124 <_ZN8touchgfx6muldivElll+0x5a>
 80170e6:	bf14      	ite	ne
 80170e8:	2201      	movne	r2, #1
 80170ea:	2200      	moveq	r2, #0
 80170ec:	2c00      	cmp	r4, #0
 80170ee:	fb03 f202 	mul.w	r2, r3, r2
 80170f2:	db1a      	blt.n	801712a <_ZN8touchgfx6muldivElll+0x60>
 80170f4:	bf14      	ite	ne
 80170f6:	2301      	movne	r3, #1
 80170f8:	2300      	moveq	r3, #0
 80170fa:	4353      	muls	r3, r2
 80170fc:	2b01      	cmp	r3, #1
 80170fe:	d117      	bne.n	8017130 <_ZN8touchgfx6muldivElll+0x66>
 8017100:	9b01      	ldr	r3, [sp, #4]
 8017102:	2c00      	cmp	r4, #0
 8017104:	bfb8      	it	lt
 8017106:	4264      	neglt	r4, r4
 8017108:	2b00      	cmp	r3, #0
 801710a:	f104 0401 	add.w	r4, r4, #1
 801710e:	bfb8      	it	lt
 8017110:	425b      	neglt	r3, r3
 8017112:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017116:	db00      	blt.n	801711a <_ZN8touchgfx6muldivElll+0x50>
 8017118:	3001      	adds	r0, #1
 801711a:	b002      	add	sp, #8
 801711c:	bd70      	pop	{r4, r5, r6, pc}
 801711e:	f04f 33ff 	mov.w	r3, #4294967295
 8017122:	e7de      	b.n	80170e2 <_ZN8touchgfx6muldivElll+0x18>
 8017124:	f04f 32ff 	mov.w	r2, #4294967295
 8017128:	e7e0      	b.n	80170ec <_ZN8touchgfx6muldivElll+0x22>
 801712a:	f04f 33ff 	mov.w	r3, #4294967295
 801712e:	e7e4      	b.n	80170fa <_ZN8touchgfx6muldivElll+0x30>
 8017130:	3301      	adds	r3, #1
 8017132:	d1f2      	bne.n	801711a <_ZN8touchgfx6muldivElll+0x50>
 8017134:	9b01      	ldr	r3, [sp, #4]
 8017136:	2c00      	cmp	r4, #0
 8017138:	bfb8      	it	lt
 801713a:	4264      	neglt	r4, r4
 801713c:	2b00      	cmp	r3, #0
 801713e:	bfb8      	it	lt
 8017140:	425b      	neglt	r3, r3
 8017142:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017146:	bfc8      	it	gt
 8017148:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801714c:	e7e5      	b.n	801711a <_ZN8touchgfx6muldivElll+0x50>

0801714e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801714e:	2000      	movs	r0, #0
 8017150:	4770      	bx	lr

08017152 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8017152:	2001      	movs	r0, #1
 8017154:	4770      	bx	lr

08017156 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8017156:	2002      	movs	r0, #2
 8017158:	4770      	bx	lr

0801715a <_ZN8touchgfx6ScreenD1Ev>:
 801715a:	4770      	bx	lr

0801715c <_ZN8touchgfx12GestureEventD1Ev>:
 801715c:	4770      	bx	lr

0801715e <_ZN8touchgfx9DragEventD1Ev>:
 801715e:	4770      	bx	lr

08017160 <_ZN8touchgfx10ClickEventD1Ev>:
 8017160:	4770      	bx	lr

08017162 <_ZN8touchgfx10ClickEventD0Ev>:
 8017162:	b510      	push	{r4, lr}
 8017164:	210c      	movs	r1, #12
 8017166:	4604      	mov	r4, r0
 8017168:	f012 fd51 	bl	8029c0e <_ZdlPvj>
 801716c:	4620      	mov	r0, r4
 801716e:	bd10      	pop	{r4, pc}

08017170 <_ZN8touchgfx9DragEventD0Ev>:
 8017170:	b510      	push	{r4, lr}
 8017172:	2110      	movs	r1, #16
 8017174:	4604      	mov	r4, r0
 8017176:	f012 fd4a 	bl	8029c0e <_ZdlPvj>
 801717a:	4620      	mov	r0, r4
 801717c:	bd10      	pop	{r4, pc}

0801717e <_ZN8touchgfx12GestureEventD0Ev>:
 801717e:	b510      	push	{r4, lr}
 8017180:	210c      	movs	r1, #12
 8017182:	4604      	mov	r4, r0
 8017184:	f012 fd43 	bl	8029c0e <_ZdlPvj>
 8017188:	4620      	mov	r0, r4
 801718a:	bd10      	pop	{r4, pc}

0801718c <_ZN8touchgfx6ScreenD0Ev>:
 801718c:	b510      	push	{r4, lr}
 801718e:	213c      	movs	r1, #60	; 0x3c
 8017190:	4604      	mov	r4, r0
 8017192:	f012 fd3c 	bl	8029c0e <_ZdlPvj>
 8017196:	4620      	mov	r0, r4
 8017198:	bd10      	pop	{r4, pc}
	...

0801719c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801719c:	b530      	push	{r4, r5, lr}
 801719e:	460d      	mov	r5, r1
 80171a0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80171a2:	b087      	sub	sp, #28
 80171a4:	4604      	mov	r4, r0
 80171a6:	b301      	cbz	r1, 80171ea <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80171a8:	a801      	add	r0, sp, #4
 80171aa:	f7ff fe3d 	bl	8016e28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80171ae:	892a      	ldrh	r2, [r5, #8]
 80171b0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80171b4:	7928      	ldrb	r0, [r5, #4]
 80171b6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80171ba:	f88d 0010 	strb.w	r0, [sp, #16]
 80171be:	1ad2      	subs	r2, r2, r3
 80171c0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80171c2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80171c4:	f8ad 1012 	strh.w	r1, [sp, #18]
 80171c8:	441a      	add	r2, r3
 80171ca:	896b      	ldrh	r3, [r5, #10]
 80171cc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80171d0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80171d4:	1b5b      	subs	r3, r3, r5
 80171d6:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 80171d8:	442b      	add	r3, r5
 80171da:	4d05      	ldr	r5, [pc, #20]	; (80171f0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80171dc:	9503      	str	r5, [sp, #12]
 80171de:	f8ad 3016 	strh.w	r3, [sp, #22]
 80171e2:	6803      	ldr	r3, [r0, #0]
 80171e4:	a903      	add	r1, sp, #12
 80171e6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80171e8:	4798      	blx	r3
 80171ea:	b007      	add	sp, #28
 80171ec:	bd30      	pop	{r4, r5, pc}
 80171ee:	bf00      	nop
 80171f0:	0802f32c 	.word	0x0802f32c

080171f4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80171f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80171f8:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80171fa:	b08a      	sub	sp, #40	; 0x28
 80171fc:	4604      	mov	r4, r0
 80171fe:	460d      	mov	r5, r1
 8017200:	b113      	cbz	r3, 8017208 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8017202:	790b      	ldrb	r3, [r1, #4]
 8017204:	2b00      	cmp	r3, #0
 8017206:	d044      	beq.n	8017292 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017208:	f104 0804 	add.w	r8, r4, #4
 801720c:	4641      	mov	r1, r8
 801720e:	a803      	add	r0, sp, #12
 8017210:	f7ff fe0a 	bl	8016e28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017214:	792b      	ldrb	r3, [r5, #4]
 8017216:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801721a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801721e:	b983      	cbnz	r3, 8017242 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8017220:	892a      	ldrh	r2, [r5, #8]
 8017222:	88e9      	ldrh	r1, [r5, #6]
 8017224:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8017228:	1b92      	subs	r2, r2, r6
 801722a:	1bc9      	subs	r1, r1, r7
 801722c:	9301      	str	r3, [sp, #4]
 801722e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8017232:	9300      	str	r3, [sp, #0]
 8017234:	b212      	sxth	r2, r2
 8017236:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801723a:	b209      	sxth	r1, r1
 801723c:	4640      	mov	r0, r8
 801723e:	f7f9 fa79 	bl	8010734 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8017242:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8017244:	b329      	cbz	r1, 8017292 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017246:	a805      	add	r0, sp, #20
 8017248:	f7ff fdee 	bl	8016e28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801724c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8017250:	792b      	ldrb	r3, [r5, #4]
 8017252:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017254:	f88d 3020 	strb.w	r3, [sp, #32]
 8017258:	1abf      	subs	r7, r7, r2
 801725a:	88ea      	ldrh	r2, [r5, #6]
 801725c:	4417      	add	r7, r2
 801725e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8017260:	4417      	add	r7, r2
 8017262:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8017266:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801726a:	1ab6      	subs	r6, r6, r2
 801726c:	892a      	ldrh	r2, [r5, #8]
 801726e:	4416      	add	r6, r2
 8017270:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017272:	4416      	add	r6, r2
 8017274:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8017278:	4a07      	ldr	r2, [pc, #28]	; (8017298 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801727a:	9207      	str	r2, [sp, #28]
 801727c:	2600      	movs	r6, #0
 801727e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8017282:	6803      	ldr	r3, [r0, #0]
 8017284:	a907      	add	r1, sp, #28
 8017286:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017288:	4798      	blx	r3
 801728a:	792b      	ldrb	r3, [r5, #4]
 801728c:	b10b      	cbz	r3, 8017292 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801728e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8017292:	b00a      	add	sp, #40	; 0x28
 8017294:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017298:	0802f304 	.word	0x0802f304

0801729c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801729c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80172a0:	460c      	mov	r4, r1
 80172a2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80172a4:	b088      	sub	sp, #32
 80172a6:	4605      	mov	r5, r0
 80172a8:	2900      	cmp	r1, #0
 80172aa:	d06d      	beq.n	8017388 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80172ac:	4668      	mov	r0, sp
 80172ae:	f7ff fdbb 	bl	8016e28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80172b2:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80172b4:	88e3      	ldrh	r3, [r4, #6]
 80172b6:	f9bd 8000 	ldrsh.w	r8, [sp]
 80172ba:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80172be:	440b      	add	r3, r1
 80172c0:	b21b      	sxth	r3, r3
 80172c2:	4543      	cmp	r3, r8
 80172c4:	db31      	blt.n	801732a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80172c6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80172ca:	44c4      	add	ip, r8
 80172cc:	fa0f fc8c 	sxth.w	ip, ip
 80172d0:	4563      	cmp	r3, ip
 80172d2:	da2a      	bge.n	801732a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80172d4:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 80172d6:	8926      	ldrh	r6, [r4, #8]
 80172d8:	4416      	add	r6, r2
 80172da:	b236      	sxth	r6, r6
 80172dc:	42be      	cmp	r6, r7
 80172de:	db24      	blt.n	801732a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80172e0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80172e4:	4438      	add	r0, r7
 80172e6:	b200      	sxth	r0, r0
 80172e8:	4286      	cmp	r6, r0
 80172ea:	da1e      	bge.n	801732a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80172ec:	8963      	ldrh	r3, [r4, #10]
 80172ee:	4419      	add	r1, r3
 80172f0:	b209      	sxth	r1, r1
 80172f2:	4541      	cmp	r1, r8
 80172f4:	db08      	blt.n	8017308 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80172f6:	4561      	cmp	r1, ip
 80172f8:	da06      	bge.n	8017308 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80172fa:	89a3      	ldrh	r3, [r4, #12]
 80172fc:	441a      	add	r2, r3
 80172fe:	b212      	sxth	r2, r2
 8017300:	42ba      	cmp	r2, r7
 8017302:	db01      	blt.n	8017308 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017304:	4282      	cmp	r2, r0
 8017306:	db10      	blt.n	801732a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017308:	4b21      	ldr	r3, [pc, #132]	; (8017390 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801730a:	9304      	str	r3, [sp, #16]
 801730c:	2302      	movs	r3, #2
 801730e:	f88d 3014 	strb.w	r3, [sp, #20]
 8017312:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017314:	2300      	movs	r3, #0
 8017316:	f8ad 3016 	strh.w	r3, [sp, #22]
 801731a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801731e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8017322:	6803      	ldr	r3, [r0, #0]
 8017324:	a904      	add	r1, sp, #16
 8017326:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017328:	4798      	blx	r3
 801732a:	1d29      	adds	r1, r5, #4
 801732c:	a802      	add	r0, sp, #8
 801732e:	f7ff fd7b 	bl	8016e28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017332:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017336:	88e0      	ldrh	r0, [r4, #6]
 8017338:	7921      	ldrb	r1, [r4, #4]
 801733a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801733e:	8922      	ldrh	r2, [r4, #8]
 8017340:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8017342:	f88d 1014 	strb.w	r1, [sp, #20]
 8017346:	eba3 0808 	sub.w	r8, r3, r8
 801734a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801734e:	1bdf      	subs	r7, r3, r7
 8017350:	b2bb      	uxth	r3, r7
 8017352:	fa1f f888 	uxth.w	r8, r8
 8017356:	8967      	ldrh	r7, [r4, #10]
 8017358:	89a4      	ldrh	r4, [r4, #12]
 801735a:	4440      	add	r0, r8
 801735c:	4460      	add	r0, ip
 801735e:	441a      	add	r2, r3
 8017360:	44b8      	add	r8, r7
 8017362:	4423      	add	r3, r4
 8017364:	f8ad 0016 	strh.w	r0, [sp, #22]
 8017368:	4433      	add	r3, r6
 801736a:	4432      	add	r2, r6
 801736c:	44e0      	add	r8, ip
 801736e:	4c09      	ldr	r4, [pc, #36]	; (8017394 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8017370:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017372:	9404      	str	r4, [sp, #16]
 8017374:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017378:	f8ad 801a 	strh.w	r8, [sp, #26]
 801737c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017380:	6803      	ldr	r3, [r0, #0]
 8017382:	a904      	add	r1, sp, #16
 8017384:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017386:	4798      	blx	r3
 8017388:	b008      	add	sp, #32
 801738a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801738e:	bf00      	nop
 8017390:	0802f304 	.word	0x0802f304
 8017394:	0802f318 	.word	0x0802f318

08017398 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8017398:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801739a:	4604      	mov	r4, r0
 801739c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80173a0:	3201      	adds	r2, #1
 80173a2:	d112      	bne.n	80173ca <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80173a4:	6803      	ldr	r3, [r0, #0]
 80173a6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80173aa:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80173ae:	f8ad 1004 	strh.w	r1, [sp, #4]
 80173b2:	2500      	movs	r5, #0
 80173b4:	9500      	str	r5, [sp, #0]
 80173b6:	466d      	mov	r5, sp
 80173b8:	4629      	mov	r1, r5
 80173ba:	f8ad 2006 	strh.w	r2, [sp, #6]
 80173be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80173c0:	4798      	blx	r3
 80173c2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80173c6:	e884 0003 	stmia.w	r4, {r0, r1}
 80173ca:	4620      	mov	r0, r4
 80173cc:	b003      	add	sp, #12
 80173ce:	bd30      	pop	{r4, r5, pc}

080173d0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80173d0:	b513      	push	{r0, r1, r4, lr}
 80173d2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80173d6:	3301      	adds	r3, #1
 80173d8:	4604      	mov	r4, r0
 80173da:	d109      	bne.n	80173f0 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80173dc:	4601      	mov	r1, r0
 80173de:	4668      	mov	r0, sp
 80173e0:	f7ff fd22 	bl	8016e28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80173e4:	f8bd 3000 	ldrh.w	r3, [sp]
 80173e8:	8423      	strh	r3, [r4, #32]
 80173ea:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80173ee:	8463      	strh	r3, [r4, #34]	; 0x22
 80173f0:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80173f4:	b002      	add	sp, #8
 80173f6:	bd10      	pop	{r4, pc}

080173f8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80173f8:	b513      	push	{r0, r1, r4, lr}
 80173fa:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 80173fe:	3301      	adds	r3, #1
 8017400:	4604      	mov	r4, r0
 8017402:	d109      	bne.n	8017418 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8017404:	4601      	mov	r1, r0
 8017406:	4668      	mov	r0, sp
 8017408:	f7ff fd0e 	bl	8016e28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801740c:	f8bd 3000 	ldrh.w	r3, [sp]
 8017410:	8423      	strh	r3, [r4, #32]
 8017412:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017416:	8463      	strh	r3, [r4, #34]	; 0x22
 8017418:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801741c:	b002      	add	sp, #8
 801741e:	bd10      	pop	{r4, pc}

08017420 <_ZN8touchgfx6ScreenC1Ev>:
 8017420:	b570      	push	{r4, r5, r6, lr}
 8017422:	4605      	mov	r5, r0
 8017424:	4b16      	ldr	r3, [pc, #88]	; (8017480 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8017426:	f845 3b04 	str.w	r3, [r5], #4
 801742a:	2300      	movs	r3, #0
 801742c:	8103      	strh	r3, [r0, #8]
 801742e:	8143      	strh	r3, [r0, #10]
 8017430:	8183      	strh	r3, [r0, #12]
 8017432:	81c3      	strh	r3, [r0, #14]
 8017434:	8203      	strh	r3, [r0, #16]
 8017436:	8243      	strh	r3, [r0, #18]
 8017438:	8283      	strh	r3, [r0, #20]
 801743a:	82c3      	strh	r3, [r0, #22]
 801743c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8017440:	6203      	str	r3, [r0, #32]
 8017442:	8483      	strh	r3, [r0, #36]	; 0x24
 8017444:	84c3      	strh	r3, [r0, #38]	; 0x26
 8017446:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801744a:	4a0e      	ldr	r2, [pc, #56]	; (8017484 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801744c:	6343      	str	r3, [r0, #52]	; 0x34
 801744e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8017452:	4b0d      	ldr	r3, [pc, #52]	; (8017488 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8017454:	6042      	str	r2, [r0, #4]
 8017456:	f9b3 6000 	ldrsh.w	r6, [r3]
 801745a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801745c:	4a0b      	ldr	r2, [pc, #44]	; (801748c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801745e:	4604      	mov	r4, r0
 8017460:	2101      	movs	r1, #1
 8017462:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8017466:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801746a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801746e:	4628      	mov	r0, r5
 8017470:	4798      	blx	r3
 8017472:	6863      	ldr	r3, [r4, #4]
 8017474:	4628      	mov	r0, r5
 8017476:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8017478:	4631      	mov	r1, r6
 801747a:	4798      	blx	r3
 801747c:	4620      	mov	r0, r4
 801747e:	bd70      	pop	{r4, r5, r6, pc}
 8017480:	0802f340 	.word	0x0802f340
 8017484:	0802eba4 	.word	0x0802eba4
 8017488:	20012daa 	.word	0x20012daa
 801748c:	20012da8 	.word	0x20012da8

08017490 <_ZN8touchgfx6Screen4drawEv>:
 8017490:	b507      	push	{r0, r1, r2, lr}
 8017492:	4b09      	ldr	r3, [pc, #36]	; (80174b8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8017494:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017498:	4b08      	ldr	r3, [pc, #32]	; (80174bc <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801749a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801749e:	f9b3 3000 	ldrsh.w	r3, [r3]
 80174a2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80174a6:	6803      	ldr	r3, [r0, #0]
 80174a8:	2100      	movs	r1, #0
 80174aa:	9100      	str	r1, [sp, #0]
 80174ac:	689b      	ldr	r3, [r3, #8]
 80174ae:	4669      	mov	r1, sp
 80174b0:	4798      	blx	r3
 80174b2:	b003      	add	sp, #12
 80174b4:	f85d fb04 	ldr.w	pc, [sp], #4
 80174b8:	20012da8 	.word	0x20012da8
 80174bc:	20012daa 	.word	0x20012daa

080174c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80174c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80174c4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80174c8:	2b00      	cmp	r3, #0
 80174ca:	b089      	sub	sp, #36	; 0x24
 80174cc:	4680      	mov	r8, r0
 80174ce:	460c      	mov	r4, r1
 80174d0:	4615      	mov	r5, r2
 80174d2:	dd0e      	ble.n	80174f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80174d4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80174d8:	2b00      	cmp	r3, #0
 80174da:	dd0a      	ble.n	80174f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80174dc:	4628      	mov	r0, r5
 80174de:	f7ff ff5b 	bl	8017398 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80174e2:	4621      	mov	r1, r4
 80174e4:	f7fe fa3d 	bl	8015962 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80174e8:	69eb      	ldr	r3, [r5, #28]
 80174ea:	b928      	cbnz	r0, 80174f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80174ec:	461d      	mov	r5, r3
 80174ee:	2b00      	cmp	r3, #0
 80174f0:	d1f4      	bne.n	80174dc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80174f2:	b009      	add	sp, #36	; 0x24
 80174f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80174f8:	ae04      	add	r6, sp, #16
 80174fa:	2b00      	cmp	r3, #0
 80174fc:	f000 80b5 	beq.w	801766a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017500:	682b      	ldr	r3, [r5, #0]
 8017502:	4629      	mov	r1, r5
 8017504:	68db      	ldr	r3, [r3, #12]
 8017506:	a802      	add	r0, sp, #8
 8017508:	4798      	blx	r3
 801750a:	4628      	mov	r0, r5
 801750c:	f7ff ff60 	bl	80173d0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017510:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8017514:	4407      	add	r7, r0
 8017516:	4628      	mov	r0, r5
 8017518:	f7ff ff6e 	bl	80173f8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801751c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017520:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8017524:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017528:	4418      	add	r0, r3
 801752a:	4621      	mov	r1, r4
 801752c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8017530:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017534:	b23f      	sxth	r7, r7
 8017536:	4630      	mov	r0, r6
 8017538:	f8ad 3016 	strh.w	r3, [sp, #22]
 801753c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8017540:	f7f9 f9dc 	bl	80108fc <_ZN8touchgfx4RectaNERKS0_>
 8017544:	4628      	mov	r0, r5
 8017546:	f7ff ff27 	bl	8017398 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801754a:	4602      	mov	r2, r0
 801754c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8017550:	ab06      	add	r3, sp, #24
 8017552:	e883 0003 	stmia.w	r3, {r0, r1}
 8017556:	4611      	mov	r1, r2
 8017558:	4618      	mov	r0, r3
 801755a:	f7f9 f9cf 	bl	80108fc <_ZN8touchgfx4RectaNERKS0_>
 801755e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8017562:	f9b4 1000 	ldrsh.w	r1, [r4]
 8017566:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801756a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801756e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8017572:	4299      	cmp	r1, r3
 8017574:	d10b      	bne.n	801758e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017576:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801757a:	4552      	cmp	r2, sl
 801757c:	d107      	bne.n	801758e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801757e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8017582:	455a      	cmp	r2, fp
 8017584:	d103      	bne.n	801758e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017586:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801758a:	454a      	cmp	r2, r9
 801758c:	d06d      	beq.n	801766a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801758e:	f1bb 0f00 	cmp.w	fp, #0
 8017592:	dd65      	ble.n	8017660 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8017594:	f1b9 0f00 	cmp.w	r9, #0
 8017598:	dd62      	ble.n	8017660 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801759a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801759e:	fa1f f08a 	uxth.w	r0, sl
 80175a2:	4552      	cmp	r2, sl
 80175a4:	9000      	str	r0, [sp, #0]
 80175a6:	da12      	bge.n	80175ce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80175a8:	9301      	str	r3, [sp, #4]
 80175aa:	9b00      	ldr	r3, [sp, #0]
 80175ac:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80175b0:	f8ad 2012 	strh.w	r2, [sp, #18]
 80175b4:	1a9a      	subs	r2, r3, r2
 80175b6:	f8ad 1010 	strh.w	r1, [sp, #16]
 80175ba:	f8ad 0014 	strh.w	r0, [sp, #20]
 80175be:	f8ad 2016 	strh.w	r2, [sp, #22]
 80175c2:	69ea      	ldr	r2, [r5, #28]
 80175c4:	4631      	mov	r1, r6
 80175c6:	4640      	mov	r0, r8
 80175c8:	f7ff ff7a 	bl	80174c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80175cc:	9b01      	ldr	r3, [sp, #4]
 80175ce:	f9b4 2000 	ldrsh.w	r2, [r4]
 80175d2:	429a      	cmp	r2, r3
 80175d4:	b29f      	uxth	r7, r3
 80175d6:	da0d      	bge.n	80175f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80175d8:	f8ad 2010 	strh.w	r2, [sp, #16]
 80175dc:	1aba      	subs	r2, r7, r2
 80175de:	f8ad a012 	strh.w	sl, [sp, #18]
 80175e2:	f8ad 2014 	strh.w	r2, [sp, #20]
 80175e6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80175ea:	69ea      	ldr	r2, [r5, #28]
 80175ec:	4631      	mov	r1, r6
 80175ee:	4640      	mov	r0, r8
 80175f0:	f7ff ff66 	bl	80174c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80175f4:	8822      	ldrh	r2, [r4, #0]
 80175f6:	88a3      	ldrh	r3, [r4, #4]
 80175f8:	445f      	add	r7, fp
 80175fa:	4413      	add	r3, r2
 80175fc:	b29b      	uxth	r3, r3
 80175fe:	b2bf      	uxth	r7, r7
 8017600:	b23a      	sxth	r2, r7
 8017602:	b219      	sxth	r1, r3
 8017604:	4291      	cmp	r1, r2
 8017606:	dd0d      	ble.n	8017624 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8017608:	1bdb      	subs	r3, r3, r7
 801760a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801760e:	f8ad a012 	strh.w	sl, [sp, #18]
 8017612:	f8ad 3014 	strh.w	r3, [sp, #20]
 8017616:	f8ad 9016 	strh.w	r9, [sp, #22]
 801761a:	69ea      	ldr	r2, [r5, #28]
 801761c:	4631      	mov	r1, r6
 801761e:	4640      	mov	r0, r8
 8017620:	f7ff ff4e 	bl	80174c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017624:	88e2      	ldrh	r2, [r4, #6]
 8017626:	8863      	ldrh	r3, [r4, #2]
 8017628:	4413      	add	r3, r2
 801762a:	9a00      	ldr	r2, [sp, #0]
 801762c:	444a      	add	r2, r9
 801762e:	b29b      	uxth	r3, r3
 8017630:	fa1f f982 	uxth.w	r9, r2
 8017634:	fa0f f289 	sxth.w	r2, r9
 8017638:	b219      	sxth	r1, r3
 801763a:	428a      	cmp	r2, r1
 801763c:	da15      	bge.n	801766a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801763e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017642:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017646:	f8ad 1014 	strh.w	r1, [sp, #20]
 801764a:	eba3 0309 	sub.w	r3, r3, r9
 801764e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017652:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017656:	f8ad 3016 	strh.w	r3, [sp, #22]
 801765a:	69ea      	ldr	r2, [r5, #28]
 801765c:	4631      	mov	r1, r6
 801765e:	e001      	b.n	8017664 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8017660:	69ea      	ldr	r2, [r5, #28]
 8017662:	4621      	mov	r1, r4
 8017664:	4640      	mov	r0, r8
 8017666:	f7ff ff2b 	bl	80174c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801766a:	4628      	mov	r0, r5
 801766c:	f7ff fe94 	bl	8017398 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017670:	6861      	ldr	r1, [r4, #4]
 8017672:	4602      	mov	r2, r0
 8017674:	6820      	ldr	r0, [r4, #0]
 8017676:	4633      	mov	r3, r6
 8017678:	c303      	stmia	r3!, {r0, r1}
 801767a:	4611      	mov	r1, r2
 801767c:	4630      	mov	r0, r6
 801767e:	f7f9 f93d 	bl	80108fc <_ZN8touchgfx4RectaNERKS0_>
 8017682:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8017686:	2b00      	cmp	r3, #0
 8017688:	f77f af33 	ble.w	80174f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801768c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8017690:	2b00      	cmp	r3, #0
 8017692:	f77f af2e 	ble.w	80174f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017696:	4628      	mov	r0, r5
 8017698:	f7ff fe9a 	bl	80173d0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801769c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80176a0:	1a18      	subs	r0, r3, r0
 80176a2:	f8ad 0010 	strh.w	r0, [sp, #16]
 80176a6:	4628      	mov	r0, r5
 80176a8:	f7ff fea6 	bl	80173f8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80176ac:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80176b0:	1a18      	subs	r0, r3, r0
 80176b2:	f8ad 0012 	strh.w	r0, [sp, #18]
 80176b6:	682b      	ldr	r3, [r5, #0]
 80176b8:	4631      	mov	r1, r6
 80176ba:	689b      	ldr	r3, [r3, #8]
 80176bc:	4628      	mov	r0, r5
 80176be:	4798      	blx	r3
 80176c0:	e717      	b.n	80174f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080176c2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80176c2:	b570      	push	{r4, r5, r6, lr}
 80176c4:	460c      	mov	r4, r1
 80176c6:	b086      	sub	sp, #24
 80176c8:	1d06      	adds	r6, r0, #4
 80176ca:	2300      	movs	r3, #0
 80176cc:	4631      	mov	r1, r6
 80176ce:	4605      	mov	r5, r0
 80176d0:	a802      	add	r0, sp, #8
 80176d2:	9301      	str	r3, [sp, #4]
 80176d4:	f7ff fba8 	bl	8016e28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80176d8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80176dc:	8822      	ldrh	r2, [r4, #0]
 80176de:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80176e2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80176e6:	f8ad 0014 	strh.w	r0, [sp, #20]
 80176ea:	1ad2      	subs	r2, r2, r3
 80176ec:	8863      	ldrh	r3, [r4, #2]
 80176ee:	f8ad 2010 	strh.w	r2, [sp, #16]
 80176f2:	1a5b      	subs	r3, r3, r1
 80176f4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80176f8:	f8ad 1016 	strh.w	r1, [sp, #22]
 80176fc:	aa01      	add	r2, sp, #4
 80176fe:	a904      	add	r1, sp, #16
 8017700:	4630      	mov	r0, r6
 8017702:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017706:	f7f9 f9d1 	bl	8010aac <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801770a:	9a01      	ldr	r2, [sp, #4]
 801770c:	b11a      	cbz	r2, 8017716 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801770e:	4621      	mov	r1, r4
 8017710:	4628      	mov	r0, r5
 8017712:	f7ff fed5 	bl	80174c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017716:	b006      	add	sp, #24
 8017718:	bd70      	pop	{r4, r5, r6, pc}

0801771a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801771a:	b530      	push	{r4, r5, lr}
 801771c:	4602      	mov	r2, r0
 801771e:	4604      	mov	r4, r0
 8017720:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8017724:	b085      	sub	sp, #20
 8017726:	460d      	mov	r5, r1
 8017728:	6851      	ldr	r1, [r2, #4]
 801772a:	466b      	mov	r3, sp
 801772c:	c303      	stmia	r3!, {r0, r1}
 801772e:	4629      	mov	r1, r5
 8017730:	4668      	mov	r0, sp
 8017732:	f7f9 f8e3 	bl	80108fc <_ZN8touchgfx4RectaNERKS0_>
 8017736:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801773a:	b12b      	cbz	r3, 8017748 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801773c:	4669      	mov	r1, sp
 801773e:	4620      	mov	r0, r4
 8017740:	f7ff ffbf 	bl	80176c2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8017744:	b005      	add	sp, #20
 8017746:	bd30      	pop	{r4, r5, pc}
 8017748:	3404      	adds	r4, #4
 801774a:	4621      	mov	r1, r4
 801774c:	a802      	add	r0, sp, #8
 801774e:	f7ff fb6b 	bl	8016e28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017752:	f8bd 3000 	ldrh.w	r3, [sp]
 8017756:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801775a:	1a9b      	subs	r3, r3, r2
 801775c:	f8ad 3000 	strh.w	r3, [sp]
 8017760:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017764:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017768:	4669      	mov	r1, sp
 801776a:	1a9b      	subs	r3, r3, r2
 801776c:	4620      	mov	r0, r4
 801776e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8017772:	f7f9 f962 	bl	8010a3a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8017776:	e7e5      	b.n	8017744 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08017778 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8017778:	680a      	ldr	r2, [r1, #0]
 801777a:	460b      	mov	r3, r1
 801777c:	6992      	ldr	r2, [r2, #24]
 801777e:	1d01      	adds	r1, r0, #4
 8017780:	4618      	mov	r0, r3
 8017782:	4710      	bx	r2

08017784 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8017784:	4298      	cmp	r0, r3
 8017786:	d200      	bcs.n	801778a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8017788:	b913      	cbnz	r3, 8017790 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801778a:	440a      	add	r2, r1
 801778c:	b210      	sxth	r0, r2
 801778e:	4770      	bx	lr
 8017790:	ee07 0a90 	vmov	s15, r0
 8017794:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8017798:	ee07 3a90 	vmov	s15, r3
 801779c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80177a0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80177a4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80177a8:	ee37 7a66 	vsub.f32	s14, s14, s13
 80177ac:	ee07 2a90 	vmov	s15, r2
 80177b0:	ee67 5a07 	vmul.f32	s11, s14, s14
 80177b4:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80177b8:	eee5 6a87 	vfma.f32	s13, s11, s14
 80177bc:	ee07 1a90 	vmov	s15, r1
 80177c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80177c4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80177c8:	eee6 7a26 	vfma.f32	s15, s12, s13
 80177cc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80177d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80177d4:	bfcc      	ite	gt
 80177d6:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80177da:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80177de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80177e2:	ee17 3a90 	vmov	r3, s15
 80177e6:	b218      	sxth	r0, r3
 80177e8:	4770      	bx	lr

080177ea <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 80177ea:	4298      	cmp	r0, r3
 80177ec:	d200      	bcs.n	80177f0 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 80177ee:	b913      	cbnz	r3, 80177f6 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 80177f0:	440a      	add	r2, r1
 80177f2:	b210      	sxth	r0, r2
 80177f4:	4770      	bx	lr
 80177f6:	ee07 2a90 	vmov	s15, r2
 80177fa:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80177fe:	ee07 0a90 	vmov	s15, r0
 8017802:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8017806:	ee67 7a27 	vmul.f32	s15, s14, s15
 801780a:	ee07 3a10 	vmov	s14, r3
 801780e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8017812:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8017816:	ee07 1a90 	vmov	s15, r1
 801781a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801781e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017822:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017826:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801782a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801782e:	bfcc      	ite	gt
 8017830:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8017834:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8017838:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801783c:	ee17 3a90 	vmov	r3, s15
 8017840:	b218      	sxth	r0, r3
 8017842:	4770      	bx	lr

08017844 <_ZN8touchgfx12TextProviderC1Ev>:
 8017844:	b538      	push	{r3, r4, r5, lr}
 8017846:	2500      	movs	r5, #0
 8017848:	2302      	movs	r3, #2
 801784a:	4604      	mov	r4, r0
 801784c:	e9c0 5500 	strd	r5, r5, [r0]
 8017850:	7403      	strb	r3, [r0, #16]
 8017852:	6145      	str	r5, [r0, #20]
 8017854:	7605      	strb	r5, [r0, #24]
 8017856:	83c5      	strh	r5, [r0, #30]
 8017858:	8405      	strh	r5, [r0, #32]
 801785a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801785c:	8705      	strh	r5, [r0, #56]	; 0x38
 801785e:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8017860:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8017864:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8017868:	220e      	movs	r2, #14
 801786a:	4629      	mov	r1, r5
 801786c:	304c      	adds	r0, #76	; 0x4c
 801786e:	f013 faba 	bl	802ade6 <memset>
 8017872:	2301      	movs	r3, #1
 8017874:	4620      	mov	r0, r4
 8017876:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801787a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801787e:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8017882:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8017886:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801788a:	f7f1 faf3 	bl	8008e74 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801788e:	4620      	mov	r0, r4
 8017890:	bd38      	pop	{r3, r4, r5, pc}

08017892 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8017892:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017894:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017898:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801789a:	fab0 f080 	clz	r0, r0
 801789e:	0940      	lsrs	r0, r0, #5
 80178a0:	4770      	bx	lr

080178a2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80178a2:	b530      	push	{r4, r5, lr}
 80178a4:	2500      	movs	r5, #0
 80178a6:	2401      	movs	r4, #1
 80178a8:	6843      	ldr	r3, [r0, #4]
 80178aa:	b913      	cbnz	r3, 80178b2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80178ac:	6803      	ldr	r3, [r0, #0]
 80178ae:	b313      	cbz	r3, 80178f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80178b0:	6043      	str	r3, [r0, #4]
 80178b2:	7e03      	ldrb	r3, [r0, #24]
 80178b4:	b143      	cbz	r3, 80178c8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80178b6:	6943      	ldr	r3, [r0, #20]
 80178b8:	b12b      	cbz	r3, 80178c6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80178ba:	881a      	ldrh	r2, [r3, #0]
 80178bc:	b11a      	cbz	r2, 80178c6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80178be:	1c9a      	adds	r2, r3, #2
 80178c0:	6142      	str	r2, [r0, #20]
 80178c2:	8818      	ldrh	r0, [r3, #0]
 80178c4:	bd30      	pop	{r4, r5, pc}
 80178c6:	7605      	strb	r5, [r0, #24]
 80178c8:	6843      	ldr	r3, [r0, #4]
 80178ca:	8819      	ldrh	r1, [r3, #0]
 80178cc:	b199      	cbz	r1, 80178f6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80178ce:	1c9a      	adds	r2, r3, #2
 80178d0:	2902      	cmp	r1, #2
 80178d2:	6042      	str	r2, [r0, #4]
 80178d4:	d1f5      	bne.n	80178c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80178d6:	7c03      	ldrb	r3, [r0, #16]
 80178d8:	2b01      	cmp	r3, #1
 80178da:	d8e5      	bhi.n	80178a8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80178dc:	1c5a      	adds	r2, r3, #1
 80178de:	3302      	adds	r3, #2
 80178e0:	7402      	strb	r2, [r0, #16]
 80178e2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80178e6:	6143      	str	r3, [r0, #20]
 80178e8:	2b00      	cmp	r3, #0
 80178ea:	d0dd      	beq.n	80178a8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80178ec:	881b      	ldrh	r3, [r3, #0]
 80178ee:	2b00      	cmp	r3, #0
 80178f0:	d0da      	beq.n	80178a8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80178f2:	7604      	strb	r4, [r0, #24]
 80178f4:	e7d8      	b.n	80178a8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80178f6:	2000      	movs	r0, #0
 80178f8:	e7e4      	b.n	80178c4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080178fa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80178fa:	b430      	push	{r4, r5}
 80178fc:	6001      	str	r1, [r0, #0]
 80178fe:	2100      	movs	r1, #0
 8017900:	6041      	str	r1, [r0, #4]
 8017902:	6815      	ldr	r5, [r2, #0]
 8017904:	6085      	str	r5, [r0, #8]
 8017906:	6852      	ldr	r2, [r2, #4]
 8017908:	6443      	str	r3, [r0, #68]	; 0x44
 801790a:	9b02      	ldr	r3, [sp, #8]
 801790c:	60c2      	str	r2, [r0, #12]
 801790e:	7401      	strb	r1, [r0, #16]
 8017910:	6141      	str	r1, [r0, #20]
 8017912:	7601      	strb	r1, [r0, #24]
 8017914:	8701      	strh	r1, [r0, #56]	; 0x38
 8017916:	8401      	strh	r1, [r0, #32]
 8017918:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801791c:	6483      	str	r3, [r0, #72]	; 0x48
 801791e:	bc30      	pop	{r4, r5}
 8017920:	f7f1 baa8 	b.w	8008e74 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08017924 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8017924:	b408      	push	{r3}
 8017926:	b510      	push	{r4, lr}
 8017928:	b085      	sub	sp, #20
 801792a:	ac07      	add	r4, sp, #28
 801792c:	f854 3b04 	ldr.w	r3, [r4], #4
 8017930:	9300      	str	r3, [sp, #0]
 8017932:	4613      	mov	r3, r2
 8017934:	4622      	mov	r2, r4
 8017936:	9403      	str	r4, [sp, #12]
 8017938:	f7ff ffdf 	bl	80178fa <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801793c:	b005      	add	sp, #20
 801793e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017942:	b001      	add	sp, #4
 8017944:	4770      	bx	lr

08017946 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8017946:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017948:	4605      	mov	r5, r0
 801794a:	4608      	mov	r0, r1
 801794c:	b1e9      	cbz	r1, 801798a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801794e:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8017952:	460b      	mov	r3, r1
 8017954:	f101 0708 	add.w	r7, r1, #8
 8017958:	4622      	mov	r2, r4
 801795a:	6818      	ldr	r0, [r3, #0]
 801795c:	6859      	ldr	r1, [r3, #4]
 801795e:	4626      	mov	r6, r4
 8017960:	c603      	stmia	r6!, {r0, r1}
 8017962:	3308      	adds	r3, #8
 8017964:	42bb      	cmp	r3, r7
 8017966:	4634      	mov	r4, r6
 8017968:	d1f7      	bne.n	801795a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801796a:	6818      	ldr	r0, [r3, #0]
 801796c:	6030      	str	r0, [r6, #0]
 801796e:	889b      	ldrh	r3, [r3, #4]
 8017970:	80b3      	strh	r3, [r6, #4]
 8017972:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8017976:	015b      	lsls	r3, r3, #5
 8017978:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801797c:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8017980:	430b      	orrs	r3, r1
 8017982:	425b      	negs	r3, r3
 8017984:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8017988:	4610      	mov	r0, r2
 801798a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801798c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801798c:	b538      	push	{r3, r4, r5, lr}
 801798e:	460c      	mov	r4, r1
 8017990:	6811      	ldr	r1, [r2, #0]
 8017992:	4610      	mov	r0, r2
 8017994:	68cd      	ldr	r5, [r1, #12]
 8017996:	4619      	mov	r1, r3
 8017998:	47a8      	blx	r5
 801799a:	2800      	cmp	r0, #0
 801799c:	bf08      	it	eq
 801799e:	4620      	moveq	r0, r4
 80179a0:	bd38      	pop	{r3, r4, r5, pc}
	...

080179a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80179a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80179a6:	4604      	mov	r4, r0
 80179a8:	4615      	mov	r5, r2
 80179aa:	4608      	mov	r0, r1
 80179ac:	b93a      	cbnz	r2, 80179be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 80179ae:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80179b2:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 80179b6:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80179ba:	4628      	mov	r0, r5
 80179bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80179be:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80179c2:	8893      	ldrh	r3, [r2, #4]
 80179c4:	ea4f 160c 	mov.w	r6, ip, lsl #4
 80179c8:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80179cc:	79ee      	ldrb	r6, [r5, #7]
 80179ce:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 80179d2:	4316      	orrs	r6, r2
 80179d4:	19da      	adds	r2, r3, r7
 80179d6:	b291      	uxth	r1, r2
 80179d8:	291d      	cmp	r1, #29
 80179da:	b2b7      	uxth	r7, r6
 80179dc:	d87a      	bhi.n	8017ad4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80179de:	2201      	movs	r2, #1
 80179e0:	408a      	lsls	r2, r1
 80179e2:	4975      	ldr	r1, [pc, #468]	; (8017bb8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 80179e4:	420a      	tst	r2, r1
 80179e6:	ea4f 06e6 	mov.w	r6, r6, asr #3
 80179ea:	d12d      	bne.n	8017a48 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 80179ec:	f412 7f60 	tst.w	r2, #896	; 0x380
 80179f0:	d070      	beq.n	8017ad4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80179f2:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 80179f6:	462b      	mov	r3, r5
 80179f8:	f105 0e08 	add.w	lr, r5, #8
 80179fc:	4615      	mov	r5, r2
 80179fe:	6818      	ldr	r0, [r3, #0]
 8017a00:	6859      	ldr	r1, [r3, #4]
 8017a02:	4694      	mov	ip, r2
 8017a04:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017a08:	3308      	adds	r3, #8
 8017a0a:	4573      	cmp	r3, lr
 8017a0c:	4662      	mov	r2, ip
 8017a0e:	d1f6      	bne.n	80179fe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8017a10:	6818      	ldr	r0, [r3, #0]
 8017a12:	f8cc 0000 	str.w	r0, [ip]
 8017a16:	889b      	ldrh	r3, [r3, #4]
 8017a18:	f8ac 3004 	strh.w	r3, [ip, #4]
 8017a1c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8017a20:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8017a24:	b2b3      	uxth	r3, r6
 8017a26:	1aca      	subs	r2, r1, r3
 8017a28:	b292      	uxth	r2, r2
 8017a2a:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8017a2e:	10d2      	asrs	r2, r2, #3
 8017a30:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8017a34:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8017a38:	4302      	orrs	r2, r0
 8017a3a:	1bcf      	subs	r7, r1, r7
 8017a3c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8017a40:	1afb      	subs	r3, r7, r3
 8017a42:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8017a46:	e7b8      	b.n	80179ba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017a48:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8017a4a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017a4e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8017a50:	f640 6333 	movw	r3, #3635	; 0xe33
 8017a54:	4299      	cmp	r1, r3
 8017a56:	d110      	bne.n	8017a7a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8017a58:	6803      	ldr	r3, [r0, #0]
 8017a5a:	68db      	ldr	r3, [r3, #12]
 8017a5c:	4798      	blx	r3
 8017a5e:	7b41      	ldrb	r1, [r0, #13]
 8017a60:	00cb      	lsls	r3, r1, #3
 8017a62:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017a66:	7a03      	ldrb	r3, [r0, #8]
 8017a68:	0648      	lsls	r0, r1, #25
 8017a6a:	ea43 0302 	orr.w	r3, r3, r2
 8017a6e:	bf44      	itt	mi
 8017a70:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017a74:	b21b      	sxthmi	r3, r3
 8017a76:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017a7a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8017a7e:	443b      	add	r3, r7
 8017a80:	4433      	add	r3, r6
 8017a82:	b29b      	uxth	r3, r3
 8017a84:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8017a88:	462a      	mov	r2, r5
 8017a8a:	f105 0c08 	add.w	ip, r5, #8
 8017a8e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017a92:	4635      	mov	r5, r6
 8017a94:	6810      	ldr	r0, [r2, #0]
 8017a96:	6851      	ldr	r1, [r2, #4]
 8017a98:	4637      	mov	r7, r6
 8017a9a:	c703      	stmia	r7!, {r0, r1}
 8017a9c:	3208      	adds	r2, #8
 8017a9e:	4562      	cmp	r2, ip
 8017aa0:	463e      	mov	r6, r7
 8017aa2:	d1f7      	bne.n	8017a94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8017aa4:	6810      	ldr	r0, [r2, #0]
 8017aa6:	6038      	str	r0, [r7, #0]
 8017aa8:	8892      	ldrh	r2, [r2, #4]
 8017aaa:	80ba      	strh	r2, [r7, #4]
 8017aac:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017ab0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017ab4:	10db      	asrs	r3, r3, #3
 8017ab6:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017aba:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017abe:	4313      	orrs	r3, r2
 8017ac0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017ac4:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8017ac8:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8017acc:	1a9b      	subs	r3, r3, r2
 8017ace:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8017ad2:	e772      	b.n	80179ba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017ad4:	f023 0204 	bic.w	r2, r3, #4
 8017ad8:	f640 611b 	movw	r1, #3611	; 0xe1b
 8017adc:	428a      	cmp	r2, r1
 8017ade:	d003      	beq.n	8017ae8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8017ae0:	f640 621d 	movw	r2, #3613	; 0xe1d
 8017ae4:	4293      	cmp	r3, r2
 8017ae6:	d120      	bne.n	8017b2a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8017ae8:	3b01      	subs	r3, #1
 8017aea:	4602      	mov	r2, r0
 8017aec:	b29b      	uxth	r3, r3
 8017aee:	4629      	mov	r1, r5
 8017af0:	4620      	mov	r0, r4
 8017af2:	f7ff ff4b 	bl	801798c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017af6:	7b41      	ldrb	r1, [r0, #13]
 8017af8:	00cb      	lsls	r3, r1, #3
 8017afa:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017afe:	7a03      	ldrb	r3, [r0, #8]
 8017b00:	0649      	lsls	r1, r1, #25
 8017b02:	ea43 0302 	orr.w	r3, r3, r2
 8017b06:	bf44      	itt	mi
 8017b08:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017b0c:	b21b      	sxthmi	r3, r3
 8017b0e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017b12:	7b6b      	ldrb	r3, [r5, #13]
 8017b14:	7aaa      	ldrb	r2, [r5, #10]
 8017b16:	005b      	lsls	r3, r3, #1
 8017b18:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017b1c:	4313      	orrs	r3, r2
 8017b1e:	115a      	asrs	r2, r3, #5
 8017b20:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8017b24:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017b28:	e036      	b.n	8017b98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8017b2a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8017b2e:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8017b32:	7a2a      	ldrb	r2, [r5, #8]
 8017b34:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8017b38:	ea42 0201 	orr.w	r2, r2, r1
 8017b3c:	bf1c      	itt	ne
 8017b3e:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8017b42:	b212      	sxthne	r2, r2
 8017b44:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017b48:	f640 6109 	movw	r1, #3593	; 0xe09
 8017b4c:	f023 0210 	bic.w	r2, r3, #16
 8017b50:	428a      	cmp	r2, r1
 8017b52:	d003      	beq.n	8017b5c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8017b54:	f640 6213 	movw	r2, #3603	; 0xe13
 8017b58:	4293      	cmp	r3, r2
 8017b5a:	d12a      	bne.n	8017bb2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8017b5c:	7b6e      	ldrb	r6, [r5, #13]
 8017b5e:	0076      	lsls	r6, r6, #1
 8017b60:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017b64:	7aae      	ldrb	r6, [r5, #10]
 8017b66:	4316      	orrs	r6, r2
 8017b68:	f640 6213 	movw	r2, #3603	; 0xe13
 8017b6c:	4293      	cmp	r3, r2
 8017b6e:	bf18      	it	ne
 8017b70:	f103 33ff 	addne.w	r3, r3, #4294967295
 8017b74:	4602      	mov	r2, r0
 8017b76:	bf14      	ite	ne
 8017b78:	b29b      	uxthne	r3, r3
 8017b7a:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8017b7e:	4629      	mov	r1, r5
 8017b80:	4620      	mov	r0, r4
 8017b82:	f7ff ff03 	bl	801798c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017b86:	7b43      	ldrb	r3, [r0, #13]
 8017b88:	7a82      	ldrb	r2, [r0, #10]
 8017b8a:	005b      	lsls	r3, r3, #1
 8017b8c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017b90:	4313      	orrs	r3, r2
 8017b92:	1af6      	subs	r6, r6, r3
 8017b94:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8017b98:	7b69      	ldrb	r1, [r5, #13]
 8017b9a:	00cb      	lsls	r3, r1, #3
 8017b9c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017ba0:	7a2b      	ldrb	r3, [r5, #8]
 8017ba2:	4313      	orrs	r3, r2
 8017ba4:	064a      	lsls	r2, r1, #25
 8017ba6:	bf44      	itt	mi
 8017ba8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017bac:	b21b      	sxthmi	r3, r3
 8017bae:	1bdb      	subs	r3, r3, r7
 8017bb0:	e747      	b.n	8017a42 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8017bb2:	2300      	movs	r3, #0
 8017bb4:	e7b6      	b.n	8017b24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8017bb6:	bf00      	nop
 8017bb8:	3fc00079 	.word	0x3fc00079

08017bbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8017bbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017bc0:	4604      	mov	r4, r0
 8017bc2:	b942      	cbnz	r2, 8017bd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8017bc4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017bc8:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8017bcc:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8017bd0:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017bd4:	e047      	b.n	8017c66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017bd6:	7b51      	ldrb	r1, [r2, #13]
 8017bd8:	8893      	ldrh	r3, [r2, #4]
 8017bda:	010d      	lsls	r5, r1, #4
 8017bdc:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8017be0:	79d5      	ldrb	r5, [r2, #7]
 8017be2:	4305      	orrs	r5, r0
 8017be4:	2d04      	cmp	r5, #4
 8017be6:	bfcc      	ite	gt
 8017be8:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8017bec:	f04f 0e01 	movle.w	lr, #1
 8017bf0:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8017bf4:	f200 80ab 	bhi.w	8017d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8017bf8:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8017bfc:	4283      	cmp	r3, r0
 8017bfe:	d216      	bcs.n	8017c2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017c00:	f240 605b 	movw	r0, #1627	; 0x65b
 8017c04:	4283      	cmp	r3, r0
 8017c06:	d859      	bhi.n	8017cbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8017c08:	f240 6057 	movw	r0, #1623	; 0x657
 8017c0c:	4283      	cmp	r3, r0
 8017c0e:	d20e      	bcs.n	8017c2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017c10:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017c14:	d24a      	bcs.n	8017cac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8017c16:	f240 604e 	movw	r0, #1614	; 0x64e
 8017c1a:	4283      	cmp	r3, r0
 8017c1c:	d207      	bcs.n	8017c2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017c1e:	f240 601a 	movw	r0, #1562	; 0x61a
 8017c22:	4283      	cmp	r3, r0
 8017c24:	d02a      	beq.n	8017c7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017c26:	d821      	bhi.n	8017c6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8017c28:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8017c2c:	d35b      	bcc.n	8017ce6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017c2e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8017c32:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017c36:	f040 80d0 	bne.w	8017dda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017c3a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8017c3e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017c42:	f040 80ca 	bne.w	8017dda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017c46:	00cb      	lsls	r3, r1, #3
 8017c48:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017c4c:	7a13      	ldrb	r3, [r2, #8]
 8017c4e:	0649      	lsls	r1, r1, #25
 8017c50:	ea43 0300 	orr.w	r3, r3, r0
 8017c54:	bf44      	itt	mi
 8017c56:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017c5a:	b21b      	sxthmi	r3, r3
 8017c5c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017c60:	1b5d      	subs	r5, r3, r5
 8017c62:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017c66:	4610      	mov	r0, r2
 8017c68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017c6c:	f240 604b 	movw	r0, #1611	; 0x64b
 8017c70:	4283      	cmp	r3, r0
 8017c72:	d338      	bcc.n	8017ce6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017c74:	f240 604c 	movw	r0, #1612	; 0x64c
 8017c78:	4283      	cmp	r3, r0
 8017c7a:	d9d8      	bls.n	8017c2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017c7c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8017c80:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8017c84:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017c88:	f040 80f2 	bne.w	8017e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017c8c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017c90:	f040 80ee 	bne.w	8017e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017c94:	00cb      	lsls	r3, r1, #3
 8017c96:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017c9a:	7a13      	ldrb	r3, [r2, #8]
 8017c9c:	064e      	lsls	r6, r1, #25
 8017c9e:	ea43 0300 	orr.w	r3, r3, r0
 8017ca2:	bf44      	itt	mi
 8017ca4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017ca8:	b21b      	sxthmi	r3, r3
 8017caa:	e7d9      	b.n	8017c60 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8017cac:	f240 6054 	movw	r0, #1620	; 0x654
 8017cb0:	4283      	cmp	r3, r0
 8017cb2:	d8e3      	bhi.n	8017c7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017cb4:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017cb8:	d9e0      	bls.n	8017c7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017cba:	e7b8      	b.n	8017c2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017cbc:	f240 6074 	movw	r0, #1652	; 0x674
 8017cc0:	4283      	cmp	r3, r0
 8017cc2:	d0b4      	beq.n	8017c2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017cc4:	d82d      	bhi.n	8017d22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8017cc6:	f240 605e 	movw	r0, #1630	; 0x65e
 8017cca:	4283      	cmp	r3, r0
 8017ccc:	d804      	bhi.n	8017cd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8017cce:	f240 605d 	movw	r0, #1629	; 0x65d
 8017cd2:	4283      	cmp	r3, r0
 8017cd4:	d3d2      	bcc.n	8017c7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017cd6:	e7aa      	b.n	8017c2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017cd8:	f240 605f 	movw	r0, #1631	; 0x65f
 8017cdc:	4283      	cmp	r3, r0
 8017cde:	d0cd      	beq.n	8017c7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017ce0:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8017ce4:	d0a3      	beq.n	8017c2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017ce6:	00cb      	lsls	r3, r1, #3
 8017ce8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017cec:	7a13      	ldrb	r3, [r2, #8]
 8017cee:	0649      	lsls	r1, r1, #25
 8017cf0:	ea43 0300 	orr.w	r3, r3, r0
 8017cf4:	bf44      	itt	mi
 8017cf6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017cfa:	b21b      	sxthmi	r3, r3
 8017cfc:	1b5d      	subs	r5, r3, r5
 8017cfe:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017d02:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017d06:	7b53      	ldrb	r3, [r2, #13]
 8017d08:	015b      	lsls	r3, r3, #5
 8017d0a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017d0e:	7993      	ldrb	r3, [r2, #6]
 8017d10:	430b      	orrs	r3, r1
 8017d12:	005b      	lsls	r3, r3, #1
 8017d14:	2105      	movs	r1, #5
 8017d16:	fb93 f3f1 	sdiv	r3, r3, r1
 8017d1a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8017d1e:	440b      	add	r3, r1
 8017d20:	e756      	b.n	8017bd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8017d22:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8017d26:	4283      	cmp	r3, r0
 8017d28:	d809      	bhi.n	8017d3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8017d2a:	f240 60df 	movw	r0, #1759	; 0x6df
 8017d2e:	4283      	cmp	r3, r0
 8017d30:	f4bf af7d 	bcs.w	8017c2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017d34:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8017d38:	2b05      	cmp	r3, #5
 8017d3a:	d8d4      	bhi.n	8017ce6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017d3c:	e777      	b.n	8017c2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017d3e:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8017d42:	4283      	cmp	r3, r0
 8017d44:	d09a      	beq.n	8017c7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017d46:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8017d4a:	4283      	cmp	r3, r0
 8017d4c:	e7ca      	b.n	8017ce4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8017d4e:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8017d52:	d22b      	bcs.n	8017dac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8017d54:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8017d58:	4283      	cmp	r3, r0
 8017d5a:	d28f      	bcs.n	8017c7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017d5c:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8017d60:	4283      	cmp	r3, r0
 8017d62:	d816      	bhi.n	8017d92 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8017d64:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8017d68:	4283      	cmp	r3, r0
 8017d6a:	f4bf af60 	bcs.w	8017c2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017d6e:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8017d72:	4283      	cmp	r3, r0
 8017d74:	d80a      	bhi.n	8017d8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8017d76:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8017d7a:	4283      	cmp	r3, r0
 8017d7c:	f4bf af57 	bcs.w	8017c2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017d80:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8017d84:	4283      	cmp	r3, r0
 8017d86:	f43f af79 	beq.w	8017c7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017d8a:	e7ac      	b.n	8017ce6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017d8c:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8017d90:	e7f8      	b.n	8017d84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8017d92:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8017d96:	4283      	cmp	r3, r0
 8017d98:	d802      	bhi.n	8017da0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8017d9a:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8017d9e:	e798      	b.n	8017cd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8017da0:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8017da4:	4283      	cmp	r3, r0
 8017da6:	f47f af42 	bne.w	8017c2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017daa:	e767      	b.n	8017c7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017dac:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8017db0:	4283      	cmp	r3, r0
 8017db2:	f43f af63 	beq.w	8017c7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017db6:	d802      	bhi.n	8017dbe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8017db8:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8017dbc:	e7f2      	b.n	8017da4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8017dbe:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8017dc2:	4283      	cmp	r3, r0
 8017dc4:	d805      	bhi.n	8017dd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8017dc6:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8017dca:	4283      	cmp	r3, r0
 8017dcc:	f4ff af2f 	bcc.w	8017c2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017dd0:	e754      	b.n	8017c7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017dd2:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8017dd6:	4283      	cmp	r3, r0
 8017dd8:	e7af      	b.n	8017d3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8017dda:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8017dde:	4617      	mov	r7, r2
 8017de0:	f102 0808 	add.w	r8, r2, #8
 8017de4:	4666      	mov	r6, ip
 8017de6:	6838      	ldr	r0, [r7, #0]
 8017de8:	6879      	ldr	r1, [r7, #4]
 8017dea:	46e6      	mov	lr, ip
 8017dec:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8017df0:	3708      	adds	r7, #8
 8017df2:	4547      	cmp	r7, r8
 8017df4:	46f4      	mov	ip, lr
 8017df6:	d1f6      	bne.n	8017de6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8017df8:	6838      	ldr	r0, [r7, #0]
 8017dfa:	f8ce 0000 	str.w	r0, [lr]
 8017dfe:	88b9      	ldrh	r1, [r7, #4]
 8017e00:	f8ae 1004 	strh.w	r1, [lr, #4]
 8017e04:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017e08:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017e0c:	d009      	beq.n	8017e22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8017e0e:	7b51      	ldrb	r1, [r2, #13]
 8017e10:	7992      	ldrb	r2, [r2, #6]
 8017e12:	0149      	lsls	r1, r1, #5
 8017e14:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017e18:	4311      	orrs	r1, r2
 8017e1a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8017e1e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017e22:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017e26:	b2ad      	uxth	r5, r5
 8017e28:	d00d      	beq.n	8017e46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8017e2a:	442b      	add	r3, r5
 8017e2c:	b29b      	uxth	r3, r3
 8017e2e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017e32:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017e36:	10db      	asrs	r3, r3, #3
 8017e38:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017e3c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017e40:	4313      	orrs	r3, r2
 8017e42:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017e46:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8017e4a:	00cb      	lsls	r3, r1, #3
 8017e4c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017e50:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8017e54:	064f      	lsls	r7, r1, #25
 8017e56:	ea43 0302 	orr.w	r3, r3, r2
 8017e5a:	bf44      	itt	mi
 8017e5c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017e60:	b21b      	sxthmi	r3, r3
 8017e62:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017e66:	1b5b      	subs	r3, r3, r5
 8017e68:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8017e6c:	4632      	mov	r2, r6
 8017e6e:	e6fa      	b.n	8017c66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017e70:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8017e74:	4617      	mov	r7, r2
 8017e76:	f102 0908 	add.w	r9, r2, #8
 8017e7a:	4666      	mov	r6, ip
 8017e7c:	6838      	ldr	r0, [r7, #0]
 8017e7e:	6879      	ldr	r1, [r7, #4]
 8017e80:	46e0      	mov	r8, ip
 8017e82:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8017e86:	3708      	adds	r7, #8
 8017e88:	454f      	cmp	r7, r9
 8017e8a:	46c4      	mov	ip, r8
 8017e8c:	d1f6      	bne.n	8017e7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8017e8e:	6838      	ldr	r0, [r7, #0]
 8017e90:	f8c8 0000 	str.w	r0, [r8]
 8017e94:	88b9      	ldrh	r1, [r7, #4]
 8017e96:	f8a8 1004 	strh.w	r1, [r8, #4]
 8017e9a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017e9e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017ea2:	d009      	beq.n	8017eb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8017ea4:	7b51      	ldrb	r1, [r2, #13]
 8017ea6:	7992      	ldrb	r2, [r2, #6]
 8017ea8:	0149      	lsls	r1, r1, #5
 8017eaa:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017eae:	4311      	orrs	r1, r2
 8017eb0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8017eb4:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017eb8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017ebc:	d00e      	beq.n	8017edc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8017ebe:	eba3 030e 	sub.w	r3, r3, lr
 8017ec2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017ec6:	b29b      	uxth	r3, r3
 8017ec8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017ecc:	10db      	asrs	r3, r3, #3
 8017ece:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017ed2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017ed6:	4313      	orrs	r3, r2
 8017ed8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017edc:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8017ee0:	00cb      	lsls	r3, r1, #3
 8017ee2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017ee6:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8017eea:	0648      	lsls	r0, r1, #25
 8017eec:	ea43 0302 	orr.w	r3, r3, r2
 8017ef0:	bf44      	itt	mi
 8017ef2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017ef6:	b21b      	sxthmi	r3, r3
 8017ef8:	1b5d      	subs	r5, r3, r5
 8017efa:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017efe:	e7b5      	b.n	8017e6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08017f00 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8017f00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017f04:	461e      	mov	r6, r3
 8017f06:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017f08:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017f0c:	4604      	mov	r4, r0
 8017f0e:	4617      	mov	r7, r2
 8017f10:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017f14:	f7f0 ff6c 	bl	8008df0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017f18:	4605      	mov	r5, r0
 8017f1a:	b918      	cbnz	r0, 8017f24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8017f1c:	6030      	str	r0, [r6, #0]
 8017f1e:	4628      	mov	r0, r5
 8017f20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017f24:	683b      	ldr	r3, [r7, #0]
 8017f26:	4601      	mov	r1, r0
 8017f28:	68db      	ldr	r3, [r3, #12]
 8017f2a:	4638      	mov	r0, r7
 8017f2c:	4798      	blx	r3
 8017f2e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8017f32:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8017f36:	4602      	mov	r2, r0
 8017f38:	6030      	str	r0, [r6, #0]
 8017f3a:	d213      	bcs.n	8017f64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8017f3c:	4643      	mov	r3, r8
 8017f3e:	4639      	mov	r1, r7
 8017f40:	4620      	mov	r0, r4
 8017f42:	f7ff fe3b 	bl	8017bbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8017f46:	6030      	str	r0, [r6, #0]
 8017f48:	6833      	ldr	r3, [r6, #0]
 8017f4a:	b143      	cbz	r3, 8017f5e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8017f4c:	7b5a      	ldrb	r2, [r3, #13]
 8017f4e:	7a9b      	ldrb	r3, [r3, #10]
 8017f50:	0052      	lsls	r2, r2, #1
 8017f52:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8017f56:	4313      	orrs	r3, r2
 8017f58:	bf0c      	ite	eq
 8017f5a:	2301      	moveq	r3, #1
 8017f5c:	2300      	movne	r3, #0
 8017f5e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8017f62:	e7dc      	b.n	8017f1e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8017f64:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017f68:	b29b      	uxth	r3, r3
 8017f6a:	2b7f      	cmp	r3, #127	; 0x7f
 8017f6c:	d804      	bhi.n	8017f78 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8017f6e:	4639      	mov	r1, r7
 8017f70:	4620      	mov	r0, r4
 8017f72:	f7ff fd17 	bl	80179a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8017f76:	e7e6      	b.n	8017f46 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8017f78:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8017f7c:	2b00      	cmp	r3, #0
 8017f7e:	d0e3      	beq.n	8017f48 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8017f80:	f640 1302 	movw	r3, #2306	; 0x902
 8017f84:	429d      	cmp	r5, r3
 8017f86:	d1df      	bne.n	8017f48 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8017f88:	4601      	mov	r1, r0
 8017f8a:	4620      	mov	r0, r4
 8017f8c:	f7ff fcdb 	bl	8017946 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017f90:	e7d9      	b.n	8017f46 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08017f92 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8017f92:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8017f96:	461e      	mov	r6, r3
 8017f98:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017f9a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017f9e:	4604      	mov	r4, r0
 8017fa0:	4617      	mov	r7, r2
 8017fa2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017fa6:	f7f0 ff23 	bl	8008df0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017faa:	4605      	mov	r5, r0
 8017fac:	b918      	cbnz	r0, 8017fb6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8017fae:	6030      	str	r0, [r6, #0]
 8017fb0:	4628      	mov	r0, r5
 8017fb2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8017fb6:	683b      	ldr	r3, [r7, #0]
 8017fb8:	4601      	mov	r1, r0
 8017fba:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8017fbe:	4638      	mov	r0, r7
 8017fc0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8017fc4:	47c8      	blx	r9
 8017fc6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8017fca:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8017fce:	4602      	mov	r2, r0
 8017fd0:	6030      	str	r0, [r6, #0]
 8017fd2:	d213      	bcs.n	8017ffc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8017fd4:	4643      	mov	r3, r8
 8017fd6:	4639      	mov	r1, r7
 8017fd8:	4620      	mov	r0, r4
 8017fda:	f7ff fdef 	bl	8017bbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8017fde:	6030      	str	r0, [r6, #0]
 8017fe0:	6833      	ldr	r3, [r6, #0]
 8017fe2:	b143      	cbz	r3, 8017ff6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8017fe4:	7b5a      	ldrb	r2, [r3, #13]
 8017fe6:	7a9b      	ldrb	r3, [r3, #10]
 8017fe8:	0052      	lsls	r2, r2, #1
 8017fea:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8017fee:	4313      	orrs	r3, r2
 8017ff0:	bf0c      	ite	eq
 8017ff2:	2301      	moveq	r3, #1
 8017ff4:	2300      	movne	r3, #0
 8017ff6:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8017ffa:	e7d9      	b.n	8017fb0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8017ffc:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018000:	b29b      	uxth	r3, r3
 8018002:	2b7f      	cmp	r3, #127	; 0x7f
 8018004:	d804      	bhi.n	8018010 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8018006:	4639      	mov	r1, r7
 8018008:	4620      	mov	r0, r4
 801800a:	f7ff fccb 	bl	80179a4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801800e:	e7e6      	b.n	8017fde <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8018010:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018014:	2b00      	cmp	r3, #0
 8018016:	d0e3      	beq.n	8017fe0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018018:	f640 1302 	movw	r3, #2306	; 0x902
 801801c:	429d      	cmp	r5, r3
 801801e:	d1df      	bne.n	8017fe0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018020:	4601      	mov	r1, r0
 8018022:	4620      	mov	r0, r4
 8018024:	f7ff fc8f 	bl	8017946 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018028:	e7d9      	b.n	8017fde <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801802a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801802a:	b510      	push	{r4, lr}
 801802c:	4604      	mov	r4, r0
 801802e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8018032:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018034:	b1f1      	cbz	r1, 8018074 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8018036:	2b0a      	cmp	r3, #10
 8018038:	d02f      	beq.n	801809a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801803a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801803c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8018040:	3901      	subs	r1, #1
 8018042:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8018044:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8018048:	1c51      	adds	r1, r2, #1
 801804a:	b289      	uxth	r1, r1
 801804c:	2901      	cmp	r1, #1
 801804e:	bf84      	itt	hi
 8018050:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8018054:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8018056:	f103 0201 	add.w	r2, r3, #1
 801805a:	8722      	strh	r2, [r4, #56]	; 0x38
 801805c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801805e:	bf98      	it	ls
 8018060:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8018062:	4413      	add	r3, r2
 8018064:	b29b      	uxth	r3, r3
 8018066:	2b09      	cmp	r3, #9
 8018068:	bf88      	it	hi
 801806a:	3b0a      	subhi	r3, #10
 801806c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018070:	8458      	strh	r0, [r3, #34]	; 0x22
 8018072:	e7dc      	b.n	801802e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8018074:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018076:	2b0a      	cmp	r3, #10
 8018078:	d00f      	beq.n	801809a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801807a:	4620      	mov	r0, r4
 801807c:	f7ff fc11 	bl	80178a2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8018080:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018082:	1c5a      	adds	r2, r3, #1
 8018084:	8722      	strh	r2, [r4, #56]	; 0x38
 8018086:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018088:	4413      	add	r3, r2
 801808a:	b29b      	uxth	r3, r3
 801808c:	2b09      	cmp	r3, #9
 801808e:	bf88      	it	hi
 8018090:	3b0a      	subhi	r3, #10
 8018092:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018096:	8458      	strh	r0, [r3, #34]	; 0x22
 8018098:	e7ec      	b.n	8018074 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801809a:	bd10      	pop	{r4, pc}

0801809c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801809c:	b538      	push	{r3, r4, r5, lr}
 801809e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80180a0:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80180a4:	4604      	mov	r4, r0
 80180a6:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80180a8:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80180aa:	3a01      	subs	r2, #1
 80180ac:	8702      	strh	r2, [r0, #56]	; 0x38
 80180ae:	1c5a      	adds	r2, r3, #1
 80180b0:	b292      	uxth	r2, r2
 80180b2:	2a09      	cmp	r2, #9
 80180b4:	bf86      	itte	hi
 80180b6:	3b09      	subhi	r3, #9
 80180b8:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80180ba:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80180bc:	f7ff ffb5 	bl	801802a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80180c0:	8c23      	ldrh	r3, [r4, #32]
 80180c2:	2b01      	cmp	r3, #1
 80180c4:	bf9c      	itt	ls
 80180c6:	3301      	addls	r3, #1
 80180c8:	8423      	strhls	r3, [r4, #32]
 80180ca:	8be3      	ldrh	r3, [r4, #30]
 80180cc:	b90b      	cbnz	r3, 80180d2 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80180ce:	2302      	movs	r3, #2
 80180d0:	83e3      	strh	r3, [r4, #30]
 80180d2:	8be3      	ldrh	r3, [r4, #30]
 80180d4:	3b01      	subs	r3, #1
 80180d6:	b29b      	uxth	r3, r3
 80180d8:	83e3      	strh	r3, [r4, #30]
 80180da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80180de:	4628      	mov	r0, r5
 80180e0:	8365      	strh	r5, [r4, #26]
 80180e2:	bd38      	pop	{r3, r4, r5, pc}

080180e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80180e4:	428a      	cmp	r2, r1
 80180e6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80180ea:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80180ec:	d931      	bls.n	8018152 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80180ee:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80180f0:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80180f4:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80180f8:	19ee      	adds	r6, r5, r7
 80180fa:	1a54      	subs	r4, r2, r1
 80180fc:	3e01      	subs	r6, #1
 80180fe:	fa1f fe84 	uxth.w	lr, r4
 8018102:	b2b4      	uxth	r4, r6
 8018104:	eba4 090e 	sub.w	r9, r4, lr
 8018108:	fa1f f989 	uxth.w	r9, r9
 801810c:	2c09      	cmp	r4, #9
 801810e:	4626      	mov	r6, r4
 8018110:	bf88      	it	hi
 8018112:	f1a4 060a 	subhi.w	r6, r4, #10
 8018116:	f1bc 0f00 	cmp.w	ip, #0
 801811a:	bf08      	it	eq
 801811c:	f04f 0c02 	moveq.w	ip, #2
 8018120:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018124:	f10c 3cff 	add.w	ip, ip, #4294967295
 8018128:	fa1f fc8c 	uxth.w	ip, ip
 801812c:	3c01      	subs	r4, #1
 801812e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8018132:	b2a4      	uxth	r4, r4
 8018134:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8018138:	454c      	cmp	r4, r9
 801813a:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801813e:	d1e5      	bne.n	801810c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8018140:	eba5 050e 	sub.w	r5, r5, lr
 8018144:	eb0e 0408 	add.w	r4, lr, r8
 8018148:	8705      	strh	r5, [r0, #56]	; 0x38
 801814a:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801814e:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8018152:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8018154:	1a64      	subs	r4, r4, r1
 8018156:	4439      	add	r1, r7
 8018158:	b289      	uxth	r1, r1
 801815a:	2909      	cmp	r1, #9
 801815c:	bf88      	it	hi
 801815e:	390a      	subhi	r1, #10
 8018160:	8704      	strh	r4, [r0, #56]	; 0x38
 8018162:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018164:	250a      	movs	r5, #10
 8018166:	b18a      	cbz	r2, 801818c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8018168:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801816a:	3a01      	subs	r2, #1
 801816c:	b292      	uxth	r2, r2
 801816e:	3101      	adds	r1, #1
 8018170:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8018174:	8701      	strh	r1, [r0, #56]	; 0x38
 8018176:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8018178:	b901      	cbnz	r1, 801817c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801817a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801817c:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801817e:	3901      	subs	r1, #1
 8018180:	b289      	uxth	r1, r1
 8018182:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018184:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8018188:	844c      	strh	r4, [r1, #34]	; 0x22
 801818a:	e7ec      	b.n	8018166 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801818c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018190:	f7ff bf4b 	b.w	801802a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08018194 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8018194:	b570      	push	{r4, r5, r6, lr}
 8018196:	2500      	movs	r5, #0
 8018198:	4295      	cmp	r5, r2
 801819a:	d011      	beq.n	80181c0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801819c:	8bc4      	ldrh	r4, [r0, #30]
 801819e:	f831 6b02 	ldrh.w	r6, [r1], #2
 80181a2:	4414      	add	r4, r2
 80181a4:	3c01      	subs	r4, #1
 80181a6:	1b64      	subs	r4, r4, r5
 80181a8:	b2a4      	uxth	r4, r4
 80181aa:	2c01      	cmp	r4, #1
 80181ac:	bf88      	it	hi
 80181ae:	3c02      	subhi	r4, #2
 80181b0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80181b4:	8b64      	ldrh	r4, [r4, #26]
 80181b6:	42b4      	cmp	r4, r6
 80181b8:	d117      	bne.n	80181ea <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80181ba:	3501      	adds	r5, #1
 80181bc:	b2ad      	uxth	r5, r5
 80181be:	e7eb      	b.n	8018198 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80181c0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80181c4:	2400      	movs	r4, #0
 80181c6:	4413      	add	r3, r2
 80181c8:	b2a2      	uxth	r2, r4
 80181ca:	429a      	cmp	r2, r3
 80181cc:	da0f      	bge.n	80181ee <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80181ce:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80181d0:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80181d4:	4432      	add	r2, r6
 80181d6:	b292      	uxth	r2, r2
 80181d8:	2a09      	cmp	r2, #9
 80181da:	bf88      	it	hi
 80181dc:	3a0a      	subhi	r2, #10
 80181de:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80181e2:	3401      	adds	r4, #1
 80181e4:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80181e6:	42aa      	cmp	r2, r5
 80181e8:	d0ee      	beq.n	80181c8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80181ea:	2000      	movs	r0, #0
 80181ec:	bd70      	pop	{r4, r5, r6, pc}
 80181ee:	2001      	movs	r0, #1
 80181f0:	e7fc      	b.n	80181ec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080181f2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80181f2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80181f6:	4605      	mov	r5, r0
 80181f8:	4616      	mov	r6, r2
 80181fa:	1c8c      	adds	r4, r1, #2
 80181fc:	8809      	ldrh	r1, [r1, #0]
 80181fe:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8018202:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8018206:	42b3      	cmp	r3, r6
 8018208:	d124      	bne.n	8018254 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801820a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801820e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8018212:	f001 070f 	and.w	r7, r1, #15
 8018216:	f8cd 8000 	str.w	r8, [sp]
 801821a:	464b      	mov	r3, r9
 801821c:	4652      	mov	r2, sl
 801821e:	4621      	mov	r1, r4
 8018220:	4628      	mov	r0, r5
 8018222:	f7ff ffb7 	bl	8018194 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8018226:	4683      	mov	fp, r0
 8018228:	b168      	cbz	r0, 8018246 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801822a:	eb0a 0109 	add.w	r1, sl, r9
 801822e:	4441      	add	r1, r8
 8018230:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8018234:	463a      	mov	r2, r7
 8018236:	4649      	mov	r1, r9
 8018238:	4628      	mov	r0, r5
 801823a:	f7ff ff53 	bl	80180e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801823e:	4658      	mov	r0, fp
 8018240:	b003      	add	sp, #12
 8018242:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018246:	eb07 010a 	add.w	r1, r7, sl
 801824a:	4449      	add	r1, r9
 801824c:	4441      	add	r1, r8
 801824e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8018252:	e7d2      	b.n	80181fa <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8018254:	f04f 0b00 	mov.w	fp, #0
 8018258:	e7f1      	b.n	801823e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801825a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801825a:	b570      	push	{r4, r5, r6, lr}
 801825c:	8810      	ldrh	r0, [r2, #0]
 801825e:	4298      	cmp	r0, r3
 8018260:	d817      	bhi.n	8018292 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018262:	1e48      	subs	r0, r1, #1
 8018264:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8018268:	4298      	cmp	r0, r3
 801826a:	d312      	bcc.n	8018292 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801826c:	2400      	movs	r4, #0
 801826e:	428c      	cmp	r4, r1
 8018270:	d20f      	bcs.n	8018292 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018272:	1860      	adds	r0, r4, r1
 8018274:	1040      	asrs	r0, r0, #1
 8018276:	0085      	lsls	r5, r0, #2
 8018278:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801827c:	42b3      	cmp	r3, r6
 801827e:	d902      	bls.n	8018286 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8018280:	3001      	adds	r0, #1
 8018282:	b284      	uxth	r4, r0
 8018284:	e7f3      	b.n	801826e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018286:	d201      	bcs.n	801828c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8018288:	b281      	uxth	r1, r0
 801828a:	e7f0      	b.n	801826e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801828c:	442a      	add	r2, r5
 801828e:	8850      	ldrh	r0, [r2, #2]
 8018290:	bd70      	pop	{r4, r5, r6, pc}
 8018292:	2000      	movs	r0, #0
 8018294:	e7fc      	b.n	8018290 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08018296 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8018296:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801829a:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801829c:	886f      	ldrh	r7, [r5, #2]
 801829e:	4604      	mov	r4, r0
 80182a0:	087f      	lsrs	r7, r7, #1
 80182a2:	260b      	movs	r6, #11
 80182a4:	3e01      	subs	r6, #1
 80182a6:	d013      	beq.n	80182d0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80182a8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80182aa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80182ae:	462a      	mov	r2, r5
 80182b0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80182b4:	4639      	mov	r1, r7
 80182b6:	4643      	mov	r3, r8
 80182b8:	4620      	mov	r0, r4
 80182ba:	f7ff ffce 	bl	801825a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80182be:	b138      	cbz	r0, 80182d0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80182c0:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80182c4:	4642      	mov	r2, r8
 80182c6:	4620      	mov	r0, r4
 80182c8:	f7ff ff93 	bl	80181f2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80182cc:	2800      	cmp	r0, #0
 80182ce:	d1e9      	bne.n	80182a4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80182d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080182d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80182d4:	b570      	push	{r4, r5, r6, lr}
 80182d6:	694a      	ldr	r2, [r1, #20]
 80182d8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80182da:	684b      	ldr	r3, [r1, #4]
 80182dc:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80182de:	1b54      	subs	r4, r2, r5
 80182e0:	f000 8106 	beq.w	80184f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80182e4:	1b9b      	subs	r3, r3, r6
 80182e6:	d003      	beq.n	80182f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80182e8:	4363      	muls	r3, r4
 80182ea:	2210      	movs	r2, #16
 80182ec:	fb93 f3f2 	sdiv	r3, r3, r2
 80182f0:	680c      	ldr	r4, [r1, #0]
 80182f2:	698a      	ldr	r2, [r1, #24]
 80182f4:	1b65      	subs	r5, r4, r5
 80182f6:	f000 80fd 	beq.w	80184f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80182fa:	1b92      	subs	r2, r2, r6
 80182fc:	d003      	beq.n	8018306 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80182fe:	436a      	muls	r2, r5
 8018300:	2410      	movs	r4, #16
 8018302:	fb92 f2f4 	sdiv	r2, r2, r4
 8018306:	1a9b      	subs	r3, r3, r2
 8018308:	ee07 3a90 	vmov	s15, r3
 801830c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8018530 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8018310:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018314:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018318:	ee67 7a84 	vmul.f32	s15, s15, s8
 801831c:	460a      	mov	r2, r1
 801831e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8018322:	4603      	mov	r3, r0
 8018324:	f100 040c 	add.w	r4, r0, #12
 8018328:	eeb1 6a43 	vneg.f32	s12, s6
 801832c:	edd2 7a02 	vldr	s15, [r2, #8]
 8018330:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8018334:	3214      	adds	r2, #20
 8018336:	ece3 6a01 	vstmia	r3!, {s13}
 801833a:	ed52 7a02 	vldr	s15, [r2, #-8]
 801833e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018342:	429c      	cmp	r4, r3
 8018344:	edc3 7a02 	vstr	s15, [r3, #8]
 8018348:	ed52 7a01 	vldr	s15, [r2, #-4]
 801834c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018350:	edc3 7a05 	vstr	s15, [r3, #20]
 8018354:	d1ea      	bne.n	801832c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8018356:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018358:	698b      	ldr	r3, [r1, #24]
 801835a:	edd0 4a02 	vldr	s9, [r0, #8]
 801835e:	edd0 3a00 	vldr	s7, [r0]
 8018362:	edd0 6a01 	vldr	s13, [r0, #4]
 8018366:	ed90 5a05 	vldr	s10, [r0, #20]
 801836a:	ed90 2a03 	vldr	s4, [r0, #12]
 801836e:	edd0 5a04 	vldr	s11, [r0, #16]
 8018372:	ed90 1a07 	vldr	s2, [r0, #28]
 8018376:	edd0 2a06 	vldr	s5, [r0, #24]
 801837a:	1a9b      	subs	r3, r3, r2
 801837c:	ee07 3a90 	vmov	s15, r3
 8018380:	684b      	ldr	r3, [r1, #4]
 8018382:	1a9b      	subs	r3, r3, r2
 8018384:	ee07 3a10 	vmov	s14, r3
 8018388:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801838c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8018390:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018394:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8018398:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801839c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80183a0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80183a4:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80183a8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80183ac:	ee32 5a45 	vsub.f32	s10, s4, s10
 80183b0:	ee67 7a83 	vmul.f32	s15, s15, s6
 80183b4:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80183b8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80183ba:	694a      	ldr	r2, [r1, #20]
 80183bc:	1b13      	subs	r3, r2, r4
 80183be:	ee07 3a10 	vmov	s14, r3
 80183c2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80183c6:	680b      	ldr	r3, [r1, #0]
 80183c8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80183cc:	1b1b      	subs	r3, r3, r4
 80183ce:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80183d2:	ee07 3a10 	vmov	s14, r3
 80183d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80183da:	ee27 7a04 	vmul.f32	s14, s14, s8
 80183de:	eee6 4a87 	vfma.f32	s9, s13, s14
 80183e2:	ee64 4a86 	vmul.f32	s9, s9, s12
 80183e6:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80183ea:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80183ec:	698b      	ldr	r3, [r1, #24]
 80183ee:	1a9b      	subs	r3, r3, r2
 80183f0:	ee06 3a90 	vmov	s13, r3
 80183f4:	684b      	ldr	r3, [r1, #4]
 80183f6:	1a9b      	subs	r3, r3, r2
 80183f8:	ee07 3a10 	vmov	s14, r3
 80183fc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018400:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018404:	ee66 6a84 	vmul.f32	s13, s13, s8
 8018408:	ee27 7a04 	vmul.f32	s14, s14, s8
 801840c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8018410:	eee5 6a87 	vfma.f32	s13, s11, s14
 8018414:	ee66 6a83 	vmul.f32	s13, s13, s6
 8018418:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801841c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801841e:	694a      	ldr	r2, [r1, #20]
 8018420:	1b13      	subs	r3, r2, r4
 8018422:	ee07 3a10 	vmov	s14, r3
 8018426:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801842a:	680b      	ldr	r3, [r1, #0]
 801842c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018430:	1b1b      	subs	r3, r3, r4
 8018432:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8018436:	ee07 3a10 	vmov	s14, r3
 801843a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801843e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018442:	eea5 5a87 	vfma.f32	s10, s11, s14
 8018446:	edd0 5a08 	vldr	s11, [r0, #32]
 801844a:	ee25 5a06 	vmul.f32	s10, s10, s12
 801844e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8018452:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8018456:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8018458:	698b      	ldr	r3, [r1, #24]
 801845a:	1a9b      	subs	r3, r3, r2
 801845c:	ee07 3a10 	vmov	s14, r3
 8018460:	684b      	ldr	r3, [r1, #4]
 8018462:	1a9b      	subs	r3, r3, r2
 8018464:	ee01 3a90 	vmov	s3, r3
 8018468:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801846c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8018470:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018474:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8018478:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801847c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8018480:	eea1 7a21 	vfma.f32	s14, s2, s3
 8018484:	ee27 7a03 	vmul.f32	s14, s14, s6
 8018488:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801848c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801848e:	694a      	ldr	r2, [r1, #20]
 8018490:	1b13      	subs	r3, r2, r4
 8018492:	ee03 3a10 	vmov	s6, r3
 8018496:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801849a:	680b      	ldr	r3, [r1, #0]
 801849c:	ee23 3a04 	vmul.f32	s6, s6, s8
 80184a0:	1b1b      	subs	r3, r3, r4
 80184a2:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80184a6:	ee03 3a10 	vmov	s6, r3
 80184aa:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80184ae:	ee23 4a04 	vmul.f32	s8, s6, s8
 80184b2:	eee1 5a04 	vfma.f32	s11, s2, s8
 80184b6:	ee25 6a86 	vmul.f32	s12, s11, s12
 80184ba:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80184be:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80184c2:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80184c6:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80184ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80184ce:	dd13      	ble.n	80184f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80184d0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80184d4:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80184d8:	63c3      	str	r3, [r0, #60]	; 0x3c
 80184da:	eee3 7a87 	vfma.f32	s15, s7, s14
 80184de:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80184e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80184e6:	dd15      	ble.n	8018514 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80184e8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80184ec:	6403      	str	r3, [r0, #64]	; 0x40
 80184ee:	bd70      	pop	{r4, r5, r6, pc}
 80184f0:	4623      	mov	r3, r4
 80184f2:	e6fd      	b.n	80182f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80184f4:	462a      	mov	r2, r5
 80184f6:	e706      	b.n	8018306 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80184f8:	d502      	bpl.n	8018500 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80184fa:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80184fe:	e7e9      	b.n	80184d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8018500:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8018504:	eea3 2a85 	vfma.f32	s4, s7, s10
 8018508:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801850c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018510:	dade      	bge.n	80184d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8018512:	e7f2      	b.n	80184fa <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8018514:	d502      	bpl.n	801851c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8018516:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801851a:	e7e7      	b.n	80184ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801851c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8018520:	eee3 4a86 	vfma.f32	s9, s7, s12
 8018524:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8018528:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801852c:	dadc      	bge.n	80184e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801852e:	e7f2      	b.n	8018516 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8018530:	3d800000 	.word	0x3d800000

08018534 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8018534:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018538:	2714      	movs	r7, #20
 801853a:	435f      	muls	r7, r3
 801853c:	eb02 0c07 	add.w	ip, r2, r7
 8018540:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8018544:	f115 0e0f 	adds.w	lr, r5, #15
 8018548:	f100 80a2 	bmi.w	8018690 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801854c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8018550:	9c08      	ldr	r4, [sp, #32]
 8018552:	f8c0 e014 	str.w	lr, [r0, #20]
 8018556:	2614      	movs	r6, #20
 8018558:	4366      	muls	r6, r4
 801855a:	eb02 0806 	add.w	r8, r2, r6
 801855e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8018562:	f115 040f 	adds.w	r4, r5, #15
 8018566:	f100 809f 	bmi.w	80186a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801856a:	1124      	asrs	r4, r4, #4
 801856c:	eba4 040e 	sub.w	r4, r4, lr
 8018570:	6184      	str	r4, [r0, #24]
 8018572:	2c00      	cmp	r4, #0
 8018574:	f000 808a 	beq.w	801868c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8018578:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801857c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8018580:	5995      	ldr	r5, [r2, r6]
 8018582:	eba4 0809 	sub.w	r8, r4, r9
 8018586:	59d4      	ldr	r4, [r2, r7]
 8018588:	eba5 0a04 	sub.w	sl, r5, r4
 801858c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8018590:	fb0e fe05 	mul.w	lr, lr, r5
 8018594:	fb0a ee19 	mls	lr, sl, r9, lr
 8018598:	fb08 e404 	mla	r4, r8, r4, lr
 801859c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80185a0:	3c01      	subs	r4, #1
 80185a2:	19a4      	adds	r4, r4, r6
 80185a4:	f100 808c 	bmi.w	80186c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80185a8:	fb94 fef6 	sdiv	lr, r4, r6
 80185ac:	f8c0 e000 	str.w	lr, [r0]
 80185b0:	fb06 441e 	mls	r4, r6, lr, r4
 80185b4:	6104      	str	r4, [r0, #16]
 80185b6:	2d00      	cmp	r5, #0
 80185b8:	f2c0 8095 	blt.w	80186e6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80185bc:	fb95 f4f6 	sdiv	r4, r5, r6
 80185c0:	6044      	str	r4, [r0, #4]
 80185c2:	fb06 5514 	mls	r5, r6, r4, r5
 80185c6:	6085      	str	r5, [r0, #8]
 80185c8:	60c6      	str	r6, [r0, #12]
 80185ca:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80185ce:	6945      	ldr	r5, [r0, #20]
 80185d0:	59d2      	ldr	r2, [r2, r7]
 80185d2:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8018708 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80185d6:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80185da:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80185de:	ee07 4a10 	vmov	s14, r4
 80185e2:	6804      	ldr	r4, [r0, #0]
 80185e4:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80185e8:	ee07 2a90 	vmov	s15, r2
 80185ec:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80185f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80185f4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80185f8:	ee27 7a26 	vmul.f32	s14, s14, s13
 80185fc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018600:	edd3 6a00 	vldr	s13, [r3]
 8018604:	eee6 6a07 	vfma.f32	s13, s12, s14
 8018608:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801860c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8018610:	edc0 6a07 	vstr	s13, [r0, #28]
 8018614:	edd0 6a01 	vldr	s13, [r0, #4]
 8018618:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801861c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8018620:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018624:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8018628:	ed80 6a08 	vstr	s12, [r0, #32]
 801862c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801862e:	6242      	str	r2, [r0, #36]	; 0x24
 8018630:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8018634:	ed93 6a03 	vldr	s12, [r3, #12]
 8018638:	eea5 6a87 	vfma.f32	s12, s11, s14
 801863c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8018640:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8018644:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8018648:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801864c:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8018650:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8018654:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8018658:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801865a:	6302      	str	r2, [r0, #48]	; 0x30
 801865c:	ed93 6a06 	vldr	s12, [r3, #24]
 8018660:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8018664:	eea5 6a87 	vfma.f32	s12, s11, s14
 8018668:	eeb0 7a46 	vmov.f32	s14, s12
 801866c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8018670:	eea6 7a27 	vfma.f32	s14, s12, s15
 8018674:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8018678:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801867c:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8018680:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018684:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8018688:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801868a:	63c3      	str	r3, [r0, #60]	; 0x3c
 801868c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018690:	f1c5 0501 	rsb	r5, r5, #1
 8018694:	f015 050f 	ands.w	r5, r5, #15
 8018698:	bf18      	it	ne
 801869a:	2501      	movne	r5, #1
 801869c:	2410      	movs	r4, #16
 801869e:	fb9e fef4 	sdiv	lr, lr, r4
 80186a2:	ebae 0e05 	sub.w	lr, lr, r5
 80186a6:	e753      	b.n	8018550 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80186a8:	f1c5 0501 	rsb	r5, r5, #1
 80186ac:	f015 050f 	ands.w	r5, r5, #15
 80186b0:	bf18      	it	ne
 80186b2:	2501      	movne	r5, #1
 80186b4:	f04f 0910 	mov.w	r9, #16
 80186b8:	fb94 f4f9 	sdiv	r4, r4, r9
 80186bc:	1b64      	subs	r4, r4, r5
 80186be:	e755      	b.n	801856c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80186c0:	4264      	negs	r4, r4
 80186c2:	fb94 fef6 	sdiv	lr, r4, r6
 80186c6:	f1ce 0800 	rsb	r8, lr, #0
 80186ca:	fb06 441e 	mls	r4, r6, lr, r4
 80186ce:	f8c0 8000 	str.w	r8, [r0]
 80186d2:	6104      	str	r4, [r0, #16]
 80186d4:	2c00      	cmp	r4, #0
 80186d6:	f43f af6e 	beq.w	80185b6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80186da:	ea6f 0e0e 	mvn.w	lr, lr
 80186de:	f8c0 e000 	str.w	lr, [r0]
 80186e2:	1b34      	subs	r4, r6, r4
 80186e4:	e766      	b.n	80185b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80186e6:	426d      	negs	r5, r5
 80186e8:	fb95 f4f6 	sdiv	r4, r5, r6
 80186ec:	f1c4 0e00 	rsb	lr, r4, #0
 80186f0:	fb06 5514 	mls	r5, r6, r4, r5
 80186f4:	f8c0 e004 	str.w	lr, [r0, #4]
 80186f8:	6085      	str	r5, [r0, #8]
 80186fa:	2d00      	cmp	r5, #0
 80186fc:	f43f af64 	beq.w	80185c8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8018700:	43e4      	mvns	r4, r4
 8018702:	6044      	str	r4, [r0, #4]
 8018704:	1b75      	subs	r5, r6, r5
 8018706:	e75e      	b.n	80185c6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8018708:	3d800000 	.word	0x3d800000

0801870c <_ZN8touchgfx7Unicode6strlenEPKt>:
 801870c:	4602      	mov	r2, r0
 801870e:	b148      	cbz	r0, 8018724 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8018710:	2300      	movs	r3, #0
 8018712:	b298      	uxth	r0, r3
 8018714:	3301      	adds	r3, #1
 8018716:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801871a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801871e:	2900      	cmp	r1, #0
 8018720:	d1f7      	bne.n	8018712 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8018722:	4770      	bx	lr
 8018724:	4770      	bx	lr

08018726 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8018726:	b530      	push	{r4, r5, lr}
 8018728:	4604      	mov	r4, r0
 801872a:	b159      	cbz	r1, 8018744 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801872c:	b148      	cbz	r0, 8018742 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801872e:	2300      	movs	r3, #0
 8018730:	b298      	uxth	r0, r3
 8018732:	4282      	cmp	r2, r0
 8018734:	d905      	bls.n	8018742 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8018736:	5ccd      	ldrb	r5, [r1, r3]
 8018738:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801873c:	3301      	adds	r3, #1
 801873e:	2d00      	cmp	r5, #0
 8018740:	d1f6      	bne.n	8018730 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8018742:	bd30      	pop	{r4, r5, pc}
 8018744:	4608      	mov	r0, r1
 8018746:	e7fc      	b.n	8018742 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08018748 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8018748:	b5f0      	push	{r4, r5, r6, r7, lr}
 801874a:	b08b      	sub	sp, #44	; 0x2c
 801874c:	468c      	mov	ip, r1
 801874e:	2100      	movs	r1, #0
 8018750:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8018754:	4604      	mov	r4, r0
 8018756:	261f      	movs	r6, #31
 8018758:	af01      	add	r7, sp, #4
 801875a:	fb94 fef3 	sdiv	lr, r4, r3
 801875e:	fb03 441e 	mls	r4, r3, lr, r4
 8018762:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8018766:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801876a:	b2ec      	uxtb	r4, r5
 801876c:	2d09      	cmp	r5, #9
 801876e:	bfd4      	ite	le
 8018770:	3430      	addle	r4, #48	; 0x30
 8018772:	3457      	addgt	r4, #87	; 0x57
 8018774:	b2e4      	uxtb	r4, r4
 8018776:	55bc      	strb	r4, [r7, r6]
 8018778:	4674      	mov	r4, lr
 801877a:	1e71      	subs	r1, r6, #1
 801877c:	b974      	cbnz	r4, 801879c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801877e:	2800      	cmp	r0, #0
 8018780:	da05      	bge.n	801878e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8018782:	ab0a      	add	r3, sp, #40	; 0x28
 8018784:	4419      	add	r1, r3
 8018786:	232d      	movs	r3, #45	; 0x2d
 8018788:	f801 3c24 	strb.w	r3, [r1, #-36]
 801878c:	1eb1      	subs	r1, r6, #2
 801878e:	3101      	adds	r1, #1
 8018790:	4439      	add	r1, r7
 8018792:	4660      	mov	r0, ip
 8018794:	f7ff ffc7 	bl	8018726 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018798:	b00b      	add	sp, #44	; 0x2c
 801879a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801879c:	460e      	mov	r6, r1
 801879e:	e7dc      	b.n	801875a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

080187a0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 80187a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80187a2:	b08b      	sub	sp, #44	; 0x2c
 80187a4:	468c      	mov	ip, r1
 80187a6:	2100      	movs	r1, #0
 80187a8:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80187ac:	ae01      	add	r6, sp, #4
 80187ae:	211f      	movs	r1, #31
 80187b0:	fbb0 f7f3 	udiv	r7, r0, r3
 80187b4:	fb03 0517 	mls	r5, r3, r7, r0
 80187b8:	b2ec      	uxtb	r4, r5
 80187ba:	2d09      	cmp	r5, #9
 80187bc:	bfd4      	ite	le
 80187be:	3430      	addle	r4, #48	; 0x30
 80187c0:	3457      	addgt	r4, #87	; 0x57
 80187c2:	b2e4      	uxtb	r4, r4
 80187c4:	558c      	strb	r4, [r1, r6]
 80187c6:	4638      	mov	r0, r7
 80187c8:	1e4c      	subs	r4, r1, #1
 80187ca:	b92f      	cbnz	r7, 80187d8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80187cc:	4431      	add	r1, r6
 80187ce:	4660      	mov	r0, ip
 80187d0:	f7ff ffa9 	bl	8018726 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80187d4:	b00b      	add	sp, #44	; 0x2c
 80187d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80187d8:	4621      	mov	r1, r4
 80187da:	e7e9      	b.n	80187b0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

080187dc <_ZN8touchgfx7Unicode4itoaElPtti>:
 80187dc:	b410      	push	{r4}
 80187de:	b131      	cbz	r1, 80187ee <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 80187e0:	1e9c      	subs	r4, r3, #2
 80187e2:	2c22      	cmp	r4, #34	; 0x22
 80187e4:	d803      	bhi.n	80187ee <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 80187e6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80187ea:	f7ff bfad 	b.w	8018748 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80187ee:	f85d 4b04 	ldr.w	r4, [sp], #4
 80187f2:	4770      	bx	lr

080187f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80187f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80187f8:	4691      	mov	r9, r2
 80187fa:	b085      	sub	sp, #20
 80187fc:	6802      	ldr	r2, [r0, #0]
 80187fe:	9201      	str	r2, [sp, #4]
 8018800:	4688      	mov	r8, r1
 8018802:	4683      	mov	fp, r0
 8018804:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8018808:	9103      	str	r1, [sp, #12]
 801880a:	4610      	mov	r0, r2
 801880c:	461c      	mov	r4, r3
 801880e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8018812:	9302      	str	r3, [sp, #8]
 8018814:	f7ff ff7a 	bl	801870c <_ZN8touchgfx7Unicode6strlenEPKt>
 8018818:	f1b8 0f00 	cmp.w	r8, #0
 801881c:	bf0c      	ite	eq
 801881e:	4684      	moveq	ip, r0
 8018820:	f100 0c01 	addne.w	ip, r0, #1
 8018824:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8018828:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801882c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801882e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018830:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8018834:	9903      	ldr	r1, [sp, #12]
 8018836:	fa1f fc8c 	uxth.w	ip, ip
 801883a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801883e:	d041      	beq.n	80188c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8018840:	d834      	bhi.n	80188ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8018842:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8018846:	d059      	beq.n	80188fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8018848:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801884c:	d03a      	beq.n	80188c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801884e:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8018852:	d034      	beq.n	80188be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018854:	2400      	movs	r4, #0
 8018856:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801885a:	3a01      	subs	r2, #1
 801885c:	b169      	cbz	r1, 801887a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801885e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8018860:	458c      	cmp	ip, r1
 8018862:	da09      	bge.n	8018878 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018864:	eba1 010c 	sub.w	r1, r1, ip
 8018868:	b289      	uxth	r1, r1
 801886a:	b933      	cbnz	r3, 801887a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801886c:	2e00      	cmp	r6, #0
 801886e:	d051      	beq.n	8018914 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018870:	2800      	cmp	r0, #0
 8018872:	d04f      	beq.n	8018914 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8018874:	440c      	add	r4, r1
 8018876:	b2a4      	uxth	r4, r4
 8018878:	2100      	movs	r1, #0
 801887a:	682b      	ldr	r3, [r5, #0]
 801887c:	4293      	cmp	r3, r2
 801887e:	da07      	bge.n	8018890 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018880:	f1b8 0f00 	cmp.w	r8, #0
 8018884:	d004      	beq.n	8018890 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8018886:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801888a:	682b      	ldr	r3, [r5, #0]
 801888c:	3301      	adds	r3, #1
 801888e:	602b      	str	r3, [r5, #0]
 8018890:	2730      	movs	r7, #48	; 0x30
 8018892:	2c00      	cmp	r4, #0
 8018894:	d04e      	beq.n	8018934 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018896:	682e      	ldr	r6, [r5, #0]
 8018898:	3c01      	subs	r4, #1
 801889a:	42b2      	cmp	r2, r6
 801889c:	b2a4      	uxth	r4, r4
 801889e:	dd49      	ble.n	8018934 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80188a0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80188a4:	682b      	ldr	r3, [r5, #0]
 80188a6:	3301      	adds	r3, #1
 80188a8:	602b      	str	r3, [r5, #0]
 80188aa:	e7f2      	b.n	8018892 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80188ac:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 80188b0:	d01d      	beq.n	80188ee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80188b2:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 80188b6:	d002      	beq.n	80188be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80188b8:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 80188bc:	e7c9      	b.n	8018852 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80188be:	4684      	mov	ip, r0
 80188c0:	f04f 0800 	mov.w	r8, #0
 80188c4:	2c00      	cmp	r4, #0
 80188c6:	d0c6      	beq.n	8018856 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80188c8:	b947      	cbnz	r7, 80188dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80188ca:	2801      	cmp	r0, #1
 80188cc:	d106      	bne.n	80188dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80188ce:	8814      	ldrh	r4, [r2, #0]
 80188d0:	2c30      	cmp	r4, #48	; 0x30
 80188d2:	bf02      	ittt	eq
 80188d4:	3202      	addeq	r2, #2
 80188d6:	f8cb 2000 	streq.w	r2, [fp]
 80188da:	4638      	moveq	r0, r7
 80188dc:	45bc      	cmp	ip, r7
 80188de:	da14      	bge.n	801890a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80188e0:	b2bf      	uxth	r7, r7
 80188e2:	eba7 040c 	sub.w	r4, r7, ip
 80188e6:	b2a4      	uxth	r4, r4
 80188e8:	46bc      	mov	ip, r7
 80188ea:	2600      	movs	r6, #0
 80188ec:	e7b3      	b.n	8018856 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80188ee:	4684      	mov	ip, r0
 80188f0:	b16c      	cbz	r4, 801890e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80188f2:	42b8      	cmp	r0, r7
 80188f4:	dd00      	ble.n	80188f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80188f6:	b2b8      	uxth	r0, r7
 80188f8:	2400      	movs	r4, #0
 80188fa:	e003      	b.n	8018904 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80188fc:	f04f 0c01 	mov.w	ip, #1
 8018900:	2400      	movs	r4, #0
 8018902:	4660      	mov	r0, ip
 8018904:	4626      	mov	r6, r4
 8018906:	46a0      	mov	r8, r4
 8018908:	e7a5      	b.n	8018856 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801890a:	2400      	movs	r4, #0
 801890c:	e7ed      	b.n	80188ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801890e:	4626      	mov	r6, r4
 8018910:	46a0      	mov	r8, r4
 8018912:	e7a0      	b.n	8018856 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018914:	2900      	cmp	r1, #0
 8018916:	d0b0      	beq.n	801887a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018918:	2720      	movs	r7, #32
 801891a:	682e      	ldr	r6, [r5, #0]
 801891c:	2900      	cmp	r1, #0
 801891e:	d0ac      	beq.n	801887a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018920:	3901      	subs	r1, #1
 8018922:	4296      	cmp	r6, r2
 8018924:	b289      	uxth	r1, r1
 8018926:	daa7      	bge.n	8018878 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018928:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801892c:	682b      	ldr	r3, [r5, #0]
 801892e:	3301      	adds	r3, #1
 8018930:	602b      	str	r3, [r5, #0]
 8018932:	e7f2      	b.n	801891a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8018934:	b188      	cbz	r0, 801895a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018936:	682b      	ldr	r3, [r5, #0]
 8018938:	3801      	subs	r0, #1
 801893a:	429a      	cmp	r2, r3
 801893c:	b280      	uxth	r0, r0
 801893e:	dd0c      	ble.n	801895a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018940:	f8db 3000 	ldr.w	r3, [fp]
 8018944:	1c9c      	adds	r4, r3, #2
 8018946:	f8cb 4000 	str.w	r4, [fp]
 801894a:	881c      	ldrh	r4, [r3, #0]
 801894c:	682b      	ldr	r3, [r5, #0]
 801894e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8018952:	682b      	ldr	r3, [r5, #0]
 8018954:	3301      	adds	r3, #1
 8018956:	602b      	str	r3, [r5, #0]
 8018958:	e7ec      	b.n	8018934 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801895a:	2620      	movs	r6, #32
 801895c:	b151      	cbz	r1, 8018974 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801895e:	6828      	ldr	r0, [r5, #0]
 8018960:	3901      	subs	r1, #1
 8018962:	4282      	cmp	r2, r0
 8018964:	b289      	uxth	r1, r1
 8018966:	dd05      	ble.n	8018974 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8018968:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801896c:	682b      	ldr	r3, [r5, #0]
 801896e:	3301      	adds	r3, #1
 8018970:	602b      	str	r3, [r5, #0]
 8018972:	e7f3      	b.n	801895c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8018974:	b005      	add	sp, #20
 8018976:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801897a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801897a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801897e:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8018982:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8018986:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801898a:	2400      	movs	r4, #0
 801898c:	8014      	strh	r4, [r2, #0]
 801898e:	701c      	strb	r4, [r3, #0]
 8018990:	f888 4000 	strb.w	r4, [r8]
 8018994:	f88c 4000 	strb.w	r4, [ip]
 8018998:	f88e 4000 	strb.w	r4, [lr]
 801899c:	703c      	strb	r4, [r7, #0]
 801899e:	6804      	ldr	r4, [r0, #0]
 80189a0:	b1a4      	cbz	r4, 80189cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80189a2:	8824      	ldrh	r4, [r4, #0]
 80189a4:	f04f 0901 	mov.w	r9, #1
 80189a8:	b314      	cbz	r4, 80189f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80189aa:	2c2b      	cmp	r4, #43	; 0x2b
 80189ac:	d001      	beq.n	80189b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80189ae:	2c20      	cmp	r4, #32
 80189b0:	d110      	bne.n	80189d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80189b2:	8014      	strh	r4, [r2, #0]
 80189b4:	6804      	ldr	r4, [r0, #0]
 80189b6:	b10c      	cbz	r4, 80189bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80189b8:	3402      	adds	r4, #2
 80189ba:	6004      	str	r4, [r0, #0]
 80189bc:	680c      	ldr	r4, [r1, #0]
 80189be:	b10c      	cbz	r4, 80189c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80189c0:	3401      	adds	r4, #1
 80189c2:	600c      	str	r4, [r1, #0]
 80189c4:	6804      	ldr	r4, [r0, #0]
 80189c6:	b17c      	cbz	r4, 80189e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80189c8:	8824      	ldrh	r4, [r4, #0]
 80189ca:	e7ed      	b.n	80189a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80189cc:	680c      	ldr	r4, [r1, #0]
 80189ce:	b17c      	cbz	r4, 80189f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80189d0:	7824      	ldrb	r4, [r4, #0]
 80189d2:	e7e7      	b.n	80189a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80189d4:	2c2d      	cmp	r4, #45	; 0x2d
 80189d6:	d102      	bne.n	80189de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80189d8:	f883 9000 	strb.w	r9, [r3]
 80189dc:	e7ea      	b.n	80189b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80189de:	2c23      	cmp	r4, #35	; 0x23
 80189e0:	d107      	bne.n	80189f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80189e2:	f888 9000 	strb.w	r9, [r8]
 80189e6:	e7e5      	b.n	80189b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80189e8:	680c      	ldr	r4, [r1, #0]
 80189ea:	b10c      	cbz	r4, 80189f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80189ec:	7824      	ldrb	r4, [r4, #0]
 80189ee:	e7db      	b.n	80189a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80189f0:	2400      	movs	r4, #0
 80189f2:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80189f6:	2b09      	cmp	r3, #9
 80189f8:	d901      	bls.n	80189fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80189fa:	2c2a      	cmp	r4, #42	; 0x2a
 80189fc:	d122      	bne.n	8018a44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80189fe:	2301      	movs	r3, #1
 8018a00:	2c30      	cmp	r4, #48	; 0x30
 8018a02:	f88e 3000 	strb.w	r3, [lr]
 8018a06:	d10d      	bne.n	8018a24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018a08:	f88c 3000 	strb.w	r3, [ip]
 8018a0c:	6803      	ldr	r3, [r0, #0]
 8018a0e:	b10b      	cbz	r3, 8018a14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8018a10:	3302      	adds	r3, #2
 8018a12:	6003      	str	r3, [r0, #0]
 8018a14:	680b      	ldr	r3, [r1, #0]
 8018a16:	b10b      	cbz	r3, 8018a1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8018a18:	3301      	adds	r3, #1
 8018a1a:	600b      	str	r3, [r1, #0]
 8018a1c:	6803      	ldr	r3, [r0, #0]
 8018a1e:	2b00      	cmp	r3, #0
 8018a20:	d02f      	beq.n	8018a82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8018a22:	881c      	ldrh	r4, [r3, #0]
 8018a24:	2c2a      	cmp	r4, #42	; 0x2a
 8018a26:	d135      	bne.n	8018a94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018a28:	f04f 33ff 	mov.w	r3, #4294967295
 8018a2c:	6033      	str	r3, [r6, #0]
 8018a2e:	6803      	ldr	r3, [r0, #0]
 8018a30:	b10b      	cbz	r3, 8018a36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8018a32:	3302      	adds	r3, #2
 8018a34:	6003      	str	r3, [r0, #0]
 8018a36:	680b      	ldr	r3, [r1, #0]
 8018a38:	b10b      	cbz	r3, 8018a3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8018a3a:	3301      	adds	r3, #1
 8018a3c:	600b      	str	r3, [r1, #0]
 8018a3e:	6803      	ldr	r3, [r0, #0]
 8018a40:	b31b      	cbz	r3, 8018a8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8018a42:	881c      	ldrh	r4, [r3, #0]
 8018a44:	2c2e      	cmp	r4, #46	; 0x2e
 8018a46:	d11a      	bne.n	8018a7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018a48:	2301      	movs	r3, #1
 8018a4a:	703b      	strb	r3, [r7, #0]
 8018a4c:	6803      	ldr	r3, [r0, #0]
 8018a4e:	b10b      	cbz	r3, 8018a54 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8018a50:	3302      	adds	r3, #2
 8018a52:	6003      	str	r3, [r0, #0]
 8018a54:	680b      	ldr	r3, [r1, #0]
 8018a56:	b10b      	cbz	r3, 8018a5c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8018a58:	3301      	adds	r3, #1
 8018a5a:	600b      	str	r3, [r1, #0]
 8018a5c:	6803      	ldr	r3, [r0, #0]
 8018a5e:	2b00      	cmp	r3, #0
 8018a60:	d036      	beq.n	8018ad0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8018a62:	881b      	ldrh	r3, [r3, #0]
 8018a64:	2b2a      	cmp	r3, #42	; 0x2a
 8018a66:	d137      	bne.n	8018ad8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018a68:	f04f 33ff 	mov.w	r3, #4294967295
 8018a6c:	602b      	str	r3, [r5, #0]
 8018a6e:	6803      	ldr	r3, [r0, #0]
 8018a70:	b10b      	cbz	r3, 8018a76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8018a72:	3302      	adds	r3, #2
 8018a74:	6003      	str	r3, [r0, #0]
 8018a76:	680b      	ldr	r3, [r1, #0]
 8018a78:	b10b      	cbz	r3, 8018a7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018a7a:	3301      	adds	r3, #1
 8018a7c:	600b      	str	r3, [r1, #0]
 8018a7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018a82:	680c      	ldr	r4, [r1, #0]
 8018a84:	b134      	cbz	r4, 8018a94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018a86:	7824      	ldrb	r4, [r4, #0]
 8018a88:	e7cc      	b.n	8018a24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018a8a:	680b      	ldr	r3, [r1, #0]
 8018a8c:	2b00      	cmp	r3, #0
 8018a8e:	d0f6      	beq.n	8018a7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018a90:	781c      	ldrb	r4, [r3, #0]
 8018a92:	e7d7      	b.n	8018a44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018a94:	2300      	movs	r3, #0
 8018a96:	6033      	str	r3, [r6, #0]
 8018a98:	220a      	movs	r2, #10
 8018a9a:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8018a9e:	fa1f f38c 	uxth.w	r3, ip
 8018aa2:	2b09      	cmp	r3, #9
 8018aa4:	d8ce      	bhi.n	8018a44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018aa6:	6833      	ldr	r3, [r6, #0]
 8018aa8:	fb02 c303 	mla	r3, r2, r3, ip
 8018aac:	6033      	str	r3, [r6, #0]
 8018aae:	6803      	ldr	r3, [r0, #0]
 8018ab0:	b10b      	cbz	r3, 8018ab6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8018ab2:	3302      	adds	r3, #2
 8018ab4:	6003      	str	r3, [r0, #0]
 8018ab6:	680b      	ldr	r3, [r1, #0]
 8018ab8:	b10b      	cbz	r3, 8018abe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8018aba:	3301      	adds	r3, #1
 8018abc:	600b      	str	r3, [r1, #0]
 8018abe:	6803      	ldr	r3, [r0, #0]
 8018ac0:	b10b      	cbz	r3, 8018ac6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8018ac2:	881c      	ldrh	r4, [r3, #0]
 8018ac4:	e7e9      	b.n	8018a9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018ac6:	680c      	ldr	r4, [r1, #0]
 8018ac8:	2c00      	cmp	r4, #0
 8018aca:	d0e6      	beq.n	8018a9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018acc:	7824      	ldrb	r4, [r4, #0]
 8018ace:	e7e4      	b.n	8018a9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018ad0:	680b      	ldr	r3, [r1, #0]
 8018ad2:	b10b      	cbz	r3, 8018ad8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018ad4:	781b      	ldrb	r3, [r3, #0]
 8018ad6:	e7c5      	b.n	8018a64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8018ad8:	2200      	movs	r2, #0
 8018ada:	602a      	str	r2, [r5, #0]
 8018adc:	240a      	movs	r4, #10
 8018ade:	3b30      	subs	r3, #48	; 0x30
 8018ae0:	b29e      	uxth	r6, r3
 8018ae2:	2e09      	cmp	r6, #9
 8018ae4:	682a      	ldr	r2, [r5, #0]
 8018ae6:	d813      	bhi.n	8018b10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8018ae8:	fb04 3302 	mla	r3, r4, r2, r3
 8018aec:	602b      	str	r3, [r5, #0]
 8018aee:	6803      	ldr	r3, [r0, #0]
 8018af0:	b10b      	cbz	r3, 8018af6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8018af2:	3302      	adds	r3, #2
 8018af4:	6003      	str	r3, [r0, #0]
 8018af6:	680b      	ldr	r3, [r1, #0]
 8018af8:	b10b      	cbz	r3, 8018afe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8018afa:	3301      	adds	r3, #1
 8018afc:	600b      	str	r3, [r1, #0]
 8018afe:	6803      	ldr	r3, [r0, #0]
 8018b00:	b10b      	cbz	r3, 8018b06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8018b02:	881b      	ldrh	r3, [r3, #0]
 8018b04:	e7eb      	b.n	8018ade <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018b06:	680b      	ldr	r3, [r1, #0]
 8018b08:	2b00      	cmp	r3, #0
 8018b0a:	d0e8      	beq.n	8018ade <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018b0c:	781b      	ldrb	r3, [r3, #0]
 8018b0e:	e7e6      	b.n	8018ade <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018b10:	2a06      	cmp	r2, #6
 8018b12:	bfa8      	it	ge
 8018b14:	2206      	movge	r2, #6
 8018b16:	602a      	str	r2, [r5, #0]
 8018b18:	e7b1      	b.n	8018a7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08018b1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8018b1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b1e:	b0a3      	sub	sp, #140	; 0x8c
 8018b20:	2600      	movs	r6, #0
 8018b22:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8018b26:	4607      	mov	r7, r0
 8018b28:	4688      	mov	r8, r1
 8018b2a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8018b2e:	4631      	mov	r1, r6
 8018b30:	2242      	movs	r2, #66	; 0x42
 8018b32:	4648      	mov	r0, r9
 8018b34:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8018b36:	960d      	str	r6, [sp, #52]	; 0x34
 8018b38:	f012 f955 	bl	802ade6 <memset>
 8018b3c:	b15f      	cbz	r7, 8018b56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8018b3e:	f108 3aff 	add.w	sl, r8, #4294967295
 8018b42:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018b44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018b46:	b152      	cbz	r2, 8018b5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8018b48:	8812      	ldrh	r2, [r2, #0]
 8018b4a:	b10a      	cbz	r2, 8018b50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018b4c:	459a      	cmp	sl, r3
 8018b4e:	dc2e      	bgt.n	8018bae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8018b50:	2200      	movs	r2, #0
 8018b52:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018b56:	4638      	mov	r0, r7
 8018b58:	b023      	add	sp, #140	; 0x8c
 8018b5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b5e:	9a08      	ldr	r2, [sp, #32]
 8018b60:	2a00      	cmp	r2, #0
 8018b62:	d0f5      	beq.n	8018b50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018b64:	7812      	ldrb	r2, [r2, #0]
 8018b66:	e7f0      	b.n	8018b4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8018b68:	2d00      	cmp	r5, #0
 8018b6a:	d0ea      	beq.n	8018b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018b6c:	782a      	ldrb	r2, [r5, #0]
 8018b6e:	b142      	cbz	r2, 8018b82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8018b70:	2a25      	cmp	r2, #37	; 0x25
 8018b72:	d001      	beq.n	8018b78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8018b74:	459a      	cmp	sl, r3
 8018b76:	dc08      	bgt.n	8018b8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8018b78:	f1bb 0f00 	cmp.w	fp, #0
 8018b7c:	d121      	bne.n	8018bc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8018b7e:	2d00      	cmp	r5, #0
 8018b80:	d0df      	beq.n	8018b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018b82:	782a      	ldrb	r2, [r5, #0]
 8018b84:	f04f 0b00 	mov.w	fp, #0
 8018b88:	e01d      	b.n	8018bc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8018b8a:	f1bb 0f00 	cmp.w	fp, #0
 8018b8e:	d078      	beq.n	8018c82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8018b90:	f8bb 2000 	ldrh.w	r2, [fp]
 8018b94:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018b98:	f1bb 0f00 	cmp.w	fp, #0
 8018b9c:	d002      	beq.n	8018ba4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8018b9e:	f10b 0202 	add.w	r2, fp, #2
 8018ba2:	9209      	str	r2, [sp, #36]	; 0x24
 8018ba4:	b10d      	cbz	r5, 8018baa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8018ba6:	3501      	adds	r5, #1
 8018ba8:	9508      	str	r5, [sp, #32]
 8018baa:	3301      	adds	r3, #1
 8018bac:	930d      	str	r3, [sp, #52]	; 0x34
 8018bae:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8018bb2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018bb4:	f1bb 0f00 	cmp.w	fp, #0
 8018bb8:	d0d6      	beq.n	8018b68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8018bba:	f8bb 2000 	ldrh.w	r2, [fp]
 8018bbe:	2a00      	cmp	r2, #0
 8018bc0:	d1d6      	bne.n	8018b70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8018bc2:	f8bb 2000 	ldrh.w	r2, [fp]
 8018bc6:	2a00      	cmp	r2, #0
 8018bc8:	d0bb      	beq.n	8018b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018bca:	459a      	cmp	sl, r3
 8018bcc:	ddb9      	ble.n	8018b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018bce:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8018bd2:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8018bd6:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8018bda:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8018bde:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8018be2:	960e      	str	r6, [sp, #56]	; 0x38
 8018be4:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8018be8:	960f      	str	r6, [sp, #60]	; 0x3c
 8018bea:	f1bb 0f00 	cmp.w	fp, #0
 8018bee:	d002      	beq.n	8018bf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8018bf0:	f10b 0302 	add.w	r3, fp, #2
 8018bf4:	9309      	str	r3, [sp, #36]	; 0x24
 8018bf6:	b10d      	cbz	r5, 8018bfc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8018bf8:	1c6b      	adds	r3, r5, #1
 8018bfa:	9308      	str	r3, [sp, #32]
 8018bfc:	ab0f      	add	r3, sp, #60	; 0x3c
 8018bfe:	9305      	str	r3, [sp, #20]
 8018c00:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8018c04:	9304      	str	r3, [sp, #16]
 8018c06:	ab0e      	add	r3, sp, #56	; 0x38
 8018c08:	9303      	str	r3, [sp, #12]
 8018c0a:	ab0c      	add	r3, sp, #48	; 0x30
 8018c0c:	9302      	str	r3, [sp, #8]
 8018c0e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8018c12:	9301      	str	r3, [sp, #4]
 8018c14:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018c18:	9300      	str	r3, [sp, #0]
 8018c1a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8018c1e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8018c22:	a908      	add	r1, sp, #32
 8018c24:	a809      	add	r0, sp, #36	; 0x24
 8018c26:	f7ff fea8 	bl	801897a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8018c2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018c2c:	2b00      	cmp	r3, #0
 8018c2e:	bfbe      	ittt	lt
 8018c30:	6823      	ldrlt	r3, [r4, #0]
 8018c32:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018c36:	930e      	strlt	r3, [sp, #56]	; 0x38
 8018c38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018c3a:	bfb8      	it	lt
 8018c3c:	3404      	addlt	r4, #4
 8018c3e:	2b00      	cmp	r3, #0
 8018c40:	bfb8      	it	lt
 8018c42:	6823      	ldrlt	r3, [r4, #0]
 8018c44:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8018c48:	bfbe      	ittt	lt
 8018c4a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018c4e:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8018c50:	3404      	addlt	r4, #4
 8018c52:	b1d9      	cbz	r1, 8018c8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8018c54:	880b      	ldrh	r3, [r1, #0]
 8018c56:	2b69      	cmp	r3, #105	; 0x69
 8018c58:	d01f      	beq.n	8018c9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018c5a:	d82f      	bhi.n	8018cbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8018c5c:	2b58      	cmp	r3, #88	; 0x58
 8018c5e:	d01c      	beq.n	8018c9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018c60:	d818      	bhi.n	8018c94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8018c62:	2b25      	cmp	r3, #37	; 0x25
 8018c64:	d034      	beq.n	8018cd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8018c66:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8018c6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018c6c:	f1bb 0f00 	cmp.w	fp, #0
 8018c70:	f000 80b8 	beq.w	8018de4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8018c74:	f8bb 5000 	ldrh.w	r5, [fp]
 8018c78:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8018c7c:	3301      	adds	r3, #1
 8018c7e:	930d      	str	r3, [sp, #52]	; 0x34
 8018c80:	e029      	b.n	8018cd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018c82:	b10d      	cbz	r5, 8018c88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8018c84:	782a      	ldrb	r2, [r5, #0]
 8018c86:	e785      	b.n	8018b94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018c88:	462a      	mov	r2, r5
 8018c8a:	e783      	b.n	8018b94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018c8c:	2a00      	cmp	r2, #0
 8018c8e:	d0ea      	beq.n	8018c66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018c90:	7813      	ldrb	r3, [r2, #0]
 8018c92:	e7e0      	b.n	8018c56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8018c94:	3b63      	subs	r3, #99	; 0x63
 8018c96:	2b01      	cmp	r3, #1
 8018c98:	d8e5      	bhi.n	8018c66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018c9a:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8018c9e:	b329      	cbz	r1, 8018cec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8018ca0:	880b      	ldrh	r3, [r1, #0]
 8018ca2:	2b69      	cmp	r3, #105	; 0x69
 8018ca4:	d063      	beq.n	8018d6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018ca6:	d825      	bhi.n	8018cf4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8018ca8:	2b63      	cmp	r3, #99	; 0x63
 8018caa:	d038      	beq.n	8018d1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8018cac:	2b64      	cmp	r3, #100	; 0x64
 8018cae:	d05e      	beq.n	8018d6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018cb0:	2b58      	cmp	r3, #88	; 0x58
 8018cb2:	d07b      	beq.n	8018dac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8018cb4:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8018cb8:	4625      	mov	r5, r4
 8018cba:	e036      	b.n	8018d2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018cbc:	2b73      	cmp	r3, #115	; 0x73
 8018cbe:	d0ec      	beq.n	8018c9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018cc0:	d802      	bhi.n	8018cc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8018cc2:	2b6f      	cmp	r3, #111	; 0x6f
 8018cc4:	d1cf      	bne.n	8018c66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018cc6:	e7e8      	b.n	8018c9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018cc8:	2b75      	cmp	r3, #117	; 0x75
 8018cca:	d0e6      	beq.n	8018c9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018ccc:	2b78      	cmp	r3, #120	; 0x78
 8018cce:	e7f9      	b.n	8018cc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8018cd0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018cd2:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8018cd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018cd8:	b10b      	cbz	r3, 8018cde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8018cda:	3302      	adds	r3, #2
 8018cdc:	9309      	str	r3, [sp, #36]	; 0x24
 8018cde:	9b08      	ldr	r3, [sp, #32]
 8018ce0:	2b00      	cmp	r3, #0
 8018ce2:	f43f af2e 	beq.w	8018b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018ce6:	3301      	adds	r3, #1
 8018ce8:	9308      	str	r3, [sp, #32]
 8018cea:	e72a      	b.n	8018b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018cec:	2a00      	cmp	r2, #0
 8018cee:	d0e1      	beq.n	8018cb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018cf0:	7813      	ldrb	r3, [r2, #0]
 8018cf2:	e7d6      	b.n	8018ca2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8018cf4:	2b73      	cmp	r3, #115	; 0x73
 8018cf6:	d036      	beq.n	8018d66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8018cf8:	d807      	bhi.n	8018d0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8018cfa:	2b6f      	cmp	r3, #111	; 0x6f
 8018cfc:	d1da      	bne.n	8018cb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018cfe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018d00:	1d25      	adds	r5, r4, #4
 8018d02:	eba8 0202 	sub.w	r2, r8, r2
 8018d06:	2308      	movs	r3, #8
 8018d08:	e04a      	b.n	8018da0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018d0a:	2b75      	cmp	r3, #117	; 0x75
 8018d0c:	d043      	beq.n	8018d96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8018d0e:	2b78      	cmp	r3, #120	; 0x78
 8018d10:	d1d0      	bne.n	8018cb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018d12:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018d14:	1d25      	adds	r5, r4, #4
 8018d16:	eba8 0202 	sub.w	r2, r8, r2
 8018d1a:	2310      	movs	r3, #16
 8018d1c:	e040      	b.n	8018da0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018d1e:	6823      	ldr	r3, [r4, #0]
 8018d20:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8018d24:	1d25      	adds	r5, r4, #4
 8018d26:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8018d2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018d2c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018d30:	2b00      	cmp	r3, #0
 8018d32:	d052      	beq.n	8018dda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8018d34:	881a      	ldrh	r2, [r3, #0]
 8018d36:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018d3a:	a80d      	add	r0, sp, #52	; 0x34
 8018d3c:	9005      	str	r0, [sp, #20]
 8018d3e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8018d42:	9004      	str	r0, [sp, #16]
 8018d44:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018d46:	9003      	str	r0, [sp, #12]
 8018d48:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8018d4c:	9002      	str	r0, [sp, #8]
 8018d4e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018d50:	9001      	str	r0, [sp, #4]
 8018d52:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8018d56:	9000      	str	r0, [sp, #0]
 8018d58:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8018d5c:	a810      	add	r0, sp, #64	; 0x40
 8018d5e:	f7ff fd49 	bl	80187f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8018d62:	462c      	mov	r4, r5
 8018d64:	e7b7      	b.n	8018cd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018d66:	6823      	ldr	r3, [r4, #0]
 8018d68:	1d25      	adds	r5, r4, #4
 8018d6a:	9310      	str	r3, [sp, #64]	; 0x40
 8018d6c:	e7dd      	b.n	8018d2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018d6e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018d70:	6820      	ldr	r0, [r4, #0]
 8018d72:	eba8 0202 	sub.w	r2, r8, r2
 8018d76:	230a      	movs	r3, #10
 8018d78:	b292      	uxth	r2, r2
 8018d7a:	4649      	mov	r1, r9
 8018d7c:	f7ff fce4 	bl	8018748 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8018d80:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8018d84:	2b2d      	cmp	r3, #45	; 0x2d
 8018d86:	f104 0504 	add.w	r5, r4, #4
 8018d8a:	d1ce      	bne.n	8018d2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018d8c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018d90:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d92:	3302      	adds	r3, #2
 8018d94:	e7e9      	b.n	8018d6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8018d96:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018d98:	1d25      	adds	r5, r4, #4
 8018d9a:	eba8 0202 	sub.w	r2, r8, r2
 8018d9e:	230a      	movs	r3, #10
 8018da0:	b292      	uxth	r2, r2
 8018da2:	4649      	mov	r1, r9
 8018da4:	6820      	ldr	r0, [r4, #0]
 8018da6:	f7ff fcfb 	bl	80187a0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8018daa:	e7be      	b.n	8018d2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018dac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018dae:	6820      	ldr	r0, [r4, #0]
 8018db0:	eba8 0202 	sub.w	r2, r8, r2
 8018db4:	b292      	uxth	r2, r2
 8018db6:	2310      	movs	r3, #16
 8018db8:	4649      	mov	r1, r9
 8018dba:	f7ff fcf1 	bl	80187a0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8018dbe:	1d25      	adds	r5, r4, #4
 8018dc0:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8018dc4:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8018dc8:	2b00      	cmp	r3, #0
 8018dca:	d0ae      	beq.n	8018d2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018dcc:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8018dd0:	2919      	cmp	r1, #25
 8018dd2:	d8f7      	bhi.n	8018dc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018dd4:	3b20      	subs	r3, #32
 8018dd6:	8013      	strh	r3, [r2, #0]
 8018dd8:	e7f4      	b.n	8018dc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018dda:	9a08      	ldr	r2, [sp, #32]
 8018ddc:	2a00      	cmp	r2, #0
 8018dde:	d0aa      	beq.n	8018d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018de0:	7812      	ldrb	r2, [r2, #0]
 8018de2:	e7a8      	b.n	8018d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018de4:	2d00      	cmp	r5, #0
 8018de6:	f43f af47 	beq.w	8018c78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8018dea:	782d      	ldrb	r5, [r5, #0]
 8018dec:	e744      	b.n	8018c78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08018dee <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8018dee:	b507      	push	{r0, r1, r2, lr}
 8018df0:	9300      	str	r3, [sp, #0]
 8018df2:	4613      	mov	r3, r2
 8018df4:	2200      	movs	r2, #0
 8018df6:	f7ff fe90 	bl	8018b1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8018dfa:	b003      	add	sp, #12
 8018dfc:	f85d fb04 	ldr.w	pc, [sp], #4

08018e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8018e00:	b40c      	push	{r2, r3}
 8018e02:	b507      	push	{r0, r1, r2, lr}
 8018e04:	ab04      	add	r3, sp, #16
 8018e06:	f853 2b04 	ldr.w	r2, [r3], #4
 8018e0a:	9301      	str	r3, [sp, #4]
 8018e0c:	f7ff ffef 	bl	8018dee <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8018e10:	b003      	add	sp, #12
 8018e12:	f85d eb04 	ldr.w	lr, [sp], #4
 8018e16:	b002      	add	sp, #8
 8018e18:	4770      	bx	lr
	...

08018e1c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8018e1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e20:	b0c5      	sub	sp, #276	; 0x114
 8018e22:	2400      	movs	r4, #0
 8018e24:	af11      	add	r7, sp, #68	; 0x44
 8018e26:	4606      	mov	r6, r0
 8018e28:	468a      	mov	sl, r1
 8018e2a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8018e2e:	4621      	mov	r1, r4
 8018e30:	22c8      	movs	r2, #200	; 0xc8
 8018e32:	4638      	mov	r0, r7
 8018e34:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 8018e38:	940d      	str	r4, [sp, #52]	; 0x34
 8018e3a:	f011 ffd4 	bl	802ade6 <memset>
 8018e3e:	b16e      	cbz	r6, 8018e5c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8018e40:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 80190e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8018e44:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018e46:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018e48:	b162      	cbz	r2, 8018e64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 8018e4a:	8812      	ldrh	r2, [r2, #0]
 8018e4c:	b11a      	cbz	r2, 8018e56 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8018e4e:	f10a 31ff 	add.w	r1, sl, #4294967295
 8018e52:	4299      	cmp	r1, r3
 8018e54:	dc2e      	bgt.n	8018eb4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8018e56:	2200      	movs	r2, #0
 8018e58:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8018e5c:	4630      	mov	r0, r6
 8018e5e:	b045      	add	sp, #276	; 0x114
 8018e60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018e64:	9a08      	ldr	r2, [sp, #32]
 8018e66:	2a00      	cmp	r2, #0
 8018e68:	d0f5      	beq.n	8018e56 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8018e6a:	7812      	ldrb	r2, [r2, #0]
 8018e6c:	e7ee      	b.n	8018e4c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 8018e6e:	2d00      	cmp	r5, #0
 8018e70:	d0e8      	beq.n	8018e44 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018e72:	782a      	ldrb	r2, [r5, #0]
 8018e74:	b142      	cbz	r2, 8018e88 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8018e76:	2a25      	cmp	r2, #37	; 0x25
 8018e78:	d001      	beq.n	8018e7e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 8018e7a:	4299      	cmp	r1, r3
 8018e7c:	dc08      	bgt.n	8018e90 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8018e7e:	f1b8 0f00 	cmp.w	r8, #0
 8018e82:	d121      	bne.n	8018ec8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8018e84:	2d00      	cmp	r5, #0
 8018e86:	d0dd      	beq.n	8018e44 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018e88:	782a      	ldrb	r2, [r5, #0]
 8018e8a:	f04f 0800 	mov.w	r8, #0
 8018e8e:	e01d      	b.n	8018ecc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8018e90:	f1b8 0f00 	cmp.w	r8, #0
 8018e94:	d07f      	beq.n	8018f96 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8018e96:	f8b8 2000 	ldrh.w	r2, [r8]
 8018e9a:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8018e9e:	f1b8 0f00 	cmp.w	r8, #0
 8018ea2:	d002      	beq.n	8018eaa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8018ea4:	f108 0202 	add.w	r2, r8, #2
 8018ea8:	9209      	str	r2, [sp, #36]	; 0x24
 8018eaa:	b10d      	cbz	r5, 8018eb0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 8018eac:	3501      	adds	r5, #1
 8018eae:	9508      	str	r5, [sp, #32]
 8018eb0:	3301      	adds	r3, #1
 8018eb2:	930d      	str	r3, [sp, #52]	; 0x34
 8018eb4:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8018eb8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018eba:	f1b8 0f00 	cmp.w	r8, #0
 8018ebe:	d0d6      	beq.n	8018e6e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 8018ec0:	f8b8 2000 	ldrh.w	r2, [r8]
 8018ec4:	2a00      	cmp	r2, #0
 8018ec6:	d1d6      	bne.n	8018e76 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8018ec8:	f8b8 2000 	ldrh.w	r2, [r8]
 8018ecc:	2a00      	cmp	r2, #0
 8018ece:	d0b9      	beq.n	8018e44 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018ed0:	4299      	cmp	r1, r3
 8018ed2:	ddb7      	ble.n	8018e44 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018ed4:	2300      	movs	r3, #0
 8018ed6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018eda:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8018ede:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 8018ee2:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 8018ee6:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 8018eea:	930e      	str	r3, [sp, #56]	; 0x38
 8018eec:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8018ef0:	930f      	str	r3, [sp, #60]	; 0x3c
 8018ef2:	f1b8 0f00 	cmp.w	r8, #0
 8018ef6:	d002      	beq.n	8018efe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8018ef8:	f108 0302 	add.w	r3, r8, #2
 8018efc:	9309      	str	r3, [sp, #36]	; 0x24
 8018efe:	b10d      	cbz	r5, 8018f04 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8018f00:	1c6b      	adds	r3, r5, #1
 8018f02:	9308      	str	r3, [sp, #32]
 8018f04:	ab0f      	add	r3, sp, #60	; 0x3c
 8018f06:	9305      	str	r3, [sp, #20]
 8018f08:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8018f0c:	9304      	str	r3, [sp, #16]
 8018f0e:	ab0e      	add	r3, sp, #56	; 0x38
 8018f10:	9303      	str	r3, [sp, #12]
 8018f12:	ab0c      	add	r3, sp, #48	; 0x30
 8018f14:	9302      	str	r3, [sp, #8]
 8018f16:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8018f1a:	9301      	str	r3, [sp, #4]
 8018f1c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018f20:	9300      	str	r3, [sp, #0]
 8018f22:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8018f26:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8018f2a:	a908      	add	r1, sp, #32
 8018f2c:	a809      	add	r0, sp, #36	; 0x24
 8018f2e:	f7ff fd24 	bl	801897a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8018f32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018f34:	2b00      	cmp	r3, #0
 8018f36:	da0b      	bge.n	8018f50 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 8018f38:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8018f3c:	edd3 7a00 	vldr	s15, [r3]
 8018f40:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018f44:	3401      	adds	r4, #1
 8018f46:	ee17 3a90 	vmov	r3, s15
 8018f4a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018f4e:	930e      	str	r3, [sp, #56]	; 0x38
 8018f50:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018f52:	2b00      	cmp	r3, #0
 8018f54:	da0b      	bge.n	8018f6e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 8018f56:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8018f5a:	edd3 7a00 	vldr	s15, [r3]
 8018f5e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018f62:	3401      	adds	r4, #1
 8018f64:	ee17 3a90 	vmov	r3, s15
 8018f68:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018f6c:	930f      	str	r3, [sp, #60]	; 0x3c
 8018f6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018f70:	b1b3      	cbz	r3, 8018fa0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 8018f72:	881a      	ldrh	r2, [r3, #0]
 8018f74:	2a25      	cmp	r2, #37	; 0x25
 8018f76:	d018      	beq.n	8018faa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8018f78:	2a66      	cmp	r2, #102	; 0x66
 8018f7a:	d01c      	beq.n	8018fb6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 8018f7c:	e9cd 5808 	strd	r5, r8, [sp, #32]
 8018f80:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018f82:	f1b8 0f00 	cmp.w	r8, #0
 8018f86:	f000 8121 	beq.w	80191cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 8018f8a:	f8b8 5000 	ldrh.w	r5, [r8]
 8018f8e:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 8018f92:	3301      	adds	r3, #1
 8018f94:	e00d      	b.n	8018fb2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 8018f96:	b10d      	cbz	r5, 8018f9c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8018f98:	782a      	ldrb	r2, [r5, #0]
 8018f9a:	e77e      	b.n	8018e9a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8018f9c:	462a      	mov	r2, r5
 8018f9e:	e77c      	b.n	8018e9a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8018fa0:	9b08      	ldr	r3, [sp, #32]
 8018fa2:	2b00      	cmp	r3, #0
 8018fa4:	d0ea      	beq.n	8018f7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8018fa6:	781a      	ldrb	r2, [r3, #0]
 8018fa8:	e7e4      	b.n	8018f74 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8018faa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018fac:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8018fb0:	3302      	adds	r3, #2
 8018fb2:	930d      	str	r3, [sp, #52]	; 0x34
 8018fb4:	e041      	b.n	801903a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 8018fb6:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8018fba:	edd3 7a00 	vldr	s15, [r3]
 8018fbe:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018fc2:	9710      	str	r7, [sp, #64]	; 0x40
 8018fc4:	3401      	adds	r4, #1
 8018fc6:	b923      	cbnz	r3, 8018fd2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 8018fc8:	2301      	movs	r3, #1
 8018fca:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8018fce:	2306      	movs	r3, #6
 8018fd0:	930f      	str	r3, [sp, #60]	; 0x3c
 8018fd2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018fd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018fda:	bf48      	it	mi
 8018fdc:	eef1 7a67 	vnegmi.f32	s15, s15
 8018fe0:	eeb0 7ae7 	vabs.f32	s14, s15
 8018fe4:	bf48      	it	mi
 8018fe6:	232d      	movmi	r3, #45	; 0x2d
 8018fe8:	eeb4 7a45 	vcmp.f32	s14, s10
 8018fec:	bf48      	it	mi
 8018fee:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 8018ff2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ff6:	dd2b      	ble.n	8019050 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8018ff8:	4b3b      	ldr	r3, [pc, #236]	; (80190e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 8018ffa:	9311      	str	r3, [sp, #68]	; 0x44
 8018ffc:	2366      	movs	r3, #102	; 0x66
 8018ffe:	9312      	str	r3, [sp, #72]	; 0x48
 8019000:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019002:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8019006:	2b00      	cmp	r3, #0
 8019008:	f000 80da 	beq.w	80191c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801900c:	881a      	ldrh	r2, [r3, #0]
 801900e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019012:	a80d      	add	r0, sp, #52	; 0x34
 8019014:	9005      	str	r0, [sp, #20]
 8019016:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801901a:	9004      	str	r0, [sp, #16]
 801901c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801901e:	9003      	str	r0, [sp, #12]
 8019020:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8019024:	9002      	str	r0, [sp, #8]
 8019026:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019028:	9001      	str	r0, [sp, #4]
 801902a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801902e:	9000      	str	r0, [sp, #0]
 8019030:	e9cd a606 	strd	sl, r6, [sp, #24]
 8019034:	a810      	add	r0, sp, #64	; 0x40
 8019036:	f7ff fbdd 	bl	80187f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801903a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801903c:	b10b      	cbz	r3, 8019042 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801903e:	3302      	adds	r3, #2
 8019040:	9309      	str	r3, [sp, #36]	; 0x24
 8019042:	9b08      	ldr	r3, [sp, #32]
 8019044:	2b00      	cmp	r3, #0
 8019046:	f43f aefd 	beq.w	8018e44 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801904a:	3301      	adds	r3, #1
 801904c:	9308      	str	r3, [sp, #32]
 801904e:	e6f9      	b.n	8018e44 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019050:	eef4 7a67 	vcmp.f32	s15, s15
 8019054:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019058:	d63a      	bvs.n	80190d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801905a:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 801905e:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8019062:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 8019066:	eeb0 6a67 	vmov.f32	s12, s15
 801906a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801906e:	eef0 5a47 	vmov.f32	s11, s14
 8019072:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8019076:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801907a:	da2d      	bge.n	80190d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801907c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801907e:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8019082:	2100      	movs	r1, #0
 8019084:	eef0 4a46 	vmov.f32	s9, s12
 8019088:	ebaa 0202 	sub.w	r2, sl, r2
 801908c:	eef4 6ac6 	vcmpe.f32	s13, s12
 8019090:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019094:	b28d      	uxth	r5, r1
 8019096:	db2c      	blt.n	80190f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8019098:	1a53      	subs	r3, r2, r1
 801909a:	2b00      	cmp	r3, #0
 801909c:	dd29      	ble.n	80190f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801909e:	3101      	adds	r1, #1
 80190a0:	2964      	cmp	r1, #100	; 0x64
 80190a2:	d025      	beq.n	80190f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 80190a4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80190a8:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80190ac:	ee17 3a10 	vmov	r3, s14
 80190b0:	2b09      	cmp	r3, #9
 80190b2:	bfa8      	it	ge
 80190b4:	2309      	movge	r3, #9
 80190b6:	ee07 3a10 	vmov	s14, r3
 80190ba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80190be:	f103 0030 	add.w	r0, r3, #48	; 0x30
 80190c2:	eee7 7a66 	vfms.f32	s15, s14, s13
 80190c6:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 80190ca:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 80190ce:	e7dd      	b.n	801908c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 80190d0:	4b06      	ldr	r3, [pc, #24]	; (80190ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 80190d2:	9311      	str	r3, [sp, #68]	; 0x44
 80190d4:	236e      	movs	r3, #110	; 0x6e
 80190d6:	e792      	b.n	8018ffe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 80190d8:	ee66 6a87 	vmul.f32	s13, s13, s14
 80190dc:	ee86 6a07 	vdiv.f32	s12, s12, s14
 80190e0:	e7c7      	b.n	8019072 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 80190e2:	bf00      	nop
 80190e4:	7f7fffff 	.word	0x7f7fffff
 80190e8:	006e0069 	.word	0x006e0069
 80190ec:	0061006e 	.word	0x0061006e
 80190f0:	2563      	movs	r5, #99	; 0x63
 80190f2:	2a63      	cmp	r2, #99	; 0x63
 80190f4:	bfd4      	ite	le
 80190f6:	ebc5 0202 	rsble	r2, r5, r2
 80190fa:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 80190fe:	2a00      	cmp	r2, #0
 8019100:	dd43      	ble.n	801918a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8019102:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019104:	2b00      	cmp	r3, #0
 8019106:	dd40      	ble.n	801918a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8019108:	f04f 0901 	mov.w	r9, #1
 801910c:	210a      	movs	r1, #10
 801910e:	f113 33ff 	adds.w	r3, r3, #4294967295
 8019112:	d30c      	bcc.n	801912e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 8019114:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8019118:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801911c:	ee17 0a10 	vmov	r0, s14
 8019120:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019124:	fb01 0909 	mla	r9, r1, r9, r0
 8019128:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801912c:	e7ef      	b.n	801910e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801912e:	3501      	adds	r5, #1
 8019130:	930f      	str	r3, [sp, #60]	; 0x3c
 8019132:	b292      	uxth	r2, r2
 8019134:	230a      	movs	r3, #10
 8019136:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801913a:	4648      	mov	r0, r9
 801913c:	f7ff fb4e 	bl	80187dc <_ZN8touchgfx7Unicode4itoaElPtti>
 8019140:	f1b9 0f01 	cmp.w	r9, #1
 8019144:	dc1f      	bgt.n	8019186 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 8019146:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801914a:	2b00      	cmp	r3, #0
 801914c:	bf0c      	ite	eq
 801914e:	2300      	moveq	r3, #0
 8019150:	232e      	movne	r3, #46	; 0x2e
 8019152:	aa44      	add	r2, sp, #272	; 0x110
 8019154:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8019158:	eef4 7ae4 	vcmpe.f32	s15, s9
 801915c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019160:	f825 3ccc 	strh.w	r3, [r5, #-204]
 8019164:	f6ff af4c 	blt.w	8019000 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019168:	2300      	movs	r3, #0
 801916a:	f838 2b02 	ldrh.w	r2, [r8], #2
 801916e:	1c59      	adds	r1, r3, #1
 8019170:	b98a      	cbnz	r2, 8019196 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 8019172:	b29b      	uxth	r3, r3
 8019174:	2130      	movs	r1, #48	; 0x30
 8019176:	b983      	cbnz	r3, 801919a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 8019178:	2331      	movs	r3, #49	; 0x31
 801917a:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801917e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019180:	3b02      	subs	r3, #2
 8019182:	9310      	str	r3, [sp, #64]	; 0x40
 8019184:	e73c      	b.n	8019000 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019186:	232e      	movs	r3, #46	; 0x2e
 8019188:	e7e3      	b.n	8019152 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801918a:	ab44      	add	r3, sp, #272	; 0x110
 801918c:	3501      	adds	r5, #1
 801918e:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8019192:	2300      	movs	r3, #0
 8019194:	e7e0      	b.n	8019158 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8019196:	460b      	mov	r3, r1
 8019198:	e7e7      	b.n	801916a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 801919a:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 801919e:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 80191a2:	2808      	cmp	r0, #8
 80191a4:	d806      	bhi.n	80191b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 80191a6:	a944      	add	r1, sp, #272	; 0x110
 80191a8:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80191ac:	3201      	adds	r2, #1
 80191ae:	f823 2ccc 	strh.w	r2, [r3, #-204]
 80191b2:	e725      	b.n	8019000 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80191b4:	2a39      	cmp	r2, #57	; 0x39
 80191b6:	bf08      	it	eq
 80191b8:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 80191bc:	3b01      	subs	r3, #1
 80191be:	e7da      	b.n	8019176 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 80191c0:	9a08      	ldr	r2, [sp, #32]
 80191c2:	2a00      	cmp	r2, #0
 80191c4:	f43f af23 	beq.w	801900e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80191c8:	7812      	ldrb	r2, [r2, #0]
 80191ca:	e720      	b.n	801900e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80191cc:	2d00      	cmp	r5, #0
 80191ce:	f43f aede 	beq.w	8018f8e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 80191d2:	782d      	ldrb	r5, [r5, #0]
 80191d4:	e6db      	b.n	8018f8e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 80191d6:	bf00      	nop

080191d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 80191d8:	b507      	push	{r0, r1, r2, lr}
 80191da:	9300      	str	r3, [sp, #0]
 80191dc:	4613      	mov	r3, r2
 80191de:	2200      	movs	r2, #0
 80191e0:	f7ff fe1c 	bl	8018e1c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 80191e4:	b003      	add	sp, #12
 80191e6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080191ec <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80191ec:	4b01      	ldr	r3, [pc, #4]	; (80191f4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80191ee:	6018      	str	r0, [r3, #0]
 80191f0:	4770      	bx	lr
 80191f2:	bf00      	nop
 80191f4:	20012e1c 	.word	0x20012e1c

080191f8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80191f8:	4b06      	ldr	r3, [pc, #24]	; (8019214 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80191fa:	881a      	ldrh	r2, [r3, #0]
 80191fc:	4282      	cmp	r2, r0
 80191fe:	d807      	bhi.n	8019210 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8019200:	4b05      	ldr	r3, [pc, #20]	; (8019218 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8019202:	881b      	ldrh	r3, [r3, #0]
 8019204:	4413      	add	r3, r2
 8019206:	4298      	cmp	r0, r3
 8019208:	bfac      	ite	ge
 801920a:	2000      	movge	r0, #0
 801920c:	2001      	movlt	r0, #1
 801920e:	4770      	bx	lr
 8019210:	2000      	movs	r0, #0
 8019212:	4770      	bx	lr
 8019214:	20012e3c 	.word	0x20012e3c
 8019218:	20012e40 	.word	0x20012e40

0801921c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801921c:	b508      	push	{r3, lr}
 801921e:	4601      	mov	r1, r0
 8019220:	f7ff ffea 	bl	80191f8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8019224:	b118      	cbz	r0, 801922e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8019226:	4b02      	ldr	r3, [pc, #8]	; (8019230 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8019228:	681b      	ldr	r3, [r3, #0]
 801922a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801922e:	bd08      	pop	{r3, pc}
 8019230:	20012e20 	.word	0x20012e20

08019234 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8019234:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019236:	4c24      	ldr	r4, [pc, #144]	; (80192c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8019238:	6823      	ldr	r3, [r4, #0]
 801923a:	2b00      	cmp	r3, #0
 801923c:	d042      	beq.n	80192c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801923e:	4a23      	ldr	r2, [pc, #140]	; (80192cc <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8019240:	4d23      	ldr	r5, [pc, #140]	; (80192d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8019242:	8811      	ldrh	r1, [r2, #0]
 8019244:	f8b5 c000 	ldrh.w	ip, [r5]
 8019248:	4822      	ldr	r0, [pc, #136]	; (80192d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801924a:	4461      	add	r1, ip
 801924c:	1c4a      	adds	r2, r1, #1
 801924e:	f022 0201 	bic.w	r2, r2, #1
 8019252:	008f      	lsls	r7, r1, #2
 8019254:	0412      	lsls	r2, r2, #16
 8019256:	19de      	adds	r6, r3, r7
 8019258:	0c12      	lsrs	r2, r2, #16
 801925a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801925e:	6006      	str	r6, [r0, #0]
 8019260:	4e1d      	ldr	r6, [pc, #116]	; (80192d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8019262:	19da      	adds	r2, r3, r7
 8019264:	6032      	str	r2, [r6, #0]
 8019266:	220e      	movs	r2, #14
 8019268:	fb02 f20c 	mul.w	r2, r2, ip
 801926c:	3203      	adds	r2, #3
 801926e:	f022 0203 	bic.w	r2, r2, #3
 8019272:	443a      	add	r2, r7
 8019274:	4f19      	ldr	r7, [pc, #100]	; (80192dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8019276:	4413      	add	r3, r2
 8019278:	603b      	str	r3, [r7, #0]
 801927a:	4f19      	ldr	r7, [pc, #100]	; (80192e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801927c:	2300      	movs	r3, #0
 801927e:	803b      	strh	r3, [r7, #0]
 8019280:	4f18      	ldr	r7, [pc, #96]	; (80192e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8019282:	683f      	ldr	r7, [r7, #0]
 8019284:	1aba      	subs	r2, r7, r2
 8019286:	4f18      	ldr	r7, [pc, #96]	; (80192e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8019288:	603a      	str	r2, [r7, #0]
 801928a:	4a18      	ldr	r2, [pc, #96]	; (80192ec <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801928c:	469c      	mov	ip, r3
 801928e:	8013      	strh	r3, [r2, #0]
 8019290:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8019294:	428b      	cmp	r3, r1
 8019296:	d10d      	bne.n	80192b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8019298:	882d      	ldrh	r5, [r5, #0]
 801929a:	6830      	ldr	r0, [r6, #0]
 801929c:	2300      	movs	r3, #0
 801929e:	240e      	movs	r4, #14
 80192a0:	429d      	cmp	r5, r3
 80192a2:	d90f      	bls.n	80192c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80192a4:	fb04 0203 	mla	r2, r4, r3, r0
 80192a8:	3301      	adds	r3, #1
 80192aa:	7b11      	ldrb	r1, [r2, #12]
 80192ac:	f36f 1145 	bfc	r1, #5, #1
 80192b0:	7311      	strb	r1, [r2, #12]
 80192b2:	e7f5      	b.n	80192a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80192b4:	6822      	ldr	r2, [r4, #0]
 80192b6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80192ba:	6802      	ldr	r2, [r0, #0]
 80192bc:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80192c0:	3301      	adds	r3, #1
 80192c2:	e7e7      	b.n	8019294 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80192c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80192c6:	bf00      	nop
 80192c8:	20012e20 	.word	0x20012e20
 80192cc:	20012e3c 	.word	0x20012e3c
 80192d0:	20012e40 	.word	0x20012e40
 80192d4:	20012e34 	.word	0x20012e34
 80192d8:	20012e24 	.word	0x20012e24
 80192dc:	20012e2c 	.word	0x20012e2c
 80192e0:	20012e3e 	.word	0x20012e3e
 80192e4:	20012e28 	.word	0x20012e28
 80192e8:	20012e38 	.word	0x20012e38
 80192ec:	20012e30 	.word	0x20012e30

080192f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80192f0:	4b06      	ldr	r3, [pc, #24]	; (801930c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80192f2:	681b      	ldr	r3, [r3, #0]
 80192f4:	b943      	cbnz	r3, 8019308 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80192f6:	b139      	cbz	r1, 8019308 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80192f8:	4b05      	ldr	r3, [pc, #20]	; (8019310 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80192fa:	801a      	strh	r2, [r3, #0]
 80192fc:	4b05      	ldr	r3, [pc, #20]	; (8019314 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80192fe:	6019      	str	r1, [r3, #0]
 8019300:	4b05      	ldr	r3, [pc, #20]	; (8019318 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8019302:	6018      	str	r0, [r3, #0]
 8019304:	f7ff bf96 	b.w	8019234 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8019308:	4770      	bx	lr
 801930a:	bf00      	nop
 801930c:	20012e2c 	.word	0x20012e2c
 8019310:	20012e40 	.word	0x20012e40
 8019314:	20012e28 	.word	0x20012e28
 8019318:	20012e20 	.word	0x20012e20

0801931c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801931c:	b470      	push	{r4, r5, r6}
 801931e:	4c07      	ldr	r4, [pc, #28]	; (801933c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8019320:	6826      	ldr	r6, [r4, #0]
 8019322:	4605      	mov	r5, r0
 8019324:	4610      	mov	r0, r2
 8019326:	9a03      	ldr	r2, [sp, #12]
 8019328:	b936      	cbnz	r6, 8019338 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801932a:	6025      	str	r5, [r4, #0]
 801932c:	4c04      	ldr	r4, [pc, #16]	; (8019340 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801932e:	8021      	strh	r1, [r4, #0]
 8019330:	bc70      	pop	{r4, r5, r6}
 8019332:	4619      	mov	r1, r3
 8019334:	f7ff bfdc 	b.w	80192f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8019338:	bc70      	pop	{r4, r5, r6}
 801933a:	4770      	bx	lr
 801933c:	20012e44 	.word	0x20012e44
 8019340:	20012e3c 	.word	0x20012e3c

08019344 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8019344:	4a12      	ldr	r2, [pc, #72]	; (8019390 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8019346:	8803      	ldrh	r3, [r0, #0]
 8019348:	8812      	ldrh	r2, [r2, #0]
 801934a:	4293      	cmp	r3, r2
 801934c:	d207      	bcs.n	801935e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801934e:	4a11      	ldr	r2, [pc, #68]	; (8019394 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8019350:	6812      	ldr	r2, [r2, #0]
 8019352:	2114      	movs	r1, #20
 8019354:	fb01 2303 	mla	r3, r1, r3, r2
 8019358:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801935c:	4770      	bx	lr
 801935e:	490e      	ldr	r1, [pc, #56]	; (8019398 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8019360:	8809      	ldrh	r1, [r1, #0]
 8019362:	4411      	add	r1, r2
 8019364:	428b      	cmp	r3, r1
 8019366:	da04      	bge.n	8019372 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8019368:	1a9b      	subs	r3, r3, r2
 801936a:	4a0c      	ldr	r2, [pc, #48]	; (801939c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801936c:	210e      	movs	r1, #14
 801936e:	6812      	ldr	r2, [r2, #0]
 8019370:	e7f0      	b.n	8019354 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8019372:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019376:	4293      	cmp	r3, r2
 8019378:	d108      	bne.n	801938c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801937a:	4b09      	ldr	r3, [pc, #36]	; (80193a0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801937c:	781b      	ldrb	r3, [r3, #0]
 801937e:	b91b      	cbnz	r3, 8019388 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8019380:	4b08      	ldr	r3, [pc, #32]	; (80193a4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8019382:	f9b3 0000 	ldrsh.w	r0, [r3]
 8019386:	4770      	bx	lr
 8019388:	4b07      	ldr	r3, [pc, #28]	; (80193a8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801938a:	e7fa      	b.n	8019382 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801938c:	2000      	movs	r0, #0
 801938e:	4770      	bx	lr
 8019390:	20012e3c 	.word	0x20012e3c
 8019394:	20012e44 	.word	0x20012e44
 8019398:	20012e40 	.word	0x20012e40
 801939c:	20012e24 	.word	0x20012e24
 80193a0:	20012dac 	.word	0x20012dac
 80193a4:	20012dae 	.word	0x20012dae
 80193a8:	20012db0 	.word	0x20012db0

080193ac <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80193ac:	4a12      	ldr	r2, [pc, #72]	; (80193f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80193ae:	8803      	ldrh	r3, [r0, #0]
 80193b0:	8812      	ldrh	r2, [r2, #0]
 80193b2:	4293      	cmp	r3, r2
 80193b4:	d207      	bcs.n	80193c6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80193b6:	4a11      	ldr	r2, [pc, #68]	; (80193fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80193b8:	6812      	ldr	r2, [r2, #0]
 80193ba:	2114      	movs	r1, #20
 80193bc:	fb01 2303 	mla	r3, r1, r3, r2
 80193c0:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80193c4:	4770      	bx	lr
 80193c6:	490e      	ldr	r1, [pc, #56]	; (8019400 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80193c8:	8809      	ldrh	r1, [r1, #0]
 80193ca:	4411      	add	r1, r2
 80193cc:	428b      	cmp	r3, r1
 80193ce:	da04      	bge.n	80193da <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80193d0:	1a9b      	subs	r3, r3, r2
 80193d2:	4a0c      	ldr	r2, [pc, #48]	; (8019404 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80193d4:	210e      	movs	r1, #14
 80193d6:	6812      	ldr	r2, [r2, #0]
 80193d8:	e7f0      	b.n	80193bc <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80193da:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80193de:	4293      	cmp	r3, r2
 80193e0:	d108      	bne.n	80193f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80193e2:	4b09      	ldr	r3, [pc, #36]	; (8019408 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80193e4:	781b      	ldrb	r3, [r3, #0]
 80193e6:	b91b      	cbnz	r3, 80193f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80193e8:	4b08      	ldr	r3, [pc, #32]	; (801940c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80193ea:	f9b3 0000 	ldrsh.w	r0, [r3]
 80193ee:	4770      	bx	lr
 80193f0:	4b07      	ldr	r3, [pc, #28]	; (8019410 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80193f2:	e7fa      	b.n	80193ea <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80193f4:	2000      	movs	r0, #0
 80193f6:	4770      	bx	lr
 80193f8:	20012e3c 	.word	0x20012e3c
 80193fc:	20012e44 	.word	0x20012e44
 8019400:	20012e40 	.word	0x20012e40
 8019404:	20012e24 	.word	0x20012e24
 8019408:	20012dac 	.word	0x20012dac
 801940c:	20012db0 	.word	0x20012db0
 8019410:	20012dae 	.word	0x20012dae

08019414 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8019414:	b510      	push	{r4, lr}
 8019416:	4a1f      	ldr	r2, [pc, #124]	; (8019494 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8019418:	880b      	ldrh	r3, [r1, #0]
 801941a:	8812      	ldrh	r2, [r2, #0]
 801941c:	4293      	cmp	r3, r2
 801941e:	d213      	bcs.n	8019448 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8019420:	4a1d      	ldr	r2, [pc, #116]	; (8019498 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8019422:	6812      	ldr	r2, [r2, #0]
 8019424:	2114      	movs	r1, #20
 8019426:	fb01 2303 	mla	r3, r1, r3, r2
 801942a:	8a1a      	ldrh	r2, [r3, #16]
 801942c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8019430:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8019434:	8a5b      	ldrh	r3, [r3, #18]
 8019436:	8004      	strh	r4, [r0, #0]
 8019438:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801943c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8019440:	8041      	strh	r1, [r0, #2]
 8019442:	8082      	strh	r2, [r0, #4]
 8019444:	80c3      	strh	r3, [r0, #6]
 8019446:	e00e      	b.n	8019466 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8019448:	4914      	ldr	r1, [pc, #80]	; (801949c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801944a:	8809      	ldrh	r1, [r1, #0]
 801944c:	4411      	add	r1, r2
 801944e:	428b      	cmp	r3, r1
 8019450:	da0a      	bge.n	8019468 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8019452:	1a9b      	subs	r3, r3, r2
 8019454:	4a12      	ldr	r2, [pc, #72]	; (80194a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8019456:	6812      	ldr	r2, [r2, #0]
 8019458:	210e      	movs	r1, #14
 801945a:	fb01 2303 	mla	r3, r1, r3, r2
 801945e:	681a      	ldr	r2, [r3, #0]
 8019460:	6002      	str	r2, [r0, #0]
 8019462:	685a      	ldr	r2, [r3, #4]
 8019464:	6042      	str	r2, [r0, #4]
 8019466:	bd10      	pop	{r4, pc}
 8019468:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801946c:	4293      	cmp	r3, r2
 801946e:	d10b      	bne.n	8019488 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8019470:	4b0c      	ldr	r3, [pc, #48]	; (80194a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8019472:	f9b3 1000 	ldrsh.w	r1, [r3]
 8019476:	4b0c      	ldr	r3, [pc, #48]	; (80194a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8019478:	8081      	strh	r1, [r0, #4]
 801947a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801947e:	80c2      	strh	r2, [r0, #6]
 8019480:	2300      	movs	r3, #0
 8019482:	8003      	strh	r3, [r0, #0]
 8019484:	8043      	strh	r3, [r0, #2]
 8019486:	e7ee      	b.n	8019466 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8019488:	2300      	movs	r3, #0
 801948a:	8003      	strh	r3, [r0, #0]
 801948c:	8043      	strh	r3, [r0, #2]
 801948e:	8083      	strh	r3, [r0, #4]
 8019490:	e7d8      	b.n	8019444 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8019492:	bf00      	nop
 8019494:	20012e3c 	.word	0x20012e3c
 8019498:	20012e44 	.word	0x20012e44
 801949c:	20012e40 	.word	0x20012e40
 80194a0:	20012e24 	.word	0x20012e24
 80194a4:	20012da8 	.word	0x20012da8
 80194a8:	20012daa 	.word	0x20012daa

080194ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80194ac:	4a17      	ldr	r2, [pc, #92]	; (801950c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80194ae:	8803      	ldrh	r3, [r0, #0]
 80194b0:	8812      	ldrh	r2, [r2, #0]
 80194b2:	4293      	cmp	r3, r2
 80194b4:	d213      	bcs.n	80194de <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80194b6:	4a16      	ldr	r2, [pc, #88]	; (8019510 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80194b8:	6812      	ldr	r2, [r2, #0]
 80194ba:	2114      	movs	r1, #20
 80194bc:	fb01 2303 	mla	r3, r1, r3, r2
 80194c0:	8a1a      	ldrh	r2, [r3, #16]
 80194c2:	8919      	ldrh	r1, [r3, #8]
 80194c4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80194c8:	428a      	cmp	r2, r1
 80194ca:	db1d      	blt.n	8019508 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80194cc:	8a58      	ldrh	r0, [r3, #18]
 80194ce:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80194d2:	895b      	ldrh	r3, [r3, #10]
 80194d4:	4298      	cmp	r0, r3
 80194d6:	bfac      	ite	ge
 80194d8:	2000      	movge	r0, #0
 80194da:	2001      	movlt	r0, #1
 80194dc:	4770      	bx	lr
 80194de:	490d      	ldr	r1, [pc, #52]	; (8019514 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80194e0:	8809      	ldrh	r1, [r1, #0]
 80194e2:	4411      	add	r1, r2
 80194e4:	428b      	cmp	r3, r1
 80194e6:	da0d      	bge.n	8019504 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80194e8:	1a9b      	subs	r3, r3, r2
 80194ea:	4a0b      	ldr	r2, [pc, #44]	; (8019518 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80194ec:	6812      	ldr	r2, [r2, #0]
 80194ee:	210e      	movs	r1, #14
 80194f0:	fb01 2303 	mla	r3, r1, r3, r2
 80194f4:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80194f8:	891a      	ldrh	r2, [r3, #8]
 80194fa:	4291      	cmp	r1, r2
 80194fc:	db04      	blt.n	8019508 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80194fe:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8019502:	e7e6      	b.n	80194d2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8019504:	2000      	movs	r0, #0
 8019506:	4770      	bx	lr
 8019508:	2001      	movs	r0, #1
 801950a:	4770      	bx	lr
 801950c:	20012e3c 	.word	0x20012e3c
 8019510:	20012e44 	.word	0x20012e44
 8019514:	20012e40 	.word	0x20012e40
 8019518:	20012e24 	.word	0x20012e24

0801951c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801951c:	4a12      	ldr	r2, [pc, #72]	; (8019568 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801951e:	8803      	ldrh	r3, [r0, #0]
 8019520:	8811      	ldrh	r1, [r2, #0]
 8019522:	428b      	cmp	r3, r1
 8019524:	d20b      	bcs.n	801953e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8019526:	4a11      	ldr	r2, [pc, #68]	; (801956c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8019528:	6812      	ldr	r2, [r2, #0]
 801952a:	b112      	cbz	r2, 8019532 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801952c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8019530:	b9c0      	cbnz	r0, 8019564 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8019532:	4a0f      	ldr	r2, [pc, #60]	; (8019570 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8019534:	6811      	ldr	r1, [r2, #0]
 8019536:	2214      	movs	r2, #20
 8019538:	4353      	muls	r3, r2
 801953a:	58c8      	ldr	r0, [r1, r3]
 801953c:	4770      	bx	lr
 801953e:	4a0d      	ldr	r2, [pc, #52]	; (8019574 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8019540:	8812      	ldrh	r2, [r2, #0]
 8019542:	440a      	add	r2, r1
 8019544:	4293      	cmp	r3, r2
 8019546:	da04      	bge.n	8019552 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8019548:	4a08      	ldr	r2, [pc, #32]	; (801956c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801954a:	6812      	ldr	r2, [r2, #0]
 801954c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8019550:	4770      	bx	lr
 8019552:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8019556:	4293      	cmp	r3, r2
 8019558:	d103      	bne.n	8019562 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801955a:	4b07      	ldr	r3, [pc, #28]	; (8019578 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801955c:	681b      	ldr	r3, [r3, #0]
 801955e:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8019560:	4770      	bx	lr
 8019562:	2000      	movs	r0, #0
 8019564:	4770      	bx	lr
 8019566:	bf00      	nop
 8019568:	20012e3c 	.word	0x20012e3c
 801956c:	20012e20 	.word	0x20012e20
 8019570:	20012e44 	.word	0x20012e44
 8019574:	20012e40 	.word	0x20012e40
 8019578:	20012db4 	.word	0x20012db4

0801957c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801957c:	4b24      	ldr	r3, [pc, #144]	; (8019610 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801957e:	8802      	ldrh	r2, [r0, #0]
 8019580:	8818      	ldrh	r0, [r3, #0]
 8019582:	4282      	cmp	r2, r0
 8019584:	d221      	bcs.n	80195ca <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8019586:	4b23      	ldr	r3, [pc, #140]	; (8019614 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8019588:	6819      	ldr	r1, [r3, #0]
 801958a:	2314      	movs	r3, #20
 801958c:	fb03 1302 	mla	r3, r3, r2, r1
 8019590:	6858      	ldr	r0, [r3, #4]
 8019592:	2800      	cmp	r0, #0
 8019594:	d03a      	beq.n	801960c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019596:	4920      	ldr	r1, [pc, #128]	; (8019618 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8019598:	6809      	ldr	r1, [r1, #0]
 801959a:	2900      	cmp	r1, #0
 801959c:	d036      	beq.n	801960c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801959e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80195a2:	2900      	cmp	r1, #0
 80195a4:	d032      	beq.n	801960c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80195a6:	891a      	ldrh	r2, [r3, #8]
 80195a8:	8958      	ldrh	r0, [r3, #10]
 80195aa:	4350      	muls	r0, r2
 80195ac:	7c5a      	ldrb	r2, [r3, #17]
 80195ae:	7cdb      	ldrb	r3, [r3, #19]
 80195b0:	0952      	lsrs	r2, r2, #5
 80195b2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80195b6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80195ba:	2b0b      	cmp	r3, #11
 80195bc:	bf18      	it	ne
 80195be:	0040      	lslne	r0, r0, #1
 80195c0:	3003      	adds	r0, #3
 80195c2:	f020 0003 	bic.w	r0, r0, #3
 80195c6:	4408      	add	r0, r1
 80195c8:	4770      	bx	lr
 80195ca:	4b14      	ldr	r3, [pc, #80]	; (801961c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80195cc:	881b      	ldrh	r3, [r3, #0]
 80195ce:	4403      	add	r3, r0
 80195d0:	429a      	cmp	r2, r3
 80195d2:	da1a      	bge.n	801960a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80195d4:	4b12      	ldr	r3, [pc, #72]	; (8019620 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80195d6:	681b      	ldr	r3, [r3, #0]
 80195d8:	1a10      	subs	r0, r2, r0
 80195da:	210e      	movs	r1, #14
 80195dc:	fb01 3000 	mla	r0, r1, r0, r3
 80195e0:	7b03      	ldrb	r3, [r0, #12]
 80195e2:	f003 031f 	and.w	r3, r3, #31
 80195e6:	2b0b      	cmp	r3, #11
 80195e8:	d10b      	bne.n	8019602 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80195ea:	8903      	ldrh	r3, [r0, #8]
 80195ec:	8940      	ldrh	r0, [r0, #10]
 80195ee:	4358      	muls	r0, r3
 80195f0:	4b09      	ldr	r3, [pc, #36]	; (8019618 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80195f2:	6819      	ldr	r1, [r3, #0]
 80195f4:	3003      	adds	r0, #3
 80195f6:	f020 0303 	bic.w	r3, r0, #3
 80195fa:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80195fe:	4418      	add	r0, r3
 8019600:	4770      	bx	lr
 8019602:	2b0d      	cmp	r3, #13
 8019604:	d101      	bne.n	801960a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8019606:	300d      	adds	r0, #13
 8019608:	4770      	bx	lr
 801960a:	2000      	movs	r0, #0
 801960c:	4770      	bx	lr
 801960e:	bf00      	nop
 8019610:	20012e3c 	.word	0x20012e3c
 8019614:	20012e44 	.word	0x20012e44
 8019618:	20012e20 	.word	0x20012e20
 801961c:	20012e40 	.word	0x20012e40
 8019620:	20012e24 	.word	0x20012e24

08019624 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8019624:	b510      	push	{r4, lr}
 8019626:	4a17      	ldr	r2, [pc, #92]	; (8019684 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8019628:	8803      	ldrh	r3, [r0, #0]
 801962a:	8812      	ldrh	r2, [r2, #0]
 801962c:	4293      	cmp	r3, r2
 801962e:	d20c      	bcs.n	801964a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8019630:	4a15      	ldr	r2, [pc, #84]	; (8019688 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8019632:	6812      	ldr	r2, [r2, #0]
 8019634:	2114      	movs	r1, #20
 8019636:	fb01 2303 	mla	r3, r1, r3, r2
 801963a:	7c58      	ldrb	r0, [r3, #17]
 801963c:	0942      	lsrs	r2, r0, #5
 801963e:	7cd8      	ldrb	r0, [r3, #19]
 8019640:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8019644:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8019648:	bd10      	pop	{r4, pc}
 801964a:	4910      	ldr	r1, [pc, #64]	; (801968c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801964c:	8809      	ldrh	r1, [r1, #0]
 801964e:	4411      	add	r1, r2
 8019650:	428b      	cmp	r3, r1
 8019652:	da09      	bge.n	8019668 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8019654:	1a9b      	subs	r3, r3, r2
 8019656:	4a0e      	ldr	r2, [pc, #56]	; (8019690 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8019658:	6812      	ldr	r2, [r2, #0]
 801965a:	210e      	movs	r1, #14
 801965c:	fb01 2303 	mla	r3, r1, r3, r2
 8019660:	7b18      	ldrb	r0, [r3, #12]
 8019662:	f000 001f 	and.w	r0, r0, #31
 8019666:	e7ef      	b.n	8019648 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8019668:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801966c:	4293      	cmp	r3, r2
 801966e:	d106      	bne.n	801967e <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8019670:	f7ea fff8 	bl	8004664 <_ZN8touchgfx3HAL3lcdEv>
 8019674:	6803      	ldr	r3, [r0, #0]
 8019676:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801967a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801967c:	4718      	bx	r3
 801967e:	2000      	movs	r0, #0
 8019680:	e7e2      	b.n	8019648 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8019682:	bf00      	nop
 8019684:	20012e3c 	.word	0x20012e3c
 8019688:	20012e44 	.word	0x20012e44
 801968c:	20012e40 	.word	0x20012e40
 8019690:	20012e24 	.word	0x20012e24

08019694 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8019694:	2010      	movs	r0, #16
 8019696:	4770      	bx	lr

08019698 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8019698:	2000      	movs	r0, #0
 801969a:	4770      	bx	lr

0801969c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801969c:	4b02      	ldr	r3, [pc, #8]	; (80196a8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801969e:	8818      	ldrh	r0, [r3, #0]
 80196a0:	0040      	lsls	r0, r0, #1
 80196a2:	b280      	uxth	r0, r0
 80196a4:	4770      	bx	lr
 80196a6:	bf00      	nop
 80196a8:	20012dae 	.word	0x20012dae

080196ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80196ac:	2bff      	cmp	r3, #255	; 0xff
 80196ae:	d050      	beq.n	8019752 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80196b0:	2a0b      	cmp	r2, #11
 80196b2:	d04a      	beq.n	801974a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80196b4:	d80e      	bhi.n	80196d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80196b6:	2a03      	cmp	r2, #3
 80196b8:	d03f      	beq.n	801973a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 80196ba:	d804      	bhi.n	80196c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80196bc:	2a01      	cmp	r2, #1
 80196be:	d03e      	beq.n	801973e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 80196c0:	d93f      	bls.n	8019742 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 80196c2:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80196c4:	4770      	bx	lr
 80196c6:	2a09      	cmp	r2, #9
 80196c8:	d03f      	beq.n	801974a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80196ca:	d83c      	bhi.n	8019746 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80196cc:	2a08      	cmp	r2, #8
 80196ce:	d03a      	beq.n	8019746 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80196d0:	2000      	movs	r0, #0
 80196d2:	4770      	bx	lr
 80196d4:	2a2f      	cmp	r2, #47	; 0x2f
 80196d6:	d024      	beq.n	8019722 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 80196d8:	d80d      	bhi.n	80196f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 80196da:	2a2d      	cmp	r2, #45	; 0x2d
 80196dc:	d014      	beq.n	8019708 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 80196de:	d826      	bhi.n	801972e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80196e0:	2a2c      	cmp	r2, #44	; 0x2c
 80196e2:	d1f5      	bne.n	80196d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80196e4:	684b      	ldr	r3, [r1, #4]
 80196e6:	781b      	ldrb	r3, [r3, #0]
 80196e8:	2b01      	cmp	r3, #1
 80196ea:	d018      	beq.n	801971e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80196ec:	d323      	bcc.n	8019736 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80196ee:	2b02      	cmp	r3, #2
 80196f0:	d1ee      	bne.n	80196d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80196f2:	6880      	ldr	r0, [r0, #8]
 80196f4:	4770      	bx	lr
 80196f6:	2a31      	cmp	r2, #49	; 0x31
 80196f8:	d004      	beq.n	8019704 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80196fa:	d328      	bcc.n	801974e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80196fc:	2a32      	cmp	r2, #50	; 0x32
 80196fe:	d026      	beq.n	801974e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8019700:	2a33      	cmp	r2, #51	; 0x33
 8019702:	d1e5      	bne.n	80196d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019704:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8019706:	4770      	bx	lr
 8019708:	684b      	ldr	r3, [r1, #4]
 801970a:	781b      	ldrb	r3, [r3, #0]
 801970c:	2b01      	cmp	r3, #1
 801970e:	d004      	beq.n	801971a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8019710:	d30b      	bcc.n	801972a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019712:	2b02      	cmp	r3, #2
 8019714:	d1dc      	bne.n	80196d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019716:	6900      	ldr	r0, [r0, #16]
 8019718:	4770      	bx	lr
 801971a:	6a00      	ldr	r0, [r0, #32]
 801971c:	4770      	bx	lr
 801971e:	6980      	ldr	r0, [r0, #24]
 8019720:	4770      	bx	lr
 8019722:	684b      	ldr	r3, [r1, #4]
 8019724:	781b      	ldrb	r3, [r3, #0]
 8019726:	2b00      	cmp	r3, #0
 8019728:	d1d2      	bne.n	80196d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801972a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801972c:	4770      	bx	lr
 801972e:	684b      	ldr	r3, [r1, #4]
 8019730:	781b      	ldrb	r3, [r3, #0]
 8019732:	2b00      	cmp	r3, #0
 8019734:	d1cc      	bne.n	80196d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019736:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8019738:	4770      	bx	lr
 801973a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801973c:	4770      	bx	lr
 801973e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8019740:	4770      	bx	lr
 8019742:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8019744:	4770      	bx	lr
 8019746:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8019748:	4770      	bx	lr
 801974a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801974c:	4770      	bx	lr
 801974e:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8019750:	4770      	bx	lr
 8019752:	2a0b      	cmp	r2, #11
 8019754:	d049      	beq.n	80197ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8019756:	d80e      	bhi.n	8019776 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8019758:	2a03      	cmp	r2, #3
 801975a:	d040      	beq.n	80197de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801975c:	d804      	bhi.n	8019768 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801975e:	2a01      	cmp	r2, #1
 8019760:	d03f      	beq.n	80197e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8019762:	d940      	bls.n	80197e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8019764:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8019766:	4770      	bx	lr
 8019768:	2a09      	cmp	r2, #9
 801976a:	d03e      	beq.n	80197ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801976c:	d801      	bhi.n	8019772 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801976e:	2a08      	cmp	r2, #8
 8019770:	d1ae      	bne.n	80196d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019772:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8019774:	4770      	bx	lr
 8019776:	2a2f      	cmp	r2, #47	; 0x2f
 8019778:	d024      	beq.n	80197c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801977a:	d80d      	bhi.n	8019798 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801977c:	2a2d      	cmp	r2, #45	; 0x2d
 801977e:	d014      	beq.n	80197aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8019780:	d826      	bhi.n	80197d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8019782:	2a2c      	cmp	r2, #44	; 0x2c
 8019784:	d1a4      	bne.n	80196d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019786:	684b      	ldr	r3, [r1, #4]
 8019788:	781b      	ldrb	r3, [r3, #0]
 801978a:	2b01      	cmp	r3, #1
 801978c:	d018      	beq.n	80197c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801978e:	d324      	bcc.n	80197da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8019790:	2b02      	cmp	r3, #2
 8019792:	d19d      	bne.n	80196d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019794:	68c0      	ldr	r0, [r0, #12]
 8019796:	4770      	bx	lr
 8019798:	2a31      	cmp	r2, #49	; 0x31
 801979a:	d004      	beq.n	80197a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801979c:	d327      	bcc.n	80197ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801979e:	2a32      	cmp	r2, #50	; 0x32
 80197a0:	d025      	beq.n	80197ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80197a2:	2a33      	cmp	r2, #51	; 0x33
 80197a4:	d194      	bne.n	80196d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80197a6:	6f40      	ldr	r0, [r0, #116]	; 0x74
 80197a8:	4770      	bx	lr
 80197aa:	684b      	ldr	r3, [r1, #4]
 80197ac:	781b      	ldrb	r3, [r3, #0]
 80197ae:	2b01      	cmp	r3, #1
 80197b0:	d004      	beq.n	80197bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80197b2:	d30b      	bcc.n	80197cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 80197b4:	2b02      	cmp	r3, #2
 80197b6:	d18b      	bne.n	80196d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80197b8:	6940      	ldr	r0, [r0, #20]
 80197ba:	4770      	bx	lr
 80197bc:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80197be:	4770      	bx	lr
 80197c0:	69c0      	ldr	r0, [r0, #28]
 80197c2:	4770      	bx	lr
 80197c4:	684b      	ldr	r3, [r1, #4]
 80197c6:	781b      	ldrb	r3, [r3, #0]
 80197c8:	2b00      	cmp	r3, #0
 80197ca:	d181      	bne.n	80196d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80197cc:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80197ce:	4770      	bx	lr
 80197d0:	684b      	ldr	r3, [r1, #4]
 80197d2:	781b      	ldrb	r3, [r3, #0]
 80197d4:	2b00      	cmp	r3, #0
 80197d6:	f47f af7b 	bne.w	80196d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80197da:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80197dc:	4770      	bx	lr
 80197de:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80197e0:	4770      	bx	lr
 80197e2:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80197e4:	4770      	bx	lr
 80197e6:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80197e8:	4770      	bx	lr
 80197ea:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80197ec:	4770      	bx	lr
 80197ee:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 80197f0:	4770      	bx	lr

080197f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80197f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197f6:	b087      	sub	sp, #28
 80197f8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80197fa:	9205      	str	r2, [sp, #20]
 80197fc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019800:	9202      	str	r2, [sp, #8]
 8019802:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019806:	9101      	str	r1, [sp, #4]
 8019808:	6841      	ldr	r1, [r0, #4]
 801980a:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801980e:	fb01 2404 	mla	r4, r1, r4, r2
 8019812:	6802      	ldr	r2, [r0, #0]
 8019814:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019818:	f8de 2000 	ldr.w	r2, [lr]
 801981c:	9203      	str	r2, [sp, #12]
 801981e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019822:	3204      	adds	r2, #4
 8019824:	9204      	str	r2, [sp, #16]
 8019826:	9a02      	ldr	r2, [sp, #8]
 8019828:	43d6      	mvns	r6, r2
 801982a:	b2f6      	uxtb	r6, r6
 801982c:	9a01      	ldr	r2, [sp, #4]
 801982e:	2a00      	cmp	r2, #0
 8019830:	dc03      	bgt.n	801983a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019832:	9a05      	ldr	r2, [sp, #20]
 8019834:	2a00      	cmp	r2, #0
 8019836:	f340 8129 	ble.w	8019a8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801983a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801983c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019840:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019844:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019848:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801984a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801984e:	2b00      	cmp	r3, #0
 8019850:	dd0e      	ble.n	8019870 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019852:	1408      	asrs	r0, r1, #16
 8019854:	d405      	bmi.n	8019862 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019856:	4560      	cmp	r0, ip
 8019858:	da03      	bge.n	8019862 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801985a:	1410      	asrs	r0, r2, #16
 801985c:	d401      	bmi.n	8019862 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801985e:	42b8      	cmp	r0, r7
 8019860:	db07      	blt.n	8019872 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019862:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019864:	4401      	add	r1, r0
 8019866:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019868:	3b01      	subs	r3, #1
 801986a:	4402      	add	r2, r0
 801986c:	3402      	adds	r4, #2
 801986e:	e7ee      	b.n	801984e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019870:	d071      	beq.n	8019956 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019872:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019874:	1e58      	subs	r0, r3, #1
 8019876:	fb05 1500 	mla	r5, r5, r0, r1
 801987a:	142d      	asrs	r5, r5, #16
 801987c:	d45f      	bmi.n	801993e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801987e:	4565      	cmp	r5, ip
 8019880:	da5d      	bge.n	801993e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019882:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019884:	fb05 2000 	mla	r0, r5, r0, r2
 8019888:	1400      	asrs	r0, r0, #16
 801988a:	d458      	bmi.n	801993e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801988c:	42b8      	cmp	r0, r7
 801988e:	da56      	bge.n	801993e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019890:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8019894:	4699      	mov	r9, r3
 8019896:	46a2      	mov	sl, r4
 8019898:	f1b9 0f00 	cmp.w	r9, #0
 801989c:	dd57      	ble.n	801994e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801989e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80198a2:	9803      	ldr	r0, [sp, #12]
 80198a4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80198a8:	140d      	asrs	r5, r1, #16
 80198aa:	fb07 000c 	mla	r0, r7, ip, r0
 80198ae:	f109 39ff 	add.w	r9, r9, #4294967295
 80198b2:	5d40      	ldrb	r0, [r0, r5]
 80198b4:	9d04      	ldr	r5, [sp, #16]
 80198b6:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80198ba:	f8ba 5000 	ldrh.w	r5, [sl]
 80198be:	122f      	asrs	r7, r5, #8
 80198c0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80198c4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80198c8:	fb17 f706 	smulbb	r7, r7, r6
 80198cc:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80198d0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80198d4:	00ed      	lsls	r5, r5, #3
 80198d6:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80198da:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80198de:	10c7      	asrs	r7, r0, #3
 80198e0:	b2ed      	uxtb	r5, r5
 80198e2:	00c0      	lsls	r0, r0, #3
 80198e4:	fb18 f806 	smulbb	r8, r8, r6
 80198e8:	fb15 f506 	smulbb	r5, r5, r6
 80198ec:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80198f0:	b2c0      	uxtb	r0, r0
 80198f2:	fa1f fc8c 	uxth.w	ip, ip
 80198f6:	fb07 870b 	mla	r7, r7, fp, r8
 80198fa:	fb00 500b 	mla	r0, r0, fp, r5
 80198fe:	b280      	uxth	r0, r0
 8019900:	b2bf      	uxth	r7, r7
 8019902:	f10c 0501 	add.w	r5, ip, #1
 8019906:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801990a:	f107 0801 	add.w	r8, r7, #1
 801990e:	1c45      	adds	r5, r0, #1
 8019910:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019914:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019918:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801991a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801991e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019922:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019926:	ea45 0c0c 	orr.w	ip, r5, ip
 801992a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801992e:	4401      	add	r1, r0
 8019930:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019932:	ea4c 0c08 	orr.w	ip, ip, r8
 8019936:	f82a cb02 	strh.w	ip, [sl], #2
 801993a:	4402      	add	r2, r0
 801993c:	e7ac      	b.n	8019898 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801993e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8019942:	f04f 0800 	mov.w	r8, #0
 8019946:	eb03 0008 	add.w	r0, r3, r8
 801994a:	2800      	cmp	r0, #0
 801994c:	dc41      	bgt.n	80199d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801994e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019952:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019956:	9b01      	ldr	r3, [sp, #4]
 8019958:	2b00      	cmp	r3, #0
 801995a:	f340 8097 	ble.w	8019a8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801995e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019962:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019966:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801996a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801996c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019970:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019974:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019978:	eef0 6a62 	vmov.f32	s13, s5
 801997c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019980:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019984:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019988:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801998c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019990:	eef0 6a43 	vmov.f32	s13, s6
 8019994:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019998:	ee12 2a90 	vmov	r2, s5
 801999c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80199a0:	fb92 f3f3 	sdiv	r3, r2, r3
 80199a4:	ee13 2a10 	vmov	r2, s6
 80199a8:	9313      	str	r3, [sp, #76]	; 0x4c
 80199aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80199ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80199b0:	9314      	str	r3, [sp, #80]	; 0x50
 80199b2:	9b01      	ldr	r3, [sp, #4]
 80199b4:	9a05      	ldr	r2, [sp, #20]
 80199b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80199ba:	3b01      	subs	r3, #1
 80199bc:	9301      	str	r3, [sp, #4]
 80199be:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80199c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80199c4:	eeb0 3a67 	vmov.f32	s6, s15
 80199c8:	bf08      	it	eq
 80199ca:	4613      	moveq	r3, r2
 80199cc:	eef0 2a47 	vmov.f32	s5, s14
 80199d0:	e72c      	b.n	801982c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80199d2:	140f      	asrs	r7, r1, #16
 80199d4:	d453      	bmi.n	8019a7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80199d6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80199da:	42bd      	cmp	r5, r7
 80199dc:	dd4f      	ble.n	8019a7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80199de:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80199e2:	d44c      	bmi.n	8019a7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80199e4:	f8de 000c 	ldr.w	r0, [lr, #12]
 80199e8:	4560      	cmp	r0, ip
 80199ea:	dd48      	ble.n	8019a7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80199ec:	9803      	ldr	r0, [sp, #12]
 80199ee:	b22d      	sxth	r5, r5
 80199f0:	fb0c 0505 	mla	r5, ip, r5, r0
 80199f4:	5de8      	ldrb	r0, [r5, r7]
 80199f6:	9d04      	ldr	r5, [sp, #16]
 80199f8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80199fc:	f06f 0501 	mvn.w	r5, #1
 8019a00:	fb05 fb08 	mul.w	fp, r5, r8
 8019a04:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019a08:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019a0c:	122f      	asrs	r7, r5, #8
 8019a0e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019a12:	fb17 f706 	smulbb	r7, r7, r6
 8019a16:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019a1a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019a1e:	00ed      	lsls	r5, r5, #3
 8019a20:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019a24:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019a28:	10c7      	asrs	r7, r0, #3
 8019a2a:	b2ed      	uxtb	r5, r5
 8019a2c:	00c0      	lsls	r0, r0, #3
 8019a2e:	fb19 f906 	smulbb	r9, r9, r6
 8019a32:	fb15 f506 	smulbb	r5, r5, r6
 8019a36:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019a3a:	b2c0      	uxtb	r0, r0
 8019a3c:	fa1f fc8c 	uxth.w	ip, ip
 8019a40:	fb07 970a 	mla	r7, r7, sl, r9
 8019a44:	fb00 500a 	mla	r0, r0, sl, r5
 8019a48:	b2bf      	uxth	r7, r7
 8019a4a:	b280      	uxth	r0, r0
 8019a4c:	f10c 0501 	add.w	r5, ip, #1
 8019a50:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019a54:	f107 0901 	add.w	r9, r7, #1
 8019a58:	1c45      	adds	r5, r0, #1
 8019a5a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019a5e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019a62:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019a66:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019a6a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019a6e:	ea45 0c0c 	orr.w	ip, r5, ip
 8019a72:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019a76:	ea4c 0c09 	orr.w	ip, ip, r9
 8019a7a:	f824 c00b 	strh.w	ip, [r4, fp]
 8019a7e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019a80:	4401      	add	r1, r0
 8019a82:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019a84:	f108 38ff 	add.w	r8, r8, #4294967295
 8019a88:	4402      	add	r2, r0
 8019a8a:	e75c      	b.n	8019946 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8019a8c:	b007      	add	sp, #28
 8019a8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019a92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019a92:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a96:	b085      	sub	sp, #20
 8019a98:	4693      	mov	fp, r2
 8019a9a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019a9c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019a9e:	6870      	ldr	r0, [r6, #4]
 8019aa0:	9100      	str	r1, [sp, #0]
 8019aa2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019aa6:	fb00 2404 	mla	r4, r0, r4, r2
 8019aaa:	6832      	ldr	r2, [r6, #0]
 8019aac:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019ab0:	682a      	ldr	r2, [r5, #0]
 8019ab2:	9201      	str	r2, [sp, #4]
 8019ab4:	686a      	ldr	r2, [r5, #4]
 8019ab6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019aba:	3204      	adds	r2, #4
 8019abc:	9202      	str	r2, [sp, #8]
 8019abe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019ac2:	9a00      	ldr	r2, [sp, #0]
 8019ac4:	2a00      	cmp	r2, #0
 8019ac6:	dc03      	bgt.n	8019ad0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019ac8:	f1bb 0f00 	cmp.w	fp, #0
 8019acc:	f340 80a0 	ble.w	8019c10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019ad0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019ad2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019ad6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019ada:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019ade:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019ae0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019ae4:	2b00      	cmp	r3, #0
 8019ae6:	dd0c      	ble.n	8019b02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019ae8:	1406      	asrs	r6, r0, #16
 8019aea:	d405      	bmi.n	8019af8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019aec:	454e      	cmp	r6, r9
 8019aee:	da03      	bge.n	8019af8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019af0:	1416      	asrs	r6, r2, #16
 8019af2:	d401      	bmi.n	8019af8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019af4:	4546      	cmp	r6, r8
 8019af6:	db05      	blt.n	8019b04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019af8:	4470      	add	r0, lr
 8019afa:	4462      	add	r2, ip
 8019afc:	3b01      	subs	r3, #1
 8019afe:	3402      	adds	r4, #2
 8019b00:	e7f0      	b.n	8019ae4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019b02:	d00f      	beq.n	8019b24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019b04:	1e5e      	subs	r6, r3, #1
 8019b06:	fb0e 0706 	mla	r7, lr, r6, r0
 8019b0a:	143f      	asrs	r7, r7, #16
 8019b0c:	d541      	bpl.n	8019b92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8019b0e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019b12:	4698      	mov	r8, r3
 8019b14:	9603      	str	r6, [sp, #12]
 8019b16:	f1b8 0f00 	cmp.w	r8, #0
 8019b1a:	dc59      	bgt.n	8019bd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019b1c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019b20:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019b24:	9b00      	ldr	r3, [sp, #0]
 8019b26:	2b00      	cmp	r3, #0
 8019b28:	dd72      	ble.n	8019c10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019b2a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019b2e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019b32:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019b36:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019b38:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019b3c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019b40:	eeb0 6a62 	vmov.f32	s12, s5
 8019b44:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019b48:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b4c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019b50:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019b54:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019b58:	eeb0 6a43 	vmov.f32	s12, s6
 8019b5c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019b60:	ee12 2a90 	vmov	r2, s5
 8019b64:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019b68:	fb92 fef3 	sdiv	lr, r2, r3
 8019b6c:	ee13 2a10 	vmov	r2, s6
 8019b70:	fb92 fcf3 	sdiv	ip, r2, r3
 8019b74:	9b00      	ldr	r3, [sp, #0]
 8019b76:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b7a:	3b01      	subs	r3, #1
 8019b7c:	9300      	str	r3, [sp, #0]
 8019b7e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019b82:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019b84:	eeb0 3a67 	vmov.f32	s6, s15
 8019b88:	bf08      	it	eq
 8019b8a:	465b      	moveq	r3, fp
 8019b8c:	eef0 2a47 	vmov.f32	s5, s14
 8019b90:	e797      	b.n	8019ac2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019b92:	454f      	cmp	r7, r9
 8019b94:	dabb      	bge.n	8019b0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019b96:	fb0c 2606 	mla	r6, ip, r6, r2
 8019b9a:	1436      	asrs	r6, r6, #16
 8019b9c:	d4b7      	bmi.n	8019b0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019b9e:	4546      	cmp	r6, r8
 8019ba0:	dab5      	bge.n	8019b0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019ba2:	461e      	mov	r6, r3
 8019ba4:	46a0      	mov	r8, r4
 8019ba6:	2e00      	cmp	r6, #0
 8019ba8:	ddb8      	ble.n	8019b1c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019baa:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019bae:	9901      	ldr	r1, [sp, #4]
 8019bb0:	1417      	asrs	r7, r2, #16
 8019bb2:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019bb6:	fb0a 1707 	mla	r7, sl, r7, r1
 8019bba:	9902      	ldr	r1, [sp, #8]
 8019bbc:	f817 7009 	ldrb.w	r7, [r7, r9]
 8019bc0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019bc4:	f828 7b02 	strh.w	r7, [r8], #2
 8019bc8:	4470      	add	r0, lr
 8019bca:	4462      	add	r2, ip
 8019bcc:	3e01      	subs	r6, #1
 8019bce:	e7ea      	b.n	8019ba6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8019bd0:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019bd4:	d417      	bmi.n	8019c06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019bd6:	68ae      	ldr	r6, [r5, #8]
 8019bd8:	454e      	cmp	r6, r9
 8019bda:	dd14      	ble.n	8019c06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019bdc:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019be0:	d411      	bmi.n	8019c06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019be2:	68ef      	ldr	r7, [r5, #12]
 8019be4:	4557      	cmp	r7, sl
 8019be6:	dd0e      	ble.n	8019c06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019be8:	9f01      	ldr	r7, [sp, #4]
 8019bea:	b236      	sxth	r6, r6
 8019bec:	fb0a 7606 	mla	r6, sl, r6, r7
 8019bf0:	9f02      	ldr	r7, [sp, #8]
 8019bf2:	f816 6009 	ldrb.w	r6, [r6, r9]
 8019bf6:	f06f 0101 	mvn.w	r1, #1
 8019bfa:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8019bfe:	fb01 f608 	mul.w	r6, r1, r8
 8019c02:	9903      	ldr	r1, [sp, #12]
 8019c04:	538f      	strh	r7, [r1, r6]
 8019c06:	4470      	add	r0, lr
 8019c08:	4462      	add	r2, ip
 8019c0a:	f108 38ff 	add.w	r8, r8, #4294967295
 8019c0e:	e782      	b.n	8019b16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019c10:	b005      	add	sp, #20
 8019c12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019c16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019c16:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c1a:	b087      	sub	sp, #28
 8019c1c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019c1e:	9205      	str	r2, [sp, #20]
 8019c20:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019c24:	9203      	str	r2, [sp, #12]
 8019c26:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8019c2a:	9102      	str	r1, [sp, #8]
 8019c2c:	6861      	ldr	r1, [r4, #4]
 8019c2e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8019c32:	fb01 2000 	mla	r0, r1, r0, r2
 8019c36:	6822      	ldr	r2, [r4, #0]
 8019c38:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8019c3c:	9200      	str	r2, [sp, #0]
 8019c3e:	f8dc 2000 	ldr.w	r2, [ip]
 8019c42:	9204      	str	r2, [sp, #16]
 8019c44:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019c48:	3204      	adds	r2, #4
 8019c4a:	9201      	str	r2, [sp, #4]
 8019c4c:	9a03      	ldr	r2, [sp, #12]
 8019c4e:	43d5      	mvns	r5, r2
 8019c50:	b2ed      	uxtb	r5, r5
 8019c52:	9a02      	ldr	r2, [sp, #8]
 8019c54:	2a00      	cmp	r2, #0
 8019c56:	dc03      	bgt.n	8019c60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019c58:	9a05      	ldr	r2, [sp, #20]
 8019c5a:	2a00      	cmp	r2, #0
 8019c5c:	f340 812c 	ble.w	8019eb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019c60:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019c62:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8019c66:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8019c6a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019c6e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019c70:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019c74:	2b00      	cmp	r3, #0
 8019c76:	dd10      	ble.n	8019c9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019c78:	140c      	asrs	r4, r1, #16
 8019c7a:	d405      	bmi.n	8019c88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019c7c:	4574      	cmp	r4, lr
 8019c7e:	da03      	bge.n	8019c88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019c80:	1414      	asrs	r4, r2, #16
 8019c82:	d401      	bmi.n	8019c88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019c84:	42bc      	cmp	r4, r7
 8019c86:	db09      	blt.n	8019c9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019c88:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019c8a:	9800      	ldr	r0, [sp, #0]
 8019c8c:	4421      	add	r1, r4
 8019c8e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019c90:	3002      	adds	r0, #2
 8019c92:	4422      	add	r2, r4
 8019c94:	3b01      	subs	r3, #1
 8019c96:	9000      	str	r0, [sp, #0]
 8019c98:	e7ec      	b.n	8019c74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019c9a:	d071      	beq.n	8019d80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8019c9c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019c9e:	1e5c      	subs	r4, r3, #1
 8019ca0:	fb06 1604 	mla	r6, r6, r4, r1
 8019ca4:	1436      	asrs	r6, r6, #16
 8019ca6:	d45d      	bmi.n	8019d64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019ca8:	4576      	cmp	r6, lr
 8019caa:	da5b      	bge.n	8019d64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019cac:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8019cae:	fb06 2404 	mla	r4, r6, r4, r2
 8019cb2:	1424      	asrs	r4, r4, #16
 8019cb4:	d456      	bmi.n	8019d64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019cb6:	42bc      	cmp	r4, r7
 8019cb8:	da54      	bge.n	8019d64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019cba:	f8dd 9000 	ldr.w	r9, [sp]
 8019cbe:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8019cc2:	4698      	mov	r8, r3
 8019cc4:	f1b8 0f00 	cmp.w	r8, #0
 8019cc8:	dd54      	ble.n	8019d74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019cca:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8019cce:	9804      	ldr	r0, [sp, #16]
 8019cd0:	1414      	asrs	r4, r2, #16
 8019cd2:	fb07 0404 	mla	r4, r7, r4, r0
 8019cd6:	140e      	asrs	r6, r1, #16
 8019cd8:	9801      	ldr	r0, [sp, #4]
 8019cda:	f814 e006 	ldrb.w	lr, [r4, r6]
 8019cde:	f8b9 4000 	ldrh.w	r4, [r9]
 8019ce2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019ce6:	eb00 0b0e 	add.w	fp, r0, lr
 8019cea:	1227      	asrs	r7, r4, #8
 8019cec:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019cf0:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019cf4:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8019cf8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019cfa:	fb16 f60a 	smulbb	r6, r6, sl
 8019cfe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019d02:	fb07 6705 	mla	r7, r7, r5, r6
 8019d06:	10e6      	asrs	r6, r4, #3
 8019d08:	00e4      	lsls	r4, r4, #3
 8019d0a:	b2e4      	uxtb	r4, r4
 8019d0c:	fb1b fb0a 	smulbb	fp, fp, sl
 8019d10:	fb14 f405 	smulbb	r4, r4, r5
 8019d14:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019d18:	b2bf      	uxth	r7, r7
 8019d1a:	fb06 b605 	mla	r6, r6, r5, fp
 8019d1e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8019d22:	b2b6      	uxth	r6, r6
 8019d24:	fa1f fe8e 	uxth.w	lr, lr
 8019d28:	1c7c      	adds	r4, r7, #1
 8019d2a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8019d2e:	f106 0b01 	add.w	fp, r6, #1
 8019d32:	f10e 0401 	add.w	r4, lr, #1
 8019d36:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8019d3a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8019d3e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019d42:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8019d46:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019d4a:	4327      	orrs	r7, r4
 8019d4c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019d50:	4401      	add	r1, r0
 8019d52:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019d54:	ea47 070b 	orr.w	r7, r7, fp
 8019d58:	f829 7b02 	strh.w	r7, [r9], #2
 8019d5c:	4402      	add	r2, r0
 8019d5e:	f108 38ff 	add.w	r8, r8, #4294967295
 8019d62:	e7af      	b.n	8019cc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019d64:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8019d68:	f04f 0e00 	mov.w	lr, #0
 8019d6c:	eb03 040e 	add.w	r4, r3, lr
 8019d70:	2c00      	cmp	r4, #0
 8019d72:	dc43      	bgt.n	8019dfc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019d74:	9a00      	ldr	r2, [sp, #0]
 8019d76:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019d7a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019d7e:	9300      	str	r3, [sp, #0]
 8019d80:	9b02      	ldr	r3, [sp, #8]
 8019d82:	2b00      	cmp	r3, #0
 8019d84:	f340 8098 	ble.w	8019eb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019d88:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019d8c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019d90:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019d94:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019d96:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019d9a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019d9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019da2:	eef0 6a62 	vmov.f32	s13, s5
 8019da6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019daa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019dae:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019db2:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8019db6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019dba:	eef0 6a43 	vmov.f32	s13, s6
 8019dbe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019dc2:	ee12 2a90 	vmov	r2, s5
 8019dc6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019dca:	fb92 f3f3 	sdiv	r3, r2, r3
 8019dce:	ee13 2a10 	vmov	r2, s6
 8019dd2:	9313      	str	r3, [sp, #76]	; 0x4c
 8019dd4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019dd6:	fb92 f3f3 	sdiv	r3, r2, r3
 8019dda:	9314      	str	r3, [sp, #80]	; 0x50
 8019ddc:	9b02      	ldr	r3, [sp, #8]
 8019dde:	9a05      	ldr	r2, [sp, #20]
 8019de0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019de4:	3b01      	subs	r3, #1
 8019de6:	9302      	str	r3, [sp, #8]
 8019de8:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019dec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019dee:	eeb0 3a67 	vmov.f32	s6, s15
 8019df2:	bf08      	it	eq
 8019df4:	4613      	moveq	r3, r2
 8019df6:	eef0 2a47 	vmov.f32	s5, s14
 8019dfa:	e72a      	b.n	8019c52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019dfc:	140f      	asrs	r7, r1, #16
 8019dfe:	d454      	bmi.n	8019eaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019e00:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8019e04:	42be      	cmp	r6, r7
 8019e06:	dd50      	ble.n	8019eaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019e08:	ea5f 4822 	movs.w	r8, r2, asr #16
 8019e0c:	d44d      	bmi.n	8019eaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019e0e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8019e12:	4544      	cmp	r4, r8
 8019e14:	dd49      	ble.n	8019eaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019e16:	9c04      	ldr	r4, [sp, #16]
 8019e18:	b236      	sxth	r6, r6
 8019e1a:	fb08 4606 	mla	r6, r8, r6, r4
 8019e1e:	f06f 0001 	mvn.w	r0, #1
 8019e22:	f816 8007 	ldrb.w	r8, [r6, r7]
 8019e26:	9c01      	ldr	r4, [sp, #4]
 8019e28:	fb00 fa0e 	mul.w	sl, r0, lr
 8019e2c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8019e30:	9800      	ldr	r0, [sp, #0]
 8019e32:	eb04 0b08 	add.w	fp, r4, r8
 8019e36:	f830 400a 	ldrh.w	r4, [r0, sl]
 8019e3a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019e3e:	9801      	ldr	r0, [sp, #4]
 8019e40:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019e44:	f810 8008 	ldrb.w	r8, [r0, r8]
 8019e48:	9800      	ldr	r0, [sp, #0]
 8019e4a:	1227      	asrs	r7, r4, #8
 8019e4c:	fb16 f609 	smulbb	r6, r6, r9
 8019e50:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019e54:	fb07 6705 	mla	r7, r7, r5, r6
 8019e58:	10e6      	asrs	r6, r4, #3
 8019e5a:	00e4      	lsls	r4, r4, #3
 8019e5c:	b2e4      	uxtb	r4, r4
 8019e5e:	fb1b fb09 	smulbb	fp, fp, r9
 8019e62:	fb14 f405 	smulbb	r4, r4, r5
 8019e66:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019e6a:	b2bf      	uxth	r7, r7
 8019e6c:	fb06 b605 	mla	r6, r6, r5, fp
 8019e70:	fb08 4809 	mla	r8, r8, r9, r4
 8019e74:	b2b6      	uxth	r6, r6
 8019e76:	fa1f f888 	uxth.w	r8, r8
 8019e7a:	1c7c      	adds	r4, r7, #1
 8019e7c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8019e80:	f106 0b01 	add.w	fp, r6, #1
 8019e84:	f108 0401 	add.w	r4, r8, #1
 8019e88:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8019e8c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8019e90:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019e94:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8019e98:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019e9c:	4327      	orrs	r7, r4
 8019e9e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019ea2:	ea47 070b 	orr.w	r7, r7, fp
 8019ea6:	f820 700a 	strh.w	r7, [r0, sl]
 8019eaa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019eac:	4401      	add	r1, r0
 8019eae:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019eb0:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019eb4:	4402      	add	r2, r0
 8019eb6:	e759      	b.n	8019d6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019eb8:	b007      	add	sp, #28
 8019eba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019ec0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019ec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ec4:	b085      	sub	sp, #20
 8019ec6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019eca:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019ecc:	9203      	str	r2, [sp, #12]
 8019ece:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019ed2:	6870      	ldr	r0, [r6, #4]
 8019ed4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019ed6:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8019eda:	686f      	ldr	r7, [r5, #4]
 8019edc:	9101      	str	r1, [sp, #4]
 8019ede:	fb00 2404 	mla	r4, r0, r4, r2
 8019ee2:	6832      	ldr	r2, [r6, #0]
 8019ee4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019ee8:	682a      	ldr	r2, [r5, #0]
 8019eea:	9202      	str	r2, [sp, #8]
 8019eec:	3704      	adds	r7, #4
 8019eee:	9a01      	ldr	r2, [sp, #4]
 8019ef0:	2a00      	cmp	r2, #0
 8019ef2:	dc03      	bgt.n	8019efc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019ef4:	9a03      	ldr	r2, [sp, #12]
 8019ef6:	2a00      	cmp	r2, #0
 8019ef8:	f340 80cc 	ble.w	801a094 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8019efc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019efe:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019f02:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019f06:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019f0a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019f0c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019f10:	2b00      	cmp	r3, #0
 8019f12:	dd0d      	ble.n	8019f30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019f14:	1406      	asrs	r6, r0, #16
 8019f16:	d405      	bmi.n	8019f24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019f18:	454e      	cmp	r6, r9
 8019f1a:	da03      	bge.n	8019f24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019f1c:	1416      	asrs	r6, r2, #16
 8019f1e:	d401      	bmi.n	8019f24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019f20:	4546      	cmp	r6, r8
 8019f22:	db06      	blt.n	8019f32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019f24:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8019f26:	4460      	add	r0, ip
 8019f28:	4432      	add	r2, r6
 8019f2a:	3b01      	subs	r3, #1
 8019f2c:	3402      	adds	r4, #2
 8019f2e:	e7ef      	b.n	8019f10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8019f30:	d00f      	beq.n	8019f52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019f32:	1e5e      	subs	r6, r3, #1
 8019f34:	fb0c 0e06 	mla	lr, ip, r6, r0
 8019f38:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8019f3c:	d543      	bpl.n	8019fc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8019f3e:	4698      	mov	r8, r3
 8019f40:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8019f44:	f1b8 0f00 	cmp.w	r8, #0
 8019f48:	dc71      	bgt.n	801a02e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8019f4a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019f4e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019f52:	9b01      	ldr	r3, [sp, #4]
 8019f54:	2b00      	cmp	r3, #0
 8019f56:	f340 809d 	ble.w	801a094 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8019f5a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019f5e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019f62:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019f66:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019f68:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019f6c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019f70:	eeb0 6a62 	vmov.f32	s12, s5
 8019f74:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019f78:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019f7c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019f80:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019f84:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019f88:	eeb0 6a43 	vmov.f32	s12, s6
 8019f8c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019f90:	ee12 2a90 	vmov	r2, s5
 8019f94:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019f98:	fb92 fcf3 	sdiv	ip, r2, r3
 8019f9c:	ee13 2a10 	vmov	r2, s6
 8019fa0:	fb92 f3f3 	sdiv	r3, r2, r3
 8019fa4:	9312      	str	r3, [sp, #72]	; 0x48
 8019fa6:	9b01      	ldr	r3, [sp, #4]
 8019fa8:	9a03      	ldr	r2, [sp, #12]
 8019faa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019fae:	3b01      	subs	r3, #1
 8019fb0:	9301      	str	r3, [sp, #4]
 8019fb2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019fb6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019fb8:	eeb0 3a67 	vmov.f32	s6, s15
 8019fbc:	bf08      	it	eq
 8019fbe:	4613      	moveq	r3, r2
 8019fc0:	eef0 2a47 	vmov.f32	s5, s14
 8019fc4:	e793      	b.n	8019eee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8019fc6:	45ce      	cmp	lr, r9
 8019fc8:	dab9      	bge.n	8019f3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019fca:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019fcc:	fb01 2606 	mla	r6, r1, r6, r2
 8019fd0:	1436      	asrs	r6, r6, #16
 8019fd2:	d4b4      	bmi.n	8019f3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019fd4:	4546      	cmp	r6, r8
 8019fd6:	dab2      	bge.n	8019f3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019fd8:	4698      	mov	r8, r3
 8019fda:	46a2      	mov	sl, r4
 8019fdc:	f1b8 0f00 	cmp.w	r8, #0
 8019fe0:	ddb3      	ble.n	8019f4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019fe2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019fe6:	9902      	ldr	r1, [sp, #8]
 8019fe8:	1416      	asrs	r6, r2, #16
 8019fea:	fb09 1606 	mla	r6, r9, r6, r1
 8019fee:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8019ff2:	492a      	ldr	r1, [pc, #168]	; (801a09c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8019ff4:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8019ff8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019ffc:	eb07 0b0e 	add.w	fp, r7, lr
 801a000:	4460      	add	r0, ip
 801a002:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801a006:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801a00a:	00f6      	lsls	r6, r6, #3
 801a00c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801a010:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a014:	ea49 0606 	orr.w	r6, r9, r6
 801a018:	f817 900e 	ldrb.w	r9, [r7, lr]
 801a01c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a01e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801a022:	f82a 6b02 	strh.w	r6, [sl], #2
 801a026:	440a      	add	r2, r1
 801a028:	f108 38ff 	add.w	r8, r8, #4294967295
 801a02c:	e7d6      	b.n	8019fdc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a02e:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a032:	d429      	bmi.n	801a088 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a034:	68ae      	ldr	r6, [r5, #8]
 801a036:	454e      	cmp	r6, r9
 801a038:	dd26      	ble.n	801a088 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a03a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801a03e:	d423      	bmi.n	801a088 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a040:	68e9      	ldr	r1, [r5, #12]
 801a042:	4559      	cmp	r1, fp
 801a044:	dd20      	ble.n	801a088 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a046:	9902      	ldr	r1, [sp, #8]
 801a048:	fa0f fe86 	sxth.w	lr, r6
 801a04c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801a050:	f06f 0101 	mvn.w	r1, #1
 801a054:	f81e e009 	ldrb.w	lr, [lr, r9]
 801a058:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a05c:	eb07 060e 	add.w	r6, r7, lr
 801a060:	fb01 f908 	mul.w	r9, r1, r8
 801a064:	f896 b002 	ldrb.w	fp, [r6, #2]
 801a068:	7876      	ldrb	r6, [r6, #1]
 801a06a:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801a06e:	00f6      	lsls	r6, r6, #3
 801a070:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801a074:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a078:	ea4b 0606 	orr.w	r6, fp, r6
 801a07c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801a080:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801a084:	f82a 6009 	strh.w	r6, [sl, r9]
 801a088:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a08a:	4460      	add	r0, ip
 801a08c:	440a      	add	r2, r1
 801a08e:	f108 38ff 	add.w	r8, r8, #4294967295
 801a092:	e757      	b.n	8019f44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a094:	b005      	add	sp, #20
 801a096:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a09a:	bf00      	nop
 801a09c:	fffff800 	.word	0xfffff800

0801a0a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a0a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a0a4:	b087      	sub	sp, #28
 801a0a6:	468b      	mov	fp, r1
 801a0a8:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a0aa:	9204      	str	r2, [sp, #16]
 801a0ac:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a0b0:	9205      	str	r2, [sp, #20]
 801a0b2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a0b6:	6841      	ldr	r1, [r0, #4]
 801a0b8:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a0bc:	fb01 2404 	mla	r4, r1, r4, r2
 801a0c0:	6802      	ldr	r2, [r0, #0]
 801a0c2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a0c6:	f8dc 2000 	ldr.w	r2, [ip]
 801a0ca:	9201      	str	r2, [sp, #4]
 801a0cc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a0d0:	3204      	adds	r2, #4
 801a0d2:	9202      	str	r2, [sp, #8]
 801a0d4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a0d8:	f1bb 0f00 	cmp.w	fp, #0
 801a0dc:	dc03      	bgt.n	801a0e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801a0de:	9a04      	ldr	r2, [sp, #16]
 801a0e0:	2a00      	cmp	r2, #0
 801a0e2:	f340 8138 	ble.w	801a356 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a0e6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a0e8:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a0ec:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801a0f0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a0f4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a0f6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a0fa:	2b00      	cmp	r3, #0
 801a0fc:	dd0e      	ble.n	801a11c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a0fe:	1402      	asrs	r2, r0, #16
 801a100:	d405      	bmi.n	801a10e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a102:	42ba      	cmp	r2, r7
 801a104:	da03      	bge.n	801a10e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a106:	140a      	asrs	r2, r1, #16
 801a108:	d401      	bmi.n	801a10e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a10a:	42b2      	cmp	r2, r6
 801a10c:	db07      	blt.n	801a11e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a10e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a110:	4410      	add	r0, r2
 801a112:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a114:	3b01      	subs	r3, #1
 801a116:	4411      	add	r1, r2
 801a118:	3402      	adds	r4, #2
 801a11a:	e7ee      	b.n	801a0fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a11c:	d019      	beq.n	801a152 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a11e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a120:	1e5a      	subs	r2, r3, #1
 801a122:	fb05 0502 	mla	r5, r5, r2, r0
 801a126:	142d      	asrs	r5, r5, #16
 801a128:	d409      	bmi.n	801a13e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a12a:	42bd      	cmp	r5, r7
 801a12c:	da07      	bge.n	801a13e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a12e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a130:	fb05 1202 	mla	r2, r5, r2, r1
 801a134:	1412      	asrs	r2, r2, #16
 801a136:	d402      	bmi.n	801a13e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a138:	42b2      	cmp	r2, r6
 801a13a:	f2c0 80ac 	blt.w	801a296 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801a13e:	f04f 0e00 	mov.w	lr, #0
 801a142:	eb03 020e 	add.w	r2, r3, lr
 801a146:	2a00      	cmp	r2, #0
 801a148:	dc3e      	bgt.n	801a1c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a14a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a14e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a152:	f1bb 0f00 	cmp.w	fp, #0
 801a156:	f340 80fe 	ble.w	801a356 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a15a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a15e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a162:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a166:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a168:	f1bb 0b01 	subs.w	fp, fp, #1
 801a16c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a170:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a174:	eeb0 6a62 	vmov.f32	s12, s5
 801a178:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a17c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a180:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a184:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a188:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a18c:	eeb0 6a43 	vmov.f32	s12, s6
 801a190:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a194:	ee12 2a90 	vmov	r2, s5
 801a198:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a19c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1a0:	ee13 2a10 	vmov	r2, s6
 801a1a4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a1a8:	9313      	str	r3, [sp, #76]	; 0x4c
 801a1aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a1ac:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1b0:	9a04      	ldr	r2, [sp, #16]
 801a1b2:	9314      	str	r3, [sp, #80]	; 0x50
 801a1b4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a1b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a1ba:	eeb0 3a67 	vmov.f32	s6, s15
 801a1be:	bf08      	it	eq
 801a1c0:	4613      	moveq	r3, r2
 801a1c2:	eef0 2a47 	vmov.f32	s5, s14
 801a1c6:	e787      	b.n	801a0d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a1c8:	1406      	asrs	r6, r0, #16
 801a1ca:	d45d      	bmi.n	801a288 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a1cc:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801a1d0:	42b5      	cmp	r5, r6
 801a1d2:	dd59      	ble.n	801a288 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a1d4:	140f      	asrs	r7, r1, #16
 801a1d6:	d457      	bmi.n	801a288 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a1d8:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801a1dc:	42ba      	cmp	r2, r7
 801a1de:	dd53      	ble.n	801a288 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a1e0:	9a01      	ldr	r2, [sp, #4]
 801a1e2:	b22d      	sxth	r5, r5
 801a1e4:	fb07 2505 	mla	r5, r7, r5, r2
 801a1e8:	5daa      	ldrb	r2, [r5, r6]
 801a1ea:	9d02      	ldr	r5, [sp, #8]
 801a1ec:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a1f0:	0e2e      	lsrs	r6, r5, #24
 801a1f2:	d049      	beq.n	801a288 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a1f4:	f06f 0201 	mvn.w	r2, #1
 801a1f8:	fb02 f20e 	mul.w	r2, r2, lr
 801a1fc:	9203      	str	r2, [sp, #12]
 801a1fe:	f834 8002 	ldrh.w	r8, [r4, r2]
 801a202:	9a05      	ldr	r2, [sp, #20]
 801a204:	4356      	muls	r6, r2
 801a206:	1c72      	adds	r2, r6, #1
 801a208:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a20c:	1212      	asrs	r2, r2, #8
 801a20e:	fa1f f982 	uxth.w	r9, r2
 801a212:	ea4f 2728 	mov.w	r7, r8, asr #8
 801a216:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a21a:	43d2      	mvns	r2, r2
 801a21c:	b2d2      	uxtb	r2, r2
 801a21e:	fb16 f609 	smulbb	r6, r6, r9
 801a222:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a226:	fb07 6702 	mla	r7, r7, r2, r6
 801a22a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a22e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a232:	b2ed      	uxtb	r5, r5
 801a234:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a238:	fa5f f888 	uxtb.w	r8, r8
 801a23c:	fb15 f509 	smulbb	r5, r5, r9
 801a240:	fb08 5502 	mla	r5, r8, r2, r5
 801a244:	b2bf      	uxth	r7, r7
 801a246:	fb1a fa09 	smulbb	sl, sl, r9
 801a24a:	b2ad      	uxth	r5, r5
 801a24c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a250:	fb06 a602 	mla	r6, r6, r2, sl
 801a254:	1c7a      	adds	r2, r7, #1
 801a256:	f105 0a01 	add.w	sl, r5, #1
 801a25a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a25e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a262:	b2b6      	uxth	r6, r6
 801a264:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a268:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a26c:	ea4a 0707 	orr.w	r7, sl, r7
 801a270:	f106 0a01 	add.w	sl, r6, #1
 801a274:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a278:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a27c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a280:	9a03      	ldr	r2, [sp, #12]
 801a282:	ea47 070a 	orr.w	r7, r7, sl
 801a286:	52a7      	strh	r7, [r4, r2]
 801a288:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a28a:	4410      	add	r0, r2
 801a28c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a28e:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a292:	4411      	add	r1, r2
 801a294:	e755      	b.n	801a142 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a296:	f04f 0800 	mov.w	r8, #0
 801a29a:	eba3 0208 	sub.w	r2, r3, r8
 801a29e:	2a00      	cmp	r2, #0
 801a2a0:	f77f af53 	ble.w	801a14a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a2a4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801a2a8:	9f01      	ldr	r7, [sp, #4]
 801a2aa:	140a      	asrs	r2, r1, #16
 801a2ac:	1405      	asrs	r5, r0, #16
 801a2ae:	fb06 7202 	mla	r2, r6, r2, r7
 801a2b2:	5d52      	ldrb	r2, [r2, r5]
 801a2b4:	9d02      	ldr	r5, [sp, #8]
 801a2b6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a2ba:	0e2e      	lsrs	r6, r5, #24
 801a2bc:	d044      	beq.n	801a348 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a2be:	9a05      	ldr	r2, [sp, #20]
 801a2c0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a2c4:	4356      	muls	r6, r2
 801a2c6:	1c72      	adds	r2, r6, #1
 801a2c8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a2cc:	1212      	asrs	r2, r2, #8
 801a2ce:	fa1f f982 	uxth.w	r9, r2
 801a2d2:	ea4f 272e 	mov.w	r7, lr, asr #8
 801a2d6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a2da:	43d2      	mvns	r2, r2
 801a2dc:	b2d2      	uxtb	r2, r2
 801a2de:	fb16 f609 	smulbb	r6, r6, r9
 801a2e2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a2e6:	fb07 6702 	mla	r7, r7, r2, r6
 801a2ea:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a2ee:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a2f2:	b2ed      	uxtb	r5, r5
 801a2f4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a2f8:	fa5f fe8e 	uxtb.w	lr, lr
 801a2fc:	fb15 f509 	smulbb	r5, r5, r9
 801a300:	fb0e 5502 	mla	r5, lr, r2, r5
 801a304:	b2bf      	uxth	r7, r7
 801a306:	fb1a fa09 	smulbb	sl, sl, r9
 801a30a:	b2ad      	uxth	r5, r5
 801a30c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a310:	fb06 a602 	mla	r6, r6, r2, sl
 801a314:	1c7a      	adds	r2, r7, #1
 801a316:	f105 0a01 	add.w	sl, r5, #1
 801a31a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a31e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a322:	b2b6      	uxth	r6, r6
 801a324:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a328:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a32c:	ea4a 0707 	orr.w	r7, sl, r7
 801a330:	f106 0a01 	add.w	sl, r6, #1
 801a334:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a338:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a33c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a340:	ea47 070a 	orr.w	r7, r7, sl
 801a344:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a348:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a34a:	4410      	add	r0, r2
 801a34c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a34e:	f108 0801 	add.w	r8, r8, #1
 801a352:	4411      	add	r1, r2
 801a354:	e7a1      	b.n	801a29a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a356:	b007      	add	sp, #28
 801a358:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a35c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a35c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a360:	b085      	sub	sp, #20
 801a362:	468b      	mov	fp, r1
 801a364:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a366:	9203      	str	r2, [sp, #12]
 801a368:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a36c:	6841      	ldr	r1, [r0, #4]
 801a36e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801a372:	fb01 2404 	mla	r4, r1, r4, r2
 801a376:	6802      	ldr	r2, [r0, #0]
 801a378:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a37c:	f8de 2000 	ldr.w	r2, [lr]
 801a380:	9200      	str	r2, [sp, #0]
 801a382:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a386:	3204      	adds	r2, #4
 801a388:	9201      	str	r2, [sp, #4]
 801a38a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a38e:	f1bb 0f00 	cmp.w	fp, #0
 801a392:	dc03      	bgt.n	801a39c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a394:	9a03      	ldr	r2, [sp, #12]
 801a396:	2a00      	cmp	r2, #0
 801a398:	f340 8153 	ble.w	801a642 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a39c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a39e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a3a2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a3a6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a3aa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a3ac:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a3b0:	2b00      	cmp	r3, #0
 801a3b2:	dd0e      	ble.n	801a3d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a3b4:	1408      	asrs	r0, r1, #16
 801a3b6:	d405      	bmi.n	801a3c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a3b8:	42b8      	cmp	r0, r7
 801a3ba:	da03      	bge.n	801a3c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a3bc:	1410      	asrs	r0, r2, #16
 801a3be:	d401      	bmi.n	801a3c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a3c0:	42b0      	cmp	r0, r6
 801a3c2:	db07      	blt.n	801a3d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a3c4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a3c6:	4401      	add	r1, r0
 801a3c8:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a3ca:	3b01      	subs	r3, #1
 801a3cc:	4402      	add	r2, r0
 801a3ce:	3402      	adds	r4, #2
 801a3d0:	e7ee      	b.n	801a3b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a3d2:	d017      	beq.n	801a404 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a3d4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a3d6:	1e58      	subs	r0, r3, #1
 801a3d8:	fb05 1500 	mla	r5, r5, r0, r1
 801a3dc:	142d      	asrs	r5, r5, #16
 801a3de:	d409      	bmi.n	801a3f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a3e0:	42bd      	cmp	r5, r7
 801a3e2:	da07      	bge.n	801a3f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a3e4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a3e6:	fb05 2000 	mla	r0, r5, r0, r2
 801a3ea:	1400      	asrs	r0, r0, #16
 801a3ec:	d402      	bmi.n	801a3f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a3ee:	42b0      	cmp	r0, r6
 801a3f0:	f2c0 80bc 	blt.w	801a56c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801a3f4:	2600      	movs	r6, #0
 801a3f6:	1998      	adds	r0, r3, r6
 801a3f8:	2800      	cmp	r0, #0
 801a3fa:	dc3e      	bgt.n	801a47a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801a3fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a400:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a404:	f1bb 0f00 	cmp.w	fp, #0
 801a408:	f340 811b 	ble.w	801a642 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a40c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a410:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a414:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a418:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a41a:	f1bb 0b01 	subs.w	fp, fp, #1
 801a41e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a422:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a426:	eeb0 6a62 	vmov.f32	s12, s5
 801a42a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a42e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a432:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a436:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a43a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a43e:	eeb0 6a43 	vmov.f32	s12, s6
 801a442:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a446:	ee12 2a90 	vmov	r2, s5
 801a44a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a44e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a452:	ee13 2a10 	vmov	r2, s6
 801a456:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a45a:	9311      	str	r3, [sp, #68]	; 0x44
 801a45c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a45e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a462:	9a03      	ldr	r2, [sp, #12]
 801a464:	9312      	str	r3, [sp, #72]	; 0x48
 801a466:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a46a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a46c:	eeb0 3a67 	vmov.f32	s6, s15
 801a470:	bf08      	it	eq
 801a472:	4613      	moveq	r3, r2
 801a474:	eef0 2a47 	vmov.f32	s5, s14
 801a478:	e789      	b.n	801a38e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a47a:	140f      	asrs	r7, r1, #16
 801a47c:	d426      	bmi.n	801a4cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a47e:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a482:	42bd      	cmp	r5, r7
 801a484:	dd22      	ble.n	801a4cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a486:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a48a:	d41f      	bmi.n	801a4cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a48c:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a490:	4560      	cmp	r0, ip
 801a492:	dd1b      	ble.n	801a4cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a494:	9800      	ldr	r0, [sp, #0]
 801a496:	b22d      	sxth	r5, r5
 801a498:	fb0c 0505 	mla	r5, ip, r5, r0
 801a49c:	5de8      	ldrb	r0, [r5, r7]
 801a49e:	9d01      	ldr	r5, [sp, #4]
 801a4a0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801a4a4:	0e07      	lsrs	r7, r0, #24
 801a4a6:	2fff      	cmp	r7, #255	; 0xff
 801a4a8:	d116      	bne.n	801a4d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a4aa:	f06f 0501 	mvn.w	r5, #1
 801a4ae:	fb05 f706 	mul.w	r7, r5, r6
 801a4b2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a4b6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a4ba:	0945      	lsrs	r5, r0, #5
 801a4bc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a4c0:	ea4c 0505 	orr.w	r5, ip, r5
 801a4c4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a4c8:	4305      	orrs	r5, r0
 801a4ca:	53e5      	strh	r5, [r4, r7]
 801a4cc:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a4ce:	4401      	add	r1, r0
 801a4d0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a4d2:	3e01      	subs	r6, #1
 801a4d4:	4402      	add	r2, r0
 801a4d6:	e78e      	b.n	801a3f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a4d8:	b2fd      	uxtb	r5, r7
 801a4da:	2f00      	cmp	r7, #0
 801a4dc:	d0f6      	beq.n	801a4cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a4de:	f06f 0701 	mvn.w	r7, #1
 801a4e2:	4377      	muls	r7, r6
 801a4e4:	fa1f f985 	uxth.w	r9, r5
 801a4e8:	f834 8007 	ldrh.w	r8, [r4, r7]
 801a4ec:	9702      	str	r7, [sp, #8]
 801a4ee:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a4f2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a4f6:	43ed      	mvns	r5, r5
 801a4f8:	b2ed      	uxtb	r5, r5
 801a4fa:	fb17 f709 	smulbb	r7, r7, r9
 801a4fe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a502:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a506:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a50a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801a50e:	b2c0      	uxtb	r0, r0
 801a510:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a514:	fa5f f888 	uxtb.w	r8, r8
 801a518:	fb10 f009 	smulbb	r0, r0, r9
 801a51c:	fb08 0005 	mla	r0, r8, r5, r0
 801a520:	b280      	uxth	r0, r0
 801a522:	fa1f fc8c 	uxth.w	ip, ip
 801a526:	fb1a fa09 	smulbb	sl, sl, r9
 801a52a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a52e:	fb07 a705 	mla	r7, r7, r5, sl
 801a532:	f100 0a01 	add.w	sl, r0, #1
 801a536:	f10c 0501 	add.w	r5, ip, #1
 801a53a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a53e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a542:	b2bf      	uxth	r7, r7
 801a544:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a548:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a54c:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a550:	f107 0a01 	add.w	sl, r7, #1
 801a554:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a558:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a55c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a560:	9802      	ldr	r0, [sp, #8]
 801a562:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a566:	f824 c000 	strh.w	ip, [r4, r0]
 801a56a:	e7af      	b.n	801a4cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a56c:	f04f 0800 	mov.w	r8, #0
 801a570:	eba3 0008 	sub.w	r0, r3, r8
 801a574:	2800      	cmp	r0, #0
 801a576:	f77f af41 	ble.w	801a3fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a57a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a57e:	9f00      	ldr	r7, [sp, #0]
 801a580:	1410      	asrs	r0, r2, #16
 801a582:	140d      	asrs	r5, r1, #16
 801a584:	fb06 7000 	mla	r0, r6, r0, r7
 801a588:	5d40      	ldrb	r0, [r0, r5]
 801a58a:	9d01      	ldr	r5, [sp, #4]
 801a58c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a590:	0e2e      	lsrs	r6, r5, #24
 801a592:	2eff      	cmp	r6, #255	; 0xff
 801a594:	d112      	bne.n	801a5bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801a596:	482c      	ldr	r0, [pc, #176]	; (801a648 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801a598:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a59c:	0968      	lsrs	r0, r5, #5
 801a59e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a5a2:	4330      	orrs	r0, r6
 801a5a4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a5a8:	4328      	orrs	r0, r5
 801a5aa:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801a5ae:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a5b0:	4401      	add	r1, r0
 801a5b2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a5b4:	f108 0801 	add.w	r8, r8, #1
 801a5b8:	4402      	add	r2, r0
 801a5ba:	e7d9      	b.n	801a570 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a5bc:	b2f0      	uxtb	r0, r6
 801a5be:	2e00      	cmp	r6, #0
 801a5c0:	d0f5      	beq.n	801a5ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a5c2:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801a5c6:	fa1f f980 	uxth.w	r9, r0
 801a5ca:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a5ce:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a5d2:	43c0      	mvns	r0, r0
 801a5d4:	b2c0      	uxtb	r0, r0
 801a5d6:	fb16 f609 	smulbb	r6, r6, r9
 801a5da:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a5de:	fb07 6700 	mla	r7, r7, r0, r6
 801a5e2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a5e6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a5ea:	b2ed      	uxtb	r5, r5
 801a5ec:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a5f0:	fa5f fc8c 	uxtb.w	ip, ip
 801a5f4:	fb15 f509 	smulbb	r5, r5, r9
 801a5f8:	fb0c 5500 	mla	r5, ip, r0, r5
 801a5fc:	b2bf      	uxth	r7, r7
 801a5fe:	fb1a fa09 	smulbb	sl, sl, r9
 801a602:	b2ad      	uxth	r5, r5
 801a604:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a608:	fb06 a600 	mla	r6, r6, r0, sl
 801a60c:	1c78      	adds	r0, r7, #1
 801a60e:	f105 0a01 	add.w	sl, r5, #1
 801a612:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a616:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a61a:	b2b6      	uxth	r6, r6
 801a61c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a620:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a624:	ea4a 0707 	orr.w	r7, sl, r7
 801a628:	f106 0a01 	add.w	sl, r6, #1
 801a62c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a630:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a634:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a638:	ea47 070a 	orr.w	r7, r7, sl
 801a63c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a640:	e7b5      	b.n	801a5ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a642:	b005      	add	sp, #20
 801a644:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a648:	fffff800 	.word	0xfffff800

0801a64c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a64c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a650:	b087      	sub	sp, #28
 801a652:	468b      	mov	fp, r1
 801a654:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a656:	9204      	str	r2, [sp, #16]
 801a658:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a65c:	9205      	str	r2, [sp, #20]
 801a65e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801a662:	6861      	ldr	r1, [r4, #4]
 801a664:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801a668:	fb01 2000 	mla	r0, r1, r0, r2
 801a66c:	6822      	ldr	r2, [r4, #0]
 801a66e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801a672:	f8de 2000 	ldr.w	r2, [lr]
 801a676:	9201      	str	r2, [sp, #4]
 801a678:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a67c:	9202      	str	r2, [sp, #8]
 801a67e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a682:	f1bb 0f00 	cmp.w	fp, #0
 801a686:	dc03      	bgt.n	801a690 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801a688:	9a04      	ldr	r2, [sp, #16]
 801a68a:	2a00      	cmp	r2, #0
 801a68c:	f340 8142 	ble.w	801a914 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801a690:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a692:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a696:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a69a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a69e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a6a0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a6a4:	2b00      	cmp	r3, #0
 801a6a6:	dd0e      	ble.n	801a6c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a6a8:	140c      	asrs	r4, r1, #16
 801a6aa:	d405      	bmi.n	801a6b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a6ac:	42bc      	cmp	r4, r7
 801a6ae:	da03      	bge.n	801a6b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a6b0:	1414      	asrs	r4, r2, #16
 801a6b2:	d401      	bmi.n	801a6b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a6b4:	42b4      	cmp	r4, r6
 801a6b6:	db07      	blt.n	801a6c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a6b8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a6ba:	4421      	add	r1, r4
 801a6bc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a6be:	3b01      	subs	r3, #1
 801a6c0:	4422      	add	r2, r4
 801a6c2:	3002      	adds	r0, #2
 801a6c4:	e7ee      	b.n	801a6a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a6c6:	d019      	beq.n	801a6fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a6c8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a6ca:	1e5c      	subs	r4, r3, #1
 801a6cc:	fb05 1504 	mla	r5, r5, r4, r1
 801a6d0:	142d      	asrs	r5, r5, #16
 801a6d2:	d409      	bmi.n	801a6e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a6d4:	42bd      	cmp	r5, r7
 801a6d6:	da07      	bge.n	801a6e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a6d8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a6da:	fb05 2404 	mla	r4, r5, r4, r2
 801a6de:	1424      	asrs	r4, r4, #16
 801a6e0:	d402      	bmi.n	801a6e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a6e2:	42b4      	cmp	r4, r6
 801a6e4:	f2c0 80b1 	blt.w	801a84a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801a6e8:	f04f 0800 	mov.w	r8, #0
 801a6ec:	eb03 0408 	add.w	r4, r3, r8
 801a6f0:	2c00      	cmp	r4, #0
 801a6f2:	dc3e      	bgt.n	801a772 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801a6f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a6f8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a6fc:	f1bb 0f00 	cmp.w	fp, #0
 801a700:	f340 8108 	ble.w	801a914 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801a704:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a708:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a70c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a710:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a712:	f1bb 0b01 	subs.w	fp, fp, #1
 801a716:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a71a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a71e:	eeb0 6a62 	vmov.f32	s12, s5
 801a722:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a726:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a72a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a72e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a732:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a736:	eeb0 6a43 	vmov.f32	s12, s6
 801a73a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a73e:	ee12 2a90 	vmov	r2, s5
 801a742:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a746:	fb92 f3f3 	sdiv	r3, r2, r3
 801a74a:	ee13 2a10 	vmov	r2, s6
 801a74e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a752:	9313      	str	r3, [sp, #76]	; 0x4c
 801a754:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a756:	fb92 f3f3 	sdiv	r3, r2, r3
 801a75a:	9a04      	ldr	r2, [sp, #16]
 801a75c:	9314      	str	r3, [sp, #80]	; 0x50
 801a75e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a762:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a764:	eeb0 3a67 	vmov.f32	s6, s15
 801a768:	bf08      	it	eq
 801a76a:	4613      	moveq	r3, r2
 801a76c:	eef0 2a47 	vmov.f32	s5, s14
 801a770:	e787      	b.n	801a682 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801a772:	140e      	asrs	r6, r1, #16
 801a774:	d462      	bmi.n	801a83c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a776:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a77a:	42b5      	cmp	r5, r6
 801a77c:	dd5e      	ble.n	801a83c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a77e:	1417      	asrs	r7, r2, #16
 801a780:	d45c      	bmi.n	801a83c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a782:	f8de 400c 	ldr.w	r4, [lr, #12]
 801a786:	42bc      	cmp	r4, r7
 801a788:	dd58      	ble.n	801a83c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a78a:	b22d      	sxth	r5, r5
 801a78c:	fb07 6505 	mla	r5, r7, r5, r6
 801a790:	9c02      	ldr	r4, [sp, #8]
 801a792:	5d66      	ldrb	r6, [r4, r5]
 801a794:	2e00      	cmp	r6, #0
 801a796:	d051      	beq.n	801a83c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a798:	9c01      	ldr	r4, [sp, #4]
 801a79a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801a79e:	f06f 0401 	mvn.w	r4, #1
 801a7a2:	fb04 f408 	mul.w	r4, r4, r8
 801a7a6:	9403      	str	r4, [sp, #12]
 801a7a8:	5b05      	ldrh	r5, [r0, r4]
 801a7aa:	9c05      	ldr	r4, [sp, #20]
 801a7ac:	4366      	muls	r6, r4
 801a7ae:	1c74      	adds	r4, r6, #1
 801a7b0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801a7b4:	1224      	asrs	r4, r4, #8
 801a7b6:	b2a7      	uxth	r7, r4
 801a7b8:	122e      	asrs	r6, r5, #8
 801a7ba:	43e4      	mvns	r4, r4
 801a7bc:	b2e4      	uxtb	r4, r4
 801a7be:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801a7c2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a7c6:	fb16 f604 	smulbb	r6, r6, r4
 801a7ca:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a7ce:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a7d2:	00ed      	lsls	r5, r5, #3
 801a7d4:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a7d8:	b2ed      	uxtb	r5, r5
 801a7da:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801a7de:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801a7e2:	fb15 f504 	smulbb	r5, r5, r4
 801a7e6:	fa5f f989 	uxtb.w	r9, r9
 801a7ea:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a7ee:	fb09 5507 	mla	r5, r9, r7, r5
 801a7f2:	fb1a fa04 	smulbb	sl, sl, r4
 801a7f6:	fa1f fc8c 	uxth.w	ip, ip
 801a7fa:	b2ad      	uxth	r5, r5
 801a7fc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a800:	fb06 a607 	mla	r6, r6, r7, sl
 801a804:	f10c 0401 	add.w	r4, ip, #1
 801a808:	f105 0a01 	add.w	sl, r5, #1
 801a80c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a810:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a814:	b2b6      	uxth	r6, r6
 801a816:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a81a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a81e:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a822:	f106 0a01 	add.w	sl, r6, #1
 801a826:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a82a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a82e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a832:	9c03      	ldr	r4, [sp, #12]
 801a834:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a838:	f820 c004 	strh.w	ip, [r0, r4]
 801a83c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a83e:	4421      	add	r1, r4
 801a840:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a842:	f108 38ff 	add.w	r8, r8, #4294967295
 801a846:	4422      	add	r2, r4
 801a848:	e750      	b.n	801a6ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a84a:	f04f 0900 	mov.w	r9, #0
 801a84e:	eba3 0409 	sub.w	r4, r3, r9
 801a852:	2c00      	cmp	r4, #0
 801a854:	f77f af4e 	ble.w	801a6f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a858:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a85c:	140d      	asrs	r5, r1, #16
 801a85e:	1414      	asrs	r4, r2, #16
 801a860:	fb06 5404 	mla	r4, r6, r4, r5
 801a864:	9d02      	ldr	r5, [sp, #8]
 801a866:	5d2e      	ldrb	r6, [r5, r4]
 801a868:	2e00      	cmp	r6, #0
 801a86a:	d04c      	beq.n	801a906 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801a86c:	9d01      	ldr	r5, [sp, #4]
 801a86e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801a872:	9c05      	ldr	r4, [sp, #20]
 801a874:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801a878:	4366      	muls	r6, r4
 801a87a:	1c74      	adds	r4, r6, #1
 801a87c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801a880:	1224      	asrs	r4, r4, #8
 801a882:	b2a7      	uxth	r7, r4
 801a884:	122e      	asrs	r6, r5, #8
 801a886:	43e4      	mvns	r4, r4
 801a888:	b2e4      	uxtb	r4, r4
 801a88a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a88e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a892:	fb16 f604 	smulbb	r6, r6, r4
 801a896:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a89a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a89e:	00ed      	lsls	r5, r5, #3
 801a8a0:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a8a4:	b2ed      	uxtb	r5, r5
 801a8a6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a8aa:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a8ae:	fb15 f504 	smulbb	r5, r5, r4
 801a8b2:	fa5f f888 	uxtb.w	r8, r8
 801a8b6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a8ba:	fb08 5507 	mla	r5, r8, r7, r5
 801a8be:	fb1a fa04 	smulbb	sl, sl, r4
 801a8c2:	fa1f fc8c 	uxth.w	ip, ip
 801a8c6:	b2ad      	uxth	r5, r5
 801a8c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a8cc:	fb06 a607 	mla	r6, r6, r7, sl
 801a8d0:	f10c 0401 	add.w	r4, ip, #1
 801a8d4:	f105 0a01 	add.w	sl, r5, #1
 801a8d8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a8dc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a8e0:	b2b6      	uxth	r6, r6
 801a8e2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a8e6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a8ea:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a8ee:	f106 0a01 	add.w	sl, r6, #1
 801a8f2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a8f6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a8fa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a8fe:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a902:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801a906:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a908:	4421      	add	r1, r4
 801a90a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a90c:	f109 0901 	add.w	r9, r9, #1
 801a910:	4422      	add	r2, r4
 801a912:	e79c      	b.n	801a84e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801a914:	b007      	add	sp, #28
 801a916:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a91a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a91a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a91e:	b085      	sub	sp, #20
 801a920:	468b      	mov	fp, r1
 801a922:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a924:	9203      	str	r2, [sp, #12]
 801a926:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801a92a:	6861      	ldr	r1, [r4, #4]
 801a92c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801a930:	fb01 2000 	mla	r0, r1, r0, r2
 801a934:	6822      	ldr	r2, [r4, #0]
 801a936:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801a93a:	f8d8 2000 	ldr.w	r2, [r8]
 801a93e:	9200      	str	r2, [sp, #0]
 801a940:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801a944:	9201      	str	r2, [sp, #4]
 801a946:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a94a:	f1bb 0f00 	cmp.w	fp, #0
 801a94e:	dc03      	bgt.n	801a958 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a950:	9a03      	ldr	r2, [sp, #12]
 801a952:	2a00      	cmp	r2, #0
 801a954:	f340 8146 	ble.w	801abe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801a958:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a95a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801a95e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801a962:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a966:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a968:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a96c:	2b00      	cmp	r3, #0
 801a96e:	dd0e      	ble.n	801a98e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a970:	140c      	asrs	r4, r1, #16
 801a972:	d405      	bmi.n	801a980 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a974:	42bc      	cmp	r4, r7
 801a976:	da03      	bge.n	801a980 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a978:	1414      	asrs	r4, r2, #16
 801a97a:	d401      	bmi.n	801a980 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a97c:	42b4      	cmp	r4, r6
 801a97e:	db07      	blt.n	801a990 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a980:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a982:	4421      	add	r1, r4
 801a984:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a986:	3b01      	subs	r3, #1
 801a988:	4422      	add	r2, r4
 801a98a:	3002      	adds	r0, #2
 801a98c:	e7ee      	b.n	801a96c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a98e:	d017      	beq.n	801a9c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a990:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a992:	1e5c      	subs	r4, r3, #1
 801a994:	fb05 1504 	mla	r5, r5, r4, r1
 801a998:	142d      	asrs	r5, r5, #16
 801a99a:	d409      	bmi.n	801a9b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a99c:	42bd      	cmp	r5, r7
 801a99e:	da07      	bge.n	801a9b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a9a0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a9a2:	fb05 2404 	mla	r4, r5, r4, r2
 801a9a6:	1424      	asrs	r4, r4, #16
 801a9a8:	d402      	bmi.n	801a9b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a9aa:	42b4      	cmp	r4, r6
 801a9ac:	f2c0 80b3 	blt.w	801ab16 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801a9b0:	2600      	movs	r6, #0
 801a9b2:	199c      	adds	r4, r3, r6
 801a9b4:	2c00      	cmp	r4, #0
 801a9b6:	dc3e      	bgt.n	801aa36 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a9b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a9bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a9c0:	f1bb 0f00 	cmp.w	fp, #0
 801a9c4:	f340 810e 	ble.w	801abe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801a9c8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a9cc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a9d0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a9d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a9d6:	f1bb 0b01 	subs.w	fp, fp, #1
 801a9da:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a9de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a9e2:	eeb0 6a62 	vmov.f32	s12, s5
 801a9e6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a9ea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a9ee:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a9f2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a9f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a9fa:	eeb0 6a43 	vmov.f32	s12, s6
 801a9fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aa02:	ee12 2a90 	vmov	r2, s5
 801aa06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aa0a:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa0e:	ee13 2a10 	vmov	r2, s6
 801aa12:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa16:	9311      	str	r3, [sp, #68]	; 0x44
 801aa18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aa1a:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa1e:	9a03      	ldr	r2, [sp, #12]
 801aa20:	9312      	str	r3, [sp, #72]	; 0x48
 801aa22:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801aa26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aa28:	eeb0 3a67 	vmov.f32	s6, s15
 801aa2c:	bf08      	it	eq
 801aa2e:	4613      	moveq	r3, r2
 801aa30:	eef0 2a47 	vmov.f32	s5, s14
 801aa34:	e789      	b.n	801a94a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801aa36:	140f      	asrs	r7, r1, #16
 801aa38:	d418      	bmi.n	801aa6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aa3a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801aa3e:	42bd      	cmp	r5, r7
 801aa40:	dd14      	ble.n	801aa6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aa42:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801aa46:	d411      	bmi.n	801aa6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aa48:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801aa4c:	4564      	cmp	r4, ip
 801aa4e:	dd0d      	ble.n	801aa6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aa50:	b22d      	sxth	r5, r5
 801aa52:	fb0c 7505 	mla	r5, ip, r5, r7
 801aa56:	9c01      	ldr	r4, [sp, #4]
 801aa58:	5d64      	ldrb	r4, [r4, r5]
 801aa5a:	2cff      	cmp	r4, #255	; 0xff
 801aa5c:	d10c      	bne.n	801aa78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801aa5e:	9c00      	ldr	r4, [sp, #0]
 801aa60:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801aa64:	f06f 0401 	mvn.w	r4, #1
 801aa68:	4374      	muls	r4, r6
 801aa6a:	5305      	strh	r5, [r0, r4]
 801aa6c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801aa6e:	4421      	add	r1, r4
 801aa70:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801aa72:	3e01      	subs	r6, #1
 801aa74:	4422      	add	r2, r4
 801aa76:	e79c      	b.n	801a9b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801aa78:	2c00      	cmp	r4, #0
 801aa7a:	d0f7      	beq.n	801aa6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aa7c:	9f00      	ldr	r7, [sp, #0]
 801aa7e:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801aa82:	f06f 0501 	mvn.w	r5, #1
 801aa86:	4375      	muls	r5, r6
 801aa88:	9502      	str	r5, [sp, #8]
 801aa8a:	5b45      	ldrh	r5, [r0, r5]
 801aa8c:	fa1f fc84 	uxth.w	ip, r4
 801aa90:	122f      	asrs	r7, r5, #8
 801aa92:	43e4      	mvns	r4, r4
 801aa94:	b2e4      	uxtb	r4, r4
 801aa96:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801aa9a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801aa9e:	fb17 f704 	smulbb	r7, r7, r4
 801aaa2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801aaa6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801aaaa:	00ed      	lsls	r5, r5, #3
 801aaac:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801aab0:	b2ed      	uxtb	r5, r5
 801aab2:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801aab6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801aaba:	fb15 f504 	smulbb	r5, r5, r4
 801aabe:	fa5f f989 	uxtb.w	r9, r9
 801aac2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801aac6:	fb09 550c 	mla	r5, r9, ip, r5
 801aaca:	fb1a fa04 	smulbb	sl, sl, r4
 801aace:	fa1f fe8e 	uxth.w	lr, lr
 801aad2:	b2ad      	uxth	r5, r5
 801aad4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801aad8:	fb07 a70c 	mla	r7, r7, ip, sl
 801aadc:	f10e 0401 	add.w	r4, lr, #1
 801aae0:	f105 0a01 	add.w	sl, r5, #1
 801aae4:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801aae8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801aaec:	b2bf      	uxth	r7, r7
 801aaee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801aaf2:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801aaf6:	ea4a 0e0e 	orr.w	lr, sl, lr
 801aafa:	f107 0a01 	add.w	sl, r7, #1
 801aafe:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ab02:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ab06:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ab0a:	9c02      	ldr	r4, [sp, #8]
 801ab0c:	ea4e 0e0a 	orr.w	lr, lr, sl
 801ab10:	f820 e004 	strh.w	lr, [r0, r4]
 801ab14:	e7aa      	b.n	801aa6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ab16:	f04f 0900 	mov.w	r9, #0
 801ab1a:	eba3 0409 	sub.w	r4, r3, r9
 801ab1e:	2c00      	cmp	r4, #0
 801ab20:	f77f af4a 	ble.w	801a9b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ab24:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801ab28:	1414      	asrs	r4, r2, #16
 801ab2a:	140d      	asrs	r5, r1, #16
 801ab2c:	fb06 5504 	mla	r5, r6, r4, r5
 801ab30:	9c01      	ldr	r4, [sp, #4]
 801ab32:	5d64      	ldrb	r4, [r4, r5]
 801ab34:	2cff      	cmp	r4, #255	; 0xff
 801ab36:	d10b      	bne.n	801ab50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801ab38:	9c00      	ldr	r4, [sp, #0]
 801ab3a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801ab3e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801ab42:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ab44:	4421      	add	r1, r4
 801ab46:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ab48:	f109 0901 	add.w	r9, r9, #1
 801ab4c:	4422      	add	r2, r4
 801ab4e:	e7e4      	b.n	801ab1a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801ab50:	2c00      	cmp	r4, #0
 801ab52:	d0f6      	beq.n	801ab42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801ab54:	9e00      	ldr	r6, [sp, #0]
 801ab56:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801ab5a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801ab5e:	b2a7      	uxth	r7, r4
 801ab60:	122e      	asrs	r6, r5, #8
 801ab62:	43e4      	mvns	r4, r4
 801ab64:	b2e4      	uxtb	r4, r4
 801ab66:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ab6a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ab6e:	fb16 f604 	smulbb	r6, r6, r4
 801ab72:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ab76:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ab7a:	00ed      	lsls	r5, r5, #3
 801ab7c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ab80:	b2ed      	uxtb	r5, r5
 801ab82:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ab86:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ab8a:	fb15 f504 	smulbb	r5, r5, r4
 801ab8e:	fa5f fe8e 	uxtb.w	lr, lr
 801ab92:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ab96:	fb0e 5507 	mla	r5, lr, r7, r5
 801ab9a:	fb1a fa04 	smulbb	sl, sl, r4
 801ab9e:	fa1f fc8c 	uxth.w	ip, ip
 801aba2:	b2ad      	uxth	r5, r5
 801aba4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801aba8:	fb06 a607 	mla	r6, r6, r7, sl
 801abac:	f10c 0401 	add.w	r4, ip, #1
 801abb0:	f105 0a01 	add.w	sl, r5, #1
 801abb4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801abb8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801abbc:	b2b6      	uxth	r6, r6
 801abbe:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801abc2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801abc6:	ea4a 0c0c 	orr.w	ip, sl, ip
 801abca:	f106 0a01 	add.w	sl, r6, #1
 801abce:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801abd2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801abd6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801abda:	ea4c 0c0a 	orr.w	ip, ip, sl
 801abde:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801abe2:	e7ae      	b.n	801ab42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801abe4:	b005      	add	sp, #20
 801abe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801abea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801abea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801abee:	b085      	sub	sp, #20
 801abf0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801abf2:	9203      	str	r2, [sp, #12]
 801abf4:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801abf8:	9201      	str	r2, [sp, #4]
 801abfa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801abfe:	9100      	str	r1, [sp, #0]
 801ac00:	6841      	ldr	r1, [r0, #4]
 801ac02:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801ac06:	fb01 2404 	mla	r4, r1, r4, r2
 801ac0a:	6802      	ldr	r2, [r0, #0]
 801ac0c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ac10:	f8de 2000 	ldr.w	r2, [lr]
 801ac14:	9202      	str	r2, [sp, #8]
 801ac16:	9a01      	ldr	r2, [sp, #4]
 801ac18:	43d6      	mvns	r6, r2
 801ac1a:	b2f6      	uxtb	r6, r6
 801ac1c:	9a00      	ldr	r2, [sp, #0]
 801ac1e:	2a00      	cmp	r2, #0
 801ac20:	dc03      	bgt.n	801ac2a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801ac22:	9a03      	ldr	r2, [sp, #12]
 801ac24:	2a00      	cmp	r2, #0
 801ac26:	f340 8124 	ble.w	801ae72 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801ac2a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ac2c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801ac30:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801ac34:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ac38:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ac3a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ac3e:	2b00      	cmp	r3, #0
 801ac40:	dd0e      	ble.n	801ac60 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ac42:	1408      	asrs	r0, r1, #16
 801ac44:	d405      	bmi.n	801ac52 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ac46:	4560      	cmp	r0, ip
 801ac48:	da03      	bge.n	801ac52 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ac4a:	1410      	asrs	r0, r2, #16
 801ac4c:	d401      	bmi.n	801ac52 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ac4e:	42b8      	cmp	r0, r7
 801ac50:	db07      	blt.n	801ac62 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ac52:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ac54:	4401      	add	r1, r0
 801ac56:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ac58:	3b01      	subs	r3, #1
 801ac5a:	4402      	add	r2, r0
 801ac5c:	3402      	adds	r4, #2
 801ac5e:	e7ee      	b.n	801ac3e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801ac60:	d06e      	beq.n	801ad40 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801ac62:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ac64:	1e58      	subs	r0, r3, #1
 801ac66:	fb05 1500 	mla	r5, r5, r0, r1
 801ac6a:	142d      	asrs	r5, r5, #16
 801ac6c:	d45c      	bmi.n	801ad28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ac6e:	4565      	cmp	r5, ip
 801ac70:	da5a      	bge.n	801ad28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ac72:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ac74:	fb05 2000 	mla	r0, r5, r0, r2
 801ac78:	1400      	asrs	r0, r0, #16
 801ac7a:	d455      	bmi.n	801ad28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ac7c:	42b8      	cmp	r0, r7
 801ac7e:	da53      	bge.n	801ad28 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ac80:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801ac84:	4699      	mov	r9, r3
 801ac86:	46a2      	mov	sl, r4
 801ac88:	f1b9 0f00 	cmp.w	r9, #0
 801ac8c:	dd54      	ble.n	801ad38 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801ac8e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801ac92:	140d      	asrs	r5, r1, #16
 801ac94:	1410      	asrs	r0, r2, #16
 801ac96:	fb07 5000 	mla	r0, r7, r0, r5
 801ac9a:	9d02      	ldr	r5, [sp, #8]
 801ac9c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801aca0:	f8ba 5000 	ldrh.w	r5, [sl]
 801aca4:	122f      	asrs	r7, r5, #8
 801aca6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801acaa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801acae:	fb17 f706 	smulbb	r7, r7, r6
 801acb2:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801acb6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801acba:	00ed      	lsls	r5, r5, #3
 801acbc:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801acc0:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801acc4:	10c7      	asrs	r7, r0, #3
 801acc6:	b2ed      	uxtb	r5, r5
 801acc8:	00c0      	lsls	r0, r0, #3
 801acca:	fb18 f806 	smulbb	r8, r8, r6
 801acce:	fb15 f506 	smulbb	r5, r5, r6
 801acd2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801acd6:	b2c0      	uxtb	r0, r0
 801acd8:	fa1f fc8c 	uxth.w	ip, ip
 801acdc:	fb07 870b 	mla	r7, r7, fp, r8
 801ace0:	fb00 500b 	mla	r0, r0, fp, r5
 801ace4:	b280      	uxth	r0, r0
 801ace6:	b2bf      	uxth	r7, r7
 801ace8:	f10c 0501 	add.w	r5, ip, #1
 801acec:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801acf0:	f107 0801 	add.w	r8, r7, #1
 801acf4:	1c45      	adds	r5, r0, #1
 801acf6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801acfa:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801acfe:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ad00:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ad04:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ad08:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801ad0c:	ea45 0c0c 	orr.w	ip, r5, ip
 801ad10:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ad14:	4401      	add	r1, r0
 801ad16:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ad18:	ea4c 0c08 	orr.w	ip, ip, r8
 801ad1c:	f82a cb02 	strh.w	ip, [sl], #2
 801ad20:	4402      	add	r2, r0
 801ad22:	f109 39ff 	add.w	r9, r9, #4294967295
 801ad26:	e7af      	b.n	801ac88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ad28:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801ad2c:	f04f 0800 	mov.w	r8, #0
 801ad30:	eb03 0008 	add.w	r0, r3, r8
 801ad34:	2800      	cmp	r0, #0
 801ad36:	dc41      	bgt.n	801adbc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801ad38:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ad3c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ad40:	9b00      	ldr	r3, [sp, #0]
 801ad42:	2b00      	cmp	r3, #0
 801ad44:	f340 8095 	ble.w	801ae72 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801ad48:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ad4c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ad50:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ad54:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ad56:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ad5a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ad5e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ad62:	eef0 6a62 	vmov.f32	s13, s5
 801ad66:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ad6a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ad6e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad72:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801ad76:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad7a:	eef0 6a43 	vmov.f32	s13, s6
 801ad7e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad82:	ee12 2a90 	vmov	r2, s5
 801ad86:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad8a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad8e:	ee13 2a10 	vmov	r2, s6
 801ad92:	9311      	str	r3, [sp, #68]	; 0x44
 801ad94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ad96:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad9a:	9312      	str	r3, [sp, #72]	; 0x48
 801ad9c:	9b00      	ldr	r3, [sp, #0]
 801ad9e:	9a03      	ldr	r2, [sp, #12]
 801ada0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ada4:	3b01      	subs	r3, #1
 801ada6:	9300      	str	r3, [sp, #0]
 801ada8:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801adac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801adae:	eeb0 3a67 	vmov.f32	s6, s15
 801adb2:	bf08      	it	eq
 801adb4:	4613      	moveq	r3, r2
 801adb6:	eef0 2a47 	vmov.f32	s5, s14
 801adba:	e72f      	b.n	801ac1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801adbc:	140f      	asrs	r7, r1, #16
 801adbe:	d451      	bmi.n	801ae64 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801adc0:	f8de 5008 	ldr.w	r5, [lr, #8]
 801adc4:	42bd      	cmp	r5, r7
 801adc6:	dd4d      	ble.n	801ae64 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801adc8:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801adcc:	d44a      	bmi.n	801ae64 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801adce:	f8de 000c 	ldr.w	r0, [lr, #12]
 801add2:	4560      	cmp	r0, ip
 801add4:	dd46      	ble.n	801ae64 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801add6:	b22d      	sxth	r5, r5
 801add8:	fb0c 7505 	mla	r5, ip, r5, r7
 801addc:	9802      	ldr	r0, [sp, #8]
 801adde:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801ade2:	f06f 0501 	mvn.w	r5, #1
 801ade6:	fb05 fb08 	mul.w	fp, r5, r8
 801adea:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801adee:	f834 500b 	ldrh.w	r5, [r4, fp]
 801adf2:	122f      	asrs	r7, r5, #8
 801adf4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801adf8:	fb17 f706 	smulbb	r7, r7, r6
 801adfc:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801ae00:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ae04:	00ed      	lsls	r5, r5, #3
 801ae06:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801ae0a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801ae0e:	10c7      	asrs	r7, r0, #3
 801ae10:	b2ed      	uxtb	r5, r5
 801ae12:	00c0      	lsls	r0, r0, #3
 801ae14:	fb19 f906 	smulbb	r9, r9, r6
 801ae18:	fb15 f506 	smulbb	r5, r5, r6
 801ae1c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ae20:	b2c0      	uxtb	r0, r0
 801ae22:	fa1f fc8c 	uxth.w	ip, ip
 801ae26:	fb07 970a 	mla	r7, r7, sl, r9
 801ae2a:	fb00 500a 	mla	r0, r0, sl, r5
 801ae2e:	b2bf      	uxth	r7, r7
 801ae30:	b280      	uxth	r0, r0
 801ae32:	f10c 0501 	add.w	r5, ip, #1
 801ae36:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ae3a:	f107 0901 	add.w	r9, r7, #1
 801ae3e:	1c45      	adds	r5, r0, #1
 801ae40:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ae44:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801ae48:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ae4c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ae50:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ae54:	ea45 0c0c 	orr.w	ip, r5, ip
 801ae58:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ae5c:	ea4c 0c09 	orr.w	ip, ip, r9
 801ae60:	f824 c00b 	strh.w	ip, [r4, fp]
 801ae64:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ae66:	4401      	add	r1, r0
 801ae68:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ae6a:	f108 38ff 	add.w	r8, r8, #4294967295
 801ae6e:	4402      	add	r2, r0
 801ae70:	e75e      	b.n	801ad30 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801ae72:	b005      	add	sp, #20
 801ae74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ae78 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ae78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae7c:	b085      	sub	sp, #20
 801ae7e:	4693      	mov	fp, r2
 801ae80:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801ae82:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ae84:	6870      	ldr	r0, [r6, #4]
 801ae86:	9101      	str	r1, [sp, #4]
 801ae88:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ae8c:	fb00 2404 	mla	r4, r0, r4, r2
 801ae90:	6832      	ldr	r2, [r6, #0]
 801ae92:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801ae96:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ae9a:	682a      	ldr	r2, [r5, #0]
 801ae9c:	9202      	str	r2, [sp, #8]
 801ae9e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801aea2:	9a01      	ldr	r2, [sp, #4]
 801aea4:	2a00      	cmp	r2, #0
 801aea6:	dc03      	bgt.n	801aeb0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801aea8:	f1bb 0f00 	cmp.w	fp, #0
 801aeac:	f340 809a 	ble.w	801afe4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801aeb0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801aeb2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801aeb6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801aeba:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801aebe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801aec0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801aec4:	2b00      	cmp	r3, #0
 801aec6:	dd0c      	ble.n	801aee2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801aec8:	1406      	asrs	r6, r0, #16
 801aeca:	d405      	bmi.n	801aed8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801aecc:	454e      	cmp	r6, r9
 801aece:	da03      	bge.n	801aed8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801aed0:	1416      	asrs	r6, r2, #16
 801aed2:	d401      	bmi.n	801aed8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801aed4:	4546      	cmp	r6, r8
 801aed6:	db05      	blt.n	801aee4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801aed8:	4470      	add	r0, lr
 801aeda:	4462      	add	r2, ip
 801aedc:	3b01      	subs	r3, #1
 801aede:	3402      	adds	r4, #2
 801aee0:	e7f0      	b.n	801aec4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801aee2:	d00f      	beq.n	801af04 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801aee4:	1e5e      	subs	r6, r3, #1
 801aee6:	fb0e 0706 	mla	r7, lr, r6, r0
 801aeea:	143f      	asrs	r7, r7, #16
 801aeec:	d541      	bpl.n	801af72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801aeee:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801aef2:	4698      	mov	r8, r3
 801aef4:	9603      	str	r6, [sp, #12]
 801aef6:	f1b8 0f00 	cmp.w	r8, #0
 801aefa:	dc56      	bgt.n	801afaa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801aefc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801af00:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801af04:	9b01      	ldr	r3, [sp, #4]
 801af06:	2b00      	cmp	r3, #0
 801af08:	dd6c      	ble.n	801afe4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801af0a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801af0e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801af12:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801af16:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801af18:	ee31 1a05 	vadd.f32	s2, s2, s10
 801af1c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801af20:	eeb0 6a62 	vmov.f32	s12, s5
 801af24:	ee61 7a27 	vmul.f32	s15, s2, s15
 801af28:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801af2c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801af30:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801af34:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801af38:	eeb0 6a43 	vmov.f32	s12, s6
 801af3c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801af40:	ee12 2a90 	vmov	r2, s5
 801af44:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801af48:	fb92 fef3 	sdiv	lr, r2, r3
 801af4c:	ee13 2a10 	vmov	r2, s6
 801af50:	fb92 fcf3 	sdiv	ip, r2, r3
 801af54:	9b01      	ldr	r3, [sp, #4]
 801af56:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801af5a:	3b01      	subs	r3, #1
 801af5c:	9301      	str	r3, [sp, #4]
 801af5e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801af62:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801af64:	eeb0 3a67 	vmov.f32	s6, s15
 801af68:	bf08      	it	eq
 801af6a:	465b      	moveq	r3, fp
 801af6c:	eef0 2a47 	vmov.f32	s5, s14
 801af70:	e797      	b.n	801aea2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801af72:	454f      	cmp	r7, r9
 801af74:	dabb      	bge.n	801aeee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801af76:	fb0c 2606 	mla	r6, ip, r6, r2
 801af7a:	1436      	asrs	r6, r6, #16
 801af7c:	d4b7      	bmi.n	801aeee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801af7e:	4546      	cmp	r6, r8
 801af80:	dab5      	bge.n	801aeee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801af82:	461e      	mov	r6, r3
 801af84:	46a0      	mov	r8, r4
 801af86:	2e00      	cmp	r6, #0
 801af88:	ddb8      	ble.n	801aefc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801af8a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801af8e:	9902      	ldr	r1, [sp, #8]
 801af90:	1417      	asrs	r7, r2, #16
 801af92:	ea4f 4920 	mov.w	r9, r0, asr #16
 801af96:	fb0a 9707 	mla	r7, sl, r7, r9
 801af9a:	4470      	add	r0, lr
 801af9c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801afa0:	f828 7b02 	strh.w	r7, [r8], #2
 801afa4:	4462      	add	r2, ip
 801afa6:	3e01      	subs	r6, #1
 801afa8:	e7ed      	b.n	801af86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801afaa:	ea5f 4920 	movs.w	r9, r0, asr #16
 801afae:	d414      	bmi.n	801afda <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801afb0:	68ae      	ldr	r6, [r5, #8]
 801afb2:	454e      	cmp	r6, r9
 801afb4:	dd11      	ble.n	801afda <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801afb6:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801afba:	d40e      	bmi.n	801afda <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801afbc:	68ef      	ldr	r7, [r5, #12]
 801afbe:	4557      	cmp	r7, sl
 801afc0:	dd0b      	ble.n	801afda <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801afc2:	b236      	sxth	r6, r6
 801afc4:	fb0a 9606 	mla	r6, sl, r6, r9
 801afc8:	9f02      	ldr	r7, [sp, #8]
 801afca:	f06f 0101 	mvn.w	r1, #1
 801afce:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801afd2:	fb01 f608 	mul.w	r6, r1, r8
 801afd6:	9903      	ldr	r1, [sp, #12]
 801afd8:	538f      	strh	r7, [r1, r6]
 801afda:	4470      	add	r0, lr
 801afdc:	4462      	add	r2, ip
 801afde:	f108 38ff 	add.w	r8, r8, #4294967295
 801afe2:	e788      	b.n	801aef6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801afe4:	b005      	add	sp, #20
 801afe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801afea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801afea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801afee:	b087      	sub	sp, #28
 801aff0:	468b      	mov	fp, r1
 801aff2:	9815      	ldr	r0, [sp, #84]	; 0x54
 801aff4:	9203      	str	r2, [sp, #12]
 801aff6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801affa:	9204      	str	r2, [sp, #16]
 801affc:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801b000:	6841      	ldr	r1, [r0, #4]
 801b002:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b006:	fb01 2505 	mla	r5, r1, r5, r2
 801b00a:	6802      	ldr	r2, [r0, #0]
 801b00c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801b010:	f8d9 2000 	ldr.w	r2, [r9]
 801b014:	9201      	str	r2, [sp, #4]
 801b016:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b01a:	f1bb 0f00 	cmp.w	fp, #0
 801b01e:	dc03      	bgt.n	801b028 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b020:	9a03      	ldr	r2, [sp, #12]
 801b022:	2a00      	cmp	r2, #0
 801b024:	f340 8159 	ble.w	801b2da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b028:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b02a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b02e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b032:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b036:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b038:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b03c:	2b00      	cmp	r3, #0
 801b03e:	dd0e      	ble.n	801b05e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b040:	1402      	asrs	r2, r0, #16
 801b042:	d405      	bmi.n	801b050 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b044:	42ba      	cmp	r2, r7
 801b046:	da03      	bge.n	801b050 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b048:	140a      	asrs	r2, r1, #16
 801b04a:	d401      	bmi.n	801b050 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b04c:	42b2      	cmp	r2, r6
 801b04e:	db07      	blt.n	801b060 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b050:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b052:	4410      	add	r0, r2
 801b054:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b056:	3b01      	subs	r3, #1
 801b058:	4411      	add	r1, r2
 801b05a:	3502      	adds	r5, #2
 801b05c:	e7ee      	b.n	801b03c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b05e:	d017      	beq.n	801b090 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b060:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b062:	1e5a      	subs	r2, r3, #1
 801b064:	fb04 0402 	mla	r4, r4, r2, r0
 801b068:	1424      	asrs	r4, r4, #16
 801b06a:	d409      	bmi.n	801b080 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b06c:	42bc      	cmp	r4, r7
 801b06e:	da07      	bge.n	801b080 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b070:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b072:	fb04 1202 	mla	r2, r4, r2, r1
 801b076:	1412      	asrs	r2, r2, #16
 801b078:	d402      	bmi.n	801b080 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b07a:	42b2      	cmp	r2, r6
 801b07c:	f2c0 80bf 	blt.w	801b1fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b080:	2700      	movs	r7, #0
 801b082:	19da      	adds	r2, r3, r7
 801b084:	2a00      	cmp	r2, #0
 801b086:	dc3e      	bgt.n	801b106 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b088:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b08c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801b090:	f1bb 0f00 	cmp.w	fp, #0
 801b094:	f340 8121 	ble.w	801b2da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b098:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b09c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b0a0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b0a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b0a6:	f1bb 0b01 	subs.w	fp, fp, #1
 801b0aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b0ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b0b2:	eeb0 6a62 	vmov.f32	s12, s5
 801b0b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b0ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b0be:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b0c2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b0c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b0ca:	eeb0 6a43 	vmov.f32	s12, s6
 801b0ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b0d2:	ee12 2a90 	vmov	r2, s5
 801b0d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b0da:	fb92 f3f3 	sdiv	r3, r2, r3
 801b0de:	ee13 2a10 	vmov	r2, s6
 801b0e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b0e6:	9313      	str	r3, [sp, #76]	; 0x4c
 801b0e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b0ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801b0ee:	9a03      	ldr	r2, [sp, #12]
 801b0f0:	9314      	str	r3, [sp, #80]	; 0x50
 801b0f2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b0f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b0f8:	eeb0 3a67 	vmov.f32	s6, s15
 801b0fc:	bf08      	it	eq
 801b0fe:	4613      	moveq	r3, r2
 801b100:	eef0 2a47 	vmov.f32	s5, s14
 801b104:	e789      	b.n	801b01a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b106:	1406      	asrs	r6, r0, #16
 801b108:	d42d      	bmi.n	801b166 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b10a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801b10e:	42b4      	cmp	r4, r6
 801b110:	dd29      	ble.n	801b166 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b112:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801b116:	d426      	bmi.n	801b166 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b118:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b11c:	4562      	cmp	r2, ip
 801b11e:	dd22      	ble.n	801b166 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b120:	b224      	sxth	r4, r4
 801b122:	9a01      	ldr	r2, [sp, #4]
 801b124:	fb0c 6404 	mla	r4, ip, r4, r6
 801b128:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801b12c:	0e22      	lsrs	r2, r4, #24
 801b12e:	d01a      	beq.n	801b166 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b130:	9e04      	ldr	r6, [sp, #16]
 801b132:	4372      	muls	r2, r6
 801b134:	1c56      	adds	r6, r2, #1
 801b136:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b13a:	1212      	asrs	r2, r2, #8
 801b13c:	0a26      	lsrs	r6, r4, #8
 801b13e:	2aff      	cmp	r2, #255	; 0xff
 801b140:	9605      	str	r6, [sp, #20]
 801b142:	d116      	bne.n	801b172 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b144:	f06f 0201 	mvn.w	r2, #1
 801b148:	fb02 fc07 	mul.w	ip, r2, r7
 801b14c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b150:	0962      	lsrs	r2, r4, #5
 801b152:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b156:	f026 0607 	bic.w	r6, r6, #7
 801b15a:	4316      	orrs	r6, r2
 801b15c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b160:	4326      	orrs	r6, r4
 801b162:	f825 600c 	strh.w	r6, [r5, ip]
 801b166:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b168:	4410      	add	r0, r2
 801b16a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b16c:	3f01      	subs	r7, #1
 801b16e:	4411      	add	r1, r2
 801b170:	e787      	b.n	801b082 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b172:	f06f 0601 	mvn.w	r6, #1
 801b176:	437e      	muls	r6, r7
 801b178:	fa1f fa82 	uxth.w	sl, r2
 801b17c:	f835 8006 	ldrh.w	r8, [r5, r6]
 801b180:	9602      	str	r6, [sp, #8]
 801b182:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b186:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801b18a:	43d2      	mvns	r2, r2
 801b18c:	b2d2      	uxtb	r2, r2
 801b18e:	fb1c fc0a 	smulbb	ip, ip, sl
 801b192:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b196:	fb0e ce02 	mla	lr, lr, r2, ip
 801b19a:	b2e4      	uxtb	r4, r4
 801b19c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b1a0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b1a4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b1a8:	fa5f f888 	uxtb.w	r8, r8
 801b1ac:	fb14 f40a 	smulbb	r4, r4, sl
 801b1b0:	fb08 4402 	mla	r4, r8, r2, r4
 801b1b4:	fa1f fe8e 	uxth.w	lr, lr
 801b1b8:	fb16 f60a 	smulbb	r6, r6, sl
 801b1bc:	b2a4      	uxth	r4, r4
 801b1be:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b1c2:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b1c6:	f10e 0201 	add.w	r2, lr, #1
 801b1ca:	1c66      	adds	r6, r4, #1
 801b1cc:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b1d0:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b1d4:	fa1f fc8c 	uxth.w	ip, ip
 801b1d8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b1dc:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b1e0:	ea46 0e0e 	orr.w	lr, r6, lr
 801b1e4:	f10c 0601 	add.w	r6, ip, #1
 801b1e8:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b1ec:	0976      	lsrs	r6, r6, #5
 801b1ee:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b1f2:	9a02      	ldr	r2, [sp, #8]
 801b1f4:	ea4e 0e06 	orr.w	lr, lr, r6
 801b1f8:	f825 e002 	strh.w	lr, [r5, r2]
 801b1fc:	e7b3      	b.n	801b166 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b1fe:	f04f 0800 	mov.w	r8, #0
 801b202:	eba3 0208 	sub.w	r2, r3, r8
 801b206:	2a00      	cmp	r2, #0
 801b208:	f77f af3e 	ble.w	801b088 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b20c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801b210:	1404      	asrs	r4, r0, #16
 801b212:	140a      	asrs	r2, r1, #16
 801b214:	fb06 4202 	mla	r2, r6, r2, r4
 801b218:	9c01      	ldr	r4, [sp, #4]
 801b21a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801b21e:	0e22      	lsrs	r2, r4, #24
 801b220:	d016      	beq.n	801b250 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b222:	9e04      	ldr	r6, [sp, #16]
 801b224:	4372      	muls	r2, r6
 801b226:	1c56      	adds	r6, r2, #1
 801b228:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b22c:	1212      	asrs	r2, r2, #8
 801b22e:	2aff      	cmp	r2, #255	; 0xff
 801b230:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801b234:	d113      	bne.n	801b25e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801b236:	0962      	lsrs	r2, r4, #5
 801b238:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b23c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b240:	f026 0607 	bic.w	r6, r6, #7
 801b244:	4316      	orrs	r6, r2
 801b246:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b24a:	4326      	orrs	r6, r4
 801b24c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801b250:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b252:	4410      	add	r0, r2
 801b254:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b256:	f108 0801 	add.w	r8, r8, #1
 801b25a:	4411      	add	r1, r2
 801b25c:	e7d1      	b.n	801b202 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801b25e:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801b262:	fa1f fa82 	uxth.w	sl, r2
 801b266:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b26a:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801b26e:	43d2      	mvns	r2, r2
 801b270:	b2d2      	uxtb	r2, r2
 801b272:	fb17 f70a 	smulbb	r7, r7, sl
 801b276:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b27a:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b27e:	b2e4      	uxtb	r4, r4
 801b280:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b284:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b288:	fa5f fe8e 	uxtb.w	lr, lr
 801b28c:	fb14 f40a 	smulbb	r4, r4, sl
 801b290:	fb0e 4402 	mla	r4, lr, r2, r4
 801b294:	b2f6      	uxtb	r6, r6
 801b296:	fa1f fc8c 	uxth.w	ip, ip
 801b29a:	fb16 f60a 	smulbb	r6, r6, sl
 801b29e:	b2a4      	uxth	r4, r4
 801b2a0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b2a4:	fb07 6702 	mla	r7, r7, r2, r6
 801b2a8:	f10c 0201 	add.w	r2, ip, #1
 801b2ac:	1c66      	adds	r6, r4, #1
 801b2ae:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b2b2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b2b6:	b2bf      	uxth	r7, r7
 801b2b8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b2bc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b2c0:	ea46 0c0c 	orr.w	ip, r6, ip
 801b2c4:	1c7e      	adds	r6, r7, #1
 801b2c6:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801b2ca:	0976      	lsrs	r6, r6, #5
 801b2cc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b2d0:	ea4c 0c06 	orr.w	ip, ip, r6
 801b2d4:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801b2d8:	e7ba      	b.n	801b250 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b2da:	b007      	add	sp, #28
 801b2dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b2e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b2e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2e4:	b085      	sub	sp, #20
 801b2e6:	468b      	mov	fp, r1
 801b2e8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b2ea:	9203      	str	r2, [sp, #12]
 801b2ec:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b2f0:	6841      	ldr	r1, [r0, #4]
 801b2f2:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801b2f6:	fb01 2404 	mla	r4, r1, r4, r2
 801b2fa:	6802      	ldr	r2, [r0, #0]
 801b2fc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b300:	f8d8 2000 	ldr.w	r2, [r8]
 801b304:	9201      	str	r2, [sp, #4]
 801b306:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b30a:	f1bb 0f00 	cmp.w	fp, #0
 801b30e:	dc03      	bgt.n	801b318 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b310:	9a03      	ldr	r2, [sp, #12]
 801b312:	2a00      	cmp	r2, #0
 801b314:	f340 814f 	ble.w	801b5b6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b318:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b31a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801b31e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801b322:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b326:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b328:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b32c:	2b00      	cmp	r3, #0
 801b32e:	dd0e      	ble.n	801b34e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b330:	1408      	asrs	r0, r1, #16
 801b332:	d405      	bmi.n	801b340 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b334:	42b8      	cmp	r0, r7
 801b336:	da03      	bge.n	801b340 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b338:	1410      	asrs	r0, r2, #16
 801b33a:	d401      	bmi.n	801b340 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b33c:	42b0      	cmp	r0, r6
 801b33e:	db07      	blt.n	801b350 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b340:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b342:	4401      	add	r1, r0
 801b344:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b346:	3b01      	subs	r3, #1
 801b348:	4402      	add	r2, r0
 801b34a:	3402      	adds	r4, #2
 801b34c:	e7ee      	b.n	801b32c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b34e:	d017      	beq.n	801b380 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b350:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b352:	1e58      	subs	r0, r3, #1
 801b354:	fb05 1500 	mla	r5, r5, r0, r1
 801b358:	142d      	asrs	r5, r5, #16
 801b35a:	d409      	bmi.n	801b370 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b35c:	42bd      	cmp	r5, r7
 801b35e:	da07      	bge.n	801b370 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b360:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b362:	fb05 2000 	mla	r0, r5, r0, r2
 801b366:	1400      	asrs	r0, r0, #16
 801b368:	d402      	bmi.n	801b370 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b36a:	42b0      	cmp	r0, r6
 801b36c:	f2c0 80ba 	blt.w	801b4e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b370:	2600      	movs	r6, #0
 801b372:	1998      	adds	r0, r3, r6
 801b374:	2800      	cmp	r0, #0
 801b376:	dc3e      	bgt.n	801b3f6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b378:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b37c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b380:	f1bb 0f00 	cmp.w	fp, #0
 801b384:	f340 8117 	ble.w	801b5b6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b388:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b38c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b390:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b394:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b396:	f1bb 0b01 	subs.w	fp, fp, #1
 801b39a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b39e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b3a2:	eeb0 6a62 	vmov.f32	s12, s5
 801b3a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b3aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b3ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b3b2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b3b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b3ba:	eeb0 6a43 	vmov.f32	s12, s6
 801b3be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b3c2:	ee12 2a90 	vmov	r2, s5
 801b3c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b3ca:	fb92 f3f3 	sdiv	r3, r2, r3
 801b3ce:	ee13 2a10 	vmov	r2, s6
 801b3d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b3d6:	9311      	str	r3, [sp, #68]	; 0x44
 801b3d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b3da:	fb92 f3f3 	sdiv	r3, r2, r3
 801b3de:	9a03      	ldr	r2, [sp, #12]
 801b3e0:	9312      	str	r3, [sp, #72]	; 0x48
 801b3e2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b3e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b3e8:	eeb0 3a67 	vmov.f32	s6, s15
 801b3ec:	bf08      	it	eq
 801b3ee:	4613      	moveq	r3, r2
 801b3f0:	eef0 2a47 	vmov.f32	s5, s14
 801b3f4:	e789      	b.n	801b30a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b3f6:	140f      	asrs	r7, r1, #16
 801b3f8:	d424      	bmi.n	801b444 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b3fa:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801b3fe:	42bd      	cmp	r5, r7
 801b400:	dd20      	ble.n	801b444 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b402:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b406:	d41d      	bmi.n	801b444 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b408:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801b40c:	4560      	cmp	r0, ip
 801b40e:	dd19      	ble.n	801b444 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b410:	b22d      	sxth	r5, r5
 801b412:	fb0c 7505 	mla	r5, ip, r5, r7
 801b416:	9801      	ldr	r0, [sp, #4]
 801b418:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801b41c:	0e07      	lsrs	r7, r0, #24
 801b41e:	2fff      	cmp	r7, #255	; 0xff
 801b420:	d116      	bne.n	801b450 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b422:	f06f 0501 	mvn.w	r5, #1
 801b426:	fb05 f706 	mul.w	r7, r5, r6
 801b42a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b42e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b432:	0945      	lsrs	r5, r0, #5
 801b434:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b438:	ea4c 0505 	orr.w	r5, ip, r5
 801b43c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b440:	4305      	orrs	r5, r0
 801b442:	53e5      	strh	r5, [r4, r7]
 801b444:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b446:	4401      	add	r1, r0
 801b448:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b44a:	3e01      	subs	r6, #1
 801b44c:	4402      	add	r2, r0
 801b44e:	e790      	b.n	801b372 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b450:	b2fd      	uxtb	r5, r7
 801b452:	2f00      	cmp	r7, #0
 801b454:	d0f6      	beq.n	801b444 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b456:	f06f 0701 	mvn.w	r7, #1
 801b45a:	4377      	muls	r7, r6
 801b45c:	fa1f f985 	uxth.w	r9, r5
 801b460:	f834 e007 	ldrh.w	lr, [r4, r7]
 801b464:	9702      	str	r7, [sp, #8]
 801b466:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b46a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b46e:	43ed      	mvns	r5, r5
 801b470:	b2ed      	uxtb	r5, r5
 801b472:	fb17 f709 	smulbb	r7, r7, r9
 801b476:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b47a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b47e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b482:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b486:	b2c0      	uxtb	r0, r0
 801b488:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b48c:	fa5f fe8e 	uxtb.w	lr, lr
 801b490:	fb10 f009 	smulbb	r0, r0, r9
 801b494:	fb0e 0005 	mla	r0, lr, r5, r0
 801b498:	b280      	uxth	r0, r0
 801b49a:	fa1f fc8c 	uxth.w	ip, ip
 801b49e:	fb1a fa09 	smulbb	sl, sl, r9
 801b4a2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b4a6:	fb07 a705 	mla	r7, r7, r5, sl
 801b4aa:	f100 0a01 	add.w	sl, r0, #1
 801b4ae:	f10c 0501 	add.w	r5, ip, #1
 801b4b2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b4b6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b4ba:	b2bf      	uxth	r7, r7
 801b4bc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b4c0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b4c4:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b4c8:	f107 0a01 	add.w	sl, r7, #1
 801b4cc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b4d0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b4d4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b4d8:	9802      	ldr	r0, [sp, #8]
 801b4da:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b4de:	f824 c000 	strh.w	ip, [r4, r0]
 801b4e2:	e7af      	b.n	801b444 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b4e4:	f04f 0e00 	mov.w	lr, #0
 801b4e8:	eba3 000e 	sub.w	r0, r3, lr
 801b4ec:	2800      	cmp	r0, #0
 801b4ee:	f77f af43 	ble.w	801b378 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b4f2:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b4f6:	140d      	asrs	r5, r1, #16
 801b4f8:	1410      	asrs	r0, r2, #16
 801b4fa:	fb06 5000 	mla	r0, r6, r0, r5
 801b4fe:	9d01      	ldr	r5, [sp, #4]
 801b500:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b504:	0e2e      	lsrs	r6, r5, #24
 801b506:	2eff      	cmp	r6, #255	; 0xff
 801b508:	d112      	bne.n	801b530 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801b50a:	482c      	ldr	r0, [pc, #176]	; (801b5bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801b50c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b510:	0968      	lsrs	r0, r5, #5
 801b512:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b516:	4330      	orrs	r0, r6
 801b518:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b51c:	4328      	orrs	r0, r5
 801b51e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801b522:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b524:	4401      	add	r1, r0
 801b526:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b528:	f10e 0e01 	add.w	lr, lr, #1
 801b52c:	4402      	add	r2, r0
 801b52e:	e7db      	b.n	801b4e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801b530:	b2f0      	uxtb	r0, r6
 801b532:	2e00      	cmp	r6, #0
 801b534:	d0f5      	beq.n	801b522 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b536:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801b53a:	fa1f f980 	uxth.w	r9, r0
 801b53e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b542:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b546:	43c0      	mvns	r0, r0
 801b548:	b2c0      	uxtb	r0, r0
 801b54a:	fb16 f609 	smulbb	r6, r6, r9
 801b54e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b552:	fb07 6700 	mla	r7, r7, r0, r6
 801b556:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b55a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b55e:	b2ed      	uxtb	r5, r5
 801b560:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b564:	fa5f fc8c 	uxtb.w	ip, ip
 801b568:	fb15 f509 	smulbb	r5, r5, r9
 801b56c:	fb0c 5500 	mla	r5, ip, r0, r5
 801b570:	b2bf      	uxth	r7, r7
 801b572:	fb1a fa09 	smulbb	sl, sl, r9
 801b576:	b2ad      	uxth	r5, r5
 801b578:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b57c:	fb06 a600 	mla	r6, r6, r0, sl
 801b580:	1c78      	adds	r0, r7, #1
 801b582:	f105 0a01 	add.w	sl, r5, #1
 801b586:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b58a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b58e:	b2b6      	uxth	r6, r6
 801b590:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b594:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b598:	ea4a 0707 	orr.w	r7, sl, r7
 801b59c:	f106 0a01 	add.w	sl, r6, #1
 801b5a0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b5a4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b5a8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b5ac:	ea47 070a 	orr.w	r7, r7, sl
 801b5b0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801b5b4:	e7b5      	b.n	801b522 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b5b6:	b005      	add	sp, #20
 801b5b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b5bc:	fffff800 	.word	0xfffff800

0801b5c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b5c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b5c4:	b087      	sub	sp, #28
 801b5c6:	468b      	mov	fp, r1
 801b5c8:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b5ca:	9203      	str	r2, [sp, #12]
 801b5cc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b5d0:	9204      	str	r2, [sp, #16]
 801b5d2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b5d6:	6841      	ldr	r1, [r0, #4]
 801b5d8:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b5dc:	fb01 2404 	mla	r4, r1, r4, r2
 801b5e0:	6802      	ldr	r2, [r0, #0]
 801b5e2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b5e6:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b5ea:	3201      	adds	r2, #1
 801b5ec:	f022 0201 	bic.w	r2, r2, #1
 801b5f0:	9200      	str	r2, [sp, #0]
 801b5f2:	f8d9 2000 	ldr.w	r2, [r9]
 801b5f6:	9201      	str	r2, [sp, #4]
 801b5f8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b5fc:	f1bb 0f00 	cmp.w	fp, #0
 801b600:	dc03      	bgt.n	801b60a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b602:	9a03      	ldr	r2, [sp, #12]
 801b604:	2a00      	cmp	r2, #0
 801b606:	f340 8169 	ble.w	801b8dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b60a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b60c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b610:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b614:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b618:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b61a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b61e:	2b00      	cmp	r3, #0
 801b620:	dd0e      	ble.n	801b640 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b622:	1402      	asrs	r2, r0, #16
 801b624:	d405      	bmi.n	801b632 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b626:	42ba      	cmp	r2, r7
 801b628:	da03      	bge.n	801b632 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b62a:	140a      	asrs	r2, r1, #16
 801b62c:	d401      	bmi.n	801b632 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b62e:	42b2      	cmp	r2, r6
 801b630:	db07      	blt.n	801b642 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801b632:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b634:	4410      	add	r0, r2
 801b636:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b638:	3b01      	subs	r3, #1
 801b63a:	4411      	add	r1, r2
 801b63c:	3402      	adds	r4, #2
 801b63e:	e7ee      	b.n	801b61e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b640:	d017      	beq.n	801b672 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801b642:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b644:	1e5a      	subs	r2, r3, #1
 801b646:	fb05 0502 	mla	r5, r5, r2, r0
 801b64a:	142d      	asrs	r5, r5, #16
 801b64c:	d409      	bmi.n	801b662 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b64e:	42bd      	cmp	r5, r7
 801b650:	da07      	bge.n	801b662 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b652:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b654:	fb05 1202 	mla	r2, r5, r2, r1
 801b658:	1412      	asrs	r2, r2, #16
 801b65a:	d402      	bmi.n	801b662 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b65c:	42b2      	cmp	r2, r6
 801b65e:	f2c0 80c7 	blt.w	801b7f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801b662:	2700      	movs	r7, #0
 801b664:	19da      	adds	r2, r3, r7
 801b666:	2a00      	cmp	r2, #0
 801b668:	dc3e      	bgt.n	801b6e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b66a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b66e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b672:	f1bb 0f00 	cmp.w	fp, #0
 801b676:	f340 8131 	ble.w	801b8dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b67a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b67e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b682:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b686:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b688:	f1bb 0b01 	subs.w	fp, fp, #1
 801b68c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b690:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b694:	eeb0 6a62 	vmov.f32	s12, s5
 801b698:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b69c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b6a0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b6a4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b6a8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b6ac:	eeb0 6a43 	vmov.f32	s12, s6
 801b6b0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b6b4:	ee12 2a90 	vmov	r2, s5
 801b6b8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b6bc:	fb92 f3f3 	sdiv	r3, r2, r3
 801b6c0:	ee13 2a10 	vmov	r2, s6
 801b6c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b6c8:	9313      	str	r3, [sp, #76]	; 0x4c
 801b6ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b6cc:	fb92 f3f3 	sdiv	r3, r2, r3
 801b6d0:	9a03      	ldr	r2, [sp, #12]
 801b6d2:	9314      	str	r3, [sp, #80]	; 0x50
 801b6d4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b6d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b6da:	eeb0 3a67 	vmov.f32	s6, s15
 801b6de:	bf08      	it	eq
 801b6e0:	4613      	moveq	r3, r2
 801b6e2:	eef0 2a47 	vmov.f32	s5, s14
 801b6e6:	e789      	b.n	801b5fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b6e8:	1405      	asrs	r5, r0, #16
 801b6ea:	d435      	bmi.n	801b758 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b6ec:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b6f0:	42aa      	cmp	r2, r5
 801b6f2:	dd31      	ble.n	801b758 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b6f4:	140e      	asrs	r6, r1, #16
 801b6f6:	d42f      	bmi.n	801b758 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b6f8:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b6fc:	42b2      	cmp	r2, r6
 801b6fe:	dd2b      	ble.n	801b758 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b700:	9a00      	ldr	r2, [sp, #0]
 801b702:	fb06 5502 	mla	r5, r6, r2, r5
 801b706:	086a      	lsrs	r2, r5, #1
 801b708:	9e01      	ldr	r6, [sp, #4]
 801b70a:	5cb2      	ldrb	r2, [r6, r2]
 801b70c:	07ee      	lsls	r6, r5, #31
 801b70e:	bf54      	ite	pl
 801b710:	f002 020f 	andpl.w	r2, r2, #15
 801b714:	1112      	asrmi	r2, r2, #4
 801b716:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b71a:	b2d2      	uxtb	r2, r2
 801b71c:	b1e2      	cbz	r2, 801b758 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b71e:	9d04      	ldr	r5, [sp, #16]
 801b720:	436a      	muls	r2, r5
 801b722:	1c55      	adds	r5, r2, #1
 801b724:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801b728:	4d6e      	ldr	r5, [pc, #440]	; (801b8e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801b72a:	682d      	ldr	r5, [r5, #0]
 801b72c:	1212      	asrs	r2, r2, #8
 801b72e:	0a2e      	lsrs	r6, r5, #8
 801b730:	2aff      	cmp	r2, #255	; 0xff
 801b732:	9605      	str	r6, [sp, #20]
 801b734:	d116      	bne.n	801b764 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b736:	f06f 0201 	mvn.w	r2, #1
 801b73a:	fb02 fc07 	mul.w	ip, r2, r7
 801b73e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b742:	096a      	lsrs	r2, r5, #5
 801b744:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b748:	f026 0607 	bic.w	r6, r6, #7
 801b74c:	4316      	orrs	r6, r2
 801b74e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b752:	432e      	orrs	r6, r5
 801b754:	f824 600c 	strh.w	r6, [r4, ip]
 801b758:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b75a:	4410      	add	r0, r2
 801b75c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b75e:	3f01      	subs	r7, #1
 801b760:	4411      	add	r1, r2
 801b762:	e77f      	b.n	801b664 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801b764:	f06f 0601 	mvn.w	r6, #1
 801b768:	437e      	muls	r6, r7
 801b76a:	fa1f fa82 	uxth.w	sl, r2
 801b76e:	f834 8006 	ldrh.w	r8, [r4, r6]
 801b772:	9602      	str	r6, [sp, #8]
 801b774:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b778:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801b77c:	43d2      	mvns	r2, r2
 801b77e:	b2d2      	uxtb	r2, r2
 801b780:	fb1c fc0a 	smulbb	ip, ip, sl
 801b784:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b788:	fb0e ce02 	mla	lr, lr, r2, ip
 801b78c:	b2ed      	uxtb	r5, r5
 801b78e:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b792:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b796:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b79a:	fa5f f888 	uxtb.w	r8, r8
 801b79e:	fb15 f50a 	smulbb	r5, r5, sl
 801b7a2:	fb08 5502 	mla	r5, r8, r2, r5
 801b7a6:	fa1f fe8e 	uxth.w	lr, lr
 801b7aa:	fb16 f60a 	smulbb	r6, r6, sl
 801b7ae:	b2ad      	uxth	r5, r5
 801b7b0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b7b4:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b7b8:	f10e 0201 	add.w	r2, lr, #1
 801b7bc:	1c6e      	adds	r6, r5, #1
 801b7be:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b7c2:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801b7c6:	fa1f fc8c 	uxth.w	ip, ip
 801b7ca:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b7ce:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b7d2:	ea46 0e0e 	orr.w	lr, r6, lr
 801b7d6:	f10c 0601 	add.w	r6, ip, #1
 801b7da:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b7de:	0976      	lsrs	r6, r6, #5
 801b7e0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b7e4:	9a02      	ldr	r2, [sp, #8]
 801b7e6:	ea4e 0e06 	orr.w	lr, lr, r6
 801b7ea:	f824 e002 	strh.w	lr, [r4, r2]
 801b7ee:	e7b3      	b.n	801b758 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b7f0:	f04f 0800 	mov.w	r8, #0
 801b7f4:	eba3 0208 	sub.w	r2, r3, r8
 801b7f8:	2a00      	cmp	r2, #0
 801b7fa:	f77f af36 	ble.w	801b66a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801b7fe:	9e00      	ldr	r6, [sp, #0]
 801b800:	1402      	asrs	r2, r0, #16
 801b802:	140d      	asrs	r5, r1, #16
 801b804:	fb06 2505 	mla	r5, r6, r5, r2
 801b808:	086a      	lsrs	r2, r5, #1
 801b80a:	9e01      	ldr	r6, [sp, #4]
 801b80c:	5cb2      	ldrb	r2, [r6, r2]
 801b80e:	07ed      	lsls	r5, r5, #31
 801b810:	bf54      	ite	pl
 801b812:	f002 020f 	andpl.w	r2, r2, #15
 801b816:	1112      	asrmi	r2, r2, #4
 801b818:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b81c:	b2d2      	uxtb	r2, r2
 801b81e:	b1c2      	cbz	r2, 801b852 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801b820:	9d04      	ldr	r5, [sp, #16]
 801b822:	436a      	muls	r2, r5
 801b824:	1c55      	adds	r5, r2, #1
 801b826:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801b82a:	4d2e      	ldr	r5, [pc, #184]	; (801b8e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801b82c:	1212      	asrs	r2, r2, #8
 801b82e:	682e      	ldr	r6, [r5, #0]
 801b830:	2aff      	cmp	r2, #255	; 0xff
 801b832:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801b836:	d113      	bne.n	801b860 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801b838:	0972      	lsrs	r2, r6, #5
 801b83a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801b83e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b842:	f025 0507 	bic.w	r5, r5, #7
 801b846:	4315      	orrs	r5, r2
 801b848:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801b84c:	4335      	orrs	r5, r6
 801b84e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801b852:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b854:	4410      	add	r0, r2
 801b856:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b858:	f108 0801 	add.w	r8, r8, #1
 801b85c:	4411      	add	r1, r2
 801b85e:	e7c9      	b.n	801b7f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b860:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801b864:	fa1f fa82 	uxth.w	sl, r2
 801b868:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b86c:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801b870:	43d2      	mvns	r2, r2
 801b872:	b2d2      	uxtb	r2, r2
 801b874:	fb17 f70a 	smulbb	r7, r7, sl
 801b878:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b87c:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b880:	b2f6      	uxtb	r6, r6
 801b882:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b886:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b88a:	fa5f fe8e 	uxtb.w	lr, lr
 801b88e:	fb16 f60a 	smulbb	r6, r6, sl
 801b892:	fb0e 6602 	mla	r6, lr, r2, r6
 801b896:	b2ed      	uxtb	r5, r5
 801b898:	fa1f fc8c 	uxth.w	ip, ip
 801b89c:	fb15 f50a 	smulbb	r5, r5, sl
 801b8a0:	b2b6      	uxth	r6, r6
 801b8a2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b8a6:	fb07 5702 	mla	r7, r7, r2, r5
 801b8aa:	f10c 0201 	add.w	r2, ip, #1
 801b8ae:	1c75      	adds	r5, r6, #1
 801b8b0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b8b4:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801b8b8:	b2bf      	uxth	r7, r7
 801b8ba:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b8be:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b8c2:	ea45 0c0c 	orr.w	ip, r5, ip
 801b8c6:	1c7d      	adds	r5, r7, #1
 801b8c8:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801b8cc:	096d      	lsrs	r5, r5, #5
 801b8ce:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b8d2:	ea4c 0c05 	orr.w	ip, ip, r5
 801b8d6:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801b8da:	e7ba      	b.n	801b852 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801b8dc:	b007      	add	sp, #28
 801b8de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b8e2:	bf00      	nop
 801b8e4:	20012dc4 	.word	0x20012dc4

0801b8e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b8e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b8ec:	b087      	sub	sp, #28
 801b8ee:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801bbfc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801b8f2:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b8f4:	9205      	str	r2, [sp, #20]
 801b8f6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b8fa:	9101      	str	r1, [sp, #4]
 801b8fc:	6841      	ldr	r1, [r0, #4]
 801b8fe:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801b902:	fb01 2404 	mla	r4, r1, r4, r2
 801b906:	6802      	ldr	r2, [r0, #0]
 801b908:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b90c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801b910:	3201      	adds	r2, #1
 801b912:	f022 0201 	bic.w	r2, r2, #1
 801b916:	9202      	str	r2, [sp, #8]
 801b918:	f8db 2000 	ldr.w	r2, [fp]
 801b91c:	9203      	str	r2, [sp, #12]
 801b91e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b922:	9a01      	ldr	r2, [sp, #4]
 801b924:	2a00      	cmp	r2, #0
 801b926:	dc03      	bgt.n	801b930 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801b928:	9a05      	ldr	r2, [sp, #20]
 801b92a:	2a00      	cmp	r2, #0
 801b92c:	f340 8162 	ble.w	801bbf4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801b930:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b932:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801b936:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801b93a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b93e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b940:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b944:	2b00      	cmp	r3, #0
 801b946:	dd0e      	ble.n	801b966 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b948:	1402      	asrs	r2, r0, #16
 801b94a:	d405      	bmi.n	801b958 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b94c:	42ba      	cmp	r2, r7
 801b94e:	da03      	bge.n	801b958 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b950:	140a      	asrs	r2, r1, #16
 801b952:	d401      	bmi.n	801b958 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b954:	42b2      	cmp	r2, r6
 801b956:	db07      	blt.n	801b968 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b958:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b95a:	4410      	add	r0, r2
 801b95c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b95e:	3b01      	subs	r3, #1
 801b960:	4411      	add	r1, r2
 801b962:	3402      	adds	r4, #2
 801b964:	e7ee      	b.n	801b944 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801b966:	d017      	beq.n	801b998 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801b968:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b96a:	1e5a      	subs	r2, r3, #1
 801b96c:	fb05 0502 	mla	r5, r5, r2, r0
 801b970:	142d      	asrs	r5, r5, #16
 801b972:	d409      	bmi.n	801b988 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b974:	42bd      	cmp	r5, r7
 801b976:	da07      	bge.n	801b988 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b978:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b97a:	fb05 1202 	mla	r2, r5, r2, r1
 801b97e:	1412      	asrs	r2, r2, #16
 801b980:	d402      	bmi.n	801b988 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b982:	42b2      	cmp	r2, r6
 801b984:	f2c0 80c3 	blt.w	801bb0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801b988:	2500      	movs	r5, #0
 801b98a:	195a      	adds	r2, r3, r5
 801b98c:	2a00      	cmp	r2, #0
 801b98e:	dc3f      	bgt.n	801ba10 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b990:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b994:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b998:	9b01      	ldr	r3, [sp, #4]
 801b99a:	2b00      	cmp	r3, #0
 801b99c:	f340 812a 	ble.w	801bbf4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801b9a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b9a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b9a8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b9ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b9ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b9b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b9b6:	eeb0 6a62 	vmov.f32	s12, s5
 801b9ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b9be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b9c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b9c6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b9ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b9ce:	eeb0 6a43 	vmov.f32	s12, s6
 801b9d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b9d6:	ee12 2a90 	vmov	r2, s5
 801b9da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b9de:	fb92 f3f3 	sdiv	r3, r2, r3
 801b9e2:	ee13 2a10 	vmov	r2, s6
 801b9e6:	9313      	str	r3, [sp, #76]	; 0x4c
 801b9e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b9ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801b9ee:	9314      	str	r3, [sp, #80]	; 0x50
 801b9f0:	9b01      	ldr	r3, [sp, #4]
 801b9f2:	9a05      	ldr	r2, [sp, #20]
 801b9f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b9f8:	3b01      	subs	r3, #1
 801b9fa:	9301      	str	r3, [sp, #4]
 801b9fc:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ba00:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ba02:	eeb0 3a67 	vmov.f32	s6, s15
 801ba06:	bf08      	it	eq
 801ba08:	4613      	moveq	r3, r2
 801ba0a:	eef0 2a47 	vmov.f32	s5, s14
 801ba0e:	e788      	b.n	801b922 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ba10:	1406      	asrs	r6, r0, #16
 801ba12:	d42c      	bmi.n	801ba6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ba14:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ba18:	42b2      	cmp	r2, r6
 801ba1a:	dd28      	ble.n	801ba6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ba1c:	140f      	asrs	r7, r1, #16
 801ba1e:	d426      	bmi.n	801ba6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ba20:	f8db 200c 	ldr.w	r2, [fp, #12]
 801ba24:	42ba      	cmp	r2, r7
 801ba26:	dd22      	ble.n	801ba6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ba28:	9a02      	ldr	r2, [sp, #8]
 801ba2a:	fb07 6602 	mla	r6, r7, r2, r6
 801ba2e:	0872      	lsrs	r2, r6, #1
 801ba30:	9f03      	ldr	r7, [sp, #12]
 801ba32:	5cba      	ldrb	r2, [r7, r2]
 801ba34:	07f6      	lsls	r6, r6, #31
 801ba36:	bf54      	ite	pl
 801ba38:	f002 020f 	andpl.w	r2, r2, #15
 801ba3c:	1112      	asrmi	r2, r2, #4
 801ba3e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ba42:	b2d2      	uxtb	r2, r2
 801ba44:	2aff      	cmp	r2, #255	; 0xff
 801ba46:	d118      	bne.n	801ba7a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801ba48:	f8d8 2000 	ldr.w	r2, [r8]
 801ba4c:	f06f 0601 	mvn.w	r6, #1
 801ba50:	fb06 f705 	mul.w	r7, r6, r5
 801ba54:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801ba58:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801ba5c:	0956      	lsrs	r6, r2, #5
 801ba5e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ba62:	ea4c 0606 	orr.w	r6, ip, r6
 801ba66:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ba6a:	4316      	orrs	r6, r2
 801ba6c:	53e6      	strh	r6, [r4, r7]
 801ba6e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ba70:	4410      	add	r0, r2
 801ba72:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ba74:	3d01      	subs	r5, #1
 801ba76:	4411      	add	r1, r2
 801ba78:	e787      	b.n	801b98a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ba7a:	2a00      	cmp	r2, #0
 801ba7c:	d0f7      	beq.n	801ba6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ba7e:	f06f 0601 	mvn.w	r6, #1
 801ba82:	436e      	muls	r6, r5
 801ba84:	f8d8 c000 	ldr.w	ip, [r8]
 801ba88:	f834 e006 	ldrh.w	lr, [r4, r6]
 801ba8c:	9604      	str	r6, [sp, #16]
 801ba8e:	fa1f f982 	uxth.w	r9, r2
 801ba92:	ea4f 272e 	mov.w	r7, lr, asr #8
 801ba96:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801ba9a:	43d2      	mvns	r2, r2
 801ba9c:	b2d2      	uxtb	r2, r2
 801ba9e:	fb16 f609 	smulbb	r6, r6, r9
 801baa2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801baa6:	fb07 6702 	mla	r7, r7, r2, r6
 801baaa:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801baae:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801bab2:	fa5f fc8c 	uxtb.w	ip, ip
 801bab6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801baba:	fa5f fe8e 	uxtb.w	lr, lr
 801babe:	fb1c fc09 	smulbb	ip, ip, r9
 801bac2:	fb0e cc02 	mla	ip, lr, r2, ip
 801bac6:	b2bf      	uxth	r7, r7
 801bac8:	fb1a fa09 	smulbb	sl, sl, r9
 801bacc:	fa1f fc8c 	uxth.w	ip, ip
 801bad0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bad4:	fb06 a602 	mla	r6, r6, r2, sl
 801bad8:	1c7a      	adds	r2, r7, #1
 801bada:	f10c 0a01 	add.w	sl, ip, #1
 801bade:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801bae2:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801bae6:	b2b6      	uxth	r6, r6
 801bae8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801baec:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801baf0:	ea4a 0707 	orr.w	r7, sl, r7
 801baf4:	f106 0a01 	add.w	sl, r6, #1
 801baf8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bafc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bb00:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bb04:	9a04      	ldr	r2, [sp, #16]
 801bb06:	ea47 070a 	orr.w	r7, r7, sl
 801bb0a:	52a7      	strh	r7, [r4, r2]
 801bb0c:	e7af      	b.n	801ba6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bb0e:	f04f 0e00 	mov.w	lr, #0
 801bb12:	eba3 020e 	sub.w	r2, r3, lr
 801bb16:	2a00      	cmp	r2, #0
 801bb18:	f77f af3a 	ble.w	801b990 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bb1c:	9e02      	ldr	r6, [sp, #8]
 801bb1e:	1402      	asrs	r2, r0, #16
 801bb20:	140d      	asrs	r5, r1, #16
 801bb22:	fb06 2505 	mla	r5, r6, r5, r2
 801bb26:	086a      	lsrs	r2, r5, #1
 801bb28:	9e03      	ldr	r6, [sp, #12]
 801bb2a:	5cb2      	ldrb	r2, [r6, r2]
 801bb2c:	07ed      	lsls	r5, r5, #31
 801bb2e:	bf54      	ite	pl
 801bb30:	f002 020f 	andpl.w	r2, r2, #15
 801bb34:	1112      	asrmi	r2, r2, #4
 801bb36:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bb3a:	b2d2      	uxtb	r2, r2
 801bb3c:	2aff      	cmp	r2, #255	; 0xff
 801bb3e:	d115      	bne.n	801bb6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801bb40:	f8d8 5000 	ldr.w	r5, [r8]
 801bb44:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801bb48:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801bb4c:	096a      	lsrs	r2, r5, #5
 801bb4e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bb52:	4332      	orrs	r2, r6
 801bb54:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bb58:	432a      	orrs	r2, r5
 801bb5a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801bb5e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bb60:	4410      	add	r0, r2
 801bb62:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bb64:	f10e 0e01 	add.w	lr, lr, #1
 801bb68:	4411      	add	r1, r2
 801bb6a:	e7d2      	b.n	801bb12 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801bb6c:	2a00      	cmp	r2, #0
 801bb6e:	d0f6      	beq.n	801bb5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bb70:	f8d8 7000 	ldr.w	r7, [r8]
 801bb74:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801bb78:	fa1f f982 	uxth.w	r9, r2
 801bb7c:	ea4f 262c 	mov.w	r6, ip, asr #8
 801bb80:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801bb84:	43d2      	mvns	r2, r2
 801bb86:	b2d2      	uxtb	r2, r2
 801bb88:	fb15 f509 	smulbb	r5, r5, r9
 801bb8c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bb90:	fb06 5602 	mla	r6, r6, r2, r5
 801bb94:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801bb98:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801bb9c:	b2ff      	uxtb	r7, r7
 801bb9e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bba2:	fa5f fc8c 	uxtb.w	ip, ip
 801bba6:	fb17 f709 	smulbb	r7, r7, r9
 801bbaa:	fb0c 7702 	mla	r7, ip, r2, r7
 801bbae:	b2b6      	uxth	r6, r6
 801bbb0:	fb1a fa09 	smulbb	sl, sl, r9
 801bbb4:	b2bf      	uxth	r7, r7
 801bbb6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bbba:	fb05 a502 	mla	r5, r5, r2, sl
 801bbbe:	1c72      	adds	r2, r6, #1
 801bbc0:	f107 0a01 	add.w	sl, r7, #1
 801bbc4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801bbc8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801bbcc:	b2ad      	uxth	r5, r5
 801bbce:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bbd2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bbd6:	ea4a 0606 	orr.w	r6, sl, r6
 801bbda:	f105 0a01 	add.w	sl, r5, #1
 801bbde:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bbe2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bbe6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bbea:	ea46 060a 	orr.w	r6, r6, sl
 801bbee:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801bbf2:	e7b4      	b.n	801bb5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bbf4:	b007      	add	sp, #28
 801bbf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bbfa:	bf00      	nop
 801bbfc:	20012dc4 	.word	0x20012dc4

0801bc00 <_ZN8touchgfx8LCD16bppD1Ev>:
 801bc00:	4770      	bx	lr

0801bc02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801bc02:	4770      	bx	lr

0801bc04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801bc04:	4770      	bx	lr

0801bc06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801bc06:	4770      	bx	lr

0801bc08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801bc08:	4770      	bx	lr

0801bc0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801bc0a:	4770      	bx	lr

0801bc0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801bc0c:	4770      	bx	lr

0801bc0e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801bc0e:	4770      	bx	lr

0801bc10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bc10:	4770      	bx	lr

0801bc12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bc12:	4770      	bx	lr

0801bc14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bc14:	4770      	bx	lr

0801bc16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bc16:	4770      	bx	lr

0801bc18 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bc18:	4770      	bx	lr

0801bc1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801bc1a:	4770      	bx	lr

0801bc1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bc1c:	4770      	bx	lr

0801bc1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bc1e:	4770      	bx	lr

0801bc20 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bc20:	4770      	bx	lr

0801bc22 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801bc22:	4770      	bx	lr

0801bc24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bc24:	4770      	bx	lr

0801bc26 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bc26:	4770      	bx	lr

0801bc28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bc28:	4770      	bx	lr

0801bc2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bc2a:	4770      	bx	lr

0801bc2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bc2c:	4770      	bx	lr

0801bc2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bc2e:	4770      	bx	lr

0801bc30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bc30:	4770      	bx	lr

0801bc32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801bc32:	4770      	bx	lr

0801bc34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bc34:	4770      	bx	lr

0801bc36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801bc36:	4770      	bx	lr

0801bc38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bc38:	4770      	bx	lr

0801bc3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801bc3a:	4770      	bx	lr

0801bc3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bc3c:	4770      	bx	lr

0801bc3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801bc3e:	4770      	bx	lr

0801bc40 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801bc40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bc44:	b088      	sub	sp, #32
 801bc46:	ac08      	add	r4, sp, #32
 801bc48:	4606      	mov	r6, r0
 801bc4a:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801bc4e:	4620      	mov	r0, r4
 801bc50:	4688      	mov	r8, r1
 801bc52:	4691      	mov	r9, r2
 801bc54:	f7fd fc62 	bl	801951c <_ZNK8touchgfx6Bitmap7getDataEv>
 801bc58:	6833      	ldr	r3, [r6, #0]
 801bc5a:	4605      	mov	r5, r0
 801bc5c:	4620      	mov	r0, r4
 801bc5e:	699f      	ldr	r7, [r3, #24]
 801bc60:	f7fd fb70 	bl	8019344 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801bc64:	4682      	mov	sl, r0
 801bc66:	4620      	mov	r0, r4
 801bc68:	f7fd fba0 	bl	80193ac <_ZNK8touchgfx6Bitmap9getHeightEv>
 801bc6c:	9500      	str	r5, [sp, #0]
 801bc6e:	e9cd a001 	strd	sl, r0, [sp, #4]
 801bc72:	464b      	mov	r3, r9
 801bc74:	a806      	add	r0, sp, #24
 801bc76:	4642      	mov	r2, r8
 801bc78:	4631      	mov	r1, r6
 801bc7a:	47b8      	blx	r7
 801bc7c:	4628      	mov	r0, r5
 801bc7e:	b008      	add	sp, #32
 801bc80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801bc84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801bc84:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801bc88:	2300      	movs	r3, #0
 801bc8a:	9300      	str	r3, [sp, #0]
 801bc8c:	4b3d      	ldr	r3, [pc, #244]	; (801bd84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801bc8e:	781b      	ldrb	r3, [r3, #0]
 801bc90:	2b00      	cmp	r3, #0
 801bc92:	d137      	bne.n	801bd04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801bc94:	4a3c      	ldr	r2, [pc, #240]	; (801bd88 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801bc96:	f9b2 2000 	ldrsh.w	r2, [r2]
 801bc9a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801bc9e:	2b00      	cmp	r3, #0
 801bca0:	d132      	bne.n	801bd08 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801bca2:	4b3a      	ldr	r3, [pc, #232]	; (801bd8c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801bca4:	f9b3 3000 	ldrsh.w	r3, [r3]
 801bca8:	6808      	ldr	r0, [r1, #0]
 801bcaa:	6849      	ldr	r1, [r1, #4]
 801bcac:	f8ad 3006 	strh.w	r3, [sp, #6]
 801bcb0:	ac02      	add	r4, sp, #8
 801bcb2:	ab02      	add	r3, sp, #8
 801bcb4:	c303      	stmia	r3!, {r0, r1}
 801bcb6:	4669      	mov	r1, sp
 801bcb8:	4620      	mov	r0, r4
 801bcba:	f7f9 fdc1 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bcbe:	4668      	mov	r0, sp
 801bcc0:	f7f9 fd7a 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bcc4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801bcc8:	f8bd 2000 	ldrh.w	r2, [sp]
 801bccc:	4d30      	ldr	r5, [pc, #192]	; (801bd90 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801bcce:	4413      	add	r3, r2
 801bcd0:	f8ad 3008 	strh.w	r3, [sp, #8]
 801bcd4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801bcd8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801bcdc:	6828      	ldr	r0, [r5, #0]
 801bcde:	4413      	add	r3, r2
 801bce0:	f8ad 300a 	strh.w	r3, [sp, #10]
 801bce4:	6803      	ldr	r3, [r0, #0]
 801bce6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bce8:	4798      	blx	r3
 801bcea:	f010 0f01 	tst.w	r0, #1
 801bcee:	462f      	mov	r7, r5
 801bcf0:	d00c      	beq.n	801bd0c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801bcf2:	6828      	ldr	r0, [r5, #0]
 801bcf4:	6803      	ldr	r3, [r0, #0]
 801bcf6:	e894 0006 	ldmia.w	r4, {r1, r2}
 801bcfa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801bcfc:	4798      	blx	r3
 801bcfe:	b004      	add	sp, #16
 801bd00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bd04:	4a21      	ldr	r2, [pc, #132]	; (801bd8c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801bd06:	e7c6      	b.n	801bc96 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801bd08:	4b1f      	ldr	r3, [pc, #124]	; (801bd88 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801bd0a:	e7cb      	b.n	801bca4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801bd0c:	6838      	ldr	r0, [r7, #0]
 801bd0e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801bd12:	6803      	ldr	r3, [r0, #0]
 801bd14:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801bd18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801bd1a:	4798      	blx	r3
 801bd1c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801bd20:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801bd24:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801bd28:	fb16 3602 	smlabb	r6, r6, r2, r3
 801bd2c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801bd30:	6838      	ldr	r0, [r7, #0]
 801bd32:	6803      	ldr	r3, [r0, #0]
 801bd34:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bd36:	4798      	blx	r3
 801bd38:	4a13      	ldr	r2, [pc, #76]	; (801bd88 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801bd3a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801bd3e:	8813      	ldrh	r3, [r2, #0]
 801bd40:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801bd44:	fb03 1404 	mla	r4, r3, r4, r1
 801bd48:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801bd4c:	435d      	muls	r5, r3
 801bd4e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801bd52:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801bd56:	4691      	mov	r9, r2
 801bd58:	6838      	ldr	r0, [r7, #0]
 801bd5a:	42ac      	cmp	r4, r5
 801bd5c:	6803      	ldr	r3, [r0, #0]
 801bd5e:	d20e      	bcs.n	801bd7e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801bd60:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801bd64:	4632      	mov	r2, r6
 801bd66:	4643      	mov	r3, r8
 801bd68:	4621      	mov	r1, r4
 801bd6a:	47d0      	blx	sl
 801bd6c:	f8b9 3000 	ldrh.w	r3, [r9]
 801bd70:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bd74:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801bd78:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801bd7c:	e7ec      	b.n	801bd58 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801bd7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bd80:	4798      	blx	r3
 801bd82:	e7bc      	b.n	801bcfe <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801bd84:	20012dac 	.word	0x20012dac
 801bd88:	20012dae 	.word	0x20012dae
 801bd8c:	20012db0 	.word	0x20012db0
 801bd90:	20012db4 	.word	0x20012db4

0801bd94 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801bd94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd98:	b08b      	sub	sp, #44	; 0x2c
 801bd9a:	460f      	mov	r7, r1
 801bd9c:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801bda0:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801bda4:	4616      	mov	r6, r2
 801bda6:	f1bb 0f00 	cmp.w	fp, #0
 801bdaa:	d04a      	beq.n	801be42 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801bdac:	6810      	ldr	r0, [r2, #0]
 801bdae:	6851      	ldr	r1, [r2, #4]
 801bdb0:	ad06      	add	r5, sp, #24
 801bdb2:	c503      	stmia	r5!, {r0, r1}
 801bdb4:	6818      	ldr	r0, [r3, #0]
 801bdb6:	6859      	ldr	r1, [r3, #4]
 801bdb8:	ad08      	add	r5, sp, #32
 801bdba:	c503      	stmia	r5!, {r0, r1}
 801bdbc:	a806      	add	r0, sp, #24
 801bdbe:	f7f9 fcfb 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bdc2:	4631      	mov	r1, r6
 801bdc4:	a808      	add	r0, sp, #32
 801bdc6:	f7f9 fd3b 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bdca:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801bdce:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801bdd2:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801bdd6:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801bdda:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801bdde:	fb16 2103 	smlabb	r1, r6, r3, r2
 801bde2:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801bde6:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801bdea:	4f5f      	ldr	r7, [pc, #380]	; (801bf68 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801bdec:	440a      	add	r2, r1
 801bdee:	f8ad 2020 	strh.w	r2, [sp, #32]
 801bdf2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801bdf6:	6838      	ldr	r0, [r7, #0]
 801bdf8:	4413      	add	r3, r2
 801bdfa:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801bdfe:	6803      	ldr	r3, [r0, #0]
 801be00:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801be02:	4798      	blx	r3
 801be04:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801be08:	46b9      	mov	r9, r7
 801be0a:	d11d      	bne.n	801be48 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801be0c:	b9fc      	cbnz	r4, 801be4e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801be0e:	f010 0f01 	tst.w	r0, #1
 801be12:	d01c      	beq.n	801be4e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801be14:	f8d9 0000 	ldr.w	r0, [r9]
 801be18:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801be1c:	6801      	ldr	r1, [r0, #0]
 801be1e:	f8cd b00c 	str.w	fp, [sp, #12]
 801be22:	2700      	movs	r7, #0
 801be24:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801be28:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801be2c:	9402      	str	r4, [sp, #8]
 801be2e:	b2ad      	uxth	r5, r5
 801be30:	fa1f f488 	uxth.w	r4, r8
 801be34:	9501      	str	r5, [sp, #4]
 801be36:	9400      	str	r4, [sp, #0]
 801be38:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801be3a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801be3e:	4631      	mov	r1, r6
 801be40:	47a0      	blx	r4
 801be42:	b00b      	add	sp, #44	; 0x2c
 801be44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be48:	f010 0f04 	tst.w	r0, #4
 801be4c:	e7e1      	b.n	801be12 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801be4e:	f8d9 0000 	ldr.w	r0, [r9]
 801be52:	6803      	ldr	r3, [r0, #0]
 801be54:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801be56:	4798      	blx	r3
 801be58:	4b44      	ldr	r3, [pc, #272]	; (801bf6c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801be5a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801be5e:	881a      	ldrh	r2, [r3, #0]
 801be60:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801be64:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801be68:	fb02 1404 	mla	r4, r2, r4, r1
 801be6c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801be70:	469a      	mov	sl, r3
 801be72:	fb05 f502 	mul.w	r5, r5, r2
 801be76:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801be7a:	d059      	beq.n	801bf30 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801be7c:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801be80:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801be84:	fa1f f28b 	uxth.w	r2, fp
 801be88:	fa1f f989 	uxth.w	r9, r9
 801be8c:	469e      	mov	lr, r3
 801be8e:	42ac      	cmp	r4, r5
 801be90:	d264      	bcs.n	801bf5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801be92:	eb04 0a07 	add.w	sl, r4, r7
 801be96:	4554      	cmp	r4, sl
 801be98:	d23d      	bcs.n	801bf16 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801be9a:	8821      	ldrh	r1, [r4, #0]
 801be9c:	f836 3b02 	ldrh.w	r3, [r6], #2
 801bea0:	1208      	asrs	r0, r1, #8
 801bea2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801bea6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801beaa:	fb10 f009 	smulbb	r0, r0, r9
 801beae:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801beb2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801beb6:	00c9      	lsls	r1, r1, #3
 801beb8:	fb0c 0c02 	mla	ip, ip, r2, r0
 801bebc:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801bec0:	10d8      	asrs	r0, r3, #3
 801bec2:	b2c9      	uxtb	r1, r1
 801bec4:	00db      	lsls	r3, r3, #3
 801bec6:	fa1f fc8c 	uxth.w	ip, ip
 801beca:	fb1b fb09 	smulbb	fp, fp, r9
 801bece:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801bed2:	b2db      	uxtb	r3, r3
 801bed4:	fb11 f109 	smulbb	r1, r1, r9
 801bed8:	fb00 b002 	mla	r0, r0, r2, fp
 801bedc:	fb03 1302 	mla	r3, r3, r2, r1
 801bee0:	f10c 0b01 	add.w	fp, ip, #1
 801bee4:	b29b      	uxth	r3, r3
 801bee6:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801beea:	b280      	uxth	r0, r0
 801beec:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801bef0:	f103 0c01 	add.w	ip, r3, #1
 801bef4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801bef8:	1c43      	adds	r3, r0, #1
 801befa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801befe:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801bf02:	0940      	lsrs	r0, r0, #5
 801bf04:	ea4c 0c0b 	orr.w	ip, ip, fp
 801bf08:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bf0c:	ea4c 0c00 	orr.w	ip, ip, r0
 801bf10:	f824 cb02 	strh.w	ip, [r4], #2
 801bf14:	e7bf      	b.n	801be96 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801bf16:	f8be 3000 	ldrh.w	r3, [lr]
 801bf1a:	eba3 0308 	sub.w	r3, r3, r8
 801bf1e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bf22:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801bf26:	eba3 0308 	sub.w	r3, r3, r8
 801bf2a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801bf2e:	e7ae      	b.n	801be8e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801bf30:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801bf34:	f8d9 0000 	ldr.w	r0, [r9]
 801bf38:	42ac      	cmp	r4, r5
 801bf3a:	6803      	ldr	r3, [r0, #0]
 801bf3c:	d20e      	bcs.n	801bf5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801bf3e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801bf42:	4632      	mov	r2, r6
 801bf44:	463b      	mov	r3, r7
 801bf46:	4621      	mov	r1, r4
 801bf48:	47c0      	blx	r8
 801bf4a:	f8ba 3000 	ldrh.w	r3, [sl]
 801bf4e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bf52:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801bf56:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801bf5a:	e7eb      	b.n	801bf34 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801bf5c:	4b02      	ldr	r3, [pc, #8]	; (801bf68 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801bf5e:	6818      	ldr	r0, [r3, #0]
 801bf60:	6803      	ldr	r3, [r0, #0]
 801bf62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bf64:	4798      	blx	r3
 801bf66:	e76c      	b.n	801be42 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801bf68:	20012db4 	.word	0x20012db4
 801bf6c:	20012dae 	.word	0x20012dae

0801bf70 <_ZN8touchgfx8LCD16bppD0Ev>:
 801bf70:	b510      	push	{r4, lr}
 801bf72:	2184      	movs	r1, #132	; 0x84
 801bf74:	4604      	mov	r4, r0
 801bf76:	f00d fe4a 	bl	8029c0e <_ZdlPvj>
 801bf7a:	4620      	mov	r0, r4
 801bf7c:	bd10      	pop	{r4, pc}

0801bf7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801bf7e:	b510      	push	{r4, lr}
 801bf80:	2104      	movs	r1, #4
 801bf82:	4604      	mov	r4, r0
 801bf84:	f00d fe43 	bl	8029c0e <_ZdlPvj>
 801bf88:	4620      	mov	r0, r4
 801bf8a:	bd10      	pop	{r4, pc}

0801bf8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801bf8c:	b510      	push	{r4, lr}
 801bf8e:	2104      	movs	r1, #4
 801bf90:	4604      	mov	r4, r0
 801bf92:	f00d fe3c 	bl	8029c0e <_ZdlPvj>
 801bf96:	4620      	mov	r0, r4
 801bf98:	bd10      	pop	{r4, pc}

0801bf9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801bf9a:	b510      	push	{r4, lr}
 801bf9c:	f640 0144 	movw	r1, #2116	; 0x844
 801bfa0:	4604      	mov	r4, r0
 801bfa2:	f00d fe34 	bl	8029c0e <_ZdlPvj>
 801bfa6:	4620      	mov	r0, r4
 801bfa8:	bd10      	pop	{r4, pc}

0801bfaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801bfaa:	b510      	push	{r4, lr}
 801bfac:	2104      	movs	r1, #4
 801bfae:	4604      	mov	r4, r0
 801bfb0:	f00d fe2d 	bl	8029c0e <_ZdlPvj>
 801bfb4:	4620      	mov	r0, r4
 801bfb6:	bd10      	pop	{r4, pc}

0801bfb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801bfb8:	b510      	push	{r4, lr}
 801bfba:	2104      	movs	r1, #4
 801bfbc:	4604      	mov	r4, r0
 801bfbe:	f00d fe26 	bl	8029c0e <_ZdlPvj>
 801bfc2:	4620      	mov	r0, r4
 801bfc4:	bd10      	pop	{r4, pc}

0801bfc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801bfc6:	b510      	push	{r4, lr}
 801bfc8:	2104      	movs	r1, #4
 801bfca:	4604      	mov	r4, r0
 801bfcc:	f00d fe1f 	bl	8029c0e <_ZdlPvj>
 801bfd0:	4620      	mov	r0, r4
 801bfd2:	bd10      	pop	{r4, pc}

0801bfd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801bfd4:	b510      	push	{r4, lr}
 801bfd6:	2104      	movs	r1, #4
 801bfd8:	4604      	mov	r4, r0
 801bfda:	f00d fe18 	bl	8029c0e <_ZdlPvj>
 801bfde:	4620      	mov	r0, r4
 801bfe0:	bd10      	pop	{r4, pc}

0801bfe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801bfe2:	b510      	push	{r4, lr}
 801bfe4:	2104      	movs	r1, #4
 801bfe6:	4604      	mov	r4, r0
 801bfe8:	f00d fe11 	bl	8029c0e <_ZdlPvj>
 801bfec:	4620      	mov	r0, r4
 801bfee:	bd10      	pop	{r4, pc}

0801bff0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801bff0:	b510      	push	{r4, lr}
 801bff2:	2104      	movs	r1, #4
 801bff4:	4604      	mov	r4, r0
 801bff6:	f00d fe0a 	bl	8029c0e <_ZdlPvj>
 801bffa:	4620      	mov	r0, r4
 801bffc:	bd10      	pop	{r4, pc}

0801bffe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801bffe:	b510      	push	{r4, lr}
 801c000:	2104      	movs	r1, #4
 801c002:	4604      	mov	r4, r0
 801c004:	f00d fe03 	bl	8029c0e <_ZdlPvj>
 801c008:	4620      	mov	r0, r4
 801c00a:	bd10      	pop	{r4, pc}

0801c00c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801c00c:	b510      	push	{r4, lr}
 801c00e:	2104      	movs	r1, #4
 801c010:	4604      	mov	r4, r0
 801c012:	f00d fdfc 	bl	8029c0e <_ZdlPvj>
 801c016:	4620      	mov	r0, r4
 801c018:	bd10      	pop	{r4, pc}

0801c01a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c01a:	b510      	push	{r4, lr}
 801c01c:	2104      	movs	r1, #4
 801c01e:	4604      	mov	r4, r0
 801c020:	f00d fdf5 	bl	8029c0e <_ZdlPvj>
 801c024:	4620      	mov	r0, r4
 801c026:	bd10      	pop	{r4, pc}

0801c028 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c028:	b510      	push	{r4, lr}
 801c02a:	2104      	movs	r1, #4
 801c02c:	4604      	mov	r4, r0
 801c02e:	f00d fdee 	bl	8029c0e <_ZdlPvj>
 801c032:	4620      	mov	r0, r4
 801c034:	bd10      	pop	{r4, pc}

0801c036 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c036:	b510      	push	{r4, lr}
 801c038:	2104      	movs	r1, #4
 801c03a:	4604      	mov	r4, r0
 801c03c:	f00d fde7 	bl	8029c0e <_ZdlPvj>
 801c040:	4620      	mov	r0, r4
 801c042:	bd10      	pop	{r4, pc}

0801c044 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c044:	b510      	push	{r4, lr}
 801c046:	2104      	movs	r1, #4
 801c048:	4604      	mov	r4, r0
 801c04a:	f00d fde0 	bl	8029c0e <_ZdlPvj>
 801c04e:	4620      	mov	r0, r4
 801c050:	bd10      	pop	{r4, pc}

0801c052 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c052:	b510      	push	{r4, lr}
 801c054:	2104      	movs	r1, #4
 801c056:	4604      	mov	r4, r0
 801c058:	f00d fdd9 	bl	8029c0e <_ZdlPvj>
 801c05c:	4620      	mov	r0, r4
 801c05e:	bd10      	pop	{r4, pc}

0801c060 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c060:	b510      	push	{r4, lr}
 801c062:	2104      	movs	r1, #4
 801c064:	4604      	mov	r4, r0
 801c066:	f00d fdd2 	bl	8029c0e <_ZdlPvj>
 801c06a:	4620      	mov	r0, r4
 801c06c:	bd10      	pop	{r4, pc}

0801c06e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c06e:	b510      	push	{r4, lr}
 801c070:	2104      	movs	r1, #4
 801c072:	4604      	mov	r4, r0
 801c074:	f00d fdcb 	bl	8029c0e <_ZdlPvj>
 801c078:	4620      	mov	r0, r4
 801c07a:	bd10      	pop	{r4, pc}

0801c07c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c07c:	b510      	push	{r4, lr}
 801c07e:	2104      	movs	r1, #4
 801c080:	4604      	mov	r4, r0
 801c082:	f00d fdc4 	bl	8029c0e <_ZdlPvj>
 801c086:	4620      	mov	r0, r4
 801c088:	bd10      	pop	{r4, pc}

0801c08a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c08a:	b510      	push	{r4, lr}
 801c08c:	2104      	movs	r1, #4
 801c08e:	4604      	mov	r4, r0
 801c090:	f00d fdbd 	bl	8029c0e <_ZdlPvj>
 801c094:	4620      	mov	r0, r4
 801c096:	bd10      	pop	{r4, pc}

0801c098 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c098:	b510      	push	{r4, lr}
 801c09a:	2104      	movs	r1, #4
 801c09c:	4604      	mov	r4, r0
 801c09e:	f00d fdb6 	bl	8029c0e <_ZdlPvj>
 801c0a2:	4620      	mov	r0, r4
 801c0a4:	bd10      	pop	{r4, pc}

0801c0a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c0a6:	b510      	push	{r4, lr}
 801c0a8:	2104      	movs	r1, #4
 801c0aa:	4604      	mov	r4, r0
 801c0ac:	f00d fdaf 	bl	8029c0e <_ZdlPvj>
 801c0b0:	4620      	mov	r0, r4
 801c0b2:	bd10      	pop	{r4, pc}

0801c0b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c0b4:	b510      	push	{r4, lr}
 801c0b6:	2104      	movs	r1, #4
 801c0b8:	4604      	mov	r4, r0
 801c0ba:	f00d fda8 	bl	8029c0e <_ZdlPvj>
 801c0be:	4620      	mov	r0, r4
 801c0c0:	bd10      	pop	{r4, pc}

0801c0c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c0c2:	b510      	push	{r4, lr}
 801c0c4:	2104      	movs	r1, #4
 801c0c6:	4604      	mov	r4, r0
 801c0c8:	f00d fda1 	bl	8029c0e <_ZdlPvj>
 801c0cc:	4620      	mov	r0, r4
 801c0ce:	bd10      	pop	{r4, pc}

0801c0d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c0d0:	b510      	push	{r4, lr}
 801c0d2:	2104      	movs	r1, #4
 801c0d4:	4604      	mov	r4, r0
 801c0d6:	f00d fd9a 	bl	8029c0e <_ZdlPvj>
 801c0da:	4620      	mov	r0, r4
 801c0dc:	bd10      	pop	{r4, pc}

0801c0de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c0de:	b510      	push	{r4, lr}
 801c0e0:	2104      	movs	r1, #4
 801c0e2:	4604      	mov	r4, r0
 801c0e4:	f00d fd93 	bl	8029c0e <_ZdlPvj>
 801c0e8:	4620      	mov	r0, r4
 801c0ea:	bd10      	pop	{r4, pc}

0801c0ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c0ec:	b510      	push	{r4, lr}
 801c0ee:	2104      	movs	r1, #4
 801c0f0:	4604      	mov	r4, r0
 801c0f2:	f00d fd8c 	bl	8029c0e <_ZdlPvj>
 801c0f6:	4620      	mov	r0, r4
 801c0f8:	bd10      	pop	{r4, pc}

0801c0fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801c0fa:	b510      	push	{r4, lr}
 801c0fc:	2104      	movs	r1, #4
 801c0fe:	4604      	mov	r4, r0
 801c100:	f00d fd85 	bl	8029c0e <_ZdlPvj>
 801c104:	4620      	mov	r0, r4
 801c106:	bd10      	pop	{r4, pc}

0801c108 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801c108:	b510      	push	{r4, lr}
 801c10a:	2104      	movs	r1, #4
 801c10c:	4604      	mov	r4, r0
 801c10e:	f00d fd7e 	bl	8029c0e <_ZdlPvj>
 801c112:	4620      	mov	r0, r4
 801c114:	bd10      	pop	{r4, pc}

0801c116 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801c116:	b510      	push	{r4, lr}
 801c118:	2104      	movs	r1, #4
 801c11a:	4604      	mov	r4, r0
 801c11c:	f00d fd77 	bl	8029c0e <_ZdlPvj>
 801c120:	4620      	mov	r0, r4
 801c122:	bd10      	pop	{r4, pc}

0801c124 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801c124:	b510      	push	{r4, lr}
 801c126:	2104      	movs	r1, #4
 801c128:	4604      	mov	r4, r0
 801c12a:	f00d fd70 	bl	8029c0e <_ZdlPvj>
 801c12e:	4620      	mov	r0, r4
 801c130:	bd10      	pop	{r4, pc}
	...

0801c134 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c134:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c138:	b08f      	sub	sp, #60	; 0x3c
 801c13a:	461c      	mov	r4, r3
 801c13c:	9205      	str	r2, [sp, #20]
 801c13e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c142:	9100      	str	r1, [sp, #0]
 801c144:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c146:	9201      	str	r2, [sp, #4]
 801c148:	2a00      	cmp	r2, #0
 801c14a:	f000 8115 	beq.w	801c378 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801c14e:	6820      	ldr	r0, [r4, #0]
 801c150:	6861      	ldr	r1, [r4, #4]
 801c152:	aa0a      	add	r2, sp, #40	; 0x28
 801c154:	c203      	stmia	r2!, {r0, r1}
 801c156:	6818      	ldr	r0, [r3, #0]
 801c158:	6859      	ldr	r1, [r3, #4]
 801c15a:	aa0c      	add	r2, sp, #48	; 0x30
 801c15c:	c203      	stmia	r2!, {r0, r1}
 801c15e:	a80a      	add	r0, sp, #40	; 0x28
 801c160:	f7f9 fb2a 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c164:	4621      	mov	r1, r4
 801c166:	a80c      	add	r0, sp, #48	; 0x30
 801c168:	f7f9 fb6a 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c16c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c170:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801c174:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801c178:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c17c:	bfde      	ittt	le
 801c17e:	b2b3      	uxthle	r3, r6
 801c180:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c184:	fb92 f3f3 	sdivle	r3, r2, r3
 801c188:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c18c:	bfc8      	it	gt
 801c18e:	2301      	movgt	r3, #1
 801c190:	fb92 f1f3 	sdiv	r1, r2, r3
 801c194:	fa1f fc81 	uxth.w	ip, r1
 801c198:	fb0c 2413 	mls	r4, ip, r3, r2
 801c19c:	fb14 f406 	smulbb	r4, r4, r6
 801c1a0:	441d      	add	r5, r3
 801c1a2:	4404      	add	r4, r0
 801c1a4:	4661      	mov	r1, ip
 801c1a6:	3d01      	subs	r5, #1
 801c1a8:	b2a4      	uxth	r4, r4
 801c1aa:	fb95 f5f3 	sdiv	r5, r5, r3
 801c1ae:	b131      	cbz	r1, 801c1be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801c1b0:	9b05      	ldr	r3, [sp, #20]
 801c1b2:	9900      	ldr	r1, [sp, #0]
 801c1b4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c1b8:	ba1b      	rev	r3, r3
 801c1ba:	4419      	add	r1, r3
 801c1bc:	9100      	str	r1, [sp, #0]
 801c1be:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c1c2:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801c1c6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c1ca:	4418      	add	r0, r3
 801c1cc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c1d0:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801c1d4:	441a      	add	r2, r3
 801c1d6:	4b6a      	ldr	r3, [pc, #424]	; (801c380 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c1d8:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801c1dc:	6818      	ldr	r0, [r3, #0]
 801c1de:	6803      	ldr	r3, [r0, #0]
 801c1e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c1e2:	4798      	blx	r3
 801c1e4:	4967      	ldr	r1, [pc, #412]	; (801c384 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801c1e6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c1ea:	880b      	ldrh	r3, [r1, #0]
 801c1ec:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801c1f0:	9109      	str	r1, [sp, #36]	; 0x24
 801c1f2:	fb03 c202 	mla	r2, r3, r2, ip
 801c1f6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c1fa:	4373      	muls	r3, r6
 801c1fc:	b2ad      	uxth	r5, r5
 801c1fe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c202:	00ad      	lsls	r5, r5, #2
 801c204:	9306      	str	r3, [sp, #24]
 801c206:	1d2b      	adds	r3, r5, #4
 801c208:	9307      	str	r3, [sp, #28]
 801c20a:	9b01      	ldr	r3, [sp, #4]
 801c20c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801c210:	9103      	str	r1, [sp, #12]
 801c212:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801c216:	2c00      	cmp	r4, #0
 801c218:	bf0c      	ite	eq
 801c21a:	46c6      	moveq	lr, r8
 801c21c:	f04f 0e00 	movne.w	lr, #0
 801c220:	2300      	movs	r3, #0
 801c222:	b292      	uxth	r2, r2
 801c224:	fa1f fe8e 	uxth.w	lr, lr
 801c228:	9302      	str	r3, [sp, #8]
 801c22a:	9204      	str	r2, [sp, #16]
 801c22c:	9a06      	ldr	r2, [sp, #24]
 801c22e:	4282      	cmp	r2, r0
 801c230:	f240 809d 	bls.w	801c36e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801c234:	b963      	cbnz	r3, 801c250 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c236:	9b00      	ldr	r3, [sp, #0]
 801c238:	781a      	ldrb	r2, [r3, #0]
 801c23a:	0993      	lsrs	r3, r2, #6
 801c23c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c240:	9202      	str	r2, [sp, #8]
 801c242:	1e5a      	subs	r2, r3, #1
 801c244:	2a02      	cmp	r2, #2
 801c246:	d815      	bhi.n	801c274 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801c248:	9a00      	ldr	r2, [sp, #0]
 801c24a:	3201      	adds	r2, #1
 801c24c:	9200      	str	r2, [sp, #0]
 801c24e:	b29b      	uxth	r3, r3
 801c250:	b1b4      	cbz	r4, 801c280 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801c252:	429c      	cmp	r4, r3
 801c254:	bf95      	itete	ls
 801c256:	1b1c      	subls	r4, r3, r4
 801c258:	1ae4      	subhi	r4, r4, r3
 801c25a:	fa1f fa84 	uxthls.w	sl, r4
 801c25e:	b2a4      	uxthhi	r4, r4
 801c260:	bf87      	ittee	hi
 801c262:	4671      	movhi	r1, lr
 801c264:	f04f 0a00 	movhi.w	sl, #0
 801c268:	fa1f f188 	uxthls.w	r1, r8
 801c26c:	2400      	movls	r4, #0
 801c26e:	4653      	mov	r3, sl
 801c270:	468e      	mov	lr, r1
 801c272:	e7db      	b.n	801c22c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801c274:	9a00      	ldr	r2, [sp, #0]
 801c276:	9b00      	ldr	r3, [sp, #0]
 801c278:	3202      	adds	r2, #2
 801c27a:	785b      	ldrb	r3, [r3, #1]
 801c27c:	9200      	str	r2, [sp, #0]
 801c27e:	e7e7      	b.n	801c250 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c280:	2202      	movs	r2, #2
 801c282:	4615      	mov	r5, r2
 801c284:	9907      	ldr	r1, [sp, #28]
 801c286:	9a02      	ldr	r2, [sp, #8]
 801c288:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c28c:	9905      	ldr	r1, [sp, #20]
 801c28e:	4573      	cmp	r3, lr
 801c290:	f831 c002 	ldrh.w	ip, [r1, r2]
 801c294:	9a01      	ldr	r2, [sp, #4]
 801c296:	bf2b      	itete	cs
 801c298:	eba3 0a0e 	subcs.w	sl, r3, lr
 801c29c:	ebae 0103 	subcc.w	r1, lr, r3
 801c2a0:	46f1      	movcs	r9, lr
 801c2a2:	4699      	movcc	r9, r3
 801c2a4:	bf27      	ittee	cs
 801c2a6:	fa1f fa8a 	uxthcs.w	sl, sl
 801c2aa:	4621      	movcs	r1, r4
 801c2ac:	b289      	uxthcc	r1, r1
 801c2ae:	46a2      	movcc	sl, r4
 801c2b0:	2aff      	cmp	r2, #255	; 0xff
 801c2b2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c2b6:	d105      	bne.n	801c2c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801c2b8:	4481      	add	r9, r0
 801c2ba:	4581      	cmp	r9, r0
 801c2bc:	d045      	beq.n	801c34a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c2be:	f820 cb02 	strh.w	ip, [r0], #2
 801c2c2:	e7fa      	b.n	801c2ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801c2c4:	9d03      	ldr	r5, [sp, #12]
 801c2c6:	ea4f 222c 	mov.w	r2, ip, asr #8
 801c2ca:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801c2ce:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c2d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c2d6:	436a      	muls	r2, r5
 801c2d8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c2dc:	fa5f fc8c 	uxtb.w	ip, ip
 801c2e0:	9208      	str	r2, [sp, #32]
 801c2e2:	fb0b fb05 	mul.w	fp, fp, r5
 801c2e6:	fb0c fc05 	mul.w	ip, ip, r5
 801c2ea:	4481      	add	r9, r0
 801c2ec:	4581      	cmp	r9, r0
 801c2ee:	d02c      	beq.n	801c34a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c2f0:	8802      	ldrh	r2, [r0, #0]
 801c2f2:	9d04      	ldr	r5, [sp, #16]
 801c2f4:	9f04      	ldr	r7, [sp, #16]
 801c2f6:	1216      	asrs	r6, r2, #8
 801c2f8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c2fc:	fb16 f605 	smulbb	r6, r6, r5
 801c300:	9d08      	ldr	r5, [sp, #32]
 801c302:	442e      	add	r6, r5
 801c304:	10d5      	asrs	r5, r2, #3
 801c306:	00d2      	lsls	r2, r2, #3
 801c308:	b2d2      	uxtb	r2, r2
 801c30a:	fb12 f207 	smulbb	r2, r2, r7
 801c30e:	b2b6      	uxth	r6, r6
 801c310:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c314:	4462      	add	r2, ip
 801c316:	fb15 f507 	smulbb	r5, r5, r7
 801c31a:	b292      	uxth	r2, r2
 801c31c:	1c77      	adds	r7, r6, #1
 801c31e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801c322:	1c57      	adds	r7, r2, #1
 801c324:	445d      	add	r5, fp
 801c326:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801c32a:	b2ad      	uxth	r5, r5
 801c32c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c330:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c334:	4316      	orrs	r6, r2
 801c336:	1c6a      	adds	r2, r5, #1
 801c338:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801c33c:	096d      	lsrs	r5, r5, #5
 801c33e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c342:	432e      	orrs	r6, r5
 801c344:	f820 6b02 	strh.w	r6, [r0], #2
 801c348:	e7d0      	b.n	801c2ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801c34a:	4573      	cmp	r3, lr
 801c34c:	d38f      	bcc.n	801c26e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c34e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801c352:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c354:	fa1f f188 	uxth.w	r1, r8
 801c358:	1a64      	subs	r4, r4, r1
 801c35a:	881b      	ldrh	r3, [r3, #0]
 801c35c:	b2a4      	uxth	r4, r4
 801c35e:	2c00      	cmp	r4, #0
 801c360:	eba3 0308 	sub.w	r3, r3, r8
 801c364:	bf18      	it	ne
 801c366:	2100      	movne	r1, #0
 801c368:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c36c:	e77f      	b.n	801c26e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c36e:	4b04      	ldr	r3, [pc, #16]	; (801c380 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c370:	6818      	ldr	r0, [r3, #0]
 801c372:	6803      	ldr	r3, [r0, #0]
 801c374:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c376:	4798      	blx	r3
 801c378:	b00f      	add	sp, #60	; 0x3c
 801c37a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c37e:	bf00      	nop
 801c380:	20012db4 	.word	0x20012db4
 801c384:	20012dae 	.word	0x20012dae

0801c388 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c388:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c38c:	b09f      	sub	sp, #124	; 0x7c
 801c38e:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c392:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c396:	9209      	str	r2, [sp, #36]	; 0x24
 801c398:	461d      	mov	r5, r3
 801c39a:	4604      	mov	r4, r0
 801c39c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c39e:	2a00      	cmp	r2, #0
 801c3a0:	f000 81eb 	beq.w	801c77a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c3a4:	6828      	ldr	r0, [r5, #0]
 801c3a6:	6869      	ldr	r1, [r5, #4]
 801c3a8:	aa1a      	add	r2, sp, #104	; 0x68
 801c3aa:	c203      	stmia	r2!, {r0, r1}
 801c3ac:	6818      	ldr	r0, [r3, #0]
 801c3ae:	6859      	ldr	r1, [r3, #4]
 801c3b0:	aa1c      	add	r2, sp, #112	; 0x70
 801c3b2:	c203      	stmia	r2!, {r0, r1}
 801c3b4:	a81a      	add	r0, sp, #104	; 0x68
 801c3b6:	f7f9 f9ff 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c3ba:	4629      	mov	r1, r5
 801c3bc:	a81c      	add	r0, sp, #112	; 0x70
 801c3be:	f7f9 fa3f 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c3c2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c3c6:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801c3ca:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801c3ce:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c3d2:	bfd7      	itett	le
 801c3d4:	b29a      	uxthle	r2, r3
 801c3d6:	2201      	movgt	r2, #1
 801c3d8:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c3dc:	fb91 f2f2 	sdivle	r2, r1, r2
 801c3e0:	9202      	str	r2, [sp, #8]
 801c3e2:	9802      	ldr	r0, [sp, #8]
 801c3e4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c3e8:	fb92 f0f0 	sdiv	r0, r2, r0
 801c3ec:	b280      	uxth	r0, r0
 801c3ee:	9010      	str	r0, [sp, #64]	; 0x40
 801c3f0:	9902      	ldr	r1, [sp, #8]
 801c3f2:	9802      	ldr	r0, [sp, #8]
 801c3f4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c3f6:	4488      	add	r8, r1
 801c3f8:	fb05 2510 	mls	r5, r5, r0, r2
 801c3fc:	fb15 f503 	smulbb	r5, r5, r3
 801c400:	f108 38ff 	add.w	r8, r8, #4294967295
 801c404:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c408:	fb98 f8f1 	sdiv	r8, r8, r1
 801c40c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c410:	440d      	add	r5, r1
 801c412:	4419      	add	r1, r3
 801c414:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c418:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c41c:	441a      	add	r2, r3
 801c41e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c422:	9304      	str	r3, [sp, #16]
 801c424:	4b95      	ldr	r3, [pc, #596]	; (801c67c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c426:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c42a:	6818      	ldr	r0, [r3, #0]
 801c42c:	6803      	ldr	r3, [r0, #0]
 801c42e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c430:	4798      	blx	r3
 801c432:	4b93      	ldr	r3, [pc, #588]	; (801c680 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c434:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c438:	881a      	ldrh	r2, [r3, #0]
 801c43a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c43e:	9318      	str	r3, [sp, #96]	; 0x60
 801c440:	fb02 7101 	mla	r1, r2, r1, r7
 801c444:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c448:	4356      	muls	r6, r2
 801c44a:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801c44e:	f108 0801 	add.w	r8, r8, #1
 801c452:	920a      	str	r2, [sp, #40]	; 0x28
 801c454:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c456:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801c45a:	930f      	str	r3, [sp, #60]	; 0x3c
 801c45c:	fa1f f888 	uxth.w	r8, r8
 801c460:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801c464:	f108 0204 	add.w	r2, r8, #4
 801c468:	9211      	str	r2, [sp, #68]	; 0x44
 801c46a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c46c:	4b85      	ldr	r3, [pc, #532]	; (801c684 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c46e:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801c472:	b2ad      	uxth	r5, r5
 801c474:	9215      	str	r2, [sp, #84]	; 0x54
 801c476:	2d00      	cmp	r5, #0
 801c478:	9a04      	ldr	r2, [sp, #16]
 801c47a:	f04f 0100 	mov.w	r1, #0
 801c47e:	bf18      	it	ne
 801c480:	2200      	movne	r2, #0
 801c482:	1b1b      	subs	r3, r3, r4
 801c484:	b292      	uxth	r2, r2
 801c486:	910d      	str	r1, [sp, #52]	; 0x34
 801c488:	9319      	str	r3, [sp, #100]	; 0x64
 801c48a:	9910      	ldr	r1, [sp, #64]	; 0x40
 801c48c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c48e:	fa11 f383 	uxtah	r3, r1, r3
 801c492:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c494:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801c498:	3304      	adds	r3, #4
 801c49a:	9306      	str	r3, [sp, #24]
 801c49c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c49e:	4283      	cmp	r3, r0
 801c4a0:	f240 8166 	bls.w	801c770 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801c4a4:	9902      	ldr	r1, [sp, #8]
 801c4a6:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c4aa:	fbb5 f3f3 	udiv	r3, r5, r3
 801c4ae:	1acb      	subs	r3, r1, r3
 801c4b0:	b29b      	uxth	r3, r3
 801c4b2:	9316      	str	r3, [sp, #88]	; 0x58
 801c4b4:	9b06      	ldr	r3, [sp, #24]
 801c4b6:	9e06      	ldr	r6, [sp, #24]
 801c4b8:	7859      	ldrb	r1, [r3, #1]
 801c4ba:	789b      	ldrb	r3, [r3, #2]
 801c4bc:	7836      	ldrb	r6, [r6, #0]
 801c4be:	9612      	str	r6, [sp, #72]	; 0x48
 801c4c0:	021b      	lsls	r3, r3, #8
 801c4c2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801c4c6:	9906      	ldr	r1, [sp, #24]
 801c4c8:	78c9      	ldrb	r1, [r1, #3]
 801c4ca:	430b      	orrs	r3, r1
 801c4cc:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801c4ce:	3601      	adds	r6, #1
 801c4d0:	4419      	add	r1, r3
 801c4d2:	9605      	str	r6, [sp, #20]
 801c4d4:	1c4e      	adds	r6, r1, #1
 801c4d6:	9603      	str	r6, [sp, #12]
 801c4d8:	7849      	ldrb	r1, [r1, #1]
 801c4da:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c4dc:	0209      	lsls	r1, r1, #8
 801c4de:	5cf3      	ldrb	r3, [r6, r3]
 801c4e0:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801c4e4:	4319      	orrs	r1, r3
 801c4e6:	b28b      	uxth	r3, r1
 801c4e8:	930c      	str	r3, [sp, #48]	; 0x30
 801c4ea:	2300      	movs	r3, #0
 801c4ec:	f04f 0a01 	mov.w	sl, #1
 801c4f0:	9307      	str	r3, [sp, #28]
 801c4f2:	469c      	mov	ip, r3
 801c4f4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c4f8:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c4fc:	46d3      	mov	fp, sl
 801c4fe:	4657      	mov	r7, sl
 801c500:	930e      	str	r3, [sp, #56]	; 0x38
 801c502:	2d00      	cmp	r5, #0
 801c504:	d07e      	beq.n	801c604 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801c506:	42af      	cmp	r7, r5
 801c508:	d26e      	bcs.n	801c5e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801c50a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c50c:	9201      	str	r2, [sp, #4]
 801c50e:	1bed      	subs	r5, r5, r7
 801c510:	4283      	cmp	r3, r0
 801c512:	b2ad      	uxth	r5, r5
 801c514:	d802      	bhi.n	801c51c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801c516:	e073      	b.n	801c600 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801c518:	2b00      	cmp	r3, #0
 801c51a:	d15f      	bne.n	801c5dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801c51c:	9b03      	ldr	r3, [sp, #12]
 801c51e:	785b      	ldrb	r3, [r3, #1]
 801c520:	f1cb 0207 	rsb	r2, fp, #7
 801c524:	4093      	lsls	r3, r2
 801c526:	005b      	lsls	r3, r3, #1
 801c528:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c52c:	9b03      	ldr	r3, [sp, #12]
 801c52e:	781b      	ldrb	r3, [r3, #0]
 801c530:	fa43 f30b 	asr.w	r3, r3, fp
 801c534:	b2db      	uxtb	r3, r3
 801c536:	4313      	orrs	r3, r2
 801c538:	f10b 0201 	add.w	r2, fp, #1
 801c53c:	fa5f fb82 	uxtb.w	fp, r2
 801c540:	9a03      	ldr	r2, [sp, #12]
 801c542:	f1bb 0f08 	cmp.w	fp, #8
 801c546:	bf15      	itete	ne
 801c548:	3201      	addne	r2, #1
 801c54a:	3202      	addeq	r2, #2
 801c54c:	9203      	strne	r2, [sp, #12]
 801c54e:	9203      	streq	r2, [sp, #12]
 801c550:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c552:	b29f      	uxth	r7, r3
 801c554:	bf08      	it	eq
 801c556:	f04f 0b00 	moveq.w	fp, #0
 801c55a:	42ba      	cmp	r2, r7
 801c55c:	d309      	bcc.n	801c572 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c55e:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c562:	2301      	movs	r3, #1
 801c564:	9a05      	ldr	r2, [sp, #20]
 801c566:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801c56a:	d30e      	bcc.n	801c58a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801c56c:	469a      	mov	sl, r3
 801c56e:	2600      	movs	r6, #0
 801c570:	e035      	b.n	801c5de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801c572:	9b05      	ldr	r3, [sp, #20]
 801c574:	429f      	cmp	r7, r3
 801c576:	d318      	bcc.n	801c5aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801c578:	eb04 030a 	add.w	r3, r4, sl
 801c57c:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801c580:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801c584:	f10a 0301 	add.w	r3, sl, #1
 801c588:	b29b      	uxth	r3, r3
 801c58a:	9a05      	ldr	r2, [sp, #20]
 801c58c:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c590:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c592:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801c596:	7116      	strb	r6, [r2, #4]
 801c598:	f10a 0601 	add.w	r6, sl, #1
 801c59c:	80d1      	strh	r1, [r2, #6]
 801c59e:	7156      	strb	r6, [r2, #5]
 801c5a0:	9a05      	ldr	r2, [sp, #20]
 801c5a2:	3201      	adds	r2, #1
 801c5a4:	b292      	uxth	r2, r2
 801c5a6:	9205      	str	r2, [sp, #20]
 801c5a8:	e7e0      	b.n	801c56c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801c5aa:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801c5ae:	463a      	mov	r2, r7
 801c5b0:	795b      	ldrb	r3, [r3, #5]
 801c5b2:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801c5b6:	4426      	add	r6, r4
 801c5b8:	9919      	ldr	r1, [sp, #100]	; 0x64
 801c5ba:	eb01 0c06 	add.w	ip, r1, r6
 801c5be:	f1bc 0f00 	cmp.w	ip, #0
 801c5c2:	dd07      	ble.n	801c5d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801c5c4:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801c5c8:	f892 c004 	ldrb.w	ip, [r2, #4]
 801c5cc:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801c5d0:	88d2      	ldrh	r2, [r2, #6]
 801c5d2:	e7f1      	b.n	801c5b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801c5d4:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c5d8:	b29b      	uxth	r3, r3
 801c5da:	e7c3      	b.n	801c564 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801c5dc:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801c5de:	970c      	str	r7, [sp, #48]	; 0x30
 801c5e0:	9a01      	ldr	r2, [sp, #4]
 801c5e2:	46b4      	mov	ip, r6
 801c5e4:	461f      	mov	r7, r3
 801c5e6:	e78c      	b.n	801c502 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801c5e8:	1b7b      	subs	r3, r7, r5
 801c5ea:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c5ee:	9201      	str	r2, [sp, #4]
 801c5f0:	eb0c 0605 	add.w	r6, ip, r5
 801c5f4:	b29b      	uxth	r3, r3
 801c5f6:	b2b6      	uxth	r6, r6
 801c5f8:	2500      	movs	r5, #0
 801c5fa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c5fc:	4282      	cmp	r2, r0
 801c5fe:	d88b      	bhi.n	801c518 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801c600:	9a01      	ldr	r2, [sp, #4]
 801c602:	e74b      	b.n	801c49c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801c604:	4297      	cmp	r7, r2
 801c606:	d332      	bcc.n	801c66e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801c608:	1abb      	subs	r3, r7, r2
 801c60a:	b29b      	uxth	r3, r3
 801c60c:	9208      	str	r2, [sp, #32]
 801c60e:	9501      	str	r5, [sp, #4]
 801c610:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c612:	29ff      	cmp	r1, #255	; 0xff
 801c614:	9908      	ldr	r1, [sp, #32]
 801c616:	eb0c 0601 	add.w	r6, ip, r1
 801c61a:	d135      	bne.n	801c688 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801c61c:	f1a0 0e02 	sub.w	lr, r0, #2
 801c620:	b2b6      	uxth	r6, r6
 801c622:	45b4      	cmp	ip, r6
 801c624:	f040 808c 	bne.w	801c740 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801c628:	9908      	ldr	r1, [sp, #32]
 801c62a:	4297      	cmp	r7, r2
 801c62c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c630:	d3e2      	bcc.n	801c5f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801c632:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c634:	9904      	ldr	r1, [sp, #16]
 801c636:	8812      	ldrh	r2, [r2, #0]
 801c638:	1a52      	subs	r2, r2, r1
 801c63a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c63e:	9a07      	ldr	r2, [sp, #28]
 801c640:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c642:	3201      	adds	r2, #1
 801c644:	428a      	cmp	r2, r1
 801c646:	9207      	str	r2, [sp, #28]
 801c648:	f040 8087 	bne.w	801c75a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801c64c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c650:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801c654:	9b04      	ldr	r3, [sp, #16]
 801c656:	1bed      	subs	r5, r5, r7
 801c658:	b2ad      	uxth	r5, r5
 801c65a:	2d00      	cmp	r5, #0
 801c65c:	bf08      	it	eq
 801c65e:	461a      	moveq	r2, r3
 801c660:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c662:	bf18      	it	ne
 801c664:	2200      	movne	r2, #0
 801c666:	3301      	adds	r3, #1
 801c668:	930d      	str	r3, [sp, #52]	; 0x34
 801c66a:	b292      	uxth	r2, r2
 801c66c:	e70d      	b.n	801c48a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801c66e:	1bd1      	subs	r1, r2, r7
 801c670:	b28b      	uxth	r3, r1
 801c672:	9301      	str	r3, [sp, #4]
 801c674:	9708      	str	r7, [sp, #32]
 801c676:	462b      	mov	r3, r5
 801c678:	e7ca      	b.n	801c610 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801c67a:	bf00      	nop
 801c67c:	20012db4 	.word	0x20012db4
 801c680:	20012dae 	.word	0x20012dae
 801c684:	fffff7fb 	.word	0xfffff7fb
 801c688:	b2b6      	uxth	r6, r6
 801c68a:	900b      	str	r0, [sp, #44]	; 0x2c
 801c68c:	45b4      	cmp	ip, r6
 801c68e:	d0cb      	beq.n	801c628 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801c690:	f10c 0101 	add.w	r1, ip, #1
 801c694:	44a4      	add	ip, r4
 801c696:	9117      	str	r1, [sp, #92]	; 0x5c
 801c698:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801c69c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c69e:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801c6a2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c6a4:	f8b1 c000 	ldrh.w	ip, [r1]
 801c6a8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c6aa:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801c6ae:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c6b2:	fb1e fe01 	smulbb	lr, lr, r1
 801c6b6:	ea4f 2825 	mov.w	r8, r5, asr #8
 801c6ba:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c6bc:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801c6c0:	fb08 e801 	mla	r8, r8, r1, lr
 801c6c4:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801c6c8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c6ca:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c6ce:	fb19 f901 	smulbb	r9, r9, r1
 801c6d2:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801c6d6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c6d8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c6dc:	fb0e 9e01 	mla	lr, lr, r1, r9
 801c6e0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c6e4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c6e6:	fa5f fc8c 	uxtb.w	ip, ip
 801c6ea:	fb1c fc01 	smulbb	ip, ip, r1
 801c6ee:	00ed      	lsls	r5, r5, #3
 801c6f0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c6f2:	b2ed      	uxtb	r5, r5
 801c6f4:	fb05 c501 	mla	r5, r5, r1, ip
 801c6f8:	fa1f f888 	uxth.w	r8, r8
 801c6fc:	fa1f fe8e 	uxth.w	lr, lr
 801c700:	b2ad      	uxth	r5, r5
 801c702:	f108 0c01 	add.w	ip, r8, #1
 801c706:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801c70a:	f10e 0901 	add.w	r9, lr, #1
 801c70e:	f105 0c01 	add.w	ip, r5, #1
 801c712:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801c716:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801c71a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c71e:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801c722:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c726:	ea4c 0808 	orr.w	r8, ip, r8
 801c72a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c72c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801c730:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c734:	ea48 0809 	orr.w	r8, r8, r9
 801c738:	f821 8b02 	strh.w	r8, [r1], #2
 801c73c:	910b      	str	r1, [sp, #44]	; 0x2c
 801c73e:	e7a5      	b.n	801c68c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801c740:	f10c 0801 	add.w	r8, ip, #1
 801c744:	44a4      	add	ip, r4
 801c746:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c748:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801c74c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801c750:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801c754:	fa1f fc88 	uxth.w	ip, r8
 801c758:	e763      	b.n	801c622 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801c75a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c75e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c762:	1aad      	subs	r5, r5, r2
 801c764:	b2ad      	uxth	r5, r5
 801c766:	2d00      	cmp	r5, #0
 801c768:	bf18      	it	ne
 801c76a:	2200      	movne	r2, #0
 801c76c:	9201      	str	r2, [sp, #4]
 801c76e:	e744      	b.n	801c5fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801c770:	4b03      	ldr	r3, [pc, #12]	; (801c780 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801c772:	6818      	ldr	r0, [r3, #0]
 801c774:	6803      	ldr	r3, [r0, #0]
 801c776:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c778:	4798      	blx	r3
 801c77a:	b01f      	add	sp, #124	; 0x7c
 801c77c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c780:	20012db4 	.word	0x20012db4

0801c784 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801c784:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c788:	b08f      	sub	sp, #60	; 0x3c
 801c78a:	461c      	mov	r4, r3
 801c78c:	9203      	str	r2, [sp, #12]
 801c78e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c792:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c794:	9202      	str	r2, [sp, #8]
 801c796:	460f      	mov	r7, r1
 801c798:	2a00      	cmp	r2, #0
 801c79a:	f000 8128 	beq.w	801c9ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801c79e:	6820      	ldr	r0, [r4, #0]
 801c7a0:	6861      	ldr	r1, [r4, #4]
 801c7a2:	aa0a      	add	r2, sp, #40	; 0x28
 801c7a4:	c203      	stmia	r2!, {r0, r1}
 801c7a6:	6818      	ldr	r0, [r3, #0]
 801c7a8:	6859      	ldr	r1, [r3, #4]
 801c7aa:	aa0c      	add	r2, sp, #48	; 0x30
 801c7ac:	c203      	stmia	r2!, {r0, r1}
 801c7ae:	a80a      	add	r0, sp, #40	; 0x28
 801c7b0:	f7f9 f802 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c7b4:	4621      	mov	r1, r4
 801c7b6:	a80c      	add	r0, sp, #48	; 0x30
 801c7b8:	f7f9 f842 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c7bc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c7c0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801c7c4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801c7c8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c7cc:	bfde      	ittt	le
 801c7ce:	b2b3      	uxthle	r3, r6
 801c7d0:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c7d4:	fb92 f3f3 	sdivle	r3, r2, r3
 801c7d8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c7dc:	bfc8      	it	gt
 801c7de:	2301      	movgt	r3, #1
 801c7e0:	fb92 f1f3 	sdiv	r1, r2, r3
 801c7e4:	fa1f fc81 	uxth.w	ip, r1
 801c7e8:	fb0c 2413 	mls	r4, ip, r3, r2
 801c7ec:	fb14 f406 	smulbb	r4, r4, r6
 801c7f0:	441d      	add	r5, r3
 801c7f2:	4404      	add	r4, r0
 801c7f4:	4661      	mov	r1, ip
 801c7f6:	3d01      	subs	r5, #1
 801c7f8:	b2a4      	uxth	r4, r4
 801c7fa:	fb95 f5f3 	sdiv	r5, r5, r3
 801c7fe:	b121      	cbz	r1, 801c80a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801c800:	9b03      	ldr	r3, [sp, #12]
 801c802:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c806:	ba1b      	rev	r3, r3
 801c808:	441f      	add	r7, r3
 801c80a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c80e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801c812:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c816:	4418      	add	r0, r3
 801c818:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c81c:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801c820:	441a      	add	r2, r3
 801c822:	4b74      	ldr	r3, [pc, #464]	; (801c9f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801c824:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801c828:	6818      	ldr	r0, [r3, #0]
 801c82a:	6803      	ldr	r3, [r0, #0]
 801c82c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c82e:	4798      	blx	r3
 801c830:	4a71      	ldr	r2, [pc, #452]	; (801c9f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801c832:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801c836:	8813      	ldrh	r3, [r2, #0]
 801c838:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801c83c:	9209      	str	r2, [sp, #36]	; 0x24
 801c83e:	fb03 c101 	mla	r1, r3, r1, ip
 801c842:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c846:	4373      	muls	r3, r6
 801c848:	b2ad      	uxth	r5, r5
 801c84a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c84e:	00ad      	lsls	r5, r5, #2
 801c850:	2c00      	cmp	r4, #0
 801c852:	9304      	str	r3, [sp, #16]
 801c854:	f105 0304 	add.w	r3, r5, #4
 801c858:	9305      	str	r3, [sp, #20]
 801c85a:	bf0c      	ite	eq
 801c85c:	46c8      	moveq	r8, r9
 801c85e:	f04f 0800 	movne.w	r8, #0
 801c862:	2300      	movs	r3, #0
 801c864:	fa1f f888 	uxth.w	r8, r8
 801c868:	9301      	str	r3, [sp, #4]
 801c86a:	9a04      	ldr	r2, [sp, #16]
 801c86c:	4282      	cmp	r2, r0
 801c86e:	f240 80b9 	bls.w	801c9e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801c872:	b95b      	cbnz	r3, 801c88c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801c874:	783a      	ldrb	r2, [r7, #0]
 801c876:	0993      	lsrs	r3, r2, #6
 801c878:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c87c:	9201      	str	r2, [sp, #4]
 801c87e:	1e5a      	subs	r2, r3, #1
 801c880:	2a02      	cmp	r2, #2
 801c882:	bf8d      	iteet	hi
 801c884:	787b      	ldrbhi	r3, [r7, #1]
 801c886:	3701      	addls	r7, #1
 801c888:	b29b      	uxthls	r3, r3
 801c88a:	3702      	addhi	r7, #2
 801c88c:	b184      	cbz	r4, 801c8b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801c88e:	429c      	cmp	r4, r3
 801c890:	bf95      	itete	ls
 801c892:	1b1c      	subls	r4, r3, r4
 801c894:	1ae4      	subhi	r4, r4, r3
 801c896:	fa1f fa84 	uxthls.w	sl, r4
 801c89a:	b2a4      	uxthhi	r4, r4
 801c89c:	bf87      	ittee	hi
 801c89e:	46c4      	movhi	ip, r8
 801c8a0:	f04f 0a00 	movhi.w	sl, #0
 801c8a4:	fa1f fc89 	uxthls.w	ip, r9
 801c8a8:	2400      	movls	r4, #0
 801c8aa:	4653      	mov	r3, sl
 801c8ac:	46e0      	mov	r8, ip
 801c8ae:	e7dc      	b.n	801c86a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801c8b0:	2204      	movs	r2, #4
 801c8b2:	4615      	mov	r5, r2
 801c8b4:	9905      	ldr	r1, [sp, #20]
 801c8b6:	9a01      	ldr	r2, [sp, #4]
 801c8b8:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c8bc:	9903      	ldr	r1, [sp, #12]
 801c8be:	588a      	ldr	r2, [r1, r2]
 801c8c0:	4543      	cmp	r3, r8
 801c8c2:	bf27      	ittee	cs
 801c8c4:	eba3 0a08 	subcs.w	sl, r3, r8
 801c8c8:	46c6      	movcs	lr, r8
 801c8ca:	eba8 0c03 	subcc.w	ip, r8, r3
 801c8ce:	469e      	movcc	lr, r3
 801c8d0:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801c8d4:	bf27      	ittee	cs
 801c8d6:	fa1f fa8a 	uxthcs.w	sl, sl
 801c8da:	46a4      	movcs	ip, r4
 801c8dc:	fa1f fc8c 	uxthcc.w	ip, ip
 801c8e0:	46a2      	movcc	sl, r4
 801c8e2:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801c8e6:	2900      	cmp	r1, #0
 801c8e8:	d066      	beq.n	801c9b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801c8ea:	29ff      	cmp	r1, #255	; 0xff
 801c8ec:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801c8f0:	d114      	bne.n	801c91c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801c8f2:	9d02      	ldr	r5, [sp, #8]
 801c8f4:	2dff      	cmp	r5, #255	; 0xff
 801c8f6:	d111      	bne.n	801c91c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801c8f8:	0951      	lsrs	r1, r2, #5
 801c8fa:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c8fe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c902:	f026 0607 	bic.w	r6, r6, #7
 801c906:	430e      	orrs	r6, r1
 801c908:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c90c:	4316      	orrs	r6, r2
 801c90e:	b2b6      	uxth	r6, r6
 801c910:	4486      	add	lr, r0
 801c912:	4586      	cmp	lr, r0
 801c914:	d051      	beq.n	801c9ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c916:	f820 6b02 	strh.w	r6, [r0], #2
 801c91a:	e7fa      	b.n	801c912 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801c91c:	9d02      	ldr	r5, [sp, #8]
 801c91e:	4369      	muls	r1, r5
 801c920:	1c4d      	adds	r5, r1, #1
 801c922:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801c926:	122d      	asrs	r5, r5, #8
 801c928:	ea6f 0b05 	mvn.w	fp, r5
 801c92c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801c930:	b2ad      	uxth	r5, r5
 801c932:	b2f6      	uxtb	r6, r6
 801c934:	b2d2      	uxtb	r2, r2
 801c936:	fb11 f105 	smulbb	r1, r1, r5
 801c93a:	fb16 f605 	smulbb	r6, r6, r5
 801c93e:	fb12 f205 	smulbb	r2, r2, r5
 801c942:	b289      	uxth	r1, r1
 801c944:	b2b6      	uxth	r6, r6
 801c946:	b292      	uxth	r2, r2
 801c948:	9106      	str	r1, [sp, #24]
 801c94a:	9607      	str	r6, [sp, #28]
 801c94c:	9208      	str	r2, [sp, #32]
 801c94e:	4486      	add	lr, r0
 801c950:	fa5f fb8b 	uxtb.w	fp, fp
 801c954:	4586      	cmp	lr, r0
 801c956:	d030      	beq.n	801c9ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c958:	8802      	ldrh	r2, [r0, #0]
 801c95a:	9906      	ldr	r1, [sp, #24]
 801c95c:	1216      	asrs	r6, r2, #8
 801c95e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c962:	10d5      	asrs	r5, r2, #3
 801c964:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c968:	fb06 160b 	mla	r6, r6, fp, r1
 801c96c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c970:	9907      	ldr	r1, [sp, #28]
 801c972:	00d2      	lsls	r2, r2, #3
 801c974:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c978:	fb05 150b 	mla	r5, r5, fp, r1
 801c97c:	b2d2      	uxtb	r2, r2
 801c97e:	9908      	ldr	r1, [sp, #32]
 801c980:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c984:	b2b6      	uxth	r6, r6
 801c986:	fb02 120b 	mla	r2, r2, fp, r1
 801c98a:	b292      	uxth	r2, r2
 801c98c:	1c71      	adds	r1, r6, #1
 801c98e:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801c992:	1c51      	adds	r1, r2, #1
 801c994:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c998:	b2ad      	uxth	r5, r5
 801c99a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c99e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c9a2:	4316      	orrs	r6, r2
 801c9a4:	1c6a      	adds	r2, r5, #1
 801c9a6:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801c9aa:	096d      	lsrs	r5, r5, #5
 801c9ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c9b0:	432e      	orrs	r6, r5
 801c9b2:	f820 6b02 	strh.w	r6, [r0], #2
 801c9b6:	e7cd      	b.n	801c954 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801c9b8:	4470      	add	r0, lr
 801c9ba:	4543      	cmp	r3, r8
 801c9bc:	f4ff af75 	bcc.w	801c8aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801c9c0:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801c9c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c9c6:	fa1f fc89 	uxth.w	ip, r9
 801c9ca:	eba4 040c 	sub.w	r4, r4, ip
 801c9ce:	881b      	ldrh	r3, [r3, #0]
 801c9d0:	b2a4      	uxth	r4, r4
 801c9d2:	2c00      	cmp	r4, #0
 801c9d4:	eba3 0309 	sub.w	r3, r3, r9
 801c9d8:	bf18      	it	ne
 801c9da:	f04f 0c00 	movne.w	ip, #0
 801c9de:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c9e2:	e762      	b.n	801c8aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801c9e4:	4b03      	ldr	r3, [pc, #12]	; (801c9f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801c9e6:	6818      	ldr	r0, [r3, #0]
 801c9e8:	6803      	ldr	r3, [r0, #0]
 801c9ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c9ec:	4798      	blx	r3
 801c9ee:	b00f      	add	sp, #60	; 0x3c
 801c9f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c9f4:	20012db4 	.word	0x20012db4
 801c9f8:	20012dae 	.word	0x20012dae

0801c9fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c9fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca00:	b093      	sub	sp, #76	; 0x4c
 801ca02:	461c      	mov	r4, r3
 801ca04:	9205      	str	r2, [sp, #20]
 801ca06:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801ca0a:	9101      	str	r1, [sp, #4]
 801ca0c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ca0e:	9202      	str	r2, [sp, #8]
 801ca10:	2a00      	cmp	r2, #0
 801ca12:	f000 812c 	beq.w	801cc6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801ca16:	6820      	ldr	r0, [r4, #0]
 801ca18:	6861      	ldr	r1, [r4, #4]
 801ca1a:	aa0e      	add	r2, sp, #56	; 0x38
 801ca1c:	c203      	stmia	r2!, {r0, r1}
 801ca1e:	6818      	ldr	r0, [r3, #0]
 801ca20:	6859      	ldr	r1, [r3, #4]
 801ca22:	aa10      	add	r2, sp, #64	; 0x40
 801ca24:	c203      	stmia	r2!, {r0, r1}
 801ca26:	a80e      	add	r0, sp, #56	; 0x38
 801ca28:	f7f8 fec6 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ca2c:	4621      	mov	r1, r4
 801ca2e:	a810      	add	r0, sp, #64	; 0x40
 801ca30:	f7f8 ff06 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ca34:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801ca38:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801ca3c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801ca40:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801ca44:	bfde      	ittt	le
 801ca46:	b2b3      	uxthle	r3, r6
 801ca48:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801ca4c:	fb92 f3f3 	sdivle	r3, r2, r3
 801ca50:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801ca54:	bfc8      	it	gt
 801ca56:	2301      	movgt	r3, #1
 801ca58:	fb92 f1f3 	sdiv	r1, r2, r3
 801ca5c:	fa1f fc81 	uxth.w	ip, r1
 801ca60:	fb0c 2413 	mls	r4, ip, r3, r2
 801ca64:	fb14 f406 	smulbb	r4, r4, r6
 801ca68:	441d      	add	r5, r3
 801ca6a:	4404      	add	r4, r0
 801ca6c:	4661      	mov	r1, ip
 801ca6e:	3d01      	subs	r5, #1
 801ca70:	b2a4      	uxth	r4, r4
 801ca72:	fb95 f5f3 	sdiv	r5, r5, r3
 801ca76:	b131      	cbz	r1, 801ca86 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801ca78:	9b05      	ldr	r3, [sp, #20]
 801ca7a:	9901      	ldr	r1, [sp, #4]
 801ca7c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801ca80:	ba1b      	rev	r3, r3
 801ca82:	4419      	add	r1, r3
 801ca84:	9101      	str	r1, [sp, #4]
 801ca86:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801ca8a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801ca8e:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801ca92:	4418      	add	r0, r3
 801ca94:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801ca98:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801ca9c:	441a      	add	r2, r3
 801ca9e:	4b75      	ldr	r3, [pc, #468]	; (801cc74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801caa0:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801caa4:	6818      	ldr	r0, [r3, #0]
 801caa6:	6803      	ldr	r3, [r0, #0]
 801caa8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801caaa:	4798      	blx	r3
 801caac:	4972      	ldr	r1, [pc, #456]	; (801cc78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801caae:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801cab2:	880b      	ldrh	r3, [r1, #0]
 801cab4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cab8:	910d      	str	r1, [sp, #52]	; 0x34
 801caba:	fb03 c202 	mla	r2, r3, r2, ip
 801cabe:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cac2:	4373      	muls	r3, r6
 801cac4:	b2ad      	uxth	r5, r5
 801cac6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801caca:	00ad      	lsls	r5, r5, #2
 801cacc:	9308      	str	r3, [sp, #32]
 801cace:	1d2b      	adds	r3, r5, #4
 801cad0:	9309      	str	r3, [sp, #36]	; 0x24
 801cad2:	9b02      	ldr	r3, [sp, #8]
 801cad4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801cad8:	9106      	str	r1, [sp, #24]
 801cada:	43da      	mvns	r2, r3
 801cadc:	2c00      	cmp	r4, #0
 801cade:	bf0c      	ite	eq
 801cae0:	46dc      	moveq	ip, fp
 801cae2:	f04f 0c00 	movne.w	ip, #0
 801cae6:	2300      	movs	r3, #0
 801cae8:	b2d2      	uxtb	r2, r2
 801caea:	fa1f fc8c 	uxth.w	ip, ip
 801caee:	9303      	str	r3, [sp, #12]
 801caf0:	9207      	str	r2, [sp, #28]
 801caf2:	9a08      	ldr	r2, [sp, #32]
 801caf4:	4282      	cmp	r2, r0
 801caf6:	f240 80b5 	bls.w	801cc64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801cafa:	b963      	cbnz	r3, 801cb16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801cafc:	9b01      	ldr	r3, [sp, #4]
 801cafe:	781a      	ldrb	r2, [r3, #0]
 801cb00:	0993      	lsrs	r3, r2, #6
 801cb02:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801cb06:	9203      	str	r2, [sp, #12]
 801cb08:	1e5a      	subs	r2, r3, #1
 801cb0a:	2a02      	cmp	r2, #2
 801cb0c:	d815      	bhi.n	801cb3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801cb0e:	9a01      	ldr	r2, [sp, #4]
 801cb10:	3201      	adds	r2, #1
 801cb12:	9201      	str	r2, [sp, #4]
 801cb14:	b29b      	uxth	r3, r3
 801cb16:	b1b4      	cbz	r4, 801cb46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801cb18:	429c      	cmp	r4, r3
 801cb1a:	bf95      	itete	ls
 801cb1c:	1b1c      	subls	r4, r3, r4
 801cb1e:	1ae4      	subhi	r4, r4, r3
 801cb20:	fa1f f884 	uxthls.w	r8, r4
 801cb24:	b2a4      	uxthhi	r4, r4
 801cb26:	bf87      	ittee	hi
 801cb28:	4666      	movhi	r6, ip
 801cb2a:	f04f 0800 	movhi.w	r8, #0
 801cb2e:	fa1f f68b 	uxthls.w	r6, fp
 801cb32:	2400      	movls	r4, #0
 801cb34:	4643      	mov	r3, r8
 801cb36:	46b4      	mov	ip, r6
 801cb38:	e7db      	b.n	801caf2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801cb3a:	9a01      	ldr	r2, [sp, #4]
 801cb3c:	9b01      	ldr	r3, [sp, #4]
 801cb3e:	3202      	adds	r2, #2
 801cb40:	785b      	ldrb	r3, [r3, #1]
 801cb42:	9201      	str	r2, [sp, #4]
 801cb44:	e7e7      	b.n	801cb16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801cb46:	2203      	movs	r2, #3
 801cb48:	4615      	mov	r5, r2
 801cb4a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801cb4c:	9a03      	ldr	r2, [sp, #12]
 801cb4e:	fb15 1202 	smlabb	r2, r5, r2, r1
 801cb52:	9905      	ldr	r1, [sp, #20]
 801cb54:	4563      	cmp	r3, ip
 801cb56:	eb01 0502 	add.w	r5, r1, r2
 801cb5a:	9902      	ldr	r1, [sp, #8]
 801cb5c:	bf29      	itett	cs
 801cb5e:	eba3 080c 	subcs.w	r8, r3, ip
 801cb62:	ebac 0603 	subcc.w	r6, ip, r3
 801cb66:	fa1f f888 	uxthcs.w	r8, r8
 801cb6a:	46e1      	movcs	r9, ip
 801cb6c:	bf2f      	iteee	cs
 801cb6e:	4626      	movcs	r6, r4
 801cb70:	b2b6      	uxthcc	r6, r6
 801cb72:	4699      	movcc	r9, r3
 801cb74:	46a0      	movcc	r8, r4
 801cb76:	29ff      	cmp	r1, #255	; 0xff
 801cb78:	d04a      	beq.n	801cc10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801cb7a:	9f06      	ldr	r7, [sp, #24]
 801cb7c:	78a9      	ldrb	r1, [r5, #2]
 801cb7e:	9004      	str	r0, [sp, #16]
 801cb80:	4379      	muls	r1, r7
 801cb82:	910a      	str	r1, [sp, #40]	; 0x28
 801cb84:	7869      	ldrb	r1, [r5, #1]
 801cb86:	4379      	muls	r1, r7
 801cb88:	910b      	str	r1, [sp, #44]	; 0x2c
 801cb8a:	9905      	ldr	r1, [sp, #20]
 801cb8c:	5c8a      	ldrb	r2, [r1, r2]
 801cb8e:	437a      	muls	r2, r7
 801cb90:	920c      	str	r2, [sp, #48]	; 0x30
 801cb92:	46ca      	mov	sl, r9
 801cb94:	f1ba 0f00 	cmp.w	sl, #0
 801cb98:	d03d      	beq.n	801cc16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801cb9a:	9a04      	ldr	r2, [sp, #16]
 801cb9c:	9f07      	ldr	r7, [sp, #28]
 801cb9e:	8812      	ldrh	r2, [r2, #0]
 801cba0:	1215      	asrs	r5, r2, #8
 801cba2:	46be      	mov	lr, r7
 801cba4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cba8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801cbaa:	10d1      	asrs	r1, r2, #3
 801cbac:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801cbb0:	fb05 750e 	mla	r5, r5, lr, r7
 801cbb4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801cbb8:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801cbba:	00d2      	lsls	r2, r2, #3
 801cbbc:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801cbc0:	fb01 710e 	mla	r1, r1, lr, r7
 801cbc4:	b2d2      	uxtb	r2, r2
 801cbc6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801cbc8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cbcc:	b2ad      	uxth	r5, r5
 801cbce:	fb02 720e 	mla	r2, r2, lr, r7
 801cbd2:	b292      	uxth	r2, r2
 801cbd4:	f105 0e01 	add.w	lr, r5, #1
 801cbd8:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801cbdc:	f102 0e01 	add.w	lr, r2, #1
 801cbe0:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801cbe4:	b289      	uxth	r1, r1
 801cbe6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cbea:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cbee:	4315      	orrs	r5, r2
 801cbf0:	1c4a      	adds	r2, r1, #1
 801cbf2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cbf6:	0949      	lsrs	r1, r1, #5
 801cbf8:	9a04      	ldr	r2, [sp, #16]
 801cbfa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cbfe:	430d      	orrs	r5, r1
 801cc00:	f822 5b02 	strh.w	r5, [r2], #2
 801cc04:	f10a 3aff 	add.w	sl, sl, #4294967295
 801cc08:	9204      	str	r2, [sp, #16]
 801cc0a:	fa1f fa8a 	uxth.w	sl, sl
 801cc0e:	e7c1      	b.n	801cb94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801cc10:	4649      	mov	r1, r9
 801cc12:	4686      	mov	lr, r0
 801cc14:	b999      	cbnz	r1, 801cc3e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801cc16:	4563      	cmp	r3, ip
 801cc18:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801cc1c:	d38a      	bcc.n	801cb34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801cc1e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801cc22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cc24:	fa1f f68b 	uxth.w	r6, fp
 801cc28:	1ba4      	subs	r4, r4, r6
 801cc2a:	881b      	ldrh	r3, [r3, #0]
 801cc2c:	b2a4      	uxth	r4, r4
 801cc2e:	2c00      	cmp	r4, #0
 801cc30:	eba3 030b 	sub.w	r3, r3, fp
 801cc34:	bf18      	it	ne
 801cc36:	2600      	movne	r6, #0
 801cc38:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cc3c:	e77a      	b.n	801cb34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801cc3e:	78aa      	ldrb	r2, [r5, #2]
 801cc40:	4f0e      	ldr	r7, [pc, #56]	; (801cc7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801cc42:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801cc46:	786a      	ldrb	r2, [r5, #1]
 801cc48:	00d2      	lsls	r2, r2, #3
 801cc4a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cc4e:	ea4a 0202 	orr.w	r2, sl, r2
 801cc52:	f895 a000 	ldrb.w	sl, [r5]
 801cc56:	3901      	subs	r1, #1
 801cc58:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801cc5c:	f82e 2b02 	strh.w	r2, [lr], #2
 801cc60:	b289      	uxth	r1, r1
 801cc62:	e7d7      	b.n	801cc14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801cc64:	4b03      	ldr	r3, [pc, #12]	; (801cc74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801cc66:	6818      	ldr	r0, [r3, #0]
 801cc68:	6803      	ldr	r3, [r0, #0]
 801cc6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cc6c:	4798      	blx	r3
 801cc6e:	b013      	add	sp, #76	; 0x4c
 801cc70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cc74:	20012db4 	.word	0x20012db4
 801cc78:	20012dae 	.word	0x20012dae
 801cc7c:	fffff800 	.word	0xfffff800

0801cc80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801cc80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc84:	b09d      	sub	sp, #116	; 0x74
 801cc86:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801cc8a:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801cc8e:	920e      	str	r2, [sp, #56]	; 0x38
 801cc90:	461c      	mov	r4, r3
 801cc92:	4683      	mov	fp, r0
 801cc94:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801cc96:	2a00      	cmp	r2, #0
 801cc98:	f000 81e0 	beq.w	801d05c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801cc9c:	6820      	ldr	r0, [r4, #0]
 801cc9e:	6861      	ldr	r1, [r4, #4]
 801cca0:	aa18      	add	r2, sp, #96	; 0x60
 801cca2:	c203      	stmia	r2!, {r0, r1}
 801cca4:	6818      	ldr	r0, [r3, #0]
 801cca6:	6859      	ldr	r1, [r3, #4]
 801cca8:	aa1a      	add	r2, sp, #104	; 0x68
 801ccaa:	c203      	stmia	r2!, {r0, r1}
 801ccac:	a818      	add	r0, sp, #96	; 0x60
 801ccae:	f7f8 fd83 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ccb2:	4621      	mov	r1, r4
 801ccb4:	a81a      	add	r0, sp, #104	; 0x68
 801ccb6:	f7f8 fdc3 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ccba:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801ccbe:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801ccc2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801ccc6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801ccca:	bfd7      	itett	le
 801cccc:	b29a      	uxthle	r2, r3
 801ccce:	2201      	movgt	r2, #1
 801ccd0:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801ccd4:	fb91 f2f2 	sdivle	r2, r1, r2
 801ccd8:	9202      	str	r2, [sp, #8]
 801ccda:	9802      	ldr	r0, [sp, #8]
 801ccdc:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801cce0:	fb92 f0f0 	sdiv	r0, r2, r0
 801cce4:	b280      	uxth	r0, r0
 801cce6:	900f      	str	r0, [sp, #60]	; 0x3c
 801cce8:	9902      	ldr	r1, [sp, #8]
 801ccea:	9802      	ldr	r0, [sp, #8]
 801ccec:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ccee:	440c      	add	r4, r1
 801ccf0:	fb05 2510 	mls	r5, r5, r0, r2
 801ccf4:	fb15 f503 	smulbb	r5, r5, r3
 801ccf8:	3c01      	subs	r4, #1
 801ccfa:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801ccfe:	fb94 f4f1 	sdiv	r4, r4, r1
 801cd02:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801cd06:	440d      	add	r5, r1
 801cd08:	4419      	add	r1, r3
 801cd0a:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801cd0e:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801cd12:	441a      	add	r2, r3
 801cd14:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801cd18:	9306      	str	r3, [sp, #24]
 801cd1a:	4bb3      	ldr	r3, [pc, #716]	; (801cfe8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801cd1c:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801cd20:	6818      	ldr	r0, [r3, #0]
 801cd22:	6803      	ldr	r3, [r0, #0]
 801cd24:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cd26:	4798      	blx	r3
 801cd28:	4bb0      	ldr	r3, [pc, #704]	; (801cfec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801cd2a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801cd2e:	881a      	ldrh	r2, [r3, #0]
 801cd30:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801cd34:	9316      	str	r3, [sp, #88]	; 0x58
 801cd36:	fb02 7101 	mla	r1, r2, r1, r7
 801cd3a:	3401      	adds	r4, #1
 801cd3c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801cd40:	b2a4      	uxth	r4, r4
 801cd42:	4356      	muls	r6, r2
 801cd44:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801cd48:	00a4      	lsls	r4, r4, #2
 801cd4a:	920a      	str	r2, [sp, #40]	; 0x28
 801cd4c:	1d22      	adds	r2, r4, #4
 801cd4e:	b2ad      	uxth	r5, r5
 801cd50:	9213      	str	r2, [sp, #76]	; 0x4c
 801cd52:	4ba7      	ldr	r3, [pc, #668]	; (801cff0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801cd54:	9a06      	ldr	r2, [sp, #24]
 801cd56:	2d00      	cmp	r5, #0
 801cd58:	bf0c      	ite	eq
 801cd5a:	4611      	moveq	r1, r2
 801cd5c:	2100      	movne	r1, #0
 801cd5e:	2200      	movs	r2, #0
 801cd60:	eba3 030b 	sub.w	r3, r3, fp
 801cd64:	b289      	uxth	r1, r1
 801cd66:	920d      	str	r2, [sp, #52]	; 0x34
 801cd68:	9317      	str	r3, [sp, #92]	; 0x5c
 801cd6a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cd6c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cd6e:	fa12 f383 	uxtah	r3, r2, r3
 801cd72:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cd74:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801cd78:	3304      	adds	r3, #4
 801cd7a:	9308      	str	r3, [sp, #32]
 801cd7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cd7e:	4543      	cmp	r3, r8
 801cd80:	f240 8167 	bls.w	801d052 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801cd84:	9a02      	ldr	r2, [sp, #8]
 801cd86:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801cd8a:	fbb5 f3f3 	udiv	r3, r5, r3
 801cd8e:	1ad3      	subs	r3, r2, r3
 801cd90:	b29b      	uxth	r3, r3
 801cd92:	9314      	str	r3, [sp, #80]	; 0x50
 801cd94:	9b08      	ldr	r3, [sp, #32]
 801cd96:	9808      	ldr	r0, [sp, #32]
 801cd98:	785a      	ldrb	r2, [r3, #1]
 801cd9a:	789b      	ldrb	r3, [r3, #2]
 801cd9c:	7800      	ldrb	r0, [r0, #0]
 801cd9e:	9010      	str	r0, [sp, #64]	; 0x40
 801cda0:	021b      	lsls	r3, r3, #8
 801cda2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801cda6:	9a08      	ldr	r2, [sp, #32]
 801cda8:	78d2      	ldrb	r2, [r2, #3]
 801cdaa:	4313      	orrs	r3, r2
 801cdac:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cdae:	3001      	adds	r0, #1
 801cdb0:	441a      	add	r2, r3
 801cdb2:	9007      	str	r0, [sp, #28]
 801cdb4:	1c50      	adds	r0, r2, #1
 801cdb6:	9005      	str	r0, [sp, #20]
 801cdb8:	7852      	ldrb	r2, [r2, #1]
 801cdba:	9811      	ldr	r0, [sp, #68]	; 0x44
 801cdbc:	0212      	lsls	r2, r2, #8
 801cdbe:	5cc3      	ldrb	r3, [r0, r3]
 801cdc0:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801cdc4:	431a      	orrs	r2, r3
 801cdc6:	b293      	uxth	r3, r2
 801cdc8:	930b      	str	r3, [sp, #44]	; 0x2c
 801cdca:	2300      	movs	r3, #0
 801cdcc:	9309      	str	r3, [sp, #36]	; 0x24
 801cdce:	2301      	movs	r3, #1
 801cdd0:	9301      	str	r3, [sp, #4]
 801cdd2:	9304      	str	r3, [sp, #16]
 801cdd4:	2300      	movs	r3, #0
 801cdd6:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801cdda:	9303      	str	r3, [sp, #12]
 801cddc:	f04f 0e01 	mov.w	lr, #1
 801cde0:	2d00      	cmp	r5, #0
 801cde2:	d07c      	beq.n	801cede <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801cde4:	45ae      	cmp	lr, r5
 801cde6:	d26b      	bcs.n	801cec0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801cde8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cdea:	eba5 050e 	sub.w	r5, r5, lr
 801cdee:	4543      	cmp	r3, r8
 801cdf0:	b2ad      	uxth	r5, r5
 801cdf2:	460c      	mov	r4, r1
 801cdf4:	d802      	bhi.n	801cdfc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801cdf6:	e070      	b.n	801ceda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801cdf8:	2b00      	cmp	r3, #0
 801cdfa:	d15c      	bne.n	801ceb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801cdfc:	9b05      	ldr	r3, [sp, #20]
 801cdfe:	9a04      	ldr	r2, [sp, #16]
 801ce00:	785b      	ldrb	r3, [r3, #1]
 801ce02:	9904      	ldr	r1, [sp, #16]
 801ce04:	f1c2 0207 	rsb	r2, r2, #7
 801ce08:	4093      	lsls	r3, r2
 801ce0a:	005b      	lsls	r3, r3, #1
 801ce0c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801ce10:	9b05      	ldr	r3, [sp, #20]
 801ce12:	781b      	ldrb	r3, [r3, #0]
 801ce14:	410b      	asrs	r3, r1
 801ce16:	3101      	adds	r1, #1
 801ce18:	b2c9      	uxtb	r1, r1
 801ce1a:	2908      	cmp	r1, #8
 801ce1c:	9104      	str	r1, [sp, #16]
 801ce1e:	9905      	ldr	r1, [sp, #20]
 801ce20:	bf0a      	itet	eq
 801ce22:	3102      	addeq	r1, #2
 801ce24:	3101      	addne	r1, #1
 801ce26:	9105      	streq	r1, [sp, #20]
 801ce28:	b2db      	uxtb	r3, r3
 801ce2a:	bf0a      	itet	eq
 801ce2c:	2100      	moveq	r1, #0
 801ce2e:	9105      	strne	r1, [sp, #20]
 801ce30:	9104      	streq	r1, [sp, #16]
 801ce32:	4313      	orrs	r3, r2
 801ce34:	9910      	ldr	r1, [sp, #64]	; 0x40
 801ce36:	b29a      	uxth	r2, r3
 801ce38:	4291      	cmp	r1, r2
 801ce3a:	d30a      	bcc.n	801ce52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801ce3c:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801ce40:	2301      	movs	r3, #1
 801ce42:	9907      	ldr	r1, [sp, #28]
 801ce44:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801ce48:	d30f      	bcc.n	801ce6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801ce4a:	2100      	movs	r1, #0
 801ce4c:	9301      	str	r3, [sp, #4]
 801ce4e:	9103      	str	r1, [sp, #12]
 801ce50:	e032      	b.n	801ceb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801ce52:	9b07      	ldr	r3, [sp, #28]
 801ce54:	429a      	cmp	r2, r3
 801ce56:	d318      	bcc.n	801ce8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801ce58:	9b01      	ldr	r3, [sp, #4]
 801ce5a:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801ce5e:	445b      	add	r3, fp
 801ce60:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801ce64:	9b01      	ldr	r3, [sp, #4]
 801ce66:	3301      	adds	r3, #1
 801ce68:	b29b      	uxth	r3, r3
 801ce6a:	9907      	ldr	r1, [sp, #28]
 801ce6c:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801ce70:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801ce74:	7108      	strb	r0, [r1, #4]
 801ce76:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801ce78:	80c8      	strh	r0, [r1, #6]
 801ce7a:	9801      	ldr	r0, [sp, #4]
 801ce7c:	3001      	adds	r0, #1
 801ce7e:	7148      	strb	r0, [r1, #5]
 801ce80:	9907      	ldr	r1, [sp, #28]
 801ce82:	3101      	adds	r1, #1
 801ce84:	b289      	uxth	r1, r1
 801ce86:	9107      	str	r1, [sp, #28]
 801ce88:	e7df      	b.n	801ce4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801ce8a:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801ce8e:	4611      	mov	r1, r2
 801ce90:	795b      	ldrb	r3, [r3, #5]
 801ce92:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801ce96:	4458      	add	r0, fp
 801ce98:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801ce9a:	4406      	add	r6, r0
 801ce9c:	2e00      	cmp	r6, #0
 801ce9e:	dd06      	ble.n	801ceae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801cea0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801cea4:	790e      	ldrb	r6, [r1, #4]
 801cea6:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801ceaa:	88c9      	ldrh	r1, [r1, #6]
 801ceac:	e7f4      	b.n	801ce98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801ceae:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801ceb2:	b29b      	uxth	r3, r3
 801ceb4:	e7c5      	b.n	801ce42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801ceb6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ceb8:	920b      	str	r2, [sp, #44]	; 0x2c
 801ceba:	4621      	mov	r1, r4
 801cebc:	469e      	mov	lr, r3
 801cebe:	e78f      	b.n	801cde0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801cec0:	9a03      	ldr	r2, [sp, #12]
 801cec2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801cec6:	442a      	add	r2, r5
 801cec8:	ebae 0305 	sub.w	r3, lr, r5
 801cecc:	b292      	uxth	r2, r2
 801cece:	b29b      	uxth	r3, r3
 801ced0:	9203      	str	r2, [sp, #12]
 801ced2:	2500      	movs	r5, #0
 801ced4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ced6:	4542      	cmp	r2, r8
 801ced8:	d88e      	bhi.n	801cdf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801ceda:	4621      	mov	r1, r4
 801cedc:	e74e      	b.n	801cd7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801cede:	458e      	cmp	lr, r1
 801cee0:	bf29      	itett	cs
 801cee2:	ebae 0301 	subcs.w	r3, lr, r1
 801cee6:	eba1 040e 	subcc.w	r4, r1, lr
 801ceea:	b29b      	uxthcs	r3, r3
 801ceec:	910c      	strcs	r1, [sp, #48]	; 0x30
 801ceee:	bf2f      	iteee	cs
 801cef0:	462c      	movcs	r4, r5
 801cef2:	b2a4      	uxthcc	r4, r4
 801cef4:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801cef8:	462b      	movcc	r3, r5
 801cefa:	f04f 0900 	mov.w	r9, #0
 801cefe:	9a03      	ldr	r2, [sp, #12]
 801cf00:	980c      	ldr	r0, [sp, #48]	; 0x30
 801cf02:	444a      	add	r2, r9
 801cf04:	4548      	cmp	r0, r9
 801cf06:	b292      	uxth	r2, r2
 801cf08:	d074      	beq.n	801cff4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801cf0a:	445a      	add	r2, fp
 801cf0c:	2004      	movs	r0, #4
 801cf0e:	4605      	mov	r5, r0
 801cf10:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801cf14:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cf16:	fb15 0202 	smlabb	r2, r5, r2, r0
 801cf1a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801cf1c:	5880      	ldr	r0, [r0, r2]
 801cf1e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801cf22:	d014      	beq.n	801cf4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801cf24:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801cf28:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801cf2c:	d112      	bne.n	801cf54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801cf2e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801cf30:	2aff      	cmp	r2, #255	; 0xff
 801cf32:	d10f      	bne.n	801cf54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801cf34:	0942      	lsrs	r2, r0, #5
 801cf36:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801cf3a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cf3e:	f025 0507 	bic.w	r5, r5, #7
 801cf42:	4315      	orrs	r5, r2
 801cf44:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801cf48:	4305      	orrs	r5, r0
 801cf4a:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801cf4e:	f109 0901 	add.w	r9, r9, #1
 801cf52:	e7d4      	b.n	801cefe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801cf54:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801cf58:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801cf5c:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801cf60:	9215      	str	r2, [sp, #84]	; 0x54
 801cf62:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801cf64:	fb02 fa0a 	mul.w	sl, r2, sl
 801cf68:	f10a 0201 	add.w	r2, sl, #1
 801cf6c:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801cf70:	ea4f 272c 	mov.w	r7, ip, asr #8
 801cf74:	1212      	asrs	r2, r2, #8
 801cf76:	fa1f fa82 	uxth.w	sl, r2
 801cf7a:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801cf7e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cf82:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801cf86:	43d2      	mvns	r2, r2
 801cf88:	b2d2      	uxtb	r2, r2
 801cf8a:	fb16 f60a 	smulbb	r6, r6, sl
 801cf8e:	fa5f fc8c 	uxtb.w	ip, ip
 801cf92:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801cf96:	b2c0      	uxtb	r0, r0
 801cf98:	fb07 6702 	mla	r7, r7, r2, r6
 801cf9c:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801cfa0:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801cfa2:	fb10 f00a 	smulbb	r0, r0, sl
 801cfa6:	fb0c 0002 	mla	r0, ip, r2, r0
 801cfaa:	b2ed      	uxtb	r5, r5
 801cfac:	b2bf      	uxth	r7, r7
 801cfae:	fb15 f50a 	smulbb	r5, r5, sl
 801cfb2:	b280      	uxth	r0, r0
 801cfb4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801cfb8:	fb06 5602 	mla	r6, r6, r2, r5
 801cfbc:	1c7a      	adds	r2, r7, #1
 801cfbe:	1c45      	adds	r5, r0, #1
 801cfc0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801cfc4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801cfc8:	b2b6      	uxth	r6, r6
 801cfca:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801cfce:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cfd2:	432f      	orrs	r7, r5
 801cfd4:	1c75      	adds	r5, r6, #1
 801cfd6:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801cfda:	096d      	lsrs	r5, r5, #5
 801cfdc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cfe0:	432f      	orrs	r7, r5
 801cfe2:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801cfe6:	e7b2      	b.n	801cf4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801cfe8:	20012db4 	.word	0x20012db4
 801cfec:	20012dae 	.word	0x20012dae
 801cff0:	fffff7fb 	.word	0xfffff7fb
 801cff4:	9203      	str	r2, [sp, #12]
 801cff6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801cff8:	458e      	cmp	lr, r1
 801cffa:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801cffe:	f4ff af68 	bcc.w	801ced2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801d002:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801d004:	9906      	ldr	r1, [sp, #24]
 801d006:	8812      	ldrh	r2, [r2, #0]
 801d008:	1a52      	subs	r2, r2, r1
 801d00a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d00e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d010:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d012:	3201      	adds	r2, #1
 801d014:	428a      	cmp	r2, r1
 801d016:	9209      	str	r2, [sp, #36]	; 0x24
 801d018:	d111      	bne.n	801d03e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801d01a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801d01e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801d022:	9b06      	ldr	r3, [sp, #24]
 801d024:	eba5 0509 	sub.w	r5, r5, r9
 801d028:	b2ad      	uxth	r5, r5
 801d02a:	2d00      	cmp	r5, #0
 801d02c:	bf08      	it	eq
 801d02e:	4619      	moveq	r1, r3
 801d030:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d032:	bf18      	it	ne
 801d034:	2100      	movne	r1, #0
 801d036:	3301      	adds	r3, #1
 801d038:	930d      	str	r3, [sp, #52]	; 0x34
 801d03a:	b289      	uxth	r1, r1
 801d03c:	e695      	b.n	801cd6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801d03e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d042:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801d046:	1b2d      	subs	r5, r5, r4
 801d048:	b2ad      	uxth	r5, r5
 801d04a:	2d00      	cmp	r5, #0
 801d04c:	bf18      	it	ne
 801d04e:	2400      	movne	r4, #0
 801d050:	e740      	b.n	801ced4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801d052:	4b04      	ldr	r3, [pc, #16]	; (801d064 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801d054:	6818      	ldr	r0, [r3, #0]
 801d056:	6803      	ldr	r3, [r0, #0]
 801d058:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d05a:	4798      	blx	r3
 801d05c:	b01d      	add	sp, #116	; 0x74
 801d05e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d062:	bf00      	nop
 801d064:	20012db4 	.word	0x20012db4

0801d068 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d06c:	b09f      	sub	sp, #124	; 0x7c
 801d06e:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801d072:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801d076:	920a      	str	r2, [sp, #40]	; 0x28
 801d078:	461d      	mov	r5, r3
 801d07a:	4604      	mov	r4, r0
 801d07c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d07e:	2a00      	cmp	r2, #0
 801d080:	f000 81fa 	beq.w	801d478 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801d084:	6828      	ldr	r0, [r5, #0]
 801d086:	6869      	ldr	r1, [r5, #4]
 801d088:	aa1a      	add	r2, sp, #104	; 0x68
 801d08a:	c203      	stmia	r2!, {r0, r1}
 801d08c:	6818      	ldr	r0, [r3, #0]
 801d08e:	6859      	ldr	r1, [r3, #4]
 801d090:	aa1c      	add	r2, sp, #112	; 0x70
 801d092:	c203      	stmia	r2!, {r0, r1}
 801d094:	a81a      	add	r0, sp, #104	; 0x68
 801d096:	f7f8 fb8f 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d09a:	4629      	mov	r1, r5
 801d09c:	a81c      	add	r0, sp, #112	; 0x70
 801d09e:	f7f8 fbcf 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d0a2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d0a6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801d0aa:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801d0ae:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d0b2:	bfd7      	itett	le
 801d0b4:	b29a      	uxthle	r2, r3
 801d0b6:	2201      	movgt	r2, #1
 801d0b8:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d0bc:	fb91 f2f2 	sdivle	r2, r1, r2
 801d0c0:	9201      	str	r2, [sp, #4]
 801d0c2:	9801      	ldr	r0, [sp, #4]
 801d0c4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801d0c8:	fb92 f0f0 	sdiv	r0, r2, r0
 801d0cc:	b280      	uxth	r0, r0
 801d0ce:	9010      	str	r0, [sp, #64]	; 0x40
 801d0d0:	9901      	ldr	r1, [sp, #4]
 801d0d2:	9801      	ldr	r0, [sp, #4]
 801d0d4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d0d6:	440e      	add	r6, r1
 801d0d8:	fb05 2510 	mls	r5, r5, r0, r2
 801d0dc:	fb15 f503 	smulbb	r5, r5, r3
 801d0e0:	3e01      	subs	r6, #1
 801d0e2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d0e6:	fb96 f6f1 	sdiv	r6, r6, r1
 801d0ea:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801d0ee:	440d      	add	r5, r1
 801d0f0:	4419      	add	r1, r3
 801d0f2:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801d0f6:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801d0fa:	441a      	add	r2, r3
 801d0fc:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801d100:	9304      	str	r3, [sp, #16]
 801d102:	4b96      	ldr	r3, [pc, #600]	; (801d35c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801d104:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801d108:	6818      	ldr	r0, [r3, #0]
 801d10a:	6803      	ldr	r3, [r0, #0]
 801d10c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d10e:	4798      	blx	r3
 801d110:	4b93      	ldr	r3, [pc, #588]	; (801d360 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801d112:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801d116:	881a      	ldrh	r2, [r3, #0]
 801d118:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801d11c:	9318      	str	r3, [sp, #96]	; 0x60
 801d11e:	fb02 c101 	mla	r1, r2, r1, ip
 801d122:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801d126:	4357      	muls	r7, r2
 801d128:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801d12c:	3601      	adds	r6, #1
 801d12e:	920b      	str	r2, [sp, #44]	; 0x2c
 801d130:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d132:	4b8c      	ldr	r3, [pc, #560]	; (801d364 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d134:	b2b6      	uxth	r6, r6
 801d136:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801d13a:	1d32      	adds	r2, r6, #4
 801d13c:	9206      	str	r2, [sp, #24]
 801d13e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d140:	43d2      	mvns	r2, r2
 801d142:	b2d2      	uxtb	r2, r2
 801d144:	b2ad      	uxth	r5, r5
 801d146:	9215      	str	r2, [sp, #84]	; 0x54
 801d148:	9a04      	ldr	r2, [sp, #16]
 801d14a:	2d00      	cmp	r5, #0
 801d14c:	bf0c      	ite	eq
 801d14e:	4611      	moveq	r1, r2
 801d150:	2100      	movne	r1, #0
 801d152:	2200      	movs	r2, #0
 801d154:	1b1b      	subs	r3, r3, r4
 801d156:	b289      	uxth	r1, r1
 801d158:	920d      	str	r2, [sp, #52]	; 0x34
 801d15a:	9319      	str	r3, [sp, #100]	; 0x64
 801d15c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d15e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d160:	fa12 f383 	uxtah	r3, r2, r3
 801d164:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d166:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801d16a:	3304      	adds	r3, #4
 801d16c:	9307      	str	r3, [sp, #28]
 801d16e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d170:	455b      	cmp	r3, fp
 801d172:	f240 817c 	bls.w	801d46e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801d176:	9a01      	ldr	r2, [sp, #4]
 801d178:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801d17c:	fbb5 f3f3 	udiv	r3, r5, r3
 801d180:	1ad3      	subs	r3, r2, r3
 801d182:	b29b      	uxth	r3, r3
 801d184:	9316      	str	r3, [sp, #88]	; 0x58
 801d186:	9b07      	ldr	r3, [sp, #28]
 801d188:	9807      	ldr	r0, [sp, #28]
 801d18a:	785a      	ldrb	r2, [r3, #1]
 801d18c:	789b      	ldrb	r3, [r3, #2]
 801d18e:	7800      	ldrb	r0, [r0, #0]
 801d190:	9011      	str	r0, [sp, #68]	; 0x44
 801d192:	021b      	lsls	r3, r3, #8
 801d194:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801d198:	9a07      	ldr	r2, [sp, #28]
 801d19a:	78d2      	ldrb	r2, [r2, #3]
 801d19c:	4313      	orrs	r3, r2
 801d19e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d1a0:	3001      	adds	r0, #1
 801d1a2:	441a      	add	r2, r3
 801d1a4:	9005      	str	r0, [sp, #20]
 801d1a6:	1c50      	adds	r0, r2, #1
 801d1a8:	9003      	str	r0, [sp, #12]
 801d1aa:	7852      	ldrb	r2, [r2, #1]
 801d1ac:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d1ae:	0212      	lsls	r2, r2, #8
 801d1b0:	5cc3      	ldrb	r3, [r0, r3]
 801d1b2:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801d1b6:	431a      	orrs	r2, r3
 801d1b8:	b293      	uxth	r3, r2
 801d1ba:	930c      	str	r3, [sp, #48]	; 0x30
 801d1bc:	2300      	movs	r3, #0
 801d1be:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801d1c2:	9308      	str	r3, [sp, #32]
 801d1c4:	461a      	mov	r2, r3
 801d1c6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d1ca:	930e      	str	r3, [sp, #56]	; 0x38
 801d1cc:	f04f 0801 	mov.w	r8, #1
 801d1d0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801d1d4:	f8cd 8008 	str.w	r8, [sp, #8]
 801d1d8:	46c4      	mov	ip, r8
 801d1da:	930f      	str	r3, [sp, #60]	; 0x3c
 801d1dc:	2d00      	cmp	r5, #0
 801d1de:	d07c      	beq.n	801d2da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801d1e0:	45ac      	cmp	ip, r5
 801d1e2:	d26c      	bcs.n	801d2be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801d1e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d1e6:	eba5 050c 	sub.w	r5, r5, ip
 801d1ea:	455b      	cmp	r3, fp
 801d1ec:	b2ad      	uxth	r5, r5
 801d1ee:	4608      	mov	r0, r1
 801d1f0:	d802      	bhi.n	801d1f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801d1f2:	e070      	b.n	801d2d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801d1f4:	2b00      	cmp	r3, #0
 801d1f6:	d15c      	bne.n	801d2b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801d1f8:	9b03      	ldr	r3, [sp, #12]
 801d1fa:	9a02      	ldr	r2, [sp, #8]
 801d1fc:	785b      	ldrb	r3, [r3, #1]
 801d1fe:	9902      	ldr	r1, [sp, #8]
 801d200:	f1c2 0207 	rsb	r2, r2, #7
 801d204:	4093      	lsls	r3, r2
 801d206:	005b      	lsls	r3, r3, #1
 801d208:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d20c:	9b03      	ldr	r3, [sp, #12]
 801d20e:	781b      	ldrb	r3, [r3, #0]
 801d210:	410b      	asrs	r3, r1
 801d212:	3101      	adds	r1, #1
 801d214:	b2c9      	uxtb	r1, r1
 801d216:	2908      	cmp	r1, #8
 801d218:	9102      	str	r1, [sp, #8]
 801d21a:	9903      	ldr	r1, [sp, #12]
 801d21c:	bf0a      	itet	eq
 801d21e:	3102      	addeq	r1, #2
 801d220:	3101      	addne	r1, #1
 801d222:	9103      	streq	r1, [sp, #12]
 801d224:	b2db      	uxtb	r3, r3
 801d226:	bf0a      	itet	eq
 801d228:	2100      	moveq	r1, #0
 801d22a:	9103      	strne	r1, [sp, #12]
 801d22c:	9102      	streq	r1, [sp, #8]
 801d22e:	4313      	orrs	r3, r2
 801d230:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d232:	b29a      	uxth	r2, r3
 801d234:	4291      	cmp	r1, r2
 801d236:	d30a      	bcc.n	801d24e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801d238:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801d23c:	2301      	movs	r3, #1
 801d23e:	9905      	ldr	r1, [sp, #20]
 801d240:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801d244:	d30f      	bcc.n	801d266 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801d246:	2100      	movs	r1, #0
 801d248:	4698      	mov	r8, r3
 801d24a:	9100      	str	r1, [sp, #0]
 801d24c:	e032      	b.n	801d2b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801d24e:	9b05      	ldr	r3, [sp, #20]
 801d250:	429a      	cmp	r2, r3
 801d252:	d318      	bcc.n	801d286 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801d254:	eb04 0308 	add.w	r3, r4, r8
 801d258:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801d25c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801d260:	f108 0301 	add.w	r3, r8, #1
 801d264:	b29b      	uxth	r3, r3
 801d266:	9905      	ldr	r1, [sp, #20]
 801d268:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801d26c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d270:	710e      	strb	r6, [r1, #4]
 801d272:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801d274:	80ce      	strh	r6, [r1, #6]
 801d276:	f108 0601 	add.w	r6, r8, #1
 801d27a:	714e      	strb	r6, [r1, #5]
 801d27c:	9905      	ldr	r1, [sp, #20]
 801d27e:	3101      	adds	r1, #1
 801d280:	b289      	uxth	r1, r1
 801d282:	9105      	str	r1, [sp, #20]
 801d284:	e7df      	b.n	801d246 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801d286:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801d28a:	4611      	mov	r1, r2
 801d28c:	795b      	ldrb	r3, [r3, #5]
 801d28e:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801d292:	4426      	add	r6, r4
 801d294:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801d296:	4437      	add	r7, r6
 801d298:	2f00      	cmp	r7, #0
 801d29a:	dd06      	ble.n	801d2aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801d29c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d2a0:	790f      	ldrb	r7, [r1, #4]
 801d2a2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801d2a6:	88c9      	ldrh	r1, [r1, #6]
 801d2a8:	e7f4      	b.n	801d294 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801d2aa:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801d2ae:	b29b      	uxth	r3, r3
 801d2b0:	e7c5      	b.n	801d23e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801d2b2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d2b4:	920c      	str	r2, [sp, #48]	; 0x30
 801d2b6:	4601      	mov	r1, r0
 801d2b8:	9a00      	ldr	r2, [sp, #0]
 801d2ba:	469c      	mov	ip, r3
 801d2bc:	e78e      	b.n	801d1dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801d2be:	1957      	adds	r7, r2, r5
 801d2c0:	ebac 0305 	sub.w	r3, ip, r5
 801d2c4:	b2ba      	uxth	r2, r7
 801d2c6:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d2ca:	9200      	str	r2, [sp, #0]
 801d2cc:	b29b      	uxth	r3, r3
 801d2ce:	2500      	movs	r5, #0
 801d2d0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d2d2:	455a      	cmp	r2, fp
 801d2d4:	d88e      	bhi.n	801d1f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801d2d6:	4601      	mov	r1, r0
 801d2d8:	e749      	b.n	801d16e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801d2da:	458c      	cmp	ip, r1
 801d2dc:	bf2c      	ite	cs
 801d2de:	4628      	movcs	r0, r5
 801d2e0:	462b      	movcc	r3, r5
 801d2e2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801d2e4:	bf27      	ittee	cs
 801d2e6:	9109      	strcs	r1, [sp, #36]	; 0x24
 801d2e8:	ebac 0301 	subcs.w	r3, ip, r1
 801d2ec:	eba1 000c 	subcc.w	r0, r1, ip
 801d2f0:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801d2f4:	bf2c      	ite	cs
 801d2f6:	b29b      	uxthcs	r3, r3
 801d2f8:	b280      	uxthcc	r0, r0
 801d2fa:	2dff      	cmp	r5, #255	; 0xff
 801d2fc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d2fe:	eb02 0705 	add.w	r7, r2, r5
 801d302:	b2bd      	uxth	r5, r7
 801d304:	9500      	str	r5, [sp, #0]
 801d306:	d12f      	bne.n	801d368 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801d308:	465e      	mov	r6, fp
 801d30a:	9d00      	ldr	r5, [sp, #0]
 801d30c:	42aa      	cmp	r2, r5
 801d30e:	f040 8084 	bne.w	801d41a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801d312:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d314:	458c      	cmp	ip, r1
 801d316:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d31a:	d3d8      	bcc.n	801d2ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801d31c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801d31e:	9904      	ldr	r1, [sp, #16]
 801d320:	8812      	ldrh	r2, [r2, #0]
 801d322:	1a52      	subs	r2, r2, r1
 801d324:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d328:	9a08      	ldr	r2, [sp, #32]
 801d32a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801d32c:	3201      	adds	r2, #1
 801d32e:	428a      	cmp	r2, r1
 801d330:	9208      	str	r2, [sp, #32]
 801d332:	f040 8092 	bne.w	801d45a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801d336:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801d33a:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801d33e:	9b04      	ldr	r3, [sp, #16]
 801d340:	eba5 050c 	sub.w	r5, r5, ip
 801d344:	b2ad      	uxth	r5, r5
 801d346:	2d00      	cmp	r5, #0
 801d348:	bf08      	it	eq
 801d34a:	4619      	moveq	r1, r3
 801d34c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d34e:	bf18      	it	ne
 801d350:	2100      	movne	r1, #0
 801d352:	3301      	adds	r3, #1
 801d354:	930d      	str	r3, [sp, #52]	; 0x34
 801d356:	b289      	uxth	r1, r1
 801d358:	e700      	b.n	801d15c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801d35a:	bf00      	nop
 801d35c:	20012db4 	.word	0x20012db4
 801d360:	20012dae 	.word	0x20012dae
 801d364:	fffff7fb 	.word	0xfffff7fb
 801d368:	46d9      	mov	r9, fp
 801d36a:	9d00      	ldr	r5, [sp, #0]
 801d36c:	42aa      	cmp	r2, r5
 801d36e:	d0d0      	beq.n	801d312 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801d370:	1c55      	adds	r5, r2, #1
 801d372:	4422      	add	r2, r4
 801d374:	9517      	str	r5, [sp, #92]	; 0x5c
 801d376:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801d37a:	9a06      	ldr	r2, [sp, #24]
 801d37c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d380:	4472      	add	r2, lr
 801d382:	9212      	str	r2, [sp, #72]	; 0x48
 801d384:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d386:	f8b9 2000 	ldrh.w	r2, [r9]
 801d38a:	f897 a002 	ldrb.w	sl, [r7, #2]
 801d38e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d390:	1216      	asrs	r6, r2, #8
 801d392:	fb1a fa07 	smulbb	sl, sl, r7
 801d396:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d39a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d39c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d3a0:	fb06 a607 	mla	r6, r6, r7, sl
 801d3a4:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d3a6:	f897 a001 	ldrb.w	sl, [r7, #1]
 801d3aa:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d3ac:	10d5      	asrs	r5, r2, #3
 801d3ae:	fb1a fa07 	smulbb	sl, sl, r7
 801d3b2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d3b6:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d3b8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d3bc:	fb05 a507 	mla	r5, r5, r7, sl
 801d3c0:	9f06      	ldr	r7, [sp, #24]
 801d3c2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d3c6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d3c8:	00d2      	lsls	r2, r2, #3
 801d3ca:	fb1e fe07 	smulbb	lr, lr, r7
 801d3ce:	b2d2      	uxtb	r2, r2
 801d3d0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d3d2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d3d6:	b2b6      	uxth	r6, r6
 801d3d8:	fb02 e207 	mla	r2, r2, r7, lr
 801d3dc:	b292      	uxth	r2, r2
 801d3de:	b2ad      	uxth	r5, r5
 801d3e0:	f106 0a01 	add.w	sl, r6, #1
 801d3e4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d3e8:	f102 0e01 	add.w	lr, r2, #1
 801d3ec:	f105 0a01 	add.w	sl, r5, #1
 801d3f0:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801d3f4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d3f8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d3fc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d400:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d404:	ea4e 0606 	orr.w	r6, lr, r6
 801d408:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d40c:	ea46 060a 	orr.w	r6, r6, sl
 801d410:	f829 6b02 	strh.w	r6, [r9], #2
 801d414:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801d418:	e7a7      	b.n	801d36a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801d41a:	f102 0e01 	add.w	lr, r2, #1
 801d41e:	4422      	add	r2, r4
 801d420:	9f06      	ldr	r7, [sp, #24]
 801d422:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801d426:	9a06      	ldr	r2, [sp, #24]
 801d428:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801d42c:	eb02 0a05 	add.w	sl, r2, r5
 801d430:	4a13      	ldr	r2, [pc, #76]	; (801d480 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801d432:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801d436:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801d43a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d43e:	00d2      	lsls	r2, r2, #3
 801d440:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d444:	ea49 0202 	orr.w	r2, r9, r2
 801d448:	f817 9005 	ldrb.w	r9, [r7, r5]
 801d44c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801d450:	f826 2b02 	strh.w	r2, [r6], #2
 801d454:	fa1f f28e 	uxth.w	r2, lr
 801d458:	e757      	b.n	801d30a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801d45a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d45e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801d462:	1a2d      	subs	r5, r5, r0
 801d464:	b2ad      	uxth	r5, r5
 801d466:	2d00      	cmp	r5, #0
 801d468:	bf18      	it	ne
 801d46a:	2000      	movne	r0, #0
 801d46c:	e730      	b.n	801d2d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801d46e:	4b05      	ldr	r3, [pc, #20]	; (801d484 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801d470:	6818      	ldr	r0, [r3, #0]
 801d472:	6803      	ldr	r3, [r0, #0]
 801d474:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d476:	4798      	blx	r3
 801d478:	b01f      	add	sp, #124	; 0x7c
 801d47a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d47e:	bf00      	nop
 801d480:	fffff800 	.word	0xfffff800
 801d484:	20012db4 	.word	0x20012db4

0801d488 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801d488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d48c:	b091      	sub	sp, #68	; 0x44
 801d48e:	469b      	mov	fp, r3
 801d490:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801d494:	4616      	mov	r6, r2
 801d496:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801d49a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801d49e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801d4a2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801d4a6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801d4aa:	4604      	mov	r4, r0
 801d4ac:	460d      	mov	r5, r1
 801d4ae:	4640      	mov	r0, r8
 801d4b0:	4659      	mov	r1, fp
 801d4b2:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801d4b6:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801d4ba:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801d4be:	f7f3 fa1d 	bl	80108fc <_ZN8touchgfx4RectaNERKS0_>
 801d4c2:	4631      	mov	r1, r6
 801d4c4:	4640      	mov	r0, r8
 801d4c6:	f7f3 fa19 	bl	80108fc <_ZN8touchgfx4RectaNERKS0_>
 801d4ca:	4b74      	ldr	r3, [pc, #464]	; (801d69c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801d4cc:	8818      	ldrh	r0, [r3, #0]
 801d4ce:	4b74      	ldr	r3, [pc, #464]	; (801d6a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801d4d0:	8819      	ldrh	r1, [r3, #0]
 801d4d2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d4d6:	2b00      	cmp	r3, #0
 801d4d8:	b202      	sxth	r2, r0
 801d4da:	b20e      	sxth	r6, r1
 801d4dc:	da07      	bge.n	801d4ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801d4de:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801d4e2:	4463      	add	r3, ip
 801d4e4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801d4e8:	2300      	movs	r3, #0
 801d4ea:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801d4ee:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d4f2:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801d4f6:	1ad2      	subs	r2, r2, r3
 801d4f8:	4594      	cmp	ip, r2
 801d4fa:	bfc4      	itt	gt
 801d4fc:	1ac2      	subgt	r2, r0, r3
 801d4fe:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801d502:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d506:	2a00      	cmp	r2, #0
 801d508:	da07      	bge.n	801d51a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801d50a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801d50e:	4462      	add	r2, ip
 801d510:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801d514:	2200      	movs	r2, #0
 801d516:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801d51a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801d51e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d522:	eba6 060a 	sub.w	r6, r6, sl
 801d526:	42b2      	cmp	r2, r6
 801d528:	bfc4      	itt	gt
 801d52a:	eba1 020a 	subgt.w	r2, r1, sl
 801d52e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801d532:	4a5c      	ldr	r2, [pc, #368]	; (801d6a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801d534:	7812      	ldrb	r2, [r2, #0]
 801d536:	b9a2      	cbnz	r2, 801d562 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801d538:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d53c:	4286      	cmp	r6, r0
 801d53e:	4640      	mov	r0, r8
 801d540:	9303      	str	r3, [sp, #12]
 801d542:	bf14      	ite	ne
 801d544:	2600      	movne	r6, #0
 801d546:	2601      	moveq	r6, #1
 801d548:	f7f3 fa1b 	bl	8010982 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d54c:	9b03      	ldr	r3, [sp, #12]
 801d54e:	b160      	cbz	r0, 801d56a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801d550:	2300      	movs	r3, #0
 801d552:	8023      	strh	r3, [r4, #0]
 801d554:	8063      	strh	r3, [r4, #2]
 801d556:	80a3      	strh	r3, [r4, #4]
 801d558:	4620      	mov	r0, r4
 801d55a:	80e3      	strh	r3, [r4, #6]
 801d55c:	b011      	add	sp, #68	; 0x44
 801d55e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d562:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801d566:	428e      	cmp	r6, r1
 801d568:	e7e9      	b.n	801d53e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801d56a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801d56e:	9205      	str	r2, [sp, #20]
 801d570:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d574:	9206      	str	r2, [sp, #24]
 801d576:	f8bb 2000 	ldrh.w	r2, [fp]
 801d57a:	900e      	str	r0, [sp, #56]	; 0x38
 801d57c:	1a9b      	subs	r3, r3, r2
 801d57e:	b21b      	sxth	r3, r3
 801d580:	9303      	str	r3, [sp, #12]
 801d582:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d586:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801d58a:	ebaa 0a03 	sub.w	sl, sl, r3
 801d58e:	fa0f f38a 	sxth.w	r3, sl
 801d592:	9304      	str	r3, [sp, #16]
 801d594:	9b03      	ldr	r3, [sp, #12]
 801d596:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801d59a:	9b04      	ldr	r3, [sp, #16]
 801d59c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801d5a0:	9b05      	ldr	r3, [sp, #20]
 801d5a2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801d5a6:	a90e      	add	r1, sp, #56	; 0x38
 801d5a8:	9b06      	ldr	r3, [sp, #24]
 801d5aa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801d5ae:	a80c      	add	r0, sp, #48	; 0x30
 801d5b0:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801d5b4:	f7f8 f944 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d5b8:	4640      	mov	r0, r8
 801d5ba:	f7f8 f8fd 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d5be:	a80e      	add	r0, sp, #56	; 0x38
 801d5c0:	f7f8 f8fa 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d5c4:	4b38      	ldr	r3, [pc, #224]	; (801d6a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801d5c6:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801d5ca:	881b      	ldrh	r3, [r3, #0]
 801d5cc:	9307      	str	r3, [sp, #28]
 801d5ce:	682b      	ldr	r3, [r5, #0]
 801d5d0:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801d6ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801d5d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d5d6:	4628      	mov	r0, r5
 801d5d8:	4798      	blx	r3
 801d5da:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801d5de:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801d5e2:	4681      	mov	r9, r0
 801d5e4:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801d5e8:	f8db 0000 	ldr.w	r0, [fp]
 801d5ec:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801d5ee:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801d5f2:	6803      	ldr	r3, [r0, #0]
 801d5f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d5f6:	4798      	blx	r3
 801d5f8:	4607      	mov	r7, r0
 801d5fa:	f8db 0000 	ldr.w	r0, [fp]
 801d5fe:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801d602:	6803      	ldr	r3, [r0, #0]
 801d604:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d608:	9109      	str	r1, [sp, #36]	; 0x24
 801d60a:	9208      	str	r2, [sp, #32]
 801d60c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d60e:	4798      	blx	r3
 801d610:	f010 0f01 	tst.w	r0, #1
 801d614:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801d618:	d012      	beq.n	801d640 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801d61a:	f8db 0000 	ldr.w	r0, [fp]
 801d61e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801d622:	6803      	ldr	r3, [r0, #0]
 801d624:	9200      	str	r2, [sp, #0]
 801d626:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801d628:	e898 0006 	ldmia.w	r8, {r1, r2}
 801d62c:	462b      	mov	r3, r5
 801d62e:	47b0      	blx	r6
 801d630:	9b03      	ldr	r3, [sp, #12]
 801d632:	8023      	strh	r3, [r4, #0]
 801d634:	9b04      	ldr	r3, [sp, #16]
 801d636:	8063      	strh	r3, [r4, #2]
 801d638:	9b05      	ldr	r3, [sp, #20]
 801d63a:	80a3      	strh	r3, [r4, #4]
 801d63c:	9b06      	ldr	r3, [sp, #24]
 801d63e:	e78b      	b.n	801d558 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801d640:	fb09 f202 	mul.w	r2, r9, r2
 801d644:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801d648:	440f      	add	r7, r1
 801d64a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801d64e:	b166      	cbz	r6, 801d66a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801d650:	9a07      	ldr	r2, [sp, #28]
 801d652:	4592      	cmp	sl, r2
 801d654:	d109      	bne.n	801d66a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801d656:	f8db 0000 	ldr.w	r0, [fp]
 801d65a:	6802      	ldr	r2, [r0, #0]
 801d65c:	fb09 f303 	mul.w	r3, r9, r3
 801d660:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801d662:	4629      	mov	r1, r5
 801d664:	463a      	mov	r2, r7
 801d666:	47b0      	blx	r6
 801d668:	e7e2      	b.n	801d630 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801d66a:	fb0a f303 	mul.w	r3, sl, r3
 801d66e:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801d6ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801d672:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801d676:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801d67a:	4545      	cmp	r5, r8
 801d67c:	d2d8      	bcs.n	801d630 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801d67e:	f8db 0000 	ldr.w	r0, [fp]
 801d682:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d686:	6802      	ldr	r2, [r0, #0]
 801d688:	4629      	mov	r1, r5
 801d68a:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801d68e:	005b      	lsls	r3, r3, #1
 801d690:	463a      	mov	r2, r7
 801d692:	47d0      	blx	sl
 801d694:	444f      	add	r7, r9
 801d696:	4435      	add	r5, r6
 801d698:	e7ef      	b.n	801d67a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801d69a:	bf00      	nop
 801d69c:	20012da8 	.word	0x20012da8
 801d6a0:	20012daa 	.word	0x20012daa
 801d6a4:	20012dac 	.word	0x20012dac
 801d6a8:	20012dae 	.word	0x20012dae
 801d6ac:	20012db4 	.word	0x20012db4

0801d6b0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801d6b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d6b2:	4606      	mov	r6, r0
 801d6b4:	b087      	sub	sp, #28
 801d6b6:	460c      	mov	r4, r1
 801d6b8:	4617      	mov	r7, r2
 801d6ba:	461d      	mov	r5, r3
 801d6bc:	b333      	cbz	r3, 801d70c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d6be:	4608      	mov	r0, r1
 801d6c0:	f7f3 f95f 	bl	8010982 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d6c4:	bb10      	cbnz	r0, 801d70c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d6c6:	6820      	ldr	r0, [r4, #0]
 801d6c8:	6861      	ldr	r1, [r4, #4]
 801d6ca:	4c1c      	ldr	r4, [pc, #112]	; (801d73c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801d6cc:	ab04      	add	r3, sp, #16
 801d6ce:	c303      	stmia	r3!, {r0, r1}
 801d6d0:	a804      	add	r0, sp, #16
 801d6d2:	f7f8 f871 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d6d6:	6820      	ldr	r0, [r4, #0]
 801d6d8:	6803      	ldr	r3, [r0, #0]
 801d6da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d6dc:	4798      	blx	r3
 801d6de:	2dff      	cmp	r5, #255	; 0xff
 801d6e0:	d016      	beq.n	801d710 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801d6e2:	f010 0f08 	tst.w	r0, #8
 801d6e6:	6820      	ldr	r0, [r4, #0]
 801d6e8:	d015      	beq.n	801d716 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801d6ea:	2400      	movs	r4, #0
 801d6ec:	6801      	ldr	r1, [r0, #0]
 801d6ee:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801d6f2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d6f6:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801d6fa:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801d6fe:	9401      	str	r4, [sp, #4]
 801d700:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801d704:	9400      	str	r4, [sp, #0]
 801d706:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801d708:	4639      	mov	r1, r7
 801d70a:	47a0      	blx	r4
 801d70c:	b007      	add	sp, #28
 801d70e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d710:	f010 0f02 	tst.w	r0, #2
 801d714:	e7e7      	b.n	801d6e6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801d716:	6803      	ldr	r3, [r0, #0]
 801d718:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d71a:	4798      	blx	r3
 801d71c:	4b08      	ldr	r3, [pc, #32]	; (801d740 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801d71e:	881a      	ldrh	r2, [r3, #0]
 801d720:	6833      	ldr	r3, [r6, #0]
 801d722:	e9cd 7500 	strd	r7, r5, [sp]
 801d726:	4601      	mov	r1, r0
 801d728:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801d72a:	4630      	mov	r0, r6
 801d72c:	ab04      	add	r3, sp, #16
 801d72e:	47a8      	blx	r5
 801d730:	6820      	ldr	r0, [r4, #0]
 801d732:	6803      	ldr	r3, [r0, #0]
 801d734:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d736:	4798      	blx	r3
 801d738:	e7e8      	b.n	801d70c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d73a:	bf00      	nop
 801d73c:	20012db4 	.word	0x20012db4
 801d740:	20012dae 	.word	0x20012dae

0801d744 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801d744:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d748:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801d74c:	9e08      	ldr	r6, [sp, #32]
 801d74e:	4688      	mov	r8, r1
 801d750:	4614      	mov	r4, r2
 801d752:	461d      	mov	r5, r3
 801d754:	2f00      	cmp	r7, #0
 801d756:	f000 80a9 	beq.w	801d8ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d75a:	4618      	mov	r0, r3
 801d75c:	f7f3 f911 	bl	8010982 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d760:	2800      	cmp	r0, #0
 801d762:	f040 80a3 	bne.w	801d8ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d766:	f9b5 1000 	ldrsh.w	r1, [r5]
 801d76a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801d76e:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801d772:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801d776:	fb04 1303 	mla	r3, r4, r3, r1
 801d77a:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801d77e:	4365      	muls	r5, r4
 801d780:	2fff      	cmp	r7, #255	; 0xff
 801d782:	eba4 0200 	sub.w	r2, r4, r0
 801d786:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801d78a:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801d78e:	d04a      	beq.n	801d826 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801d790:	b2bc      	uxth	r4, r7
 801d792:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801d796:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801d79a:	fa5f f788 	uxtb.w	r7, r8
 801d79e:	b2f3      	uxtb	r3, r6
 801d7a0:	0040      	lsls	r0, r0, #1
 801d7a2:	fb0e fe04 	mul.w	lr, lr, r4
 801d7a6:	4367      	muls	r7, r4
 801d7a8:	4363      	muls	r3, r4
 801d7aa:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801d7ae:	fa1f fc8c 	uxth.w	ip, ip
 801d7b2:	42a9      	cmp	r1, r5
 801d7b4:	d27a      	bcs.n	801d8ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d7b6:	eb01 0900 	add.w	r9, r1, r0
 801d7ba:	4549      	cmp	r1, r9
 801d7bc:	d231      	bcs.n	801d822 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801d7be:	880a      	ldrh	r2, [r1, #0]
 801d7c0:	1214      	asrs	r4, r2, #8
 801d7c2:	10d6      	asrs	r6, r2, #3
 801d7c4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801d7c8:	00d2      	lsls	r2, r2, #3
 801d7ca:	b2d2      	uxtb	r2, r2
 801d7cc:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801d7d0:	fb14 f40c 	smulbb	r4, r4, ip
 801d7d4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d7d8:	4474      	add	r4, lr
 801d7da:	fb12 f20c 	smulbb	r2, r2, ip
 801d7de:	b2a4      	uxth	r4, r4
 801d7e0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d7e4:	441a      	add	r2, r3
 801d7e6:	b292      	uxth	r2, r2
 801d7e8:	f104 0a01 	add.w	sl, r4, #1
 801d7ec:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d7f0:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801d7f4:	fb16 f60c 	smulbb	r6, r6, ip
 801d7f8:	f102 0a01 	add.w	sl, r2, #1
 801d7fc:	443e      	add	r6, r7
 801d7fe:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801d802:	b2b6      	uxth	r6, r6
 801d804:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801d808:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d80c:	4322      	orrs	r2, r4
 801d80e:	1c74      	adds	r4, r6, #1
 801d810:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801d814:	0976      	lsrs	r6, r6, #5
 801d816:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d81a:	4332      	orrs	r2, r6
 801d81c:	f821 2b02 	strh.w	r2, [r1], #2
 801d820:	e7cb      	b.n	801d7ba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801d822:	4441      	add	r1, r8
 801d824:	e7c5      	b.n	801d7b2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801d826:	4f22      	ldr	r7, [pc, #136]	; (801d8b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801d828:	0973      	lsrs	r3, r6, #5
 801d82a:	ea08 0707 	and.w	r7, r8, r7
 801d82e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d832:	433b      	orrs	r3, r7
 801d834:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801d838:	4333      	orrs	r3, r6
 801d83a:	07e7      	lsls	r7, r4, #31
 801d83c:	b29b      	uxth	r3, r3
 801d83e:	d50b      	bpl.n	801d858 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801d840:	0040      	lsls	r0, r0, #1
 801d842:	0052      	lsls	r2, r2, #1
 801d844:	42a9      	cmp	r1, r5
 801d846:	d231      	bcs.n	801d8ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d848:	180c      	adds	r4, r1, r0
 801d84a:	42a1      	cmp	r1, r4
 801d84c:	d202      	bcs.n	801d854 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801d84e:	f821 3b02 	strh.w	r3, [r1], #2
 801d852:	e7fa      	b.n	801d84a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801d854:	4411      	add	r1, r2
 801d856:	e7f5      	b.n	801d844 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801d858:	078e      	lsls	r6, r1, #30
 801d85a:	d008      	beq.n	801d86e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801d85c:	0066      	lsls	r6, r4, #1
 801d85e:	460a      	mov	r2, r1
 801d860:	42aa      	cmp	r2, r5
 801d862:	d202      	bcs.n	801d86a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801d864:	8013      	strh	r3, [r2, #0]
 801d866:	4432      	add	r2, r6
 801d868:	e7fa      	b.n	801d860 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801d86a:	3102      	adds	r1, #2
 801d86c:	3801      	subs	r0, #1
 801d86e:	07c2      	lsls	r2, r0, #31
 801d870:	d50b      	bpl.n	801d88a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801d872:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801d876:	3a01      	subs	r2, #1
 801d878:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801d87c:	0066      	lsls	r6, r4, #1
 801d87e:	42aa      	cmp	r2, r5
 801d880:	d202      	bcs.n	801d888 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801d882:	8013      	strh	r3, [r2, #0]
 801d884:	4432      	add	r2, r6
 801d886:	e7fa      	b.n	801d87e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801d888:	3801      	subs	r0, #1
 801d88a:	b178      	cbz	r0, 801d8ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d88c:	1040      	asrs	r0, r0, #1
 801d88e:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801d892:	0080      	lsls	r0, r0, #2
 801d894:	0064      	lsls	r4, r4, #1
 801d896:	42a9      	cmp	r1, r5
 801d898:	d208      	bcs.n	801d8ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d89a:	180e      	adds	r6, r1, r0
 801d89c:	460a      	mov	r2, r1
 801d89e:	42b2      	cmp	r2, r6
 801d8a0:	d202      	bcs.n	801d8a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801d8a2:	f842 3b04 	str.w	r3, [r2], #4
 801d8a6:	e7fa      	b.n	801d89e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801d8a8:	4421      	add	r1, r4
 801d8aa:	e7f4      	b.n	801d896 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801d8ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d8b0:	00fff800 	.word	0x00fff800

0801d8b4 <_ZN8touchgfx8LCD16bppC1Ev>:
 801d8b4:	2200      	movs	r2, #0
 801d8b6:	4912      	ldr	r1, [pc, #72]	; (801d900 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801d8b8:	6042      	str	r2, [r0, #4]
 801d8ba:	6001      	str	r1, [r0, #0]
 801d8bc:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801d8c0:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801d8c4:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801d8c8:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801d8cc:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801d8d0:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801d8d4:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801d8d8:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801d8dc:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801d8e0:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801d8e4:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801d8e8:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801d8ec:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801d8f0:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801d8f4:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801d8f8:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801d8fc:	4770      	bx	lr
 801d8fe:	bf00      	nop
 801d900:	0802f5f8 	.word	0x0802f5f8

0801d904 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801d904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d908:	460d      	mov	r5, r1
 801d90a:	b08d      	sub	sp, #52	; 0x34
 801d90c:	4604      	mov	r4, r0
 801d90e:	6808      	ldr	r0, [r1, #0]
 801d910:	6849      	ldr	r1, [r1, #4]
 801d912:	4699      	mov	r9, r3
 801d914:	ab08      	add	r3, sp, #32
 801d916:	c303      	stmia	r3!, {r0, r1}
 801d918:	6810      	ldr	r0, [r2, #0]
 801d91a:	6851      	ldr	r1, [r2, #4]
 801d91c:	ab0a      	add	r3, sp, #40	; 0x28
 801d91e:	c303      	stmia	r3!, {r0, r1}
 801d920:	a808      	add	r0, sp, #32
 801d922:	f7f7 ff49 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d926:	4629      	mov	r1, r5
 801d928:	a80a      	add	r0, sp, #40	; 0x28
 801d92a:	f7f7 ff89 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d92e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801d932:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801d936:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801d93a:	4d63      	ldr	r5, [pc, #396]	; (801dac8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801d93c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801d940:	6828      	ldr	r0, [r5, #0]
 801d942:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801d946:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d94a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801d94e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801d952:	440a      	add	r2, r1
 801d954:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801d958:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801d95c:	4413      	add	r3, r2
 801d95e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801d962:	6803      	ldr	r3, [r0, #0]
 801d964:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d966:	4798      	blx	r3
 801d968:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d96c:	d119      	bne.n	801d9a2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801d96e:	f010 0f20 	tst.w	r0, #32
 801d972:	6828      	ldr	r0, [r5, #0]
 801d974:	d018      	beq.n	801d9a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801d976:	2500      	movs	r5, #0
 801d978:	6801      	ldr	r1, [r0, #0]
 801d97a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801d97e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801d982:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801d986:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801d98a:	9502      	str	r5, [sp, #8]
 801d98c:	b2b6      	uxth	r6, r6
 801d98e:	fa1f f588 	uxth.w	r5, r8
 801d992:	9601      	str	r6, [sp, #4]
 801d994:	9500      	str	r5, [sp, #0]
 801d996:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801d998:	4621      	mov	r1, r4
 801d99a:	47a8      	blx	r5
 801d99c:	b00d      	add	sp, #52	; 0x34
 801d99e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d9a2:	f010 0f40 	tst.w	r0, #64	; 0x40
 801d9a6:	e7e4      	b.n	801d972 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801d9a8:	6803      	ldr	r3, [r0, #0]
 801d9aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d9ac:	4798      	blx	r3
 801d9ae:	4947      	ldr	r1, [pc, #284]	; (801dacc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801d9b0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d9b4:	880b      	ldrh	r3, [r1, #0]
 801d9b6:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801d9ba:	fb03 5202 	mla	r2, r3, r2, r5
 801d9be:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d9c2:	4373      	muls	r3, r6
 801d9c4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d9c8:	9307      	str	r3, [sp, #28]
 801d9ca:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d9ce:	9306      	str	r3, [sp, #24]
 801d9d0:	468a      	mov	sl, r1
 801d9d2:	9b07      	ldr	r3, [sp, #28]
 801d9d4:	4298      	cmp	r0, r3
 801d9d6:	d270      	bcs.n	801daba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801d9d8:	9b06      	ldr	r3, [sp, #24]
 801d9da:	4621      	mov	r1, r4
 801d9dc:	eb00 0b03 	add.w	fp, r0, r3
 801d9e0:	4558      	cmp	r0, fp
 801d9e2:	d25d      	bcs.n	801daa0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801d9e4:	f851 4b04 	ldr.w	r4, [r1], #4
 801d9e8:	0e23      	lsrs	r3, r4, #24
 801d9ea:	d014      	beq.n	801da16 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801d9ec:	2bff      	cmp	r3, #255	; 0xff
 801d9ee:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801d9f2:	d112      	bne.n	801da1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801d9f4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d9f8:	d10f      	bne.n	801da1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801d9fa:	0963      	lsrs	r3, r4, #5
 801d9fc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801da00:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801da04:	f02c 0c07 	bic.w	ip, ip, #7
 801da08:	ea43 0c0c 	orr.w	ip, r3, ip
 801da0c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801da10:	ea4c 0404 	orr.w	r4, ip, r4
 801da14:	8004      	strh	r4, [r0, #0]
 801da16:	3002      	adds	r0, #2
 801da18:	e7e2      	b.n	801d9e0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801da1a:	fb09 f303 	mul.w	r3, r9, r3
 801da1e:	8807      	ldrh	r7, [r0, #0]
 801da20:	1c5a      	adds	r2, r3, #1
 801da22:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801da26:	1212      	asrs	r2, r2, #8
 801da28:	123e      	asrs	r6, r7, #8
 801da2a:	b293      	uxth	r3, r2
 801da2c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801da30:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801da34:	43d2      	mvns	r2, r2
 801da36:	b2d2      	uxtb	r2, r2
 801da38:	10fd      	asrs	r5, r7, #3
 801da3a:	fb1e fe03 	smulbb	lr, lr, r3
 801da3e:	00ff      	lsls	r7, r7, #3
 801da40:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801da44:	fb06 e602 	mla	r6, r6, r2, lr
 801da48:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801da4c:	b2ff      	uxtb	r7, r7
 801da4e:	fa5f fc8c 	uxtb.w	ip, ip
 801da52:	b2e4      	uxtb	r4, r4
 801da54:	b2b6      	uxth	r6, r6
 801da56:	fb1c fc03 	smulbb	ip, ip, r3
 801da5a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801da5e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801da62:	fb14 f403 	smulbb	r4, r4, r3
 801da66:	fb05 c502 	mla	r5, r5, r2, ip
 801da6a:	f106 0e01 	add.w	lr, r6, #1
 801da6e:	fb07 4702 	mla	r7, r7, r2, r4
 801da72:	b2ad      	uxth	r5, r5
 801da74:	b2bf      	uxth	r7, r7
 801da76:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801da7a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801da7e:	f105 0c01 	add.w	ip, r5, #1
 801da82:	1c7e      	adds	r6, r7, #1
 801da84:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801da88:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801da8c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801da90:	096d      	lsrs	r5, r5, #5
 801da92:	ea46 060e 	orr.w	r6, r6, lr
 801da96:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801da9a:	432e      	orrs	r6, r5
 801da9c:	8006      	strh	r6, [r0, #0]
 801da9e:	e7ba      	b.n	801da16 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801daa0:	f8ba 3000 	ldrh.w	r3, [sl]
 801daa4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801daa8:	eba3 0308 	sub.w	r3, r3, r8
 801daac:	eba4 0408 	sub.w	r4, r4, r8
 801dab0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dab4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801dab8:	e78b      	b.n	801d9d2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801daba:	4b03      	ldr	r3, [pc, #12]	; (801dac8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801dabc:	6818      	ldr	r0, [r3, #0]
 801dabe:	6803      	ldr	r3, [r0, #0]
 801dac0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dac2:	4798      	blx	r3
 801dac4:	e76a      	b.n	801d99c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801dac6:	bf00      	nop
 801dac8:	20012db4 	.word	0x20012db4
 801dacc:	20012dae 	.word	0x20012dae

0801dad0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801dad0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801dad4:	460c      	mov	r4, r1
 801dad6:	b085      	sub	sp, #20
 801dad8:	6810      	ldr	r0, [r2, #0]
 801dada:	6851      	ldr	r1, [r2, #4]
 801dadc:	466d      	mov	r5, sp
 801dade:	c503      	stmia	r5!, {r0, r1}
 801dae0:	6818      	ldr	r0, [r3, #0]
 801dae2:	6859      	ldr	r1, [r3, #4]
 801dae4:	4616      	mov	r6, r2
 801dae6:	c503      	stmia	r5!, {r0, r1}
 801dae8:	4668      	mov	r0, sp
 801daea:	f7f7 fe65 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801daee:	4631      	mov	r1, r6
 801daf0:	a802      	add	r0, sp, #8
 801daf2:	f7f7 fea5 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801daf6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801dafa:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801dafe:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801db02:	4d28      	ldr	r5, [pc, #160]	; (801dba4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801db04:	4e28      	ldr	r6, [pc, #160]	; (801dba8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801db06:	6828      	ldr	r0, [r5, #0]
 801db08:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801db0c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801db10:	fb11 2103 	smlabb	r1, r1, r3, r2
 801db14:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801db18:	f8bd 1000 	ldrh.w	r1, [sp]
 801db1c:	440a      	add	r2, r1
 801db1e:	f8ad 2008 	strh.w	r2, [sp, #8]
 801db22:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801db26:	4413      	add	r3, r2
 801db28:	f8ad 300a 	strh.w	r3, [sp, #10]
 801db2c:	6803      	ldr	r3, [r0, #0]
 801db2e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801db30:	4798      	blx	r3
 801db32:	8833      	ldrh	r3, [r6, #0]
 801db34:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801db38:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801db3c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801dbac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801db40:	fb03 1202 	mla	r2, r3, r2, r1
 801db44:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801db48:	fb08 f303 	mul.w	r3, r8, r3
 801db4c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801db50:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801db54:	4298      	cmp	r0, r3
 801db56:	d21d      	bcs.n	801db94 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801db58:	eb00 080c 	add.w	r8, r0, ip
 801db5c:	4540      	cmp	r0, r8
 801db5e:	d20f      	bcs.n	801db80 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801db60:	f854 1b04 	ldr.w	r1, [r4], #4
 801db64:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801db68:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801db6c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801db70:	ea42 0209 	orr.w	r2, r2, r9
 801db74:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801db78:	430a      	orrs	r2, r1
 801db7a:	f820 2b02 	strh.w	r2, [r0], #2
 801db7e:	e7ed      	b.n	801db5c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801db80:	8832      	ldrh	r2, [r6, #0]
 801db82:	1bd2      	subs	r2, r2, r7
 801db84:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801db88:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801db8c:	1bd2      	subs	r2, r2, r7
 801db8e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801db92:	e7df      	b.n	801db54 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801db94:	6828      	ldr	r0, [r5, #0]
 801db96:	6803      	ldr	r3, [r0, #0]
 801db98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801db9a:	4798      	blx	r3
 801db9c:	b005      	add	sp, #20
 801db9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801dba2:	bf00      	nop
 801dba4:	20012db4 	.word	0x20012db4
 801dba8:	20012dae 	.word	0x20012dae
 801dbac:	fffff800 	.word	0xfffff800

0801dbb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801dbb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dbb4:	460e      	mov	r6, r1
 801dbb6:	b08e      	sub	sp, #56	; 0x38
 801dbb8:	4604      	mov	r4, r0
 801dbba:	6808      	ldr	r0, [r1, #0]
 801dbbc:	6849      	ldr	r1, [r1, #4]
 801dbbe:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801dd98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801dbc2:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801dd9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801dbc6:	461d      	mov	r5, r3
 801dbc8:	ab0a      	add	r3, sp, #40	; 0x28
 801dbca:	c303      	stmia	r3!, {r0, r1}
 801dbcc:	6810      	ldr	r0, [r2, #0]
 801dbce:	6851      	ldr	r1, [r2, #4]
 801dbd0:	ab0c      	add	r3, sp, #48	; 0x30
 801dbd2:	c303      	stmia	r3!, {r0, r1}
 801dbd4:	a80a      	add	r0, sp, #40	; 0x28
 801dbd6:	f7f7 fdef 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dbda:	4631      	mov	r1, r6
 801dbdc:	a80c      	add	r0, sp, #48	; 0x30
 801dbde:	f7f7 fe2f 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dbe2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801dbe6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801dbea:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801dbee:	f8d8 0000 	ldr.w	r0, [r8]
 801dbf2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801dbf6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801dbfa:	fb11 2103 	smlabb	r1, r1, r3, r2
 801dbfe:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801dc02:	440c      	add	r4, r1
 801dc04:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801dc08:	440a      	add	r2, r1
 801dc0a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801dc0e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801dc12:	4413      	add	r3, r2
 801dc14:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801dc18:	6803      	ldr	r3, [r0, #0]
 801dc1a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801dc1c:	4798      	blx	r3
 801dc1e:	2dff      	cmp	r5, #255	; 0xff
 801dc20:	d124      	bne.n	801dc6c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801dc22:	f010 0f01 	tst.w	r0, #1
 801dc26:	f8d8 0000 	ldr.w	r0, [r8]
 801dc2a:	d022      	beq.n	801dc72 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801dc2c:	2100      	movs	r1, #0
 801dc2e:	f8d0 c000 	ldr.w	ip, [r0]
 801dc32:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801dc36:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801dc3a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801dc3e:	f04f 0e01 	mov.w	lr, #1
 801dc42:	f8cd e018 	str.w	lr, [sp, #24]
 801dc46:	f8b9 e000 	ldrh.w	lr, [r9]
 801dc4a:	9503      	str	r5, [sp, #12]
 801dc4c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801dc50:	b2b6      	uxth	r6, r6
 801dc52:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801dc56:	9102      	str	r1, [sp, #8]
 801dc58:	b2bf      	uxth	r7, r7
 801dc5a:	9601      	str	r6, [sp, #4]
 801dc5c:	9700      	str	r7, [sp, #0]
 801dc5e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801dc62:	4621      	mov	r1, r4
 801dc64:	47a8      	blx	r5
 801dc66:	b00e      	add	sp, #56	; 0x38
 801dc68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dc6c:	f010 0f04 	tst.w	r0, #4
 801dc70:	e7d9      	b.n	801dc26 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801dc72:	6803      	ldr	r3, [r0, #0]
 801dc74:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dc76:	4798      	blx	r3
 801dc78:	f8b9 3000 	ldrh.w	r3, [r9]
 801dc7c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801dc80:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801dc84:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801dc88:	fb03 1202 	mla	r2, r3, r2, r1
 801dc8c:	ebac 0c07 	sub.w	ip, ip, r7
 801dc90:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dc94:	435e      	muls	r6, r3
 801dc96:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801dc9a:	2dff      	cmp	r5, #255	; 0xff
 801dc9c:	eba3 0707 	sub.w	r7, r3, r7
 801dca0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801dca4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801dca8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801dcac:	d049      	beq.n	801dd42 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801dcae:	43eb      	mvns	r3, r5
 801dcb0:	fa1f f985 	uxth.w	r9, r5
 801dcb4:	b2db      	uxtb	r3, r3
 801dcb6:	42b0      	cmp	r0, r6
 801dcb8:	d266      	bcs.n	801dd88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801dcba:	eb00 0a0e 	add.w	sl, r0, lr
 801dcbe:	4550      	cmp	r0, sl
 801dcc0:	4621      	mov	r1, r4
 801dcc2:	f104 0403 	add.w	r4, r4, #3
 801dcc6:	d25b      	bcs.n	801dd80 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801dcc8:	8802      	ldrh	r2, [r0, #0]
 801dcca:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801dcce:	ea4f 2822 	mov.w	r8, r2, asr #8
 801dcd2:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801dcd6:	fb11 f109 	smulbb	r1, r1, r9
 801dcda:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801dcde:	10d5      	asrs	r5, r2, #3
 801dce0:	fb08 1803 	mla	r8, r8, r3, r1
 801dce4:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801dce8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801dcec:	fb11 f109 	smulbb	r1, r1, r9
 801dcf0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801dcf4:	fb05 1503 	mla	r5, r5, r3, r1
 801dcf8:	00d2      	lsls	r2, r2, #3
 801dcfa:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801dcfe:	b2d2      	uxtb	r2, r2
 801dd00:	fb11 f109 	smulbb	r1, r1, r9
 801dd04:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801dd08:	fa1f f888 	uxth.w	r8, r8
 801dd0c:	fb02 1203 	mla	r2, r2, r3, r1
 801dd10:	b292      	uxth	r2, r2
 801dd12:	f108 0101 	add.w	r1, r8, #1
 801dd16:	b2ad      	uxth	r5, r5
 801dd18:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801dd1c:	1c51      	adds	r1, r2, #1
 801dd1e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801dd22:	1c69      	adds	r1, r5, #1
 801dd24:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801dd28:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801dd2c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801dd30:	096d      	lsrs	r5, r5, #5
 801dd32:	ea42 0208 	orr.w	r2, r2, r8
 801dd36:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dd3a:	432a      	orrs	r2, r5
 801dd3c:	f820 2b02 	strh.w	r2, [r0], #2
 801dd40:	e7bd      	b.n	801dcbe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801dd42:	4a14      	ldr	r2, [pc, #80]	; (801dd94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801dd44:	42b0      	cmp	r0, r6
 801dd46:	d21f      	bcs.n	801dd88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801dd48:	eb00 050e 	add.w	r5, r0, lr
 801dd4c:	42a8      	cmp	r0, r5
 801dd4e:	4621      	mov	r1, r4
 801dd50:	f104 0403 	add.w	r4, r4, #3
 801dd54:	d210      	bcs.n	801dd78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801dd56:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801dd5a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801dd5e:	00db      	lsls	r3, r3, #3
 801dd60:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801dd64:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dd68:	430b      	orrs	r3, r1
 801dd6a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801dd6e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801dd72:	f820 3b02 	strh.w	r3, [r0], #2
 801dd76:	e7e9      	b.n	801dd4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801dd78:	4438      	add	r0, r7
 801dd7a:	eb01 040c 	add.w	r4, r1, ip
 801dd7e:	e7e1      	b.n	801dd44 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801dd80:	4438      	add	r0, r7
 801dd82:	eb01 040c 	add.w	r4, r1, ip
 801dd86:	e796      	b.n	801dcb6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801dd88:	4b03      	ldr	r3, [pc, #12]	; (801dd98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801dd8a:	6818      	ldr	r0, [r3, #0]
 801dd8c:	6803      	ldr	r3, [r0, #0]
 801dd8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dd90:	4798      	blx	r3
 801dd92:	e768      	b.n	801dc66 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801dd94:	fffff800 	.word	0xfffff800
 801dd98:	20012db4 	.word	0x20012db4
 801dd9c:	20012dae 	.word	0x20012dae

0801dda0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801dda0:	b4f0      	push	{r4, r5, r6, r7}
 801dda2:	4616      	mov	r6, r2
 801dda4:	2e01      	cmp	r6, #1
 801dda6:	461c      	mov	r4, r3
 801dda8:	460d      	mov	r5, r1
 801ddaa:	9a04      	ldr	r2, [sp, #16]
 801ddac:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801ddb0:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801ddb4:	d012      	beq.n	801dddc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801ddb6:	d303      	bcc.n	801ddc0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801ddb8:	2e02      	cmp	r6, #2
 801ddba:	d00a      	beq.n	801ddd2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801ddbc:	bcf0      	pop	{r4, r5, r6, r7}
 801ddbe:	4770      	bx	lr
 801ddc0:	6805      	ldr	r5, [r0, #0]
 801ddc2:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801ddc6:	68ed      	ldr	r5, [r5, #12]
 801ddc8:	4613      	mov	r3, r2
 801ddca:	46ac      	mov	ip, r5
 801ddcc:	4622      	mov	r2, r4
 801ddce:	bcf0      	pop	{r4, r5, r6, r7}
 801ddd0:	4760      	bx	ip
 801ddd2:	4621      	mov	r1, r4
 801ddd4:	4628      	mov	r0, r5
 801ddd6:	bcf0      	pop	{r4, r5, r6, r7}
 801ddd8:	f7ff bd94 	b.w	801d904 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801dddc:	4621      	mov	r1, r4
 801ddde:	4628      	mov	r0, r5
 801dde0:	bcf0      	pop	{r4, r5, r6, r7}
 801dde2:	f7ff bee5 	b.w	801dbb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801dde8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801dde8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ddec:	4681      	mov	r9, r0
 801ddee:	b093      	sub	sp, #76	; 0x4c
 801ddf0:	6810      	ldr	r0, [r2, #0]
 801ddf2:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801ddf6:	4f6d      	ldr	r7, [pc, #436]	; (801dfac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801ddf8:	4688      	mov	r8, r1
 801ddfa:	6851      	ldr	r1, [r2, #4]
 801ddfc:	ac0e      	add	r4, sp, #56	; 0x38
 801ddfe:	c403      	stmia	r4!, {r0, r1}
 801de00:	6818      	ldr	r0, [r3, #0]
 801de02:	6859      	ldr	r1, [r3, #4]
 801de04:	ac10      	add	r4, sp, #64	; 0x40
 801de06:	4616      	mov	r6, r2
 801de08:	c403      	stmia	r4!, {r0, r1}
 801de0a:	a80e      	add	r0, sp, #56	; 0x38
 801de0c:	f7f7 fcd4 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801de10:	4631      	mov	r1, r6
 801de12:	a810      	add	r0, sp, #64	; 0x40
 801de14:	f7f7 fd14 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801de18:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801de1c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801de20:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801de24:	4e62      	ldr	r6, [pc, #392]	; (801dfb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801de26:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801de2a:	6830      	ldr	r0, [r6, #0]
 801de2c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801de30:	fb11 2103 	smlabb	r1, r1, r3, r2
 801de34:	4489      	add	r9, r1
 801de36:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801de3a:	440a      	add	r2, r1
 801de3c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801de40:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801de44:	4413      	add	r3, r2
 801de46:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801de4a:	6803      	ldr	r3, [r0, #0]
 801de4c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801de4e:	4798      	blx	r3
 801de50:	f010 0f80 	tst.w	r0, #128	; 0x80
 801de54:	6830      	ldr	r0, [r6, #0]
 801de56:	d01d      	beq.n	801de94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801de58:	2200      	movs	r2, #0
 801de5a:	6801      	ldr	r1, [r0, #0]
 801de5c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801de60:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801de64:	220b      	movs	r2, #11
 801de66:	9207      	str	r2, [sp, #28]
 801de68:	883a      	ldrh	r2, [r7, #0]
 801de6a:	9206      	str	r2, [sp, #24]
 801de6c:	2201      	movs	r2, #1
 801de6e:	e9cd a204 	strd	sl, r2, [sp, #16]
 801de72:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801de76:	9203      	str	r2, [sp, #12]
 801de78:	b2a4      	uxth	r4, r4
 801de7a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801de7e:	9200      	str	r2, [sp, #0]
 801de80:	b2ad      	uxth	r5, r5
 801de82:	9502      	str	r5, [sp, #8]
 801de84:	9401      	str	r4, [sp, #4]
 801de86:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801de88:	4642      	mov	r2, r8
 801de8a:	4649      	mov	r1, r9
 801de8c:	47a0      	blx	r4
 801de8e:	b013      	add	sp, #76	; 0x4c
 801de90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801de94:	6803      	ldr	r3, [r0, #0]
 801de96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801de98:	4798      	blx	r3
 801de9a:	883b      	ldrh	r3, [r7, #0]
 801de9c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801dea0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801dea4:	fb03 1202 	mla	r2, r3, r2, r1
 801dea8:	435d      	muls	r5, r3
 801deaa:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801deae:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801deb2:	920c      	str	r2, [sp, #48]	; 0x30
 801deb4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801deb8:	1b12      	subs	r2, r2, r4
 801deba:	920d      	str	r2, [sp, #52]	; 0x34
 801debc:	0062      	lsls	r2, r4, #1
 801debe:	1b1c      	subs	r4, r3, r4
 801dec0:	0063      	lsls	r3, r4, #1
 801dec2:	920a      	str	r2, [sp, #40]	; 0x28
 801dec4:	930b      	str	r3, [sp, #44]	; 0x2c
 801dec6:	f04f 0e04 	mov.w	lr, #4
 801deca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801decc:	4298      	cmp	r0, r3
 801dece:	d266      	bcs.n	801df9e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801ded0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ded2:	eb00 0b03 	add.w	fp, r0, r3
 801ded6:	4558      	cmp	r0, fp
 801ded8:	d25c      	bcs.n	801df94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801deda:	f819 3b01 	ldrb.w	r3, [r9], #1
 801dede:	fb1e e303 	smlabb	r3, lr, r3, lr
 801dee2:	f858 2003 	ldr.w	r2, [r8, r3]
 801dee6:	0e11      	lsrs	r1, r2, #24
 801dee8:	d012      	beq.n	801df10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801deea:	29ff      	cmp	r1, #255	; 0xff
 801deec:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801def0:	d110      	bne.n	801df14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801def2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801def6:	d10d      	bne.n	801df14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801def8:	0953      	lsrs	r3, r2, #5
 801defa:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801defe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801df02:	f027 0707 	bic.w	r7, r7, #7
 801df06:	431f      	orrs	r7, r3
 801df08:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801df0c:	433a      	orrs	r2, r7
 801df0e:	8002      	strh	r2, [r0, #0]
 801df10:	3002      	adds	r0, #2
 801df12:	e7e0      	b.n	801ded6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801df14:	fb0a f101 	mul.w	r1, sl, r1
 801df18:	8806      	ldrh	r6, [r0, #0]
 801df1a:	1c4b      	adds	r3, r1, #1
 801df1c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801df20:	1235      	asrs	r5, r6, #8
 801df22:	10f4      	asrs	r4, r6, #3
 801df24:	121b      	asrs	r3, r3, #8
 801df26:	00f6      	lsls	r6, r6, #3
 801df28:	b299      	uxth	r1, r3
 801df2a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801df2e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801df32:	b2f6      	uxtb	r6, r6
 801df34:	43db      	mvns	r3, r3
 801df36:	b2d2      	uxtb	r2, r2
 801df38:	b2db      	uxtb	r3, r3
 801df3a:	fb1c fc01 	smulbb	ip, ip, r1
 801df3e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801df42:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801df46:	fb12 f201 	smulbb	r2, r2, r1
 801df4a:	fb05 c503 	mla	r5, r5, r3, ip
 801df4e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801df52:	b2ff      	uxtb	r7, r7
 801df54:	fb06 2203 	mla	r2, r6, r3, r2
 801df58:	b2ad      	uxth	r5, r5
 801df5a:	fb17 f701 	smulbb	r7, r7, r1
 801df5e:	b292      	uxth	r2, r2
 801df60:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801df64:	fb04 7403 	mla	r4, r4, r3, r7
 801df68:	f105 0c01 	add.w	ip, r5, #1
 801df6c:	1c57      	adds	r7, r2, #1
 801df6e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801df72:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801df76:	b2a4      	uxth	r4, r4
 801df78:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801df7c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801df80:	433d      	orrs	r5, r7
 801df82:	1c67      	adds	r7, r4, #1
 801df84:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801df88:	0964      	lsrs	r4, r4, #5
 801df8a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801df8e:	4325      	orrs	r5, r4
 801df90:	8005      	strh	r5, [r0, #0]
 801df92:	e7bd      	b.n	801df10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801df94:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801df96:	4418      	add	r0, r3
 801df98:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801df9a:	4499      	add	r9, r3
 801df9c:	e795      	b.n	801deca <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801df9e:	4b04      	ldr	r3, [pc, #16]	; (801dfb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801dfa0:	6818      	ldr	r0, [r3, #0]
 801dfa2:	6803      	ldr	r3, [r0, #0]
 801dfa4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dfa6:	4798      	blx	r3
 801dfa8:	e771      	b.n	801de8e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801dfaa:	bf00      	nop
 801dfac:	20012dae 	.word	0x20012dae
 801dfb0:	20012db4 	.word	0x20012db4

0801dfb4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801dfb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dfb8:	b087      	sub	sp, #28
 801dfba:	4680      	mov	r8, r0
 801dfbc:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801dfc0:	460d      	mov	r5, r1
 801dfc2:	4614      	mov	r4, r2
 801dfc4:	2e00      	cmp	r6, #0
 801dfc6:	f000 80b9 	beq.w	801e13c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801dfca:	6810      	ldr	r0, [r2, #0]
 801dfcc:	6851      	ldr	r1, [r2, #4]
 801dfce:	af02      	add	r7, sp, #8
 801dfd0:	c703      	stmia	r7!, {r0, r1}
 801dfd2:	6818      	ldr	r0, [r3, #0]
 801dfd4:	6859      	ldr	r1, [r3, #4]
 801dfd6:	af04      	add	r7, sp, #16
 801dfd8:	c703      	stmia	r7!, {r0, r1}
 801dfda:	a802      	add	r0, sp, #8
 801dfdc:	f7f7 fbec 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dfe0:	4621      	mov	r1, r4
 801dfe2:	a804      	add	r0, sp, #16
 801dfe4:	f7f7 fc2c 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dfe8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801dfec:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dff0:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801dff4:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801dff8:	fb14 2103 	smlabb	r1, r4, r3, r2
 801dffc:	eb08 0401 	add.w	r4, r8, r1
 801e000:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e004:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e008:	440a      	add	r2, r1
 801e00a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e00e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e012:	4413      	add	r3, r2
 801e014:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e018:	4b4a      	ldr	r3, [pc, #296]	; (801e144 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e01a:	6818      	ldr	r0, [r3, #0]
 801e01c:	6803      	ldr	r3, [r0, #0]
 801e01e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e020:	4798      	blx	r3
 801e022:	4b49      	ldr	r3, [pc, #292]	; (801e148 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801e024:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801e028:	881a      	ldrh	r2, [r3, #0]
 801e02a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801e02e:	2eff      	cmp	r6, #255	; 0xff
 801e030:	fb02 c101 	mla	r1, r2, r1, ip
 801e034:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801e038:	fb02 f207 	mul.w	r2, r2, r7
 801e03c:	f105 0104 	add.w	r1, r5, #4
 801e040:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801e044:	461d      	mov	r5, r3
 801e046:	d05a      	beq.n	801e0fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801e048:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801e04c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e050:	b2b6      	uxth	r6, r6
 801e052:	fa1f fe8e 	uxth.w	lr, lr
 801e056:	9301      	str	r3, [sp, #4]
 801e058:	4282      	cmp	r2, r0
 801e05a:	d96a      	bls.n	801e132 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e05c:	eb00 0b0a 	add.w	fp, r0, sl
 801e060:	4583      	cmp	fp, r0
 801e062:	d940      	bls.n	801e0e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801e064:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e068:	8805      	ldrh	r5, [r0, #0]
 801e06a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e06e:	122f      	asrs	r7, r5, #8
 801e070:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e074:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e078:	fb17 f70e 	smulbb	r7, r7, lr
 801e07c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801e080:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e084:	00ed      	lsls	r5, r5, #3
 801e086:	fb0c 7c06 	mla	ip, ip, r6, r7
 801e08a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801e08e:	10df      	asrs	r7, r3, #3
 801e090:	b2ed      	uxtb	r5, r5
 801e092:	00db      	lsls	r3, r3, #3
 801e094:	fa1f fc8c 	uxth.w	ip, ip
 801e098:	fb19 f90e 	smulbb	r9, r9, lr
 801e09c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e0a0:	b2db      	uxtb	r3, r3
 801e0a2:	fb15 f50e 	smulbb	r5, r5, lr
 801e0a6:	fb07 9706 	mla	r7, r7, r6, r9
 801e0aa:	fb03 5306 	mla	r3, r3, r6, r5
 801e0ae:	f10c 0901 	add.w	r9, ip, #1
 801e0b2:	b29b      	uxth	r3, r3
 801e0b4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801e0b8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801e0bc:	f103 0c01 	add.w	ip, r3, #1
 801e0c0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e0c4:	b2bf      	uxth	r7, r7
 801e0c6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e0ca:	ea4c 0c09 	orr.w	ip, ip, r9
 801e0ce:	f107 0901 	add.w	r9, r7, #1
 801e0d2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801e0d6:	097f      	lsrs	r7, r7, #5
 801e0d8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e0dc:	ea4c 0c07 	orr.w	ip, ip, r7
 801e0e0:	f820 cb02 	strh.w	ip, [r0], #2
 801e0e4:	e7bc      	b.n	801e060 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801e0e6:	9b01      	ldr	r3, [sp, #4]
 801e0e8:	881b      	ldrh	r3, [r3, #0]
 801e0ea:	eba3 0308 	sub.w	r3, r3, r8
 801e0ee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e0f2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e0f6:	eba3 0308 	sub.w	r3, r3, r8
 801e0fa:	441c      	add	r4, r3
 801e0fc:	e7ac      	b.n	801e058 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801e0fe:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e102:	4282      	cmp	r2, r0
 801e104:	d915      	bls.n	801e132 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e106:	eb00 060a 	add.w	r6, r0, sl
 801e10a:	4286      	cmp	r6, r0
 801e10c:	d906      	bls.n	801e11c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801e10e:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e112:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e116:	f820 3b02 	strh.w	r3, [r0], #2
 801e11a:	e7f6      	b.n	801e10a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801e11c:	882b      	ldrh	r3, [r5, #0]
 801e11e:	eba3 0308 	sub.w	r3, r3, r8
 801e122:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e126:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e12a:	eba3 0308 	sub.w	r3, r3, r8
 801e12e:	441c      	add	r4, r3
 801e130:	e7e7      	b.n	801e102 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801e132:	4b04      	ldr	r3, [pc, #16]	; (801e144 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e134:	6818      	ldr	r0, [r3, #0]
 801e136:	6803      	ldr	r3, [r0, #0]
 801e138:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e13a:	4798      	blx	r3
 801e13c:	b007      	add	sp, #28
 801e13e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e142:	bf00      	nop
 801e144:	20012db4 	.word	0x20012db4
 801e148:	20012dae 	.word	0x20012dae

0801e14c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801e14c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e150:	b091      	sub	sp, #68	; 0x44
 801e152:	4680      	mov	r8, r0
 801e154:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801e158:	460f      	mov	r7, r1
 801e15a:	4614      	mov	r4, r2
 801e15c:	2d00      	cmp	r5, #0
 801e15e:	d051      	beq.n	801e204 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e160:	6810      	ldr	r0, [r2, #0]
 801e162:	6851      	ldr	r1, [r2, #4]
 801e164:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801e368 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801e168:	ae0c      	add	r6, sp, #48	; 0x30
 801e16a:	c603      	stmia	r6!, {r0, r1}
 801e16c:	6818      	ldr	r0, [r3, #0]
 801e16e:	6859      	ldr	r1, [r3, #4]
 801e170:	ae0e      	add	r6, sp, #56	; 0x38
 801e172:	c603      	stmia	r6!, {r0, r1}
 801e174:	a80c      	add	r0, sp, #48	; 0x30
 801e176:	f7f7 fb1f 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e17a:	4621      	mov	r1, r4
 801e17c:	a80e      	add	r0, sp, #56	; 0x38
 801e17e:	f7f7 fb5f 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e182:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801e186:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e18a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801e18e:	f8d9 0000 	ldr.w	r0, [r9]
 801e192:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801e196:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801e19a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e19e:	eb08 0401 	add.w	r4, r8, r1
 801e1a2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801e1a6:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801e36c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801e1aa:	440a      	add	r2, r1
 801e1ac:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801e1b0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801e1b4:	4413      	add	r3, r2
 801e1b6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801e1ba:	6803      	ldr	r3, [r0, #0]
 801e1bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e1be:	4798      	blx	r3
 801e1c0:	f010 0f80 	tst.w	r0, #128	; 0x80
 801e1c4:	f8d9 0000 	ldr.w	r0, [r9]
 801e1c8:	d01f      	beq.n	801e20a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801e1ca:	2200      	movs	r2, #0
 801e1cc:	6801      	ldr	r1, [r0, #0]
 801e1ce:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801e1d2:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e1d6:	220b      	movs	r2, #11
 801e1d8:	9207      	str	r2, [sp, #28]
 801e1da:	f8b8 2000 	ldrh.w	r2, [r8]
 801e1de:	9206      	str	r2, [sp, #24]
 801e1e0:	2201      	movs	r2, #1
 801e1e2:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801e1e6:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801e1ea:	9203      	str	r2, [sp, #12]
 801e1ec:	fa1f f28a 	uxth.w	r2, sl
 801e1f0:	9202      	str	r2, [sp, #8]
 801e1f2:	b2b6      	uxth	r6, r6
 801e1f4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801e1f8:	9200      	str	r2, [sp, #0]
 801e1fa:	9601      	str	r6, [sp, #4]
 801e1fc:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801e1fe:	463a      	mov	r2, r7
 801e200:	4621      	mov	r1, r4
 801e202:	47a8      	blx	r5
 801e204:	b011      	add	sp, #68	; 0x44
 801e206:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e20a:	6803      	ldr	r3, [r0, #0]
 801e20c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e20e:	4798      	blx	r3
 801e210:	f8b8 2000 	ldrh.w	r2, [r8]
 801e214:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e218:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801e21c:	2dff      	cmp	r5, #255	; 0xff
 801e21e:	fb02 1303 	mla	r3, r2, r3, r1
 801e222:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e226:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801e22a:	fb0a fa02 	mul.w	sl, sl, r2
 801e22e:	d062      	beq.n	801e2f6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801e230:	ea6f 0c05 	mvn.w	ip, r5
 801e234:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801e238:	930a      	str	r3, [sp, #40]	; 0x28
 801e23a:	b2ad      	uxth	r5, r5
 801e23c:	fa5f fc8c 	uxtb.w	ip, ip
 801e240:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801e244:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e246:	4298      	cmp	r0, r3
 801e248:	f080 8085 	bcs.w	801e356 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e24c:	eb00 0b09 	add.w	fp, r0, r9
 801e250:	4558      	cmp	r0, fp
 801e252:	d246      	bcs.n	801e2e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801e254:	f814 eb01 	ldrb.w	lr, [r4], #1
 801e258:	2303      	movs	r3, #3
 801e25a:	2204      	movs	r2, #4
 801e25c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801e260:	eb07 0a0e 	add.w	sl, r7, lr
 801e264:	8803      	ldrh	r3, [r0, #0]
 801e266:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801e26a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e26e:	1219      	asrs	r1, r3, #8
 801e270:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e274:	fb18 f805 	smulbb	r8, r8, r5
 801e278:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801e27c:	10da      	asrs	r2, r3, #3
 801e27e:	fb01 810c 	mla	r1, r1, ip, r8
 801e282:	00db      	lsls	r3, r3, #3
 801e284:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e288:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e28c:	b2db      	uxtb	r3, r3
 801e28e:	fb18 f805 	smulbb	r8, r8, r5
 801e292:	fb1e fe05 	smulbb	lr, lr, r5
 801e296:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801e29a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801e29e:	b289      	uxth	r1, r1
 801e2a0:	fb02 820c 	mla	r2, r2, ip, r8
 801e2a4:	fb03 e30c 	mla	r3, r3, ip, lr
 801e2a8:	b292      	uxth	r2, r2
 801e2aa:	b29b      	uxth	r3, r3
 801e2ac:	f101 0801 	add.w	r8, r1, #1
 801e2b0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801e2b4:	f103 0e01 	add.w	lr, r3, #1
 801e2b8:	f102 0801 	add.w	r8, r2, #1
 801e2bc:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801e2c0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801e2c4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e2c8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e2cc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801e2d0:	ea4e 0101 	orr.w	r1, lr, r1
 801e2d4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801e2d8:	ea41 0108 	orr.w	r1, r1, r8
 801e2dc:	f820 1b02 	strh.w	r1, [r0], #2
 801e2e0:	e7b6      	b.n	801e250 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801e2e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e2e4:	881b      	ldrh	r3, [r3, #0]
 801e2e6:	1b9b      	subs	r3, r3, r6
 801e2e8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e2ec:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e2f0:	1b9b      	subs	r3, r3, r6
 801e2f2:	441c      	add	r4, r3
 801e2f4:	e7a6      	b.n	801e244 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801e2f6:	491b      	ldr	r1, [pc, #108]	; (801e364 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801e2f8:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801e2fc:	2203      	movs	r2, #3
 801e2fe:	2504      	movs	r5, #4
 801e300:	4550      	cmp	r0, sl
 801e302:	d228      	bcs.n	801e356 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e304:	eb00 0c09 	add.w	ip, r0, r9
 801e308:	4560      	cmp	r0, ip
 801e30a:	4623      	mov	r3, r4
 801e30c:	d219      	bcs.n	801e342 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801e30e:	f893 e000 	ldrb.w	lr, [r3]
 801e312:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801e316:	eb07 0b0e 	add.w	fp, r7, lr
 801e31a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e31e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801e322:	f89b b001 	ldrb.w	fp, [fp, #1]
 801e326:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801e32a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801e32e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801e332:	ea43 030b 	orr.w	r3, r3, fp
 801e336:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801e33a:	3401      	adds	r4, #1
 801e33c:	f820 3b02 	strh.w	r3, [r0], #2
 801e340:	e7e2      	b.n	801e308 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801e342:	f8b8 3000 	ldrh.w	r3, [r8]
 801e346:	1b9b      	subs	r3, r3, r6
 801e348:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e34c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e350:	1b9b      	subs	r3, r3, r6
 801e352:	441c      	add	r4, r3
 801e354:	e7d4      	b.n	801e300 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801e356:	4b04      	ldr	r3, [pc, #16]	; (801e368 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801e358:	6818      	ldr	r0, [r3, #0]
 801e35a:	6803      	ldr	r3, [r0, #0]
 801e35c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e35e:	4798      	blx	r3
 801e360:	e750      	b.n	801e204 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e362:	bf00      	nop
 801e364:	fffff800 	.word	0xfffff800
 801e368:	20012db4 	.word	0x20012db4
 801e36c:	20012dae 	.word	0x20012dae

0801e370 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801e370:	b4f0      	push	{r4, r5, r6, r7}
 801e372:	460c      	mov	r4, r1
 801e374:	4611      	mov	r1, r2
 801e376:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801e37a:	780f      	ldrb	r7, [r1, #0]
 801e37c:	784e      	ldrb	r6, [r1, #1]
 801e37e:	2f01      	cmp	r7, #1
 801e380:	461a      	mov	r2, r3
 801e382:	9b04      	ldr	r3, [sp, #16]
 801e384:	d036      	beq.n	801e3f4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801e386:	d31e      	bcc.n	801e3c6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801e388:	2f02      	cmp	r7, #2
 801e38a:	d14a      	bne.n	801e422 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e38c:	2e03      	cmp	r6, #3
 801e38e:	d848      	bhi.n	801e422 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e390:	e8df f006 	tbb	[pc, r6]
 801e394:	16140702 	.word	0x16140702
 801e398:	9504      	str	r5, [sp, #16]
 801e39a:	4620      	mov	r0, r4
 801e39c:	bcf0      	pop	{r4, r5, r6, r7}
 801e39e:	f7ff be09 	b.w	801dfb4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801e3a2:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e3a4:	2800      	cmp	r0, #0
 801e3a6:	d03c      	beq.n	801e422 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e3a8:	6806      	ldr	r6, [r0, #0]
 801e3aa:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e3ae:	68b5      	ldr	r5, [r6, #8]
 801e3b0:	4613      	mov	r3, r2
 801e3b2:	46ac      	mov	ip, r5
 801e3b4:	460a      	mov	r2, r1
 801e3b6:	4621      	mov	r1, r4
 801e3b8:	bcf0      	pop	{r4, r5, r6, r7}
 801e3ba:	4760      	bx	ip
 801e3bc:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e3be:	e7f1      	b.n	801e3a4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e3c0:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e3c4:	e7ee      	b.n	801e3a4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e3c6:	2e03      	cmp	r6, #3
 801e3c8:	d82b      	bhi.n	801e422 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e3ca:	e8df f006 	tbb	[pc, r6]
 801e3ce:	0702      	.short	0x0702
 801e3d0:	100e      	.short	0x100e
 801e3d2:	9504      	str	r5, [sp, #16]
 801e3d4:	4620      	mov	r0, r4
 801e3d6:	bcf0      	pop	{r4, r5, r6, r7}
 801e3d8:	f7ff bd06 	b.w	801dde8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801e3dc:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e3de:	b300      	cbz	r0, 801e422 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e3e0:	6806      	ldr	r6, [r0, #0]
 801e3e2:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e3e6:	68f5      	ldr	r5, [r6, #12]
 801e3e8:	e7e2      	b.n	801e3b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e3ea:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e3ec:	e7f7      	b.n	801e3de <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e3ee:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e3f2:	e7f4      	b.n	801e3de <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e3f4:	2e03      	cmp	r6, #3
 801e3f6:	d814      	bhi.n	801e422 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e3f8:	e8df f006 	tbb	[pc, r6]
 801e3fc:	100e0702 	.word	0x100e0702
 801e400:	9504      	str	r5, [sp, #16]
 801e402:	4620      	mov	r0, r4
 801e404:	bcf0      	pop	{r4, r5, r6, r7}
 801e406:	f7ff bea1 	b.w	801e14c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801e40a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e40c:	b148      	cbz	r0, 801e422 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e40e:	6806      	ldr	r6, [r0, #0]
 801e410:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e414:	6935      	ldr	r5, [r6, #16]
 801e416:	e7cb      	b.n	801e3b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e418:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e41a:	e7f7      	b.n	801e40c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e41c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e420:	e7f4      	b.n	801e40c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e422:	bcf0      	pop	{r4, r5, r6, r7}
 801e424:	4770      	bx	lr
	...

0801e428 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801e428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e42c:	4604      	mov	r4, r0
 801e42e:	b087      	sub	sp, #28
 801e430:	6810      	ldr	r0, [r2, #0]
 801e432:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801e436:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801e670 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801e43a:	460e      	mov	r6, r1
 801e43c:	6851      	ldr	r1, [r2, #4]
 801e43e:	ad02      	add	r5, sp, #8
 801e440:	c503      	stmia	r5!, {r0, r1}
 801e442:	6818      	ldr	r0, [r3, #0]
 801e444:	6859      	ldr	r1, [r3, #4]
 801e446:	ad04      	add	r5, sp, #16
 801e448:	4617      	mov	r7, r2
 801e44a:	c503      	stmia	r5!, {r0, r1}
 801e44c:	a802      	add	r0, sp, #8
 801e44e:	f7f7 f9b3 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e452:	4639      	mov	r1, r7
 801e454:	a804      	add	r0, sp, #16
 801e456:	f7f7 f9f3 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e45a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e45e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e462:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801e466:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e46a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801e46e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e472:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801e476:	440e      	add	r6, r1
 801e478:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e47c:	440a      	add	r2, r1
 801e47e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e482:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e486:	4413      	add	r3, r2
 801e488:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e48c:	4b77      	ldr	r3, [pc, #476]	; (801e66c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801e48e:	6818      	ldr	r0, [r3, #0]
 801e490:	6803      	ldr	r3, [r0, #0]
 801e492:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e494:	4798      	blx	r3
 801e496:	f8b9 b000 	ldrh.w	fp, [r9]
 801e49a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e49e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e4a2:	fb0b 2303 	mla	r3, fp, r3, r2
 801e4a6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e4aa:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e4ae:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801e4b2:	fb05 f50b 	mul.w	r5, r5, fp
 801e4b6:	9300      	str	r3, [sp, #0]
 801e4b8:	d069      	beq.n	801e58e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801e4ba:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801e4be:	4558      	cmp	r0, fp
 801e4c0:	f080 80cc 	bcs.w	801e65c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801e4c4:	9b00      	ldr	r3, [sp, #0]
 801e4c6:	18c3      	adds	r3, r0, r3
 801e4c8:	9301      	str	r3, [sp, #4]
 801e4ca:	4631      	mov	r1, r6
 801e4cc:	9b01      	ldr	r3, [sp, #4]
 801e4ce:	4298      	cmp	r0, r3
 801e4d0:	d24f      	bcs.n	801e572 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801e4d2:	f811 2b01 	ldrb.w	r2, [r1], #1
 801e4d6:	2a00      	cmp	r2, #0
 801e4d8:	d048      	beq.n	801e56c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e4da:	fb0a f202 	mul.w	r2, sl, r2
 801e4de:	1c53      	adds	r3, r2, #1
 801e4e0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e4e4:	121b      	asrs	r3, r3, #8
 801e4e6:	d041      	beq.n	801e56c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e4e8:	8802      	ldrh	r2, [r0, #0]
 801e4ea:	f8b4 c000 	ldrh.w	ip, [r4]
 801e4ee:	b29e      	uxth	r6, r3
 801e4f0:	1215      	asrs	r5, r2, #8
 801e4f2:	43db      	mvns	r3, r3
 801e4f4:	b2db      	uxtb	r3, r3
 801e4f6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e4fa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e4fe:	fb15 f503 	smulbb	r5, r5, r3
 801e502:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801e506:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e50a:	00d2      	lsls	r2, r2, #3
 801e50c:	fb07 5706 	mla	r7, r7, r6, r5
 801e510:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e514:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801e518:	b2d2      	uxtb	r2, r2
 801e51a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e51e:	b2bf      	uxth	r7, r7
 801e520:	fb1e fe03 	smulbb	lr, lr, r3
 801e524:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e528:	fa5f fc8c 	uxtb.w	ip, ip
 801e52c:	fb12 f203 	smulbb	r2, r2, r3
 801e530:	fb05 e506 	mla	r5, r5, r6, lr
 801e534:	fb0c 2c06 	mla	ip, ip, r6, r2
 801e538:	f107 0e01 	add.w	lr, r7, #1
 801e53c:	fa1f fc8c 	uxth.w	ip, ip
 801e540:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801e544:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801e548:	f10c 0701 	add.w	r7, ip, #1
 801e54c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e550:	b2ad      	uxth	r5, r5
 801e552:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e556:	ea47 070e 	orr.w	r7, r7, lr
 801e55a:	f105 0e01 	add.w	lr, r5, #1
 801e55e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801e562:	096d      	lsrs	r5, r5, #5
 801e564:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e568:	432f      	orrs	r7, r5
 801e56a:	8007      	strh	r7, [r0, #0]
 801e56c:	3002      	adds	r0, #2
 801e56e:	3402      	adds	r4, #2
 801e570:	e7ac      	b.n	801e4cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801e572:	f8b9 3000 	ldrh.w	r3, [r9]
 801e576:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801e57a:	eba3 0308 	sub.w	r3, r3, r8
 801e57e:	eba6 0608 	sub.w	r6, r6, r8
 801e582:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801e586:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e58a:	440e      	add	r6, r1
 801e58c:	e797      	b.n	801e4be <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801e58e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801e592:	42a8      	cmp	r0, r5
 801e594:	d262      	bcs.n	801e65c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801e596:	9b00      	ldr	r3, [sp, #0]
 801e598:	4631      	mov	r1, r6
 801e59a:	eb00 0b03 	add.w	fp, r0, r3
 801e59e:	4558      	cmp	r0, fp
 801e5a0:	d24e      	bcs.n	801e640 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801e5a2:	f811 3b01 	ldrb.w	r3, [r1], #1
 801e5a6:	b12b      	cbz	r3, 801e5b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801e5a8:	2bff      	cmp	r3, #255	; 0xff
 801e5aa:	f8b4 e000 	ldrh.w	lr, [r4]
 801e5ae:	d104      	bne.n	801e5ba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801e5b0:	f8a0 e000 	strh.w	lr, [r0]
 801e5b4:	3002      	adds	r0, #2
 801e5b6:	3402      	adds	r4, #2
 801e5b8:	e7f1      	b.n	801e59e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801e5ba:	8802      	ldrh	r2, [r0, #0]
 801e5bc:	b29f      	uxth	r7, r3
 801e5be:	1216      	asrs	r6, r2, #8
 801e5c0:	43db      	mvns	r3, r3
 801e5c2:	b2db      	uxtb	r3, r3
 801e5c4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e5c8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e5cc:	fb16 f603 	smulbb	r6, r6, r3
 801e5d0:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801e5d4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e5d8:	00d2      	lsls	r2, r2, #3
 801e5da:	fb0c 6c07 	mla	ip, ip, r7, r6
 801e5de:	b2d2      	uxtb	r2, r2
 801e5e0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801e5e4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801e5e8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e5ec:	fb1a fa03 	smulbb	sl, sl, r3
 801e5f0:	fa1f fc8c 	uxth.w	ip, ip
 801e5f4:	fb12 f303 	smulbb	r3, r2, r3
 801e5f8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e5fc:	fa5f fe8e 	uxtb.w	lr, lr
 801e600:	fb06 a607 	mla	r6, r6, r7, sl
 801e604:	f10c 0201 	add.w	r2, ip, #1
 801e608:	fb0e 3307 	mla	r3, lr, r7, r3
 801e60c:	b2b6      	uxth	r6, r6
 801e60e:	b29b      	uxth	r3, r3
 801e610:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e614:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801e618:	f106 0a01 	add.w	sl, r6, #1
 801e61c:	f103 0c01 	add.w	ip, r3, #1
 801e620:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e624:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801e628:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e62c:	0976      	lsrs	r6, r6, #5
 801e62e:	ea4c 0c02 	orr.w	ip, ip, r2
 801e632:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e636:	ea4c 0c06 	orr.w	ip, ip, r6
 801e63a:	f8a0 c000 	strh.w	ip, [r0]
 801e63e:	e7b9      	b.n	801e5b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801e640:	f8b9 3000 	ldrh.w	r3, [r9]
 801e644:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801e648:	eba3 0308 	sub.w	r3, r3, r8
 801e64c:	eba6 0608 	sub.w	r6, r6, r8
 801e650:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801e654:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e658:	440e      	add	r6, r1
 801e65a:	e79a      	b.n	801e592 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801e65c:	4b03      	ldr	r3, [pc, #12]	; (801e66c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801e65e:	6818      	ldr	r0, [r3, #0]
 801e660:	6803      	ldr	r3, [r0, #0]
 801e662:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e664:	4798      	blx	r3
 801e666:	b007      	add	sp, #28
 801e668:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e66c:	20012db4 	.word	0x20012db4
 801e670:	20012dae 	.word	0x20012dae

0801e674 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801e674:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e678:	b089      	sub	sp, #36	; 0x24
 801e67a:	4682      	mov	sl, r0
 801e67c:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801e680:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e682:	460f      	mov	r7, r1
 801e684:	4691      	mov	r9, r2
 801e686:	4698      	mov	r8, r3
 801e688:	2e00      	cmp	r6, #0
 801e68a:	d03d      	beq.n	801e708 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e68c:	4608      	mov	r0, r1
 801e68e:	f7fa fe59 	bl	8019344 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801e692:	4605      	mov	r5, r0
 801e694:	4638      	mov	r0, r7
 801e696:	f7fa fe89 	bl	80193ac <_ZNK8touchgfx6Bitmap9getHeightEv>
 801e69a:	f8ad 000e 	strh.w	r0, [sp, #14]
 801e69e:	4638      	mov	r0, r7
 801e6a0:	f8ad 9008 	strh.w	r9, [sp, #8]
 801e6a4:	f8ad 500c 	strh.w	r5, [sp, #12]
 801e6a8:	f8ad 800a 	strh.w	r8, [sp, #10]
 801e6ac:	f7fa ff36 	bl	801951c <_ZNK8touchgfx6Bitmap7getDataEv>
 801e6b0:	4605      	mov	r5, r0
 801e6b2:	4638      	mov	r0, r7
 801e6b4:	f7fa ff62 	bl	801957c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801e6b8:	4681      	mov	r9, r0
 801e6ba:	4638      	mov	r0, r7
 801e6bc:	f7fa ffb2 	bl	8019624 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801e6c0:	280b      	cmp	r0, #11
 801e6c2:	d821      	bhi.n	801e708 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e6c4:	e8df f000 	tbb	[pc, r0]
 801e6c8:	2006aebe 	.word	0x2006aebe
 801e6cc:	20202020 	.word	0x20202020
 801e6d0:	b5202020 	.word	0xb5202020
 801e6d4:	4bb0      	ldr	r3, [pc, #704]	; (801e998 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801e6d6:	6818      	ldr	r0, [r3, #0]
 801e6d8:	6803      	ldr	r3, [r0, #0]
 801e6da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e6dc:	4798      	blx	r3
 801e6de:	2eff      	cmp	r6, #255	; 0xff
 801e6e0:	d101      	bne.n	801e6e6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801e6e2:	0683      	lsls	r3, r0, #26
 801e6e4:	d506      	bpl.n	801e6f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801e6e6:	4633      	mov	r3, r6
 801e6e8:	4622      	mov	r2, r4
 801e6ea:	a902      	add	r1, sp, #8
 801e6ec:	4628      	mov	r0, r5
 801e6ee:	f7ff f909 	bl	801d904 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e6f2:	e009      	b.n	801e708 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e6f4:	4638      	mov	r0, r7
 801e6f6:	f7fa fed9 	bl	80194ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801e6fa:	b940      	cbnz	r0, 801e70e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801e6fc:	4623      	mov	r3, r4
 801e6fe:	aa02      	add	r2, sp, #8
 801e700:	4629      	mov	r1, r5
 801e702:	4650      	mov	r0, sl
 801e704:	f7ff f9e4 	bl	801dad0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801e708:	b009      	add	sp, #36	; 0x24
 801e70a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e70e:	f10d 0818 	add.w	r8, sp, #24
 801e712:	4639      	mov	r1, r7
 801e714:	4640      	mov	r0, r8
 801e716:	f7fa fe7d 	bl	8019414 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801e71a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801e71e:	af04      	add	r7, sp, #16
 801e720:	e887 0003 	stmia.w	r7, {r0, r1}
 801e724:	4638      	mov	r0, r7
 801e726:	4621      	mov	r1, r4
 801e728:	f7f2 f8e8 	bl	80108fc <_ZN8touchgfx4RectaNERKS0_>
 801e72c:	4638      	mov	r0, r7
 801e72e:	f7f2 f928 	bl	8010982 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e732:	2800      	cmp	r0, #0
 801e734:	d1d7      	bne.n	801e6e6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801e736:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e73a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801e73e:	4293      	cmp	r3, r2
 801e740:	dd12      	ble.n	801e768 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801e742:	1a9b      	subs	r3, r3, r2
 801e744:	f9b4 0000 	ldrsh.w	r0, [r4]
 801e748:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e74c:	f8ad 0018 	strh.w	r0, [sp, #24]
 801e750:	f8ad 201a 	strh.w	r2, [sp, #26]
 801e754:	f8ad 101c 	strh.w	r1, [sp, #28]
 801e758:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e75c:	4642      	mov	r2, r8
 801e75e:	4633      	mov	r3, r6
 801e760:	a902      	add	r1, sp, #8
 801e762:	4628      	mov	r0, r5
 801e764:	f7ff f8ce 	bl	801d904 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e768:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801e76c:	f9b4 2000 	ldrsh.w	r2, [r4]
 801e770:	4293      	cmp	r3, r2
 801e772:	dd12      	ble.n	801e79a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801e774:	1a9b      	subs	r3, r3, r2
 801e776:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801e77a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801e77e:	f8ad 2018 	strh.w	r2, [sp, #24]
 801e782:	f8ad 001a 	strh.w	r0, [sp, #26]
 801e786:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e78a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801e78e:	23ff      	movs	r3, #255	; 0xff
 801e790:	4642      	mov	r2, r8
 801e792:	a902      	add	r1, sp, #8
 801e794:	4628      	mov	r0, r5
 801e796:	f7ff f8b5 	bl	801d904 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e79a:	463b      	mov	r3, r7
 801e79c:	aa02      	add	r2, sp, #8
 801e79e:	4629      	mov	r1, r5
 801e7a0:	4650      	mov	r0, sl
 801e7a2:	f7ff f995 	bl	801dad0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801e7a6:	88a2      	ldrh	r2, [r4, #4]
 801e7a8:	8823      	ldrh	r3, [r4, #0]
 801e7aa:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801e7ae:	4413      	add	r3, r2
 801e7b0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e7b4:	440a      	add	r2, r1
 801e7b6:	b29b      	uxth	r3, r3
 801e7b8:	b292      	uxth	r2, r2
 801e7ba:	b211      	sxth	r1, r2
 801e7bc:	b218      	sxth	r0, r3
 801e7be:	4288      	cmp	r0, r1
 801e7c0:	dd12      	ble.n	801e7e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801e7c2:	1a9b      	subs	r3, r3, r2
 801e7c4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801e7c8:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801e7cc:	f8ad 1018 	strh.w	r1, [sp, #24]
 801e7d0:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e7d4:	f8ad 001e 	strh.w	r0, [sp, #30]
 801e7d8:	23ff      	movs	r3, #255	; 0xff
 801e7da:	4642      	mov	r2, r8
 801e7dc:	a902      	add	r1, sp, #8
 801e7de:	4628      	mov	r0, r5
 801e7e0:	f8ad 601a 	strh.w	r6, [sp, #26]
 801e7e4:	f7ff f88e 	bl	801d904 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e7e8:	88e2      	ldrh	r2, [r4, #6]
 801e7ea:	8863      	ldrh	r3, [r4, #2]
 801e7ec:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801e7f0:	4413      	add	r3, r2
 801e7f2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801e7f6:	440a      	add	r2, r1
 801e7f8:	b29b      	uxth	r3, r3
 801e7fa:	b292      	uxth	r2, r2
 801e7fc:	b211      	sxth	r1, r2
 801e7fe:	b218      	sxth	r0, r3
 801e800:	4288      	cmp	r0, r1
 801e802:	dd81      	ble.n	801e708 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e804:	1a9b      	subs	r3, r3, r2
 801e806:	f9b4 6000 	ldrsh.w	r6, [r4]
 801e80a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801e80e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e812:	f8ad 6018 	strh.w	r6, [sp, #24]
 801e816:	f8ad 101a 	strh.w	r1, [sp, #26]
 801e81a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801e81e:	23ff      	movs	r3, #255	; 0xff
 801e820:	4642      	mov	r2, r8
 801e822:	e762      	b.n	801e6ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801e824:	4633      	mov	r3, r6
 801e826:	4622      	mov	r2, r4
 801e828:	a902      	add	r1, sp, #8
 801e82a:	4628      	mov	r0, r5
 801e82c:	f7ff f9c0 	bl	801dbb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801e830:	e76a      	b.n	801e708 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e832:	e9cd 4600 	strd	r4, r6, [sp]
 801e836:	ab02      	add	r3, sp, #8
 801e838:	464a      	mov	r2, r9
 801e83a:	4629      	mov	r1, r5
 801e83c:	4650      	mov	r0, sl
 801e83e:	f7ff fd97 	bl	801e370 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801e842:	e761      	b.n	801e708 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e844:	4638      	mov	r0, r7
 801e846:	f7fa fe31 	bl	80194ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801e84a:	b950      	cbnz	r0, 801e862 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801e84c:	e9cd 6000 	strd	r6, r0, [sp]
 801e850:	f8da 3000 	ldr.w	r3, [sl]
 801e854:	aa02      	add	r2, sp, #8
 801e856:	68de      	ldr	r6, [r3, #12]
 801e858:	4629      	mov	r1, r5
 801e85a:	4623      	mov	r3, r4
 801e85c:	4650      	mov	r0, sl
 801e85e:	47b0      	blx	r6
 801e860:	e752      	b.n	801e708 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e862:	f10d 0818 	add.w	r8, sp, #24
 801e866:	4639      	mov	r1, r7
 801e868:	4640      	mov	r0, r8
 801e86a:	f7fa fdd3 	bl	8019414 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801e86e:	e898 0003 	ldmia.w	r8, {r0, r1}
 801e872:	af04      	add	r7, sp, #16
 801e874:	e887 0003 	stmia.w	r7, {r0, r1}
 801e878:	4638      	mov	r0, r7
 801e87a:	4621      	mov	r1, r4
 801e87c:	f7f2 f83e 	bl	80108fc <_ZN8touchgfx4RectaNERKS0_>
 801e880:	4638      	mov	r0, r7
 801e882:	f7f2 f87e 	bl	8010982 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e886:	b138      	cbz	r0, 801e898 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801e888:	9600      	str	r6, [sp, #0]
 801e88a:	4623      	mov	r3, r4
 801e88c:	aa02      	add	r2, sp, #8
 801e88e:	4649      	mov	r1, r9
 801e890:	4628      	mov	r0, r5
 801e892:	f7ff fdc9 	bl	801e428 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e896:	e737      	b.n	801e708 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e898:	e9cd 6000 	strd	r6, r0, [sp]
 801e89c:	f8da 3000 	ldr.w	r3, [sl]
 801e8a0:	aa02      	add	r2, sp, #8
 801e8a2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801e8a6:	4629      	mov	r1, r5
 801e8a8:	463b      	mov	r3, r7
 801e8aa:	4650      	mov	r0, sl
 801e8ac:	47d8      	blx	fp
 801e8ae:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e8b2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801e8b6:	4293      	cmp	r3, r2
 801e8b8:	dd13      	ble.n	801e8e2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801e8ba:	f9b4 0000 	ldrsh.w	r0, [r4]
 801e8be:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e8c2:	f8ad 0018 	strh.w	r0, [sp, #24]
 801e8c6:	1a9b      	subs	r3, r3, r2
 801e8c8:	f8ad 201a 	strh.w	r2, [sp, #26]
 801e8cc:	f8ad 101c 	strh.w	r1, [sp, #28]
 801e8d0:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e8d4:	9600      	str	r6, [sp, #0]
 801e8d6:	4643      	mov	r3, r8
 801e8d8:	aa02      	add	r2, sp, #8
 801e8da:	4649      	mov	r1, r9
 801e8dc:	4628      	mov	r0, r5
 801e8de:	f7ff fda3 	bl	801e428 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e8e2:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801e8e6:	f9b4 2000 	ldrsh.w	r2, [r4]
 801e8ea:	4293      	cmp	r3, r2
 801e8ec:	dd13      	ble.n	801e916 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801e8ee:	1a9b      	subs	r3, r3, r2
 801e8f0:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801e8f4:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801e8f8:	f8ad 2018 	strh.w	r2, [sp, #24]
 801e8fc:	f8ad 001a 	strh.w	r0, [sp, #26]
 801e900:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e904:	f8ad 101e 	strh.w	r1, [sp, #30]
 801e908:	9600      	str	r6, [sp, #0]
 801e90a:	4643      	mov	r3, r8
 801e90c:	aa02      	add	r2, sp, #8
 801e90e:	4649      	mov	r1, r9
 801e910:	4628      	mov	r0, r5
 801e912:	f7ff fd89 	bl	801e428 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e916:	88a2      	ldrh	r2, [r4, #4]
 801e918:	8823      	ldrh	r3, [r4, #0]
 801e91a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801e91e:	4413      	add	r3, r2
 801e920:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e924:	440a      	add	r2, r1
 801e926:	b29b      	uxth	r3, r3
 801e928:	b292      	uxth	r2, r2
 801e92a:	b211      	sxth	r1, r2
 801e92c:	b218      	sxth	r0, r3
 801e92e:	4288      	cmp	r0, r1
 801e930:	dd13      	ble.n	801e95a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801e932:	1a9b      	subs	r3, r3, r2
 801e934:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801e938:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801e93c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801e940:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e944:	f8ad 001e 	strh.w	r0, [sp, #30]
 801e948:	9600      	str	r6, [sp, #0]
 801e94a:	4643      	mov	r3, r8
 801e94c:	aa02      	add	r2, sp, #8
 801e94e:	4649      	mov	r1, r9
 801e950:	4628      	mov	r0, r5
 801e952:	f8ad 701a 	strh.w	r7, [sp, #26]
 801e956:	f7ff fd67 	bl	801e428 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e95a:	88e2      	ldrh	r2, [r4, #6]
 801e95c:	8863      	ldrh	r3, [r4, #2]
 801e95e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801e962:	4413      	add	r3, r2
 801e964:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801e968:	440a      	add	r2, r1
 801e96a:	b29b      	uxth	r3, r3
 801e96c:	b292      	uxth	r2, r2
 801e96e:	b211      	sxth	r1, r2
 801e970:	b218      	sxth	r0, r3
 801e972:	4288      	cmp	r0, r1
 801e974:	f77f aec8 	ble.w	801e708 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e978:	f9b4 7000 	ldrsh.w	r7, [r4]
 801e97c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801e980:	f8ad 7018 	strh.w	r7, [sp, #24]
 801e984:	1a9b      	subs	r3, r3, r2
 801e986:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e98a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801e98e:	f8ad 001c 	strh.w	r0, [sp, #28]
 801e992:	9600      	str	r6, [sp, #0]
 801e994:	4643      	mov	r3, r8
 801e996:	e779      	b.n	801e88c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801e998:	20012db4 	.word	0x20012db4

0801e99c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801e99c:	b180      	cbz	r0, 801e9c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801e99e:	2903      	cmp	r1, #3
 801e9a0:	d81c      	bhi.n	801e9dc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801e9a2:	e8df f001 	tbb	[pc, r1]
 801e9a6:	1d02      	.short	0x1d02
 801e9a8:	1f08      	.short	0x1f08
 801e9aa:	4b10      	ldr	r3, [pc, #64]	; (801e9ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801e9ac:	8818      	ldrh	r0, [r3, #0]
 801e9ae:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e9b2:	4240      	negs	r0, r0
 801e9b4:	4770      	bx	lr
 801e9b6:	4b0d      	ldr	r3, [pc, #52]	; (801e9ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801e9b8:	8818      	ldrh	r0, [r3, #0]
 801e9ba:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e9be:	4770      	bx	lr
 801e9c0:	2903      	cmp	r1, #3
 801e9c2:	d80b      	bhi.n	801e9dc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801e9c4:	a301      	add	r3, pc, #4	; (adr r3, 801e9cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801e9c6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801e9ca:	bf00      	nop
 801e9cc:	0801e9e1 	.word	0x0801e9e1
 801e9d0:	0801e9b7 	.word	0x0801e9b7
 801e9d4:	0801e9e5 	.word	0x0801e9e5
 801e9d8:	0801e9ab 	.word	0x0801e9ab
 801e9dc:	2000      	movs	r0, #0
 801e9de:	4770      	bx	lr
 801e9e0:	2001      	movs	r0, #1
 801e9e2:	4770      	bx	lr
 801e9e4:	f04f 30ff 	mov.w	r0, #4294967295
 801e9e8:	4770      	bx	lr
 801e9ea:	bf00      	nop
 801e9ec:	20012dae 	.word	0x20012dae

0801e9f0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801e9f0:	b180      	cbz	r0, 801ea14 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801e9f2:	2903      	cmp	r1, #3
 801e9f4:	d81c      	bhi.n	801ea30 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801e9f6:	e8df f001 	tbb	[pc, r1]
 801e9fa:	021d      	.short	0x021d
 801e9fc:	071f      	.short	0x071f
 801e9fe:	4b10      	ldr	r3, [pc, #64]	; (801ea40 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801ea00:	8818      	ldrh	r0, [r3, #0]
 801ea02:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ea06:	4770      	bx	lr
 801ea08:	4b0d      	ldr	r3, [pc, #52]	; (801ea40 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801ea0a:	8818      	ldrh	r0, [r3, #0]
 801ea0c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ea10:	4240      	negs	r0, r0
 801ea12:	4770      	bx	lr
 801ea14:	2903      	cmp	r1, #3
 801ea16:	d80b      	bhi.n	801ea30 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801ea18:	a301      	add	r3, pc, #4	; (adr r3, 801ea20 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801ea1a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801ea1e:	bf00      	nop
 801ea20:	0801e9ff 	.word	0x0801e9ff
 801ea24:	0801ea39 	.word	0x0801ea39
 801ea28:	0801ea09 	.word	0x0801ea09
 801ea2c:	0801ea35 	.word	0x0801ea35
 801ea30:	2000      	movs	r0, #0
 801ea32:	4770      	bx	lr
 801ea34:	2001      	movs	r0, #1
 801ea36:	4770      	bx	lr
 801ea38:	f04f 30ff 	mov.w	r0, #4294967295
 801ea3c:	4770      	bx	lr
 801ea3e:	bf00      	nop
 801ea40:	20012dae 	.word	0x20012dae

0801ea44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801ea44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ea48:	b099      	sub	sp, #100	; 0x64
 801ea4a:	910b      	str	r1, [sp, #44]	; 0x2c
 801ea4c:	a914      	add	r1, sp, #80	; 0x50
 801ea4e:	e881 000c 	stmia.w	r1, {r2, r3}
 801ea52:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801ea56:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801ea5a:	f891 900d 	ldrb.w	r9, [r1, #13]
 801ea5e:	9309      	str	r3, [sp, #36]	; 0x24
 801ea60:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801ea64:	9310      	str	r3, [sp, #64]	; 0x40
 801ea66:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801ea6a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801ea6e:	930c      	str	r3, [sp, #48]	; 0x30
 801ea70:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801ea74:	798f      	ldrb	r7, [r1, #6]
 801ea76:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801ea7a:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801ea7e:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801ea82:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801ea86:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801ea8a:	431f      	orrs	r7, r3
 801ea8c:	f000 8195 	beq.w	801edba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ea90:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801ea94:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801ea98:	f891 9007 	ldrb.w	r9, [r1, #7]
 801ea9c:	ea59 0903 	orrs.w	r9, r9, r3
 801eaa0:	f000 818b 	beq.w	801edba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801eaa4:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801eaa8:	b29b      	uxth	r3, r3
 801eaaa:	2d00      	cmp	r5, #0
 801eaac:	f000 812e 	beq.w	801ed0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801eab0:	1aed      	subs	r5, r5, r3
 801eab2:	b2ad      	uxth	r5, r5
 801eab4:	042b      	lsls	r3, r5, #16
 801eab6:	d502      	bpl.n	801eabe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801eab8:	1b64      	subs	r4, r4, r5
 801eaba:	b224      	sxth	r4, r4
 801eabc:	2500      	movs	r5, #0
 801eabe:	f9b2 1000 	ldrsh.w	r1, [r2]
 801eac2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801eac6:	428c      	cmp	r4, r1
 801eac8:	b28b      	uxth	r3, r1
 801eaca:	bfbf      	itttt	lt
 801eacc:	18ed      	addlt	r5, r5, r3
 801eace:	1b2c      	sublt	r4, r5, r4
 801ead0:	b2a5      	uxthlt	r5, r4
 801ead2:	460c      	movlt	r4, r1
 801ead4:	8891      	ldrh	r1, [r2, #4]
 801ead6:	440b      	add	r3, r1
 801ead8:	b21b      	sxth	r3, r3
 801eada:	930f      	str	r3, [sp, #60]	; 0x3c
 801eadc:	88d3      	ldrh	r3, [r2, #6]
 801eade:	8852      	ldrh	r2, [r2, #2]
 801eae0:	4413      	add	r3, r2
 801eae2:	b21b      	sxth	r3, r3
 801eae4:	930d      	str	r3, [sp, #52]	; 0x34
 801eae6:	4bbe      	ldr	r3, [pc, #760]	; (801ede0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801eae8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801eaea:	f893 b000 	ldrb.w	fp, [r3]
 801eaee:	f10b 3cff 	add.w	ip, fp, #4294967295
 801eaf2:	f1dc 0300 	rsbs	r3, ip, #0
 801eaf6:	eb43 030c 	adc.w	r3, r3, ip
 801eafa:	930e      	str	r3, [sp, #56]	; 0x38
 801eafc:	4621      	mov	r1, r4
 801eafe:	4653      	mov	r3, sl
 801eb00:	a814      	add	r0, sp, #80	; 0x50
 801eb02:	f7f6 fcce 	bl	80154a2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801eb06:	4621      	mov	r1, r4
 801eb08:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801eb0c:	4653      	mov	r3, sl
 801eb0e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801eb10:	a814      	add	r0, sp, #80	; 0x50
 801eb12:	f7f6 fce3 	bl	80154dc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801eb16:	a918      	add	r1, sp, #96	; 0x60
 801eb18:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801eb1c:	a817      	add	r0, sp, #92	; 0x5c
 801eb1e:	f7f6 fe09 	bl	8015734 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801eb22:	f1ba 0f00 	cmp.w	sl, #0
 801eb26:	f040 80f4 	bne.w	801ed12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801eb2a:	f1bb 0f01 	cmp.w	fp, #1
 801eb2e:	f040 80f8 	bne.w	801ed22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801eb32:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801eb34:	2b00      	cmp	r3, #0
 801eb36:	f040 8145 	bne.w	801edc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801eb3a:	b2ba      	uxth	r2, r7
 801eb3c:	b905      	cbnz	r5, 801eb40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801eb3e:	b16e      	cbz	r6, 801eb5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801eb40:	fb06 5302 	mla	r3, r6, r2, r5
 801eb44:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801eb46:	fb08 f303 	mul.w	r3, r8, r3
 801eb4a:	4631      	mov	r1, r6
 801eb4c:	f003 0607 	and.w	r6, r3, #7
 801eb50:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801eb54:	9328      	str	r3, [sp, #160]	; 0xa0
 801eb56:	eba9 0301 	sub.w	r3, r9, r1
 801eb5a:	930a      	str	r3, [sp, #40]	; 0x28
 801eb5c:	4651      	mov	r1, sl
 801eb5e:	980e      	ldr	r0, [sp, #56]	; 0x38
 801eb60:	f7ff ff1c 	bl	801e99c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801eb64:	4681      	mov	r9, r0
 801eb66:	980e      	ldr	r0, [sp, #56]	; 0x38
 801eb68:	f7ff ff42 	bl	801e9f0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801eb6c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801eb6e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801eb70:	eba3 0a01 	sub.w	sl, r3, r1
 801eb74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801eb76:	459a      	cmp	sl, r3
 801eb78:	bfa8      	it	ge
 801eb7a:	469a      	movge	sl, r3
 801eb7c:	f1ba 0f00 	cmp.w	sl, #0
 801eb80:	4683      	mov	fp, r0
 801eb82:	f340 811a 	ble.w	801edba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801eb86:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801eb88:	1b64      	subs	r4, r4, r5
 801eb8a:	1b1c      	subs	r4, r3, r4
 801eb8c:	42bc      	cmp	r4, r7
 801eb8e:	bfd4      	ite	le
 801eb90:	ebc5 0504 	rsble	r5, r5, r4
 801eb94:	ebc5 0507 	rsbgt	r5, r5, r7
 801eb98:	2d00      	cmp	r5, #0
 801eb9a:	f340 810e 	ble.w	801edba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801eb9e:	1b52      	subs	r2, r2, r5
 801eba0:	fb08 f302 	mul.w	r3, r8, r2
 801eba4:	930f      	str	r3, [sp, #60]	; 0x3c
 801eba6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801eba8:	2b00      	cmp	r3, #0
 801ebaa:	f040 8116 	bne.w	801edda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801ebae:	4b8d      	ldr	r3, [pc, #564]	; (801ede4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801ebb0:	6818      	ldr	r0, [r3, #0]
 801ebb2:	6803      	ldr	r3, [r0, #0]
 801ebb4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ebb6:	4798      	blx	r3
 801ebb8:	2301      	movs	r3, #1
 801ebba:	fa03 f308 	lsl.w	r3, r3, r8
 801ebbe:	4a8a      	ldr	r2, [pc, #552]	; (801ede8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801ebc0:	3b01      	subs	r3, #1
 801ebc2:	b2db      	uxtb	r3, r3
 801ebc4:	8811      	ldrh	r1, [r2, #0]
 801ebc6:	930e      	str	r3, [sp, #56]	; 0x38
 801ebc8:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801ebcc:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801ebd0:	fb01 2303 	mla	r3, r1, r3, r2
 801ebd4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ebd8:	930a      	str	r3, [sp, #40]	; 0x28
 801ebda:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ebdc:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801ebe0:	9313      	str	r3, [sp, #76]	; 0x4c
 801ebe2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ebe4:	0a19      	lsrs	r1, r3, #8
 801ebe6:	b2cb      	uxtb	r3, r1
 801ebe8:	9312      	str	r3, [sp, #72]	; 0x48
 801ebea:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ebec:	b2db      	uxtb	r3, r3
 801ebee:	9311      	str	r3, [sp, #68]	; 0x44
 801ebf0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ebf2:	095a      	lsrs	r2, r3, #5
 801ebf4:	4b7d      	ldr	r3, [pc, #500]	; (801edec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801ebf6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ebfa:	400b      	ands	r3, r1
 801ebfc:	4313      	orrs	r3, r2
 801ebfe:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801ec00:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ec04:	4313      	orrs	r3, r2
 801ec06:	b29b      	uxth	r3, r3
 801ec08:	9310      	str	r3, [sp, #64]	; 0x40
 801ec0a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ec0c:	781a      	ldrb	r2, [r3, #0]
 801ec0e:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801ec12:	4132      	asrs	r2, r6
 801ec14:	fb05 b919 	mls	r9, r5, r9, fp
 801ec18:	fb03 fb05 	mul.w	fp, r3, r5
 801ec1c:	b2d2      	uxtb	r2, r2
 801ec1e:	930d      	str	r3, [sp, #52]	; 0x34
 801ec20:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801ec24:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801ec28:	f0c0 80f5 	bcc.w	801ee16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801ec2c:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801ec30:	46ae      	mov	lr, r5
 801ec32:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801ec36:	f0c0 80dd 	bcc.w	801edf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801ec3a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ec3c:	4013      	ands	r3, r2
 801ec3e:	d055      	beq.n	801ecec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801ec40:	20ff      	movs	r0, #255	; 0xff
 801ec42:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ec44:	fb90 f1f1 	sdiv	r1, r0, r1
 801ec48:	434b      	muls	r3, r1
 801ec4a:	2bfe      	cmp	r3, #254	; 0xfe
 801ec4c:	dd03      	ble.n	801ec56 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801ec4e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ec50:	4281      	cmp	r1, r0
 801ec52:	f000 80cd 	beq.w	801edf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801ec56:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ec58:	f8bc 4000 	ldrh.w	r4, [ip]
 801ec5c:	fb11 f303 	smulbb	r3, r1, r3
 801ec60:	b29b      	uxth	r3, r3
 801ec62:	1c59      	adds	r1, r3, #1
 801ec64:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ec68:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ec6c:	b29f      	uxth	r7, r3
 801ec6e:	43db      	mvns	r3, r3
 801ec70:	b2db      	uxtb	r3, r3
 801ec72:	9309      	str	r3, [sp, #36]	; 0x24
 801ec74:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ec76:	1220      	asrs	r0, r4, #8
 801ec78:	fb13 f907 	smulbb	r9, r3, r7
 801ec7c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ec80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ec82:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801ec86:	fb00 9003 	mla	r0, r0, r3, r9
 801ec8a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ec8c:	10e1      	asrs	r1, r4, #3
 801ec8e:	fb13 f907 	smulbb	r9, r3, r7
 801ec92:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ec96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ec98:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801ec9c:	fb01 9103 	mla	r1, r1, r3, r9
 801eca0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801eca2:	00e4      	lsls	r4, r4, #3
 801eca4:	fb13 f707 	smulbb	r7, r3, r7
 801eca8:	b2e4      	uxtb	r4, r4
 801ecaa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ecac:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801ecb0:	fb04 7403 	mla	r4, r4, r3, r7
 801ecb4:	b280      	uxth	r0, r0
 801ecb6:	b2a4      	uxth	r4, r4
 801ecb8:	1c43      	adds	r3, r0, #1
 801ecba:	f104 0901 	add.w	r9, r4, #1
 801ecbe:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ecc2:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801ecc6:	b289      	uxth	r1, r1
 801ecc8:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801eccc:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ecd0:	ea49 0000 	orr.w	r0, r9, r0
 801ecd4:	f101 0901 	add.w	r9, r1, #1
 801ecd8:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801ecdc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ece0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ece4:	ea40 0009 	orr.w	r0, r0, r9
 801ece8:	f8ac 0000 	strh.w	r0, [ip]
 801ecec:	4446      	add	r6, r8
 801ecee:	b2b6      	uxth	r6, r6
 801ecf0:	2e07      	cmp	r6, #7
 801ecf2:	bf81      	itttt	hi
 801ecf4:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801ecf6:	785a      	ldrbhi	r2, [r3, #1]
 801ecf8:	3301      	addhi	r3, #1
 801ecfa:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801ecfc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ecfe:	bf9a      	itte	ls
 801ed00:	fa42 f208 	asrls.w	r2, r2, r8
 801ed04:	b2d2      	uxtbls	r2, r2
 801ed06:	2600      	movhi	r6, #0
 801ed08:	449c      	add	ip, r3
 801ed0a:	e792      	b.n	801ec32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801ed0c:	441c      	add	r4, r3
 801ed0e:	b224      	sxth	r4, r4
 801ed10:	e6d5      	b.n	801eabe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ed12:	f1ba 0f01 	cmp.w	sl, #1
 801ed16:	f47f af0c 	bne.w	801eb32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ed1a:	f1bb 0f01 	cmp.w	fp, #1
 801ed1e:	f47f af08 	bne.w	801eb32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ed22:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801ede4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801ed26:	f8db 0000 	ldr.w	r0, [fp]
 801ed2a:	6803      	ldr	r3, [r0, #0]
 801ed2c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ed2e:	4798      	blx	r3
 801ed30:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801ed34:	465a      	mov	r2, fp
 801ed36:	d006      	beq.n	801ed46 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801ed38:	f1b8 0f04 	cmp.w	r8, #4
 801ed3c:	d140      	bne.n	801edc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801ed3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ed40:	3300      	adds	r3, #0
 801ed42:	bf18      	it	ne
 801ed44:	2301      	movne	r3, #1
 801ed46:	0580      	lsls	r0, r0, #22
 801ed48:	d56e      	bpl.n	801ee28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801ed4a:	f1b8 0f08 	cmp.w	r8, #8
 801ed4e:	d16b      	bne.n	801ee28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801ed50:	2b00      	cmp	r3, #0
 801ed52:	bf0c      	ite	eq
 801ed54:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801ed58:	f44f 7180 	movne.w	r1, #256	; 0x100
 801ed5c:	2d00      	cmp	r5, #0
 801ed5e:	f47f aee8 	bne.w	801eb32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ed62:	2e00      	cmp	r6, #0
 801ed64:	f47f aee5 	bne.w	801eb32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ed68:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801ed6a:	19e3      	adds	r3, r4, r7
 801ed6c:	4283      	cmp	r3, r0
 801ed6e:	f73f aee0 	bgt.w	801eb32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ed72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ed74:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ed76:	444b      	add	r3, r9
 801ed78:	4283      	cmp	r3, r0
 801ed7a:	f73f aeda 	bgt.w	801eb32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ed7e:	6810      	ldr	r0, [r2, #0]
 801ed80:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801ed84:	6804      	ldr	r4, [r0, #0]
 801ed86:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801ed8a:	b2bf      	uxth	r7, r7
 801ed8c:	f1b8 0f08 	cmp.w	r8, #8
 801ed90:	f04f 0500 	mov.w	r5, #0
 801ed94:	bf18      	it	ne
 801ed96:	3701      	addne	r7, #1
 801ed98:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801ed9c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ed9e:	9104      	str	r1, [sp, #16]
 801eda0:	bf18      	it	ne
 801eda2:	f027 0701 	bicne.w	r7, r7, #1
 801eda6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801eda8:	bf18      	it	ne
 801edaa:	b2bf      	uxthne	r7, r7
 801edac:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801edb0:	e9cd 7900 	strd	r7, r9, [sp]
 801edb4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801edb6:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801edb8:	47a0      	blx	r4
 801edba:	b019      	add	sp, #100	; 0x64
 801edbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801edc0:	2300      	movs	r3, #0
 801edc2:	e7c0      	b.n	801ed46 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801edc4:	2208      	movs	r2, #8
 801edc6:	fb92 f3f8 	sdiv	r3, r2, r8
 801edca:	1e5a      	subs	r2, r3, #1
 801edcc:	443a      	add	r2, r7
 801edce:	fb92 f2f3 	sdiv	r2, r2, r3
 801edd2:	fb12 f203 	smulbb	r2, r2, r3
 801edd6:	b292      	uxth	r2, r2
 801edd8:	e6b0      	b.n	801eb3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801edda:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801eddc:	e6ec      	b.n	801ebb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801edde:	bf00      	nop
 801ede0:	20012dac 	.word	0x20012dac
 801ede4:	20012db4 	.word	0x20012db4
 801ede8:	20012dae 	.word	0x20012dae
 801edec:	00fff800 	.word	0x00fff800
 801edf0:	9810      	ldr	r0, [sp, #64]	; 0x40
 801edf2:	e779      	b.n	801ece8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801edf4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801edf6:	b153      	cbz	r3, 801ee0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801edf8:	441e      	add	r6, r3
 801edfa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801edfc:	b2b6      	uxth	r6, r6
 801edfe:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801ee02:	f006 0607 	and.w	r6, r6, #7
 801ee06:	781a      	ldrb	r2, [r3, #0]
 801ee08:	9328      	str	r3, [sp, #160]	; 0xa0
 801ee0a:	4132      	asrs	r2, r6
 801ee0c:	b2d2      	uxtb	r2, r2
 801ee0e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ee10:	445b      	add	r3, fp
 801ee12:	930a      	str	r3, [sp, #40]	; 0x28
 801ee14:	e706      	b.n	801ec24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801ee16:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ee18:	2b00      	cmp	r3, #0
 801ee1a:	d1ce      	bne.n	801edba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ee1c:	4b05      	ldr	r3, [pc, #20]	; (801ee34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801ee1e:	6818      	ldr	r0, [r3, #0]
 801ee20:	6803      	ldr	r3, [r0, #0]
 801ee22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ee24:	4798      	blx	r3
 801ee26:	e7c8      	b.n	801edba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ee28:	2b00      	cmp	r3, #0
 801ee2a:	f43f ae82 	beq.w	801eb32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ee2e:	f44f 7180 	mov.w	r1, #256	; 0x100
 801ee32:	e793      	b.n	801ed5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801ee34:	20012db4 	.word	0x20012db4

0801ee38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801ee38:	b538      	push	{r3, r4, r5, lr}
 801ee3a:	4c15      	ldr	r4, [pc, #84]	; (801ee90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801ee3c:	7823      	ldrb	r3, [r4, #0]
 801ee3e:	f3bf 8f5b 	dmb	ish
 801ee42:	07da      	lsls	r2, r3, #31
 801ee44:	4605      	mov	r5, r0
 801ee46:	d40b      	bmi.n	801ee60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801ee48:	4620      	mov	r0, r4
 801ee4a:	f00a fee2 	bl	8029c12 <__cxa_guard_acquire>
 801ee4e:	b138      	cbz	r0, 801ee60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801ee50:	4620      	mov	r0, r4
 801ee52:	f00a feea 	bl	8029c2a <__cxa_guard_release>
 801ee56:	4a0f      	ldr	r2, [pc, #60]	; (801ee94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801ee58:	490f      	ldr	r1, [pc, #60]	; (801ee98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801ee5a:	4810      	ldr	r0, [pc, #64]	; (801ee9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801ee5c:	f00a fed2 	bl	8029c04 <__aeabi_atexit>
 801ee60:	4c0f      	ldr	r4, [pc, #60]	; (801eea0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801ee62:	7823      	ldrb	r3, [r4, #0]
 801ee64:	f3bf 8f5b 	dmb	ish
 801ee68:	07db      	lsls	r3, r3, #31
 801ee6a:	d40b      	bmi.n	801ee84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801ee6c:	4620      	mov	r0, r4
 801ee6e:	f00a fed0 	bl	8029c12 <__cxa_guard_acquire>
 801ee72:	b138      	cbz	r0, 801ee84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801ee74:	4620      	mov	r0, r4
 801ee76:	f00a fed8 	bl	8029c2a <__cxa_guard_release>
 801ee7a:	4a06      	ldr	r2, [pc, #24]	; (801ee94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801ee7c:	4909      	ldr	r1, [pc, #36]	; (801eea4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801ee7e:	480a      	ldr	r0, [pc, #40]	; (801eea8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801ee80:	f00a fec0 	bl	8029c04 <__aeabi_atexit>
 801ee84:	4b05      	ldr	r3, [pc, #20]	; (801ee9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801ee86:	612b      	str	r3, [r5, #16]
 801ee88:	4b07      	ldr	r3, [pc, #28]	; (801eea8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801ee8a:	616b      	str	r3, [r5, #20]
 801ee8c:	bd38      	pop	{r3, r4, r5, pc}
 801ee8e:	bf00      	nop
 801ee90:	20012e94 	.word	0x20012e94
 801ee94:	20000000 	.word	0x20000000
 801ee98:	0801bc3b 	.word	0x0801bc3b
 801ee9c:	200000d4 	.word	0x200000d4
 801eea0:	20012e98 	.word	0x20012e98
 801eea4:	0801bc39 	.word	0x0801bc39
 801eea8:	200000d8 	.word	0x200000d8

0801eeac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801eeac:	b538      	push	{r3, r4, r5, lr}
 801eeae:	4c15      	ldr	r4, [pc, #84]	; (801ef04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801eeb0:	7823      	ldrb	r3, [r4, #0]
 801eeb2:	f3bf 8f5b 	dmb	ish
 801eeb6:	07da      	lsls	r2, r3, #31
 801eeb8:	4605      	mov	r5, r0
 801eeba:	d40b      	bmi.n	801eed4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801eebc:	4620      	mov	r0, r4
 801eebe:	f00a fea8 	bl	8029c12 <__cxa_guard_acquire>
 801eec2:	b138      	cbz	r0, 801eed4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801eec4:	4620      	mov	r0, r4
 801eec6:	f00a feb0 	bl	8029c2a <__cxa_guard_release>
 801eeca:	4a0f      	ldr	r2, [pc, #60]	; (801ef08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801eecc:	490f      	ldr	r1, [pc, #60]	; (801ef0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801eece:	4810      	ldr	r0, [pc, #64]	; (801ef10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801eed0:	f00a fe98 	bl	8029c04 <__aeabi_atexit>
 801eed4:	4c0f      	ldr	r4, [pc, #60]	; (801ef14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801eed6:	7823      	ldrb	r3, [r4, #0]
 801eed8:	f3bf 8f5b 	dmb	ish
 801eedc:	07db      	lsls	r3, r3, #31
 801eede:	d40b      	bmi.n	801eef8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801eee0:	4620      	mov	r0, r4
 801eee2:	f00a fe96 	bl	8029c12 <__cxa_guard_acquire>
 801eee6:	b138      	cbz	r0, 801eef8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801eee8:	4620      	mov	r0, r4
 801eeea:	f00a fe9e 	bl	8029c2a <__cxa_guard_release>
 801eeee:	4a06      	ldr	r2, [pc, #24]	; (801ef08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801eef0:	4909      	ldr	r1, [pc, #36]	; (801ef18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801eef2:	480a      	ldr	r0, [pc, #40]	; (801ef1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801eef4:	f00a fe86 	bl	8029c04 <__aeabi_atexit>
 801eef8:	4b05      	ldr	r3, [pc, #20]	; (801ef10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801eefa:	60ab      	str	r3, [r5, #8]
 801eefc:	4b07      	ldr	r3, [pc, #28]	; (801ef1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801eefe:	60eb      	str	r3, [r5, #12]
 801ef00:	bd38      	pop	{r3, r4, r5, pc}
 801ef02:	bf00      	nop
 801ef04:	20012e6c 	.word	0x20012e6c
 801ef08:	20000000 	.word	0x20000000
 801ef0c:	0801bc3f 	.word	0x0801bc3f
 801ef10:	200000ac 	.word	0x200000ac
 801ef14:	20012e70 	.word	0x20012e70
 801ef18:	0801bc3d 	.word	0x0801bc3d
 801ef1c:	200000b0 	.word	0x200000b0

0801ef20 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801ef20:	b510      	push	{r4, lr}
 801ef22:	4604      	mov	r4, r0
 801ef24:	f7ff ff88 	bl	801ee38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801ef28:	4620      	mov	r0, r4
 801ef2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ef2e:	f7ff bfbd 	b.w	801eeac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801ef34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801ef34:	b538      	push	{r3, r4, r5, lr}
 801ef36:	4c15      	ldr	r4, [pc, #84]	; (801ef8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801ef38:	7823      	ldrb	r3, [r4, #0]
 801ef3a:	f3bf 8f5b 	dmb	ish
 801ef3e:	07da      	lsls	r2, r3, #31
 801ef40:	4605      	mov	r5, r0
 801ef42:	d40b      	bmi.n	801ef5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801ef44:	4620      	mov	r0, r4
 801ef46:	f00a fe64 	bl	8029c12 <__cxa_guard_acquire>
 801ef4a:	b138      	cbz	r0, 801ef5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801ef4c:	4620      	mov	r0, r4
 801ef4e:	f00a fe6c 	bl	8029c2a <__cxa_guard_release>
 801ef52:	4a0f      	ldr	r2, [pc, #60]	; (801ef90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801ef54:	490f      	ldr	r1, [pc, #60]	; (801ef94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801ef56:	4810      	ldr	r0, [pc, #64]	; (801ef98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801ef58:	f00a fe54 	bl	8029c04 <__aeabi_atexit>
 801ef5c:	4c0f      	ldr	r4, [pc, #60]	; (801ef9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801ef5e:	7823      	ldrb	r3, [r4, #0]
 801ef60:	f3bf 8f5b 	dmb	ish
 801ef64:	07db      	lsls	r3, r3, #31
 801ef66:	d40b      	bmi.n	801ef80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801ef68:	4620      	mov	r0, r4
 801ef6a:	f00a fe52 	bl	8029c12 <__cxa_guard_acquire>
 801ef6e:	b138      	cbz	r0, 801ef80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801ef70:	4620      	mov	r0, r4
 801ef72:	f00a fe5a 	bl	8029c2a <__cxa_guard_release>
 801ef76:	4a06      	ldr	r2, [pc, #24]	; (801ef90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801ef78:	4909      	ldr	r1, [pc, #36]	; (801efa0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801ef7a:	480a      	ldr	r0, [pc, #40]	; (801efa4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801ef7c:	f00a fe42 	bl	8029c04 <__aeabi_atexit>
 801ef80:	4b05      	ldr	r3, [pc, #20]	; (801ef98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801ef82:	622b      	str	r3, [r5, #32]
 801ef84:	4b07      	ldr	r3, [pc, #28]	; (801efa4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801ef86:	626b      	str	r3, [r5, #36]	; 0x24
 801ef88:	bd38      	pop	{r3, r4, r5, pc}
 801ef8a:	bf00      	nop
 801ef8c:	20012e9c 	.word	0x20012e9c
 801ef90:	20000000 	.word	0x20000000
 801ef94:	0801bc33 	.word	0x0801bc33
 801ef98:	200000dc 	.word	0x200000dc
 801ef9c:	20012ea0 	.word	0x20012ea0
 801efa0:	0801bc31 	.word	0x0801bc31
 801efa4:	200000e0 	.word	0x200000e0

0801efa8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801efa8:	b538      	push	{r3, r4, r5, lr}
 801efaa:	4c15      	ldr	r4, [pc, #84]	; (801f000 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801efac:	7823      	ldrb	r3, [r4, #0]
 801efae:	f3bf 8f5b 	dmb	ish
 801efb2:	07da      	lsls	r2, r3, #31
 801efb4:	4605      	mov	r5, r0
 801efb6:	d40b      	bmi.n	801efd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801efb8:	4620      	mov	r0, r4
 801efba:	f00a fe2a 	bl	8029c12 <__cxa_guard_acquire>
 801efbe:	b138      	cbz	r0, 801efd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801efc0:	4620      	mov	r0, r4
 801efc2:	f00a fe32 	bl	8029c2a <__cxa_guard_release>
 801efc6:	4a0f      	ldr	r2, [pc, #60]	; (801f004 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801efc8:	490f      	ldr	r1, [pc, #60]	; (801f008 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801efca:	4810      	ldr	r0, [pc, #64]	; (801f00c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801efcc:	f00a fe1a 	bl	8029c04 <__aeabi_atexit>
 801efd0:	4c0f      	ldr	r4, [pc, #60]	; (801f010 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801efd2:	7823      	ldrb	r3, [r4, #0]
 801efd4:	f3bf 8f5b 	dmb	ish
 801efd8:	07db      	lsls	r3, r3, #31
 801efda:	d40b      	bmi.n	801eff4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801efdc:	4620      	mov	r0, r4
 801efde:	f00a fe18 	bl	8029c12 <__cxa_guard_acquire>
 801efe2:	b138      	cbz	r0, 801eff4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801efe4:	4620      	mov	r0, r4
 801efe6:	f00a fe20 	bl	8029c2a <__cxa_guard_release>
 801efea:	4a06      	ldr	r2, [pc, #24]	; (801f004 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801efec:	4909      	ldr	r1, [pc, #36]	; (801f014 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801efee:	480a      	ldr	r0, [pc, #40]	; (801f018 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801eff0:	f00a fe08 	bl	8029c04 <__aeabi_atexit>
 801eff4:	4b05      	ldr	r3, [pc, #20]	; (801f00c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801eff6:	61ab      	str	r3, [r5, #24]
 801eff8:	4b07      	ldr	r3, [pc, #28]	; (801f018 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801effa:	61eb      	str	r3, [r5, #28]
 801effc:	bd38      	pop	{r3, r4, r5, pc}
 801effe:	bf00      	nop
 801f000:	20012e74 	.word	0x20012e74
 801f004:	20000000 	.word	0x20000000
 801f008:	0801bc37 	.word	0x0801bc37
 801f00c:	200000b4 	.word	0x200000b4
 801f010:	20012e78 	.word	0x20012e78
 801f014:	0801bc35 	.word	0x0801bc35
 801f018:	200000b8 	.word	0x200000b8

0801f01c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801f01c:	b510      	push	{r4, lr}
 801f01e:	4604      	mov	r4, r0
 801f020:	f7ff ff88 	bl	801ef34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801f024:	4620      	mov	r0, r4
 801f026:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f02a:	f7ff bfbd 	b.w	801efa8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801f030 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801f030:	b538      	push	{r3, r4, r5, lr}
 801f032:	4c15      	ldr	r4, [pc, #84]	; (801f088 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801f034:	7823      	ldrb	r3, [r4, #0]
 801f036:	f3bf 8f5b 	dmb	ish
 801f03a:	07da      	lsls	r2, r3, #31
 801f03c:	4605      	mov	r5, r0
 801f03e:	d40b      	bmi.n	801f058 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f040:	4620      	mov	r0, r4
 801f042:	f00a fde6 	bl	8029c12 <__cxa_guard_acquire>
 801f046:	b138      	cbz	r0, 801f058 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f048:	4620      	mov	r0, r4
 801f04a:	f00a fdee 	bl	8029c2a <__cxa_guard_release>
 801f04e:	4a0f      	ldr	r2, [pc, #60]	; (801f08c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f050:	490f      	ldr	r1, [pc, #60]	; (801f090 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801f052:	4810      	ldr	r0, [pc, #64]	; (801f094 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f054:	f00a fdd6 	bl	8029c04 <__aeabi_atexit>
 801f058:	4c0f      	ldr	r4, [pc, #60]	; (801f098 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801f05a:	7823      	ldrb	r3, [r4, #0]
 801f05c:	f3bf 8f5b 	dmb	ish
 801f060:	07db      	lsls	r3, r3, #31
 801f062:	d40b      	bmi.n	801f07c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f064:	4620      	mov	r0, r4
 801f066:	f00a fdd4 	bl	8029c12 <__cxa_guard_acquire>
 801f06a:	b138      	cbz	r0, 801f07c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f06c:	4620      	mov	r0, r4
 801f06e:	f00a fddc 	bl	8029c2a <__cxa_guard_release>
 801f072:	4a06      	ldr	r2, [pc, #24]	; (801f08c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f074:	4909      	ldr	r1, [pc, #36]	; (801f09c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801f076:	480a      	ldr	r0, [pc, #40]	; (801f0a0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f078:	f00a fdc4 	bl	8029c04 <__aeabi_atexit>
 801f07c:	4b05      	ldr	r3, [pc, #20]	; (801f094 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f07e:	632b      	str	r3, [r5, #48]	; 0x30
 801f080:	4b07      	ldr	r3, [pc, #28]	; (801f0a0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f082:	636b      	str	r3, [r5, #52]	; 0x34
 801f084:	bd38      	pop	{r3, r4, r5, pc}
 801f086:	bf00      	nop
 801f088:	20012eac 	.word	0x20012eac
 801f08c:	20000000 	.word	0x20000000
 801f090:	0801bc2b 	.word	0x0801bc2b
 801f094:	200000ec 	.word	0x200000ec
 801f098:	20012eb0 	.word	0x20012eb0
 801f09c:	0801bc29 	.word	0x0801bc29
 801f0a0:	200000f0 	.word	0x200000f0

0801f0a4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801f0a4:	b538      	push	{r3, r4, r5, lr}
 801f0a6:	4c15      	ldr	r4, [pc, #84]	; (801f0fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801f0a8:	7823      	ldrb	r3, [r4, #0]
 801f0aa:	f3bf 8f5b 	dmb	ish
 801f0ae:	07da      	lsls	r2, r3, #31
 801f0b0:	4605      	mov	r5, r0
 801f0b2:	d40b      	bmi.n	801f0cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f0b4:	4620      	mov	r0, r4
 801f0b6:	f00a fdac 	bl	8029c12 <__cxa_guard_acquire>
 801f0ba:	b138      	cbz	r0, 801f0cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f0bc:	4620      	mov	r0, r4
 801f0be:	f00a fdb4 	bl	8029c2a <__cxa_guard_release>
 801f0c2:	4a0f      	ldr	r2, [pc, #60]	; (801f100 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f0c4:	490f      	ldr	r1, [pc, #60]	; (801f104 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801f0c6:	4810      	ldr	r0, [pc, #64]	; (801f108 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f0c8:	f00a fd9c 	bl	8029c04 <__aeabi_atexit>
 801f0cc:	4c0f      	ldr	r4, [pc, #60]	; (801f10c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801f0ce:	7823      	ldrb	r3, [r4, #0]
 801f0d0:	f3bf 8f5b 	dmb	ish
 801f0d4:	07db      	lsls	r3, r3, #31
 801f0d6:	d40b      	bmi.n	801f0f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f0d8:	4620      	mov	r0, r4
 801f0da:	f00a fd9a 	bl	8029c12 <__cxa_guard_acquire>
 801f0de:	b138      	cbz	r0, 801f0f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f0e0:	4620      	mov	r0, r4
 801f0e2:	f00a fda2 	bl	8029c2a <__cxa_guard_release>
 801f0e6:	4a06      	ldr	r2, [pc, #24]	; (801f100 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f0e8:	4909      	ldr	r1, [pc, #36]	; (801f110 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801f0ea:	480a      	ldr	r0, [pc, #40]	; (801f114 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f0ec:	f00a fd8a 	bl	8029c04 <__aeabi_atexit>
 801f0f0:	4b05      	ldr	r3, [pc, #20]	; (801f108 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f0f2:	62ab      	str	r3, [r5, #40]	; 0x28
 801f0f4:	4b07      	ldr	r3, [pc, #28]	; (801f114 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f0f6:	62eb      	str	r3, [r5, #44]	; 0x2c
 801f0f8:	bd38      	pop	{r3, r4, r5, pc}
 801f0fa:	bf00      	nop
 801f0fc:	20012e7c 	.word	0x20012e7c
 801f100:	20000000 	.word	0x20000000
 801f104:	0801bc2f 	.word	0x0801bc2f
 801f108:	200000bc 	.word	0x200000bc
 801f10c:	20012e80 	.word	0x20012e80
 801f110:	0801bc2d 	.word	0x0801bc2d
 801f114:	200000c0 	.word	0x200000c0

0801f118 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801f118:	b510      	push	{r4, lr}
 801f11a:	4604      	mov	r4, r0
 801f11c:	f7ff ff88 	bl	801f030 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801f120:	4620      	mov	r0, r4
 801f122:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f126:	f7ff bfbd 	b.w	801f0a4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801f12c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801f12c:	b538      	push	{r3, r4, r5, lr}
 801f12e:	4c15      	ldr	r4, [pc, #84]	; (801f184 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801f130:	7823      	ldrb	r3, [r4, #0]
 801f132:	f3bf 8f5b 	dmb	ish
 801f136:	07da      	lsls	r2, r3, #31
 801f138:	4605      	mov	r5, r0
 801f13a:	d40b      	bmi.n	801f154 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f13c:	4620      	mov	r0, r4
 801f13e:	f00a fd68 	bl	8029c12 <__cxa_guard_acquire>
 801f142:	b138      	cbz	r0, 801f154 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f144:	4620      	mov	r0, r4
 801f146:	f00a fd70 	bl	8029c2a <__cxa_guard_release>
 801f14a:	4a0f      	ldr	r2, [pc, #60]	; (801f188 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f14c:	490f      	ldr	r1, [pc, #60]	; (801f18c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801f14e:	4810      	ldr	r0, [pc, #64]	; (801f190 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f150:	f00a fd58 	bl	8029c04 <__aeabi_atexit>
 801f154:	4c0f      	ldr	r4, [pc, #60]	; (801f194 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801f156:	7823      	ldrb	r3, [r4, #0]
 801f158:	f3bf 8f5b 	dmb	ish
 801f15c:	07db      	lsls	r3, r3, #31
 801f15e:	d40b      	bmi.n	801f178 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f160:	4620      	mov	r0, r4
 801f162:	f00a fd56 	bl	8029c12 <__cxa_guard_acquire>
 801f166:	b138      	cbz	r0, 801f178 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f168:	4620      	mov	r0, r4
 801f16a:	f00a fd5e 	bl	8029c2a <__cxa_guard_release>
 801f16e:	4a06      	ldr	r2, [pc, #24]	; (801f188 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f170:	4909      	ldr	r1, [pc, #36]	; (801f198 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801f172:	480a      	ldr	r0, [pc, #40]	; (801f19c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f174:	f00a fd46 	bl	8029c04 <__aeabi_atexit>
 801f178:	4b05      	ldr	r3, [pc, #20]	; (801f190 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f17a:	652b      	str	r3, [r5, #80]	; 0x50
 801f17c:	4b07      	ldr	r3, [pc, #28]	; (801f19c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f17e:	656b      	str	r3, [r5, #84]	; 0x54
 801f180:	bd38      	pop	{r3, r4, r5, pc}
 801f182:	bf00      	nop
 801f184:	20012eb4 	.word	0x20012eb4
 801f188:	20000000 	.word	0x20000000
 801f18c:	0801bc1b 	.word	0x0801bc1b
 801f190:	200000f4 	.word	0x200000f4
 801f194:	20012eb8 	.word	0x20012eb8
 801f198:	0801bc19 	.word	0x0801bc19
 801f19c:	200000f8 	.word	0x200000f8

0801f1a0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801f1a0:	b538      	push	{r3, r4, r5, lr}
 801f1a2:	4c15      	ldr	r4, [pc, #84]	; (801f1f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801f1a4:	7823      	ldrb	r3, [r4, #0]
 801f1a6:	f3bf 8f5b 	dmb	ish
 801f1aa:	07da      	lsls	r2, r3, #31
 801f1ac:	4605      	mov	r5, r0
 801f1ae:	d40b      	bmi.n	801f1c8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f1b0:	4620      	mov	r0, r4
 801f1b2:	f00a fd2e 	bl	8029c12 <__cxa_guard_acquire>
 801f1b6:	b138      	cbz	r0, 801f1c8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f1b8:	4620      	mov	r0, r4
 801f1ba:	f00a fd36 	bl	8029c2a <__cxa_guard_release>
 801f1be:	4a0f      	ldr	r2, [pc, #60]	; (801f1fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f1c0:	490f      	ldr	r1, [pc, #60]	; (801f200 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801f1c2:	4810      	ldr	r0, [pc, #64]	; (801f204 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f1c4:	f00a fd1e 	bl	8029c04 <__aeabi_atexit>
 801f1c8:	4c0f      	ldr	r4, [pc, #60]	; (801f208 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801f1ca:	7823      	ldrb	r3, [r4, #0]
 801f1cc:	f3bf 8f5b 	dmb	ish
 801f1d0:	07db      	lsls	r3, r3, #31
 801f1d2:	d40b      	bmi.n	801f1ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f1d4:	4620      	mov	r0, r4
 801f1d6:	f00a fd1c 	bl	8029c12 <__cxa_guard_acquire>
 801f1da:	b138      	cbz	r0, 801f1ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f1dc:	4620      	mov	r0, r4
 801f1de:	f00a fd24 	bl	8029c2a <__cxa_guard_release>
 801f1e2:	4a06      	ldr	r2, [pc, #24]	; (801f1fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f1e4:	4909      	ldr	r1, [pc, #36]	; (801f20c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801f1e6:	480a      	ldr	r0, [pc, #40]	; (801f210 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f1e8:	f00a fd0c 	bl	8029c04 <__aeabi_atexit>
 801f1ec:	4b05      	ldr	r3, [pc, #20]	; (801f204 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f1ee:	64ab      	str	r3, [r5, #72]	; 0x48
 801f1f0:	4b07      	ldr	r3, [pc, #28]	; (801f210 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f1f2:	64eb      	str	r3, [r5, #76]	; 0x4c
 801f1f4:	bd38      	pop	{r3, r4, r5, pc}
 801f1f6:	bf00      	nop
 801f1f8:	20012ebc 	.word	0x20012ebc
 801f1fc:	20000000 	.word	0x20000000
 801f200:	0801bc1f 	.word	0x0801bc1f
 801f204:	200000fc 	.word	0x200000fc
 801f208:	20012ec0 	.word	0x20012ec0
 801f20c:	0801bc1d 	.word	0x0801bc1d
 801f210:	20000100 	.word	0x20000100

0801f214 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801f214:	b538      	push	{r3, r4, r5, lr}
 801f216:	4c15      	ldr	r4, [pc, #84]	; (801f26c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801f218:	7823      	ldrb	r3, [r4, #0]
 801f21a:	f3bf 8f5b 	dmb	ish
 801f21e:	07da      	lsls	r2, r3, #31
 801f220:	4605      	mov	r5, r0
 801f222:	d40b      	bmi.n	801f23c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f224:	4620      	mov	r0, r4
 801f226:	f00a fcf4 	bl	8029c12 <__cxa_guard_acquire>
 801f22a:	b138      	cbz	r0, 801f23c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f22c:	4620      	mov	r0, r4
 801f22e:	f00a fcfc 	bl	8029c2a <__cxa_guard_release>
 801f232:	4a0f      	ldr	r2, [pc, #60]	; (801f270 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f234:	490f      	ldr	r1, [pc, #60]	; (801f274 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801f236:	4810      	ldr	r0, [pc, #64]	; (801f278 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f238:	f00a fce4 	bl	8029c04 <__aeabi_atexit>
 801f23c:	4c0f      	ldr	r4, [pc, #60]	; (801f27c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801f23e:	7823      	ldrb	r3, [r4, #0]
 801f240:	f3bf 8f5b 	dmb	ish
 801f244:	07db      	lsls	r3, r3, #31
 801f246:	d40b      	bmi.n	801f260 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f248:	4620      	mov	r0, r4
 801f24a:	f00a fce2 	bl	8029c12 <__cxa_guard_acquire>
 801f24e:	b138      	cbz	r0, 801f260 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f250:	4620      	mov	r0, r4
 801f252:	f00a fcea 	bl	8029c2a <__cxa_guard_release>
 801f256:	4a06      	ldr	r2, [pc, #24]	; (801f270 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f258:	4909      	ldr	r1, [pc, #36]	; (801f280 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801f25a:	480a      	ldr	r0, [pc, #40]	; (801f284 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f25c:	f00a fcd2 	bl	8029c04 <__aeabi_atexit>
 801f260:	4b05      	ldr	r3, [pc, #20]	; (801f278 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f262:	642b      	str	r3, [r5, #64]	; 0x40
 801f264:	4b07      	ldr	r3, [pc, #28]	; (801f284 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f266:	646b      	str	r3, [r5, #68]	; 0x44
 801f268:	bd38      	pop	{r3, r4, r5, pc}
 801f26a:	bf00      	nop
 801f26c:	20012e84 	.word	0x20012e84
 801f270:	20000000 	.word	0x20000000
 801f274:	0801bc23 	.word	0x0801bc23
 801f278:	200000c4 	.word	0x200000c4
 801f27c:	20012e88 	.word	0x20012e88
 801f280:	0801bc21 	.word	0x0801bc21
 801f284:	200000c8 	.word	0x200000c8

0801f288 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801f288:	b538      	push	{r3, r4, r5, lr}
 801f28a:	4c15      	ldr	r4, [pc, #84]	; (801f2e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801f28c:	7823      	ldrb	r3, [r4, #0]
 801f28e:	f3bf 8f5b 	dmb	ish
 801f292:	07da      	lsls	r2, r3, #31
 801f294:	4605      	mov	r5, r0
 801f296:	d40b      	bmi.n	801f2b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f298:	4620      	mov	r0, r4
 801f29a:	f00a fcba 	bl	8029c12 <__cxa_guard_acquire>
 801f29e:	b138      	cbz	r0, 801f2b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f2a0:	4620      	mov	r0, r4
 801f2a2:	f00a fcc2 	bl	8029c2a <__cxa_guard_release>
 801f2a6:	4a0f      	ldr	r2, [pc, #60]	; (801f2e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f2a8:	490f      	ldr	r1, [pc, #60]	; (801f2e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801f2aa:	4810      	ldr	r0, [pc, #64]	; (801f2ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f2ac:	f00a fcaa 	bl	8029c04 <__aeabi_atexit>
 801f2b0:	4c0f      	ldr	r4, [pc, #60]	; (801f2f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801f2b2:	7823      	ldrb	r3, [r4, #0]
 801f2b4:	f3bf 8f5b 	dmb	ish
 801f2b8:	07db      	lsls	r3, r3, #31
 801f2ba:	d40b      	bmi.n	801f2d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f2bc:	4620      	mov	r0, r4
 801f2be:	f00a fca8 	bl	8029c12 <__cxa_guard_acquire>
 801f2c2:	b138      	cbz	r0, 801f2d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f2c4:	4620      	mov	r0, r4
 801f2c6:	f00a fcb0 	bl	8029c2a <__cxa_guard_release>
 801f2ca:	4a06      	ldr	r2, [pc, #24]	; (801f2e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f2cc:	4909      	ldr	r1, [pc, #36]	; (801f2f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801f2ce:	480a      	ldr	r0, [pc, #40]	; (801f2f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f2d0:	f00a fc98 	bl	8029c04 <__aeabi_atexit>
 801f2d4:	4b05      	ldr	r3, [pc, #20]	; (801f2ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f2d6:	63ab      	str	r3, [r5, #56]	; 0x38
 801f2d8:	4b07      	ldr	r3, [pc, #28]	; (801f2f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f2da:	63eb      	str	r3, [r5, #60]	; 0x3c
 801f2dc:	bd38      	pop	{r3, r4, r5, pc}
 801f2de:	bf00      	nop
 801f2e0:	20012ea4 	.word	0x20012ea4
 801f2e4:	20000000 	.word	0x20000000
 801f2e8:	0801bc27 	.word	0x0801bc27
 801f2ec:	200000e4 	.word	0x200000e4
 801f2f0:	20012ea8 	.word	0x20012ea8
 801f2f4:	0801bc25 	.word	0x0801bc25
 801f2f8:	200000e8 	.word	0x200000e8

0801f2fc <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801f2fc:	b510      	push	{r4, lr}
 801f2fe:	4604      	mov	r4, r0
 801f300:	f7ff ff14 	bl	801f12c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801f304:	4620      	mov	r0, r4
 801f306:	f7ff ff85 	bl	801f214 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801f30a:	4620      	mov	r0, r4
 801f30c:	f7ff ff48 	bl	801f1a0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801f310:	4620      	mov	r0, r4
 801f312:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f316:	f7ff bfb7 	b.w	801f288 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801f31c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801f31c:	b538      	push	{r3, r4, r5, lr}
 801f31e:	4c15      	ldr	r4, [pc, #84]	; (801f374 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801f320:	7823      	ldrb	r3, [r4, #0]
 801f322:	f3bf 8f5b 	dmb	ish
 801f326:	07da      	lsls	r2, r3, #31
 801f328:	4605      	mov	r5, r0
 801f32a:	d40b      	bmi.n	801f344 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f32c:	4620      	mov	r0, r4
 801f32e:	f00a fc70 	bl	8029c12 <__cxa_guard_acquire>
 801f332:	b138      	cbz	r0, 801f344 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f334:	4620      	mov	r0, r4
 801f336:	f00a fc78 	bl	8029c2a <__cxa_guard_release>
 801f33a:	4a0f      	ldr	r2, [pc, #60]	; (801f378 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f33c:	490f      	ldr	r1, [pc, #60]	; (801f37c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801f33e:	4810      	ldr	r0, [pc, #64]	; (801f380 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f340:	f00a fc60 	bl	8029c04 <__aeabi_atexit>
 801f344:	4c0f      	ldr	r4, [pc, #60]	; (801f384 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801f346:	7823      	ldrb	r3, [r4, #0]
 801f348:	f3bf 8f5b 	dmb	ish
 801f34c:	07db      	lsls	r3, r3, #31
 801f34e:	d40b      	bmi.n	801f368 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f350:	4620      	mov	r0, r4
 801f352:	f00a fc5e 	bl	8029c12 <__cxa_guard_acquire>
 801f356:	b138      	cbz	r0, 801f368 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f358:	4620      	mov	r0, r4
 801f35a:	f00a fc66 	bl	8029c2a <__cxa_guard_release>
 801f35e:	4a06      	ldr	r2, [pc, #24]	; (801f378 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f360:	4909      	ldr	r1, [pc, #36]	; (801f388 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801f362:	480a      	ldr	r0, [pc, #40]	; (801f38c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f364:	f00a fc4e 	bl	8029c04 <__aeabi_atexit>
 801f368:	4b05      	ldr	r3, [pc, #20]	; (801f380 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f36a:	662b      	str	r3, [r5, #96]	; 0x60
 801f36c:	4b07      	ldr	r3, [pc, #28]	; (801f38c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f36e:	666b      	str	r3, [r5, #100]	; 0x64
 801f370:	bd38      	pop	{r3, r4, r5, pc}
 801f372:	bf00      	nop
 801f374:	20012e8c 	.word	0x20012e8c
 801f378:	20000000 	.word	0x20000000
 801f37c:	0801bc13 	.word	0x0801bc13
 801f380:	200000cc 	.word	0x200000cc
 801f384:	20012e90 	.word	0x20012e90
 801f388:	0801bc11 	.word	0x0801bc11
 801f38c:	200000d0 	.word	0x200000d0

0801f390 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801f390:	b538      	push	{r3, r4, r5, lr}
 801f392:	4c15      	ldr	r4, [pc, #84]	; (801f3e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801f394:	7823      	ldrb	r3, [r4, #0]
 801f396:	f3bf 8f5b 	dmb	ish
 801f39a:	07da      	lsls	r2, r3, #31
 801f39c:	4605      	mov	r5, r0
 801f39e:	d40b      	bmi.n	801f3b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f3a0:	4620      	mov	r0, r4
 801f3a2:	f00a fc36 	bl	8029c12 <__cxa_guard_acquire>
 801f3a6:	b138      	cbz	r0, 801f3b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f3a8:	4620      	mov	r0, r4
 801f3aa:	f00a fc3e 	bl	8029c2a <__cxa_guard_release>
 801f3ae:	4a0f      	ldr	r2, [pc, #60]	; (801f3ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f3b0:	490f      	ldr	r1, [pc, #60]	; (801f3f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801f3b2:	4810      	ldr	r0, [pc, #64]	; (801f3f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f3b4:	f00a fc26 	bl	8029c04 <__aeabi_atexit>
 801f3b8:	4c0f      	ldr	r4, [pc, #60]	; (801f3f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801f3ba:	7823      	ldrb	r3, [r4, #0]
 801f3bc:	f3bf 8f5b 	dmb	ish
 801f3c0:	07db      	lsls	r3, r3, #31
 801f3c2:	d40b      	bmi.n	801f3dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f3c4:	4620      	mov	r0, r4
 801f3c6:	f00a fc24 	bl	8029c12 <__cxa_guard_acquire>
 801f3ca:	b138      	cbz	r0, 801f3dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f3cc:	4620      	mov	r0, r4
 801f3ce:	f00a fc2c 	bl	8029c2a <__cxa_guard_release>
 801f3d2:	4a06      	ldr	r2, [pc, #24]	; (801f3ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f3d4:	4909      	ldr	r1, [pc, #36]	; (801f3fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801f3d6:	480a      	ldr	r0, [pc, #40]	; (801f400 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f3d8:	f00a fc14 	bl	8029c04 <__aeabi_atexit>
 801f3dc:	4b05      	ldr	r3, [pc, #20]	; (801f3f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f3de:	65ab      	str	r3, [r5, #88]	; 0x58
 801f3e0:	4b07      	ldr	r3, [pc, #28]	; (801f400 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f3e2:	65eb      	str	r3, [r5, #92]	; 0x5c
 801f3e4:	bd38      	pop	{r3, r4, r5, pc}
 801f3e6:	bf00      	nop
 801f3e8:	20012e64 	.word	0x20012e64
 801f3ec:	20000000 	.word	0x20000000
 801f3f0:	0801bc17 	.word	0x0801bc17
 801f3f4:	200000a4 	.word	0x200000a4
 801f3f8:	20012e68 	.word	0x20012e68
 801f3fc:	0801bc15 	.word	0x0801bc15
 801f400:	200000a8 	.word	0x200000a8

0801f404 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801f404:	b510      	push	{r4, lr}
 801f406:	4604      	mov	r4, r0
 801f408:	f7ff ff88 	bl	801f31c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801f40c:	4620      	mov	r0, r4
 801f40e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f412:	f7ff bfbd 	b.w	801f390 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801f418 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801f418:	b538      	push	{r3, r4, r5, lr}
 801f41a:	4c15      	ldr	r4, [pc, #84]	; (801f470 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801f41c:	7823      	ldrb	r3, [r4, #0]
 801f41e:	f3bf 8f5b 	dmb	ish
 801f422:	07da      	lsls	r2, r3, #31
 801f424:	4605      	mov	r5, r0
 801f426:	d40b      	bmi.n	801f440 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f428:	4620      	mov	r0, r4
 801f42a:	f00a fbf2 	bl	8029c12 <__cxa_guard_acquire>
 801f42e:	b138      	cbz	r0, 801f440 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f430:	4620      	mov	r0, r4
 801f432:	f00a fbfa 	bl	8029c2a <__cxa_guard_release>
 801f436:	4a0f      	ldr	r2, [pc, #60]	; (801f474 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f438:	490f      	ldr	r1, [pc, #60]	; (801f478 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801f43a:	4810      	ldr	r0, [pc, #64]	; (801f47c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f43c:	f00a fbe2 	bl	8029c04 <__aeabi_atexit>
 801f440:	4c0f      	ldr	r4, [pc, #60]	; (801f480 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801f442:	7823      	ldrb	r3, [r4, #0]
 801f444:	f3bf 8f5b 	dmb	ish
 801f448:	07db      	lsls	r3, r3, #31
 801f44a:	d40b      	bmi.n	801f464 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f44c:	4620      	mov	r0, r4
 801f44e:	f00a fbe0 	bl	8029c12 <__cxa_guard_acquire>
 801f452:	b138      	cbz	r0, 801f464 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f454:	4620      	mov	r0, r4
 801f456:	f00a fbe8 	bl	8029c2a <__cxa_guard_release>
 801f45a:	4a06      	ldr	r2, [pc, #24]	; (801f474 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f45c:	4909      	ldr	r1, [pc, #36]	; (801f484 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801f45e:	480a      	ldr	r0, [pc, #40]	; (801f488 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f460:	f00a fbd0 	bl	8029c04 <__aeabi_atexit>
 801f464:	4b05      	ldr	r3, [pc, #20]	; (801f47c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f466:	672b      	str	r3, [r5, #112]	; 0x70
 801f468:	4b07      	ldr	r3, [pc, #28]	; (801f488 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f46a:	676b      	str	r3, [r5, #116]	; 0x74
 801f46c:	bd38      	pop	{r3, r4, r5, pc}
 801f46e:	bf00      	nop
 801f470:	20012e5c 	.word	0x20012e5c
 801f474:	20000000 	.word	0x20000000
 801f478:	0801bc0b 	.word	0x0801bc0b
 801f47c:	2000009c 	.word	0x2000009c
 801f480:	20012e60 	.word	0x20012e60
 801f484:	0801bc09 	.word	0x0801bc09
 801f488:	200000a0 	.word	0x200000a0

0801f48c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801f48c:	b538      	push	{r3, r4, r5, lr}
 801f48e:	4c15      	ldr	r4, [pc, #84]	; (801f4e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801f490:	7823      	ldrb	r3, [r4, #0]
 801f492:	f3bf 8f5b 	dmb	ish
 801f496:	07da      	lsls	r2, r3, #31
 801f498:	4605      	mov	r5, r0
 801f49a:	d40b      	bmi.n	801f4b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f49c:	4620      	mov	r0, r4
 801f49e:	f00a fbb8 	bl	8029c12 <__cxa_guard_acquire>
 801f4a2:	b138      	cbz	r0, 801f4b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f4a4:	4620      	mov	r0, r4
 801f4a6:	f00a fbc0 	bl	8029c2a <__cxa_guard_release>
 801f4aa:	4a0f      	ldr	r2, [pc, #60]	; (801f4e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f4ac:	490f      	ldr	r1, [pc, #60]	; (801f4ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801f4ae:	4810      	ldr	r0, [pc, #64]	; (801f4f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f4b0:	f00a fba8 	bl	8029c04 <__aeabi_atexit>
 801f4b4:	4c0f      	ldr	r4, [pc, #60]	; (801f4f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801f4b6:	7823      	ldrb	r3, [r4, #0]
 801f4b8:	f3bf 8f5b 	dmb	ish
 801f4bc:	07db      	lsls	r3, r3, #31
 801f4be:	d40b      	bmi.n	801f4d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f4c0:	4620      	mov	r0, r4
 801f4c2:	f00a fba6 	bl	8029c12 <__cxa_guard_acquire>
 801f4c6:	b138      	cbz	r0, 801f4d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f4c8:	4620      	mov	r0, r4
 801f4ca:	f00a fbae 	bl	8029c2a <__cxa_guard_release>
 801f4ce:	4a06      	ldr	r2, [pc, #24]	; (801f4e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f4d0:	4909      	ldr	r1, [pc, #36]	; (801f4f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801f4d2:	480a      	ldr	r0, [pc, #40]	; (801f4fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f4d4:	f00a fb96 	bl	8029c04 <__aeabi_atexit>
 801f4d8:	4b05      	ldr	r3, [pc, #20]	; (801f4f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f4da:	66ab      	str	r3, [r5, #104]	; 0x68
 801f4dc:	4b07      	ldr	r3, [pc, #28]	; (801f4fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f4de:	66eb      	str	r3, [r5, #108]	; 0x6c
 801f4e0:	bd38      	pop	{r3, r4, r5, pc}
 801f4e2:	bf00      	nop
 801f4e4:	20012e54 	.word	0x20012e54
 801f4e8:	20000000 	.word	0x20000000
 801f4ec:	0801bc0f 	.word	0x0801bc0f
 801f4f0:	20000094 	.word	0x20000094
 801f4f4:	20012e58 	.word	0x20012e58
 801f4f8:	0801bc0d 	.word	0x0801bc0d
 801f4fc:	20000098 	.word	0x20000098

0801f500 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801f500:	b510      	push	{r4, lr}
 801f502:	4604      	mov	r4, r0
 801f504:	f7ff ff88 	bl	801f418 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801f508:	4620      	mov	r0, r4
 801f50a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f50e:	f7ff bfbd 	b.w	801f48c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801f512 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801f512:	b510      	push	{r4, lr}
 801f514:	4604      	mov	r4, r0
 801f516:	f7ff fff3 	bl	801f500 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801f51a:	4620      	mov	r0, r4
 801f51c:	f7ff ff72 	bl	801f404 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801f520:	4620      	mov	r0, r4
 801f522:	f7ff fdf9 	bl	801f118 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801f526:	4620      	mov	r0, r4
 801f528:	f7ff fcfa 	bl	801ef20 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801f52c:	4620      	mov	r0, r4
 801f52e:	f7ff fd75 	bl	801f01c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801f532:	4620      	mov	r0, r4
 801f534:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f538:	f7ff bee0 	b.w	801f2fc <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801f53c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801f53c:	b538      	push	{r3, r4, r5, lr}
 801f53e:	4c0b      	ldr	r4, [pc, #44]	; (801f56c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801f540:	7823      	ldrb	r3, [r4, #0]
 801f542:	f3bf 8f5b 	dmb	ish
 801f546:	07db      	lsls	r3, r3, #31
 801f548:	4605      	mov	r5, r0
 801f54a:	d40b      	bmi.n	801f564 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801f54c:	4620      	mov	r0, r4
 801f54e:	f00a fb60 	bl	8029c12 <__cxa_guard_acquire>
 801f552:	b138      	cbz	r0, 801f564 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801f554:	4620      	mov	r0, r4
 801f556:	f00a fb68 	bl	8029c2a <__cxa_guard_release>
 801f55a:	4a05      	ldr	r2, [pc, #20]	; (801f570 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801f55c:	4905      	ldr	r1, [pc, #20]	; (801f574 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801f55e:	4806      	ldr	r0, [pc, #24]	; (801f578 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801f560:	f00a fb50 	bl	8029c04 <__aeabi_atexit>
 801f564:	4b04      	ldr	r3, [pc, #16]	; (801f578 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801f566:	67ab      	str	r3, [r5, #120]	; 0x78
 801f568:	bd38      	pop	{r3, r4, r5, pc}
 801f56a:	bf00      	nop
 801f56c:	20012e48 	.word	0x20012e48
 801f570:	20000000 	.word	0x20000000
 801f574:	0801bc07 	.word	0x0801bc07
 801f578:	2000008c 	.word	0x2000008c

0801f57c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801f57c:	b538      	push	{r3, r4, r5, lr}
 801f57e:	4c0b      	ldr	r4, [pc, #44]	; (801f5ac <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801f580:	7823      	ldrb	r3, [r4, #0]
 801f582:	f3bf 8f5b 	dmb	ish
 801f586:	07db      	lsls	r3, r3, #31
 801f588:	4605      	mov	r5, r0
 801f58a:	d40b      	bmi.n	801f5a4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801f58c:	4620      	mov	r0, r4
 801f58e:	f00a fb40 	bl	8029c12 <__cxa_guard_acquire>
 801f592:	b138      	cbz	r0, 801f5a4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801f594:	4620      	mov	r0, r4
 801f596:	f00a fb48 	bl	8029c2a <__cxa_guard_release>
 801f59a:	4a05      	ldr	r2, [pc, #20]	; (801f5b0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801f59c:	4905      	ldr	r1, [pc, #20]	; (801f5b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801f59e:	4806      	ldr	r0, [pc, #24]	; (801f5b8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801f5a0:	f00a fb30 	bl	8029c04 <__aeabi_atexit>
 801f5a4:	4b04      	ldr	r3, [pc, #16]	; (801f5b8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801f5a6:	67eb      	str	r3, [r5, #124]	; 0x7c
 801f5a8:	bd38      	pop	{r3, r4, r5, pc}
 801f5aa:	bf00      	nop
 801f5ac:	20012e4c 	.word	0x20012e4c
 801f5b0:	20000000 	.word	0x20000000
 801f5b4:	0801bc05 	.word	0x0801bc05
 801f5b8:	20000090 	.word	0x20000090

0801f5bc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801f5bc:	b570      	push	{r4, r5, r6, lr}
 801f5be:	4d0d      	ldr	r5, [pc, #52]	; (801f5f4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801f5c0:	4c0d      	ldr	r4, [pc, #52]	; (801f5f8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801f5c2:	782b      	ldrb	r3, [r5, #0]
 801f5c4:	f3bf 8f5b 	dmb	ish
 801f5c8:	f013 0f01 	tst.w	r3, #1
 801f5cc:	4606      	mov	r6, r0
 801f5ce:	d10d      	bne.n	801f5ec <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801f5d0:	4628      	mov	r0, r5
 801f5d2:	f00a fb1e 	bl	8029c12 <__cxa_guard_acquire>
 801f5d6:	b148      	cbz	r0, 801f5ec <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801f5d8:	4b08      	ldr	r3, [pc, #32]	; (801f5fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801f5da:	6023      	str	r3, [r4, #0]
 801f5dc:	4628      	mov	r0, r5
 801f5de:	f00a fb24 	bl	8029c2a <__cxa_guard_release>
 801f5e2:	4a07      	ldr	r2, [pc, #28]	; (801f600 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801f5e4:	4907      	ldr	r1, [pc, #28]	; (801f604 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801f5e6:	4620      	mov	r0, r4
 801f5e8:	f00a fb0c 	bl	8029c04 <__aeabi_atexit>
 801f5ec:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801f5f0:	bd70      	pop	{r4, r5, r6, pc}
 801f5f2:	bf00      	nop
 801f5f4:	20012e50 	.word	0x20012e50
 801f5f8:	20012ec4 	.word	0x20012ec4
 801f5fc:	0802f3ac 	.word	0x0802f3ac
 801f600:	20000000 	.word	0x20000000
 801f604:	0801bc03 	.word	0x0801bc03

0801f608 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801f608:	b510      	push	{r4, lr}
 801f60a:	4604      	mov	r4, r0
 801f60c:	f7ff ff96 	bl	801f53c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801f610:	4620      	mov	r0, r4
 801f612:	f7ff ffb3 	bl	801f57c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801f616:	4620      	mov	r0, r4
 801f618:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f61c:	f7ff bfce 	b.w	801f5bc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801f620 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801f620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f624:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801f628:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801f62c:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801f630:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801f634:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801f638:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801f63c:	8808      	ldrh	r0, [r1, #0]
 801f63e:	fb05 4c0e 	mla	ip, r5, lr, r4
 801f642:	2d00      	cmp	r5, #0
 801f644:	eb02 0a0c 	add.w	sl, r2, ip
 801f648:	f2c0 80b0 	blt.w	801f7ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801f64c:	45ab      	cmp	fp, r5
 801f64e:	f340 80ad 	ble.w	801f7ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801f652:	2c00      	cmp	r4, #0
 801f654:	f2c0 80a8 	blt.w	801f7a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801f658:	45a6      	cmp	lr, r4
 801f65a:	f340 80a5 	ble.w	801f7a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801f65e:	f812 200c 	ldrb.w	r2, [r2, ip]
 801f662:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801f666:	1c62      	adds	r2, r4, #1
 801f668:	f100 80a3 	bmi.w	801f7b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f66c:	4596      	cmp	lr, r2
 801f66e:	f340 80a0 	ble.w	801f7b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f672:	f1b9 0f00 	cmp.w	r9, #0
 801f676:	f000 809c 	beq.w	801f7b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f67a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f67e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801f682:	3501      	adds	r5, #1
 801f684:	f100 8099 	bmi.w	801f7ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f688:	45ab      	cmp	fp, r5
 801f68a:	f340 8096 	ble.w	801f7ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f68e:	2f00      	cmp	r7, #0
 801f690:	f000 8093 	beq.w	801f7ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f694:	2c00      	cmp	r4, #0
 801f696:	f2c0 808e 	blt.w	801f7b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801f69a:	45a6      	cmp	lr, r4
 801f69c:	f340 808b 	ble.w	801f7b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801f6a0:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801f6a4:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801f6a8:	3401      	adds	r4, #1
 801f6aa:	f100 8089 	bmi.w	801f7c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f6ae:	45a6      	cmp	lr, r4
 801f6b0:	f340 8086 	ble.w	801f7c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f6b4:	f1b9 0f00 	cmp.w	r9, #0
 801f6b8:	f000 8082 	beq.w	801f7c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f6bc:	44d6      	add	lr, sl
 801f6be:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f6c2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801f6c6:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801f6ca:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f6ce:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801f6d2:	fb19 fe07 	smulbb	lr, r9, r7
 801f6d6:	ea44 0808 	orr.w	r8, r4, r8
 801f6da:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801f6de:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801f6e2:	f1c7 0210 	rsb	r2, r7, #16
 801f6e6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f6ea:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f6ee:	ea44 0c0c 	orr.w	ip, r4, ip
 801f6f2:	eba2 0209 	sub.w	r2, r2, r9
 801f6f6:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801f6fa:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801f6fe:	fb04 f40c 	mul.w	r4, r4, ip
 801f702:	fb02 4808 	mla	r8, r2, r8, r4
 801f706:	041a      	lsls	r2, r3, #16
 801f708:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f70c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f710:	4313      	orrs	r3, r2
 801f712:	042a      	lsls	r2, r5, #16
 801f714:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f718:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f71c:	fb0e 8303 	mla	r3, lr, r3, r8
 801f720:	432a      	orrs	r2, r5
 801f722:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801f726:	fb07 3202 	mla	r2, r7, r2, r3
 801f72a:	0d53      	lsrs	r3, r2, #21
 801f72c:	0952      	lsrs	r2, r2, #5
 801f72e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f732:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f736:	431a      	orrs	r2, r3
 801f738:	b293      	uxth	r3, r2
 801f73a:	b2b4      	uxth	r4, r6
 801f73c:	1202      	asrs	r2, r0, #8
 801f73e:	43f6      	mvns	r6, r6
 801f740:	b2f6      	uxtb	r6, r6
 801f742:	121d      	asrs	r5, r3, #8
 801f744:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f748:	fb12 f206 	smulbb	r2, r2, r6
 801f74c:	10c7      	asrs	r7, r0, #3
 801f74e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f752:	00c0      	lsls	r0, r0, #3
 801f754:	fb05 2504 	mla	r5, r5, r4, r2
 801f758:	b2c0      	uxtb	r0, r0
 801f75a:	10da      	asrs	r2, r3, #3
 801f75c:	00db      	lsls	r3, r3, #3
 801f75e:	b2db      	uxtb	r3, r3
 801f760:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f764:	fb10 f006 	smulbb	r0, r0, r6
 801f768:	b2ad      	uxth	r5, r5
 801f76a:	fb03 0004 	mla	r0, r3, r4, r0
 801f76e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f772:	fb17 f706 	smulbb	r7, r7, r6
 801f776:	b280      	uxth	r0, r0
 801f778:	1c6b      	adds	r3, r5, #1
 801f77a:	fb02 7204 	mla	r2, r2, r4, r7
 801f77e:	b292      	uxth	r2, r2
 801f780:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f784:	1c43      	adds	r3, r0, #1
 801f786:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801f78a:	1c50      	adds	r0, r2, #1
 801f78c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801f790:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f794:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f798:	0952      	lsrs	r2, r2, #5
 801f79a:	432b      	orrs	r3, r5
 801f79c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f7a0:	4313      	orrs	r3, r2
 801f7a2:	800b      	strh	r3, [r1, #0]
 801f7a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f7a8:	4680      	mov	r8, r0
 801f7aa:	e75c      	b.n	801f666 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801f7ac:	4684      	mov	ip, r0
 801f7ae:	4680      	mov	r8, r0
 801f7b0:	e767      	b.n	801f682 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801f7b2:	4684      	mov	ip, r0
 801f7b4:	e765      	b.n	801f682 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801f7b6:	4605      	mov	r5, r0
 801f7b8:	e776      	b.n	801f6a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801f7ba:	4603      	mov	r3, r0
 801f7bc:	4605      	mov	r5, r0
 801f7be:	e782      	b.n	801f6c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801f7c0:	4603      	mov	r3, r0
 801f7c2:	e780      	b.n	801f6c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801f7c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f7c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f7c8:	b099      	sub	sp, #100	; 0x64
 801f7ca:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801f7ce:	9215      	str	r2, [sp, #84]	; 0x54
 801f7d0:	9309      	str	r3, [sp, #36]	; 0x24
 801f7d2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801f7d4:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801f7d8:	930d      	str	r3, [sp, #52]	; 0x34
 801f7da:	910c      	str	r1, [sp, #48]	; 0x30
 801f7dc:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801f7e0:	9016      	str	r0, [sp, #88]	; 0x58
 801f7e2:	6850      	ldr	r0, [r2, #4]
 801f7e4:	6812      	ldr	r2, [r2, #0]
 801f7e6:	fb00 1303 	mla	r3, r0, r3, r1
 801f7ea:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801f7ee:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f7f0:	681b      	ldr	r3, [r3, #0]
 801f7f2:	930b      	str	r3, [sp, #44]	; 0x2c
 801f7f4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f7f6:	685e      	ldr	r6, [r3, #4]
 801f7f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f7fa:	43db      	mvns	r3, r3
 801f7fc:	b2db      	uxtb	r3, r3
 801f7fe:	3604      	adds	r6, #4
 801f800:	930a      	str	r3, [sp, #40]	; 0x28
 801f802:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f804:	2b00      	cmp	r3, #0
 801f806:	dc03      	bgt.n	801f810 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801f808:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801f80a:	2b00      	cmp	r3, #0
 801f80c:	f340 8225 	ble.w	801fc5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801f810:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f812:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f816:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f81a:	1e48      	subs	r0, r1, #1
 801f81c:	1e57      	subs	r7, r2, #1
 801f81e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f820:	2b00      	cmp	r3, #0
 801f822:	f340 80e3 	ble.w	801f9ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801f826:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801f82a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f82e:	d406      	bmi.n	801f83e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f830:	4584      	cmp	ip, r0
 801f832:	da04      	bge.n	801f83e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f834:	2b00      	cmp	r3, #0
 801f836:	db02      	blt.n	801f83e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f838:	42bb      	cmp	r3, r7
 801f83a:	f2c0 80d8 	blt.w	801f9ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f83e:	f11c 0c01 	adds.w	ip, ip, #1
 801f842:	f100 80c9 	bmi.w	801f9d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f846:	4561      	cmp	r1, ip
 801f848:	f2c0 80c6 	blt.w	801f9d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f84c:	3301      	adds	r3, #1
 801f84e:	f100 80c3 	bmi.w	801f9d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f852:	429a      	cmp	r2, r3
 801f854:	f2c0 80c0 	blt.w	801f9d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f858:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f85c:	4647      	mov	r7, r8
 801f85e:	f1bb 0f00 	cmp.w	fp, #0
 801f862:	f340 80e3 	ble.w	801fa2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801f866:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801f868:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f86a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f86e:	689b      	ldr	r3, [r3, #8]
 801f870:	ea5f 422a 	movs.w	r2, sl, asr #16
 801f874:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801f878:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801f87c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f880:	f100 8121 	bmi.w	801fac6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f884:	f103 39ff 	add.w	r9, r3, #4294967295
 801f888:	454a      	cmp	r2, r9
 801f88a:	f280 811c 	bge.w	801fac6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f88e:	f1bc 0f00 	cmp.w	ip, #0
 801f892:	f2c0 8118 	blt.w	801fac6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f896:	f10e 39ff 	add.w	r9, lr, #4294967295
 801f89a:	45cc      	cmp	ip, r9
 801f89c:	f280 8113 	bge.w	801fac6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f8a0:	b21b      	sxth	r3, r3
 801f8a2:	fb0c 2203 	mla	r2, ip, r3, r2
 801f8a6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f8a8:	eb04 0902 	add.w	r9, r4, r2
 801f8ac:	5ca2      	ldrb	r2, [r4, r2]
 801f8ae:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801f8b2:	2800      	cmp	r0, #0
 801f8b4:	f000 80fe 	beq.w	801fab4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801f8b8:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f8bc:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801f8c0:	9211      	str	r2, [sp, #68]	; 0x44
 801f8c2:	b151      	cbz	r1, 801f8da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f8c4:	eb09 0203 	add.w	r2, r9, r3
 801f8c8:	f819 3003 	ldrb.w	r3, [r9, r3]
 801f8cc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f8d0:	930f      	str	r3, [sp, #60]	; 0x3c
 801f8d2:	7853      	ldrb	r3, [r2, #1]
 801f8d4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f8d8:	9312      	str	r3, [sp, #72]	; 0x48
 801f8da:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f8dc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f8de:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f8e2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f8e6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f8ea:	ea4c 0c03 	orr.w	ip, ip, r3
 801f8ee:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f8f0:	041b      	lsls	r3, r3, #16
 801f8f2:	fb10 f201 	smulbb	r2, r0, r1
 801f8f6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801f8fa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f8fe:	10d2      	asrs	r2, r2, #3
 801f900:	4323      	orrs	r3, r4
 801f902:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801f906:	4353      	muls	r3, r2
 801f908:	fb09 330c 	mla	r3, r9, ip, r3
 801f90c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801f910:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f914:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f918:	ea4c 0e0e 	orr.w	lr, ip, lr
 801f91c:	f1c1 0c10 	rsb	ip, r1, #16
 801f920:	ebac 0c00 	sub.w	ip, ip, r0
 801f924:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f928:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801f92c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f92e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f930:	0418      	lsls	r0, r3, #16
 801f932:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f936:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f93a:	4318      	orrs	r0, r3
 801f93c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801f940:	fb02 c200 	mla	r2, r2, r0, ip
 801f944:	0d53      	lsrs	r3, r2, #21
 801f946:	0952      	lsrs	r2, r2, #5
 801f948:	8838      	ldrh	r0, [r7, #0]
 801f94a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f94e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f952:	431a      	orrs	r2, r3
 801f954:	b292      	uxth	r2, r2
 801f956:	1201      	asrs	r1, r0, #8
 801f958:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801f95c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801f960:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f964:	fb11 f104 	smulbb	r1, r1, r4
 801f968:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801f96c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f970:	00c0      	lsls	r0, r0, #3
 801f972:	fb0c 1c03 	mla	ip, ip, r3, r1
 801f976:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f97a:	10d1      	asrs	r1, r2, #3
 801f97c:	b2c0      	uxtb	r0, r0
 801f97e:	00d2      	lsls	r2, r2, #3
 801f980:	b2d2      	uxtb	r2, r2
 801f982:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f986:	fb1e fe04 	smulbb	lr, lr, r4
 801f98a:	fb10 f004 	smulbb	r0, r0, r4
 801f98e:	fa1f fc8c 	uxth.w	ip, ip
 801f992:	fb01 e103 	mla	r1, r1, r3, lr
 801f996:	fb02 0303 	mla	r3, r2, r3, r0
 801f99a:	b29a      	uxth	r2, r3
 801f99c:	f10c 0301 	add.w	r3, ip, #1
 801f9a0:	b289      	uxth	r1, r1
 801f9a2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f9a6:	1c53      	adds	r3, r2, #1
 801f9a8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f9ac:	1c4a      	adds	r2, r1, #1
 801f9ae:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f9b2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801f9b6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f9ba:	0949      	lsrs	r1, r1, #5
 801f9bc:	ea43 030c 	orr.w	r3, r3, ip
 801f9c0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f9c4:	430b      	orrs	r3, r1
 801f9c6:	803b      	strh	r3, [r7, #0]
 801f9c8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f9ca:	449a      	add	sl, r3
 801f9cc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f9ce:	3702      	adds	r7, #2
 801f9d0:	441d      	add	r5, r3
 801f9d2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f9d6:	e742      	b.n	801f85e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f9d8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f9da:	449a      	add	sl, r3
 801f9dc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f9de:	441d      	add	r5, r3
 801f9e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f9e2:	3b01      	subs	r3, #1
 801f9e4:	9309      	str	r3, [sp, #36]	; 0x24
 801f9e6:	f108 0802 	add.w	r8, r8, #2
 801f9ea:	e718      	b.n	801f81e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801f9ec:	d023      	beq.n	801fa36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801f9ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f9f0:	9825      	ldr	r0, [sp, #148]	; 0x94
 801f9f2:	3b01      	subs	r3, #1
 801f9f4:	fb00 a003 	mla	r0, r0, r3, sl
 801f9f8:	1400      	asrs	r0, r0, #16
 801f9fa:	f53f af2d 	bmi.w	801f858 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f9fe:	3901      	subs	r1, #1
 801fa00:	4288      	cmp	r0, r1
 801fa02:	f6bf af29 	bge.w	801f858 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fa06:	9926      	ldr	r1, [sp, #152]	; 0x98
 801fa08:	fb01 5303 	mla	r3, r1, r3, r5
 801fa0c:	141b      	asrs	r3, r3, #16
 801fa0e:	f53f af23 	bmi.w	801f858 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fa12:	3a01      	subs	r2, #1
 801fa14:	4293      	cmp	r3, r2
 801fa16:	f6bf af1f 	bge.w	801f858 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fa1a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801fa1e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801fa22:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801fa26:	f1be 0f00 	cmp.w	lr, #0
 801fa2a:	dc6c      	bgt.n	801fb06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801fa2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa2e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801fa32:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801fa36:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fa38:	2b00      	cmp	r3, #0
 801fa3a:	f340 810e 	ble.w	801fc5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801fa3e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fa42:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fa46:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fa4a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fa4c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fa50:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fa54:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fa58:	eef0 6a62 	vmov.f32	s13, s5
 801fa5c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fa60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa64:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fa68:	ee16 aa90 	vmov	sl, s13
 801fa6c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fa70:	eef0 6a43 	vmov.f32	s13, s6
 801fa74:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fa78:	ee12 2a90 	vmov	r2, s5
 801fa7c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fa80:	fb92 f3f3 	sdiv	r3, r2, r3
 801fa84:	ee13 2a10 	vmov	r2, s6
 801fa88:	9325      	str	r3, [sp, #148]	; 0x94
 801fa8a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fa8c:	fb92 f3f3 	sdiv	r3, r2, r3
 801fa90:	9326      	str	r3, [sp, #152]	; 0x98
 801fa92:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fa94:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801fa96:	3b01      	subs	r3, #1
 801fa98:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa9c:	930c      	str	r3, [sp, #48]	; 0x30
 801fa9e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801faa0:	bf08      	it	eq
 801faa2:	4613      	moveq	r3, r2
 801faa4:	ee16 5a90 	vmov	r5, s13
 801faa8:	9309      	str	r3, [sp, #36]	; 0x24
 801faaa:	eeb0 3a67 	vmov.f32	s6, s15
 801faae:	eef0 2a47 	vmov.f32	s5, s14
 801fab2:	e6a6      	b.n	801f802 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801fab4:	2900      	cmp	r1, #0
 801fab6:	f43f af10 	beq.w	801f8da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801faba:	f819 3003 	ldrb.w	r3, [r9, r3]
 801fabe:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fac2:	930f      	str	r3, [sp, #60]	; 0x3c
 801fac4:	e709      	b.n	801f8da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fac6:	f112 0901 	adds.w	r9, r2, #1
 801faca:	f53f af7d 	bmi.w	801f9c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801face:	454b      	cmp	r3, r9
 801fad0:	f6ff af7a 	blt.w	801f9c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fad4:	f11c 0901 	adds.w	r9, ip, #1
 801fad8:	f53f af76 	bmi.w	801f9c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fadc:	45ce      	cmp	lr, r9
 801fade:	f6ff af73 	blt.w	801f9c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fae2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fae4:	9202      	str	r2, [sp, #8]
 801fae6:	b21b      	sxth	r3, r3
 801fae8:	fa0f f28e 	sxth.w	r2, lr
 801faec:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801faf0:	e9cd c003 	strd	ip, r0, [sp, #12]
 801faf4:	9201      	str	r2, [sp, #4]
 801faf6:	9300      	str	r3, [sp, #0]
 801faf8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fafa:	9816      	ldr	r0, [sp, #88]	; 0x58
 801fafc:	4633      	mov	r3, r6
 801fafe:	4639      	mov	r1, r7
 801fb00:	f7ff fd8e 	bl	801f620 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801fb04:	e760      	b.n	801f9c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fb06:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fb08:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fb0a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801fb0e:	ea4f 422a 	mov.w	r2, sl, asr #16
 801fb12:	1429      	asrs	r1, r5, #16
 801fb14:	fb03 2101 	mla	r1, r3, r1, r2
 801fb18:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fb1a:	440a      	add	r2, r1
 801fb1c:	5c61      	ldrb	r1, [r4, r1]
 801fb1e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801fb22:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801fb26:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801fb2a:	f1bc 0f00 	cmp.w	ip, #0
 801fb2e:	f000 808c 	beq.w	801fc4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801fb32:	7857      	ldrb	r7, [r2, #1]
 801fb34:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801fb38:	9413      	str	r4, [sp, #76]	; 0x4c
 801fb3a:	b140      	cbz	r0, 801fb4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fb3c:	18d7      	adds	r7, r2, r3
 801fb3e:	5cd3      	ldrb	r3, [r2, r3]
 801fb40:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fb44:	9310      	str	r3, [sp, #64]	; 0x40
 801fb46:	787b      	ldrb	r3, [r7, #1]
 801fb48:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fb4c:	9314      	str	r3, [sp, #80]	; 0x50
 801fb4e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801fb50:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fb52:	fb1c f200 	smulbb	r2, ip, r0
 801fb56:	041f      	lsls	r7, r3, #16
 801fb58:	10d2      	asrs	r2, r2, #3
 801fb5a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fb5e:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801fb62:	431f      	orrs	r7, r3
 801fb64:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801fb68:	9317      	str	r3, [sp, #92]	; 0x5c
 801fb6a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801fb6c:	041b      	lsls	r3, r3, #16
 801fb6e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801fb72:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fb76:	ea43 030b 	orr.w	r3, r3, fp
 801fb7a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801fb7c:	4353      	muls	r3, r2
 801fb7e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801fb82:	fb04 3707 	mla	r7, r4, r7, r3
 801fb86:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801fb8a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801fb8e:	ea43 0b01 	orr.w	fp, r3, r1
 801fb92:	f1c0 0110 	rsb	r1, r0, #16
 801fb96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fb98:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fb9a:	eba1 0c0c 	sub.w	ip, r1, ip
 801fb9e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801fba2:	fb0c 770b 	mla	r7, ip, fp, r7
 801fba6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801fbaa:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801fbae:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fbb2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801fbb6:	ea4c 0c0b 	orr.w	ip, ip, fp
 801fbba:	fb02 770c 	mla	r7, r2, ip, r7
 801fbbe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fbc0:	0d79      	lsrs	r1, r7, #21
 801fbc2:	097f      	lsrs	r7, r7, #5
 801fbc4:	8812      	ldrh	r2, [r2, #0]
 801fbc6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fbca:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801fbce:	430f      	orrs	r7, r1
 801fbd0:	b2bb      	uxth	r3, r7
 801fbd2:	1211      	asrs	r1, r2, #8
 801fbd4:	1218      	asrs	r0, r3, #8
 801fbd6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fbda:	fb11 f104 	smulbb	r1, r1, r4
 801fbde:	10d7      	asrs	r7, r2, #3
 801fbe0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fbe4:	00d2      	lsls	r2, r2, #3
 801fbe6:	fb00 1009 	mla	r0, r0, r9, r1
 801fbea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801fbee:	10d9      	asrs	r1, r3, #3
 801fbf0:	b2d2      	uxtb	r2, r2
 801fbf2:	00db      	lsls	r3, r3, #3
 801fbf4:	fb17 f704 	smulbb	r7, r7, r4
 801fbf8:	fb12 f204 	smulbb	r2, r2, r4
 801fbfc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fc00:	b2db      	uxtb	r3, r3
 801fc02:	b280      	uxth	r0, r0
 801fc04:	fb01 7109 	mla	r1, r1, r9, r7
 801fc08:	fb03 2309 	mla	r3, r3, r9, r2
 801fc0c:	b29b      	uxth	r3, r3
 801fc0e:	b289      	uxth	r1, r1
 801fc10:	1c42      	adds	r2, r0, #1
 801fc12:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fc16:	1c4f      	adds	r7, r1, #1
 801fc18:	1c5a      	adds	r2, r3, #1
 801fc1a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801fc1e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801fc22:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801fc26:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fc2a:	0949      	lsrs	r1, r1, #5
 801fc2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fc2e:	4310      	orrs	r0, r2
 801fc30:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fc34:	4308      	orrs	r0, r1
 801fc36:	f823 0b02 	strh.w	r0, [r3], #2
 801fc3a:	930e      	str	r3, [sp, #56]	; 0x38
 801fc3c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fc3e:	449a      	add	sl, r3
 801fc40:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fc42:	f10e 3eff 	add.w	lr, lr, #4294967295
 801fc46:	441d      	add	r5, r3
 801fc48:	e6ed      	b.n	801fa26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801fc4a:	2800      	cmp	r0, #0
 801fc4c:	f43f af7f 	beq.w	801fb4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fc50:	5cd3      	ldrb	r3, [r2, r3]
 801fc52:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fc56:	9310      	str	r3, [sp, #64]	; 0x40
 801fc58:	e779      	b.n	801fb4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fc5a:	b019      	add	sp, #100	; 0x64
 801fc5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fc60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801fc60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fc64:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801fc68:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801fc6c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801fc70:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801fc74:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801fc78:	8808      	ldrh	r0, [r1, #0]
 801fc7a:	fb08 470e 	mla	r7, r8, lr, r4
 801fc7e:	f1b8 0f00 	cmp.w	r8, #0
 801fc82:	eb02 0907 	add.w	r9, r2, r7
 801fc86:	db67      	blt.n	801fd58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801fc88:	45c2      	cmp	sl, r8
 801fc8a:	dd65      	ble.n	801fd58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801fc8c:	2c00      	cmp	r4, #0
 801fc8e:	db61      	blt.n	801fd54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801fc90:	45a6      	cmp	lr, r4
 801fc92:	dd5f      	ble.n	801fd54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801fc94:	5dd2      	ldrb	r2, [r2, r7]
 801fc96:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801fc9a:	1c62      	adds	r2, r4, #1
 801fc9c:	d45f      	bmi.n	801fd5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801fc9e:	4596      	cmp	lr, r2
 801fca0:	dd5d      	ble.n	801fd5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801fca2:	2d00      	cmp	r5, #0
 801fca4:	d05b      	beq.n	801fd5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801fca6:	f899 2001 	ldrb.w	r2, [r9, #1]
 801fcaa:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801fcae:	f118 0801 	adds.w	r8, r8, #1
 801fcb2:	d458      	bmi.n	801fd66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801fcb4:	45c2      	cmp	sl, r8
 801fcb6:	dd56      	ble.n	801fd66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801fcb8:	2e00      	cmp	r6, #0
 801fcba:	d054      	beq.n	801fd66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801fcbc:	2c00      	cmp	r4, #0
 801fcbe:	db50      	blt.n	801fd62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801fcc0:	45a6      	cmp	lr, r4
 801fcc2:	dd4e      	ble.n	801fd62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801fcc4:	f819 200e 	ldrb.w	r2, [r9, lr]
 801fcc8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801fccc:	3401      	adds	r4, #1
 801fcce:	d407      	bmi.n	801fce0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801fcd0:	45a6      	cmp	lr, r4
 801fcd2:	dd05      	ble.n	801fce0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801fcd4:	b125      	cbz	r5, 801fce0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801fcd6:	44ce      	add	lr, r9
 801fcd8:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801fcdc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801fce0:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801fce4:	fb15 f406 	smulbb	r4, r5, r6
 801fce8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fcec:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801fcf0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801fcf4:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801fcf8:	ea43 0c0c 	orr.w	ip, r3, ip
 801fcfc:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801fd00:	f1c6 0310 	rsb	r3, r6, #16
 801fd04:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801fd08:	1b5b      	subs	r3, r3, r5
 801fd0a:	ea4e 0707 	orr.w	r7, lr, r7
 801fd0e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801fd12:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801fd16:	437d      	muls	r5, r7
 801fd18:	fb03 5c0c 	mla	ip, r3, ip, r5
 801fd1c:	0403      	lsls	r3, r0, #16
 801fd1e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fd22:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801fd26:	4318      	orrs	r0, r3
 801fd28:	0413      	lsls	r3, r2, #16
 801fd2a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fd2e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fd32:	4313      	orrs	r3, r2
 801fd34:	fb04 c000 	mla	r0, r4, r0, ip
 801fd38:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801fd3c:	fb06 0003 	mla	r0, r6, r3, r0
 801fd40:	0d43      	lsrs	r3, r0, #21
 801fd42:	0940      	lsrs	r0, r0, #5
 801fd44:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fd48:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801fd4c:	4318      	orrs	r0, r3
 801fd4e:	8008      	strh	r0, [r1, #0]
 801fd50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fd54:	4684      	mov	ip, r0
 801fd56:	e7a0      	b.n	801fc9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801fd58:	4607      	mov	r7, r0
 801fd5a:	4684      	mov	ip, r0
 801fd5c:	e7a7      	b.n	801fcae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801fd5e:	4607      	mov	r7, r0
 801fd60:	e7a5      	b.n	801fcae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801fd62:	4602      	mov	r2, r0
 801fd64:	e7b2      	b.n	801fccc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801fd66:	4602      	mov	r2, r0
 801fd68:	e7ba      	b.n	801fce0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801fd6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fd6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fd6e:	b093      	sub	sp, #76	; 0x4c
 801fd70:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801fd74:	920f      	str	r2, [sp, #60]	; 0x3c
 801fd76:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801fd78:	9108      	str	r1, [sp, #32]
 801fd7a:	9306      	str	r3, [sp, #24]
 801fd7c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801fd80:	9010      	str	r0, [sp, #64]	; 0x40
 801fd82:	6850      	ldr	r0, [r2, #4]
 801fd84:	6812      	ldr	r2, [r2, #0]
 801fd86:	fb00 1303 	mla	r3, r0, r3, r1
 801fd8a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801fd8e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fd90:	681b      	ldr	r3, [r3, #0]
 801fd92:	9307      	str	r3, [sp, #28]
 801fd94:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fd96:	685f      	ldr	r7, [r3, #4]
 801fd98:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801fd9c:	3704      	adds	r7, #4
 801fd9e:	9b08      	ldr	r3, [sp, #32]
 801fda0:	2b00      	cmp	r3, #0
 801fda2:	dc03      	bgt.n	801fdac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801fda4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fda6:	2b00      	cmp	r3, #0
 801fda8:	f340 81b2 	ble.w	8020110 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801fdac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fdae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fdb2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fdb6:	1e48      	subs	r0, r1, #1
 801fdb8:	f102 3cff 	add.w	ip, r2, #4294967295
 801fdbc:	9b06      	ldr	r3, [sp, #24]
 801fdbe:	2b00      	cmp	r3, #0
 801fdc0:	f340 80a9 	ble.w	801ff16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801fdc4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801fdc8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fdcc:	d406      	bmi.n	801fddc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801fdce:	4586      	cmp	lr, r0
 801fdd0:	da04      	bge.n	801fddc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801fdd2:	2b00      	cmp	r3, #0
 801fdd4:	db02      	blt.n	801fddc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801fdd6:	4563      	cmp	r3, ip
 801fdd8:	f2c0 809e 	blt.w	801ff18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fddc:	f11e 0e01 	adds.w	lr, lr, #1
 801fde0:	f100 808f 	bmi.w	801ff02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fde4:	4571      	cmp	r1, lr
 801fde6:	f2c0 808c 	blt.w	801ff02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fdea:	3301      	adds	r3, #1
 801fdec:	f100 8089 	bmi.w	801ff02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fdf0:	429a      	cmp	r2, r3
 801fdf2:	f2c0 8086 	blt.w	801ff02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fdf6:	f8dd b018 	ldr.w	fp, [sp, #24]
 801fdfa:	46c8      	mov	r8, r9
 801fdfc:	f1bb 0f00 	cmp.w	fp, #0
 801fe00:	f340 80a6 	ble.w	801ff50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801fe04:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801fe06:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fe08:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801fe0c:	689b      	ldr	r3, [r3, #8]
 801fe0e:	1422      	asrs	r2, r4, #16
 801fe10:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801fe14:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801fe18:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801fe1c:	f100 80e3 	bmi.w	801ffe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801fe20:	f103 3aff 	add.w	sl, r3, #4294967295
 801fe24:	4552      	cmp	r2, sl
 801fe26:	f280 80de 	bge.w	801ffe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801fe2a:	f1bc 0f00 	cmp.w	ip, #0
 801fe2e:	f2c0 80da 	blt.w	801ffe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801fe32:	f10e 3aff 	add.w	sl, lr, #4294967295
 801fe36:	45d4      	cmp	ip, sl
 801fe38:	f280 80d5 	bge.w	801ffe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801fe3c:	b21b      	sxth	r3, r3
 801fe3e:	fb0c 2203 	mla	r2, ip, r3, r2
 801fe42:	9d07      	ldr	r5, [sp, #28]
 801fe44:	eb05 0a02 	add.w	sl, r5, r2
 801fe48:	5caa      	ldrb	r2, [r5, r2]
 801fe4a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801fe4e:	2800      	cmp	r0, #0
 801fe50:	f000 80c0 	beq.w	801ffd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801fe54:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801fe58:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801fe5c:	920b      	str	r2, [sp, #44]	; 0x2c
 801fe5e:	b151      	cbz	r1, 801fe76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801fe60:	eb0a 0203 	add.w	r2, sl, r3
 801fe64:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801fe68:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801fe6c:	9309      	str	r3, [sp, #36]	; 0x24
 801fe6e:	7853      	ldrb	r3, [r2, #1]
 801fe70:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801fe74:	930c      	str	r3, [sp, #48]	; 0x30
 801fe76:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fe78:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801fe7a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801fe7e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fe82:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fe86:	ea4c 0c03 	orr.w	ip, ip, r3
 801fe8a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fe8c:	041b      	lsls	r3, r3, #16
 801fe8e:	fb10 f201 	smulbb	r2, r0, r1
 801fe92:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fe96:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801fe9a:	10d2      	asrs	r2, r2, #3
 801fe9c:	432b      	orrs	r3, r5
 801fe9e:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801fea2:	4353      	muls	r3, r2
 801fea4:	fb0a 330c 	mla	r3, sl, ip, r3
 801fea8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801feac:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801feb0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801feb4:	ea4c 0e0e 	orr.w	lr, ip, lr
 801feb8:	f1c1 0c10 	rsb	ip, r1, #16
 801febc:	ebac 0c00 	sub.w	ip, ip, r0
 801fec0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801fec4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801fec8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801feca:	0418      	lsls	r0, r3, #16
 801fecc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801fed0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fed4:	4318      	orrs	r0, r3
 801fed6:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801feda:	fb02 c200 	mla	r2, r2, r0, ip
 801fede:	0d53      	lsrs	r3, r2, #21
 801fee0:	0952      	lsrs	r2, r2, #5
 801fee2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fee6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801feea:	431a      	orrs	r2, r3
 801feec:	f8a8 2000 	strh.w	r2, [r8]
 801fef0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fef2:	441c      	add	r4, r3
 801fef4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fef6:	f108 0802 	add.w	r8, r8, #2
 801fefa:	441e      	add	r6, r3
 801fefc:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ff00:	e77c      	b.n	801fdfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ff02:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ff04:	441c      	add	r4, r3
 801ff06:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ff08:	441e      	add	r6, r3
 801ff0a:	9b06      	ldr	r3, [sp, #24]
 801ff0c:	3b01      	subs	r3, #1
 801ff0e:	9306      	str	r3, [sp, #24]
 801ff10:	f109 0902 	add.w	r9, r9, #2
 801ff14:	e752      	b.n	801fdbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ff16:	d020      	beq.n	801ff5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ff18:	9b06      	ldr	r3, [sp, #24]
 801ff1a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ff1c:	3b01      	subs	r3, #1
 801ff1e:	fb00 4003 	mla	r0, r0, r3, r4
 801ff22:	1400      	asrs	r0, r0, #16
 801ff24:	f53f af67 	bmi.w	801fdf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ff28:	3901      	subs	r1, #1
 801ff2a:	4288      	cmp	r0, r1
 801ff2c:	f6bf af63 	bge.w	801fdf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ff30:	9920      	ldr	r1, [sp, #128]	; 0x80
 801ff32:	fb01 6303 	mla	r3, r1, r3, r6
 801ff36:	141b      	asrs	r3, r3, #16
 801ff38:	f53f af5d 	bmi.w	801fdf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ff3c:	3a01      	subs	r2, #1
 801ff3e:	4293      	cmp	r3, r2
 801ff40:	f6bf af59 	bge.w	801fdf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ff44:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801ff48:	46ca      	mov	sl, r9
 801ff4a:	f1b8 0f00 	cmp.w	r8, #0
 801ff4e:	dc67      	bgt.n	8020020 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ff50:	9b06      	ldr	r3, [sp, #24]
 801ff52:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ff56:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ff5a:	9b08      	ldr	r3, [sp, #32]
 801ff5c:	2b00      	cmp	r3, #0
 801ff5e:	f340 80d7 	ble.w	8020110 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ff62:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ff66:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ff6a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ff6e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ff70:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ff74:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ff78:	eeb0 6a62 	vmov.f32	s12, s5
 801ff7c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ff80:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ff84:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ff88:	ee16 4a10 	vmov	r4, s12
 801ff8c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ff90:	eeb0 6a43 	vmov.f32	s12, s6
 801ff94:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ff98:	ee12 2a90 	vmov	r2, s5
 801ff9c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ffa0:	fb92 f3f3 	sdiv	r3, r2, r3
 801ffa4:	ee13 2a10 	vmov	r2, s6
 801ffa8:	931f      	str	r3, [sp, #124]	; 0x7c
 801ffaa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ffac:	fb92 f3f3 	sdiv	r3, r2, r3
 801ffb0:	9320      	str	r3, [sp, #128]	; 0x80
 801ffb2:	9b08      	ldr	r3, [sp, #32]
 801ffb4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ffb6:	3b01      	subs	r3, #1
 801ffb8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ffbc:	9308      	str	r3, [sp, #32]
 801ffbe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ffc0:	bf08      	it	eq
 801ffc2:	4613      	moveq	r3, r2
 801ffc4:	ee16 6a10 	vmov	r6, s12
 801ffc8:	9306      	str	r3, [sp, #24]
 801ffca:	eeb0 3a67 	vmov.f32	s6, s15
 801ffce:	eef0 2a47 	vmov.f32	s5, s14
 801ffd2:	e6e4      	b.n	801fd9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801ffd4:	2900      	cmp	r1, #0
 801ffd6:	f43f af4e 	beq.w	801fe76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ffda:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ffde:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ffe2:	9309      	str	r3, [sp, #36]	; 0x24
 801ffe4:	e747      	b.n	801fe76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ffe6:	f112 0a01 	adds.w	sl, r2, #1
 801ffea:	d481      	bmi.n	801fef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ffec:	4553      	cmp	r3, sl
 801ffee:	f6ff af7f 	blt.w	801fef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801fff2:	f11c 0a01 	adds.w	sl, ip, #1
 801fff6:	f53f af7b 	bmi.w	801fef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801fffa:	45d6      	cmp	lr, sl
 801fffc:	f6ff af78 	blt.w	801fef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020000:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8020004:	b21b      	sxth	r3, r3
 8020006:	fa0f f28e 	sxth.w	r2, lr
 802000a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 802000e:	9201      	str	r2, [sp, #4]
 8020010:	9300      	str	r3, [sp, #0]
 8020012:	9a07      	ldr	r2, [sp, #28]
 8020014:	9810      	ldr	r0, [sp, #64]	; 0x40
 8020016:	463b      	mov	r3, r7
 8020018:	4641      	mov	r1, r8
 802001a:	f7ff fe21 	bl	801fc60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 802001e:	e767      	b.n	801fef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020020:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020022:	9d07      	ldr	r5, [sp, #28]
 8020024:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020028:	1422      	asrs	r2, r4, #16
 802002a:	1431      	asrs	r1, r6, #16
 802002c:	fb03 2101 	mla	r1, r3, r1, r2
 8020030:	9a07      	ldr	r2, [sp, #28]
 8020032:	440a      	add	r2, r1
 8020034:	5c69      	ldrb	r1, [r5, r1]
 8020036:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 802003a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802003e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8020042:	f1be 0f00 	cmp.w	lr, #0
 8020046:	d05c      	beq.n	8020102 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8020048:	f892 c001 	ldrb.w	ip, [r2, #1]
 802004c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8020050:	950d      	str	r5, [sp, #52]	; 0x34
 8020052:	b150      	cbz	r0, 802006a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020054:	eb02 0c03 	add.w	ip, r2, r3
 8020058:	5cd3      	ldrb	r3, [r2, r3]
 802005a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802005e:	930a      	str	r3, [sp, #40]	; 0x28
 8020060:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8020064:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020068:	930e      	str	r3, [sp, #56]	; 0x38
 802006a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802006c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802006e:	fb1e f200 	smulbb	r2, lr, r0
 8020072:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020076:	10d2      	asrs	r2, r2, #3
 8020078:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802007c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020080:	ea4c 0c03 	orr.w	ip, ip, r3
 8020084:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8020088:	9311      	str	r3, [sp, #68]	; 0x44
 802008a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802008c:	041b      	lsls	r3, r3, #16
 802008e:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8020092:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020096:	ea43 030b 	orr.w	r3, r3, fp
 802009a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802009c:	4353      	muls	r3, r2
 802009e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80200a2:	fb05 3c0c 	mla	ip, r5, ip, r3
 80200a6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80200aa:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80200ae:	ea43 0b01 	orr.w	fp, r3, r1
 80200b2:	f1c0 0110 	rsb	r1, r0, #16
 80200b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80200b8:	eba1 0e0e 	sub.w	lr, r1, lr
 80200bc:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80200c0:	fb0e cc0b 	mla	ip, lr, fp, ip
 80200c4:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80200c8:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 80200cc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80200d0:	ea4b 0e0e 	orr.w	lr, fp, lr
 80200d4:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80200d8:	fb02 cc0e 	mla	ip, r2, lr, ip
 80200dc:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80200e0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80200e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80200e8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80200ec:	ea43 0c0c 	orr.w	ip, r3, ip
 80200f0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80200f2:	f82a cb02 	strh.w	ip, [sl], #2
 80200f6:	441c      	add	r4, r3
 80200f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80200fa:	f108 38ff 	add.w	r8, r8, #4294967295
 80200fe:	441e      	add	r6, r3
 8020100:	e723      	b.n	801ff4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8020102:	2800      	cmp	r0, #0
 8020104:	d0b1      	beq.n	802006a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020106:	5cd3      	ldrb	r3, [r2, r3]
 8020108:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802010c:	930a      	str	r3, [sp, #40]	; 0x28
 802010e:	e7ac      	b.n	802006a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020110:	b013      	add	sp, #76	; 0x4c
 8020112:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020116 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8020116:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802011a:	880d      	ldrh	r5, [r1, #0]
 802011c:	b087      	sub	sp, #28
 802011e:	10ef      	asrs	r7, r5, #3
 8020120:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8020124:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020128:	00ed      	lsls	r5, r5, #3
 802012a:	9701      	str	r7, [sp, #4]
 802012c:	b2ed      	uxtb	r5, r5
 802012e:	9502      	str	r5, [sp, #8]
 8020130:	9d01      	ldr	r5, [sp, #4]
 8020132:	9103      	str	r1, [sp, #12]
 8020134:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8020138:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 802013c:	9902      	ldr	r1, [sp, #8]
 802013e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8020142:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8020146:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 802014a:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 802014e:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8020152:	022d      	lsls	r5, r5, #8
 8020154:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8020158:	fb06 0709 	mla	r7, r6, r9, r0
 802015c:	430d      	orrs	r5, r1
 802015e:	2e00      	cmp	r6, #0
 8020160:	eb02 0c07 	add.w	ip, r2, r7
 8020164:	9505      	str	r5, [sp, #20]
 8020166:	f2c0 80b6 	blt.w	80202d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 802016a:	45b3      	cmp	fp, r6
 802016c:	f340 80b3 	ble.w	80202d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8020170:	2800      	cmp	r0, #0
 8020172:	f2c0 80ae 	blt.w	80202d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8020176:	4581      	cmp	r9, r0
 8020178:	f340 80ab 	ble.w	80202d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 802017c:	5dd7      	ldrb	r7, [r2, r7]
 802017e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020182:	441f      	add	r7, r3
 8020184:	1c42      	adds	r2, r0, #1
 8020186:	f100 80a9 	bmi.w	80202dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802018a:	4591      	cmp	r9, r2
 802018c:	f340 80a6 	ble.w	80202dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020190:	2c00      	cmp	r4, #0
 8020192:	f000 80a3 	beq.w	80202dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020196:	f89c 5001 	ldrb.w	r5, [ip, #1]
 802019a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802019e:	441d      	add	r5, r3
 80201a0:	3601      	adds	r6, #1
 80201a2:	f100 809f 	bmi.w	80202e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80201a6:	45b3      	cmp	fp, r6
 80201a8:	f340 809c 	ble.w	80202e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80201ac:	f1be 0f00 	cmp.w	lr, #0
 80201b0:	f000 8098 	beq.w	80202e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80201b4:	2800      	cmp	r0, #0
 80201b6:	f2c0 8093 	blt.w	80202e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80201ba:	4581      	cmp	r9, r0
 80201bc:	f340 8090 	ble.w	80202e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80201c0:	f81c 6009 	ldrb.w	r6, [ip, r9]
 80201c4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80201c8:	441e      	add	r6, r3
 80201ca:	3001      	adds	r0, #1
 80201cc:	f100 808d 	bmi.w	80202ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80201d0:	4581      	cmp	r9, r0
 80201d2:	f340 808a 	ble.w	80202ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80201d6:	2c00      	cmp	r4, #0
 80201d8:	f000 8087 	beq.w	80202ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80201dc:	44e1      	add	r9, ip
 80201de:	f899 2001 	ldrb.w	r2, [r9, #1]
 80201e2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80201e6:	4413      	add	r3, r2
 80201e8:	b2a4      	uxth	r4, r4
 80201ea:	fa1f fe8e 	uxth.w	lr, lr
 80201ee:	fb04 fb0e 	mul.w	fp, r4, lr
 80201f2:	0124      	lsls	r4, r4, #4
 80201f4:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 80201f8:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 80201fc:	eba4 040b 	sub.w	r4, r4, fp
 8020200:	fa1f f08e 	uxth.w	r0, lr
 8020204:	b2a2      	uxth	r2, r4
 8020206:	78ac      	ldrb	r4, [r5, #2]
 8020208:	f897 c002 	ldrb.w	ip, [r7, #2]
 802020c:	9901      	ldr	r1, [sp, #4]
 802020e:	eba9 0900 	sub.w	r9, r9, r0
 8020212:	fa1f f989 	uxth.w	r9, r9
 8020216:	4354      	muls	r4, r2
 8020218:	fb09 440c 	mla	r4, r9, ip, r4
 802021c:	f896 c002 	ldrb.w	ip, [r6, #2]
 8020220:	fb00 440c 	mla	r4, r0, ip, r4
 8020224:	f893 c002 	ldrb.w	ip, [r3, #2]
 8020228:	fa1f fe88 	uxth.w	lr, r8
 802022c:	ea6f 0808 	mvn.w	r8, r8
 8020230:	fa5f f888 	uxtb.w	r8, r8
 8020234:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8020238:	fb1a fa08 	smulbb	sl, sl, r8
 802023c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8020240:	fb0c ac0e 	mla	ip, ip, lr, sl
 8020244:	f895 a001 	ldrb.w	sl, [r5, #1]
 8020248:	787c      	ldrb	r4, [r7, #1]
 802024a:	782d      	ldrb	r5, [r5, #0]
 802024c:	783f      	ldrb	r7, [r7, #0]
 802024e:	fb02 fa0a 	mul.w	sl, r2, sl
 8020252:	fb09 aa04 	mla	sl, r9, r4, sl
 8020256:	7874      	ldrb	r4, [r6, #1]
 8020258:	436a      	muls	r2, r5
 802025a:	7835      	ldrb	r5, [r6, #0]
 802025c:	fb00 aa04 	mla	sl, r0, r4, sl
 8020260:	fb09 2207 	mla	r2, r9, r7, r2
 8020264:	785c      	ldrb	r4, [r3, #1]
 8020266:	781b      	ldrb	r3, [r3, #0]
 8020268:	fb00 2005 	mla	r0, r0, r5, r2
 802026c:	fb0b a404 	mla	r4, fp, r4, sl
 8020270:	fb0b 0b03 	mla	fp, fp, r3, r0
 8020274:	9b02      	ldr	r3, [sp, #8]
 8020276:	fb11 fa08 	smulbb	sl, r1, r8
 802027a:	fa1f fc8c 	uxth.w	ip, ip
 802027e:	fb13 f808 	smulbb	r8, r3, r8
 8020282:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8020286:	f3c4 2407 	ubfx	r4, r4, #8, #8
 802028a:	fb04 a40e 	mla	r4, r4, lr, sl
 802028e:	f10c 0301 	add.w	r3, ip, #1
 8020292:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8020296:	fa1f fe8e 	uxth.w	lr, lr
 802029a:	b2a4      	uxth	r4, r4
 802029c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80202a0:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 80202a4:	f104 0a01 	add.w	sl, r4, #1
 80202a8:	f10e 0c01 	add.w	ip, lr, #1
 80202ac:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80202b0:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80202b4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80202b8:	0964      	lsrs	r4, r4, #5
 80202ba:	ea4c 0c03 	orr.w	ip, ip, r3
 80202be:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80202c2:	9b03      	ldr	r3, [sp, #12]
 80202c4:	ea4c 0c04 	orr.w	ip, ip, r4
 80202c8:	f8a3 c000 	strh.w	ip, [r3]
 80202cc:	b007      	add	sp, #28
 80202ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80202d2:	af05      	add	r7, sp, #20
 80202d4:	e756      	b.n	8020184 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80202d6:	ad05      	add	r5, sp, #20
 80202d8:	462f      	mov	r7, r5
 80202da:	e761      	b.n	80201a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80202dc:	ad05      	add	r5, sp, #20
 80202de:	e75f      	b.n	80201a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80202e0:	ae05      	add	r6, sp, #20
 80202e2:	e772      	b.n	80201ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 80202e4:	ab05      	add	r3, sp, #20
 80202e6:	461e      	mov	r6, r3
 80202e8:	e77e      	b.n	80201e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 80202ea:	ab05      	add	r3, sp, #20
 80202ec:	e77c      	b.n	80201e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

080202ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80202ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80202f2:	b095      	sub	sp, #84	; 0x54
 80202f4:	9212      	str	r2, [sp, #72]	; 0x48
 80202f6:	9309      	str	r3, [sp, #36]	; 0x24
 80202f8:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80202fa:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 80202fe:	930f      	str	r3, [sp, #60]	; 0x3c
 8020300:	910e      	str	r1, [sp, #56]	; 0x38
 8020302:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8020306:	9013      	str	r0, [sp, #76]	; 0x4c
 8020308:	6850      	ldr	r0, [r2, #4]
 802030a:	6812      	ldr	r2, [r2, #0]
 802030c:	fb00 1303 	mla	r3, r0, r3, r1
 8020310:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020314:	930a      	str	r3, [sp, #40]	; 0x28
 8020316:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020318:	681b      	ldr	r3, [r3, #0]
 802031a:	930d      	str	r3, [sp, #52]	; 0x34
 802031c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802031e:	685c      	ldr	r4, [r3, #4]
 8020320:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020322:	43db      	mvns	r3, r3
 8020324:	b2db      	uxtb	r3, r3
 8020326:	3404      	adds	r4, #4
 8020328:	930b      	str	r3, [sp, #44]	; 0x2c
 802032a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802032c:	2b00      	cmp	r3, #0
 802032e:	dc03      	bgt.n	8020338 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020330:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020332:	2b00      	cmp	r3, #0
 8020334:	f340 8255 	ble.w	80207e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8020338:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802033a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802033e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020342:	1e48      	subs	r0, r1, #1
 8020344:	1e55      	subs	r5, r2, #1
 8020346:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020348:	2b00      	cmp	r3, #0
 802034a:	f340 80f9 	ble.w	8020540 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802034e:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8020350:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020352:	1436      	asrs	r6, r6, #16
 8020354:	ea4f 4323 	mov.w	r3, r3, asr #16
 8020358:	d406      	bmi.n	8020368 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802035a:	4286      	cmp	r6, r0
 802035c:	da04      	bge.n	8020368 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802035e:	2b00      	cmp	r3, #0
 8020360:	db02      	blt.n	8020368 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020362:	42ab      	cmp	r3, r5
 8020364:	f2c0 80ed 	blt.w	8020542 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8020368:	3601      	adds	r6, #1
 802036a:	f100 80da 	bmi.w	8020522 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802036e:	42b1      	cmp	r1, r6
 8020370:	f2c0 80d7 	blt.w	8020522 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020374:	3301      	adds	r3, #1
 8020376:	f100 80d4 	bmi.w	8020522 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802037a:	429a      	cmp	r2, r3
 802037c:	f2c0 80d1 	blt.w	8020522 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020380:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020382:	9311      	str	r3, [sp, #68]	; 0x44
 8020384:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020386:	930c      	str	r3, [sp, #48]	; 0x30
 8020388:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802038a:	2b00      	cmp	r3, #0
 802038c:	f340 80fa 	ble.w	8020584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8020390:	9826      	ldr	r0, [sp, #152]	; 0x98
 8020392:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020394:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020396:	68c6      	ldr	r6, [r0, #12]
 8020398:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802039a:	141d      	asrs	r5, r3, #16
 802039c:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80203a0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80203a2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80203a4:	1400      	asrs	r0, r0, #16
 80203a6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80203aa:	6892      	ldr	r2, [r2, #8]
 80203ac:	f100 813e 	bmi.w	802062c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80203b0:	1e57      	subs	r7, r2, #1
 80203b2:	42b8      	cmp	r0, r7
 80203b4:	f280 813a 	bge.w	802062c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80203b8:	2d00      	cmp	r5, #0
 80203ba:	f2c0 8137 	blt.w	802062c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80203be:	1e77      	subs	r7, r6, #1
 80203c0:	42bd      	cmp	r5, r7
 80203c2:	f280 8133 	bge.w	802062c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80203c6:	b212      	sxth	r2, r2
 80203c8:	fb05 0002 	mla	r0, r5, r2, r0
 80203cc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80203ce:	f815 a000 	ldrb.w	sl, [r5, r0]
 80203d2:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80203d6:	182e      	adds	r6, r5, r0
 80203d8:	eb04 050a 	add.w	r5, r4, sl
 80203dc:	2b00      	cmp	r3, #0
 80203de:	f000 8117 	beq.w	8020610 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80203e2:	f896 c001 	ldrb.w	ip, [r6, #1]
 80203e6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80203ea:	44a4      	add	ip, r4
 80203ec:	2900      	cmp	r1, #0
 80203ee:	f000 8117 	beq.w	8020620 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 80203f2:	18b0      	adds	r0, r6, r2
 80203f4:	5cb2      	ldrb	r2, [r6, r2]
 80203f6:	7840      	ldrb	r0, [r0, #1]
 80203f8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80203fc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020400:	4422      	add	r2, r4
 8020402:	4420      	add	r0, r4
 8020404:	b29b      	uxth	r3, r3
 8020406:	b289      	uxth	r1, r1
 8020408:	fb03 f901 	mul.w	r9, r3, r1
 802040c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020410:	011b      	lsls	r3, r3, #4
 8020412:	b289      	uxth	r1, r1
 8020414:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8020418:	f895 b002 	ldrb.w	fp, [r5, #2]
 802041c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802041e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8020422:	f8b6 e000 	ldrh.w	lr, [r6]
 8020426:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 802042a:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 802042e:	eba3 0309 	sub.w	r3, r3, r9
 8020432:	b29b      	uxth	r3, r3
 8020434:	eba8 0801 	sub.w	r8, r8, r1
 8020438:	fa1f f888 	uxth.w	r8, r8
 802043c:	435f      	muls	r7, r3
 802043e:	fb08 770b 	mla	r7, r8, fp, r7
 8020442:	f892 b002 	ldrb.w	fp, [r2, #2]
 8020446:	9310      	str	r3, [sp, #64]	; 0x40
 8020448:	fb01 770b 	mla	r7, r1, fp, r7
 802044c:	f890 b002 	ldrb.w	fp, [r0, #2]
 8020450:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020452:	fb09 770b 	mla	r7, r9, fp, r7
 8020456:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 802045a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802045e:	fb1b fb03 	smulbb	fp, fp, r3
 8020462:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8020466:	fb07 b706 	mla	r7, r7, r6, fp
 802046a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802046c:	f895 b001 	ldrb.w	fp, [r5, #1]
 8020470:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8020474:	f89c c000 	ldrb.w	ip, [ip]
 8020478:	435d      	muls	r5, r3
 802047a:	fb08 550b 	mla	r5, r8, fp, r5
 802047e:	f892 b001 	ldrb.w	fp, [r2, #1]
 8020482:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020484:	fb01 550b 	mla	r5, r1, fp, r5
 8020488:	f890 b001 	ldrb.w	fp, [r0, #1]
 802048c:	fb09 550b 	mla	r5, r9, fp, r5
 8020490:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8020494:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8020498:	fb1b fb03 	smulbb	fp, fp, r3
 802049c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802049e:	fb03 f30c 	mul.w	r3, r3, ip
 80204a2:	f892 c000 	ldrb.w	ip, [r2]
 80204a6:	fb08 330a 	mla	r3, r8, sl, r3
 80204aa:	fb01 330c 	mla	r3, r1, ip, r3
 80204ae:	f890 c000 	ldrb.w	ip, [r0]
 80204b2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80204b6:	fb09 3c0c 	mla	ip, r9, ip, r3
 80204ba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80204bc:	fa5f fe8e 	uxtb.w	lr, lr
 80204c0:	b2bf      	uxth	r7, r7
 80204c2:	fb1e fe03 	smulbb	lr, lr, r3
 80204c6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80204ca:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80204ce:	fb05 b506 	mla	r5, r5, r6, fp
 80204d2:	1c7b      	adds	r3, r7, #1
 80204d4:	fb0c e606 	mla	r6, ip, r6, lr
 80204d8:	b2ad      	uxth	r5, r5
 80204da:	b2b6      	uxth	r6, r6
 80204dc:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80204e0:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 80204e4:	f105 0b01 	add.w	fp, r5, #1
 80204e8:	1c77      	adds	r7, r6, #1
 80204ea:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80204ee:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80204f2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80204f6:	096d      	lsrs	r5, r5, #5
 80204f8:	431f      	orrs	r7, r3
 80204fa:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80204fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020500:	433d      	orrs	r5, r7
 8020502:	801d      	strh	r5, [r3, #0]
 8020504:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020506:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020508:	3302      	adds	r3, #2
 802050a:	930c      	str	r3, [sp, #48]	; 0x30
 802050c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802050e:	4413      	add	r3, r2
 8020510:	931f      	str	r3, [sp, #124]	; 0x7c
 8020512:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020514:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020516:	4413      	add	r3, r2
 8020518:	9320      	str	r3, [sp, #128]	; 0x80
 802051a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802051c:	3b01      	subs	r3, #1
 802051e:	9311      	str	r3, [sp, #68]	; 0x44
 8020520:	e732      	b.n	8020388 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020522:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020524:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8020526:	4433      	add	r3, r6
 8020528:	931f      	str	r3, [sp, #124]	; 0x7c
 802052a:	9e22      	ldr	r6, [sp, #136]	; 0x88
 802052c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802052e:	4433      	add	r3, r6
 8020530:	9320      	str	r3, [sp, #128]	; 0x80
 8020532:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020534:	3b01      	subs	r3, #1
 8020536:	9309      	str	r3, [sp, #36]	; 0x24
 8020538:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802053a:	3302      	adds	r3, #2
 802053c:	930a      	str	r3, [sp, #40]	; 0x28
 802053e:	e702      	b.n	8020346 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020540:	d027      	beq.n	8020592 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8020542:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020544:	9821      	ldr	r0, [sp, #132]	; 0x84
 8020546:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8020548:	3b01      	subs	r3, #1
 802054a:	fb00 5003 	mla	r0, r0, r3, r5
 802054e:	1400      	asrs	r0, r0, #16
 8020550:	f53f af16 	bmi.w	8020380 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020554:	3901      	subs	r1, #1
 8020556:	4288      	cmp	r0, r1
 8020558:	f6bf af12 	bge.w	8020380 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802055c:	9922      	ldr	r1, [sp, #136]	; 0x88
 802055e:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020560:	fb01 0303 	mla	r3, r1, r3, r0
 8020564:	141b      	asrs	r3, r3, #16
 8020566:	f53f af0b 	bmi.w	8020380 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802056a:	3a01      	subs	r2, #1
 802056c:	4293      	cmp	r3, r2
 802056e:	f6bf af07 	bge.w	8020380 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020572:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020574:	9311      	str	r3, [sp, #68]	; 0x44
 8020576:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 802057a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802057c:	930c      	str	r3, [sp, #48]	; 0x30
 802057e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020580:	2b00      	cmp	r3, #0
 8020582:	dc70      	bgt.n	8020666 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8020584:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020586:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020588:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802058c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020590:	930a      	str	r3, [sp, #40]	; 0x28
 8020592:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020594:	2b00      	cmp	r3, #0
 8020596:	f340 8124 	ble.w	80207e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 802059a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802059e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80205a2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80205a6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80205a8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80205ac:	ee31 1a05 	vadd.f32	s2, s2, s10
 80205b0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80205b4:	eef0 6a62 	vmov.f32	s13, s5
 80205b8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80205bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80205c0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80205c4:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80205c8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80205cc:	eef0 6a43 	vmov.f32	s13, s6
 80205d0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80205d4:	ee12 2a90 	vmov	r2, s5
 80205d8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80205dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80205e0:	ee13 2a10 	vmov	r2, s6
 80205e4:	9321      	str	r3, [sp, #132]	; 0x84
 80205e6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80205e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80205ec:	9322      	str	r3, [sp, #136]	; 0x88
 80205ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80205f0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80205f2:	3b01      	subs	r3, #1
 80205f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80205f8:	930e      	str	r3, [sp, #56]	; 0x38
 80205fa:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80205fc:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8020600:	bf08      	it	eq
 8020602:	4613      	moveq	r3, r2
 8020604:	9309      	str	r3, [sp, #36]	; 0x24
 8020606:	eeb0 3a67 	vmov.f32	s6, s15
 802060a:	eef0 2a47 	vmov.f32	s5, s14
 802060e:	e68c      	b.n	802032a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020610:	b149      	cbz	r1, 8020626 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8020612:	5cb2      	ldrb	r2, [r6, r2]
 8020614:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020618:	4422      	add	r2, r4
 802061a:	4628      	mov	r0, r5
 802061c:	46ac      	mov	ip, r5
 802061e:	e6f1      	b.n	8020404 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020620:	4628      	mov	r0, r5
 8020622:	462a      	mov	r2, r5
 8020624:	e6ee      	b.n	8020404 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020626:	4628      	mov	r0, r5
 8020628:	462a      	mov	r2, r5
 802062a:	e7f7      	b.n	802061c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802062c:	1c47      	adds	r7, r0, #1
 802062e:	f53f af69 	bmi.w	8020504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020632:	42ba      	cmp	r2, r7
 8020634:	f6ff af66 	blt.w	8020504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020638:	1c6f      	adds	r7, r5, #1
 802063a:	f53f af63 	bmi.w	8020504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802063e:	42be      	cmp	r6, r7
 8020640:	f6ff af60 	blt.w	8020504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020644:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8020646:	9002      	str	r0, [sp, #8]
 8020648:	b236      	sxth	r6, r6
 802064a:	b212      	sxth	r2, r2
 802064c:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8020650:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8020654:	9200      	str	r2, [sp, #0]
 8020656:	9601      	str	r6, [sp, #4]
 8020658:	4623      	mov	r3, r4
 802065a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 802065e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8020660:	f7ff fd59 	bl	8020116 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8020664:	e74e      	b.n	8020504 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020666:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020668:	9820      	ldr	r0, [sp, #128]	; 0x80
 802066a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 802066c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802066e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8020672:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8020674:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020678:	142d      	asrs	r5, r5, #16
 802067a:	1400      	asrs	r0, r0, #16
 802067c:	fb02 5000 	mla	r0, r2, r0, r5
 8020680:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8020682:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020686:	f3c3 3303 	ubfx	r3, r3, #12, #4
 802068a:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802068e:	182e      	adds	r6, r5, r0
 8020690:	eb04 0509 	add.w	r5, r4, r9
 8020694:	2b00      	cmp	r3, #0
 8020696:	f000 8096 	beq.w	80207c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 802069a:	7877      	ldrb	r7, [r6, #1]
 802069c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80206a0:	4427      	add	r7, r4
 80206a2:	2900      	cmp	r1, #0
 80206a4:	f000 8097 	beq.w	80207d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 80206a8:	18b0      	adds	r0, r6, r2
 80206aa:	5cb2      	ldrb	r2, [r6, r2]
 80206ac:	7840      	ldrb	r0, [r0, #1]
 80206ae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80206b2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80206b6:	4422      	add	r2, r4
 80206b8:	4420      	add	r0, r4
 80206ba:	b29b      	uxth	r3, r3
 80206bc:	b289      	uxth	r1, r1
 80206be:	fb03 f801 	mul.w	r8, r3, r1
 80206c2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80206c4:	f895 b002 	ldrb.w	fp, [r5, #2]
 80206c8:	f8b6 c000 	ldrh.w	ip, [r6]
 80206cc:	78be      	ldrb	r6, [r7, #2]
 80206ce:	f814 9009 	ldrb.w	r9, [r4, r9]
 80206d2:	011b      	lsls	r3, r3, #4
 80206d4:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80206d8:	b289      	uxth	r1, r1
 80206da:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80206de:	eba3 0308 	sub.w	r3, r3, r8
 80206e2:	b29b      	uxth	r3, r3
 80206e4:	ebae 0e01 	sub.w	lr, lr, r1
 80206e8:	fa1f fe8e 	uxth.w	lr, lr
 80206ec:	435e      	muls	r6, r3
 80206ee:	fb0e 660b 	mla	r6, lr, fp, r6
 80206f2:	f892 b002 	ldrb.w	fp, [r2, #2]
 80206f6:	9310      	str	r3, [sp, #64]	; 0x40
 80206f8:	fb01 660b 	mla	r6, r1, fp, r6
 80206fc:	f890 b002 	ldrb.w	fp, [r0, #2]
 8020700:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020702:	fb08 660b 	mla	r6, r8, fp, r6
 8020706:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 802070a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802070e:	fb1b fb03 	smulbb	fp, fp, r3
 8020712:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020716:	fb06 b60a 	mla	r6, r6, sl, fp
 802071a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802071c:	f895 b001 	ldrb.w	fp, [r5, #1]
 8020720:	787d      	ldrb	r5, [r7, #1]
 8020722:	783f      	ldrb	r7, [r7, #0]
 8020724:	435d      	muls	r5, r3
 8020726:	fb0e 550b 	mla	r5, lr, fp, r5
 802072a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802072e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020730:	fb01 550b 	mla	r5, r1, fp, r5
 8020734:	f890 b001 	ldrb.w	fp, [r0, #1]
 8020738:	fb08 550b 	mla	r5, r8, fp, r5
 802073c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8020740:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8020744:	fb1b fb03 	smulbb	fp, fp, r3
 8020748:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802074a:	437b      	muls	r3, r7
 802074c:	7817      	ldrb	r7, [r2, #0]
 802074e:	fb0e 3309 	mla	r3, lr, r9, r3
 8020752:	fb01 3307 	mla	r3, r1, r7, r3
 8020756:	7807      	ldrb	r7, [r0, #0]
 8020758:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802075c:	fb08 3707 	mla	r7, r8, r7, r3
 8020760:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020762:	fa5f fc8c 	uxtb.w	ip, ip
 8020766:	fb1c fc03 	smulbb	ip, ip, r3
 802076a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802076e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8020772:	fb05 b50a 	mla	r5, r5, sl, fp
 8020776:	fb07 c70a 	mla	r7, r7, sl, ip
 802077a:	b2b6      	uxth	r6, r6
 802077c:	b2ad      	uxth	r5, r5
 802077e:	b2bf      	uxth	r7, r7
 8020780:	1c73      	adds	r3, r6, #1
 8020782:	1c7a      	adds	r2, r7, #1
 8020784:	f105 0b01 	add.w	fp, r5, #1
 8020788:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 802078c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8020790:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8020794:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020798:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 802079c:	096d      	lsrs	r5, r5, #5
 802079e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80207a0:	4316      	orrs	r6, r2
 80207a2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80207a6:	432e      	orrs	r6, r5
 80207a8:	f823 6b02 	strh.w	r6, [r3], #2
 80207ac:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80207ae:	930c      	str	r3, [sp, #48]	; 0x30
 80207b0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80207b2:	4413      	add	r3, r2
 80207b4:	931f      	str	r3, [sp, #124]	; 0x7c
 80207b6:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80207b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80207ba:	4413      	add	r3, r2
 80207bc:	9320      	str	r3, [sp, #128]	; 0x80
 80207be:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80207c0:	3b01      	subs	r3, #1
 80207c2:	9311      	str	r3, [sp, #68]	; 0x44
 80207c4:	e6db      	b.n	802057e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80207c6:	b149      	cbz	r1, 80207dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80207c8:	5cb2      	ldrb	r2, [r6, r2]
 80207ca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80207ce:	4422      	add	r2, r4
 80207d0:	4628      	mov	r0, r5
 80207d2:	462f      	mov	r7, r5
 80207d4:	e771      	b.n	80206ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80207d6:	4628      	mov	r0, r5
 80207d8:	462a      	mov	r2, r5
 80207da:	e76e      	b.n	80206ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80207dc:	4628      	mov	r0, r5
 80207de:	462a      	mov	r2, r5
 80207e0:	e7f7      	b.n	80207d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80207e2:	b015      	add	sp, #84	; 0x54
 80207e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080207e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80207e8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80207ec:	880f      	ldrh	r7, [r1, #0]
 80207ee:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 80207f2:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80207f6:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 80207fa:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80207fe:	023c      	lsls	r4, r7, #8
 8020800:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8020804:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8020808:	017c      	lsls	r4, r7, #5
 802080a:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 802080e:	00ff      	lsls	r7, r7, #3
 8020810:	ea4b 0404 	orr.w	r4, fp, r4
 8020814:	b2ff      	uxtb	r7, r7
 8020816:	fb05 ca0e 	mla	sl, r5, lr, ip
 802081a:	4327      	orrs	r7, r4
 802081c:	2d00      	cmp	r5, #0
 802081e:	eb02 080a 	add.w	r8, r2, sl
 8020822:	9701      	str	r7, [sp, #4]
 8020824:	db7e      	blt.n	8020924 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8020826:	45a9      	cmp	r9, r5
 8020828:	dd7c      	ble.n	8020924 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 802082a:	f1bc 0f00 	cmp.w	ip, #0
 802082e:	db77      	blt.n	8020920 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020830:	45e6      	cmp	lr, ip
 8020832:	dd75      	ble.n	8020920 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020834:	f812 700a 	ldrb.w	r7, [r2, sl]
 8020838:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802083c:	441f      	add	r7, r3
 802083e:	f11c 0201 	adds.w	r2, ip, #1
 8020842:	d472      	bmi.n	802092a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020844:	4596      	cmp	lr, r2
 8020846:	dd70      	ble.n	802092a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8020848:	2800      	cmp	r0, #0
 802084a:	d06e      	beq.n	802092a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 802084c:	f898 4001 	ldrb.w	r4, [r8, #1]
 8020850:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8020854:	441c      	add	r4, r3
 8020856:	3501      	adds	r5, #1
 8020858:	d46b      	bmi.n	8020932 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802085a:	45a9      	cmp	r9, r5
 802085c:	dd69      	ble.n	8020932 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802085e:	2e00      	cmp	r6, #0
 8020860:	d067      	beq.n	8020932 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8020862:	f1bc 0f00 	cmp.w	ip, #0
 8020866:	db62      	blt.n	802092e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8020868:	45e6      	cmp	lr, ip
 802086a:	dd60      	ble.n	802092e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 802086c:	f818 500e 	ldrb.w	r5, [r8, lr]
 8020870:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020874:	441d      	add	r5, r3
 8020876:	f11c 0201 	adds.w	r2, ip, #1
 802087a:	d45d      	bmi.n	8020938 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 802087c:	4596      	cmp	lr, r2
 802087e:	dd5b      	ble.n	8020938 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020880:	2800      	cmp	r0, #0
 8020882:	d059      	beq.n	8020938 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8020884:	44c6      	add	lr, r8
 8020886:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802088a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802088e:	4413      	add	r3, r2
 8020890:	b280      	uxth	r0, r0
 8020892:	b2b2      	uxth	r2, r6
 8020894:	fb00 f602 	mul.w	r6, r0, r2
 8020898:	0100      	lsls	r0, r0, #4
 802089a:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802089e:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 80208a2:	1b80      	subs	r0, r0, r6
 80208a4:	fa1f fc82 	uxth.w	ip, r2
 80208a8:	b282      	uxth	r2, r0
 80208aa:	78a0      	ldrb	r0, [r4, #2]
 80208ac:	f897 e002 	ldrb.w	lr, [r7, #2]
 80208b0:	f897 9000 	ldrb.w	r9, [r7]
 80208b4:	787f      	ldrb	r7, [r7, #1]
 80208b6:	eba8 080c 	sub.w	r8, r8, ip
 80208ba:	fa1f f888 	uxth.w	r8, r8
 80208be:	4350      	muls	r0, r2
 80208c0:	fb08 0e0e 	mla	lr, r8, lr, r0
 80208c4:	78a8      	ldrb	r0, [r5, #2]
 80208c6:	fb0c e000 	mla	r0, ip, r0, lr
 80208ca:	f893 e002 	ldrb.w	lr, [r3, #2]
 80208ce:	fb06 0e0e 	mla	lr, r6, lr, r0
 80208d2:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 80208d6:	f894 e000 	ldrb.w	lr, [r4]
 80208da:	fb02 fe0e 	mul.w	lr, r2, lr
 80208de:	fb08 e909 	mla	r9, r8, r9, lr
 80208e2:	f895 e000 	ldrb.w	lr, [r5]
 80208e6:	fb0c 990e 	mla	r9, ip, lr, r9
 80208ea:	f893 e000 	ldrb.w	lr, [r3]
 80208ee:	785b      	ldrb	r3, [r3, #1]
 80208f0:	fb06 9e0e 	mla	lr, r6, lr, r9
 80208f4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80208f8:	ea4e 0e00 	orr.w	lr, lr, r0
 80208fc:	7860      	ldrb	r0, [r4, #1]
 80208fe:	4350      	muls	r0, r2
 8020900:	786a      	ldrb	r2, [r5, #1]
 8020902:	fb08 0007 	mla	r0, r8, r7, r0
 8020906:	fb0c 0202 	mla	r2, ip, r2, r0
 802090a:	fb06 2303 	mla	r3, r6, r3, r2
 802090e:	095b      	lsrs	r3, r3, #5
 8020910:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020914:	ea4e 0303 	orr.w	r3, lr, r3
 8020918:	800b      	strh	r3, [r1, #0]
 802091a:	b003      	add	sp, #12
 802091c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020920:	af01      	add	r7, sp, #4
 8020922:	e78c      	b.n	802083e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8020924:	ac01      	add	r4, sp, #4
 8020926:	4627      	mov	r7, r4
 8020928:	e795      	b.n	8020856 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802092a:	ac01      	add	r4, sp, #4
 802092c:	e793      	b.n	8020856 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802092e:	ad01      	add	r5, sp, #4
 8020930:	e7a1      	b.n	8020876 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8020932:	ab01      	add	r3, sp, #4
 8020934:	461d      	mov	r5, r3
 8020936:	e7ab      	b.n	8020890 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8020938:	ab01      	add	r3, sp, #4
 802093a:	e7a9      	b.n	8020890 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0802093c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802093c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020940:	b08f      	sub	sp, #60	; 0x3c
 8020942:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8020946:	920c      	str	r2, [sp, #48]	; 0x30
 8020948:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 802094a:	910a      	str	r1, [sp, #40]	; 0x28
 802094c:	9306      	str	r3, [sp, #24]
 802094e:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8020952:	900d      	str	r0, [sp, #52]	; 0x34
 8020954:	6850      	ldr	r0, [r2, #4]
 8020956:	6812      	ldr	r2, [r2, #0]
 8020958:	fb00 1303 	mla	r3, r0, r3, r1
 802095c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020960:	9307      	str	r3, [sp, #28]
 8020962:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020964:	681b      	ldr	r3, [r3, #0]
 8020966:	9308      	str	r3, [sp, #32]
 8020968:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802096a:	685c      	ldr	r4, [r3, #4]
 802096c:	3404      	adds	r4, #4
 802096e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020970:	2b00      	cmp	r3, #0
 8020972:	dc03      	bgt.n	802097c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8020974:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020976:	2b00      	cmp	r3, #0
 8020978:	f340 81d6 	ble.w	8020d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 802097c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802097e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020982:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020986:	1e48      	subs	r0, r1, #1
 8020988:	1e56      	subs	r6, r2, #1
 802098a:	9b06      	ldr	r3, [sp, #24]
 802098c:	2b00      	cmp	r3, #0
 802098e:	f340 80b7 	ble.w	8020b00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8020992:	ea5f 472b 	movs.w	r7, fp, asr #16
 8020996:	ea4f 4325 	mov.w	r3, r5, asr #16
 802099a:	d406      	bmi.n	80209aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802099c:	4287      	cmp	r7, r0
 802099e:	da04      	bge.n	80209aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80209a0:	2b00      	cmp	r3, #0
 80209a2:	db02      	blt.n	80209aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80209a4:	42b3      	cmp	r3, r6
 80209a6:	f2c0 80ac 	blt.w	8020b02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80209aa:	3701      	adds	r7, #1
 80209ac:	f100 809d 	bmi.w	8020aea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80209b0:	42b9      	cmp	r1, r7
 80209b2:	f2c0 809a 	blt.w	8020aea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80209b6:	3301      	adds	r3, #1
 80209b8:	f100 8097 	bmi.w	8020aea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80209bc:	429a      	cmp	r2, r3
 80209be:	f2c0 8094 	blt.w	8020aea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80209c2:	9b06      	ldr	r3, [sp, #24]
 80209c4:	930b      	str	r3, [sp, #44]	; 0x2c
 80209c6:	9b07      	ldr	r3, [sp, #28]
 80209c8:	9309      	str	r3, [sp, #36]	; 0x24
 80209ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80209cc:	2b00      	cmp	r3, #0
 80209ce:	f340 80b5 	ble.w	8020b3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80209d2:	9820      	ldr	r0, [sp, #128]	; 0x80
 80209d4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80209d6:	68c7      	ldr	r7, [r0, #12]
 80209d8:	6892      	ldr	r2, [r2, #8]
 80209da:	ea5f 402b 	movs.w	r0, fp, asr #16
 80209de:	ea4f 4625 	mov.w	r6, r5, asr #16
 80209e2:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80209e6:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80209ea:	f100 80fb 	bmi.w	8020be4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80209ee:	f102 3cff 	add.w	ip, r2, #4294967295
 80209f2:	4560      	cmp	r0, ip
 80209f4:	f280 80f6 	bge.w	8020be4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80209f8:	2e00      	cmp	r6, #0
 80209fa:	f2c0 80f3 	blt.w	8020be4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80209fe:	f107 3cff 	add.w	ip, r7, #4294967295
 8020a02:	4566      	cmp	r6, ip
 8020a04:	f280 80ee 	bge.w	8020be4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020a08:	b212      	sxth	r2, r2
 8020a0a:	fb06 0002 	mla	r0, r6, r2, r0
 8020a0e:	9e08      	ldr	r6, [sp, #32]
 8020a10:	1837      	adds	r7, r6, r0
 8020a12:	5c30      	ldrb	r0, [r6, r0]
 8020a14:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8020a18:	eb04 0c08 	add.w	ip, r4, r8
 8020a1c:	2b00      	cmp	r3, #0
 8020a1e:	f000 80d3 	beq.w	8020bc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8020a22:	787e      	ldrb	r6, [r7, #1]
 8020a24:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020a28:	4426      	add	r6, r4
 8020a2a:	2900      	cmp	r1, #0
 8020a2c:	f000 80d4 	beq.w	8020bd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8020a30:	18b8      	adds	r0, r7, r2
 8020a32:	5cba      	ldrb	r2, [r7, r2]
 8020a34:	7840      	ldrb	r0, [r0, #1]
 8020a36:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020a3a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020a3e:	4422      	add	r2, r4
 8020a40:	4420      	add	r0, r4
 8020a42:	b29b      	uxth	r3, r3
 8020a44:	b289      	uxth	r1, r1
 8020a46:	fb03 f901 	mul.w	r9, r3, r1
 8020a4a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020a4e:	011b      	lsls	r3, r3, #4
 8020a50:	b289      	uxth	r1, r1
 8020a52:	78b7      	ldrb	r7, [r6, #2]
 8020a54:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020a58:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020a5c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020a60:	eba3 0309 	sub.w	r3, r3, r9
 8020a64:	b29b      	uxth	r3, r3
 8020a66:	ebae 0e01 	sub.w	lr, lr, r1
 8020a6a:	fa1f fe8e 	uxth.w	lr, lr
 8020a6e:	435f      	muls	r7, r3
 8020a70:	fb0e 770a 	mla	r7, lr, sl, r7
 8020a74:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020a78:	fb01 770a 	mla	r7, r1, sl, r7
 8020a7c:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020a80:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020a84:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020a88:	f896 8000 	ldrb.w	r8, [r6]
 8020a8c:	7876      	ldrb	r6, [r6, #1]
 8020a8e:	fb03 f808 	mul.w	r8, r3, r8
 8020a92:	fb0e 8807 	mla	r8, lr, r7, r8
 8020a96:	7817      	ldrb	r7, [r2, #0]
 8020a98:	fb01 8807 	mla	r8, r1, r7, r8
 8020a9c:	7807      	ldrb	r7, [r0, #0]
 8020a9e:	fb09 8707 	mla	r7, r9, r7, r8
 8020aa2:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020aa6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020aaa:	ea47 070a 	orr.w	r7, r7, sl
 8020aae:	4373      	muls	r3, r6
 8020ab0:	f892 a001 	ldrb.w	sl, [r2, #1]
 8020ab4:	fb0e 330c 	mla	r3, lr, ip, r3
 8020ab8:	fb01 310a 	mla	r1, r1, sl, r3
 8020abc:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020ac0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020ac2:	fb09 1a0a 	mla	sl, r9, sl, r1
 8020ac6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020aca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020ace:	ea47 070a 	orr.w	r7, r7, sl
 8020ad2:	801f      	strh	r7, [r3, #0]
 8020ad4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020ad6:	3302      	adds	r3, #2
 8020ad8:	9309      	str	r3, [sp, #36]	; 0x24
 8020ada:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020adc:	449b      	add	fp, r3
 8020ade:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020ae0:	441d      	add	r5, r3
 8020ae2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020ae4:	3b01      	subs	r3, #1
 8020ae6:	930b      	str	r3, [sp, #44]	; 0x2c
 8020ae8:	e76f      	b.n	80209ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020aea:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020aec:	449b      	add	fp, r3
 8020aee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020af0:	441d      	add	r5, r3
 8020af2:	9b06      	ldr	r3, [sp, #24]
 8020af4:	3b01      	subs	r3, #1
 8020af6:	9306      	str	r3, [sp, #24]
 8020af8:	9b07      	ldr	r3, [sp, #28]
 8020afa:	3302      	adds	r3, #2
 8020afc:	9307      	str	r3, [sp, #28]
 8020afe:	e744      	b.n	802098a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020b00:	d023      	beq.n	8020b4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8020b02:	9b06      	ldr	r3, [sp, #24]
 8020b04:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8020b06:	3b01      	subs	r3, #1
 8020b08:	fb00 b003 	mla	r0, r0, r3, fp
 8020b0c:	1400      	asrs	r0, r0, #16
 8020b0e:	f53f af58 	bmi.w	80209c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020b12:	3901      	subs	r1, #1
 8020b14:	4288      	cmp	r0, r1
 8020b16:	f6bf af54 	bge.w	80209c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020b1a:	991c      	ldr	r1, [sp, #112]	; 0x70
 8020b1c:	fb01 5303 	mla	r3, r1, r3, r5
 8020b20:	141b      	asrs	r3, r3, #16
 8020b22:	f53f af4e 	bmi.w	80209c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020b26:	3a01      	subs	r2, #1
 8020b28:	4293      	cmp	r3, r2
 8020b2a:	f6bf af4a 	bge.w	80209c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020b2e:	9b06      	ldr	r3, [sp, #24]
 8020b30:	9309      	str	r3, [sp, #36]	; 0x24
 8020b32:	9b07      	ldr	r3, [sp, #28]
 8020b34:	930b      	str	r3, [sp, #44]	; 0x2c
 8020b36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020b38:	2b00      	cmp	r3, #0
 8020b3a:	dc70      	bgt.n	8020c1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8020b3c:	9b06      	ldr	r3, [sp, #24]
 8020b3e:	9a07      	ldr	r2, [sp, #28]
 8020b40:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020b44:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020b48:	9307      	str	r3, [sp, #28]
 8020b4a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020b4c:	2b00      	cmp	r3, #0
 8020b4e:	f340 80eb 	ble.w	8020d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020b52:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020b56:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020b5a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020b5e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020b60:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020b64:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020b68:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020b6c:	eef0 6a62 	vmov.f32	s13, s5
 8020b70:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020b74:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020b78:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020b7c:	ee16 ba90 	vmov	fp, s13
 8020b80:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020b84:	eef0 6a43 	vmov.f32	s13, s6
 8020b88:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020b8c:	ee12 2a90 	vmov	r2, s5
 8020b90:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020b94:	fb92 f3f3 	sdiv	r3, r2, r3
 8020b98:	ee13 2a10 	vmov	r2, s6
 8020b9c:	931b      	str	r3, [sp, #108]	; 0x6c
 8020b9e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020ba0:	fb92 f3f3 	sdiv	r3, r2, r3
 8020ba4:	931c      	str	r3, [sp, #112]	; 0x70
 8020ba6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020ba8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020baa:	3b01      	subs	r3, #1
 8020bac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020bb0:	930a      	str	r3, [sp, #40]	; 0x28
 8020bb2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020bb4:	bf08      	it	eq
 8020bb6:	4613      	moveq	r3, r2
 8020bb8:	ee16 5a90 	vmov	r5, s13
 8020bbc:	9306      	str	r3, [sp, #24]
 8020bbe:	eeb0 3a67 	vmov.f32	s6, s15
 8020bc2:	eef0 2a47 	vmov.f32	s5, s14
 8020bc6:	e6d2      	b.n	802096e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8020bc8:	b149      	cbz	r1, 8020bde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8020bca:	5cba      	ldrb	r2, [r7, r2]
 8020bcc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020bd0:	4422      	add	r2, r4
 8020bd2:	4660      	mov	r0, ip
 8020bd4:	4666      	mov	r6, ip
 8020bd6:	e734      	b.n	8020a42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020bd8:	4660      	mov	r0, ip
 8020bda:	4662      	mov	r2, ip
 8020bdc:	e731      	b.n	8020a42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020bde:	4660      	mov	r0, ip
 8020be0:	4662      	mov	r2, ip
 8020be2:	e7f7      	b.n	8020bd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8020be4:	f110 0c01 	adds.w	ip, r0, #1
 8020be8:	f53f af74 	bmi.w	8020ad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020bec:	4562      	cmp	r2, ip
 8020bee:	f6ff af71 	blt.w	8020ad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020bf2:	f116 0c01 	adds.w	ip, r6, #1
 8020bf6:	f53f af6d 	bmi.w	8020ad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020bfa:	4567      	cmp	r7, ip
 8020bfc:	f6ff af6a 	blt.w	8020ad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020c00:	b23f      	sxth	r7, r7
 8020c02:	b212      	sxth	r2, r2
 8020c04:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8020c08:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8020c0c:	9200      	str	r2, [sp, #0]
 8020c0e:	9701      	str	r7, [sp, #4]
 8020c10:	4623      	mov	r3, r4
 8020c12:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8020c16:	980d      	ldr	r0, [sp, #52]	; 0x34
 8020c18:	f7ff fde6 	bl	80207e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8020c1c:	e75a      	b.n	8020ad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020c1e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020c20:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020c24:	ea4f 462b 	mov.w	r6, fp, asr #16
 8020c28:	1428      	asrs	r0, r5, #16
 8020c2a:	fb02 6000 	mla	r0, r2, r0, r6
 8020c2e:	9e08      	ldr	r6, [sp, #32]
 8020c30:	f816 8000 	ldrb.w	r8, [r6, r0]
 8020c34:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020c38:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8020c3c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020c40:	1837      	adds	r7, r6, r0
 8020c42:	eb04 0c08 	add.w	ip, r4, r8
 8020c46:	2b00      	cmp	r3, #0
 8020c48:	d060      	beq.n	8020d0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8020c4a:	787e      	ldrb	r6, [r7, #1]
 8020c4c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020c50:	4426      	add	r6, r4
 8020c52:	2900      	cmp	r1, #0
 8020c54:	d062      	beq.n	8020d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8020c56:	18b8      	adds	r0, r7, r2
 8020c58:	5cba      	ldrb	r2, [r7, r2]
 8020c5a:	7840      	ldrb	r0, [r0, #1]
 8020c5c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020c60:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020c64:	4422      	add	r2, r4
 8020c66:	4420      	add	r0, r4
 8020c68:	b29b      	uxth	r3, r3
 8020c6a:	b289      	uxth	r1, r1
 8020c6c:	fb03 f901 	mul.w	r9, r3, r1
 8020c70:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020c74:	011b      	lsls	r3, r3, #4
 8020c76:	b289      	uxth	r1, r1
 8020c78:	78b7      	ldrb	r7, [r6, #2]
 8020c7a:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020c7e:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020c82:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020c86:	eba3 0309 	sub.w	r3, r3, r9
 8020c8a:	b29b      	uxth	r3, r3
 8020c8c:	ebae 0e01 	sub.w	lr, lr, r1
 8020c90:	fa1f fe8e 	uxth.w	lr, lr
 8020c94:	435f      	muls	r7, r3
 8020c96:	fb0e 770a 	mla	r7, lr, sl, r7
 8020c9a:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020c9e:	fb01 770a 	mla	r7, r1, sl, r7
 8020ca2:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020ca6:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020caa:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020cae:	f896 8000 	ldrb.w	r8, [r6]
 8020cb2:	7876      	ldrb	r6, [r6, #1]
 8020cb4:	fb03 f808 	mul.w	r8, r3, r8
 8020cb8:	fb0e 8807 	mla	r8, lr, r7, r8
 8020cbc:	7817      	ldrb	r7, [r2, #0]
 8020cbe:	fb01 8807 	mla	r8, r1, r7, r8
 8020cc2:	7807      	ldrb	r7, [r0, #0]
 8020cc4:	fb09 8707 	mla	r7, r9, r7, r8
 8020cc8:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020ccc:	4373      	muls	r3, r6
 8020cce:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020cd2:	7856      	ldrb	r6, [r2, #1]
 8020cd4:	ea47 070a 	orr.w	r7, r7, sl
 8020cd8:	fb0e 330c 	mla	r3, lr, ip, r3
 8020cdc:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020ce0:	fb01 3306 	mla	r3, r1, r6, r3
 8020ce4:	fb09 3a0a 	mla	sl, r9, sl, r3
 8020ce8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020cec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020cee:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020cf2:	ea47 070a 	orr.w	r7, r7, sl
 8020cf6:	f823 7b02 	strh.w	r7, [r3], #2
 8020cfa:	930b      	str	r3, [sp, #44]	; 0x2c
 8020cfc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020cfe:	449b      	add	fp, r3
 8020d00:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020d02:	441d      	add	r5, r3
 8020d04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020d06:	3b01      	subs	r3, #1
 8020d08:	9309      	str	r3, [sp, #36]	; 0x24
 8020d0a:	e714      	b.n	8020b36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8020d0c:	b149      	cbz	r1, 8020d22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8020d0e:	5cba      	ldrb	r2, [r7, r2]
 8020d10:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020d14:	4422      	add	r2, r4
 8020d16:	4660      	mov	r0, ip
 8020d18:	4666      	mov	r6, ip
 8020d1a:	e7a5      	b.n	8020c68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020d1c:	4660      	mov	r0, ip
 8020d1e:	4662      	mov	r2, ip
 8020d20:	e7a2      	b.n	8020c68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020d22:	4660      	mov	r0, ip
 8020d24:	4662      	mov	r2, ip
 8020d26:	e7f7      	b.n	8020d18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8020d28:	b00f      	add	sp, #60	; 0x3c
 8020d2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020d2e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8020d2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020d32:	b085      	sub	sp, #20
 8020d34:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8020d38:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8020d3c:	9102      	str	r1, [sp, #8]
 8020d3e:	2c00      	cmp	r4, #0
 8020d40:	fb04 710c 	mla	r1, r4, ip, r7
 8020d44:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8020d48:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8020d4c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8020d50:	eb02 0e01 	add.w	lr, r2, r1
 8020d54:	f2c0 8122 	blt.w	8020f9c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8020d58:	45a0      	cmp	r8, r4
 8020d5a:	f340 811f 	ble.w	8020f9c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8020d5e:	2f00      	cmp	r7, #0
 8020d60:	f2c0 811a 	blt.w	8020f98 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8020d64:	45bc      	cmp	ip, r7
 8020d66:	f340 8117 	ble.w	8020f98 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8020d6a:	5c52      	ldrb	r2, [r2, r1]
 8020d6c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8020d70:	1c7a      	adds	r2, r7, #1
 8020d72:	f100 8116 	bmi.w	8020fa2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8020d76:	4594      	cmp	ip, r2
 8020d78:	f340 8113 	ble.w	8020fa2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8020d7c:	2e00      	cmp	r6, #0
 8020d7e:	f000 8112 	beq.w	8020fa6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8020d82:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020d86:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020d8a:	3401      	adds	r4, #1
 8020d8c:	f100 810f 	bmi.w	8020fae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8020d90:	45a0      	cmp	r8, r4
 8020d92:	f340 810c 	ble.w	8020fae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8020d96:	2800      	cmp	r0, #0
 8020d98:	f000 810c 	beq.w	8020fb4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8020d9c:	2f00      	cmp	r7, #0
 8020d9e:	f2c0 8104 	blt.w	8020faa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8020da2:	45bc      	cmp	ip, r7
 8020da4:	f340 8101 	ble.w	8020faa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8020da8:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8020dac:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8020db0:	3701      	adds	r7, #1
 8020db2:	f100 8102 	bmi.w	8020fba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8020db6:	45bc      	cmp	ip, r7
 8020db8:	f340 80ff 	ble.w	8020fba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8020dbc:	2e00      	cmp	r6, #0
 8020dbe:	f000 80fe 	beq.w	8020fbe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8020dc2:	44f4      	add	ip, lr
 8020dc4:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8020dc8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8020dcc:	b2b6      	uxth	r6, r6
 8020dce:	b280      	uxth	r0, r0
 8020dd0:	fb00 fe06 	mul.w	lr, r0, r6
 8020dd4:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8020dd8:	0136      	lsls	r6, r6, #4
 8020dda:	eba6 070e 	sub.w	r7, r6, lr
 8020dde:	b280      	uxth	r0, r0
 8020de0:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8020de4:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020de8:	b2bf      	uxth	r7, r7
 8020dea:	1a1b      	subs	r3, r3, r0
 8020dec:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020df0:	b29b      	uxth	r3, r3
 8020df2:	fb0a f607 	mul.w	r6, sl, r7
 8020df6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8020dfa:	fb0b 6603 	mla	r6, fp, r3, r6
 8020dfe:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8020e02:	fb00 6609 	mla	r6, r0, r9, r6
 8020e06:	fb0e 6608 	mla	r6, lr, r8, r6
 8020e0a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020e0e:	9600      	str	r6, [sp, #0]
 8020e10:	2e00      	cmp	r6, #0
 8020e12:	f000 80be 	beq.w	8020f92 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8020e16:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8020e1a:	fb0b fc0c 	mul.w	ip, fp, ip
 8020e1e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8020e22:	fb0b f505 	mul.w	r5, fp, r5
 8020e26:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8020e2a:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8020e2e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020e32:	44dc      	add	ip, fp
 8020e34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020e38:	9501      	str	r5, [sp, #4]
 8020e3a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8020e3e:	9503      	str	r5, [sp, #12]
 8020e40:	9d01      	ldr	r5, [sp, #4]
 8020e42:	9e02      	ldr	r6, [sp, #8]
 8020e44:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8020e48:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020e4c:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8020e50:	fb0a fc0c 	mul.w	ip, sl, ip
 8020e54:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8020e58:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8020e5c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020e60:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020e64:	4465      	add	r5, ip
 8020e66:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020e6a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8020e6e:	fb09 fc0c 	mul.w	ip, r9, ip
 8020e72:	fb09 f904 	mul.w	r9, r9, r4
 8020e76:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8020e7a:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8020e7e:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8020e82:	fb08 f404 	mul.w	r4, r8, r4
 8020e86:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020e8a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020e8e:	fb08 f802 	mul.w	r8, r8, r2
 8020e92:	fb0a fa01 	mul.w	sl, sl, r1
 8020e96:	0a22      	lsrs	r2, r4, #8
 8020e98:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8020e9c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020ea0:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8020ea4:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8020ea8:	4414      	add	r4, r2
 8020eaa:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8020eae:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8020eb2:	0a2d      	lsrs	r5, r5, #8
 8020eb4:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8020eb8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020ebc:	9a03      	ldr	r2, [sp, #12]
 8020ebe:	8836      	ldrh	r6, [r6, #0]
 8020ec0:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020ec4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020ec8:	437d      	muls	r5, r7
 8020eca:	4461      	add	r1, ip
 8020ecc:	0a24      	lsrs	r4, r4, #8
 8020ece:	fb02 5503 	mla	r5, r2, r3, r5
 8020ed2:	0a09      	lsrs	r1, r1, #8
 8020ed4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8020ed8:	fb04 540e 	mla	r4, r4, lr, r5
 8020edc:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020ee0:	fb01 4100 	mla	r1, r1, r0, r4
 8020ee4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020ee8:	0a09      	lsrs	r1, r1, #8
 8020eea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020eee:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8020ef2:	fb07 f70a 	mul.w	r7, r7, sl
 8020ef6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8020efa:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8020efe:	fb03 7101 	mla	r1, r3, r1, r7
 8020f02:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020f06:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8020f0a:	fb0e 1e08 	mla	lr, lr, r8, r1
 8020f0e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8020f12:	fb00 e101 	mla	r1, r0, r1, lr
 8020f16:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8020f1a:	9a00      	ldr	r2, [sp, #0]
 8020f1c:	b287      	uxth	r7, r0
 8020f1e:	437a      	muls	r2, r7
 8020f20:	0a09      	lsrs	r1, r1, #8
 8020f22:	1c53      	adds	r3, r2, #1
 8020f24:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020f28:	4321      	orrs	r1, r4
 8020f2a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020f2e:	1235      	asrs	r5, r6, #8
 8020f30:	0c0a      	lsrs	r2, r1, #16
 8020f32:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8020f36:	b2db      	uxtb	r3, r3
 8020f38:	fb12 f207 	smulbb	r2, r2, r7
 8020f3c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020f40:	fb05 2503 	mla	r5, r5, r3, r2
 8020f44:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8020f48:	10f2      	asrs	r2, r6, #3
 8020f4a:	b2c8      	uxtb	r0, r1
 8020f4c:	00f6      	lsls	r6, r6, #3
 8020f4e:	fb14 f407 	smulbb	r4, r4, r7
 8020f52:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020f56:	b2f6      	uxtb	r6, r6
 8020f58:	fb10 f007 	smulbb	r0, r0, r7
 8020f5c:	fb02 4203 	mla	r2, r2, r3, r4
 8020f60:	b2ad      	uxth	r5, r5
 8020f62:	fb06 0303 	mla	r3, r6, r3, r0
 8020f66:	b299      	uxth	r1, r3
 8020f68:	b294      	uxth	r4, r2
 8020f6a:	1c6b      	adds	r3, r5, #1
 8020f6c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020f70:	1c62      	adds	r2, r4, #1
 8020f72:	1c4b      	adds	r3, r1, #1
 8020f74:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020f78:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8020f7c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020f80:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020f84:	0952      	lsrs	r2, r2, #5
 8020f86:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020f8a:	432b      	orrs	r3, r5
 8020f8c:	4313      	orrs	r3, r2
 8020f8e:	9a02      	ldr	r2, [sp, #8]
 8020f90:	8013      	strh	r3, [r2, #0]
 8020f92:	b005      	add	sp, #20
 8020f94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020f98:	2500      	movs	r5, #0
 8020f9a:	e6e9      	b.n	8020d70 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8020f9c:	2100      	movs	r1, #0
 8020f9e:	460d      	mov	r5, r1
 8020fa0:	e6f3      	b.n	8020d8a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8020fa2:	2100      	movs	r1, #0
 8020fa4:	e6f1      	b.n	8020d8a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8020fa6:	4631      	mov	r1, r6
 8020fa8:	e6ef      	b.n	8020d8a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8020faa:	2400      	movs	r4, #0
 8020fac:	e700      	b.n	8020db0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8020fae:	2200      	movs	r2, #0
 8020fb0:	4614      	mov	r4, r2
 8020fb2:	e70b      	b.n	8020dcc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8020fb4:	4602      	mov	r2, r0
 8020fb6:	4604      	mov	r4, r0
 8020fb8:	e708      	b.n	8020dcc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8020fba:	2200      	movs	r2, #0
 8020fbc:	e706      	b.n	8020dcc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8020fbe:	4632      	mov	r2, r6
 8020fc0:	e704      	b.n	8020dcc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08020fc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020fc2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020fc6:	b09f      	sub	sp, #124	; 0x7c
 8020fc8:	921b      	str	r2, [sp, #108]	; 0x6c
 8020fca:	9309      	str	r3, [sp, #36]	; 0x24
 8020fcc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8020fce:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8020fd2:	931c      	str	r3, [sp, #112]	; 0x70
 8020fd4:	9119      	str	r1, [sp, #100]	; 0x64
 8020fd6:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8020fda:	901d      	str	r0, [sp, #116]	; 0x74
 8020fdc:	6850      	ldr	r0, [r2, #4]
 8020fde:	6812      	ldr	r2, [r2, #0]
 8020fe0:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8020fe2:	fb00 1303 	mla	r3, r0, r3, r1
 8020fe6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020fea:	930c      	str	r3, [sp, #48]	; 0x30
 8020fec:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020fee:	681b      	ldr	r3, [r3, #0]
 8020ff0:	9312      	str	r3, [sp, #72]	; 0x48
 8020ff2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020ff4:	685e      	ldr	r6, [r3, #4]
 8020ff6:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8020ffa:	930d      	str	r3, [sp, #52]	; 0x34
 8020ffc:	3604      	adds	r6, #4
 8020ffe:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021000:	2b00      	cmp	r3, #0
 8021002:	dc03      	bgt.n	802100c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8021004:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021006:	2b00      	cmp	r3, #0
 8021008:	f340 8388 	ble.w	802171c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802100c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802100e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021012:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021016:	1e48      	subs	r0, r1, #1
 8021018:	1e57      	subs	r7, r2, #1
 802101a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802101c:	2b00      	cmp	r3, #0
 802101e:	f340 8195 	ble.w	802134c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021022:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021024:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021028:	ea4f 4325 	mov.w	r3, r5, asr #16
 802102c:	d406      	bmi.n	802103c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802102e:	4584      	cmp	ip, r0
 8021030:	da04      	bge.n	802103c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021032:	2b00      	cmp	r3, #0
 8021034:	db02      	blt.n	802103c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021036:	42bb      	cmp	r3, r7
 8021038:	f2c0 8189 	blt.w	802134e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 802103c:	f11c 0c01 	adds.w	ip, ip, #1
 8021040:	f100 8177 	bmi.w	8021332 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021044:	4561      	cmp	r1, ip
 8021046:	f2c0 8174 	blt.w	8021332 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802104a:	3301      	adds	r3, #1
 802104c:	f100 8171 	bmi.w	8021332 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021050:	429a      	cmp	r2, r3
 8021052:	f2c0 816e 	blt.w	8021332 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021056:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021058:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 802105a:	931a      	str	r3, [sp, #104]	; 0x68
 802105c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802105e:	2b00      	cmp	r3, #0
 8021060:	f340 8193 	ble.w	802138a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8021064:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021066:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802106a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802106c:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8021070:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021072:	141b      	asrs	r3, r3, #16
 8021074:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021078:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802107c:	f100 81d6 	bmi.w	802142c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021080:	f100 38ff 	add.w	r8, r0, #4294967295
 8021084:	4543      	cmp	r3, r8
 8021086:	f280 81d1 	bge.w	802142c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802108a:	f1bc 0f00 	cmp.w	ip, #0
 802108e:	f2c0 81cd 	blt.w	802142c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021092:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021096:	45c4      	cmp	ip, r8
 8021098:	f280 81c8 	bge.w	802142c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802109c:	b200      	sxth	r0, r0
 802109e:	fb0c 3300 	mla	r3, ip, r0, r3
 80210a2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80210a4:	eb04 0803 	add.w	r8, r4, r3
 80210a8:	5ce3      	ldrb	r3, [r4, r3]
 80210aa:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80210ae:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80210b2:	2a00      	cmp	r2, #0
 80210b4:	f000 81af 	beq.w	8021416 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80210b8:	f898 c001 	ldrb.w	ip, [r8, #1]
 80210bc:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80210c0:	940e      	str	r4, [sp, #56]	; 0x38
 80210c2:	0e24      	lsrs	r4, r4, #24
 80210c4:	9415      	str	r4, [sp, #84]	; 0x54
 80210c6:	b179      	cbz	r1, 80210e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80210c8:	eb08 0c00 	add.w	ip, r8, r0
 80210cc:	f818 0000 	ldrb.w	r0, [r8, r0]
 80210d0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80210d4:	900a      	str	r0, [sp, #40]	; 0x28
 80210d6:	0e00      	lsrs	r0, r0, #24
 80210d8:	9013      	str	r0, [sp, #76]	; 0x4c
 80210da:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80210de:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80210e2:	900f      	str	r0, [sp, #60]	; 0x3c
 80210e4:	0e00      	lsrs	r0, r0, #24
 80210e6:	9016      	str	r0, [sp, #88]	; 0x58
 80210e8:	b292      	uxth	r2, r2
 80210ea:	b289      	uxth	r1, r1
 80210ec:	fb02 f901 	mul.w	r9, r2, r1
 80210f0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80210f4:	0112      	lsls	r2, r2, #4
 80210f6:	eba2 0809 	sub.w	r8, r2, r9
 80210fa:	b289      	uxth	r1, r1
 80210fc:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021100:	9815      	ldr	r0, [sp, #84]	; 0x54
 8021102:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021104:	fa1f f888 	uxth.w	r8, r8
 8021108:	1a52      	subs	r2, r2, r1
 802110a:	b292      	uxth	r2, r2
 802110c:	fb08 f000 	mul.w	r0, r8, r0
 8021110:	fb02 000e 	mla	r0, r2, lr, r0
 8021114:	fb01 0004 	mla	r0, r1, r4, r0
 8021118:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802111a:	fb09 0004 	mla	r0, r9, r4, r0
 802111e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8021122:	2800      	cmp	r0, #0
 8021124:	f000 80fa 	beq.w	802131c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021128:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802112c:	d01b      	beq.n	8021166 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802112e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021132:	fb0e fa0a 	mul.w	sl, lr, sl
 8021136:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802113a:	fb0e fe03 	mul.w	lr, lr, r3
 802113e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021142:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021146:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802114a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802114e:	4453      	add	r3, sl
 8021150:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021154:	0a1b      	lsrs	r3, r3, #8
 8021156:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802115a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802115e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021162:	ea43 030c 	orr.w	r3, r3, ip
 8021166:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021168:	2cff      	cmp	r4, #255	; 0xff
 802116a:	d021      	beq.n	80211b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802116c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802116e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021172:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021174:	fb04 fb0b 	mul.w	fp, r4, fp
 8021178:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802117a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802117e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021180:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021184:	fb04 fa0a 	mul.w	sl, r4, sl
 8021188:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802118c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021190:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021194:	44de      	add	lr, fp
 8021196:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802119a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802119e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80211a2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80211a6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80211aa:	ea4e 040a 	orr.w	r4, lr, sl
 80211ae:	940e      	str	r4, [sp, #56]	; 0x38
 80211b0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80211b2:	2cff      	cmp	r4, #255	; 0xff
 80211b4:	d021      	beq.n	80211fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80211b6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80211b8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80211bc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80211be:	fb04 fb0b 	mul.w	fp, r4, fp
 80211c2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80211c4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80211c8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80211ca:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80211ce:	fb04 fa0a 	mul.w	sl, r4, sl
 80211d2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80211d6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80211da:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80211de:	44de      	add	lr, fp
 80211e0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80211e4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80211e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80211ec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80211f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80211f4:	ea4e 040a 	orr.w	r4, lr, sl
 80211f8:	940a      	str	r4, [sp, #40]	; 0x28
 80211fa:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80211fc:	2cff      	cmp	r4, #255	; 0xff
 80211fe:	d021      	beq.n	8021244 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021200:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021202:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021206:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021208:	fb04 fb0b 	mul.w	fp, r4, fp
 802120c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802120e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021212:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021214:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021218:	fb04 fa0a 	mul.w	sl, r4, sl
 802121c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021220:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021224:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021228:	44de      	add	lr, fp
 802122a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802122e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021232:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021236:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802123a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802123e:	ea4e 040a 	orr.w	r4, lr, sl
 8021242:	940f      	str	r4, [sp, #60]	; 0x3c
 8021244:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021246:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802124a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802124c:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021250:	fb08 fc0c 	mul.w	ip, r8, ip
 8021254:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021258:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802125c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802125e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8021262:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021266:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021268:	fb09 cc0e 	mla	ip, r9, lr, ip
 802126c:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8021270:	fb08 f80e 	mul.w	r8, r8, lr
 8021274:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021278:	fb02 8303 	mla	r3, r2, r3, r8
 802127c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802127e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021280:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021284:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021286:	fb01 330a 	mla	r3, r1, sl, r3
 802128a:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 802128e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8021290:	fb09 3901 	mla	r9, r9, r1, r3
 8021294:	4342      	muls	r2, r0
 8021296:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802129a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802129e:	883b      	ldrh	r3, [r7, #0]
 80212a0:	1c50      	adds	r0, r2, #1
 80212a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80212a6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80212aa:	ea4c 0c09 	orr.w	ip, ip, r9
 80212ae:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80212b2:	1219      	asrs	r1, r3, #8
 80212b4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80212b8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80212bc:	b2c0      	uxtb	r0, r0
 80212be:	fb12 f204 	smulbb	r2, r2, r4
 80212c2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80212c6:	fb01 2100 	mla	r1, r1, r0, r2
 80212ca:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80212ce:	10da      	asrs	r2, r3, #3
 80212d0:	fa5f fc8c 	uxtb.w	ip, ip
 80212d4:	00db      	lsls	r3, r3, #3
 80212d6:	fb1c fc04 	smulbb	ip, ip, r4
 80212da:	b2db      	uxtb	r3, r3
 80212dc:	b289      	uxth	r1, r1
 80212de:	fb03 c300 	mla	r3, r3, r0, ip
 80212e2:	fa1f fc83 	uxth.w	ip, r3
 80212e6:	1c4b      	adds	r3, r1, #1
 80212e8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80212ec:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80212f0:	fb1e fe04 	smulbb	lr, lr, r4
 80212f4:	f10c 0301 	add.w	r3, ip, #1
 80212f8:	fb02 e200 	mla	r2, r2, r0, lr
 80212fc:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8021300:	b292      	uxth	r2, r2
 8021302:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8021306:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802130a:	430b      	orrs	r3, r1
 802130c:	1c51      	adds	r1, r2, #1
 802130e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8021312:	0952      	lsrs	r2, r2, #5
 8021314:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021318:	4313      	orrs	r3, r2
 802131a:	803b      	strh	r3, [r7, #0]
 802131c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802131e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021320:	441a      	add	r2, r3
 8021322:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021324:	9229      	str	r2, [sp, #164]	; 0xa4
 8021326:	441d      	add	r5, r3
 8021328:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802132a:	3b01      	subs	r3, #1
 802132c:	3702      	adds	r7, #2
 802132e:	931a      	str	r3, [sp, #104]	; 0x68
 8021330:	e694      	b.n	802105c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021332:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021334:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021336:	441c      	add	r4, r3
 8021338:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802133a:	9429      	str	r4, [sp, #164]	; 0xa4
 802133c:	441d      	add	r5, r3
 802133e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021340:	3b01      	subs	r3, #1
 8021342:	9309      	str	r3, [sp, #36]	; 0x24
 8021344:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021346:	3302      	adds	r3, #2
 8021348:	930c      	str	r3, [sp, #48]	; 0x30
 802134a:	e666      	b.n	802101a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802134c:	d024      	beq.n	8021398 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802134e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021350:	982b      	ldr	r0, [sp, #172]	; 0xac
 8021352:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021354:	3b01      	subs	r3, #1
 8021356:	fb00 4003 	mla	r0, r0, r3, r4
 802135a:	1400      	asrs	r0, r0, #16
 802135c:	f53f ae7b 	bmi.w	8021056 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021360:	3901      	subs	r1, #1
 8021362:	4288      	cmp	r0, r1
 8021364:	f6bf ae77 	bge.w	8021056 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021368:	992c      	ldr	r1, [sp, #176]	; 0xb0
 802136a:	fb01 5303 	mla	r3, r1, r3, r5
 802136e:	141b      	asrs	r3, r3, #16
 8021370:	f53f ae71 	bmi.w	8021056 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8021374:	3a01      	subs	r2, #1
 8021376:	4293      	cmp	r3, r2
 8021378:	f6bf ae6d 	bge.w	8021056 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802137c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8021380:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8021384:	f1bb 0f00 	cmp.w	fp, #0
 8021388:	dc70      	bgt.n	802146c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 802138a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802138c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021390:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021392:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021396:	930c      	str	r3, [sp, #48]	; 0x30
 8021398:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802139a:	2b00      	cmp	r3, #0
 802139c:	f340 81be 	ble.w	802171c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80213a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80213a4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80213a8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80213ac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80213ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80213b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80213b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80213ba:	eef0 6a62 	vmov.f32	s13, s5
 80213be:	ee61 7a27 	vmul.f32	s15, s2, s15
 80213c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80213c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80213ca:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80213ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80213d2:	eef0 6a43 	vmov.f32	s13, s6
 80213d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80213da:	ee12 2a90 	vmov	r2, s5
 80213de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80213e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80213e6:	ee13 2a10 	vmov	r2, s6
 80213ea:	932b      	str	r3, [sp, #172]	; 0xac
 80213ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80213ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80213f2:	932c      	str	r3, [sp, #176]	; 0xb0
 80213f4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80213f6:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80213f8:	3b01      	subs	r3, #1
 80213fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80213fe:	9319      	str	r3, [sp, #100]	; 0x64
 8021400:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021402:	bf08      	it	eq
 8021404:	4613      	moveq	r3, r2
 8021406:	ee16 5a90 	vmov	r5, s13
 802140a:	9309      	str	r3, [sp, #36]	; 0x24
 802140c:	eeb0 3a67 	vmov.f32	s6, s15
 8021410:	eef0 2a47 	vmov.f32	s5, s14
 8021414:	e5f3      	b.n	8020ffe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021416:	2900      	cmp	r1, #0
 8021418:	f43f ae66 	beq.w	80210e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802141c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8021420:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021424:	900a      	str	r0, [sp, #40]	; 0x28
 8021426:	0e00      	lsrs	r0, r0, #24
 8021428:	9013      	str	r0, [sp, #76]	; 0x4c
 802142a:	e65d      	b.n	80210e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802142c:	f113 0801 	adds.w	r8, r3, #1
 8021430:	f53f af74 	bmi.w	802131c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021434:	4540      	cmp	r0, r8
 8021436:	f6ff af71 	blt.w	802131c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802143a:	f11c 0801 	adds.w	r8, ip, #1
 802143e:	f53f af6d 	bmi.w	802131c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021442:	45c6      	cmp	lr, r8
 8021444:	f6ff af6a 	blt.w	802131c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021448:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 802144a:	9302      	str	r3, [sp, #8]
 802144c:	b200      	sxth	r0, r0
 802144e:	fa0f f38e 	sxth.w	r3, lr
 8021452:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8021456:	e9cd c203 	strd	ip, r2, [sp, #12]
 802145a:	9301      	str	r3, [sp, #4]
 802145c:	9000      	str	r0, [sp, #0]
 802145e:	4633      	mov	r3, r6
 8021460:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8021462:	981d      	ldr	r0, [sp, #116]	; 0x74
 8021464:	4639      	mov	r1, r7
 8021466:	f7ff fc62 	bl	8020d2e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 802146a:	e757      	b.n	802131c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802146c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802146e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021470:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021474:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021476:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802147a:	1427      	asrs	r7, r4, #16
 802147c:	142b      	asrs	r3, r5, #16
 802147e:	fb01 7303 	mla	r3, r1, r3, r7
 8021482:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021484:	18e7      	adds	r7, r4, r3
 8021486:	5ce3      	ldrb	r3, [r4, r3]
 8021488:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802148c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021490:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021494:	2a00      	cmp	r2, #0
 8021496:	f000 8137 	beq.w	8021708 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802149a:	f897 e001 	ldrb.w	lr, [r7, #1]
 802149e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80214a2:	9410      	str	r4, [sp, #64]	; 0x40
 80214a4:	0e24      	lsrs	r4, r4, #24
 80214a6:	9417      	str	r4, [sp, #92]	; 0x5c
 80214a8:	b170      	cbz	r0, 80214c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80214aa:	eb07 0e01 	add.w	lr, r7, r1
 80214ae:	5c79      	ldrb	r1, [r7, r1]
 80214b0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80214b4:	910b      	str	r1, [sp, #44]	; 0x2c
 80214b6:	0e09      	lsrs	r1, r1, #24
 80214b8:	9114      	str	r1, [sp, #80]	; 0x50
 80214ba:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80214be:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80214c2:	9111      	str	r1, [sp, #68]	; 0x44
 80214c4:	0e09      	lsrs	r1, r1, #24
 80214c6:	9118      	str	r1, [sp, #96]	; 0x60
 80214c8:	b292      	uxth	r2, r2
 80214ca:	b280      	uxth	r0, r0
 80214cc:	fb02 f800 	mul.w	r8, r2, r0
 80214d0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80214d4:	0112      	lsls	r2, r2, #4
 80214d6:	eba2 0e08 	sub.w	lr, r2, r8
 80214da:	b280      	uxth	r0, r0
 80214dc:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80214e0:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80214e2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80214e4:	fa1f fe8e 	uxth.w	lr, lr
 80214e8:	1a12      	subs	r2, r2, r0
 80214ea:	b292      	uxth	r2, r2
 80214ec:	fb0e f101 	mul.w	r1, lr, r1
 80214f0:	fb02 110c 	mla	r1, r2, ip, r1
 80214f4:	fb00 1104 	mla	r1, r0, r4, r1
 80214f8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80214fa:	fb08 1104 	mla	r1, r8, r4, r1
 80214fe:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021502:	2900      	cmp	r1, #0
 8021504:	f000 80f5 	beq.w	80216f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8021508:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802150c:	d019      	beq.n	8021542 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802150e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021512:	fb0c fa0a 	mul.w	sl, ip, sl
 8021516:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802151a:	fb0c fc03 	mul.w	ip, ip, r3
 802151e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021522:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021526:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802152a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802152e:	4453      	add	r3, sl
 8021530:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021534:	0a1b      	lsrs	r3, r3, #8
 8021536:	0a3f      	lsrs	r7, r7, #8
 8021538:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802153c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021540:	433b      	orrs	r3, r7
 8021542:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8021544:	2cff      	cmp	r4, #255	; 0xff
 8021546:	d020      	beq.n	802158a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8021548:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802154a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802154e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8021550:	4367      	muls	r7, r4
 8021552:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021554:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021558:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802155a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802155e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021562:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021566:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802156a:	44bc      	add	ip, r7
 802156c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021570:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021574:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021578:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802157c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021580:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021584:	ea4c 040a 	orr.w	r4, ip, sl
 8021588:	9410      	str	r4, [sp, #64]	; 0x40
 802158a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802158c:	2cff      	cmp	r4, #255	; 0xff
 802158e:	d020      	beq.n	80215d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8021590:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021592:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021596:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021598:	4367      	muls	r7, r4
 802159a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802159c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80215a0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80215a2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80215a6:	fb04 fa0a 	mul.w	sl, r4, sl
 80215aa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80215ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80215b2:	44bc      	add	ip, r7
 80215b4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80215b8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80215bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80215c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80215c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80215c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80215cc:	ea4c 040a 	orr.w	r4, ip, sl
 80215d0:	940b      	str	r4, [sp, #44]	; 0x2c
 80215d2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80215d4:	2cff      	cmp	r4, #255	; 0xff
 80215d6:	d020      	beq.n	802161a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80215d8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80215da:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80215de:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80215e0:	4367      	muls	r7, r4
 80215e2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80215e4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80215e8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80215ea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80215ee:	fb04 fa0a 	mul.w	sl, r4, sl
 80215f2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80215f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80215fa:	44bc      	add	ip, r7
 80215fc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021600:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021604:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021608:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802160c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021610:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021614:	ea4c 040a 	orr.w	r4, ip, sl
 8021618:	9411      	str	r4, [sp, #68]	; 0x44
 802161a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802161c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021620:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021622:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8021626:	fb0e f707 	mul.w	r7, lr, r7
 802162a:	fb02 770c 	mla	r7, r2, ip, r7
 802162e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021632:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021634:	fb00 770c 	mla	r7, r0, ip, r7
 8021638:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802163c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802163e:	fb08 770c 	mla	r7, r8, ip, r7
 8021642:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8021646:	fb0e fe0c 	mul.w	lr, lr, ip
 802164a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802164e:	fb02 e303 	mla	r3, r2, r3, lr
 8021652:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021654:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021656:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802165a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802165c:	fb00 330a 	mla	r3, r0, sl, r3
 8021660:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8021664:	fb08 3c0c 	mla	ip, r8, ip, r3
 8021668:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802166a:	f8b9 0000 	ldrh.w	r0, [r9]
 802166e:	434b      	muls	r3, r1
 8021670:	0a3f      	lsrs	r7, r7, #8
 8021672:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021676:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802167a:	1c59      	adds	r1, r3, #1
 802167c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8021680:	ea47 070c 	orr.w	r7, r7, ip
 8021684:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021688:	1202      	asrs	r2, r0, #8
 802168a:	0c3b      	lsrs	r3, r7, #16
 802168c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8021690:	b2c9      	uxtb	r1, r1
 8021692:	fb13 f304 	smulbb	r3, r3, r4
 8021696:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802169a:	fb02 3201 	mla	r2, r2, r1, r3
 802169e:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80216a2:	10c3      	asrs	r3, r0, #3
 80216a4:	b2ff      	uxtb	r7, r7
 80216a6:	00c0      	lsls	r0, r0, #3
 80216a8:	b292      	uxth	r2, r2
 80216aa:	fb1c fc04 	smulbb	ip, ip, r4
 80216ae:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80216b2:	b2c0      	uxtb	r0, r0
 80216b4:	fb17 f704 	smulbb	r7, r7, r4
 80216b8:	fb03 c301 	mla	r3, r3, r1, ip
 80216bc:	fb00 7001 	mla	r0, r0, r1, r7
 80216c0:	f102 0c01 	add.w	ip, r2, #1
 80216c4:	b280      	uxth	r0, r0
 80216c6:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80216ca:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80216ce:	1c42      	adds	r2, r0, #1
 80216d0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80216d4:	b29b      	uxth	r3, r3
 80216d6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80216da:	ea42 020c 	orr.w	r2, r2, ip
 80216de:	f103 0c01 	add.w	ip, r3, #1
 80216e2:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80216e6:	095b      	lsrs	r3, r3, #5
 80216e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80216ec:	431a      	orrs	r2, r3
 80216ee:	f8a9 2000 	strh.w	r2, [r9]
 80216f2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80216f4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80216f6:	441a      	add	r2, r3
 80216f8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80216fa:	9229      	str	r2, [sp, #164]	; 0xa4
 80216fc:	f109 0902 	add.w	r9, r9, #2
 8021700:	441d      	add	r5, r3
 8021702:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021706:	e63d      	b.n	8021384 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8021708:	2800      	cmp	r0, #0
 802170a:	f43f aedd 	beq.w	80214c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802170e:	5c79      	ldrb	r1, [r7, r1]
 8021710:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021714:	910b      	str	r1, [sp, #44]	; 0x2c
 8021716:	0e09      	lsrs	r1, r1, #24
 8021718:	9114      	str	r1, [sp, #80]	; 0x50
 802171a:	e6d5      	b.n	80214c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802171c:	b01f      	add	sp, #124	; 0x7c
 802171e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021722 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8021722:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021726:	b089      	sub	sp, #36	; 0x24
 8021728:	9101      	str	r1, [sp, #4]
 802172a:	9801      	ldr	r0, [sp, #4]
 802172c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8021730:	8800      	ldrh	r0, [r0, #0]
 8021732:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8021736:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 802173a:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802173e:	1206      	asrs	r6, r0, #8
 8021740:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8021744:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8021748:	9602      	str	r6, [sp, #8]
 802174a:	10c6      	asrs	r6, r0, #3
 802174c:	00c0      	lsls	r0, r0, #3
 802174e:	b2c0      	uxtb	r0, r0
 8021750:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8021754:	9004      	str	r0, [sp, #16]
 8021756:	2f00      	cmp	r7, #0
 8021758:	fb07 100c 	mla	r0, r7, ip, r1
 802175c:	9603      	str	r6, [sp, #12]
 802175e:	eb02 0e00 	add.w	lr, r2, r0
 8021762:	f2c0 810a 	blt.w	802197a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8021766:	45b8      	cmp	r8, r7
 8021768:	f340 8107 	ble.w	802197a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 802176c:	2900      	cmp	r1, #0
 802176e:	f2c0 8102 	blt.w	8021976 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8021772:	458c      	cmp	ip, r1
 8021774:	f340 80ff 	ble.w	8021976 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8021778:	5c12      	ldrb	r2, [r2, r0]
 802177a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802177e:	1c4a      	adds	r2, r1, #1
 8021780:	f100 80fe 	bmi.w	8021980 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8021784:	4594      	cmp	ip, r2
 8021786:	f340 80fb 	ble.w	8021980 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 802178a:	2d00      	cmp	r5, #0
 802178c:	f000 80fa 	beq.w	8021984 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8021790:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021794:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8021798:	3701      	adds	r7, #1
 802179a:	f100 80f7 	bmi.w	802198c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802179e:	45b8      	cmp	r8, r7
 80217a0:	f340 80f4 	ble.w	802198c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80217a4:	2c00      	cmp	r4, #0
 80217a6:	f000 80f4 	beq.w	8021992 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80217aa:	2900      	cmp	r1, #0
 80217ac:	eb0e 020c 	add.w	r2, lr, ip
 80217b0:	f2c0 80ea 	blt.w	8021988 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80217b4:	458c      	cmp	ip, r1
 80217b6:	f340 80e7 	ble.w	8021988 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80217ba:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80217be:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80217c2:	3101      	adds	r1, #1
 80217c4:	f100 80e8 	bmi.w	8021998 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80217c8:	458c      	cmp	ip, r1
 80217ca:	f340 80e5 	ble.w	8021998 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80217ce:	2d00      	cmp	r5, #0
 80217d0:	f000 80e4 	beq.w	802199c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80217d4:	7852      	ldrb	r2, [r2, #1]
 80217d6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80217da:	0e0b      	lsrs	r3, r1, #24
 80217dc:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80217e0:	9300      	str	r3, [sp, #0]
 80217e2:	b2a4      	uxth	r4, r4
 80217e4:	b2ab      	uxth	r3, r5
 80217e6:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 80217ea:	fb03 f904 	mul.w	r9, r3, r4
 80217ee:	fb0a f505 	mul.w	r5, sl, r5
 80217f2:	011b      	lsls	r3, r3, #4
 80217f4:	eba3 0e09 	sub.w	lr, r3, r9
 80217f8:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 80217fc:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8021800:	0a28      	lsrs	r0, r5, #8
 8021802:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021806:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 802180a:	4405      	add	r5, r0
 802180c:	0a2d      	lsrs	r5, r5, #8
 802180e:	fb0a f303 	mul.w	r3, sl, r3
 8021812:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8021816:	9005      	str	r0, [sp, #20]
 8021818:	f503 7080 	add.w	r0, r3, #256	; 0x100
 802181c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8021820:	0a1b      	lsrs	r3, r3, #8
 8021822:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8021826:	9306      	str	r3, [sp, #24]
 8021828:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 802182c:	fb0b f303 	mul.w	r3, fp, r3
 8021830:	0a1d      	lsrs	r5, r3, #8
 8021832:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021836:	ea4f 6817 	mov.w	r8, r7, lsr #24
 802183a:	fb0b f606 	mul.w	r6, fp, r6
 802183e:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8021842:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8021846:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802184a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802184e:	fb08 f707 	mul.w	r7, r8, r7
 8021852:	441d      	add	r5, r3
 8021854:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8021858:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 802185c:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8021860:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8021864:	fb08 fc0c 	mul.w	ip, r8, ip
 8021868:	0a1b      	lsrs	r3, r3, #8
 802186a:	9307      	str	r3, [sp, #28]
 802186c:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8021870:	0e0b      	lsrs	r3, r1, #24
 8021872:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8021876:	435f      	muls	r7, r3
 8021878:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802187c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021880:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8021884:	4460      	add	r0, ip
 8021886:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802188a:	b2a4      	uxth	r4, r4
 802188c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021890:	0a2d      	lsrs	r5, r5, #8
 8021892:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021896:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802189a:	fa1f fe8e 	uxth.w	lr, lr
 802189e:	4359      	muls	r1, r3
 80218a0:	1b12      	subs	r2, r2, r4
 80218a2:	9b05      	ldr	r3, [sp, #20]
 80218a4:	44bc      	add	ip, r7
 80218a6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80218aa:	b292      	uxth	r2, r2
 80218ac:	fb05 f50e 	mul.w	r5, r5, lr
 80218b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80218b4:	fb03 5502 	mla	r5, r3, r2, r5
 80218b8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80218bc:	9b06      	ldr	r3, [sp, #24]
 80218be:	f501 7780 	add.w	r7, r1, #256	; 0x100
 80218c2:	0a36      	lsrs	r6, r6, #8
 80218c4:	0a00      	lsrs	r0, r0, #8
 80218c6:	fb0c 5509 	mla	r5, ip, r9, r5
 80218ca:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80218ce:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80218d2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80218d6:	fb00 5504 	mla	r5, r0, r4, r5
 80218da:	fb0e f606 	mul.w	r6, lr, r6
 80218de:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80218e2:	0a09      	lsrs	r1, r1, #8
 80218e4:	9b07      	ldr	r3, [sp, #28]
 80218e6:	fb02 6000 	mla	r0, r2, r0, r6
 80218ea:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80218ee:	fb09 0001 	mla	r0, r9, r1, r0
 80218f2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80218f6:	fb0e fe0b 	mul.w	lr, lr, fp
 80218fa:	fb04 0003 	mla	r0, r4, r3, r0
 80218fe:	fb02 e20a 	mla	r2, r2, sl, lr
 8021902:	9b00      	ldr	r3, [sp, #0]
 8021904:	fb04 2408 	mla	r4, r4, r8, r2
 8021908:	fb09 4903 	mla	r9, r9, r3, r4
 802190c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8021910:	9b02      	ldr	r3, [sp, #8]
 8021912:	9a04      	ldr	r2, [sp, #16]
 8021914:	fa5f f989 	uxtb.w	r9, r9
 8021918:	fb03 f109 	mul.w	r1, r3, r9
 802191c:	9b03      	ldr	r3, [sp, #12]
 802191e:	0a2d      	lsrs	r5, r5, #8
 8021920:	0a00      	lsrs	r0, r0, #8
 8021922:	fb03 f309 	mul.w	r3, r3, r9
 8021926:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 802192a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802192e:	4305      	orrs	r5, r0
 8021930:	fb02 f909 	mul.w	r9, r2, r9
 8021934:	1c58      	adds	r0, r3, #1
 8021936:	1c4a      	adds	r2, r1, #1
 8021938:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802193c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021940:	0a2b      	lsrs	r3, r5, #8
 8021942:	0c2a      	lsrs	r2, r5, #16
 8021944:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021948:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802194c:	00db      	lsls	r3, r3, #3
 802194e:	0212      	lsls	r2, r2, #8
 8021950:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8021954:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021958:	4313      	orrs	r3, r2
 802195a:	f109 0201 	add.w	r2, r9, #1
 802195e:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8021962:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8021966:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 802196a:	431d      	orrs	r5, r3
 802196c:	9b01      	ldr	r3, [sp, #4]
 802196e:	801d      	strh	r5, [r3, #0]
 8021970:	b009      	add	sp, #36	; 0x24
 8021972:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021976:	2000      	movs	r0, #0
 8021978:	e701      	b.n	802177e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 802197a:	2600      	movs	r6, #0
 802197c:	4630      	mov	r0, r6
 802197e:	e70b      	b.n	8021798 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021980:	2600      	movs	r6, #0
 8021982:	e709      	b.n	8021798 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021984:	462e      	mov	r6, r5
 8021986:	e707      	b.n	8021798 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8021988:	2700      	movs	r7, #0
 802198a:	e71a      	b.n	80217c2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 802198c:	2100      	movs	r1, #0
 802198e:	460f      	mov	r7, r1
 8021990:	e723      	b.n	80217da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021992:	4621      	mov	r1, r4
 8021994:	4627      	mov	r7, r4
 8021996:	e720      	b.n	80217da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8021998:	2100      	movs	r1, #0
 802199a:	e71e      	b.n	80217da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 802199c:	4629      	mov	r1, r5
 802199e:	e71c      	b.n	80217da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

080219a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80219a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80219a4:	b09b      	sub	sp, #108	; 0x6c
 80219a6:	9218      	str	r2, [sp, #96]	; 0x60
 80219a8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80219aa:	9116      	str	r1, [sp, #88]	; 0x58
 80219ac:	9307      	str	r3, [sp, #28]
 80219ae:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80219b2:	9019      	str	r0, [sp, #100]	; 0x64
 80219b4:	6850      	ldr	r0, [r2, #4]
 80219b6:	6812      	ldr	r2, [r2, #0]
 80219b8:	9d26      	ldr	r5, [sp, #152]	; 0x98
 80219ba:	fb00 1303 	mla	r3, r0, r3, r1
 80219be:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80219c2:	930a      	str	r3, [sp, #40]	; 0x28
 80219c4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80219c6:	681b      	ldr	r3, [r3, #0]
 80219c8:	930f      	str	r3, [sp, #60]	; 0x3c
 80219ca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80219cc:	685e      	ldr	r6, [r3, #4]
 80219ce:	3604      	adds	r6, #4
 80219d0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80219d2:	2b00      	cmp	r3, #0
 80219d4:	dc03      	bgt.n	80219de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80219d6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80219d8:	2b00      	cmp	r3, #0
 80219da:	f340 8373 	ble.w	80220c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80219de:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80219e0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80219e4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80219e8:	1e48      	subs	r0, r1, #1
 80219ea:	1e57      	subs	r7, r2, #1
 80219ec:	9b07      	ldr	r3, [sp, #28]
 80219ee:	2b00      	cmp	r3, #0
 80219f0:	f340 8190 	ble.w	8021d14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80219f4:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80219f6:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80219fa:	ea4f 4325 	mov.w	r3, r5, asr #16
 80219fe:	d406      	bmi.n	8021a0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021a00:	4584      	cmp	ip, r0
 8021a02:	da04      	bge.n	8021a0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021a04:	2b00      	cmp	r3, #0
 8021a06:	db02      	blt.n	8021a0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021a08:	42bb      	cmp	r3, r7
 8021a0a:	f2c0 8184 	blt.w	8021d16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8021a0e:	f11c 0c01 	adds.w	ip, ip, #1
 8021a12:	f100 8172 	bmi.w	8021cfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021a16:	4561      	cmp	r1, ip
 8021a18:	f2c0 816f 	blt.w	8021cfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021a1c:	3301      	adds	r3, #1
 8021a1e:	f100 816c 	bmi.w	8021cfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021a22:	429a      	cmp	r2, r3
 8021a24:	f2c0 8169 	blt.w	8021cfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021a28:	9b07      	ldr	r3, [sp, #28]
 8021a2a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8021a2c:	9317      	str	r3, [sp, #92]	; 0x5c
 8021a2e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021a30:	2b00      	cmp	r3, #0
 8021a32:	f340 818e 	ble.w	8021d52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8021a36:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021a38:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021a3c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021a3e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8021a42:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021a44:	141b      	asrs	r3, r3, #16
 8021a46:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021a4a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021a4e:	f100 81d1 	bmi.w	8021df4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021a52:	f101 38ff 	add.w	r8, r1, #4294967295
 8021a56:	4543      	cmp	r3, r8
 8021a58:	f280 81cc 	bge.w	8021df4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021a5c:	f1bc 0f00 	cmp.w	ip, #0
 8021a60:	f2c0 81c8 	blt.w	8021df4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021a64:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021a68:	45c4      	cmp	ip, r8
 8021a6a:	f280 81c3 	bge.w	8021df4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021a6e:	b209      	sxth	r1, r1
 8021a70:	fb0c 3301 	mla	r3, ip, r1, r3
 8021a74:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021a76:	eb04 0803 	add.w	r8, r4, r3
 8021a7a:	5ce3      	ldrb	r3, [r4, r3]
 8021a7c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021a80:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021a84:	2a00      	cmp	r2, #0
 8021a86:	f000 81aa 	beq.w	8021dde <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8021a8a:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021a8e:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021a92:	940b      	str	r4, [sp, #44]	; 0x2c
 8021a94:	0e24      	lsrs	r4, r4, #24
 8021a96:	9412      	str	r4, [sp, #72]	; 0x48
 8021a98:	b178      	cbz	r0, 8021aba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021a9a:	eb08 0c01 	add.w	ip, r8, r1
 8021a9e:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021aa2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021aa6:	9108      	str	r1, [sp, #32]
 8021aa8:	0e09      	lsrs	r1, r1, #24
 8021aaa:	9110      	str	r1, [sp, #64]	; 0x40
 8021aac:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8021ab0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021ab4:	910c      	str	r1, [sp, #48]	; 0x30
 8021ab6:	0e09      	lsrs	r1, r1, #24
 8021ab8:	9113      	str	r1, [sp, #76]	; 0x4c
 8021aba:	b292      	uxth	r2, r2
 8021abc:	b280      	uxth	r0, r0
 8021abe:	fb02 f900 	mul.w	r9, r2, r0
 8021ac2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021ac6:	0112      	lsls	r2, r2, #4
 8021ac8:	eba2 0809 	sub.w	r8, r2, r9
 8021acc:	b280      	uxth	r0, r0
 8021ace:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021ad2:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021ad4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021ad6:	fa1f f888 	uxth.w	r8, r8
 8021ada:	1a12      	subs	r2, r2, r0
 8021adc:	b292      	uxth	r2, r2
 8021ade:	fb08 f101 	mul.w	r1, r8, r1
 8021ae2:	fb02 110e 	mla	r1, r2, lr, r1
 8021ae6:	fb00 1104 	mla	r1, r0, r4, r1
 8021aea:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021aec:	fb09 1104 	mla	r1, r9, r4, r1
 8021af0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021af4:	2900      	cmp	r1, #0
 8021af6:	f000 80f5 	beq.w	8021ce4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021afa:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021afe:	d01b      	beq.n	8021b38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021b00:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021b04:	fb0e fa0a 	mul.w	sl, lr, sl
 8021b08:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021b0c:	fb0e fe03 	mul.w	lr, lr, r3
 8021b10:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021b14:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021b18:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021b1c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021b20:	4453      	add	r3, sl
 8021b22:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021b26:	0a1b      	lsrs	r3, r3, #8
 8021b28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021b2c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021b30:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021b34:	ea43 030c 	orr.w	r3, r3, ip
 8021b38:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021b3a:	2cff      	cmp	r4, #255	; 0xff
 8021b3c:	d021      	beq.n	8021b82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8021b3e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021b40:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021b44:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021b46:	fb04 fb0b 	mul.w	fp, r4, fp
 8021b4a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021b4c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021b50:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021b52:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021b56:	fb04 fa0a 	mul.w	sl, r4, sl
 8021b5a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021b5e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021b62:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021b66:	44de      	add	lr, fp
 8021b68:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021b6c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021b70:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021b74:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021b78:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021b7c:	ea4e 040a 	orr.w	r4, lr, sl
 8021b80:	940b      	str	r4, [sp, #44]	; 0x2c
 8021b82:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021b84:	2cff      	cmp	r4, #255	; 0xff
 8021b86:	d021      	beq.n	8021bcc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8021b88:	9c08      	ldr	r4, [sp, #32]
 8021b8a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021b8e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021b90:	fb04 fb0b 	mul.w	fp, r4, fp
 8021b94:	9c08      	ldr	r4, [sp, #32]
 8021b96:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021b9a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021b9c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021ba0:	fb04 fa0a 	mul.w	sl, r4, sl
 8021ba4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021ba8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021bac:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021bb0:	44de      	add	lr, fp
 8021bb2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021bb6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021bba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021bbe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021bc2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021bc6:	ea4e 040a 	orr.w	r4, lr, sl
 8021bca:	9408      	str	r4, [sp, #32]
 8021bcc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021bce:	2cff      	cmp	r4, #255	; 0xff
 8021bd0:	d021      	beq.n	8021c16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021bd2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021bd4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021bd8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021bda:	fb04 fb0b 	mul.w	fp, r4, fp
 8021bde:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021be0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021be4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021be6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021bea:	fb04 fa0a 	mul.w	sl, r4, sl
 8021bee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021bf2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021bf6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021bfa:	44de      	add	lr, fp
 8021bfc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021c00:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021c04:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021c08:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021c0c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021c10:	ea4e 040a 	orr.w	r4, lr, sl
 8021c14:	940c      	str	r4, [sp, #48]	; 0x30
 8021c16:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021c18:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021c1c:	9c08      	ldr	r4, [sp, #32]
 8021c1e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021c22:	fb08 fc0c 	mul.w	ip, r8, ip
 8021c26:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021c2a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021c2e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021c30:	fb00 cc0e 	mla	ip, r0, lr, ip
 8021c34:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021c38:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021c3a:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021c3e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8021c42:	fb08 f80e 	mul.w	r8, r8, lr
 8021c46:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021c4a:	fb02 8303 	mla	r3, r2, r3, r8
 8021c4e:	9a08      	ldr	r2, [sp, #32]
 8021c50:	f8b7 8000 	ldrh.w	r8, [r7]
 8021c54:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021c58:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021c5a:	fb00 330a 	mla	r3, r0, sl, r3
 8021c5e:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8021c62:	fb09 3900 	mla	r9, r9, r0, r3
 8021c66:	43c9      	mvns	r1, r1
 8021c68:	ea4f 2228 	mov.w	r2, r8, asr #8
 8021c6c:	fa5f fe81 	uxtb.w	lr, r1
 8021c70:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021c74:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021c78:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8021c7c:	fb02 f20e 	mul.w	r2, r2, lr
 8021c80:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021c84:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021c88:	ea4c 0c09 	orr.w	ip, ip, r9
 8021c8c:	1c53      	adds	r3, r2, #1
 8021c8e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8021c92:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8021c96:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8021c9a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021c9e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021ca2:	4a63      	ldr	r2, [pc, #396]	; (8021e30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8021ca4:	fb00 f00e 	mul.w	r0, r0, lr
 8021ca8:	b2db      	uxtb	r3, r3
 8021caa:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8021cae:	1c43      	adds	r3, r0, #1
 8021cb0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021cb4:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8021cb8:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8021cbc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021cc0:	b2c9      	uxtb	r1, r1
 8021cc2:	00db      	lsls	r3, r3, #3
 8021cc4:	fb01 f10e 	mul.w	r1, r1, lr
 8021cc8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021ccc:	4313      	orrs	r3, r2
 8021cce:	1c4a      	adds	r2, r1, #1
 8021cd0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021cd4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021cd8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8021cdc:	ea4c 0c03 	orr.w	ip, ip, r3
 8021ce0:	f8a7 c000 	strh.w	ip, [r7]
 8021ce4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021ce6:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021ce8:	441a      	add	r2, r3
 8021cea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021cec:	9225      	str	r2, [sp, #148]	; 0x94
 8021cee:	441d      	add	r5, r3
 8021cf0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021cf2:	3b01      	subs	r3, #1
 8021cf4:	3702      	adds	r7, #2
 8021cf6:	9317      	str	r3, [sp, #92]	; 0x5c
 8021cf8:	e699      	b.n	8021a2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021cfa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021cfc:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021cfe:	441c      	add	r4, r3
 8021d00:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021d02:	9425      	str	r4, [sp, #148]	; 0x94
 8021d04:	441d      	add	r5, r3
 8021d06:	9b07      	ldr	r3, [sp, #28]
 8021d08:	3b01      	subs	r3, #1
 8021d0a:	9307      	str	r3, [sp, #28]
 8021d0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021d0e:	3302      	adds	r3, #2
 8021d10:	930a      	str	r3, [sp, #40]	; 0x28
 8021d12:	e66b      	b.n	80219ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8021d14:	d024      	beq.n	8021d60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8021d16:	9b07      	ldr	r3, [sp, #28]
 8021d18:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8021d1a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021d1c:	3b01      	subs	r3, #1
 8021d1e:	fb00 4003 	mla	r0, r0, r3, r4
 8021d22:	1400      	asrs	r0, r0, #16
 8021d24:	f53f ae80 	bmi.w	8021a28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021d28:	3901      	subs	r1, #1
 8021d2a:	4288      	cmp	r0, r1
 8021d2c:	f6bf ae7c 	bge.w	8021a28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021d30:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021d32:	fb01 5303 	mla	r3, r1, r3, r5
 8021d36:	141b      	asrs	r3, r3, #16
 8021d38:	f53f ae76 	bmi.w	8021a28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021d3c:	3a01      	subs	r2, #1
 8021d3e:	4293      	cmp	r3, r2
 8021d40:	f6bf ae72 	bge.w	8021a28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021d44:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8021d48:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8021d4c:	f1bb 0f00 	cmp.w	fp, #0
 8021d50:	dc70      	bgt.n	8021e34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8021d52:	9b07      	ldr	r3, [sp, #28]
 8021d54:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021d58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021d5a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021d5e:	930a      	str	r3, [sp, #40]	; 0x28
 8021d60:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021d62:	2b00      	cmp	r3, #0
 8021d64:	f340 81ae 	ble.w	80220c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021d68:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021d6c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021d70:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021d74:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021d76:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021d7a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021d7e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021d82:	eef0 6a62 	vmov.f32	s13, s5
 8021d86:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021d8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021d8e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021d92:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8021d96:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021d9a:	eef0 6a43 	vmov.f32	s13, s6
 8021d9e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021da2:	ee12 2a90 	vmov	r2, s5
 8021da6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021daa:	fb92 f3f3 	sdiv	r3, r2, r3
 8021dae:	ee13 2a10 	vmov	r2, s6
 8021db2:	9327      	str	r3, [sp, #156]	; 0x9c
 8021db4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021db6:	fb92 f3f3 	sdiv	r3, r2, r3
 8021dba:	9328      	str	r3, [sp, #160]	; 0xa0
 8021dbc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021dbe:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8021dc0:	3b01      	subs	r3, #1
 8021dc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021dc6:	9316      	str	r3, [sp, #88]	; 0x58
 8021dc8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021dca:	bf08      	it	eq
 8021dcc:	4613      	moveq	r3, r2
 8021dce:	ee16 5a90 	vmov	r5, s13
 8021dd2:	9307      	str	r3, [sp, #28]
 8021dd4:	eeb0 3a67 	vmov.f32	s6, s15
 8021dd8:	eef0 2a47 	vmov.f32	s5, s14
 8021ddc:	e5f8      	b.n	80219d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8021dde:	2800      	cmp	r0, #0
 8021de0:	f43f ae6b 	beq.w	8021aba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021de4:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021de8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021dec:	9108      	str	r1, [sp, #32]
 8021dee:	0e09      	lsrs	r1, r1, #24
 8021df0:	9110      	str	r1, [sp, #64]	; 0x40
 8021df2:	e662      	b.n	8021aba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021df4:	f113 0801 	adds.w	r8, r3, #1
 8021df8:	f53f af74 	bmi.w	8021ce4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021dfc:	4541      	cmp	r1, r8
 8021dfe:	f6ff af71 	blt.w	8021ce4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021e02:	f11c 0801 	adds.w	r8, ip, #1
 8021e06:	f53f af6d 	bmi.w	8021ce4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021e0a:	45c6      	cmp	lr, r8
 8021e0c:	f6ff af6a 	blt.w	8021ce4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021e10:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8021e14:	b209      	sxth	r1, r1
 8021e16:	fa0f f38e 	sxth.w	r3, lr
 8021e1a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8021e1e:	9301      	str	r3, [sp, #4]
 8021e20:	9100      	str	r1, [sp, #0]
 8021e22:	4633      	mov	r3, r6
 8021e24:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021e26:	9819      	ldr	r0, [sp, #100]	; 0x64
 8021e28:	4639      	mov	r1, r7
 8021e2a:	f7ff fc7a 	bl	8021722 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8021e2e:	e759      	b.n	8021ce4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021e30:	fffff800 	.word	0xfffff800
 8021e34:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021e36:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021e38:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021e3c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021e3e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021e42:	1427      	asrs	r7, r4, #16
 8021e44:	142b      	asrs	r3, r5, #16
 8021e46:	fb01 7303 	mla	r3, r1, r3, r7
 8021e4a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021e4c:	18e7      	adds	r7, r4, r3
 8021e4e:	5ce3      	ldrb	r3, [r4, r3]
 8021e50:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021e54:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021e58:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021e5c:	2a00      	cmp	r2, #0
 8021e5e:	f000 8127 	beq.w	80220b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021e62:	f897 e001 	ldrb.w	lr, [r7, #1]
 8021e66:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8021e6a:	940d      	str	r4, [sp, #52]	; 0x34
 8021e6c:	0e24      	lsrs	r4, r4, #24
 8021e6e:	9414      	str	r4, [sp, #80]	; 0x50
 8021e70:	b170      	cbz	r0, 8021e90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8021e72:	eb07 0e01 	add.w	lr, r7, r1
 8021e76:	5c79      	ldrb	r1, [r7, r1]
 8021e78:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021e7c:	9109      	str	r1, [sp, #36]	; 0x24
 8021e7e:	0e09      	lsrs	r1, r1, #24
 8021e80:	9111      	str	r1, [sp, #68]	; 0x44
 8021e82:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8021e86:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021e8a:	910e      	str	r1, [sp, #56]	; 0x38
 8021e8c:	0e09      	lsrs	r1, r1, #24
 8021e8e:	9115      	str	r1, [sp, #84]	; 0x54
 8021e90:	b292      	uxth	r2, r2
 8021e92:	b280      	uxth	r0, r0
 8021e94:	fb02 f800 	mul.w	r8, r2, r0
 8021e98:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021e9c:	0112      	lsls	r2, r2, #4
 8021e9e:	eba2 0e08 	sub.w	lr, r2, r8
 8021ea2:	b280      	uxth	r0, r0
 8021ea4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8021ea8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8021eaa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021eac:	fa1f fe8e 	uxth.w	lr, lr
 8021eb0:	1a09      	subs	r1, r1, r0
 8021eb2:	b289      	uxth	r1, r1
 8021eb4:	fb0e f202 	mul.w	r2, lr, r2
 8021eb8:	fb01 220c 	mla	r2, r1, ip, r2
 8021ebc:	fb00 2204 	mla	r2, r0, r4, r2
 8021ec0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021ec2:	fb08 2204 	mla	r2, r8, r4, r2
 8021ec6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8021eca:	2a00      	cmp	r2, #0
 8021ecc:	f000 80e5 	beq.w	802209a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8021ed0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8021ed4:	d019      	beq.n	8021f0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8021ed6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021eda:	fb0c fa0a 	mul.w	sl, ip, sl
 8021ede:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021ee2:	fb0c fc03 	mul.w	ip, ip, r3
 8021ee6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021eea:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021eee:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021ef2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8021ef6:	4453      	add	r3, sl
 8021ef8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021efc:	0a1b      	lsrs	r3, r3, #8
 8021efe:	0a3f      	lsrs	r7, r7, #8
 8021f00:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021f04:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021f08:	433b      	orrs	r3, r7
 8021f0a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021f0c:	2cff      	cmp	r4, #255	; 0xff
 8021f0e:	d020      	beq.n	8021f52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8021f10:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021f12:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021f16:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021f18:	4367      	muls	r7, r4
 8021f1a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021f1c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021f20:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021f22:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021f26:	fb04 fa0a 	mul.w	sl, r4, sl
 8021f2a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021f2e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021f32:	44bc      	add	ip, r7
 8021f34:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021f38:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021f3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021f40:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021f44:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021f48:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021f4c:	ea4c 040a 	orr.w	r4, ip, sl
 8021f50:	940d      	str	r4, [sp, #52]	; 0x34
 8021f52:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021f54:	2cff      	cmp	r4, #255	; 0xff
 8021f56:	d020      	beq.n	8021f9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8021f58:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8021f5a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021f5e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021f60:	4367      	muls	r7, r4
 8021f62:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8021f64:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021f68:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021f6a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021f6e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021f72:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021f76:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021f7a:	44bc      	add	ip, r7
 8021f7c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021f80:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021f84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021f88:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021f8c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021f90:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021f94:	ea4c 040a 	orr.w	r4, ip, sl
 8021f98:	9409      	str	r4, [sp, #36]	; 0x24
 8021f9a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021f9c:	2cff      	cmp	r4, #255	; 0xff
 8021f9e:	d020      	beq.n	8021fe2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8021fa0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021fa2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021fa6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021fa8:	4367      	muls	r7, r4
 8021faa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021fac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021fb0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021fb2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021fb6:	fb04 fa0a 	mul.w	sl, r4, sl
 8021fba:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021fbe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021fc2:	44bc      	add	ip, r7
 8021fc4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021fc8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021fcc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021fd0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021fd4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021fd8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021fdc:	ea4c 040a 	orr.w	r4, ip, sl
 8021fe0:	940e      	str	r4, [sp, #56]	; 0x38
 8021fe2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021fe4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021fe8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8021fea:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8021fee:	fb0e f707 	mul.w	r7, lr, r7
 8021ff2:	fb01 770c 	mla	r7, r1, ip, r7
 8021ff6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021ffa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021ffc:	fb00 770c 	mla	r7, r0, ip, r7
 8022000:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022004:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022006:	fb08 770c 	mla	r7, r8, ip, r7
 802200a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802200e:	fb0e fe0c 	mul.w	lr, lr, ip
 8022012:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022016:	fb01 e303 	mla	r3, r1, r3, lr
 802201a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802201c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8022020:	990e      	ldr	r1, [sp, #56]	; 0x38
 8022022:	fb00 330a 	mla	r3, r0, sl, r3
 8022026:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802202a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802202e:	f8b9 3000 	ldrh.w	r3, [r9]
 8022032:	43d2      	mvns	r2, r2
 8022034:	1218      	asrs	r0, r3, #8
 8022036:	b2d2      	uxtb	r2, r2
 8022038:	10d9      	asrs	r1, r3, #3
 802203a:	0a3f      	lsrs	r7, r7, #8
 802203c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022040:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022044:	00db      	lsls	r3, r3, #3
 8022046:	4350      	muls	r0, r2
 8022048:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802204c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022050:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022054:	b2db      	uxtb	r3, r3
 8022056:	ea47 070c 	orr.w	r7, r7, ip
 802205a:	4351      	muls	r1, r2
 802205c:	4353      	muls	r3, r2
 802205e:	1c42      	adds	r2, r0, #1
 8022060:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022064:	0c3a      	lsrs	r2, r7, #16
 8022066:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802206a:	4a18      	ldr	r2, [pc, #96]	; (80220cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 802206c:	b2c0      	uxtb	r0, r0
 802206e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8022072:	1c4a      	adds	r2, r1, #1
 8022074:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022078:	0a3a      	lsrs	r2, r7, #8
 802207a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802207e:	00c9      	lsls	r1, r1, #3
 8022080:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022084:	4301      	orrs	r1, r0
 8022086:	1c58      	adds	r0, r3, #1
 8022088:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802208c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022090:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8022094:	4308      	orrs	r0, r1
 8022096:	f8a9 0000 	strh.w	r0, [r9]
 802209a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802209c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802209e:	441a      	add	r2, r3
 80220a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80220a2:	9225      	str	r2, [sp, #148]	; 0x94
 80220a4:	f109 0902 	add.w	r9, r9, #2
 80220a8:	441d      	add	r5, r3
 80220aa:	f10b 3bff 	add.w	fp, fp, #4294967295
 80220ae:	e64d      	b.n	8021d4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80220b0:	2800      	cmp	r0, #0
 80220b2:	f43f aeed 	beq.w	8021e90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80220b6:	5c79      	ldrb	r1, [r7, r1]
 80220b8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80220bc:	9109      	str	r1, [sp, #36]	; 0x24
 80220be:	0e09      	lsrs	r1, r1, #24
 80220c0:	9111      	str	r1, [sp, #68]	; 0x44
 80220c2:	e6e5      	b.n	8021e90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80220c4:	b01b      	add	sp, #108	; 0x6c
 80220c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80220ca:	bf00      	nop
 80220cc:	fffff800 	.word	0xfffff800

080220d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80220d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80220d4:	b085      	sub	sp, #20
 80220d6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80220da:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80220de:	9103      	str	r1, [sp, #12]
 80220e0:	fb00 7406 	mla	r4, r0, r6, r7
 80220e4:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 80220e8:	2800      	cmp	r0, #0
 80220ea:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80220ee:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 80220f2:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80220f6:	9501      	str	r5, [sp, #4]
 80220f8:	eb03 0904 	add.w	r9, r3, r4
 80220fc:	f2c0 8150 	blt.w	80223a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022100:	4583      	cmp	fp, r0
 8022102:	f340 814d 	ble.w	80223a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022106:	2f00      	cmp	r7, #0
 8022108:	f2c0 8146 	blt.w	8022398 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802210c:	42be      	cmp	r6, r7
 802210e:	f340 8143 	ble.w	8022398 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022112:	f813 c004 	ldrb.w	ip, [r3, r4]
 8022116:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 802211a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802211e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022122:	4355      	muls	r5, r2
 8022124:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022128:	f64f 041f 	movw	r4, #63519	; 0xf81f
 802212c:	fb0c f203 	mul.w	r2, ip, r3
 8022130:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022134:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022138:	441d      	add	r5, r3
 802213a:	f102 0320 	add.w	r3, r2, #32
 802213e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022142:	0a1b      	lsrs	r3, r3, #8
 8022144:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022148:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802214c:	431c      	orrs	r4, r3
 802214e:	1c7b      	adds	r3, r7, #1
 8022150:	f100 812b 	bmi.w	80223aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8022154:	429e      	cmp	r6, r3
 8022156:	f340 8128 	ble.w	80223aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 802215a:	2900      	cmp	r1, #0
 802215c:	f000 8128 	beq.w	80223b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8022160:	9a01      	ldr	r2, [sp, #4]
 8022162:	f899 3001 	ldrb.w	r3, [r9, #1]
 8022166:	8855      	ldrh	r5, [r2, #2]
 8022168:	ea4f 08e3 	mov.w	r8, r3, asr #3
 802216c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022170:	fb08 f802 	mul.w	r8, r8, r2
 8022174:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022178:	f64f 021f 	movw	r2, #63519	; 0xf81f
 802217c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022180:	435d      	muls	r5, r3
 8022182:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022186:	44d0      	add	r8, sl
 8022188:	f105 0a20 	add.w	sl, r5, #32
 802218c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022190:	0a2d      	lsrs	r5, r5, #8
 8022192:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022196:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802219a:	432a      	orrs	r2, r5
 802219c:	3001      	adds	r0, #1
 802219e:	f100 810d 	bmi.w	80223bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80221a2:	4583      	cmp	fp, r0
 80221a4:	f340 810a 	ble.w	80223bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80221a8:	f1be 0f00 	cmp.w	lr, #0
 80221ac:	f000 810b 	beq.w	80223c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80221b0:	2f00      	cmp	r7, #0
 80221b2:	f2c0 8100 	blt.w	80223b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80221b6:	42be      	cmp	r6, r7
 80221b8:	f340 80fd 	ble.w	80223b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80221bc:	9801      	ldr	r0, [sp, #4]
 80221be:	f819 5006 	ldrb.w	r5, [r9, r6]
 80221c2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80221c6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80221ca:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80221ce:	fb0a fa00 	mul.w	sl, sl, r0
 80221d2:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80221d6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80221da:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80221de:	fb05 f808 	mul.w	r8, r5, r8
 80221e2:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80221e6:	4482      	add	sl, r0
 80221e8:	f108 0020 	add.w	r0, r8, #32
 80221ec:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80221f0:	0a00      	lsrs	r0, r0, #8
 80221f2:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80221f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80221fa:	ea4b 0b00 	orr.w	fp, fp, r0
 80221fe:	3701      	adds	r7, #1
 8022200:	f100 80e6 	bmi.w	80223d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8022204:	42be      	cmp	r6, r7
 8022206:	f340 80e3 	ble.w	80223d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802220a:	2900      	cmp	r1, #0
 802220c:	f000 80e3 	beq.w	80223d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8022210:	3601      	adds	r6, #1
 8022212:	9801      	ldr	r0, [sp, #4]
 8022214:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022218:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 802221c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022220:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022224:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022228:	fb09 f906 	mul.w	r9, r9, r6
 802222c:	fb07 f800 	mul.w	r8, r7, r0
 8022230:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022234:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022238:	f609 0901 	addw	r9, r9, #2049	; 0x801
 802223c:	44d1      	add	r9, sl
 802223e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022242:	f108 0020 	add.w	r0, r8, #32
 8022246:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802224a:	0a00      	lsrs	r0, r0, #8
 802224c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022250:	4330      	orrs	r0, r6
 8022252:	b28e      	uxth	r6, r1
 8022254:	fa1f f98e 	uxth.w	r9, lr
 8022258:	fb06 f809 	mul.w	r8, r6, r9
 802225c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022260:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022264:	0136      	lsls	r6, r6, #4
 8022266:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802226a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802226e:	9601      	str	r6, [sp, #4]
 8022270:	ea4a 0404 	orr.w	r4, sl, r4
 8022274:	fa1f f689 	uxth.w	r6, r9
 8022278:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802227c:	fb11 f90e 	smulbb	r9, r1, lr
 8022280:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022284:	9602      	str	r6, [sp, #8]
 8022286:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802228a:	4626      	mov	r6, r4
 802228c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022290:	f1ce 0410 	rsb	r4, lr, #16
 8022294:	1a64      	subs	r4, r4, r1
 8022296:	ea4a 0202 	orr.w	r2, sl, r2
 802229a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802229e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80222a2:	434a      	muls	r2, r1
 80222a4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80222a8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80222ac:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80222b0:	fb04 2406 	mla	r4, r4, r6, r2
 80222b4:	ea4a 0000 	orr.w	r0, sl, r0
 80222b8:	fb09 4200 	mla	r2, r9, r0, r4
 80222bc:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80222c0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80222c4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80222c8:	ea44 0b0b 	orr.w	fp, r4, fp
 80222cc:	9c01      	ldr	r4, [sp, #4]
 80222ce:	9e02      	ldr	r6, [sp, #8]
 80222d0:	9903      	ldr	r1, [sp, #12]
 80222d2:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80222d6:	1ba4      	subs	r4, r4, r6
 80222d8:	9e01      	ldr	r6, [sp, #4]
 80222da:	8808      	ldrh	r0, [r1, #0]
 80222dc:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80222e0:	eba6 0608 	sub.w	r6, r6, r8
 80222e4:	b2b6      	uxth	r6, r6
 80222e6:	b2a4      	uxth	r4, r4
 80222e8:	4373      	muls	r3, r6
 80222ea:	fb0c 3304 	mla	r3, ip, r4, r3
 80222ee:	9c02      	ldr	r4, [sp, #8]
 80222f0:	fb04 3505 	mla	r5, r4, r5, r3
 80222f4:	fb08 5707 	mla	r7, r8, r7, r5
 80222f8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80222fc:	b289      	uxth	r1, r1
 80222fe:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022302:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8022306:	434f      	muls	r7, r1
 8022308:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802230c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022310:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022314:	1c7b      	adds	r3, r7, #1
 8022316:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802231a:	ea42 0e0e 	orr.w	lr, r2, lr
 802231e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8022322:	fa1f f28e 	uxth.w	r2, lr
 8022326:	1203      	asrs	r3, r0, #8
 8022328:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 802232c:	b2ff      	uxtb	r7, r7
 802232e:	1215      	asrs	r5, r2, #8
 8022330:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022334:	fb13 f307 	smulbb	r3, r3, r7
 8022338:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802233c:	fb05 3501 	mla	r5, r5, r1, r3
 8022340:	10c3      	asrs	r3, r0, #3
 8022342:	10d4      	asrs	r4, r2, #3
 8022344:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022348:	fb13 f307 	smulbb	r3, r3, r7
 802234c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8022350:	fb04 3401 	mla	r4, r4, r1, r3
 8022354:	00c3      	lsls	r3, r0, #3
 8022356:	00d2      	lsls	r2, r2, #3
 8022358:	b2db      	uxtb	r3, r3
 802235a:	fb13 f307 	smulbb	r3, r3, r7
 802235e:	b2d2      	uxtb	r2, r2
 8022360:	fb02 3101 	mla	r1, r2, r1, r3
 8022364:	b2ad      	uxth	r5, r5
 8022366:	b289      	uxth	r1, r1
 8022368:	b2a4      	uxth	r4, r4
 802236a:	1c6b      	adds	r3, r5, #1
 802236c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022370:	1c62      	adds	r2, r4, #1
 8022372:	1c4b      	adds	r3, r1, #1
 8022374:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022378:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802237c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022380:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022384:	0964      	lsrs	r4, r4, #5
 8022386:	432b      	orrs	r3, r5
 8022388:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802238c:	9a03      	ldr	r2, [sp, #12]
 802238e:	4323      	orrs	r3, r4
 8022390:	8013      	strh	r3, [r2, #0]
 8022392:	b005      	add	sp, #20
 8022394:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022398:	f04f 0c00 	mov.w	ip, #0
 802239c:	4664      	mov	r4, ip
 802239e:	e6d6      	b.n	802214e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80223a0:	2300      	movs	r3, #0
 80223a2:	469c      	mov	ip, r3
 80223a4:	461a      	mov	r2, r3
 80223a6:	461c      	mov	r4, r3
 80223a8:	e6f8      	b.n	802219c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80223aa:	2300      	movs	r3, #0
 80223ac:	461a      	mov	r2, r3
 80223ae:	e6f5      	b.n	802219c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80223b0:	460b      	mov	r3, r1
 80223b2:	460a      	mov	r2, r1
 80223b4:	e6f2      	b.n	802219c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80223b6:	2500      	movs	r5, #0
 80223b8:	46ab      	mov	fp, r5
 80223ba:	e720      	b.n	80221fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80223bc:	2700      	movs	r7, #0
 80223be:	463d      	mov	r5, r7
 80223c0:	4638      	mov	r0, r7
 80223c2:	46bb      	mov	fp, r7
 80223c4:	e745      	b.n	8022252 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80223c6:	4677      	mov	r7, lr
 80223c8:	4675      	mov	r5, lr
 80223ca:	4670      	mov	r0, lr
 80223cc:	46f3      	mov	fp, lr
 80223ce:	e740      	b.n	8022252 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80223d0:	2700      	movs	r7, #0
 80223d2:	4638      	mov	r0, r7
 80223d4:	e73d      	b.n	8022252 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80223d6:	460f      	mov	r7, r1
 80223d8:	4608      	mov	r0, r1
 80223da:	e73a      	b.n	8022252 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080223dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80223dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80223e0:	b097      	sub	sp, #92	; 0x5c
 80223e2:	9214      	str	r2, [sp, #80]	; 0x50
 80223e4:	9308      	str	r3, [sp, #32]
 80223e6:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80223e8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80223ec:	9312      	str	r3, [sp, #72]	; 0x48
 80223ee:	9111      	str	r1, [sp, #68]	; 0x44
 80223f0:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80223f4:	9015      	str	r0, [sp, #84]	; 0x54
 80223f6:	6850      	ldr	r0, [r2, #4]
 80223f8:	6812      	ldr	r2, [r2, #0]
 80223fa:	fb00 1303 	mla	r3, r0, r3, r1
 80223fe:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022402:	9309      	str	r3, [sp, #36]	; 0x24
 8022404:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022406:	681b      	ldr	r3, [r3, #0]
 8022408:	930b      	str	r3, [sp, #44]	; 0x2c
 802240a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802240c:	685b      	ldr	r3, [r3, #4]
 802240e:	930c      	str	r3, [sp, #48]	; 0x30
 8022410:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8022414:	930a      	str	r3, [sp, #40]	; 0x28
 8022416:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022418:	2b00      	cmp	r3, #0
 802241a:	dc03      	bgt.n	8022424 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802241c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802241e:	2b00      	cmp	r3, #0
 8022420:	f340 83cb 	ble.w	8022bba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8022424:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022426:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802242a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802242e:	1e48      	subs	r0, r1, #1
 8022430:	1e55      	subs	r5, r2, #1
 8022432:	9b08      	ldr	r3, [sp, #32]
 8022434:	2b00      	cmp	r3, #0
 8022436:	f340 81a3 	ble.w	8022780 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 802243a:	9e21      	ldr	r6, [sp, #132]	; 0x84
 802243c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802243e:	1436      	asrs	r6, r6, #16
 8022440:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022444:	d406      	bmi.n	8022454 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022446:	4286      	cmp	r6, r0
 8022448:	da04      	bge.n	8022454 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802244a:	2b00      	cmp	r3, #0
 802244c:	db02      	blt.n	8022454 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802244e:	42ab      	cmp	r3, r5
 8022450:	f2c0 8197 	blt.w	8022782 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022454:	3601      	adds	r6, #1
 8022456:	f100 8184 	bmi.w	8022762 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802245a:	42b1      	cmp	r1, r6
 802245c:	f2c0 8181 	blt.w	8022762 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022460:	3301      	adds	r3, #1
 8022462:	f100 817e 	bmi.w	8022762 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022466:	429a      	cmp	r2, r3
 8022468:	f2c0 817b 	blt.w	8022762 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802246c:	9b08      	ldr	r3, [sp, #32]
 802246e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8022470:	9313      	str	r3, [sp, #76]	; 0x4c
 8022472:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022476:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022478:	2b00      	cmp	r3, #0
 802247a:	f340 81a4 	ble.w	80227c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802247e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022480:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8022482:	1418      	asrs	r0, r3, #16
 8022484:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022486:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802248a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802248c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8022490:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022492:	142d      	asrs	r5, r5, #16
 8022494:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8022498:	f100 81f8 	bmi.w	802288c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802249c:	f102 3eff 	add.w	lr, r2, #4294967295
 80224a0:	4575      	cmp	r5, lr
 80224a2:	f280 81f3 	bge.w	802288c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80224a6:	2800      	cmp	r0, #0
 80224a8:	f2c0 81f0 	blt.w	802288c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80224ac:	f103 3eff 	add.w	lr, r3, #4294967295
 80224b0:	4570      	cmp	r0, lr
 80224b2:	f280 81eb 	bge.w	802288c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80224b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80224b8:	b212      	sxth	r2, r2
 80224ba:	fb00 5002 	mla	r0, r0, r2, r5
 80224be:	fa1f fe81 	uxth.w	lr, r1
 80224c2:	eb03 0a00 	add.w	sl, r3, r0
 80224c6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80224ca:	f813 9000 	ldrb.w	r9, [r3, r0]
 80224ce:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80224d2:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80224d6:	b29b      	uxth	r3, r3
 80224d8:	f1bc 0f00 	cmp.w	ip, #0
 80224dc:	f000 81b9 	beq.w	8022852 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80224e0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80224e4:	940d      	str	r4, [sp, #52]	; 0x34
 80224e6:	eb0a 0b02 	add.w	fp, sl, r2
 80224ea:	fa1f fa8c 	uxth.w	sl, ip
 80224ee:	fb0a fe0e 	mul.w	lr, sl, lr
 80224f2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80224f6:	fa1f fa8a 	uxth.w	sl, sl
 80224fa:	eba5 050e 	sub.w	r5, r5, lr
 80224fe:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022502:	940e      	str	r4, [sp, #56]	; 0x38
 8022504:	eba3 030a 	sub.w	r3, r3, sl
 8022508:	b2ad      	uxth	r5, r5
 802250a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802250c:	b29b      	uxth	r3, r3
 802250e:	fb08 f505 	mul.w	r5, r8, r5
 8022512:	fb09 5303 	mla	r3, r9, r3, r5
 8022516:	fb0a 3304 	mla	r3, sl, r4, r3
 802251a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802251c:	fb0e 3304 	mla	r3, lr, r4, r3
 8022520:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022524:	2b00      	cmp	r3, #0
 8022526:	f000 810f 	beq.w	8022748 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802252a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802252c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022530:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8022534:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022538:	f000 8190 	beq.w	802285c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 802253c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022540:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022544:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022548:	fb09 f000 	mul.w	r0, r9, r0
 802254c:	fb0a fe0e 	mul.w	lr, sl, lr
 8022550:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8022554:	f100 0b20 	add.w	fp, r0, #32
 8022558:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802255c:	44ce      	add	lr, r9
 802255e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8022562:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022566:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802256a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802256e:	ea4e 0909 	orr.w	r9, lr, r9
 8022572:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022576:	8868      	ldrh	r0, [r5, #2]
 8022578:	d019      	beq.n	80225ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 802257a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802257e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022582:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022586:	fb08 f800 	mul.w	r8, r8, r0
 802258a:	fb0a fe0e 	mul.w	lr, sl, lr
 802258e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8022592:	f108 0b20 	add.w	fp, r8, #32
 8022596:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802259a:	4486      	add	lr, r0
 802259c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80225a0:	0a00      	lsrs	r0, r0, #8
 80225a2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80225a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80225aa:	ea4e 0000 	orr.w	r0, lr, r0
 80225ae:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80225b2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80225b6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80225ba:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80225be:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80225c2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80225c6:	ea4e 0909 	orr.w	r9, lr, r9
 80225ca:	ea4a 0000 	orr.w	r0, sl, r0
 80225ce:	f1bc 0f00 	cmp.w	ip, #0
 80225d2:	f000 8145 	beq.w	8022860 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80225d6:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80225da:	3a01      	subs	r2, #1
 80225dc:	0052      	lsls	r2, r2, #1
 80225de:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80225e0:	3202      	adds	r2, #2
 80225e2:	2cff      	cmp	r4, #255	; 0xff
 80225e4:	eb05 0e02 	add.w	lr, r5, r2
 80225e8:	5aaa      	ldrh	r2, [r5, r2]
 80225ea:	d018      	beq.n	802261e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80225ec:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80225f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80225f4:	fb04 fa02 	mul.w	sl, r4, r2
 80225f8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80225fc:	fb08 f805 	mul.w	r8, r8, r5
 8022600:	f10a 0520 	add.w	r5, sl, #32
 8022604:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8022608:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802260c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022610:	4442      	add	r2, r8
 8022612:	0a2d      	lsrs	r5, r5, #8
 8022614:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022618:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802261c:	432a      	orrs	r2, r5
 802261e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022620:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8022624:	2cff      	cmp	r4, #255	; 0xff
 8022626:	d01a      	beq.n	802265e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8022628:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 802262c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022630:	fb04 fa05 	mul.w	sl, r4, r5
 8022634:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022638:	fb08 f80e 	mul.w	r8, r8, lr
 802263c:	f10a 0e20 	add.w	lr, sl, #32
 8022640:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8022644:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022648:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802264c:	4445      	add	r5, r8
 802264e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022652:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8022656:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802265a:	ea45 050e 	orr.w	r5, r5, lr
 802265e:	fb1c fe01 	smulbb	lr, ip, r1
 8022662:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8022666:	f1cc 0810 	rsb	r8, ip, #16
 802266a:	eba8 0801 	sub.w	r8, r8, r1
 802266e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022672:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8022676:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802267a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802267e:	4341      	muls	r1, r0
 8022680:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022684:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022688:	ea4a 0202 	orr.w	r2, sl, r2
 802268c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8022690:	fb09 1108 	mla	r1, r9, r8, r1
 8022694:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022698:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802269c:	fb0c 1102 	mla	r1, ip, r2, r1
 80226a0:	ea4b 0505 	orr.w	r5, fp, r5
 80226a4:	fb0e 1e05 	mla	lr, lr, r5, r1
 80226a8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80226ac:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80226b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80226b4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80226b8:	ea42 0e0e 	orr.w	lr, r2, lr
 80226bc:	fa1f f28e 	uxth.w	r2, lr
 80226c0:	2bff      	cmp	r3, #255	; 0xff
 80226c2:	d103      	bne.n	80226cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80226c4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80226c6:	29ff      	cmp	r1, #255	; 0xff
 80226c8:	f000 80de 	beq.w	8022888 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80226cc:	990a      	ldr	r1, [sp, #40]	; 0x28
 80226ce:	8838      	ldrh	r0, [r7, #0]
 80226d0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80226d2:	434b      	muls	r3, r1
 80226d4:	f103 0c01 	add.w	ip, r3, #1
 80226d8:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80226dc:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80226e0:	fa5f fc83 	uxtb.w	ip, r3
 80226e4:	1203      	asrs	r3, r0, #8
 80226e6:	1215      	asrs	r5, r2, #8
 80226e8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80226ec:	fb13 f30c 	smulbb	r3, r3, ip
 80226f0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80226f4:	fb05 3501 	mla	r5, r5, r1, r3
 80226f8:	10c3      	asrs	r3, r0, #3
 80226fa:	10d1      	asrs	r1, r2, #3
 80226fc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022700:	fb13 f30c 	smulbb	r3, r3, ip
 8022704:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022708:	fb01 3104 	mla	r1, r1, r4, r3
 802270c:	00c3      	lsls	r3, r0, #3
 802270e:	00d2      	lsls	r2, r2, #3
 8022710:	b2db      	uxtb	r3, r3
 8022712:	b2d2      	uxtb	r2, r2
 8022714:	fb13 f30c 	smulbb	r3, r3, ip
 8022718:	b2ad      	uxth	r5, r5
 802271a:	fb02 3304 	mla	r3, r2, r4, r3
 802271e:	b29a      	uxth	r2, r3
 8022720:	1c6b      	adds	r3, r5, #1
 8022722:	b289      	uxth	r1, r1
 8022724:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022728:	1c53      	adds	r3, r2, #1
 802272a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802272e:	1c4a      	adds	r2, r1, #1
 8022730:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022734:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022738:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802273c:	0949      	lsrs	r1, r1, #5
 802273e:	432b      	orrs	r3, r5
 8022740:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022744:	430b      	orrs	r3, r1
 8022746:	803b      	strh	r3, [r7, #0]
 8022748:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802274a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 802274c:	4413      	add	r3, r2
 802274e:	9321      	str	r3, [sp, #132]	; 0x84
 8022750:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8022752:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022754:	441a      	add	r2, r3
 8022756:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022758:	9222      	str	r2, [sp, #136]	; 0x88
 802275a:	3b01      	subs	r3, #1
 802275c:	3702      	adds	r7, #2
 802275e:	9313      	str	r3, [sp, #76]	; 0x4c
 8022760:	e689      	b.n	8022476 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8022762:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022764:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8022766:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8022768:	4433      	add	r3, r6
 802276a:	9321      	str	r3, [sp, #132]	; 0x84
 802276c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802276e:	441c      	add	r4, r3
 8022770:	9b08      	ldr	r3, [sp, #32]
 8022772:	9422      	str	r4, [sp, #136]	; 0x88
 8022774:	3b01      	subs	r3, #1
 8022776:	9308      	str	r3, [sp, #32]
 8022778:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802277a:	3302      	adds	r3, #2
 802277c:	9309      	str	r3, [sp, #36]	; 0x24
 802277e:	e658      	b.n	8022432 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8022780:	d028      	beq.n	80227d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8022782:	9b08      	ldr	r3, [sp, #32]
 8022784:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8022786:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8022788:	3b01      	subs	r3, #1
 802278a:	fb00 5003 	mla	r0, r0, r3, r5
 802278e:	1400      	asrs	r0, r0, #16
 8022790:	f53f ae6c 	bmi.w	802246c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022794:	3901      	subs	r1, #1
 8022796:	4288      	cmp	r0, r1
 8022798:	f6bf ae68 	bge.w	802246c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802279c:	9924      	ldr	r1, [sp, #144]	; 0x90
 802279e:	9822      	ldr	r0, [sp, #136]	; 0x88
 80227a0:	fb01 0303 	mla	r3, r1, r3, r0
 80227a4:	141b      	asrs	r3, r3, #16
 80227a6:	f53f ae61 	bmi.w	802246c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80227aa:	3a01      	subs	r2, #1
 80227ac:	4293      	cmp	r3, r2
 80227ae:	f6bf ae5d 	bge.w	802246c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80227b2:	9b08      	ldr	r3, [sp, #32]
 80227b4:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80227b8:	9313      	str	r3, [sp, #76]	; 0x4c
 80227ba:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80227be:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80227c0:	2b00      	cmp	r3, #0
 80227c2:	f300 8082 	bgt.w	80228ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80227c6:	9b08      	ldr	r3, [sp, #32]
 80227c8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80227cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80227ce:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80227d2:	9309      	str	r3, [sp, #36]	; 0x24
 80227d4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80227d6:	2b00      	cmp	r3, #0
 80227d8:	f340 81ef 	ble.w	8022bba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80227dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80227e0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80227e4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80227e8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80227ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80227ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 80227f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80227f6:	eef0 6a62 	vmov.f32	s13, s5
 80227fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80227fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022802:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022806:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 802280a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802280e:	eef0 6a43 	vmov.f32	s13, s6
 8022812:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022816:	ee12 2a90 	vmov	r2, s5
 802281a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802281e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022822:	ee13 2a10 	vmov	r2, s6
 8022826:	9323      	str	r3, [sp, #140]	; 0x8c
 8022828:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802282a:	fb92 f3f3 	sdiv	r3, r2, r3
 802282e:	9324      	str	r3, [sp, #144]	; 0x90
 8022830:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022832:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022834:	3b01      	subs	r3, #1
 8022836:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802283a:	9311      	str	r3, [sp, #68]	; 0x44
 802283c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802283e:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8022842:	bf08      	it	eq
 8022844:	4613      	moveq	r3, r2
 8022846:	9308      	str	r3, [sp, #32]
 8022848:	eeb0 3a67 	vmov.f32	s6, s15
 802284c:	eef0 2a47 	vmov.f32	s5, s14
 8022850:	e5e1      	b.n	8022416 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022852:	fb08 f505 	mul.w	r5, r8, r5
 8022856:	fb09 5303 	mla	r3, r9, r3, r5
 802285a:	e661      	b.n	8022520 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802285c:	4681      	mov	r9, r0
 802285e:	e688      	b.n	8022572 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8022860:	f1c1 0210 	rsb	r2, r1, #16
 8022864:	4341      	muls	r1, r0
 8022866:	fb09 1902 	mla	r9, r9, r2, r1
 802286a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802286e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022872:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022876:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802287a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802287e:	ea42 0909 	orr.w	r9, r2, r9
 8022882:	fa1f f289 	uxth.w	r2, r9
 8022886:	e71b      	b.n	80226c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8022888:	803a      	strh	r2, [r7, #0]
 802288a:	e75d      	b.n	8022748 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802288c:	f115 0e01 	adds.w	lr, r5, #1
 8022890:	f53f af5a 	bmi.w	8022748 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022894:	4572      	cmp	r2, lr
 8022896:	f6ff af57 	blt.w	8022748 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802289a:	f110 0e01 	adds.w	lr, r0, #1
 802289e:	f53f af53 	bmi.w	8022748 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80228a2:	4573      	cmp	r3, lr
 80228a4:	f6ff af50 	blt.w	8022748 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80228a8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80228aa:	9502      	str	r5, [sp, #8]
 80228ac:	b21b      	sxth	r3, r3
 80228ae:	b212      	sxth	r2, r2
 80228b0:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80228b4:	9301      	str	r3, [sp, #4]
 80228b6:	9200      	str	r2, [sp, #0]
 80228b8:	e9cd c405 	strd	ip, r4, [sp, #20]
 80228bc:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 80228c0:	4639      	mov	r1, r7
 80228c2:	9815      	ldr	r0, [sp, #84]	; 0x54
 80228c4:	f7ff fc04 	bl	80220d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80228c8:	e73e      	b.n	8022748 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80228ca:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80228cc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80228d0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80228d2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80228d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80228d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80228dc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80228de:	141f      	asrs	r7, r3, #16
 80228e0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80228e2:	141b      	asrs	r3, r3, #16
 80228e4:	fb01 3707 	mla	r7, r1, r7, r3
 80228e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80228ea:	fa1f fc82 	uxth.w	ip, r2
 80228ee:	eb03 0a07 	add.w	sl, r3, r7
 80228f2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80228f6:	f813 9007 	ldrb.w	r9, [r3, r7]
 80228fa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80228fe:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022902:	b29b      	uxth	r3, r3
 8022904:	2d00      	cmp	r5, #0
 8022906:	f000 813d 	beq.w	8022b84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 802290a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802290e:	940f      	str	r4, [sp, #60]	; 0x3c
 8022910:	eb0a 0b01 	add.w	fp, sl, r1
 8022914:	fa1f fa85 	uxth.w	sl, r5
 8022918:	fb0a fc0c 	mul.w	ip, sl, ip
 802291c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022920:	fa1f fa8a 	uxth.w	sl, sl
 8022924:	eba0 000c 	sub.w	r0, r0, ip
 8022928:	eba3 030a 	sub.w	r3, r3, sl
 802292c:	b280      	uxth	r0, r0
 802292e:	fb08 f000 	mul.w	r0, r8, r0
 8022932:	b29b      	uxth	r3, r3
 8022934:	fb09 0303 	mla	r3, r9, r3, r0
 8022938:	980f      	ldr	r0, [sp, #60]	; 0x3c
 802293a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802293e:	9410      	str	r4, [sp, #64]	; 0x40
 8022940:	fb0a 3300 	mla	r3, sl, r0, r3
 8022944:	fb0c 3304 	mla	r3, ip, r4, r3
 8022948:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802294c:	2b00      	cmp	r3, #0
 802294e:	f000 810b 	beq.w	8022b68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022952:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8022954:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022956:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802295a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802295e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022962:	f000 8114 	beq.w	8022b8e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8022966:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802296a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802296e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022972:	fb09 f707 	mul.w	r7, r9, r7
 8022976:	fb0a fc0c 	mul.w	ip, sl, ip
 802297a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802297e:	f107 0b20 	add.w	fp, r7, #32
 8022982:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022986:	44cc      	add	ip, r9
 8022988:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 802298c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022990:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022994:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022998:	ea4c 0909 	orr.w	r9, ip, r9
 802299c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80229a0:	8847      	ldrh	r7, [r0, #2]
 80229a2:	d019      	beq.n	80229d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 80229a4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80229a8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80229ac:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80229b0:	fb08 f807 	mul.w	r8, r8, r7
 80229b4:	fb0a fc0c 	mul.w	ip, sl, ip
 80229b8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80229bc:	f108 0b20 	add.w	fp, r8, #32
 80229c0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80229c4:	44bc      	add	ip, r7
 80229c6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80229ca:	0a3f      	lsrs	r7, r7, #8
 80229cc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80229d0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80229d4:	ea4c 0707 	orr.w	r7, ip, r7
 80229d8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80229dc:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80229e0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80229e4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80229e8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80229ec:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80229f0:	ea4c 0909 	orr.w	r9, ip, r9
 80229f4:	ea4a 0707 	orr.w	r7, sl, r7
 80229f8:	2d00      	cmp	r5, #0
 80229fa:	f000 80ca 	beq.w	8022b92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 80229fe:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022a02:	3901      	subs	r1, #1
 8022a04:	0049      	lsls	r1, r1, #1
 8022a06:	3102      	adds	r1, #2
 8022a08:	eb00 0c01 	add.w	ip, r0, r1
 8022a0c:	5a41      	ldrh	r1, [r0, r1]
 8022a0e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022a10:	28ff      	cmp	r0, #255	; 0xff
 8022a12:	d019      	beq.n	8022a48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8022a14:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022a16:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022a1a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022a1e:	fb04 fa01 	mul.w	sl, r4, r1
 8022a22:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022a26:	fb08 f800 	mul.w	r8, r8, r0
 8022a2a:	f10a 0020 	add.w	r0, sl, #32
 8022a2e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022a32:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022a36:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022a3a:	4441      	add	r1, r8
 8022a3c:	0a00      	lsrs	r0, r0, #8
 8022a3e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022a42:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022a46:	4301      	orrs	r1, r0
 8022a48:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022a4a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022a4e:	2cff      	cmp	r4, #255	; 0xff
 8022a50:	d01a      	beq.n	8022a88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8022a52:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022a56:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022a5a:	fb04 fa00 	mul.w	sl, r4, r0
 8022a5e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022a62:	fb08 f80c 	mul.w	r8, r8, ip
 8022a66:	f10a 0c20 	add.w	ip, sl, #32
 8022a6a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022a6e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022a72:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022a76:	4440      	add	r0, r8
 8022a78:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022a7c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022a80:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022a84:	ea40 000c 	orr.w	r0, r0, ip
 8022a88:	fb15 fc02 	smulbb	ip, r5, r2
 8022a8c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022a90:	f1c5 0810 	rsb	r8, r5, #16
 8022a94:	eba8 0802 	sub.w	r8, r8, r2
 8022a98:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022a9c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022aa0:	437a      	muls	r2, r7
 8022aa2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022aa6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022aaa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022aae:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022ab2:	fb09 2208 	mla	r2, r9, r8, r2
 8022ab6:	ea4a 0101 	orr.w	r1, sl, r1
 8022aba:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022abe:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022ac2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022ac6:	fb05 2201 	mla	r2, r5, r1, r2
 8022aca:	ea4b 0000 	orr.w	r0, fp, r0
 8022ace:	fb0c 2200 	mla	r2, ip, r0, r2
 8022ad2:	0d57      	lsrs	r7, r2, #21
 8022ad4:	0952      	lsrs	r2, r2, #5
 8022ad6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022ada:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022ade:	433a      	orrs	r2, r7
 8022ae0:	2bff      	cmp	r3, #255	; 0xff
 8022ae2:	b292      	uxth	r2, r2
 8022ae4:	d102      	bne.n	8022aec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022ae6:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022ae8:	29ff      	cmp	r1, #255	; 0xff
 8022aea:	d063      	beq.n	8022bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8022aec:	980a      	ldr	r0, [sp, #40]	; 0x28
 8022aee:	f8be 1000 	ldrh.w	r1, [lr]
 8022af2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022af4:	4343      	muls	r3, r0
 8022af6:	1c58      	adds	r0, r3, #1
 8022af8:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8022afc:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022b00:	1208      	asrs	r0, r1, #8
 8022b02:	b2db      	uxtb	r3, r3
 8022b04:	1215      	asrs	r5, r2, #8
 8022b06:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022b0a:	fb10 f003 	smulbb	r0, r0, r3
 8022b0e:	10cf      	asrs	r7, r1, #3
 8022b10:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022b14:	00c9      	lsls	r1, r1, #3
 8022b16:	fb05 0504 	mla	r5, r5, r4, r0
 8022b1a:	b2c9      	uxtb	r1, r1
 8022b1c:	10d0      	asrs	r0, r2, #3
 8022b1e:	00d2      	lsls	r2, r2, #3
 8022b20:	fb11 f103 	smulbb	r1, r1, r3
 8022b24:	b2d2      	uxtb	r2, r2
 8022b26:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022b2a:	fb02 1204 	mla	r2, r2, r4, r1
 8022b2e:	fb17 f703 	smulbb	r7, r7, r3
 8022b32:	b2ad      	uxth	r5, r5
 8022b34:	b292      	uxth	r2, r2
 8022b36:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022b3a:	fb00 7004 	mla	r0, r0, r4, r7
 8022b3e:	1c6b      	adds	r3, r5, #1
 8022b40:	1c57      	adds	r7, r2, #1
 8022b42:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022b46:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8022b4a:	b280      	uxth	r0, r0
 8022b4c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022b50:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022b54:	433d      	orrs	r5, r7
 8022b56:	1c47      	adds	r7, r0, #1
 8022b58:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022b5c:	097f      	lsrs	r7, r7, #5
 8022b5e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022b62:	433d      	orrs	r5, r7
 8022b64:	f8ae 5000 	strh.w	r5, [lr]
 8022b68:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022b6a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8022b6c:	4413      	add	r3, r2
 8022b6e:	9321      	str	r3, [sp, #132]	; 0x84
 8022b70:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8022b72:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022b74:	441a      	add	r2, r3
 8022b76:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022b78:	9222      	str	r2, [sp, #136]	; 0x88
 8022b7a:	3b01      	subs	r3, #1
 8022b7c:	f10e 0e02 	add.w	lr, lr, #2
 8022b80:	9313      	str	r3, [sp, #76]	; 0x4c
 8022b82:	e61c      	b.n	80227be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8022b84:	fb08 f000 	mul.w	r0, r8, r0
 8022b88:	fb09 0303 	mla	r3, r9, r3, r0
 8022b8c:	e6dc      	b.n	8022948 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8022b8e:	46b9      	mov	r9, r7
 8022b90:	e704      	b.n	802299c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8022b92:	f1c2 0110 	rsb	r1, r2, #16
 8022b96:	437a      	muls	r2, r7
 8022b98:	fb09 2901 	mla	r9, r9, r1, r2
 8022b9c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022ba0:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022ba4:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022ba8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022bac:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022bb0:	4302      	orrs	r2, r0
 8022bb2:	e795      	b.n	8022ae0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8022bb4:	f8ae 2000 	strh.w	r2, [lr]
 8022bb8:	e7d6      	b.n	8022b68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022bba:	b017      	add	sp, #92	; 0x5c
 8022bbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022bc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022bc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022bc4:	b085      	sub	sp, #20
 8022bc6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8022bca:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8022bce:	9103      	str	r1, [sp, #12]
 8022bd0:	fb00 7406 	mla	r4, r0, r6, r7
 8022bd4:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8022bd8:	2800      	cmp	r0, #0
 8022bda:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8022bde:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022be2:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022be6:	9501      	str	r5, [sp, #4]
 8022be8:	eb02 0904 	add.w	r9, r2, r4
 8022bec:	f2c0 8141 	blt.w	8022e72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022bf0:	4583      	cmp	fp, r0
 8022bf2:	f340 813e 	ble.w	8022e72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022bf6:	2f00      	cmp	r7, #0
 8022bf8:	f2c0 8137 	blt.w	8022e6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022bfc:	42be      	cmp	r6, r7
 8022bfe:	f340 8134 	ble.w	8022e6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022c02:	f812 c004 	ldrb.w	ip, [r2, r4]
 8022c06:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8022c0a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022c0e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022c12:	4355      	muls	r5, r2
 8022c14:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022c18:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8022c1c:	fb0c f203 	mul.w	r2, ip, r3
 8022c20:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022c24:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022c28:	441d      	add	r5, r3
 8022c2a:	f102 0320 	add.w	r3, r2, #32
 8022c2e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022c32:	0a1b      	lsrs	r3, r3, #8
 8022c34:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022c38:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022c3c:	431c      	orrs	r4, r3
 8022c3e:	1c7b      	adds	r3, r7, #1
 8022c40:	f100 811c 	bmi.w	8022e7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022c44:	429e      	cmp	r6, r3
 8022c46:	f340 8119 	ble.w	8022e7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022c4a:	2900      	cmp	r1, #0
 8022c4c:	f000 8119 	beq.w	8022e82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8022c50:	9a01      	ldr	r2, [sp, #4]
 8022c52:	f899 3001 	ldrb.w	r3, [r9, #1]
 8022c56:	8855      	ldrh	r5, [r2, #2]
 8022c58:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8022c5c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022c60:	fb08 f802 	mul.w	r8, r8, r2
 8022c64:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022c68:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8022c6c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022c70:	435d      	muls	r5, r3
 8022c72:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022c76:	44d0      	add	r8, sl
 8022c78:	f105 0a20 	add.w	sl, r5, #32
 8022c7c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022c80:	0a2d      	lsrs	r5, r5, #8
 8022c82:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022c86:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022c8a:	432a      	orrs	r2, r5
 8022c8c:	3001      	adds	r0, #1
 8022c8e:	f100 80fe 	bmi.w	8022e8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022c92:	4583      	cmp	fp, r0
 8022c94:	f340 80fb 	ble.w	8022e8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022c98:	f1be 0f00 	cmp.w	lr, #0
 8022c9c:	f000 80fc 	beq.w	8022e98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8022ca0:	2f00      	cmp	r7, #0
 8022ca2:	f2c0 80f1 	blt.w	8022e88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022ca6:	42be      	cmp	r6, r7
 8022ca8:	f340 80ee 	ble.w	8022e88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022cac:	9801      	ldr	r0, [sp, #4]
 8022cae:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022cb2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022cb6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022cba:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8022cbe:	fb0a fa00 	mul.w	sl, sl, r0
 8022cc2:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022cc6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8022cca:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8022cce:	fb05 f808 	mul.w	r8, r5, r8
 8022cd2:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022cd6:	4482      	add	sl, r0
 8022cd8:	f108 0020 	add.w	r0, r8, #32
 8022cdc:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022ce0:	0a00      	lsrs	r0, r0, #8
 8022ce2:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022ce6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022cea:	ea4b 0b00 	orr.w	fp, fp, r0
 8022cee:	3701      	adds	r7, #1
 8022cf0:	f100 80d7 	bmi.w	8022ea2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022cf4:	42be      	cmp	r6, r7
 8022cf6:	f340 80d4 	ble.w	8022ea2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022cfa:	2900      	cmp	r1, #0
 8022cfc:	f000 80d4 	beq.w	8022ea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8022d00:	3601      	adds	r6, #1
 8022d02:	9801      	ldr	r0, [sp, #4]
 8022d04:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022d08:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022d0c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022d10:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022d14:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022d18:	fb09 f906 	mul.w	r9, r9, r6
 8022d1c:	fb07 f800 	mul.w	r8, r7, r0
 8022d20:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022d24:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022d28:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8022d2c:	44d1      	add	r9, sl
 8022d2e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022d32:	f108 0020 	add.w	r0, r8, #32
 8022d36:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022d3a:	0a00      	lsrs	r0, r0, #8
 8022d3c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022d40:	4330      	orrs	r0, r6
 8022d42:	b28e      	uxth	r6, r1
 8022d44:	fa1f f98e 	uxth.w	r9, lr
 8022d48:	fb06 f809 	mul.w	r8, r6, r9
 8022d4c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022d50:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022d54:	0136      	lsls	r6, r6, #4
 8022d56:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022d5a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8022d5e:	9601      	str	r6, [sp, #4]
 8022d60:	ea4a 0404 	orr.w	r4, sl, r4
 8022d64:	fa1f f689 	uxth.w	r6, r9
 8022d68:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022d6c:	fb11 f90e 	smulbb	r9, r1, lr
 8022d70:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022d74:	9602      	str	r6, [sp, #8]
 8022d76:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022d7a:	4626      	mov	r6, r4
 8022d7c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022d80:	f1ce 0410 	rsb	r4, lr, #16
 8022d84:	1a64      	subs	r4, r4, r1
 8022d86:	ea4a 0202 	orr.w	r2, sl, r2
 8022d8a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8022d8e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022d92:	434a      	muls	r2, r1
 8022d94:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022d98:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022d9c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022da0:	fb04 2406 	mla	r4, r4, r6, r2
 8022da4:	ea4a 0000 	orr.w	r0, sl, r0
 8022da8:	fb09 4200 	mla	r2, r9, r0, r4
 8022dac:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022db0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022db4:	9801      	ldr	r0, [sp, #4]
 8022db6:	9903      	ldr	r1, [sp, #12]
 8022db8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022dbc:	ea44 0b0b 	orr.w	fp, r4, fp
 8022dc0:	9c02      	ldr	r4, [sp, #8]
 8022dc2:	8809      	ldrh	r1, [r1, #0]
 8022dc4:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8022dc8:	1b00      	subs	r0, r0, r4
 8022dca:	9c01      	ldr	r4, [sp, #4]
 8022dcc:	eba4 0608 	sub.w	r6, r4, r8
 8022dd0:	b2b6      	uxth	r6, r6
 8022dd2:	b280      	uxth	r0, r0
 8022dd4:	4373      	muls	r3, r6
 8022dd6:	fb0c 3300 	mla	r3, ip, r0, r3
 8022dda:	9802      	ldr	r0, [sp, #8]
 8022ddc:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022de0:	fb00 3505 	mla	r5, r0, r5, r3
 8022de4:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022de8:	fb08 5707 	mla	r7, r8, r7, r5
 8022dec:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022df0:	120b      	asrs	r3, r1, #8
 8022df2:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022df6:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8022dfa:	b2ff      	uxtb	r7, r7
 8022dfc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022e00:	10c8      	asrs	r0, r1, #3
 8022e02:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022e06:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022e0a:	00c9      	lsls	r1, r1, #3
 8022e0c:	437b      	muls	r3, r7
 8022e0e:	ea42 0e0e 	orr.w	lr, r2, lr
 8022e12:	b2c9      	uxtb	r1, r1
 8022e14:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022e18:	fa1f f28e 	uxth.w	r2, lr
 8022e1c:	4378      	muls	r0, r7
 8022e1e:	434f      	muls	r7, r1
 8022e20:	1c59      	adds	r1, r3, #1
 8022e22:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8022e26:	1213      	asrs	r3, r2, #8
 8022e28:	f023 0307 	bic.w	r3, r3, #7
 8022e2c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022e30:	1c41      	adds	r1, r0, #1
 8022e32:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022e36:	10d1      	asrs	r1, r2, #3
 8022e38:	f021 0103 	bic.w	r1, r1, #3
 8022e3c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022e40:	021b      	lsls	r3, r3, #8
 8022e42:	00c9      	lsls	r1, r1, #3
 8022e44:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022e48:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8022e4c:	430b      	orrs	r3, r1
 8022e4e:	1c79      	adds	r1, r7, #1
 8022e50:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8022e54:	00d2      	lsls	r2, r2, #3
 8022e56:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8022e5a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022e5e:	431a      	orrs	r2, r3
 8022e60:	9b03      	ldr	r3, [sp, #12]
 8022e62:	801a      	strh	r2, [r3, #0]
 8022e64:	b005      	add	sp, #20
 8022e66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022e6a:	f04f 0c00 	mov.w	ip, #0
 8022e6e:	4664      	mov	r4, ip
 8022e70:	e6e5      	b.n	8022c3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8022e72:	2300      	movs	r3, #0
 8022e74:	469c      	mov	ip, r3
 8022e76:	461a      	mov	r2, r3
 8022e78:	461c      	mov	r4, r3
 8022e7a:	e707      	b.n	8022c8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022e7c:	2300      	movs	r3, #0
 8022e7e:	461a      	mov	r2, r3
 8022e80:	e704      	b.n	8022c8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022e82:	460b      	mov	r3, r1
 8022e84:	460a      	mov	r2, r1
 8022e86:	e701      	b.n	8022c8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022e88:	2500      	movs	r5, #0
 8022e8a:	46ab      	mov	fp, r5
 8022e8c:	e72f      	b.n	8022cee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8022e8e:	2700      	movs	r7, #0
 8022e90:	463d      	mov	r5, r7
 8022e92:	4638      	mov	r0, r7
 8022e94:	46bb      	mov	fp, r7
 8022e96:	e754      	b.n	8022d42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022e98:	4677      	mov	r7, lr
 8022e9a:	4675      	mov	r5, lr
 8022e9c:	4670      	mov	r0, lr
 8022e9e:	46f3      	mov	fp, lr
 8022ea0:	e74f      	b.n	8022d42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022ea2:	2700      	movs	r7, #0
 8022ea4:	4638      	mov	r0, r7
 8022ea6:	e74c      	b.n	8022d42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022ea8:	460f      	mov	r7, r1
 8022eaa:	4608      	mov	r0, r1
 8022eac:	e749      	b.n	8022d42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08022eb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022eb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022eb4:	b093      	sub	sp, #76	; 0x4c
 8022eb6:	9210      	str	r2, [sp, #64]	; 0x40
 8022eb8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8022eba:	910e      	str	r1, [sp, #56]	; 0x38
 8022ebc:	9306      	str	r3, [sp, #24]
 8022ebe:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8022ec2:	9011      	str	r0, [sp, #68]	; 0x44
 8022ec4:	6850      	ldr	r0, [r2, #4]
 8022ec6:	6812      	ldr	r2, [r2, #0]
 8022ec8:	fb00 1303 	mla	r3, r0, r3, r1
 8022ecc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022ed0:	9307      	str	r3, [sp, #28]
 8022ed2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022ed4:	681b      	ldr	r3, [r3, #0]
 8022ed6:	9308      	str	r3, [sp, #32]
 8022ed8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022eda:	685b      	ldr	r3, [r3, #4]
 8022edc:	9309      	str	r3, [sp, #36]	; 0x24
 8022ede:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022ee0:	2b00      	cmp	r3, #0
 8022ee2:	dc03      	bgt.n	8022eec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8022ee4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022ee6:	2b00      	cmp	r3, #0
 8022ee8:	f340 83b4 	ble.w	8023654 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8022eec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022eee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022ef2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022ef6:	1e48      	subs	r0, r1, #1
 8022ef8:	1e55      	subs	r5, r2, #1
 8022efa:	9b06      	ldr	r3, [sp, #24]
 8022efc:	2b00      	cmp	r3, #0
 8022efe:	f340 8163 	ble.w	80231c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8022f02:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8022f04:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022f06:	1436      	asrs	r6, r6, #16
 8022f08:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022f0c:	d406      	bmi.n	8022f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022f0e:	4286      	cmp	r6, r0
 8022f10:	da04      	bge.n	8022f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022f12:	2b00      	cmp	r3, #0
 8022f14:	db02      	blt.n	8022f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022f16:	42ab      	cmp	r3, r5
 8022f18:	f2c0 8157 	blt.w	80231ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8022f1c:	3601      	adds	r6, #1
 8022f1e:	f100 8144 	bmi.w	80231aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022f22:	42b1      	cmp	r1, r6
 8022f24:	f2c0 8141 	blt.w	80231aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022f28:	3301      	adds	r3, #1
 8022f2a:	f100 813e 	bmi.w	80231aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022f2e:	429a      	cmp	r2, r3
 8022f30:	f2c0 813b 	blt.w	80231aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022f34:	9b06      	ldr	r3, [sp, #24]
 8022f36:	9f07      	ldr	r7, [sp, #28]
 8022f38:	930f      	str	r3, [sp, #60]	; 0x3c
 8022f3a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022f3e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022f40:	2b00      	cmp	r3, #0
 8022f42:	f340 8164 	ble.w	802320e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8022f46:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022f48:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8022f4a:	1418      	asrs	r0, r3, #16
 8022f4c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022f4e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8022f52:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022f54:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8022f58:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022f5a:	142d      	asrs	r5, r5, #16
 8022f5c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8022f60:	f100 81ee 	bmi.w	8023340 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022f64:	f102 3eff 	add.w	lr, r2, #4294967295
 8022f68:	4575      	cmp	r5, lr
 8022f6a:	f280 81e9 	bge.w	8023340 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022f6e:	2800      	cmp	r0, #0
 8022f70:	f2c0 81e6 	blt.w	8023340 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022f74:	f103 3eff 	add.w	lr, r3, #4294967295
 8022f78:	4570      	cmp	r0, lr
 8022f7a:	f280 81e1 	bge.w	8023340 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022f7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022f80:	b212      	sxth	r2, r2
 8022f82:	fb00 5002 	mla	r0, r0, r2, r5
 8022f86:	fa1f fe81 	uxth.w	lr, r1
 8022f8a:	eb03 0a00 	add.w	sl, r3, r0
 8022f8e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8022f92:	f813 9000 	ldrb.w	r9, [r3, r0]
 8022f96:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022f9a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8022f9e:	b29b      	uxth	r3, r3
 8022fa0:	f1bc 0f00 	cmp.w	ip, #0
 8022fa4:	f000 8179 	beq.w	802329a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8022fa8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8022fac:	940a      	str	r4, [sp, #40]	; 0x28
 8022fae:	eb0a 0b02 	add.w	fp, sl, r2
 8022fb2:	fa1f fa8c 	uxth.w	sl, ip
 8022fb6:	fb0a fe0e 	mul.w	lr, sl, lr
 8022fba:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8022fbe:	fa1f fa8a 	uxth.w	sl, sl
 8022fc2:	eba5 050e 	sub.w	r5, r5, lr
 8022fc6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022fca:	940b      	str	r4, [sp, #44]	; 0x2c
 8022fcc:	eba3 030a 	sub.w	r3, r3, sl
 8022fd0:	b2ad      	uxth	r5, r5
 8022fd2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022fd4:	b29b      	uxth	r3, r3
 8022fd6:	fb08 f505 	mul.w	r5, r8, r5
 8022fda:	fb09 5303 	mla	r3, r9, r3, r5
 8022fde:	fb0a 3304 	mla	r3, sl, r4, r3
 8022fe2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022fe4:	fb0e 3304 	mla	r3, lr, r4, r3
 8022fe8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022fec:	2b00      	cmp	r3, #0
 8022fee:	f000 80cf 	beq.w	8023190 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022ff2:	9c08      	ldr	r4, [sp, #32]
 8022ff4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022ff8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8022ffc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8023000:	f000 8150 	beq.w	80232a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8023004:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023008:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802300c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023010:	fb09 f000 	mul.w	r0, r9, r0
 8023014:	fb0a fe0e 	mul.w	lr, sl, lr
 8023018:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802301c:	f100 0b20 	add.w	fp, r0, #32
 8023020:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023024:	44ce      	add	lr, r9
 8023026:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802302a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802302e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023032:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023036:	ea4e 0909 	orr.w	r9, lr, r9
 802303a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802303e:	8868      	ldrh	r0, [r5, #2]
 8023040:	d019      	beq.n	8023076 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8023042:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023046:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802304a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802304e:	fb08 f800 	mul.w	r8, r8, r0
 8023052:	fb0a fe0e 	mul.w	lr, sl, lr
 8023056:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802305a:	f108 0b20 	add.w	fp, r8, #32
 802305e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023062:	4486      	add	lr, r0
 8023064:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8023068:	0a00      	lsrs	r0, r0, #8
 802306a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802306e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023072:	ea4e 0000 	orr.w	r0, lr, r0
 8023076:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802307a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802307e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023082:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023086:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802308a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802308e:	ea4e 0909 	orr.w	r9, lr, r9
 8023092:	ea4a 0000 	orr.w	r0, sl, r0
 8023096:	f1bc 0f00 	cmp.w	ip, #0
 802309a:	f000 8105 	beq.w	80232a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802309e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80230a2:	3a01      	subs	r2, #1
 80230a4:	0052      	lsls	r2, r2, #1
 80230a6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80230a8:	3202      	adds	r2, #2
 80230aa:	2cff      	cmp	r4, #255	; 0xff
 80230ac:	eb05 0e02 	add.w	lr, r5, r2
 80230b0:	5aaa      	ldrh	r2, [r5, r2]
 80230b2:	d018      	beq.n	80230e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80230b4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80230b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80230bc:	fb04 fa02 	mul.w	sl, r4, r2
 80230c0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80230c4:	fb08 f805 	mul.w	r8, r8, r5
 80230c8:	f10a 0520 	add.w	r5, sl, #32
 80230cc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80230d0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80230d4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80230d8:	4442      	add	r2, r8
 80230da:	0a2d      	lsrs	r5, r5, #8
 80230dc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80230e0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80230e4:	432a      	orrs	r2, r5
 80230e6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80230e8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80230ec:	2cff      	cmp	r4, #255	; 0xff
 80230ee:	d01a      	beq.n	8023126 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80230f0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80230f4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80230f8:	fb04 fa05 	mul.w	sl, r4, r5
 80230fc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023100:	fb08 f80e 	mul.w	r8, r8, lr
 8023104:	f10a 0e20 	add.w	lr, sl, #32
 8023108:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 802310c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8023110:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023114:	4445      	add	r5, r8
 8023116:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802311a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802311e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8023122:	ea45 050e 	orr.w	r5, r5, lr
 8023126:	fb1c fe01 	smulbb	lr, ip, r1
 802312a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802312e:	f1cc 0810 	rsb	r8, ip, #16
 8023132:	eba8 0801 	sub.w	r8, r8, r1
 8023136:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802313a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802313e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8023142:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8023146:	4341      	muls	r1, r0
 8023148:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802314c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023150:	ea4a 0202 	orr.w	r2, sl, r2
 8023154:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8023158:	fb09 1108 	mla	r1, r9, r8, r1
 802315c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023160:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023164:	fb0c 1102 	mla	r1, ip, r2, r1
 8023168:	ea4b 0505 	orr.w	r5, fp, r5
 802316c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8023170:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023174:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023178:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802317c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023180:	ea42 0e0e 	orr.w	lr, r2, lr
 8023184:	fa1f f28e 	uxth.w	r2, lr
 8023188:	2bff      	cmp	r3, #255	; 0xff
 802318a:	f040 80a1 	bne.w	80232d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802318e:	803a      	strh	r2, [r7, #0]
 8023190:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023192:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8023194:	4413      	add	r3, r2
 8023196:	931d      	str	r3, [sp, #116]	; 0x74
 8023198:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802319a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802319c:	441a      	add	r2, r3
 802319e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80231a0:	921e      	str	r2, [sp, #120]	; 0x78
 80231a2:	3b01      	subs	r3, #1
 80231a4:	3702      	adds	r7, #2
 80231a6:	930f      	str	r3, [sp, #60]	; 0x3c
 80231a8:	e6c9      	b.n	8022f3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80231aa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80231ac:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80231ae:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80231b0:	4433      	add	r3, r6
 80231b2:	931d      	str	r3, [sp, #116]	; 0x74
 80231b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80231b6:	441c      	add	r4, r3
 80231b8:	9b06      	ldr	r3, [sp, #24]
 80231ba:	941e      	str	r4, [sp, #120]	; 0x78
 80231bc:	3b01      	subs	r3, #1
 80231be:	9306      	str	r3, [sp, #24]
 80231c0:	9b07      	ldr	r3, [sp, #28]
 80231c2:	3302      	adds	r3, #2
 80231c4:	9307      	str	r3, [sp, #28]
 80231c6:	e698      	b.n	8022efa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80231c8:	d028      	beq.n	802321c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80231ca:	9b06      	ldr	r3, [sp, #24]
 80231cc:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80231ce:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80231d0:	3b01      	subs	r3, #1
 80231d2:	fb00 5003 	mla	r0, r0, r3, r5
 80231d6:	1400      	asrs	r0, r0, #16
 80231d8:	f53f aeac 	bmi.w	8022f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80231dc:	3901      	subs	r1, #1
 80231de:	4288      	cmp	r0, r1
 80231e0:	f6bf aea8 	bge.w	8022f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80231e4:	9920      	ldr	r1, [sp, #128]	; 0x80
 80231e6:	981e      	ldr	r0, [sp, #120]	; 0x78
 80231e8:	fb01 0303 	mla	r3, r1, r3, r0
 80231ec:	141b      	asrs	r3, r3, #16
 80231ee:	f53f aea1 	bmi.w	8022f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80231f2:	3a01      	subs	r2, #1
 80231f4:	4293      	cmp	r3, r2
 80231f6:	f6bf ae9d 	bge.w	8022f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80231fa:	9b06      	ldr	r3, [sp, #24]
 80231fc:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8023200:	930f      	str	r3, [sp, #60]	; 0x3c
 8023202:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023206:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023208:	2b00      	cmp	r3, #0
 802320a:	f300 80b6 	bgt.w	802337a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802320e:	9b06      	ldr	r3, [sp, #24]
 8023210:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023214:	9b07      	ldr	r3, [sp, #28]
 8023216:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802321a:	9307      	str	r3, [sp, #28]
 802321c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802321e:	2b00      	cmp	r3, #0
 8023220:	f340 8218 	ble.w	8023654 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8023224:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023228:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802322c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023230:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023232:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023236:	ee31 1a05 	vadd.f32	s2, s2, s10
 802323a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802323e:	eef0 6a62 	vmov.f32	s13, s5
 8023242:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023246:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802324a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802324e:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8023252:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023256:	eef0 6a43 	vmov.f32	s13, s6
 802325a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802325e:	ee12 2a90 	vmov	r2, s5
 8023262:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023266:	fb92 f3f3 	sdiv	r3, r2, r3
 802326a:	ee13 2a10 	vmov	r2, s6
 802326e:	931f      	str	r3, [sp, #124]	; 0x7c
 8023270:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023272:	fb92 f3f3 	sdiv	r3, r2, r3
 8023276:	9320      	str	r3, [sp, #128]	; 0x80
 8023278:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802327a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802327c:	3b01      	subs	r3, #1
 802327e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023282:	930e      	str	r3, [sp, #56]	; 0x38
 8023284:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023286:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 802328a:	bf08      	it	eq
 802328c:	4613      	moveq	r3, r2
 802328e:	9306      	str	r3, [sp, #24]
 8023290:	eeb0 3a67 	vmov.f32	s6, s15
 8023294:	eef0 2a47 	vmov.f32	s5, s14
 8023298:	e621      	b.n	8022ede <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 802329a:	fb08 f505 	mul.w	r5, r8, r5
 802329e:	fb09 5303 	mla	r3, r9, r3, r5
 80232a2:	e6a1      	b.n	8022fe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80232a4:	4681      	mov	r9, r0
 80232a6:	e6c8      	b.n	802303a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80232a8:	f1c1 0210 	rsb	r2, r1, #16
 80232ac:	4341      	muls	r1, r0
 80232ae:	fb09 1902 	mla	r9, r9, r2, r1
 80232b2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80232b6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80232ba:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80232be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80232c2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80232c6:	ea42 0909 	orr.w	r9, r2, r9
 80232ca:	fa1f f289 	uxth.w	r2, r9
 80232ce:	e75b      	b.n	8023188 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80232d0:	f8b7 c000 	ldrh.w	ip, [r7]
 80232d4:	43db      	mvns	r3, r3
 80232d6:	ea4f 202c 	mov.w	r0, ip, asr #8
 80232da:	fa5f fe83 	uxtb.w	lr, r3
 80232de:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80232e2:	fb00 f00e 	mul.w	r0, r0, lr
 80232e6:	1c41      	adds	r1, r0, #1
 80232e8:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80232ec:	1211      	asrs	r1, r2, #8
 80232ee:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80232f2:	f021 0107 	bic.w	r1, r1, #7
 80232f6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80232fa:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80232fe:	48d7      	ldr	r0, [pc, #860]	; (802365c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8023300:	fb05 f50e 	mul.w	r5, r5, lr
 8023304:	b2c9      	uxtb	r1, r1
 8023306:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 802330a:	1c69      	adds	r1, r5, #1
 802330c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8023310:	10d1      	asrs	r1, r2, #3
 8023312:	f021 0103 	bic.w	r1, r1, #3
 8023316:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802331a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802331e:	b2db      	uxtb	r3, r3
 8023320:	00c9      	lsls	r1, r1, #3
 8023322:	fb03 f30e 	mul.w	r3, r3, lr
 8023326:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802332a:	4301      	orrs	r1, r0
 802332c:	1c58      	adds	r0, r3, #1
 802332e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8023332:	00d2      	lsls	r2, r2, #3
 8023334:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023338:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802333c:	430a      	orrs	r2, r1
 802333e:	e726      	b.n	802318e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8023340:	f115 0e01 	adds.w	lr, r5, #1
 8023344:	f53f af24 	bmi.w	8023190 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023348:	4572      	cmp	r2, lr
 802334a:	f6ff af21 	blt.w	8023190 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802334e:	f110 0e01 	adds.w	lr, r0, #1
 8023352:	f53f af1d 	bmi.w	8023190 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023356:	4573      	cmp	r3, lr
 8023358:	f6ff af1a 	blt.w	8023190 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802335c:	b21b      	sxth	r3, r3
 802335e:	b212      	sxth	r2, r2
 8023360:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8023364:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8023368:	9301      	str	r3, [sp, #4]
 802336a:	9200      	str	r2, [sp, #0]
 802336c:	4639      	mov	r1, r7
 802336e:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8023372:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023374:	f7ff fc24 	bl	8022bc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8023378:	e70a      	b.n	8023190 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802337a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802337c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023380:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023382:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8023386:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023388:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802338c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802338e:	141f      	asrs	r7, r3, #16
 8023390:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023392:	141b      	asrs	r3, r3, #16
 8023394:	fb01 3707 	mla	r7, r1, r7, r3
 8023398:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802339a:	fa1f fc82 	uxth.w	ip, r2
 802339e:	eb03 0a07 	add.w	sl, r3, r7
 80233a2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80233a6:	f813 9007 	ldrb.w	r9, [r3, r7]
 80233aa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80233ae:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80233b2:	b29b      	uxth	r3, r3
 80233b4:	2d00      	cmp	r5, #0
 80233b6:	f000 80fe 	beq.w	80235b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80233ba:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80233be:	940c      	str	r4, [sp, #48]	; 0x30
 80233c0:	eb0a 0b01 	add.w	fp, sl, r1
 80233c4:	fa1f fa85 	uxth.w	sl, r5
 80233c8:	fb0a fc0c 	mul.w	ip, sl, ip
 80233cc:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80233d0:	fa1f fa8a 	uxth.w	sl, sl
 80233d4:	eba0 000c 	sub.w	r0, r0, ip
 80233d8:	eba3 030a 	sub.w	r3, r3, sl
 80233dc:	b280      	uxth	r0, r0
 80233de:	fb08 f000 	mul.w	r0, r8, r0
 80233e2:	b29b      	uxth	r3, r3
 80233e4:	fb09 0303 	mla	r3, r9, r3, r0
 80233e8:	980c      	ldr	r0, [sp, #48]	; 0x30
 80233ea:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80233ee:	940d      	str	r4, [sp, #52]	; 0x34
 80233f0:	fb0a 3300 	mla	r3, sl, r0, r3
 80233f4:	fb0c 3304 	mla	r3, ip, r4, r3
 80233f8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80233fc:	2b00      	cmp	r3, #0
 80233fe:	f000 80cc 	beq.w	802359a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8023402:	9808      	ldr	r0, [sp, #32]
 8023404:	9c08      	ldr	r4, [sp, #32]
 8023406:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802340a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802340e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8023412:	f000 80d5 	beq.w	80235c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8023416:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802341a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802341e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023422:	fb09 f707 	mul.w	r7, r9, r7
 8023426:	fb0a fc0c 	mul.w	ip, sl, ip
 802342a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802342e:	f107 0b20 	add.w	fp, r7, #32
 8023432:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023436:	44cc      	add	ip, r9
 8023438:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 802343c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023440:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023444:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023448:	ea4c 0909 	orr.w	r9, ip, r9
 802344c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023450:	8847      	ldrh	r7, [r0, #2]
 8023452:	d019      	beq.n	8023488 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8023454:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023458:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802345c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023460:	fb08 f807 	mul.w	r8, r8, r7
 8023464:	fb0a fc0c 	mul.w	ip, sl, ip
 8023468:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 802346c:	f108 0b20 	add.w	fp, r8, #32
 8023470:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023474:	44bc      	add	ip, r7
 8023476:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 802347a:	0a3f      	lsrs	r7, r7, #8
 802347c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023480:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023484:	ea4c 0707 	orr.w	r7, ip, r7
 8023488:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 802348c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8023490:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023494:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023498:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802349c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80234a0:	ea4c 0909 	orr.w	r9, ip, r9
 80234a4:	ea4a 0707 	orr.w	r7, sl, r7
 80234a8:	2d00      	cmp	r5, #0
 80234aa:	f000 808b 	beq.w	80235c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80234ae:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80234b2:	3901      	subs	r1, #1
 80234b4:	0049      	lsls	r1, r1, #1
 80234b6:	3102      	adds	r1, #2
 80234b8:	eb00 0c01 	add.w	ip, r0, r1
 80234bc:	5a41      	ldrh	r1, [r0, r1]
 80234be:	980c      	ldr	r0, [sp, #48]	; 0x30
 80234c0:	28ff      	cmp	r0, #255	; 0xff
 80234c2:	d019      	beq.n	80234f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80234c4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80234c6:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80234ca:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80234ce:	fb04 fa01 	mul.w	sl, r4, r1
 80234d2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80234d6:	fb08 f800 	mul.w	r8, r8, r0
 80234da:	f10a 0020 	add.w	r0, sl, #32
 80234de:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80234e2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80234e6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80234ea:	4441      	add	r1, r8
 80234ec:	0a00      	lsrs	r0, r0, #8
 80234ee:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80234f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80234f6:	4301      	orrs	r1, r0
 80234f8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80234fa:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80234fe:	2cff      	cmp	r4, #255	; 0xff
 8023500:	d01a      	beq.n	8023538 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8023502:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8023506:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802350a:	fb04 fa00 	mul.w	sl, r4, r0
 802350e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023512:	fb08 f80c 	mul.w	r8, r8, ip
 8023516:	f10a 0c20 	add.w	ip, sl, #32
 802351a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802351e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8023522:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023526:	4440      	add	r0, r8
 8023528:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802352c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8023530:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023534:	ea40 000c 	orr.w	r0, r0, ip
 8023538:	fb15 fc02 	smulbb	ip, r5, r2
 802353c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8023540:	f1c5 0810 	rsb	r8, r5, #16
 8023544:	eba8 0802 	sub.w	r8, r8, r2
 8023548:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802354c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8023550:	437a      	muls	r2, r7
 8023552:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023556:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 802355a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802355e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023562:	fb09 2208 	mla	r2, r9, r8, r2
 8023566:	ea4a 0101 	orr.w	r1, sl, r1
 802356a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802356e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023572:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023576:	fb05 2201 	mla	r2, r5, r1, r2
 802357a:	ea4b 0000 	orr.w	r0, fp, r0
 802357e:	fb0c 2200 	mla	r2, ip, r0, r2
 8023582:	0d57      	lsrs	r7, r2, #21
 8023584:	0952      	lsrs	r2, r2, #5
 8023586:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802358a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802358e:	433a      	orrs	r2, r7
 8023590:	2bff      	cmp	r3, #255	; 0xff
 8023592:	b292      	uxth	r2, r2
 8023594:	d127      	bne.n	80235e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8023596:	f8ae 2000 	strh.w	r2, [lr]
 802359a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802359c:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802359e:	4413      	add	r3, r2
 80235a0:	931d      	str	r3, [sp, #116]	; 0x74
 80235a2:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80235a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80235a6:	441a      	add	r2, r3
 80235a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80235aa:	921e      	str	r2, [sp, #120]	; 0x78
 80235ac:	3b01      	subs	r3, #1
 80235ae:	f10e 0e02 	add.w	lr, lr, #2
 80235b2:	930f      	str	r3, [sp, #60]	; 0x3c
 80235b4:	e627      	b.n	8023206 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80235b6:	fb08 f000 	mul.w	r0, r8, r0
 80235ba:	fb09 0303 	mla	r3, r9, r3, r0
 80235be:	e71b      	b.n	80233f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80235c0:	46b9      	mov	r9, r7
 80235c2:	e743      	b.n	802344c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80235c4:	f1c2 0110 	rsb	r1, r2, #16
 80235c8:	437a      	muls	r2, r7
 80235ca:	fb09 2901 	mla	r9, r9, r1, r2
 80235ce:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80235d2:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80235d6:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80235da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80235de:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80235e2:	4302      	orrs	r2, r0
 80235e4:	e7d4      	b.n	8023590 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80235e6:	f8be 7000 	ldrh.w	r7, [lr]
 80235ea:	4c1c      	ldr	r4, [pc, #112]	; (802365c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80235ec:	43db      	mvns	r3, r3
 80235ee:	1238      	asrs	r0, r7, #8
 80235f0:	fa5f fc83 	uxtb.w	ip, r3
 80235f4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80235f8:	10fd      	asrs	r5, r7, #3
 80235fa:	fb00 f00c 	mul.w	r0, r0, ip
 80235fe:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8023602:	fb05 f10c 	mul.w	r1, r5, ip
 8023606:	1c45      	adds	r5, r0, #1
 8023608:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802360c:	1215      	asrs	r5, r2, #8
 802360e:	f025 0507 	bic.w	r5, r5, #7
 8023612:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8023616:	1c4d      	adds	r5, r1, #1
 8023618:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802361c:	10d1      	asrs	r1, r2, #3
 802361e:	f021 0103 	bic.w	r1, r1, #3
 8023622:	00fb      	lsls	r3, r7, #3
 8023624:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8023628:	b2db      	uxtb	r3, r3
 802362a:	b2c0      	uxtb	r0, r0
 802362c:	00c9      	lsls	r1, r1, #3
 802362e:	fb03 f30c 	mul.w	r3, r3, ip
 8023632:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023636:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 802363a:	4308      	orrs	r0, r1
 802363c:	1c59      	adds	r1, r3, #1
 802363e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8023642:	00d2      	lsls	r2, r2, #3
 8023644:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8023648:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 802364c:	4318      	orrs	r0, r3
 802364e:	f8ae 0000 	strh.w	r0, [lr]
 8023652:	e7a2      	b.n	802359a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8023654:	b013      	add	sp, #76	; 0x4c
 8023656:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802365a:	bf00      	nop
 802365c:	fffff800 	.word	0xfffff800

08023660 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8023660:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023664:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8023668:	fb05 4c03 	mla	ip, r5, r3, r4
 802366c:	2d00      	cmp	r5, #0
 802366e:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8023672:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8023676:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802367a:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802367e:	8808      	ldrh	r0, [r1, #0]
 8023680:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8023684:	f2c0 80a7 	blt.w	80237d6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8023688:	45aa      	cmp	sl, r5
 802368a:	f340 80a4 	ble.w	80237d6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802368e:	2c00      	cmp	r4, #0
 8023690:	f2c0 809f 	blt.w	80237d2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8023694:	42a3      	cmp	r3, r4
 8023696:	f340 809c 	ble.w	80237d2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 802369a:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802369e:	1c62      	adds	r2, r4, #1
 80236a0:	f100 809c 	bmi.w	80237dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80236a4:	4293      	cmp	r3, r2
 80236a6:	f340 8099 	ble.w	80237dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80236aa:	f1b9 0f00 	cmp.w	r9, #0
 80236ae:	f000 8095 	beq.w	80237dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80236b2:	f8be c002 	ldrh.w	ip, [lr, #2]
 80236b6:	3501      	adds	r5, #1
 80236b8:	f100 8094 	bmi.w	80237e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80236bc:	45aa      	cmp	sl, r5
 80236be:	f340 8091 	ble.w	80237e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80236c2:	2f00      	cmp	r7, #0
 80236c4:	f000 808e 	beq.w	80237e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80236c8:	2c00      	cmp	r4, #0
 80236ca:	f2c0 8089 	blt.w	80237e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80236ce:	42a3      	cmp	r3, r4
 80236d0:	f340 8086 	ble.w	80237e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80236d4:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80236d8:	3401      	adds	r4, #1
 80236da:	f100 8086 	bmi.w	80237ea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80236de:	42a3      	cmp	r3, r4
 80236e0:	f340 8083 	ble.w	80237ea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80236e4:	f1b9 0f00 	cmp.w	r9, #0
 80236e8:	d07f      	beq.n	80237ea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80236ea:	3301      	adds	r3, #1
 80236ec:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80236f0:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80236f4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80236f8:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80236fc:	fb19 fe07 	smulbb	lr, r9, r7
 8023700:	ea44 0808 	orr.w	r8, r4, r8
 8023704:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8023708:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802370c:	f1c7 0210 	rsb	r2, r7, #16
 8023710:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023714:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023718:	ea44 0c0c 	orr.w	ip, r4, ip
 802371c:	eba2 0209 	sub.w	r2, r2, r9
 8023720:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8023724:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8023728:	fb04 f40c 	mul.w	r4, r4, ip
 802372c:	fb02 4808 	mla	r8, r2, r8, r4
 8023730:	041a      	lsls	r2, r3, #16
 8023732:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023736:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802373a:	4313      	orrs	r3, r2
 802373c:	042a      	lsls	r2, r5, #16
 802373e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023742:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023746:	fb0e 8303 	mla	r3, lr, r3, r8
 802374a:	432a      	orrs	r2, r5
 802374c:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8023750:	fb07 3202 	mla	r2, r7, r2, r3
 8023754:	0d53      	lsrs	r3, r2, #21
 8023756:	0952      	lsrs	r2, r2, #5
 8023758:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802375c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023760:	431a      	orrs	r2, r3
 8023762:	b293      	uxth	r3, r2
 8023764:	b2b4      	uxth	r4, r6
 8023766:	1202      	asrs	r2, r0, #8
 8023768:	43f6      	mvns	r6, r6
 802376a:	b2f6      	uxtb	r6, r6
 802376c:	121d      	asrs	r5, r3, #8
 802376e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023772:	fb12 f206 	smulbb	r2, r2, r6
 8023776:	10c7      	asrs	r7, r0, #3
 8023778:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802377c:	00c0      	lsls	r0, r0, #3
 802377e:	fb05 2504 	mla	r5, r5, r4, r2
 8023782:	b2c0      	uxtb	r0, r0
 8023784:	10da      	asrs	r2, r3, #3
 8023786:	00db      	lsls	r3, r3, #3
 8023788:	b2db      	uxtb	r3, r3
 802378a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802378e:	fb10 f006 	smulbb	r0, r0, r6
 8023792:	b2ad      	uxth	r5, r5
 8023794:	fb03 0004 	mla	r0, r3, r4, r0
 8023798:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802379c:	fb17 f706 	smulbb	r7, r7, r6
 80237a0:	b280      	uxth	r0, r0
 80237a2:	1c6b      	adds	r3, r5, #1
 80237a4:	fb02 7204 	mla	r2, r2, r4, r7
 80237a8:	b292      	uxth	r2, r2
 80237aa:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80237ae:	1c43      	adds	r3, r0, #1
 80237b0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80237b4:	1c50      	adds	r0, r2, #1
 80237b6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80237ba:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80237be:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80237c2:	0952      	lsrs	r2, r2, #5
 80237c4:	432b      	orrs	r3, r5
 80237c6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80237ca:	4313      	orrs	r3, r2
 80237cc:	800b      	strh	r3, [r1, #0]
 80237ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80237d2:	4680      	mov	r8, r0
 80237d4:	e763      	b.n	802369e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80237d6:	4684      	mov	ip, r0
 80237d8:	4680      	mov	r8, r0
 80237da:	e76c      	b.n	80236b6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80237dc:	4684      	mov	ip, r0
 80237de:	e76a      	b.n	80236b6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80237e0:	4605      	mov	r5, r0
 80237e2:	e779      	b.n	80236d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80237e4:	4603      	mov	r3, r0
 80237e6:	4605      	mov	r5, r0
 80237e8:	e782      	b.n	80236f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80237ea:	4603      	mov	r3, r0
 80237ec:	e780      	b.n	80236f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080237ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80237ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80237f2:	b093      	sub	sp, #76	; 0x4c
 80237f4:	461d      	mov	r5, r3
 80237f6:	9210      	str	r2, [sp, #64]	; 0x40
 80237f8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80237fa:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 80237fe:	920b      	str	r2, [sp, #44]	; 0x2c
 8023800:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8023804:	910a      	str	r1, [sp, #40]	; 0x28
 8023806:	6859      	ldr	r1, [r3, #4]
 8023808:	681b      	ldr	r3, [r3, #0]
 802380a:	9011      	str	r0, [sp, #68]	; 0x44
 802380c:	fb01 2707 	mla	r7, r1, r7, r2
 8023810:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8023814:	9307      	str	r3, [sp, #28]
 8023816:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023818:	681b      	ldr	r3, [r3, #0]
 802381a:	9309      	str	r3, [sp, #36]	; 0x24
 802381c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802381e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8023822:	43db      	mvns	r3, r3
 8023824:	b2db      	uxtb	r3, r3
 8023826:	9308      	str	r3, [sp, #32]
 8023828:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802382a:	2b00      	cmp	r3, #0
 802382c:	dc03      	bgt.n	8023836 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802382e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023830:	2b00      	cmp	r3, #0
 8023832:	f340 8203 	ble.w	8023c3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023836:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023838:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802383c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023840:	1e48      	subs	r0, r1, #1
 8023842:	f102 3cff 	add.w	ip, r2, #4294967295
 8023846:	2d00      	cmp	r5, #0
 8023848:	f340 80da 	ble.w	8023a00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 802384c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023850:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023854:	d406      	bmi.n	8023864 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023856:	4586      	cmp	lr, r0
 8023858:	da04      	bge.n	8023864 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802385a:	2b00      	cmp	r3, #0
 802385c:	db02      	blt.n	8023864 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802385e:	4563      	cmp	r3, ip
 8023860:	f2c0 80cf 	blt.w	8023a02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8023864:	f11e 0e01 	adds.w	lr, lr, #1
 8023868:	f100 80c1 	bmi.w	80239ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802386c:	4571      	cmp	r1, lr
 802386e:	f2c0 80be 	blt.w	80239ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023872:	3301      	adds	r3, #1
 8023874:	f100 80bb 	bmi.w	80239ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023878:	429a      	cmp	r2, r3
 802387a:	f2c0 80b8 	blt.w	80239ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802387e:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8023882:	46a9      	mov	r9, r5
 8023884:	f1b9 0f00 	cmp.w	r9, #0
 8023888:	f340 80d8 	ble.w	8023a3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 802388c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802388e:	1421      	asrs	r1, r4, #16
 8023890:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023894:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023898:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802389c:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80238a0:	f100 8111 	bmi.w	8023ac6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80238a4:	f10e 3aff 	add.w	sl, lr, #4294967295
 80238a8:	4551      	cmp	r1, sl
 80238aa:	f280 810c 	bge.w	8023ac6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80238ae:	2800      	cmp	r0, #0
 80238b0:	f2c0 8109 	blt.w	8023ac6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80238b4:	f103 3aff 	add.w	sl, r3, #4294967295
 80238b8:	4550      	cmp	r0, sl
 80238ba:	f280 8104 	bge.w	8023ac6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80238be:	fa0f f38e 	sxth.w	r3, lr
 80238c2:	fb00 1103 	mla	r1, r0, r3, r1
 80238c6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80238c8:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80238cc:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80238d0:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80238d4:	f1bc 0f00 	cmp.w	ip, #0
 80238d8:	d007      	beq.n	80238ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80238da:	005b      	lsls	r3, r3, #1
 80238dc:	eb0a 0003 	add.w	r0, sl, r3
 80238e0:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80238e4:	930c      	str	r3, [sp, #48]	; 0x30
 80238e6:	8843      	ldrh	r3, [r0, #2]
 80238e8:	930d      	str	r3, [sp, #52]	; 0x34
 80238ea:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80238ee:	fb12 f30c 	smulbb	r3, r2, ip
 80238f2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80238f6:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80238fa:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80238fe:	10db      	asrs	r3, r3, #3
 8023900:	ea40 000e 	orr.w	r0, r0, lr
 8023904:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023908:	f1cc 0e10 	rsb	lr, ip, #16
 802390c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023910:	ebae 0e02 	sub.w	lr, lr, r2
 8023914:	ea4a 0101 	orr.w	r1, sl, r1
 8023918:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802391c:	4351      	muls	r1, r2
 802391e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8023920:	9f08      	ldr	r7, [sp, #32]
 8023922:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8023926:	fb0e 1e00 	mla	lr, lr, r0, r1
 802392a:	0410      	lsls	r0, r2, #16
 802392c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023930:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023934:	4310      	orrs	r0, r2
 8023936:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023938:	990c      	ldr	r1, [sp, #48]	; 0x30
 802393a:	0412      	lsls	r2, r2, #16
 802393c:	fb03 e000 	mla	r0, r3, r0, lr
 8023940:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023944:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8023948:	ea42 020e 	orr.w	r2, r2, lr
 802394c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023950:	fb03 0302 	mla	r3, r3, r2, r0
 8023954:	0d5a      	lsrs	r2, r3, #21
 8023956:	095b      	lsrs	r3, r3, #5
 8023958:	f8b8 0000 	ldrh.w	r0, [r8]
 802395c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023960:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023964:	4313      	orrs	r3, r2
 8023966:	b29b      	uxth	r3, r3
 8023968:	1201      	asrs	r1, r0, #8
 802396a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 802396e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8023972:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023976:	fb11 f107 	smulbb	r1, r1, r7
 802397a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 802397e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8023982:	00c0      	lsls	r0, r0, #3
 8023984:	fb0c 1c02 	mla	ip, ip, r2, r1
 8023988:	b2c0      	uxtb	r0, r0
 802398a:	10d9      	asrs	r1, r3, #3
 802398c:	00db      	lsls	r3, r3, #3
 802398e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8023992:	b2db      	uxtb	r3, r3
 8023994:	fb10 f007 	smulbb	r0, r0, r7
 8023998:	fa1f fc8c 	uxth.w	ip, ip
 802399c:	fb03 0302 	mla	r3, r3, r2, r0
 80239a0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80239a4:	fb1e fe07 	smulbb	lr, lr, r7
 80239a8:	fb01 e102 	mla	r1, r1, r2, lr
 80239ac:	b29a      	uxth	r2, r3
 80239ae:	f10c 0301 	add.w	r3, ip, #1
 80239b2:	b289      	uxth	r1, r1
 80239b4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80239b8:	1c53      	adds	r3, r2, #1
 80239ba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80239be:	1c4a      	adds	r2, r1, #1
 80239c0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80239c4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80239c8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80239cc:	0949      	lsrs	r1, r1, #5
 80239ce:	ea43 030c 	orr.w	r3, r3, ip
 80239d2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80239d6:	430b      	orrs	r3, r1
 80239d8:	f8a8 3000 	strh.w	r3, [r8]
 80239dc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80239de:	441c      	add	r4, r3
 80239e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80239e2:	f108 0802 	add.w	r8, r8, #2
 80239e6:	441e      	add	r6, r3
 80239e8:	f109 39ff 	add.w	r9, r9, #4294967295
 80239ec:	e74a      	b.n	8023884 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80239ee:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80239f0:	441c      	add	r4, r3
 80239f2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80239f4:	441e      	add	r6, r3
 80239f6:	9b07      	ldr	r3, [sp, #28]
 80239f8:	3302      	adds	r3, #2
 80239fa:	3d01      	subs	r5, #1
 80239fc:	9307      	str	r3, [sp, #28]
 80239fe:	e722      	b.n	8023846 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023a00:	d022      	beq.n	8023a48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8023a02:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023a04:	1e6b      	subs	r3, r5, #1
 8023a06:	fb00 4003 	mla	r0, r0, r3, r4
 8023a0a:	1400      	asrs	r0, r0, #16
 8023a0c:	f53f af37 	bmi.w	802387e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023a10:	3901      	subs	r1, #1
 8023a12:	4288      	cmp	r0, r1
 8023a14:	f6bf af33 	bge.w	802387e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023a18:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023a1a:	fb01 6303 	mla	r3, r1, r3, r6
 8023a1e:	141b      	asrs	r3, r3, #16
 8023a20:	f53f af2d 	bmi.w	802387e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023a24:	3a01      	subs	r2, #1
 8023a26:	4293      	cmp	r3, r2
 8023a28:	f6bf af29 	bge.w	802387e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023a2c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8023a30:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8023a34:	46a8      	mov	r8, r5
 8023a36:	f1b8 0f00 	cmp.w	r8, #0
 8023a3a:	dc5e      	bgt.n	8023afa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8023a3c:	9b07      	ldr	r3, [sp, #28]
 8023a3e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023a42:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023a46:	9307      	str	r3, [sp, #28]
 8023a48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023a4a:	2b00      	cmp	r3, #0
 8023a4c:	f340 80f6 	ble.w	8023c3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023a50:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023a54:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023a58:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023a5c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023a5e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023a62:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023a66:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023a6a:	eef0 6a62 	vmov.f32	s13, s5
 8023a6e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023a72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023a76:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023a7a:	ee16 4a90 	vmov	r4, s13
 8023a7e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023a82:	eef0 6a43 	vmov.f32	s13, s6
 8023a86:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023a8a:	ee12 2a90 	vmov	r2, s5
 8023a8e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023a92:	fb92 f3f3 	sdiv	r3, r2, r3
 8023a96:	ee13 2a10 	vmov	r2, s6
 8023a9a:	931f      	str	r3, [sp, #124]	; 0x7c
 8023a9c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023a9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023aa2:	9320      	str	r3, [sp, #128]	; 0x80
 8023aa4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023aa6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023aa8:	3b01      	subs	r3, #1
 8023aaa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023aae:	930a      	str	r3, [sp, #40]	; 0x28
 8023ab0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023ab2:	ee16 6a90 	vmov	r6, s13
 8023ab6:	bf14      	ite	ne
 8023ab8:	461d      	movne	r5, r3
 8023aba:	4615      	moveq	r5, r2
 8023abc:	eeb0 3a67 	vmov.f32	s6, s15
 8023ac0:	eef0 2a47 	vmov.f32	s5, s14
 8023ac4:	e6b0      	b.n	8023828 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023ac6:	f111 0a01 	adds.w	sl, r1, #1
 8023aca:	d487      	bmi.n	80239dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023acc:	45d6      	cmp	lr, sl
 8023ace:	db85      	blt.n	80239dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023ad0:	f110 0a01 	adds.w	sl, r0, #1
 8023ad4:	d482      	bmi.n	80239dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023ad6:	4553      	cmp	r3, sl
 8023ad8:	db80      	blt.n	80239dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023ada:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8023adc:	9101      	str	r1, [sp, #4]
 8023ade:	b21b      	sxth	r3, r3
 8023ae0:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8023ae4:	9300      	str	r3, [sp, #0]
 8023ae6:	e9cd c704 	strd	ip, r7, [sp, #16]
 8023aea:	fa0f f38e 	sxth.w	r3, lr
 8023aee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023af0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023af2:	4641      	mov	r1, r8
 8023af4:	f7ff fdb4 	bl	8023660 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8023af8:	e770      	b.n	80239dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023afa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023afc:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8023afe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023b02:	1430      	asrs	r0, r6, #16
 8023b04:	1423      	asrs	r3, r4, #16
 8023b06:	fb01 3000 	mla	r0, r1, r0, r3
 8023b0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023b0c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8023b10:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8023b14:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023b18:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023b1c:	8858      	ldrh	r0, [r3, #2]
 8023b1e:	f1be 0f00 	cmp.w	lr, #0
 8023b22:	d00b      	beq.n	8023b3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8023b24:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023b28:	3901      	subs	r1, #1
 8023b2a:	0049      	lsls	r1, r1, #1
 8023b2c:	3102      	adds	r1, #2
 8023b2e:	eb03 0b01 	add.w	fp, r3, r1
 8023b32:	5a5b      	ldrh	r3, [r3, r1]
 8023b34:	930e      	str	r3, [sp, #56]	; 0x38
 8023b36:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023b3a:	930f      	str	r3, [sp, #60]	; 0x3c
 8023b3c:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8023b40:	fb12 f30e 	smulbb	r3, r2, lr
 8023b44:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023b48:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023b4c:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8023b50:	10db      	asrs	r3, r3, #3
 8023b52:	ea41 010c 	orr.w	r1, r1, ip
 8023b56:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023b5a:	f1ce 0c10 	rsb	ip, lr, #16
 8023b5e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023b62:	ebac 0c02 	sub.w	ip, ip, r2
 8023b66:	ea4b 0000 	orr.w	r0, fp, r0
 8023b6a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023b6e:	4350      	muls	r0, r2
 8023b70:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023b72:	9f08      	ldr	r7, [sp, #32]
 8023b74:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8023b78:	fb0c 0c01 	mla	ip, ip, r1, r0
 8023b7c:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8023b80:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8023b84:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8023b86:	980e      	ldr	r0, [sp, #56]	; 0x38
 8023b88:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023b8c:	0412      	lsls	r2, r2, #16
 8023b8e:	ea4b 0101 	orr.w	r1, fp, r1
 8023b92:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023b96:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023b9a:	fb03 c101 	mla	r1, r3, r1, ip
 8023b9e:	4302      	orrs	r2, r0
 8023ba0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023ba4:	fb03 1202 	mla	r2, r3, r2, r1
 8023ba8:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8023bac:	0952      	lsrs	r2, r2, #5
 8023bae:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8023bb2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8023bb6:	f8b9 2000 	ldrh.w	r2, [r9]
 8023bba:	ea4b 0303 	orr.w	r3, fp, r3
 8023bbe:	b29b      	uxth	r3, r3
 8023bc0:	1211      	asrs	r1, r2, #8
 8023bc2:	1218      	asrs	r0, r3, #8
 8023bc4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023bc8:	fb11 f107 	smulbb	r1, r1, r7
 8023bcc:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8023bd0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023bd4:	00d2      	lsls	r2, r2, #3
 8023bd6:	fb00 100a 	mla	r0, r0, sl, r1
 8023bda:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8023bde:	10d9      	asrs	r1, r3, #3
 8023be0:	b2d2      	uxtb	r2, r2
 8023be2:	00db      	lsls	r3, r3, #3
 8023be4:	fb1c fc07 	smulbb	ip, ip, r7
 8023be8:	fb12 f207 	smulbb	r2, r2, r7
 8023bec:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023bf0:	b2db      	uxtb	r3, r3
 8023bf2:	b280      	uxth	r0, r0
 8023bf4:	fb01 c10a 	mla	r1, r1, sl, ip
 8023bf8:	fb03 230a 	mla	r3, r3, sl, r2
 8023bfc:	b29b      	uxth	r3, r3
 8023bfe:	b289      	uxth	r1, r1
 8023c00:	1c42      	adds	r2, r0, #1
 8023c02:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023c06:	f101 0c01 	add.w	ip, r1, #1
 8023c0a:	1c5a      	adds	r2, r3, #1
 8023c0c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023c10:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8023c14:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023c16:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8023c1a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023c1e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023c22:	4310      	orrs	r0, r2
 8023c24:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023c28:	441c      	add	r4, r3
 8023c2a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023c2c:	ea40 000c 	orr.w	r0, r0, ip
 8023c30:	f829 0b02 	strh.w	r0, [r9], #2
 8023c34:	441e      	add	r6, r3
 8023c36:	f108 38ff 	add.w	r8, r8, #4294967295
 8023c3a:	e6fc      	b.n	8023a36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8023c3c:	b013      	add	sp, #76	; 0x4c
 8023c3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023c42 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8023c42:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023c46:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8023c4a:	fb0e 4703 	mla	r7, lr, r3, r4
 8023c4e:	f1be 0f00 	cmp.w	lr, #0
 8023c52:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8023c56:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8023c5a:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8023c5e:	8808      	ldrh	r0, [r1, #0]
 8023c60:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8023c64:	db60      	blt.n	8023d28 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023c66:	45f1      	cmp	r9, lr
 8023c68:	dd5e      	ble.n	8023d28 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023c6a:	2c00      	cmp	r4, #0
 8023c6c:	db5a      	blt.n	8023d24 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023c6e:	42a3      	cmp	r3, r4
 8023c70:	dd58      	ble.n	8023d24 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023c72:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8023c76:	1c62      	adds	r2, r4, #1
 8023c78:	d459      	bmi.n	8023d2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023c7a:	4293      	cmp	r3, r2
 8023c7c:	dd57      	ble.n	8023d2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023c7e:	2d00      	cmp	r5, #0
 8023c80:	d055      	beq.n	8023d2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023c82:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8023c86:	f11e 0e01 	adds.w	lr, lr, #1
 8023c8a:	d454      	bmi.n	8023d36 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023c8c:	45f1      	cmp	r9, lr
 8023c8e:	dd52      	ble.n	8023d36 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023c90:	2e00      	cmp	r6, #0
 8023c92:	d050      	beq.n	8023d36 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023c94:	2c00      	cmp	r4, #0
 8023c96:	db4c      	blt.n	8023d32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023c98:	42a3      	cmp	r3, r4
 8023c9a:	dd4a      	ble.n	8023d32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023c9c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8023ca0:	3401      	adds	r4, #1
 8023ca2:	d405      	bmi.n	8023cb0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023ca4:	42a3      	cmp	r3, r4
 8023ca6:	dd03      	ble.n	8023cb0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023ca8:	b115      	cbz	r5, 8023cb0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023caa:	3301      	adds	r3, #1
 8023cac:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8023cb0:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8023cb4:	fb15 f406 	smulbb	r4, r5, r6
 8023cb8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023cbc:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8023cc0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023cc4:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8023cc8:	ea43 0c0c 	orr.w	ip, r3, ip
 8023ccc:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023cd0:	f1c6 0310 	rsb	r3, r6, #16
 8023cd4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023cd8:	1b5b      	subs	r3, r3, r5
 8023cda:	ea4e 0707 	orr.w	r7, lr, r7
 8023cde:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8023ce2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8023ce6:	437d      	muls	r5, r7
 8023ce8:	fb03 5c0c 	mla	ip, r3, ip, r5
 8023cec:	0403      	lsls	r3, r0, #16
 8023cee:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023cf2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023cf6:	4318      	orrs	r0, r3
 8023cf8:	0413      	lsls	r3, r2, #16
 8023cfa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023cfe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023d02:	4313      	orrs	r3, r2
 8023d04:	fb04 c000 	mla	r0, r4, r0, ip
 8023d08:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8023d0c:	fb06 0003 	mla	r0, r6, r3, r0
 8023d10:	0d43      	lsrs	r3, r0, #21
 8023d12:	0940      	lsrs	r0, r0, #5
 8023d14:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023d18:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023d1c:	4318      	orrs	r0, r3
 8023d1e:	8008      	strh	r0, [r1, #0]
 8023d20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023d24:	4684      	mov	ip, r0
 8023d26:	e7a6      	b.n	8023c76 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8023d28:	4607      	mov	r7, r0
 8023d2a:	4684      	mov	ip, r0
 8023d2c:	e7ab      	b.n	8023c86 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023d2e:	4607      	mov	r7, r0
 8023d30:	e7a9      	b.n	8023c86 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023d32:	4602      	mov	r2, r0
 8023d34:	e7b4      	b.n	8023ca0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8023d36:	4602      	mov	r2, r0
 8023d38:	e7ba      	b.n	8023cb0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08023d3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023d3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023d3e:	b08f      	sub	sp, #60	; 0x3c
 8023d40:	461d      	mov	r5, r3
 8023d42:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023d44:	920c      	str	r2, [sp, #48]	; 0x30
 8023d46:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8023d4a:	9107      	str	r1, [sp, #28]
 8023d4c:	6859      	ldr	r1, [r3, #4]
 8023d4e:	681b      	ldr	r3, [r3, #0]
 8023d50:	900d      	str	r0, [sp, #52]	; 0x34
 8023d52:	fb01 2707 	mla	r7, r1, r7, r2
 8023d56:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8023d5a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023d5c:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8023d60:	f8d3 8000 	ldr.w	r8, [r3]
 8023d64:	9b07      	ldr	r3, [sp, #28]
 8023d66:	2b00      	cmp	r3, #0
 8023d68:	dc03      	bgt.n	8023d72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023d6a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023d6c:	2b00      	cmp	r3, #0
 8023d6e:	f340 8181 	ble.w	8024074 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8023d72:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023d74:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023d78:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023d7c:	1e48      	subs	r0, r1, #1
 8023d7e:	f102 3cff 	add.w	ip, r2, #4294967295
 8023d82:	2d00      	cmp	r5, #0
 8023d84:	f340 809b 	ble.w	8023ebe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8023d88:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023d8c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023d90:	d406      	bmi.n	8023da0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023d92:	4586      	cmp	lr, r0
 8023d94:	da04      	bge.n	8023da0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023d96:	2b00      	cmp	r3, #0
 8023d98:	db02      	blt.n	8023da0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023d9a:	4563      	cmp	r3, ip
 8023d9c:	f2c0 8090 	blt.w	8023ec0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8023da0:	f11e 0e01 	adds.w	lr, lr, #1
 8023da4:	f100 8084 	bmi.w	8023eb0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023da8:	4571      	cmp	r1, lr
 8023daa:	f2c0 8081 	blt.w	8023eb0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023dae:	3301      	adds	r3, #1
 8023db0:	d47e      	bmi.n	8023eb0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023db2:	429a      	cmp	r2, r3
 8023db4:	db7c      	blt.n	8023eb0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023db6:	46aa      	mov	sl, r5
 8023db8:	46b9      	mov	r9, r7
 8023dba:	f1ba 0f00 	cmp.w	sl, #0
 8023dbe:	f340 8099 	ble.w	8023ef4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8023dc2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023dc4:	1421      	asrs	r1, r4, #16
 8023dc6:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023dca:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023dce:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023dd2:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023dd6:	f100 80d0 	bmi.w	8023f7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023dda:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023dde:	4559      	cmp	r1, fp
 8023de0:	f280 80cb 	bge.w	8023f7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023de4:	2800      	cmp	r0, #0
 8023de6:	f2c0 80c8 	blt.w	8023f7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023dea:	f103 3bff 	add.w	fp, r3, #4294967295
 8023dee:	4558      	cmp	r0, fp
 8023df0:	f280 80c3 	bge.w	8023f7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023df4:	fa0f fe8e 	sxth.w	lr, lr
 8023df8:	fb00 110e 	mla	r1, r0, lr, r1
 8023dfc:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023e00:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8023e04:	8841      	ldrh	r1, [r0, #2]
 8023e06:	f1bc 0f00 	cmp.w	ip, #0
 8023e0a:	d00b      	beq.n	8023e24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8023e0c:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8023e10:	3b01      	subs	r3, #1
 8023e12:	005b      	lsls	r3, r3, #1
 8023e14:	3302      	adds	r3, #2
 8023e16:	eb00 0e03 	add.w	lr, r0, r3
 8023e1a:	5ac3      	ldrh	r3, [r0, r3]
 8023e1c:	9308      	str	r3, [sp, #32]
 8023e1e:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8023e22:	9309      	str	r3, [sp, #36]	; 0x24
 8023e24:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8023e28:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023e2c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023e30:	ea40 000b 	orr.w	r0, r0, fp
 8023e34:	fb12 f30c 	smulbb	r3, r2, ip
 8023e38:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023e3c:	10db      	asrs	r3, r3, #3
 8023e3e:	f1cc 0e10 	rsb	lr, ip, #16
 8023e42:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023e46:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023e4a:	ebae 0e02 	sub.w	lr, lr, r2
 8023e4e:	ea4b 0101 	orr.w	r1, fp, r1
 8023e52:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023e56:	4351      	muls	r1, r2
 8023e58:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023e5a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8023e5e:	fb0e 1e00 	mla	lr, lr, r0, r1
 8023e62:	0410      	lsls	r0, r2, #16
 8023e64:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023e68:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023e6c:	4310      	orrs	r0, r2
 8023e6e:	9a08      	ldr	r2, [sp, #32]
 8023e70:	9908      	ldr	r1, [sp, #32]
 8023e72:	0412      	lsls	r2, r2, #16
 8023e74:	fb03 e000 	mla	r0, r3, r0, lr
 8023e78:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023e7c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8023e80:	ea42 020e 	orr.w	r2, r2, lr
 8023e84:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023e88:	fb03 0302 	mla	r3, r3, r2, r0
 8023e8c:	0d5a      	lsrs	r2, r3, #21
 8023e8e:	095b      	lsrs	r3, r3, #5
 8023e90:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023e94:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023e98:	4313      	orrs	r3, r2
 8023e9a:	f8a9 3000 	strh.w	r3, [r9]
 8023e9e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023ea0:	441c      	add	r4, r3
 8023ea2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023ea4:	f109 0902 	add.w	r9, r9, #2
 8023ea8:	441e      	add	r6, r3
 8023eaa:	f10a 3aff 	add.w	sl, sl, #4294967295
 8023eae:	e784      	b.n	8023dba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8023eb0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023eb2:	441c      	add	r4, r3
 8023eb4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023eb6:	3d01      	subs	r5, #1
 8023eb8:	441e      	add	r6, r3
 8023eba:	3702      	adds	r7, #2
 8023ebc:	e761      	b.n	8023d82 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023ebe:	d01d      	beq.n	8023efc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8023ec0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023ec2:	1e6b      	subs	r3, r5, #1
 8023ec4:	fb00 4003 	mla	r0, r0, r3, r4
 8023ec8:	1400      	asrs	r0, r0, #16
 8023eca:	f53f af74 	bmi.w	8023db6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023ece:	3901      	subs	r1, #1
 8023ed0:	4288      	cmp	r0, r1
 8023ed2:	f6bf af70 	bge.w	8023db6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023ed6:	991c      	ldr	r1, [sp, #112]	; 0x70
 8023ed8:	fb01 6303 	mla	r3, r1, r3, r6
 8023edc:	141b      	asrs	r3, r3, #16
 8023ede:	f53f af6a 	bmi.w	8023db6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023ee2:	3a01      	subs	r2, #1
 8023ee4:	4293      	cmp	r3, r2
 8023ee6:	f6bf af66 	bge.w	8023db6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023eea:	46a9      	mov	r9, r5
 8023eec:	46ba      	mov	sl, r7
 8023eee:	f1b9 0f00 	cmp.w	r9, #0
 8023ef2:	dc5a      	bgt.n	8023faa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8023ef4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023ef8:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8023efc:	9b07      	ldr	r3, [sp, #28]
 8023efe:	2b00      	cmp	r3, #0
 8023f00:	f340 80b8 	ble.w	8024074 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8023f04:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023f08:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023f0c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023f10:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023f12:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023f16:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023f1a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023f1e:	eef0 6a62 	vmov.f32	s13, s5
 8023f22:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023f26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023f2a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023f2e:	ee16 4a90 	vmov	r4, s13
 8023f32:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023f36:	eef0 6a43 	vmov.f32	s13, s6
 8023f3a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023f3e:	ee12 2a90 	vmov	r2, s5
 8023f42:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023f46:	fb92 f3f3 	sdiv	r3, r2, r3
 8023f4a:	ee13 2a10 	vmov	r2, s6
 8023f4e:	931b      	str	r3, [sp, #108]	; 0x6c
 8023f50:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023f52:	fb92 f3f3 	sdiv	r3, r2, r3
 8023f56:	931c      	str	r3, [sp, #112]	; 0x70
 8023f58:	9b07      	ldr	r3, [sp, #28]
 8023f5a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023f5c:	3b01      	subs	r3, #1
 8023f5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023f62:	9307      	str	r3, [sp, #28]
 8023f64:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023f66:	ee16 6a90 	vmov	r6, s13
 8023f6a:	bf14      	ite	ne
 8023f6c:	461d      	movne	r5, r3
 8023f6e:	4615      	moveq	r5, r2
 8023f70:	eeb0 3a67 	vmov.f32	s6, s15
 8023f74:	eef0 2a47 	vmov.f32	s5, s14
 8023f78:	e6f4      	b.n	8023d64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8023f7a:	f111 0b01 	adds.w	fp, r1, #1
 8023f7e:	d48e      	bmi.n	8023e9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023f80:	45de      	cmp	lr, fp
 8023f82:	db8c      	blt.n	8023e9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023f84:	f110 0b01 	adds.w	fp, r0, #1
 8023f88:	d489      	bmi.n	8023e9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023f8a:	455b      	cmp	r3, fp
 8023f8c:	db87      	blt.n	8023e9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023f8e:	b21b      	sxth	r3, r3
 8023f90:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8023f94:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8023f98:	9300      	str	r3, [sp, #0]
 8023f9a:	4642      	mov	r2, r8
 8023f9c:	fa0f f38e 	sxth.w	r3, lr
 8023fa0:	4649      	mov	r1, r9
 8023fa2:	980d      	ldr	r0, [sp, #52]	; 0x34
 8023fa4:	f7ff fe4d 	bl	8023c42 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8023fa8:	e779      	b.n	8023e9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023faa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023fac:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8023fb0:	1420      	asrs	r0, r4, #16
 8023fb2:	1431      	asrs	r1, r6, #16
 8023fb4:	fb03 0101 	mla	r1, r3, r1, r0
 8023fb8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023fbc:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023fc0:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8023fc4:	8841      	ldrh	r1, [r0, #2]
 8023fc6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023fca:	f1be 0f00 	cmp.w	lr, #0
 8023fce:	d00b      	beq.n	8023fe8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8023fd0:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8023fd4:	3b01      	subs	r3, #1
 8023fd6:	005b      	lsls	r3, r3, #1
 8023fd8:	3302      	adds	r3, #2
 8023fda:	eb00 0b03 	add.w	fp, r0, r3
 8023fde:	5ac3      	ldrh	r3, [r0, r3]
 8023fe0:	930a      	str	r3, [sp, #40]	; 0x28
 8023fe2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023fe6:	930b      	str	r3, [sp, #44]	; 0x2c
 8023fe8:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8023fec:	fb12 f30e 	smulbb	r3, r2, lr
 8023ff0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023ff4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023ff8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023ffc:	10db      	asrs	r3, r3, #3
 8023ffe:	ea40 000c 	orr.w	r0, r0, ip
 8024002:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024006:	f1ce 0c10 	rsb	ip, lr, #16
 802400a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802400e:	ebac 0c02 	sub.w	ip, ip, r2
 8024012:	ea4b 0101 	orr.w	r1, fp, r1
 8024016:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802401a:	4351      	muls	r1, r2
 802401c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802401e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8024022:	fb0c 1c00 	mla	ip, ip, r0, r1
 8024026:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802402a:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 802402e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024030:	990a      	ldr	r1, [sp, #40]	; 0x28
 8024032:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024036:	0412      	lsls	r2, r2, #16
 8024038:	ea4b 0000 	orr.w	r0, fp, r0
 802403c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024040:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8024044:	fb03 c000 	mla	r0, r3, r0, ip
 8024048:	ea42 0b0b 	orr.w	fp, r2, fp
 802404c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8024050:	fb03 000b 	mla	r0, r3, fp, r0
 8024054:	0d43      	lsrs	r3, r0, #21
 8024056:	0940      	lsrs	r0, r0, #5
 8024058:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802405c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024060:	4318      	orrs	r0, r3
 8024062:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024064:	f82a 0b02 	strh.w	r0, [sl], #2
 8024068:	441c      	add	r4, r3
 802406a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802406c:	f109 39ff 	add.w	r9, r9, #4294967295
 8024070:	441e      	add	r6, r3
 8024072:	e73c      	b.n	8023eee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8024074:	b00f      	add	sp, #60	; 0x3c
 8024076:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802407a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 802407a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802407e:	b085      	sub	sp, #20
 8024080:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024084:	9102      	str	r1, [sp, #8]
 8024086:	2c00      	cmp	r4, #0
 8024088:	fb04 7103 	mla	r1, r4, r3, r7
 802408c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024090:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024094:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024098:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802409c:	f2c0 811b 	blt.w	80242d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80240a0:	45a6      	cmp	lr, r4
 80240a2:	f340 8118 	ble.w	80242d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80240a6:	2f00      	cmp	r7, #0
 80240a8:	f2c0 8113 	blt.w	80242d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80240ac:	42bb      	cmp	r3, r7
 80240ae:	f340 8110 	ble.w	80242d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80240b2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80240b6:	1c7a      	adds	r2, r7, #1
 80240b8:	f100 8110 	bmi.w	80242dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80240bc:	4293      	cmp	r3, r2
 80240be:	f340 810d 	ble.w	80242dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80240c2:	2e00      	cmp	r6, #0
 80240c4:	f000 810c 	beq.w	80242e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 80240c8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80240cc:	3401      	adds	r4, #1
 80240ce:	f100 810b 	bmi.w	80242e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80240d2:	45a6      	cmp	lr, r4
 80240d4:	f340 8108 	ble.w	80242e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80240d8:	2800      	cmp	r0, #0
 80240da:	f000 8108 	beq.w	80242ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80240de:	2f00      	cmp	r7, #0
 80240e0:	f2c0 8100 	blt.w	80242e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80240e4:	42bb      	cmp	r3, r7
 80240e6:	f340 80fd 	ble.w	80242e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80240ea:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80240ee:	3701      	adds	r7, #1
 80240f0:	f100 8100 	bmi.w	80242f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80240f4:	42bb      	cmp	r3, r7
 80240f6:	f340 80fd 	ble.w	80242f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80240fa:	2e00      	cmp	r6, #0
 80240fc:	f000 80fc 	beq.w	80242f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8024100:	3301      	adds	r3, #1
 8024102:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8024106:	b2b6      	uxth	r6, r6
 8024108:	b280      	uxth	r0, r0
 802410a:	fb00 fe06 	mul.w	lr, r0, r6
 802410e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024112:	0136      	lsls	r6, r6, #4
 8024114:	eba6 070e 	sub.w	r7, r6, lr
 8024118:	b280      	uxth	r0, r0
 802411a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802411e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024122:	b2bf      	uxth	r7, r7
 8024124:	1a1b      	subs	r3, r3, r0
 8024126:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802412a:	b29b      	uxth	r3, r3
 802412c:	fb0a f607 	mul.w	r6, sl, r7
 8024130:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024134:	fb0b 6603 	mla	r6, fp, r3, r6
 8024138:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802413c:	fb00 6609 	mla	r6, r0, r9, r6
 8024140:	fb0e 6608 	mla	r6, lr, r8, r6
 8024144:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024148:	9600      	str	r6, [sp, #0]
 802414a:	2e00      	cmp	r6, #0
 802414c:	f000 80be 	beq.w	80242cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8024150:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024154:	fb0b fc0c 	mul.w	ip, fp, ip
 8024158:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802415c:	fb0b f505 	mul.w	r5, fp, r5
 8024160:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024164:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024168:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802416c:	44dc      	add	ip, fp
 802416e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024172:	9501      	str	r5, [sp, #4]
 8024174:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024178:	9503      	str	r5, [sp, #12]
 802417a:	9d01      	ldr	r5, [sp, #4]
 802417c:	9e02      	ldr	r6, [sp, #8]
 802417e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024182:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024186:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802418a:	fb0a fc0c 	mul.w	ip, sl, ip
 802418e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024192:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024196:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802419a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802419e:	4465      	add	r5, ip
 80241a0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80241a4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80241a8:	fb09 fc0c 	mul.w	ip, r9, ip
 80241ac:	fb09 f904 	mul.w	r9, r9, r4
 80241b0:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80241b4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80241b8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80241bc:	fb08 f404 	mul.w	r4, r8, r4
 80241c0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80241c4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80241c8:	fb08 f802 	mul.w	r8, r8, r2
 80241cc:	fb0a fa01 	mul.w	sl, sl, r1
 80241d0:	0a22      	lsrs	r2, r4, #8
 80241d2:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80241d6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80241da:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80241de:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80241e2:	4414      	add	r4, r2
 80241e4:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80241e8:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80241ec:	0a2d      	lsrs	r5, r5, #8
 80241ee:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80241f2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80241f6:	9a03      	ldr	r2, [sp, #12]
 80241f8:	8836      	ldrh	r6, [r6, #0]
 80241fa:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80241fe:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024202:	437d      	muls	r5, r7
 8024204:	4461      	add	r1, ip
 8024206:	0a24      	lsrs	r4, r4, #8
 8024208:	fb02 5503 	mla	r5, r2, r3, r5
 802420c:	0a09      	lsrs	r1, r1, #8
 802420e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024212:	fb04 540e 	mla	r4, r4, lr, r5
 8024216:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802421a:	fb01 4100 	mla	r1, r1, r0, r4
 802421e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024222:	0a09      	lsrs	r1, r1, #8
 8024224:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024228:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802422c:	fb07 f70a 	mul.w	r7, r7, sl
 8024230:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024234:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8024238:	fb03 7101 	mla	r1, r3, r1, r7
 802423c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024240:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8024244:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024248:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802424c:	fb00 e101 	mla	r1, r0, r1, lr
 8024250:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8024254:	9a00      	ldr	r2, [sp, #0]
 8024256:	b287      	uxth	r7, r0
 8024258:	437a      	muls	r2, r7
 802425a:	0a09      	lsrs	r1, r1, #8
 802425c:	1c53      	adds	r3, r2, #1
 802425e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024262:	4321      	orrs	r1, r4
 8024264:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024268:	1235      	asrs	r5, r6, #8
 802426a:	0c0a      	lsrs	r2, r1, #16
 802426c:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8024270:	b2db      	uxtb	r3, r3
 8024272:	fb12 f207 	smulbb	r2, r2, r7
 8024276:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802427a:	fb05 2503 	mla	r5, r5, r3, r2
 802427e:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8024282:	10f2      	asrs	r2, r6, #3
 8024284:	b2c8      	uxtb	r0, r1
 8024286:	00f6      	lsls	r6, r6, #3
 8024288:	fb14 f407 	smulbb	r4, r4, r7
 802428c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024290:	b2f6      	uxtb	r6, r6
 8024292:	fb10 f007 	smulbb	r0, r0, r7
 8024296:	fb02 4203 	mla	r2, r2, r3, r4
 802429a:	b2ad      	uxth	r5, r5
 802429c:	fb06 0303 	mla	r3, r6, r3, r0
 80242a0:	b299      	uxth	r1, r3
 80242a2:	b294      	uxth	r4, r2
 80242a4:	1c6b      	adds	r3, r5, #1
 80242a6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80242aa:	1c62      	adds	r2, r4, #1
 80242ac:	1c4b      	adds	r3, r1, #1
 80242ae:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80242b2:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80242b6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80242ba:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80242be:	0952      	lsrs	r2, r2, #5
 80242c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80242c4:	432b      	orrs	r3, r5
 80242c6:	4313      	orrs	r3, r2
 80242c8:	9a02      	ldr	r2, [sp, #8]
 80242ca:	8013      	strh	r3, [r2, #0]
 80242cc:	b005      	add	sp, #20
 80242ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80242d2:	2500      	movs	r5, #0
 80242d4:	e6ef      	b.n	80240b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80242d6:	2100      	movs	r1, #0
 80242d8:	460d      	mov	r5, r1
 80242da:	e6f7      	b.n	80240cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80242dc:	2100      	movs	r1, #0
 80242de:	e6f5      	b.n	80240cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80242e0:	4631      	mov	r1, r6
 80242e2:	e6f3      	b.n	80240cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80242e4:	2400      	movs	r4, #0
 80242e6:	e702      	b.n	80240ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80242e8:	2200      	movs	r2, #0
 80242ea:	4614      	mov	r4, r2
 80242ec:	e70b      	b.n	8024106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80242ee:	4602      	mov	r2, r0
 80242f0:	4604      	mov	r4, r0
 80242f2:	e708      	b.n	8024106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80242f4:	2200      	movs	r2, #0
 80242f6:	e706      	b.n	8024106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80242f8:	4632      	mov	r2, r6
 80242fa:	e704      	b.n	8024106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

080242fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80242fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024300:	b09d      	sub	sp, #116	; 0x74
 8024302:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8024306:	9219      	str	r2, [sp, #100]	; 0x64
 8024308:	9307      	str	r3, [sp, #28]
 802430a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 802430c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8024310:	931a      	str	r3, [sp, #104]	; 0x68
 8024312:	9117      	str	r1, [sp, #92]	; 0x5c
 8024314:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8024318:	901b      	str	r0, [sp, #108]	; 0x6c
 802431a:	6850      	ldr	r0, [r2, #4]
 802431c:	6812      	ldr	r2, [r2, #0]
 802431e:	fb00 1303 	mla	r3, r0, r3, r1
 8024322:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024326:	930a      	str	r3, [sp, #40]	; 0x28
 8024328:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802432a:	681b      	ldr	r3, [r3, #0]
 802432c:	9310      	str	r3, [sp, #64]	; 0x40
 802432e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8024332:	930b      	str	r3, [sp, #44]	; 0x2c
 8024334:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024336:	2b00      	cmp	r3, #0
 8024338:	dc03      	bgt.n	8024342 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 802433a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802433c:	2b00      	cmp	r3, #0
 802433e:	f340 8375 	ble.w	8024a2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024342:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8024344:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024348:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802434c:	1e48      	subs	r0, r1, #1
 802434e:	1e57      	subs	r7, r2, #1
 8024350:	9b07      	ldr	r3, [sp, #28]
 8024352:	2b00      	cmp	r3, #0
 8024354:	f340 818e 	ble.w	8024674 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8024358:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802435c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024360:	d406      	bmi.n	8024370 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024362:	4584      	cmp	ip, r0
 8024364:	da04      	bge.n	8024370 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024366:	2b00      	cmp	r3, #0
 8024368:	db02      	blt.n	8024370 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802436a:	42bb      	cmp	r3, r7
 802436c:	f2c0 8183 	blt.w	8024676 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8024370:	f11c 0c01 	adds.w	ip, ip, #1
 8024374:	f100 8173 	bmi.w	802465e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024378:	4561      	cmp	r1, ip
 802437a:	f2c0 8170 	blt.w	802465e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802437e:	3301      	adds	r3, #1
 8024380:	f100 816d 	bmi.w	802465e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024384:	429a      	cmp	r2, r3
 8024386:	f2c0 816a 	blt.w	802465e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802438a:	9b07      	ldr	r3, [sp, #28]
 802438c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802438e:	9318      	str	r3, [sp, #96]	; 0x60
 8024390:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024392:	2b00      	cmp	r3, #0
 8024394:	f340 818c 	ble.w	80246b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8024398:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 802439a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802439c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80243a0:	689b      	ldr	r3, [r3, #8]
 80243a2:	1422      	asrs	r2, r4, #16
 80243a4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80243a8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80243ac:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80243b0:	f100 81cd 	bmi.w	802474e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80243b4:	f103 38ff 	add.w	r8, r3, #4294967295
 80243b8:	4542      	cmp	r2, r8
 80243ba:	f280 81c8 	bge.w	802474e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80243be:	f1bc 0f00 	cmp.w	ip, #0
 80243c2:	f2c0 81c4 	blt.w	802474e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80243c6:	f10e 38ff 	add.w	r8, lr, #4294967295
 80243ca:	45c4      	cmp	ip, r8
 80243cc:	f280 81bf 	bge.w	802474e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80243d0:	b21b      	sxth	r3, r3
 80243d2:	fb0c 2203 	mla	r2, ip, r3, r2
 80243d6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80243d8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80243dc:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80243e0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80243e4:	2800      	cmp	r0, #0
 80243e6:	f000 81a9 	beq.w	802473c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80243ea:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80243ee:	950c      	str	r5, [sp, #48]	; 0x30
 80243f0:	0e2d      	lsrs	r5, r5, #24
 80243f2:	9513      	str	r5, [sp, #76]	; 0x4c
 80243f4:	b181      	cbz	r1, 8024418 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80243f6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80243fa:	3b01      	subs	r3, #1
 80243fc:	009b      	lsls	r3, r3, #2
 80243fe:	3304      	adds	r3, #4
 8024400:	eb08 0c03 	add.w	ip, r8, r3
 8024404:	f858 3003 	ldr.w	r3, [r8, r3]
 8024408:	9308      	str	r3, [sp, #32]
 802440a:	0e1b      	lsrs	r3, r3, #24
 802440c:	9311      	str	r3, [sp, #68]	; 0x44
 802440e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8024412:	930d      	str	r3, [sp, #52]	; 0x34
 8024414:	0e1b      	lsrs	r3, r3, #24
 8024416:	9314      	str	r3, [sp, #80]	; 0x50
 8024418:	b280      	uxth	r0, r0
 802441a:	b289      	uxth	r1, r1
 802441c:	fb00 f901 	mul.w	r9, r0, r1
 8024420:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8024424:	0100      	lsls	r0, r0, #4
 8024426:	eba0 0809 	sub.w	r8, r0, r9
 802442a:	b289      	uxth	r1, r1
 802442c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8024430:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8024432:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024434:	fa1f f888 	uxth.w	r8, r8
 8024438:	1a5b      	subs	r3, r3, r1
 802443a:	b29b      	uxth	r3, r3
 802443c:	fb08 f000 	mul.w	r0, r8, r0
 8024440:	fb03 000e 	mla	r0, r3, lr, r0
 8024444:	fb01 0005 	mla	r0, r1, r5, r0
 8024448:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802444a:	fb09 0005 	mla	r0, r9, r5, r0
 802444e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8024452:	2800      	cmp	r0, #0
 8024454:	f000 80fa 	beq.w	802464c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024458:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802445c:	d01b      	beq.n	8024496 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802445e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8024462:	fb0e fa0a 	mul.w	sl, lr, sl
 8024466:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802446a:	fb0e fe02 	mul.w	lr, lr, r2
 802446e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8024472:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024476:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802447a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802447e:	4452      	add	r2, sl
 8024480:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024484:	0a12      	lsrs	r2, r2, #8
 8024486:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802448a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802448e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024492:	ea42 020c 	orr.w	r2, r2, ip
 8024496:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024498:	2dff      	cmp	r5, #255	; 0xff
 802449a:	d021      	beq.n	80244e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 802449c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802449e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80244a2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80244a4:	fb05 fb0b 	mul.w	fp, r5, fp
 80244a8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80244aa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80244ae:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80244b0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80244b4:	fb05 fa0a 	mul.w	sl, r5, sl
 80244b8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80244bc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80244c0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80244c4:	44de      	add	lr, fp
 80244c6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80244ca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80244ce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80244d2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80244d6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80244da:	ea4e 050a 	orr.w	r5, lr, sl
 80244de:	950c      	str	r5, [sp, #48]	; 0x30
 80244e0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80244e2:	2dff      	cmp	r5, #255	; 0xff
 80244e4:	d021      	beq.n	802452a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80244e6:	9d08      	ldr	r5, [sp, #32]
 80244e8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80244ec:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80244ee:	fb05 fb0b 	mul.w	fp, r5, fp
 80244f2:	9d08      	ldr	r5, [sp, #32]
 80244f4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80244f8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80244fa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80244fe:	fb05 fa0a 	mul.w	sl, r5, sl
 8024502:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024506:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802450a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802450e:	44de      	add	lr, fp
 8024510:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024514:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024518:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802451c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024520:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024524:	ea4e 050a 	orr.w	r5, lr, sl
 8024528:	9508      	str	r5, [sp, #32]
 802452a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802452c:	2dff      	cmp	r5, #255	; 0xff
 802452e:	d021      	beq.n	8024574 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8024530:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024532:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024536:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024538:	fb05 fb0b 	mul.w	fp, r5, fp
 802453c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802453e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024542:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024544:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024548:	fb05 fa0a 	mul.w	sl, r5, sl
 802454c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024550:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024554:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024558:	44de      	add	lr, fp
 802455a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802455e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024562:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024566:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802456a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802456e:	ea4e 050a 	orr.w	r5, lr, sl
 8024572:	950d      	str	r5, [sp, #52]	; 0x34
 8024574:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024576:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802457a:	9d08      	ldr	r5, [sp, #32]
 802457c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8024580:	fb08 fc0c 	mul.w	ip, r8, ip
 8024584:	fb03 cc0e 	mla	ip, r3, lr, ip
 8024588:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802458c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802458e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024592:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024596:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024598:	fb09 cc0e 	mla	ip, r9, lr, ip
 802459c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80245a0:	fb08 f80e 	mul.w	r8, r8, lr
 80245a4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80245a8:	fb03 8202 	mla	r2, r3, r2, r8
 80245ac:	9b08      	ldr	r3, [sp, #32]
 80245ae:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80245b0:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80245b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80245b6:	fb01 220a 	mla	r2, r1, sl, r2
 80245ba:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80245be:	fb09 2901 	mla	r9, r9, r1, r2
 80245c2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80245c4:	883b      	ldrh	r3, [r7, #0]
 80245c6:	4342      	muls	r2, r0
 80245c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80245cc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80245d0:	1c50      	adds	r0, r2, #1
 80245d2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80245d6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80245da:	ea4c 0c09 	orr.w	ip, ip, r9
 80245de:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80245e2:	1219      	asrs	r1, r3, #8
 80245e4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80245e8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80245ec:	b2c0      	uxtb	r0, r0
 80245ee:	fb12 f205 	smulbb	r2, r2, r5
 80245f2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80245f6:	fb01 2100 	mla	r1, r1, r0, r2
 80245fa:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80245fe:	10da      	asrs	r2, r3, #3
 8024600:	fa5f fc8c 	uxtb.w	ip, ip
 8024604:	00db      	lsls	r3, r3, #3
 8024606:	fb1c fc05 	smulbb	ip, ip, r5
 802460a:	b2db      	uxtb	r3, r3
 802460c:	b289      	uxth	r1, r1
 802460e:	fb03 c300 	mla	r3, r3, r0, ip
 8024612:	fa1f fc83 	uxth.w	ip, r3
 8024616:	1c4b      	adds	r3, r1, #1
 8024618:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802461c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024620:	fb1e fe05 	smulbb	lr, lr, r5
 8024624:	f10c 0301 	add.w	r3, ip, #1
 8024628:	fb02 e200 	mla	r2, r2, r0, lr
 802462c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8024630:	b292      	uxth	r2, r2
 8024632:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8024636:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802463a:	430b      	orrs	r3, r1
 802463c:	1c51      	adds	r1, r2, #1
 802463e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024642:	0952      	lsrs	r2, r2, #5
 8024644:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024648:	4313      	orrs	r3, r2
 802464a:	803b      	strh	r3, [r7, #0]
 802464c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802464e:	441c      	add	r4, r3
 8024650:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024652:	441e      	add	r6, r3
 8024654:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024656:	3b01      	subs	r3, #1
 8024658:	3702      	adds	r7, #2
 802465a:	9318      	str	r3, [sp, #96]	; 0x60
 802465c:	e698      	b.n	8024390 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802465e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024660:	441c      	add	r4, r3
 8024662:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024664:	441e      	add	r6, r3
 8024666:	9b07      	ldr	r3, [sp, #28]
 8024668:	3b01      	subs	r3, #1
 802466a:	9307      	str	r3, [sp, #28]
 802466c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802466e:	3302      	adds	r3, #2
 8024670:	930a      	str	r3, [sp, #40]	; 0x28
 8024672:	e66d      	b.n	8024350 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8024674:	d023      	beq.n	80246be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8024676:	9b07      	ldr	r3, [sp, #28]
 8024678:	9829      	ldr	r0, [sp, #164]	; 0xa4
 802467a:	3b01      	subs	r3, #1
 802467c:	fb00 4003 	mla	r0, r0, r3, r4
 8024680:	1400      	asrs	r0, r0, #16
 8024682:	f53f ae82 	bmi.w	802438a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024686:	3901      	subs	r1, #1
 8024688:	4288      	cmp	r0, r1
 802468a:	f6bf ae7e 	bge.w	802438a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802468e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8024690:	fb01 6303 	mla	r3, r1, r3, r6
 8024694:	141b      	asrs	r3, r3, #16
 8024696:	f53f ae78 	bmi.w	802438a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802469a:	3a01      	subs	r2, #1
 802469c:	4293      	cmp	r3, r2
 802469e:	f6bf ae74 	bge.w	802438a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80246a2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80246a6:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80246aa:	f1bb 0f00 	cmp.w	fp, #0
 80246ae:	dc6c      	bgt.n	802478a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80246b0:	9b07      	ldr	r3, [sp, #28]
 80246b2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80246b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80246b8:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80246bc:	930a      	str	r3, [sp, #40]	; 0x28
 80246be:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80246c0:	2b00      	cmp	r3, #0
 80246c2:	f340 81b3 	ble.w	8024a2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80246c6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80246ca:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80246ce:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80246d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80246d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80246d8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80246dc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80246e0:	eef0 6a62 	vmov.f32	s13, s5
 80246e4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80246e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80246ec:	ee77 2a62 	vsub.f32	s5, s14, s5
 80246f0:	ee16 4a90 	vmov	r4, s13
 80246f4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80246f8:	eef0 6a43 	vmov.f32	s13, s6
 80246fc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024700:	ee12 2a90 	vmov	r2, s5
 8024704:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024708:	fb92 f3f3 	sdiv	r3, r2, r3
 802470c:	ee13 2a10 	vmov	r2, s6
 8024710:	9329      	str	r3, [sp, #164]	; 0xa4
 8024712:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024714:	fb92 f3f3 	sdiv	r3, r2, r3
 8024718:	932a      	str	r3, [sp, #168]	; 0xa8
 802471a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802471c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802471e:	3b01      	subs	r3, #1
 8024720:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024724:	9317      	str	r3, [sp, #92]	; 0x5c
 8024726:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024728:	bf08      	it	eq
 802472a:	4613      	moveq	r3, r2
 802472c:	ee16 6a90 	vmov	r6, s13
 8024730:	9307      	str	r3, [sp, #28]
 8024732:	eeb0 3a67 	vmov.f32	s6, s15
 8024736:	eef0 2a47 	vmov.f32	s5, s14
 802473a:	e5fb      	b.n	8024334 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802473c:	2900      	cmp	r1, #0
 802473e:	f43f ae6b 	beq.w	8024418 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8024742:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8024746:	9308      	str	r3, [sp, #32]
 8024748:	0e1b      	lsrs	r3, r3, #24
 802474a:	9311      	str	r3, [sp, #68]	; 0x44
 802474c:	e664      	b.n	8024418 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802474e:	f112 0801 	adds.w	r8, r2, #1
 8024752:	f53f af7b 	bmi.w	802464c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024756:	4543      	cmp	r3, r8
 8024758:	f6ff af78 	blt.w	802464c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802475c:	f11c 0801 	adds.w	r8, ip, #1
 8024760:	f53f af74 	bmi.w	802464c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024764:	45c6      	cmp	lr, r8
 8024766:	f6ff af71 	blt.w	802464c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802476a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802476c:	9201      	str	r2, [sp, #4]
 802476e:	fa0f f28e 	sxth.w	r2, lr
 8024772:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8024776:	e9cd c002 	strd	ip, r0, [sp, #8]
 802477a:	9200      	str	r2, [sp, #0]
 802477c:	b21b      	sxth	r3, r3
 802477e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024780:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8024782:	4639      	mov	r1, r7
 8024784:	f7ff fc79 	bl	802407a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8024788:	e760      	b.n	802464c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802478a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802478c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802478e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024792:	1427      	asrs	r7, r4, #16
 8024794:	1433      	asrs	r3, r6, #16
 8024796:	fb01 7303 	mla	r3, r1, r3, r7
 802479a:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802479e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80247a2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80247a6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80247aa:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80247ae:	2a00      	cmp	r2, #0
 80247b0:	f000 8133 	beq.w	8024a1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80247b4:	687d      	ldr	r5, [r7, #4]
 80247b6:	950e      	str	r5, [sp, #56]	; 0x38
 80247b8:	0e2d      	lsrs	r5, r5, #24
 80247ba:	9515      	str	r5, [sp, #84]	; 0x54
 80247bc:	b178      	cbz	r0, 80247de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80247be:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80247c2:	3901      	subs	r1, #1
 80247c4:	0089      	lsls	r1, r1, #2
 80247c6:	3104      	adds	r1, #4
 80247c8:	eb07 0e01 	add.w	lr, r7, r1
 80247cc:	5879      	ldr	r1, [r7, r1]
 80247ce:	9109      	str	r1, [sp, #36]	; 0x24
 80247d0:	0e09      	lsrs	r1, r1, #24
 80247d2:	9112      	str	r1, [sp, #72]	; 0x48
 80247d4:	f8de 1004 	ldr.w	r1, [lr, #4]
 80247d8:	910f      	str	r1, [sp, #60]	; 0x3c
 80247da:	0e09      	lsrs	r1, r1, #24
 80247dc:	9116      	str	r1, [sp, #88]	; 0x58
 80247de:	b292      	uxth	r2, r2
 80247e0:	b280      	uxth	r0, r0
 80247e2:	fb02 f800 	mul.w	r8, r2, r0
 80247e6:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80247ea:	0112      	lsls	r2, r2, #4
 80247ec:	eba2 0e08 	sub.w	lr, r2, r8
 80247f0:	b280      	uxth	r0, r0
 80247f2:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80247f6:	9915      	ldr	r1, [sp, #84]	; 0x54
 80247f8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80247fa:	fa1f fe8e 	uxth.w	lr, lr
 80247fe:	1a12      	subs	r2, r2, r0
 8024800:	b292      	uxth	r2, r2
 8024802:	fb0e f101 	mul.w	r1, lr, r1
 8024806:	fb02 110c 	mla	r1, r2, ip, r1
 802480a:	fb00 1105 	mla	r1, r0, r5, r1
 802480e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024810:	fb08 1105 	mla	r1, r8, r5, r1
 8024814:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024818:	2900      	cmp	r1, #0
 802481a:	f000 80f5 	beq.w	8024a08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802481e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024822:	d019      	beq.n	8024858 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8024824:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024828:	fb0c fa0a 	mul.w	sl, ip, sl
 802482c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024830:	fb0c fc03 	mul.w	ip, ip, r3
 8024834:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024838:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802483c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024840:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024844:	4453      	add	r3, sl
 8024846:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802484a:	0a1b      	lsrs	r3, r3, #8
 802484c:	0a3f      	lsrs	r7, r7, #8
 802484e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024852:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024856:	433b      	orrs	r3, r7
 8024858:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802485a:	2dff      	cmp	r5, #255	; 0xff
 802485c:	d020      	beq.n	80248a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802485e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024860:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024864:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024866:	436f      	muls	r7, r5
 8024868:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802486a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802486e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024870:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024874:	fb05 fa0a 	mul.w	sl, r5, sl
 8024878:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802487c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024880:	44bc      	add	ip, r7
 8024882:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024886:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802488a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802488e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024892:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024896:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802489a:	ea4c 050a 	orr.w	r5, ip, sl
 802489e:	950e      	str	r5, [sp, #56]	; 0x38
 80248a0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80248a2:	2dff      	cmp	r5, #255	; 0xff
 80248a4:	d020      	beq.n	80248e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80248a6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80248a8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80248ac:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80248ae:	436f      	muls	r7, r5
 80248b0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80248b2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80248b6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80248b8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80248bc:	fb05 fa0a 	mul.w	sl, r5, sl
 80248c0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80248c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80248c8:	44bc      	add	ip, r7
 80248ca:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80248ce:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80248d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80248d6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80248da:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80248de:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80248e2:	ea4c 050a 	orr.w	r5, ip, sl
 80248e6:	9509      	str	r5, [sp, #36]	; 0x24
 80248e8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80248ea:	2dff      	cmp	r5, #255	; 0xff
 80248ec:	d020      	beq.n	8024930 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80248ee:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80248f0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80248f4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80248f6:	436f      	muls	r7, r5
 80248f8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80248fa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80248fe:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024900:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024904:	fb05 fa0a 	mul.w	sl, r5, sl
 8024908:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802490c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024910:	44bc      	add	ip, r7
 8024912:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024916:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802491a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802491e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024922:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024926:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802492a:	ea4c 050a 	orr.w	r5, ip, sl
 802492e:	950f      	str	r5, [sp, #60]	; 0x3c
 8024930:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024932:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024936:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024938:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802493c:	fb0e f707 	mul.w	r7, lr, r7
 8024940:	fb02 770c 	mla	r7, r2, ip, r7
 8024944:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024948:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802494a:	fb00 770c 	mla	r7, r0, ip, r7
 802494e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024952:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024954:	fb08 770c 	mla	r7, r8, ip, r7
 8024958:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802495c:	fb0e fe0c 	mul.w	lr, lr, ip
 8024960:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024964:	fb02 e303 	mla	r3, r2, r3, lr
 8024968:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802496a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802496c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024970:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024972:	fb00 330a 	mla	r3, r0, sl, r3
 8024976:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 802497a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802497e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024980:	f8b9 0000 	ldrh.w	r0, [r9]
 8024984:	4359      	muls	r1, r3
 8024986:	0a3f      	lsrs	r7, r7, #8
 8024988:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802498c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024990:	1c4b      	adds	r3, r1, #1
 8024992:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024996:	ea47 070c 	orr.w	r7, r7, ip
 802499a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802499e:	1202      	asrs	r2, r0, #8
 80249a0:	0c3b      	lsrs	r3, r7, #16
 80249a2:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80249a6:	b2c9      	uxtb	r1, r1
 80249a8:	fb13 f305 	smulbb	r3, r3, r5
 80249ac:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80249b0:	fb02 3201 	mla	r2, r2, r1, r3
 80249b4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80249b8:	10c3      	asrs	r3, r0, #3
 80249ba:	b2ff      	uxtb	r7, r7
 80249bc:	00c0      	lsls	r0, r0, #3
 80249be:	b2c0      	uxtb	r0, r0
 80249c0:	fb17 f705 	smulbb	r7, r7, r5
 80249c4:	fb00 7001 	mla	r0, r0, r1, r7
 80249c8:	b292      	uxth	r2, r2
 80249ca:	fb1c fc05 	smulbb	ip, ip, r5
 80249ce:	b280      	uxth	r0, r0
 80249d0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80249d4:	fb03 c301 	mla	r3, r3, r1, ip
 80249d8:	1c51      	adds	r1, r2, #1
 80249da:	f100 0c01 	add.w	ip, r0, #1
 80249de:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80249e2:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80249e6:	b29b      	uxth	r3, r3
 80249e8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80249ec:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80249f0:	ea4c 0202 	orr.w	r2, ip, r2
 80249f4:	f103 0c01 	add.w	ip, r3, #1
 80249f8:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80249fc:	095b      	lsrs	r3, r3, #5
 80249fe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024a02:	431a      	orrs	r2, r3
 8024a04:	f8a9 2000 	strh.w	r2, [r9]
 8024a08:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024a0a:	441c      	add	r4, r3
 8024a0c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024a0e:	f109 0902 	add.w	r9, r9, #2
 8024a12:	441e      	add	r6, r3
 8024a14:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024a18:	e647      	b.n	80246aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8024a1a:	2800      	cmp	r0, #0
 8024a1c:	f43f aedf 	beq.w	80247de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024a20:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8024a24:	9109      	str	r1, [sp, #36]	; 0x24
 8024a26:	0e09      	lsrs	r1, r1, #24
 8024a28:	9112      	str	r1, [sp, #72]	; 0x48
 8024a2a:	e6d8      	b.n	80247de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024a2c:	b01d      	add	sp, #116	; 0x74
 8024a2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024a32 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8024a32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024a36:	b085      	sub	sp, #20
 8024a38:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024a3c:	9102      	str	r1, [sp, #8]
 8024a3e:	2c00      	cmp	r4, #0
 8024a40:	fb04 7103 	mla	r1, r4, r3, r7
 8024a44:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024a48:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024a4c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024a50:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024a54:	f2c0 810c 	blt.w	8024c70 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024a58:	45a6      	cmp	lr, r4
 8024a5a:	f340 8109 	ble.w	8024c70 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024a5e:	2f00      	cmp	r7, #0
 8024a60:	f2c0 8104 	blt.w	8024c6c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024a64:	42bb      	cmp	r3, r7
 8024a66:	f340 8101 	ble.w	8024c6c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024a6a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024a6e:	1c7a      	adds	r2, r7, #1
 8024a70:	f100 8101 	bmi.w	8024c76 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024a74:	4293      	cmp	r3, r2
 8024a76:	f340 80fe 	ble.w	8024c76 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024a7a:	2e00      	cmp	r6, #0
 8024a7c:	f000 80fd 	beq.w	8024c7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8024a80:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024a84:	3401      	adds	r4, #1
 8024a86:	f100 80fc 	bmi.w	8024c82 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024a8a:	45a6      	cmp	lr, r4
 8024a8c:	f340 80f9 	ble.w	8024c82 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024a90:	2800      	cmp	r0, #0
 8024a92:	f000 80f9 	beq.w	8024c88 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8024a96:	2f00      	cmp	r7, #0
 8024a98:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8024a9c:	f2c0 80ef 	blt.w	8024c7e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024aa0:	42bb      	cmp	r3, r7
 8024aa2:	f340 80ec 	ble.w	8024c7e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024aa6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8024aaa:	3701      	adds	r7, #1
 8024aac:	f100 80ef 	bmi.w	8024c8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024ab0:	42bb      	cmp	r3, r7
 8024ab2:	f340 80ec 	ble.w	8024c8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024ab6:	2e00      	cmp	r6, #0
 8024ab8:	f000 80eb 	beq.w	8024c92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8024abc:	6852      	ldr	r2, [r2, #4]
 8024abe:	b2b6      	uxth	r6, r6
 8024ac0:	b280      	uxth	r0, r0
 8024ac2:	fb00 fe06 	mul.w	lr, r0, r6
 8024ac6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024aca:	0136      	lsls	r6, r6, #4
 8024acc:	eba6 070e 	sub.w	r7, r6, lr
 8024ad0:	b280      	uxth	r0, r0
 8024ad2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8024ad6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024ada:	b2bf      	uxth	r7, r7
 8024adc:	1a1b      	subs	r3, r3, r0
 8024ade:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024ae2:	b29b      	uxth	r3, r3
 8024ae4:	fb07 f60a 	mul.w	r6, r7, sl
 8024ae8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024aec:	fb0b 6603 	mla	r6, fp, r3, r6
 8024af0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024af4:	fb00 6609 	mla	r6, r0, r9, r6
 8024af8:	fb0e 6608 	mla	r6, lr, r8, r6
 8024afc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024b00:	9600      	str	r6, [sp, #0]
 8024b02:	2e00      	cmp	r6, #0
 8024b04:	f000 80af 	beq.w	8024c66 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8024b08:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024b0c:	fb0b fc0c 	mul.w	ip, fp, ip
 8024b10:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024b14:	fb0b f505 	mul.w	r5, fp, r5
 8024b18:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024b1c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024b20:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024b24:	44dc      	add	ip, fp
 8024b26:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b2a:	9501      	str	r5, [sp, #4]
 8024b2c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024b30:	9503      	str	r5, [sp, #12]
 8024b32:	9d01      	ldr	r5, [sp, #4]
 8024b34:	9e02      	ldr	r6, [sp, #8]
 8024b36:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024b3a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024b3e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024b42:	fb0a fc0c 	mul.w	ip, sl, ip
 8024b46:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024b4a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024b4e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024b52:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024b56:	4465      	add	r5, ip
 8024b58:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024b5c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024b60:	fb09 fc0c 	mul.w	ip, r9, ip
 8024b64:	fb09 f904 	mul.w	r9, r9, r4
 8024b68:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024b6c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024b70:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024b74:	fb08 f404 	mul.w	r4, r8, r4
 8024b78:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024b7c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024b80:	fb08 f802 	mul.w	r8, r8, r2
 8024b84:	fb0a fa01 	mul.w	sl, sl, r1
 8024b88:	0a22      	lsrs	r2, r4, #8
 8024b8a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024b8e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024b92:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8024b96:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024b9a:	4414      	add	r4, r2
 8024b9c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024ba0:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8024ba4:	0a2d      	lsrs	r5, r5, #8
 8024ba6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024baa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024bae:	9a03      	ldr	r2, [sp, #12]
 8024bb0:	8836      	ldrh	r6, [r6, #0]
 8024bb2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024bb6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024bba:	437d      	muls	r5, r7
 8024bbc:	4461      	add	r1, ip
 8024bbe:	0a24      	lsrs	r4, r4, #8
 8024bc0:	fb02 5503 	mla	r5, r2, r3, r5
 8024bc4:	0a09      	lsrs	r1, r1, #8
 8024bc6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024bca:	fb04 540e 	mla	r4, r4, lr, r5
 8024bce:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024bd2:	fb01 4100 	mla	r1, r1, r0, r4
 8024bd6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024bda:	0a09      	lsrs	r1, r1, #8
 8024bdc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024be0:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8024be4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024be8:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8024bec:	fb07 f70a 	mul.w	r7, r7, sl
 8024bf0:	fb03 7101 	mla	r1, r3, r1, r7
 8024bf4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024bf8:	9b00      	ldr	r3, [sp, #0]
 8024bfa:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8024bfe:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024c02:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8024c06:	fb00 e101 	mla	r1, r0, r1, lr
 8024c0a:	43da      	mvns	r2, r3
 8024c0c:	1233      	asrs	r3, r6, #8
 8024c0e:	b2d2      	uxtb	r2, r2
 8024c10:	10f0      	asrs	r0, r6, #3
 8024c12:	0a09      	lsrs	r1, r1, #8
 8024c14:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024c18:	00f6      	lsls	r6, r6, #3
 8024c1a:	4353      	muls	r3, r2
 8024c1c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024c20:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024c24:	b2f6      	uxtb	r6, r6
 8024c26:	4321      	orrs	r1, r4
 8024c28:	4350      	muls	r0, r2
 8024c2a:	4356      	muls	r6, r2
 8024c2c:	1c5a      	adds	r2, r3, #1
 8024c2e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024c32:	0c0b      	lsrs	r3, r1, #16
 8024c34:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024c38:	1c42      	adds	r2, r0, #1
 8024c3a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024c3e:	0a0a      	lsrs	r2, r1, #8
 8024c40:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024c44:	021b      	lsls	r3, r3, #8
 8024c46:	00d2      	lsls	r2, r2, #3
 8024c48:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024c4c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8024c50:	4313      	orrs	r3, r2
 8024c52:	1c72      	adds	r2, r6, #1
 8024c54:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8024c58:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8024c5c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8024c60:	4319      	orrs	r1, r3
 8024c62:	9b02      	ldr	r3, [sp, #8]
 8024c64:	8019      	strh	r1, [r3, #0]
 8024c66:	b005      	add	sp, #20
 8024c68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024c6c:	2500      	movs	r5, #0
 8024c6e:	e6fe      	b.n	8024a6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8024c70:	2100      	movs	r1, #0
 8024c72:	460d      	mov	r5, r1
 8024c74:	e706      	b.n	8024a84 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024c76:	2100      	movs	r1, #0
 8024c78:	e704      	b.n	8024a84 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024c7a:	4631      	mov	r1, r6
 8024c7c:	e702      	b.n	8024a84 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024c7e:	2400      	movs	r4, #0
 8024c80:	e713      	b.n	8024aaa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8024c82:	2200      	movs	r2, #0
 8024c84:	4614      	mov	r4, r2
 8024c86:	e71a      	b.n	8024abe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024c88:	4602      	mov	r2, r0
 8024c8a:	4604      	mov	r4, r0
 8024c8c:	e717      	b.n	8024abe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024c8e:	2200      	movs	r2, #0
 8024c90:	e715      	b.n	8024abe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024c92:	4632      	mov	r2, r6
 8024c94:	e713      	b.n	8024abe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08024c98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024c98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024c9c:	b09b      	sub	sp, #108	; 0x6c
 8024c9e:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8024ca2:	9218      	str	r2, [sp, #96]	; 0x60
 8024ca4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024ca6:	9116      	str	r1, [sp, #88]	; 0x58
 8024ca8:	9307      	str	r3, [sp, #28]
 8024caa:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8024cae:	9019      	str	r0, [sp, #100]	; 0x64
 8024cb0:	6850      	ldr	r0, [r2, #4]
 8024cb2:	6812      	ldr	r2, [r2, #0]
 8024cb4:	fb00 1303 	mla	r3, r0, r3, r1
 8024cb8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024cbc:	930a      	str	r3, [sp, #40]	; 0x28
 8024cbe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024cc0:	681b      	ldr	r3, [r3, #0]
 8024cc2:	930f      	str	r3, [sp, #60]	; 0x3c
 8024cc4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024cc6:	2b00      	cmp	r3, #0
 8024cc8:	dc03      	bgt.n	8024cd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024cca:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024ccc:	2b00      	cmp	r3, #0
 8024cce:	f340 8386 	ble.w	80253de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024cd2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024cd4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024cd8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024cdc:	1e48      	subs	r0, r1, #1
 8024cde:	1e57      	subs	r7, r2, #1
 8024ce0:	9b07      	ldr	r3, [sp, #28]
 8024ce2:	2b00      	cmp	r3, #0
 8024ce4:	f340 8166 	ble.w	8024fb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8024ce8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024cec:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024cf0:	d406      	bmi.n	8024d00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024cf2:	4584      	cmp	ip, r0
 8024cf4:	da04      	bge.n	8024d00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024cf6:	2b00      	cmp	r3, #0
 8024cf8:	db02      	blt.n	8024d00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024cfa:	42bb      	cmp	r3, r7
 8024cfc:	f2c0 815b 	blt.w	8024fb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8024d00:	f11c 0c01 	adds.w	ip, ip, #1
 8024d04:	f100 814b 	bmi.w	8024f9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024d08:	4561      	cmp	r1, ip
 8024d0a:	f2c0 8148 	blt.w	8024f9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024d0e:	3301      	adds	r3, #1
 8024d10:	f100 8145 	bmi.w	8024f9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024d14:	429a      	cmp	r2, r3
 8024d16:	f2c0 8142 	blt.w	8024f9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024d1a:	9b07      	ldr	r3, [sp, #28]
 8024d1c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024d1e:	9317      	str	r3, [sp, #92]	; 0x5c
 8024d20:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024d22:	2b00      	cmp	r3, #0
 8024d24:	f340 8165 	ble.w	8024ff2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024d28:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8024d2a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024d2c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024d30:	689b      	ldr	r3, [r3, #8]
 8024d32:	1422      	asrs	r2, r4, #16
 8024d34:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024d38:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024d3c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024d40:	f100 81d5 	bmi.w	80250ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024d44:	f103 38ff 	add.w	r8, r3, #4294967295
 8024d48:	4542      	cmp	r2, r8
 8024d4a:	f280 81d0 	bge.w	80250ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024d4e:	f1bc 0f00 	cmp.w	ip, #0
 8024d52:	f2c0 81cc 	blt.w	80250ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024d56:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024d5a:	45c4      	cmp	ip, r8
 8024d5c:	f280 81c7 	bge.w	80250ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024d60:	b21b      	sxth	r3, r3
 8024d62:	fb0c 2203 	mla	r2, ip, r3, r2
 8024d66:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024d68:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8024d6c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8024d70:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8024d74:	2900      	cmp	r1, #0
 8024d76:	f000 8182 	beq.w	802507e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8024d7a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8024d7e:	950b      	str	r5, [sp, #44]	; 0x2c
 8024d80:	0e2d      	lsrs	r5, r5, #24
 8024d82:	9512      	str	r5, [sp, #72]	; 0x48
 8024d84:	b180      	cbz	r0, 8024da8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8024d86:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8024d8a:	3b01      	subs	r3, #1
 8024d8c:	009b      	lsls	r3, r3, #2
 8024d8e:	3304      	adds	r3, #4
 8024d90:	eb08 0c03 	add.w	ip, r8, r3
 8024d94:	f858 3003 	ldr.w	r3, [r8, r3]
 8024d98:	9308      	str	r3, [sp, #32]
 8024d9a:	0e1b      	lsrs	r3, r3, #24
 8024d9c:	9310      	str	r3, [sp, #64]	; 0x40
 8024d9e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8024da2:	930c      	str	r3, [sp, #48]	; 0x30
 8024da4:	0e1b      	lsrs	r3, r3, #24
 8024da6:	9313      	str	r3, [sp, #76]	; 0x4c
 8024da8:	b289      	uxth	r1, r1
 8024daa:	b280      	uxth	r0, r0
 8024dac:	fb01 f900 	mul.w	r9, r1, r0
 8024db0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024db4:	0109      	lsls	r1, r1, #4
 8024db6:	eba1 0809 	sub.w	r8, r1, r9
 8024dba:	b280      	uxth	r0, r0
 8024dbc:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8024dc0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8024dc2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024dc4:	fa1f f888 	uxth.w	r8, r8
 8024dc8:	1a09      	subs	r1, r1, r0
 8024dca:	b289      	uxth	r1, r1
 8024dcc:	fb08 f303 	mul.w	r3, r8, r3
 8024dd0:	fb01 330e 	mla	r3, r1, lr, r3
 8024dd4:	fb00 3305 	mla	r3, r0, r5, r3
 8024dd8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024dda:	fb09 3305 	mla	r3, r9, r5, r3
 8024dde:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024de2:	2b00      	cmp	r3, #0
 8024de4:	f000 80d2 	beq.w	8024f8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024de8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024dec:	d01b      	beq.n	8024e26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8024dee:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8024df2:	fb0e fa0a 	mul.w	sl, lr, sl
 8024df6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024dfa:	fb0e fe02 	mul.w	lr, lr, r2
 8024dfe:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8024e02:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024e06:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024e0a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024e0e:	4452      	add	r2, sl
 8024e10:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024e14:	0a12      	lsrs	r2, r2, #8
 8024e16:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024e1a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024e1e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024e22:	ea42 020c 	orr.w	r2, r2, ip
 8024e26:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024e28:	2dff      	cmp	r5, #255	; 0xff
 8024e2a:	d021      	beq.n	8024e70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8024e2c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024e2e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024e32:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024e34:	fb05 fb0b 	mul.w	fp, r5, fp
 8024e38:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024e3a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024e3e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024e40:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024e44:	fb05 fa0a 	mul.w	sl, r5, sl
 8024e48:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024e4c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024e50:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024e54:	44de      	add	lr, fp
 8024e56:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024e5a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024e5e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024e62:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024e66:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024e6a:	ea4e 050a 	orr.w	r5, lr, sl
 8024e6e:	950b      	str	r5, [sp, #44]	; 0x2c
 8024e70:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024e72:	2dff      	cmp	r5, #255	; 0xff
 8024e74:	d021      	beq.n	8024eba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8024e76:	9d08      	ldr	r5, [sp, #32]
 8024e78:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024e7c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024e7e:	fb05 fb0b 	mul.w	fp, r5, fp
 8024e82:	9d08      	ldr	r5, [sp, #32]
 8024e84:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024e88:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024e8a:	fb05 fa0e 	mul.w	sl, r5, lr
 8024e8e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024e92:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024e96:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024e9a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024e9e:	44de      	add	lr, fp
 8024ea0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024ea4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024ea8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024eac:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024eb0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024eb4:	ea4e 050a 	orr.w	r5, lr, sl
 8024eb8:	9508      	str	r5, [sp, #32]
 8024eba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024ebc:	2dff      	cmp	r5, #255	; 0xff
 8024ebe:	d021      	beq.n	8024f04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8024ec0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024ec2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024ec6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024ec8:	fb05 fb0b 	mul.w	fp, r5, fp
 8024ecc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024ece:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024ed2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024ed4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024ed8:	fb05 fa0a 	mul.w	sl, r5, sl
 8024edc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024ee0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024ee4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024ee8:	44de      	add	lr, fp
 8024eea:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024eee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024ef2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024ef6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024efa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024efe:	ea4e 050a 	orr.w	r5, lr, sl
 8024f02:	950c      	str	r5, [sp, #48]	; 0x30
 8024f04:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024f06:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024f0a:	9d08      	ldr	r5, [sp, #32]
 8024f0c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8024f10:	fb08 fc0c 	mul.w	ip, r8, ip
 8024f14:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024f18:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024f1c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024f1e:	fb00 cc0e 	mla	ip, r0, lr, ip
 8024f22:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024f26:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024f28:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024f2c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024f30:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024f34:	fb08 f80e 	mul.w	r8, r8, lr
 8024f38:	fb01 8202 	mla	r2, r1, r2, r8
 8024f3c:	9908      	ldr	r1, [sp, #32]
 8024f3e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024f42:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024f44:	fb00 220a 	mla	r2, r0, sl, r2
 8024f48:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8024f4c:	fb09 2900 	mla	r9, r9, r0, r2
 8024f50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024f54:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024f58:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024f5c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024f60:	ea4c 0c09 	orr.w	ip, ip, r9
 8024f64:	2bff      	cmp	r3, #255	; 0xff
 8024f66:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8024f6a:	f040 8091 	bne.w	8025090 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8024f6e:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8024f72:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8024f76:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024f7a:	f022 0207 	bic.w	r2, r2, #7
 8024f7e:	431a      	orrs	r2, r3
 8024f80:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8024f84:	ea4c 0c02 	orr.w	ip, ip, r2
 8024f88:	f8a7 c000 	strh.w	ip, [r7]
 8024f8c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024f8e:	441c      	add	r4, r3
 8024f90:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024f92:	441e      	add	r6, r3
 8024f94:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024f96:	3b01      	subs	r3, #1
 8024f98:	3702      	adds	r7, #2
 8024f9a:	9317      	str	r3, [sp, #92]	; 0x5c
 8024f9c:	e6c0      	b.n	8024d20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024f9e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024fa0:	441c      	add	r4, r3
 8024fa2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024fa4:	441e      	add	r6, r3
 8024fa6:	9b07      	ldr	r3, [sp, #28]
 8024fa8:	3b01      	subs	r3, #1
 8024faa:	9307      	str	r3, [sp, #28]
 8024fac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024fae:	3302      	adds	r3, #2
 8024fb0:	930a      	str	r3, [sp, #40]	; 0x28
 8024fb2:	e695      	b.n	8024ce0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024fb4:	d024      	beq.n	8025000 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8024fb6:	9b07      	ldr	r3, [sp, #28]
 8024fb8:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8024fba:	3b01      	subs	r3, #1
 8024fbc:	fb00 4003 	mla	r0, r0, r3, r4
 8024fc0:	1400      	asrs	r0, r0, #16
 8024fc2:	f53f aeaa 	bmi.w	8024d1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024fc6:	3901      	subs	r1, #1
 8024fc8:	4288      	cmp	r0, r1
 8024fca:	f6bf aea6 	bge.w	8024d1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024fce:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8024fd0:	fb01 6303 	mla	r3, r1, r3, r6
 8024fd4:	141b      	asrs	r3, r3, #16
 8024fd6:	f53f aea0 	bmi.w	8024d1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024fda:	3a01      	subs	r2, #1
 8024fdc:	4293      	cmp	r3, r2
 8024fde:	f6bf ae9c 	bge.w	8024d1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024fe2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024fe6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8024fea:	f1bb 0f00 	cmp.w	fp, #0
 8024fee:	f300 809a 	bgt.w	8025126 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8024ff2:	9b07      	ldr	r3, [sp, #28]
 8024ff4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024ff8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024ffa:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024ffe:	930a      	str	r3, [sp, #40]	; 0x28
 8025000:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025002:	2b00      	cmp	r3, #0
 8025004:	f340 81eb 	ble.w	80253de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8025008:	ee30 0a04 	vadd.f32	s0, s0, s8
 802500c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025010:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025014:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025016:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802501a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802501e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025022:	eef0 6a62 	vmov.f32	s13, s5
 8025026:	ee61 7a27 	vmul.f32	s15, s2, s15
 802502a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802502e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025032:	ee16 4a90 	vmov	r4, s13
 8025036:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802503a:	eef0 6a43 	vmov.f32	s13, s6
 802503e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025042:	ee12 2a90 	vmov	r2, s5
 8025046:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802504a:	fb92 f3f3 	sdiv	r3, r2, r3
 802504e:	ee13 2a10 	vmov	r2, s6
 8025052:	9327      	str	r3, [sp, #156]	; 0x9c
 8025054:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025056:	fb92 f3f3 	sdiv	r3, r2, r3
 802505a:	9328      	str	r3, [sp, #160]	; 0xa0
 802505c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802505e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8025060:	3b01      	subs	r3, #1
 8025062:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025066:	9316      	str	r3, [sp, #88]	; 0x58
 8025068:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802506a:	bf08      	it	eq
 802506c:	4613      	moveq	r3, r2
 802506e:	ee16 6a90 	vmov	r6, s13
 8025072:	9307      	str	r3, [sp, #28]
 8025074:	eeb0 3a67 	vmov.f32	s6, s15
 8025078:	eef0 2a47 	vmov.f32	s5, s14
 802507c:	e622      	b.n	8024cc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802507e:	2800      	cmp	r0, #0
 8025080:	f43f ae92 	beq.w	8024da8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025084:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025088:	9308      	str	r3, [sp, #32]
 802508a:	0e1b      	lsrs	r3, r3, #24
 802508c:	9310      	str	r3, [sp, #64]	; 0x40
 802508e:	e68b      	b.n	8024da8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025090:	8839      	ldrh	r1, [r7, #0]
 8025092:	4dd4      	ldr	r5, [pc, #848]	; (80253e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025094:	43db      	mvns	r3, r3
 8025096:	ea4f 2e21 	mov.w	lr, r1, asr #8
 802509a:	fa5f f883 	uxtb.w	r8, r3
 802509e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80250a2:	fb0e fe08 	mul.w	lr, lr, r8
 80250a6:	10c8      	asrs	r0, r1, #3
 80250a8:	00cb      	lsls	r3, r1, #3
 80250aa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80250ae:	f10e 0101 	add.w	r1, lr, #1
 80250b2:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80250b6:	fb00 f008 	mul.w	r0, r0, r8
 80250ba:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80250be:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 80250c2:	f100 0e01 	add.w	lr, r0, #1
 80250c6:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80250ca:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80250ce:	b2db      	uxtb	r3, r3
 80250d0:	b2c9      	uxtb	r1, r1
 80250d2:	00d2      	lsls	r2, r2, #3
 80250d4:	fb03 f308 	mul.w	r3, r3, r8
 80250d8:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80250dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80250e0:	430a      	orrs	r2, r1
 80250e2:	1c59      	adds	r1, r3, #1
 80250e4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80250e8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80250ec:	e748      	b.n	8024f80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 80250ee:	f112 0801 	adds.w	r8, r2, #1
 80250f2:	f53f af4b 	bmi.w	8024f8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80250f6:	4543      	cmp	r3, r8
 80250f8:	f6ff af48 	blt.w	8024f8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80250fc:	f11c 0801 	adds.w	r8, ip, #1
 8025100:	f53f af44 	bmi.w	8024f8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025104:	45c6      	cmp	lr, r8
 8025106:	f6ff af41 	blt.w	8024f8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802510a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802510e:	fa0f f28e 	sxth.w	r2, lr
 8025112:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8025116:	9200      	str	r2, [sp, #0]
 8025118:	b21b      	sxth	r3, r3
 802511a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802511c:	9819      	ldr	r0, [sp, #100]	; 0x64
 802511e:	4639      	mov	r1, r7
 8025120:	f7ff fc87 	bl	8024a32 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8025124:	e732      	b.n	8024f8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025126:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025128:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802512a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802512e:	1421      	asrs	r1, r4, #16
 8025130:	1433      	asrs	r3, r6, #16
 8025132:	fb07 1303 	mla	r3, r7, r3, r1
 8025136:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8025138:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 802513c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8025140:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025144:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025148:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802514c:	2a00      	cmp	r2, #0
 802514e:	f000 8107 	beq.w	8025360 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8025152:	684d      	ldr	r5, [r1, #4]
 8025154:	950d      	str	r5, [sp, #52]	; 0x34
 8025156:	0e2d      	lsrs	r5, r5, #24
 8025158:	9514      	str	r5, [sp, #80]	; 0x50
 802515a:	b178      	cbz	r0, 802517c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802515c:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8025160:	3f01      	subs	r7, #1
 8025162:	00bf      	lsls	r7, r7, #2
 8025164:	3704      	adds	r7, #4
 8025166:	eb01 0e07 	add.w	lr, r1, r7
 802516a:	59c9      	ldr	r1, [r1, r7]
 802516c:	9109      	str	r1, [sp, #36]	; 0x24
 802516e:	0e09      	lsrs	r1, r1, #24
 8025170:	9111      	str	r1, [sp, #68]	; 0x44
 8025172:	f8de 1004 	ldr.w	r1, [lr, #4]
 8025176:	910e      	str	r1, [sp, #56]	; 0x38
 8025178:	0e09      	lsrs	r1, r1, #24
 802517a:	9115      	str	r1, [sp, #84]	; 0x54
 802517c:	b292      	uxth	r2, r2
 802517e:	b280      	uxth	r0, r0
 8025180:	fb02 f900 	mul.w	r9, r2, r0
 8025184:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025188:	0112      	lsls	r2, r2, #4
 802518a:	eba2 0e09 	sub.w	lr, r2, r9
 802518e:	b280      	uxth	r0, r0
 8025190:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8025194:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025196:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025198:	fa1f fe8e 	uxth.w	lr, lr
 802519c:	1a09      	subs	r1, r1, r0
 802519e:	b289      	uxth	r1, r1
 80251a0:	fb0e f202 	mul.w	r2, lr, r2
 80251a4:	fb01 220c 	mla	r2, r1, ip, r2
 80251a8:	fb00 2205 	mla	r2, r0, r5, r2
 80251ac:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80251ae:	fb09 2205 	mla	r2, r9, r5, r2
 80251b2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80251b6:	2a00      	cmp	r2, #0
 80251b8:	f000 80c9 	beq.w	802534e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80251bc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80251c0:	d019      	beq.n	80251f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80251c2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80251c6:	fb0c fa0a 	mul.w	sl, ip, sl
 80251ca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80251ce:	fb0c fc03 	mul.w	ip, ip, r3
 80251d2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80251d6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80251da:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80251de:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80251e2:	4453      	add	r3, sl
 80251e4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80251e8:	0a1b      	lsrs	r3, r3, #8
 80251ea:	0a3f      	lsrs	r7, r7, #8
 80251ec:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80251f0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80251f4:	433b      	orrs	r3, r7
 80251f6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80251f8:	2dff      	cmp	r5, #255	; 0xff
 80251fa:	d020      	beq.n	802523e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 80251fc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80251fe:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025202:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025204:	436f      	muls	r7, r5
 8025206:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025208:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802520c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802520e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025212:	fb05 fa0a 	mul.w	sl, r5, sl
 8025216:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802521a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802521e:	44bc      	add	ip, r7
 8025220:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025224:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025228:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802522c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025230:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025234:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025238:	ea4c 050a 	orr.w	r5, ip, sl
 802523c:	950d      	str	r5, [sp, #52]	; 0x34
 802523e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025240:	2dff      	cmp	r5, #255	; 0xff
 8025242:	d020      	beq.n	8025286 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8025244:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025246:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802524a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802524c:	436f      	muls	r7, r5
 802524e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025250:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025254:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025256:	fb05 fa0c 	mul.w	sl, r5, ip
 802525a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802525e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025262:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025266:	44bc      	add	ip, r7
 8025268:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802526c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025270:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025274:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025278:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802527c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025280:	ea4c 050a 	orr.w	r5, ip, sl
 8025284:	9509      	str	r5, [sp, #36]	; 0x24
 8025286:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025288:	2dff      	cmp	r5, #255	; 0xff
 802528a:	d020      	beq.n	80252ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 802528c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802528e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025292:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025294:	436f      	muls	r7, r5
 8025296:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025298:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802529c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802529e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80252a2:	fb05 fa0a 	mul.w	sl, r5, sl
 80252a6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80252aa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80252ae:	44bc      	add	ip, r7
 80252b0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80252b4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80252b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80252bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80252c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80252c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80252c8:	ea4c 050a 	orr.w	r5, ip, sl
 80252cc:	950e      	str	r5, [sp, #56]	; 0x38
 80252ce:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80252d0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80252d4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80252d6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80252da:	fb0e f707 	mul.w	r7, lr, r7
 80252de:	fb01 770c 	mla	r7, r1, ip, r7
 80252e2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80252e6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80252e8:	fb00 770c 	mla	r7, r0, ip, r7
 80252ec:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80252f0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80252f2:	fb09 770c 	mla	r7, r9, ip, r7
 80252f6:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80252fa:	fb0e fe0c 	mul.w	lr, lr, ip
 80252fe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025302:	fb01 e303 	mla	r3, r1, r3, lr
 8025306:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025308:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802530c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802530e:	fb00 330a 	mla	r3, r0, sl, r3
 8025312:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8025316:	fb09 3c0c 	mla	ip, r9, ip, r3
 802531a:	0a3f      	lsrs	r7, r7, #8
 802531c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025320:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025324:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025328:	ea47 070c 	orr.w	r7, r7, ip
 802532c:	2aff      	cmp	r2, #255	; 0xff
 802532e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8025332:	d11e      	bne.n	8025372 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8025334:	097a      	lsrs	r2, r7, #5
 8025336:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 802533a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802533e:	f023 0307 	bic.w	r3, r3, #7
 8025342:	4313      	orrs	r3, r2
 8025344:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8025348:	431f      	orrs	r7, r3
 802534a:	f8a8 7000 	strh.w	r7, [r8]
 802534e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025350:	441c      	add	r4, r3
 8025352:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025354:	f108 0802 	add.w	r8, r8, #2
 8025358:	441e      	add	r6, r3
 802535a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802535e:	e644      	b.n	8024fea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8025360:	2800      	cmp	r0, #0
 8025362:	f43f af0b 	beq.w	802517c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025366:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802536a:	9109      	str	r1, [sp, #36]	; 0x24
 802536c:	0e09      	lsrs	r1, r1, #24
 802536e:	9111      	str	r1, [sp, #68]	; 0x44
 8025370:	e704      	b.n	802517c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025372:	f8b8 1000 	ldrh.w	r1, [r8]
 8025376:	43d2      	mvns	r2, r2
 8025378:	ea4f 2c21 	mov.w	ip, r1, asr #8
 802537c:	fa5f fe82 	uxtb.w	lr, r2
 8025380:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8025384:	fb0c fc0e 	mul.w	ip, ip, lr
 8025388:	10c8      	asrs	r0, r1, #3
 802538a:	00ca      	lsls	r2, r1, #3
 802538c:	f10c 0101 	add.w	r1, ip, #1
 8025390:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025394:	0c39      	lsrs	r1, r7, #16
 8025396:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802539a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802539e:	4911      	ldr	r1, [pc, #68]	; (80253e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80253a0:	fb00 f00e 	mul.w	r0, r0, lr
 80253a4:	fa5f fc8c 	uxtb.w	ip, ip
 80253a8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80253ac:	b2d2      	uxtb	r2, r2
 80253ae:	1c41      	adds	r1, r0, #1
 80253b0:	fb02 f20e 	mul.w	r2, r2, lr
 80253b4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80253b8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80253bc:	1c51      	adds	r1, r2, #1
 80253be:	00c0      	lsls	r0, r0, #3
 80253c0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80253c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80253c8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80253cc:	ea4c 0c00 	orr.w	ip, ip, r0
 80253d0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80253d4:	ea47 0c0c 	orr.w	ip, r7, ip
 80253d8:	f8a8 c000 	strh.w	ip, [r8]
 80253dc:	e7b7      	b.n	802534e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80253de:	b01b      	add	sp, #108	; 0x6c
 80253e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80253e4:	fffff800 	.word	0xfffff800

080253e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80253e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80253ec:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80253f0:	2d00      	cmp	r5, #0
 80253f2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80253f6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80253fa:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80253fe:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8025402:	fb05 0e03 	mla	lr, r5, r3, r0
 8025406:	f2c0 808c 	blt.w	8025522 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802540a:	45a9      	cmp	r9, r5
 802540c:	f340 8089 	ble.w	8025522 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8025410:	2800      	cmp	r0, #0
 8025412:	f2c0 8084 	blt.w	802551e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8025416:	4580      	cmp	r8, r0
 8025418:	f340 8081 	ble.w	802551e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802541c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8025420:	f01e 0f01 	tst.w	lr, #1
 8025424:	5d16      	ldrb	r6, [r2, r4]
 8025426:	bf0c      	ite	eq
 8025428:	f006 060f 	andeq.w	r6, r6, #15
 802542c:	1136      	asrne	r6, r6, #4
 802542e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8025432:	b2f6      	uxtb	r6, r6
 8025434:	1c44      	adds	r4, r0, #1
 8025436:	d477      	bmi.n	8025528 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8025438:	45a0      	cmp	r8, r4
 802543a:	dd75      	ble.n	8025528 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802543c:	2f00      	cmp	r7, #0
 802543e:	d075      	beq.n	802552c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8025440:	f10e 0a01 	add.w	sl, lr, #1
 8025444:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8025448:	f01a 0f01 	tst.w	sl, #1
 802544c:	5d14      	ldrb	r4, [r2, r4]
 802544e:	bf0c      	ite	eq
 8025450:	f004 040f 	andeq.w	r4, r4, #15
 8025454:	1124      	asrne	r4, r4, #4
 8025456:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802545a:	b2e4      	uxtb	r4, r4
 802545c:	3501      	adds	r5, #1
 802545e:	d469      	bmi.n	8025534 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8025460:	45a9      	cmp	r9, r5
 8025462:	dd67      	ble.n	8025534 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8025464:	f1bc 0f00 	cmp.w	ip, #0
 8025468:	d067      	beq.n	802553a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 802546a:	2800      	cmp	r0, #0
 802546c:	db60      	blt.n	8025530 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802546e:	4580      	cmp	r8, r0
 8025470:	dd5e      	ble.n	8025530 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8025472:	eb03 090e 	add.w	r9, r3, lr
 8025476:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802547a:	f019 0f01 	tst.w	r9, #1
 802547e:	5d55      	ldrb	r5, [r2, r5]
 8025480:	bf0c      	ite	eq
 8025482:	f005 050f 	andeq.w	r5, r5, #15
 8025486:	112d      	asrne	r5, r5, #4
 8025488:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802548c:	b2ed      	uxtb	r5, r5
 802548e:	3001      	adds	r0, #1
 8025490:	d456      	bmi.n	8025540 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8025492:	4580      	cmp	r8, r0
 8025494:	dd54      	ble.n	8025540 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8025496:	2f00      	cmp	r7, #0
 8025498:	d054      	beq.n	8025544 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 802549a:	3301      	adds	r3, #1
 802549c:	449e      	add	lr, r3
 802549e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80254a2:	f01e 0f01 	tst.w	lr, #1
 80254a6:	5cd0      	ldrb	r0, [r2, r3]
 80254a8:	bf0c      	ite	eq
 80254aa:	f000 000f 	andeq.w	r0, r0, #15
 80254ae:	1100      	asrne	r0, r0, #4
 80254b0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80254b4:	b2c3      	uxtb	r3, r0
 80254b6:	b2ba      	uxth	r2, r7
 80254b8:	fa1f fc8c 	uxth.w	ip, ip
 80254bc:	fb02 f00c 	mul.w	r0, r2, ip
 80254c0:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80254c4:	0112      	lsls	r2, r2, #4
 80254c6:	fa1f fc8c 	uxth.w	ip, ip
 80254ca:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80254ce:	1a12      	subs	r2, r2, r0
 80254d0:	eba7 070c 	sub.w	r7, r7, ip
 80254d4:	b292      	uxth	r2, r2
 80254d6:	b2bf      	uxth	r7, r7
 80254d8:	4362      	muls	r2, r4
 80254da:	fb06 2207 	mla	r2, r6, r7, r2
 80254de:	fb0c 2505 	mla	r5, ip, r5, r2
 80254e2:	fb00 5303 	mla	r3, r0, r3, r5
 80254e6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80254ea:	b1b3      	cbz	r3, 802551a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80254ec:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80254f0:	435a      	muls	r2, r3
 80254f2:	1c53      	adds	r3, r2, #1
 80254f4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80254f8:	4a2d      	ldr	r2, [pc, #180]	; (80255b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80254fa:	121b      	asrs	r3, r3, #8
 80254fc:	6812      	ldr	r2, [r2, #0]
 80254fe:	2bff      	cmp	r3, #255	; 0xff
 8025500:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8025504:	d120      	bne.n	8025548 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8025506:	4b2b      	ldr	r3, [pc, #172]	; (80255b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8025508:	0950      	lsrs	r0, r2, #5
 802550a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802550e:	4033      	ands	r3, r6
 8025510:	4318      	orrs	r0, r3
 8025512:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025516:	4302      	orrs	r2, r0
 8025518:	800a      	strh	r2, [r1, #0]
 802551a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802551e:	2600      	movs	r6, #0
 8025520:	e788      	b.n	8025434 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8025522:	2400      	movs	r4, #0
 8025524:	4626      	mov	r6, r4
 8025526:	e799      	b.n	802545c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025528:	2400      	movs	r4, #0
 802552a:	e797      	b.n	802545c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802552c:	463c      	mov	r4, r7
 802552e:	e795      	b.n	802545c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025530:	2500      	movs	r5, #0
 8025532:	e7ac      	b.n	802548e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8025534:	2300      	movs	r3, #0
 8025536:	461d      	mov	r5, r3
 8025538:	e7bd      	b.n	80254b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802553a:	4663      	mov	r3, ip
 802553c:	4665      	mov	r5, ip
 802553e:	e7ba      	b.n	80254b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025540:	2300      	movs	r3, #0
 8025542:	e7b8      	b.n	80254b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025544:	463b      	mov	r3, r7
 8025546:	e7b6      	b.n	80254b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025548:	880d      	ldrh	r5, [r1, #0]
 802554a:	b29f      	uxth	r7, r3
 802554c:	122c      	asrs	r4, r5, #8
 802554e:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8025552:	43db      	mvns	r3, r3
 8025554:	b2db      	uxtb	r3, r3
 8025556:	fb10 f007 	smulbb	r0, r0, r7
 802555a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802555e:	fb04 0403 	mla	r4, r4, r3, r0
 8025562:	b2f6      	uxtb	r6, r6
 8025564:	10e8      	asrs	r0, r5, #3
 8025566:	b2d2      	uxtb	r2, r2
 8025568:	00ed      	lsls	r5, r5, #3
 802556a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802556e:	fb12 f207 	smulbb	r2, r2, r7
 8025572:	fb16 f607 	smulbb	r6, r6, r7
 8025576:	b2ed      	uxtb	r5, r5
 8025578:	b2a4      	uxth	r4, r4
 802557a:	fb00 6603 	mla	r6, r0, r3, r6
 802557e:	fb05 2303 	mla	r3, r5, r3, r2
 8025582:	b29a      	uxth	r2, r3
 8025584:	1c63      	adds	r3, r4, #1
 8025586:	b2b0      	uxth	r0, r6
 8025588:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802558c:	1c53      	adds	r3, r2, #1
 802558e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025592:	1c42      	adds	r2, r0, #1
 8025594:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025598:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802559c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80255a0:	0940      	lsrs	r0, r0, #5
 80255a2:	4323      	orrs	r3, r4
 80255a4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80255a8:	4303      	orrs	r3, r0
 80255aa:	800b      	strh	r3, [r1, #0]
 80255ac:	e7b5      	b.n	802551a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80255ae:	bf00      	nop
 80255b0:	20012dc4 	.word	0x20012dc4
 80255b4:	00fff800 	.word	0x00fff800

080255b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80255b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80255bc:	b097      	sub	sp, #92	; 0x5c
 80255be:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80255c2:	9214      	str	r2, [sp, #80]	; 0x50
 80255c4:	9309      	str	r3, [sp, #36]	; 0x24
 80255c6:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80255c8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80255cc:	910d      	str	r1, [sp, #52]	; 0x34
 80255ce:	930f      	str	r3, [sp, #60]	; 0x3c
 80255d0:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80255d4:	9015      	str	r0, [sp, #84]	; 0x54
 80255d6:	6850      	ldr	r0, [r2, #4]
 80255d8:	6812      	ldr	r2, [r2, #0]
 80255da:	fb00 1303 	mla	r3, r0, r3, r1
 80255de:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80255e2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80255e4:	689b      	ldr	r3, [r3, #8]
 80255e6:	3301      	adds	r3, #1
 80255e8:	f023 0301 	bic.w	r3, r3, #1
 80255ec:	930a      	str	r3, [sp, #40]	; 0x28
 80255ee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80255f0:	681f      	ldr	r7, [r3, #0]
 80255f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80255f4:	2b00      	cmp	r3, #0
 80255f6:	dc03      	bgt.n	8025600 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80255f8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80255fa:	2b00      	cmp	r3, #0
 80255fc:	f340 8287 	ble.w	8025b0e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8025600:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025602:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025606:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802560a:	1e48      	subs	r0, r1, #1
 802560c:	f102 3cff 	add.w	ip, r2, #4294967295
 8025610:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025612:	2b00      	cmp	r3, #0
 8025614:	f340 80c4 	ble.w	80257a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8025618:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802561c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025620:	d406      	bmi.n	8025630 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025622:	4586      	cmp	lr, r0
 8025624:	da04      	bge.n	8025630 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025626:	2b00      	cmp	r3, #0
 8025628:	db02      	blt.n	8025630 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802562a:	4563      	cmp	r3, ip
 802562c:	f2c0 80b9 	blt.w	80257a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8025630:	f11e 0e01 	adds.w	lr, lr, #1
 8025634:	f100 80aa 	bmi.w	802578c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025638:	4571      	cmp	r1, lr
 802563a:	f2c0 80a7 	blt.w	802578c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802563e:	3301      	adds	r3, #1
 8025640:	f100 80a4 	bmi.w	802578c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025644:	429a      	cmp	r2, r3
 8025646:	f2c0 80a1 	blt.w	802578c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802564a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802564c:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8025650:	930e      	str	r3, [sp, #56]	; 0x38
 8025652:	46c8      	mov	r8, r9
 8025654:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025656:	2b00      	cmp	r3, #0
 8025658:	f340 80c3 	ble.w	80257e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802565c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802565e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8025662:	1423      	asrs	r3, r4, #16
 8025664:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025668:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802566c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8025670:	f100 814d 	bmi.w	802590e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025674:	f10c 3bff 	add.w	fp, ip, #4294967295
 8025678:	455b      	cmp	r3, fp
 802567a:	f280 8148 	bge.w	802590e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802567e:	2800      	cmp	r0, #0
 8025680:	f2c0 8145 	blt.w	802590e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8025684:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025688:	4558      	cmp	r0, fp
 802568a:	f280 8140 	bge.w	802590e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802568e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8025690:	fb00 3305 	mla	r3, r0, r5, r3
 8025694:	0858      	lsrs	r0, r3, #1
 8025696:	07dd      	lsls	r5, r3, #31
 8025698:	f817 c000 	ldrb.w	ip, [r7, r0]
 802569c:	bf54      	ite	pl
 802569e:	f00c 0c0f 	andpl.w	ip, ip, #15
 80256a2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80256a6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80256aa:	fa5f fc8c 	uxtb.w	ip, ip
 80256ae:	2a00      	cmp	r2, #0
 80256b0:	f000 80db 	beq.w	802586a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80256b4:	1c58      	adds	r0, r3, #1
 80256b6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80256ba:	07c0      	lsls	r0, r0, #31
 80256bc:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80256c0:	bf54      	ite	pl
 80256c2:	f00e 0e0f 	andpl.w	lr, lr, #15
 80256c6:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80256ca:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80256ce:	fa5f f08e 	uxtb.w	r0, lr
 80256d2:	9010      	str	r0, [sp, #64]	; 0x40
 80256d4:	b1c9      	cbz	r1, 802570a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80256d6:	4453      	add	r3, sl
 80256d8:	0858      	lsrs	r0, r3, #1
 80256da:	07dd      	lsls	r5, r3, #31
 80256dc:	5c38      	ldrb	r0, [r7, r0]
 80256de:	bf54      	ite	pl
 80256e0:	f000 000f 	andpl.w	r0, r0, #15
 80256e4:	1100      	asrmi	r0, r0, #4
 80256e6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80256ea:	3301      	adds	r3, #1
 80256ec:	b2c0      	uxtb	r0, r0
 80256ee:	900b      	str	r0, [sp, #44]	; 0x2c
 80256f0:	0858      	lsrs	r0, r3, #1
 80256f2:	07dd      	lsls	r5, r3, #31
 80256f4:	f817 e000 	ldrb.w	lr, [r7, r0]
 80256f8:	bf54      	ite	pl
 80256fa:	f00e 030f 	andpl.w	r3, lr, #15
 80256fe:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8025702:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025706:	b2db      	uxtb	r3, r3
 8025708:	9311      	str	r3, [sp, #68]	; 0x44
 802570a:	b292      	uxth	r2, r2
 802570c:	b289      	uxth	r1, r1
 802570e:	fb02 f301 	mul.w	r3, r2, r1
 8025712:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025716:	0112      	lsls	r2, r2, #4
 8025718:	b289      	uxth	r1, r1
 802571a:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802571e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025720:	1ad2      	subs	r2, r2, r3
 8025722:	1a40      	subs	r0, r0, r1
 8025724:	b292      	uxth	r2, r2
 8025726:	436a      	muls	r2, r5
 8025728:	b280      	uxth	r0, r0
 802572a:	fb0c 2c00 	mla	ip, ip, r0, r2
 802572e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8025730:	fb01 c102 	mla	r1, r1, r2, ip
 8025734:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8025736:	fb03 1302 	mla	r3, r3, r2, r1
 802573a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802573e:	b1db      	cbz	r3, 8025778 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025740:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025742:	4353      	muls	r3, r2
 8025744:	1c5a      	adds	r2, r3, #1
 8025746:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802574a:	4ac6      	ldr	r2, [pc, #792]	; (8025a64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 802574c:	121b      	asrs	r3, r3, #8
 802574e:	6812      	ldr	r2, [r2, #0]
 8025750:	2bff      	cmp	r3, #255	; 0xff
 8025752:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025756:	f040 8099 	bne.w	802588c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 802575a:	0953      	lsrs	r3, r2, #5
 802575c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8025760:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025764:	f02c 0c07 	bic.w	ip, ip, #7
 8025768:	ea43 0c0c 	orr.w	ip, r3, ip
 802576c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025770:	ea4c 0202 	orr.w	r2, ip, r2
 8025774:	f8a8 2000 	strh.w	r2, [r8]
 8025778:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802577a:	441c      	add	r4, r3
 802577c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802577e:	441e      	add	r6, r3
 8025780:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025782:	3b01      	subs	r3, #1
 8025784:	f108 0802 	add.w	r8, r8, #2
 8025788:	930e      	str	r3, [sp, #56]	; 0x38
 802578a:	e763      	b.n	8025654 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802578c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802578e:	441c      	add	r4, r3
 8025790:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025792:	441e      	add	r6, r3
 8025794:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025796:	3b01      	subs	r3, #1
 8025798:	9309      	str	r3, [sp, #36]	; 0x24
 802579a:	f109 0902 	add.w	r9, r9, #2
 802579e:	e737      	b.n	8025610 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80257a0:	d024      	beq.n	80257ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80257a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80257a4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80257a6:	3b01      	subs	r3, #1
 80257a8:	fb00 4003 	mla	r0, r0, r3, r4
 80257ac:	1400      	asrs	r0, r0, #16
 80257ae:	f53f af4c 	bmi.w	802564a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80257b2:	3901      	subs	r1, #1
 80257b4:	4288      	cmp	r0, r1
 80257b6:	f6bf af48 	bge.w	802564a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80257ba:	9924      	ldr	r1, [sp, #144]	; 0x90
 80257bc:	fb01 6303 	mla	r3, r1, r3, r6
 80257c0:	141b      	asrs	r3, r3, #16
 80257c2:	f53f af42 	bmi.w	802564a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80257c6:	3a01      	subs	r2, #1
 80257c8:	4293      	cmp	r3, r2
 80257ca:	f6bf af3e 	bge.w	802564a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80257ce:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80257d2:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80257d6:	930e      	str	r3, [sp, #56]	; 0x38
 80257d8:	46c8      	mov	r8, r9
 80257da:	f1bb 0f00 	cmp.w	fp, #0
 80257de:	f300 80b7 	bgt.w	8025950 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80257e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80257e4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80257e8:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80257ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80257ee:	2b00      	cmp	r3, #0
 80257f0:	f340 818d 	ble.w	8025b0e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80257f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80257f8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80257fc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025800:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025802:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025806:	ee31 1a05 	vadd.f32	s2, s2, s10
 802580a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802580e:	eef0 6a62 	vmov.f32	s13, s5
 8025812:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025816:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802581a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802581e:	ee16 4a90 	vmov	r4, s13
 8025822:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025826:	eef0 6a43 	vmov.f32	s13, s6
 802582a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802582e:	ee12 2a90 	vmov	r2, s5
 8025832:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025836:	fb92 f3f3 	sdiv	r3, r2, r3
 802583a:	ee13 2a10 	vmov	r2, s6
 802583e:	9323      	str	r3, [sp, #140]	; 0x8c
 8025840:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025842:	fb92 f3f3 	sdiv	r3, r2, r3
 8025846:	9324      	str	r3, [sp, #144]	; 0x90
 8025848:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802584a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802584c:	3b01      	subs	r3, #1
 802584e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025852:	930d      	str	r3, [sp, #52]	; 0x34
 8025854:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025856:	bf08      	it	eq
 8025858:	4613      	moveq	r3, r2
 802585a:	ee16 6a90 	vmov	r6, s13
 802585e:	9309      	str	r3, [sp, #36]	; 0x24
 8025860:	eeb0 3a67 	vmov.f32	s6, s15
 8025864:	eef0 2a47 	vmov.f32	s5, s14
 8025868:	e6c3      	b.n	80255f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802586a:	2900      	cmp	r1, #0
 802586c:	f43f af4d 	beq.w	802570a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025870:	eb0a 0003 	add.w	r0, sl, r3
 8025874:	0843      	lsrs	r3, r0, #1
 8025876:	07c0      	lsls	r0, r0, #31
 8025878:	5cfb      	ldrb	r3, [r7, r3]
 802587a:	bf54      	ite	pl
 802587c:	f003 030f 	andpl.w	r3, r3, #15
 8025880:	111b      	asrmi	r3, r3, #4
 8025882:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025886:	b2db      	uxtb	r3, r3
 8025888:	930b      	str	r3, [sp, #44]	; 0x2c
 802588a:	e73e      	b.n	802570a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802588c:	f8b8 e000 	ldrh.w	lr, [r8]
 8025890:	fa1f fb83 	uxth.w	fp, r3
 8025894:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025898:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802589c:	43db      	mvns	r3, r3
 802589e:	b2db      	uxtb	r3, r3
 80258a0:	fb11 f10b 	smulbb	r1, r1, fp
 80258a4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80258a8:	fb00 1003 	mla	r0, r0, r3, r1
 80258ac:	fa5f fc8c 	uxtb.w	ip, ip
 80258b0:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80258b4:	b2d2      	uxtb	r2, r2
 80258b6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80258ba:	b280      	uxth	r0, r0
 80258bc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80258c0:	fb1c fc0b 	smulbb	ip, ip, fp
 80258c4:	fa5f fe8e 	uxtb.w	lr, lr
 80258c8:	fb12 fb0b 	smulbb	fp, r2, fp
 80258cc:	fb01 cc03 	mla	ip, r1, r3, ip
 80258d0:	fb0e bb03 	mla	fp, lr, r3, fp
 80258d4:	1c43      	adds	r3, r0, #1
 80258d6:	fa1f fc8c 	uxth.w	ip, ip
 80258da:	fa1f fb8b 	uxth.w	fp, fp
 80258de:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80258e2:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 80258e6:	f10c 0101 	add.w	r1, ip, #1
 80258ea:	f10b 0001 	add.w	r0, fp, #1
 80258ee:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80258f2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80258f6:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80258fa:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80258fe:	4318      	orrs	r0, r3
 8025900:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025904:	ea40 000c 	orr.w	r0, r0, ip
 8025908:	f8a8 0000 	strh.w	r0, [r8]
 802590c:	e734      	b.n	8025778 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802590e:	f113 0b01 	adds.w	fp, r3, #1
 8025912:	f53f af31 	bmi.w	8025778 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025916:	45dc      	cmp	ip, fp
 8025918:	f6ff af2e 	blt.w	8025778 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802591c:	f110 0b01 	adds.w	fp, r0, #1
 8025920:	f53f af2a 	bmi.w	8025778 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025924:	45de      	cmp	lr, fp
 8025926:	f6ff af27 	blt.w	8025778 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802592a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802592c:	9302      	str	r3, [sp, #8]
 802592e:	fa0f f38e 	sxth.w	r3, lr
 8025932:	9301      	str	r3, [sp, #4]
 8025934:	fa0f f38c 	sxth.w	r3, ip
 8025938:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802593c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8025940:	9300      	str	r3, [sp, #0]
 8025942:	463a      	mov	r2, r7
 8025944:	4653      	mov	r3, sl
 8025946:	4641      	mov	r1, r8
 8025948:	9815      	ldr	r0, [sp, #84]	; 0x54
 802594a:	f7ff fd4d 	bl	80253e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802594e:	e713      	b.n	8025778 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025950:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8025952:	1422      	asrs	r2, r4, #16
 8025954:	1433      	asrs	r3, r6, #16
 8025956:	fb05 2303 	mla	r3, r5, r3, r2
 802595a:	085a      	lsrs	r2, r3, #1
 802595c:	07dd      	lsls	r5, r3, #31
 802595e:	5cba      	ldrb	r2, [r7, r2]
 8025960:	bf54      	ite	pl
 8025962:	f002 020f 	andpl.w	r2, r2, #15
 8025966:	1112      	asrmi	r2, r2, #4
 8025968:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802596c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025970:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025974:	b2d2      	uxtb	r2, r2
 8025976:	2900      	cmp	r1, #0
 8025978:	d076      	beq.n	8025a68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802597a:	f103 0e01 	add.w	lr, r3, #1
 802597e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8025982:	f01e 0f01 	tst.w	lr, #1
 8025986:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802598a:	bf0c      	ite	eq
 802598c:	f00c 0c0f 	andeq.w	ip, ip, #15
 8025990:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8025994:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025998:	fa5f f58c 	uxtb.w	r5, ip
 802599c:	9512      	str	r5, [sp, #72]	; 0x48
 802599e:	b300      	cbz	r0, 80259e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80259a0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80259a2:	442b      	add	r3, r5
 80259a4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80259a8:	07dd      	lsls	r5, r3, #31
 80259aa:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80259ae:	bf54      	ite	pl
 80259b0:	f00c 0c0f 	andpl.w	ip, ip, #15
 80259b4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80259b8:	3301      	adds	r3, #1
 80259ba:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80259be:	fa5f f58c 	uxtb.w	r5, ip
 80259c2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80259c6:	950c      	str	r5, [sp, #48]	; 0x30
 80259c8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80259cc:	07dd      	lsls	r5, r3, #31
 80259ce:	bf54      	ite	pl
 80259d0:	f00c 0c0f 	andpl.w	ip, ip, #15
 80259d4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80259d8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80259dc:	fa5f f38c 	uxtb.w	r3, ip
 80259e0:	9313      	str	r3, [sp, #76]	; 0x4c
 80259e2:	b289      	uxth	r1, r1
 80259e4:	b280      	uxth	r0, r0
 80259e6:	fb01 f300 	mul.w	r3, r1, r0
 80259ea:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80259ee:	0109      	lsls	r1, r1, #4
 80259f0:	b280      	uxth	r0, r0
 80259f2:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 80259f6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80259f8:	1ac9      	subs	r1, r1, r3
 80259fa:	ebac 0c00 	sub.w	ip, ip, r0
 80259fe:	b289      	uxth	r1, r1
 8025a00:	4369      	muls	r1, r5
 8025a02:	fa1f fc8c 	uxth.w	ip, ip
 8025a06:	fb02 120c 	mla	r2, r2, ip, r1
 8025a0a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025a0c:	fb00 2001 	mla	r0, r0, r1, r2
 8025a10:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8025a12:	fb03 0302 	mla	r3, r3, r2, r0
 8025a16:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025a1a:	b1d3      	cbz	r3, 8025a52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025a1c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025a1e:	4353      	muls	r3, r2
 8025a20:	1c5a      	adds	r2, r3, #1
 8025a22:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025a26:	4a0f      	ldr	r2, [pc, #60]	; (8025a64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025a28:	121b      	asrs	r3, r3, #8
 8025a2a:	6812      	ldr	r2, [r2, #0]
 8025a2c:	2bff      	cmp	r3, #255	; 0xff
 8025a2e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025a32:	d12d      	bne.n	8025a90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8025a34:	0953      	lsrs	r3, r2, #5
 8025a36:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8025a3a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025a3e:	f02c 0c07 	bic.w	ip, ip, #7
 8025a42:	ea43 0c0c 	orr.w	ip, r3, ip
 8025a46:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025a4a:	ea4c 0202 	orr.w	r2, ip, r2
 8025a4e:	f8a8 2000 	strh.w	r2, [r8]
 8025a52:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025a54:	441c      	add	r4, r3
 8025a56:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025a58:	f108 0802 	add.w	r8, r8, #2
 8025a5c:	441e      	add	r6, r3
 8025a5e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025a62:	e6ba      	b.n	80257da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025a64:	20012dc4 	.word	0x20012dc4
 8025a68:	2800      	cmp	r0, #0
 8025a6a:	d0ba      	beq.n	80259e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025a6c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025a6e:	442b      	add	r3, r5
 8025a70:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025a74:	07db      	lsls	r3, r3, #31
 8025a76:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025a7a:	bf54      	ite	pl
 8025a7c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025a80:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025a84:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025a88:	fa5f f38c 	uxtb.w	r3, ip
 8025a8c:	930c      	str	r3, [sp, #48]	; 0x30
 8025a8e:	e7a8      	b.n	80259e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025a90:	f8b8 e000 	ldrh.w	lr, [r8]
 8025a94:	fa1f fa83 	uxth.w	sl, r3
 8025a98:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025a9c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025aa0:	43db      	mvns	r3, r3
 8025aa2:	b2db      	uxtb	r3, r3
 8025aa4:	fb11 f10a 	smulbb	r1, r1, sl
 8025aa8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025aac:	fb00 1003 	mla	r0, r0, r3, r1
 8025ab0:	b2d2      	uxtb	r2, r2
 8025ab2:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025ab6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025aba:	fa5f fe8e 	uxtb.w	lr, lr
 8025abe:	fb12 f20a 	smulbb	r2, r2, sl
 8025ac2:	fb0e 2203 	mla	r2, lr, r3, r2
 8025ac6:	fa5f fc8c 	uxtb.w	ip, ip
 8025aca:	b280      	uxth	r0, r0
 8025acc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025ad0:	b292      	uxth	r2, r2
 8025ad2:	fb1c fc0a 	smulbb	ip, ip, sl
 8025ad6:	fb01 cc03 	mla	ip, r1, r3, ip
 8025ada:	1c43      	adds	r3, r0, #1
 8025adc:	1c51      	adds	r1, r2, #1
 8025ade:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025ae2:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8025ae6:	fa1f fc8c 	uxth.w	ip, ip
 8025aea:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025aee:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8025af2:	4308      	orrs	r0, r1
 8025af4:	f10c 0101 	add.w	r1, ip, #1
 8025af8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025afc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025b00:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025b04:	ea40 000c 	orr.w	r0, r0, ip
 8025b08:	f8a8 0000 	strh.w	r0, [r8]
 8025b0c:	e7a1      	b.n	8025a52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025b0e:	b017      	add	sp, #92	; 0x5c
 8025b10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025b14 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8025b14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025b18:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8025b1c:	2d00      	cmp	r5, #0
 8025b1e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025b22:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8025b26:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8025b2a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8025b2e:	fb05 0e03 	mla	lr, r5, r3, r0
 8025b32:	f2c0 80b0 	blt.w	8025c96 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025b36:	45a9      	cmp	r9, r5
 8025b38:	f340 80ad 	ble.w	8025c96 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025b3c:	2800      	cmp	r0, #0
 8025b3e:	f2c0 80a8 	blt.w	8025c92 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025b42:	4580      	cmp	r8, r0
 8025b44:	f340 80a5 	ble.w	8025c92 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025b48:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8025b4c:	f01e 0f01 	tst.w	lr, #1
 8025b50:	5d16      	ldrb	r6, [r2, r4]
 8025b52:	bf0c      	ite	eq
 8025b54:	f006 060f 	andeq.w	r6, r6, #15
 8025b58:	1136      	asrne	r6, r6, #4
 8025b5a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8025b5e:	b2f6      	uxtb	r6, r6
 8025b60:	1c44      	adds	r4, r0, #1
 8025b62:	f100 809b 	bmi.w	8025c9c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025b66:	45a0      	cmp	r8, r4
 8025b68:	f340 8098 	ble.w	8025c9c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025b6c:	2f00      	cmp	r7, #0
 8025b6e:	f000 8097 	beq.w	8025ca0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8025b72:	f10e 0a01 	add.w	sl, lr, #1
 8025b76:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8025b7a:	f01a 0f01 	tst.w	sl, #1
 8025b7e:	5d14      	ldrb	r4, [r2, r4]
 8025b80:	bf0c      	ite	eq
 8025b82:	f004 040f 	andeq.w	r4, r4, #15
 8025b86:	1124      	asrne	r4, r4, #4
 8025b88:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8025b8c:	b2e4      	uxtb	r4, r4
 8025b8e:	3501      	adds	r5, #1
 8025b90:	f100 808a 	bmi.w	8025ca8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8025b94:	45a9      	cmp	r9, r5
 8025b96:	f340 8087 	ble.w	8025ca8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8025b9a:	f1bc 0f00 	cmp.w	ip, #0
 8025b9e:	f000 8086 	beq.w	8025cae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8025ba2:	2800      	cmp	r0, #0
 8025ba4:	db7e      	blt.n	8025ca4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8025ba6:	4580      	cmp	r8, r0
 8025ba8:	dd7c      	ble.n	8025ca4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8025baa:	eb03 090e 	add.w	r9, r3, lr
 8025bae:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8025bb2:	f019 0f01 	tst.w	r9, #1
 8025bb6:	5d55      	ldrb	r5, [r2, r5]
 8025bb8:	bf0c      	ite	eq
 8025bba:	f005 050f 	andeq.w	r5, r5, #15
 8025bbe:	112d      	asrne	r5, r5, #4
 8025bc0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8025bc4:	b2ed      	uxtb	r5, r5
 8025bc6:	3001      	adds	r0, #1
 8025bc8:	d474      	bmi.n	8025cb4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8025bca:	4580      	cmp	r8, r0
 8025bcc:	dd72      	ble.n	8025cb4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8025bce:	2f00      	cmp	r7, #0
 8025bd0:	d072      	beq.n	8025cb8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8025bd2:	3301      	adds	r3, #1
 8025bd4:	449e      	add	lr, r3
 8025bd6:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8025bda:	f01e 0f01 	tst.w	lr, #1
 8025bde:	5cd0      	ldrb	r0, [r2, r3]
 8025be0:	bf0c      	ite	eq
 8025be2:	f000 000f 	andeq.w	r0, r0, #15
 8025be6:	1100      	asrne	r0, r0, #4
 8025be8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025bec:	b2c3      	uxtb	r3, r0
 8025bee:	b2ba      	uxth	r2, r7
 8025bf0:	fa1f fc8c 	uxth.w	ip, ip
 8025bf4:	fb02 f00c 	mul.w	r0, r2, ip
 8025bf8:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025bfc:	0112      	lsls	r2, r2, #4
 8025bfe:	fa1f fc8c 	uxth.w	ip, ip
 8025c02:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8025c06:	1a12      	subs	r2, r2, r0
 8025c08:	eba7 070c 	sub.w	r7, r7, ip
 8025c0c:	b292      	uxth	r2, r2
 8025c0e:	b2bf      	uxth	r7, r7
 8025c10:	4362      	muls	r2, r4
 8025c12:	fb06 2207 	mla	r2, r6, r7, r2
 8025c16:	fb0c 2505 	mla	r5, ip, r5, r2
 8025c1a:	fb00 5303 	mla	r3, r0, r3, r5
 8025c1e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025c22:	b3a3      	cbz	r3, 8025c8e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8025c24:	4a25      	ldr	r2, [pc, #148]	; (8025cbc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8025c26:	880e      	ldrh	r6, [r1, #0]
 8025c28:	6815      	ldr	r5, [r2, #0]
 8025c2a:	1234      	asrs	r4, r6, #8
 8025c2c:	b29a      	uxth	r2, r3
 8025c2e:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8025c32:	43db      	mvns	r3, r3
 8025c34:	b2db      	uxtb	r3, r3
 8025c36:	fb10 f002 	smulbb	r0, r0, r2
 8025c3a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025c3e:	fb04 0403 	mla	r4, r4, r3, r0
 8025c42:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8025c46:	10f0      	asrs	r0, r6, #3
 8025c48:	b2ed      	uxtb	r5, r5
 8025c4a:	00f6      	lsls	r6, r6, #3
 8025c4c:	fb17 f702 	smulbb	r7, r7, r2
 8025c50:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025c54:	fb15 f202 	smulbb	r2, r5, r2
 8025c58:	b2f6      	uxtb	r6, r6
 8025c5a:	b2a4      	uxth	r4, r4
 8025c5c:	fb00 7003 	mla	r0, r0, r3, r7
 8025c60:	fb06 2303 	mla	r3, r6, r3, r2
 8025c64:	b29a      	uxth	r2, r3
 8025c66:	1c63      	adds	r3, r4, #1
 8025c68:	b280      	uxth	r0, r0
 8025c6a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8025c6e:	1c53      	adds	r3, r2, #1
 8025c70:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025c74:	1c42      	adds	r2, r0, #1
 8025c76:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025c7a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025c7e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025c82:	0940      	lsrs	r0, r0, #5
 8025c84:	4323      	orrs	r3, r4
 8025c86:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025c8a:	4303      	orrs	r3, r0
 8025c8c:	800b      	strh	r3, [r1, #0]
 8025c8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025c92:	2600      	movs	r6, #0
 8025c94:	e764      	b.n	8025b60 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8025c96:	2400      	movs	r4, #0
 8025c98:	4626      	mov	r6, r4
 8025c9a:	e778      	b.n	8025b8e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025c9c:	2400      	movs	r4, #0
 8025c9e:	e776      	b.n	8025b8e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025ca0:	463c      	mov	r4, r7
 8025ca2:	e774      	b.n	8025b8e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025ca4:	2500      	movs	r5, #0
 8025ca6:	e78e      	b.n	8025bc6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8025ca8:	2300      	movs	r3, #0
 8025caa:	461d      	mov	r5, r3
 8025cac:	e79f      	b.n	8025bee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025cae:	4663      	mov	r3, ip
 8025cb0:	4665      	mov	r5, ip
 8025cb2:	e79c      	b.n	8025bee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025cb4:	2300      	movs	r3, #0
 8025cb6:	e79a      	b.n	8025bee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025cb8:	463b      	mov	r3, r7
 8025cba:	e798      	b.n	8025bee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025cbc:	20012dc4 	.word	0x20012dc4

08025cc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025cc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025cc4:	b093      	sub	sp, #76	; 0x4c
 8025cc6:	461d      	mov	r5, r3
 8025cc8:	920c      	str	r2, [sp, #48]	; 0x30
 8025cca:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8025ccc:	9107      	str	r1, [sp, #28]
 8025cce:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8025cd2:	9011      	str	r0, [sp, #68]	; 0x44
 8025cd4:	6850      	ldr	r0, [r2, #4]
 8025cd6:	6812      	ldr	r2, [r2, #0]
 8025cd8:	fb00 1303 	mla	r3, r0, r3, r1
 8025cdc:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025ce0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025ce2:	689b      	ldr	r3, [r3, #8]
 8025ce4:	3301      	adds	r3, #1
 8025ce6:	f023 0301 	bic.w	r3, r3, #1
 8025cea:	9306      	str	r3, [sp, #24]
 8025cec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025cee:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8025cf2:	681f      	ldr	r7, [r3, #0]
 8025cf4:	9b07      	ldr	r3, [sp, #28]
 8025cf6:	2b00      	cmp	r3, #0
 8025cf8:	dc03      	bgt.n	8025d02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8025cfa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025cfc:	2b00      	cmp	r3, #0
 8025cfe:	f340 8267 	ble.w	80261d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8025d02:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025d04:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025d08:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025d0c:	1e48      	subs	r0, r1, #1
 8025d0e:	f102 3cff 	add.w	ip, r2, #4294967295
 8025d12:	2d00      	cmp	r5, #0
 8025d14:	f340 80b8 	ble.w	8025e88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025d18:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025d1c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025d20:	d406      	bmi.n	8025d30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025d22:	4586      	cmp	lr, r0
 8025d24:	da04      	bge.n	8025d30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025d26:	2b00      	cmp	r3, #0
 8025d28:	db02      	blt.n	8025d30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025d2a:	4563      	cmp	r3, ip
 8025d2c:	f2c0 80ad 	blt.w	8025e8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8025d30:	f11e 0e01 	adds.w	lr, lr, #1
 8025d34:	f100 80a0 	bmi.w	8025e78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025d38:	4571      	cmp	r1, lr
 8025d3a:	f2c0 809d 	blt.w	8025e78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025d3e:	3301      	adds	r3, #1
 8025d40:	f100 809a 	bmi.w	8025e78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025d44:	429a      	cmp	r2, r3
 8025d46:	f2c0 8097 	blt.w	8025e78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025d4a:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8025d4e:	9509      	str	r5, [sp, #36]	; 0x24
 8025d50:	46c8      	mov	r8, r9
 8025d52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025d54:	2b00      	cmp	r3, #0
 8025d56:	f340 80b6 	ble.w	8025ec6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8025d5a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8025d5e:	9308      	str	r3, [sp, #32]
 8025d60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025d62:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8025d66:	1423      	asrs	r3, r4, #16
 8025d68:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025d6c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8025d70:	f100 813e 	bmi.w	8025ff0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025d74:	f10c 3bff 	add.w	fp, ip, #4294967295
 8025d78:	455b      	cmp	r3, fp
 8025d7a:	f280 8139 	bge.w	8025ff0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025d7e:	2800      	cmp	r0, #0
 8025d80:	f2c0 8136 	blt.w	8025ff0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025d84:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025d88:	4558      	cmp	r0, fp
 8025d8a:	f280 8131 	bge.w	8025ff0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025d8e:	9a06      	ldr	r2, [sp, #24]
 8025d90:	fb00 3302 	mla	r3, r0, r2, r3
 8025d94:	0858      	lsrs	r0, r3, #1
 8025d96:	07da      	lsls	r2, r3, #31
 8025d98:	f817 c000 	ldrb.w	ip, [r7, r0]
 8025d9c:	9a08      	ldr	r2, [sp, #32]
 8025d9e:	bf54      	ite	pl
 8025da0:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025da4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025da8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025dac:	fa5f fc8c 	uxtb.w	ip, ip
 8025db0:	2a00      	cmp	r2, #0
 8025db2:	f000 80cb 	beq.w	8025f4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8025db6:	1c58      	adds	r0, r3, #1
 8025db8:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8025dbc:	07c0      	lsls	r0, r0, #31
 8025dbe:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8025dc2:	bf54      	ite	pl
 8025dc4:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025dc8:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8025dcc:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8025dd0:	fa5f fe8e 	uxtb.w	lr, lr
 8025dd4:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8025dd8:	b1b9      	cbz	r1, 8025e0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8025dda:	4453      	add	r3, sl
 8025ddc:	0858      	lsrs	r0, r3, #1
 8025dde:	07da      	lsls	r2, r3, #31
 8025de0:	5c38      	ldrb	r0, [r7, r0]
 8025de2:	bf54      	ite	pl
 8025de4:	f000 000f 	andpl.w	r0, r0, #15
 8025de8:	1100      	asrmi	r0, r0, #4
 8025dea:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025dee:	b2c0      	uxtb	r0, r0
 8025df0:	900a      	str	r0, [sp, #40]	; 0x28
 8025df2:	1c58      	adds	r0, r3, #1
 8025df4:	0843      	lsrs	r3, r0, #1
 8025df6:	07c2      	lsls	r2, r0, #31
 8025df8:	5cfb      	ldrb	r3, [r7, r3]
 8025dfa:	bf54      	ite	pl
 8025dfc:	f003 030f 	andpl.w	r3, r3, #15
 8025e00:	111b      	asrmi	r3, r3, #4
 8025e02:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025e06:	b2db      	uxtb	r3, r3
 8025e08:	930e      	str	r3, [sp, #56]	; 0x38
 8025e0a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8025e0e:	b289      	uxth	r1, r1
 8025e10:	fb02 f301 	mul.w	r3, r2, r1
 8025e14:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025e18:	0112      	lsls	r2, r2, #4
 8025e1a:	b289      	uxth	r1, r1
 8025e1c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8025e20:	1a40      	subs	r0, r0, r1
 8025e22:	fa1f fe80 	uxth.w	lr, r0
 8025e26:	1ad2      	subs	r2, r2, r3
 8025e28:	980d      	ldr	r0, [sp, #52]	; 0x34
 8025e2a:	b292      	uxth	r2, r2
 8025e2c:	4342      	muls	r2, r0
 8025e2e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8025e32:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8025e34:	fb01 c102 	mla	r1, r1, r2, ip
 8025e38:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8025e3a:	fb03 1302 	mla	r3, r3, r2, r1
 8025e3e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025e42:	2bff      	cmp	r3, #255	; 0xff
 8025e44:	f040 8093 	bne.w	8025f6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8025e48:	4bbe      	ldr	r3, [pc, #760]	; (8026144 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025e4a:	681a      	ldr	r2, [r3, #0]
 8025e4c:	4bbe      	ldr	r3, [pc, #760]	; (8026148 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8025e4e:	0951      	lsrs	r1, r2, #5
 8025e50:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8025e54:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025e58:	430b      	orrs	r3, r1
 8025e5a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025e5e:	4313      	orrs	r3, r2
 8025e60:	f8a8 3000 	strh.w	r3, [r8]
 8025e64:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025e66:	441c      	add	r4, r3
 8025e68:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025e6a:	441e      	add	r6, r3
 8025e6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025e6e:	3b01      	subs	r3, #1
 8025e70:	f108 0802 	add.w	r8, r8, #2
 8025e74:	9309      	str	r3, [sp, #36]	; 0x24
 8025e76:	e76c      	b.n	8025d52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025e78:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025e7a:	441c      	add	r4, r3
 8025e7c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025e7e:	3d01      	subs	r5, #1
 8025e80:	441e      	add	r6, r3
 8025e82:	f109 0902 	add.w	r9, r9, #2
 8025e86:	e744      	b.n	8025d12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8025e88:	d021      	beq.n	8025ece <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8025e8a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8025e8c:	1e6b      	subs	r3, r5, #1
 8025e8e:	fb00 4003 	mla	r0, r0, r3, r4
 8025e92:	1400      	asrs	r0, r0, #16
 8025e94:	f53f af59 	bmi.w	8025d4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025e98:	3901      	subs	r1, #1
 8025e9a:	4288      	cmp	r0, r1
 8025e9c:	f6bf af55 	bge.w	8025d4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025ea0:	9920      	ldr	r1, [sp, #128]	; 0x80
 8025ea2:	fb01 6303 	mla	r3, r1, r3, r6
 8025ea6:	141b      	asrs	r3, r3, #16
 8025ea8:	f53f af4f 	bmi.w	8025d4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025eac:	3a01      	subs	r2, #1
 8025eae:	4293      	cmp	r3, r2
 8025eb0:	f6bf af4b 	bge.w	8025d4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025eb4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8025eb8:	9308      	str	r3, [sp, #32]
 8025eba:	46a8      	mov	r8, r5
 8025ebc:	46ce      	mov	lr, r9
 8025ebe:	f1b8 0f00 	cmp.w	r8, #0
 8025ec2:	f300 80b5 	bgt.w	8026030 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8025ec6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8025eca:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8025ece:	9b07      	ldr	r3, [sp, #28]
 8025ed0:	2b00      	cmp	r3, #0
 8025ed2:	f340 817d 	ble.w	80261d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8025ed6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025eda:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025ede:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025ee2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025ee4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025ee8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025eec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025ef0:	eef0 6a62 	vmov.f32	s13, s5
 8025ef4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025ef8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025efc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025f00:	ee16 4a90 	vmov	r4, s13
 8025f04:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025f08:	eef0 6a43 	vmov.f32	s13, s6
 8025f0c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025f10:	ee12 2a90 	vmov	r2, s5
 8025f14:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025f18:	fb92 f3f3 	sdiv	r3, r2, r3
 8025f1c:	ee13 2a10 	vmov	r2, s6
 8025f20:	931f      	str	r3, [sp, #124]	; 0x7c
 8025f22:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025f24:	fb92 f3f3 	sdiv	r3, r2, r3
 8025f28:	9320      	str	r3, [sp, #128]	; 0x80
 8025f2a:	9b07      	ldr	r3, [sp, #28]
 8025f2c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8025f2e:	3b01      	subs	r3, #1
 8025f30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025f34:	9307      	str	r3, [sp, #28]
 8025f36:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025f38:	ee16 6a90 	vmov	r6, s13
 8025f3c:	bf14      	ite	ne
 8025f3e:	461d      	movne	r5, r3
 8025f40:	4615      	moveq	r5, r2
 8025f42:	eeb0 3a67 	vmov.f32	s6, s15
 8025f46:	eef0 2a47 	vmov.f32	s5, s14
 8025f4a:	e6d3      	b.n	8025cf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8025f4c:	2900      	cmp	r1, #0
 8025f4e:	f43f af5c 	beq.w	8025e0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8025f52:	eb0a 0003 	add.w	r0, sl, r3
 8025f56:	0843      	lsrs	r3, r0, #1
 8025f58:	07c0      	lsls	r0, r0, #31
 8025f5a:	5cfb      	ldrb	r3, [r7, r3]
 8025f5c:	bf54      	ite	pl
 8025f5e:	f003 030f 	andpl.w	r3, r3, #15
 8025f62:	111b      	asrmi	r3, r3, #4
 8025f64:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025f68:	b2db      	uxtb	r3, r3
 8025f6a:	930a      	str	r3, [sp, #40]	; 0x28
 8025f6c:	e74d      	b.n	8025e0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8025f6e:	2b00      	cmp	r3, #0
 8025f70:	f43f af78 	beq.w	8025e64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025f74:	4a73      	ldr	r2, [pc, #460]	; (8026144 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025f76:	f8b8 c000 	ldrh.w	ip, [r8]
 8025f7a:	6810      	ldr	r0, [r2, #0]
 8025f7c:	fa1f fe83 	uxth.w	lr, r3
 8025f80:	ea4f 212c 	mov.w	r1, ip, asr #8
 8025f84:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025f88:	43db      	mvns	r3, r3
 8025f8a:	b2db      	uxtb	r3, r3
 8025f8c:	fb12 f20e 	smulbb	r2, r2, lr
 8025f90:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025f94:	fb01 2103 	mla	r1, r1, r3, r2
 8025f98:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8025f9c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025fa0:	b2c0      	uxtb	r0, r0
 8025fa2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8025fa6:	fb1b fb0e 	smulbb	fp, fp, lr
 8025faa:	b289      	uxth	r1, r1
 8025fac:	fb10 fe0e 	smulbb	lr, r0, lr
 8025fb0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025fb4:	fa5f fc8c 	uxtb.w	ip, ip
 8025fb8:	fb02 b203 	mla	r2, r2, r3, fp
 8025fbc:	1c48      	adds	r0, r1, #1
 8025fbe:	fb0c e303 	mla	r3, ip, r3, lr
 8025fc2:	b292      	uxth	r2, r2
 8025fc4:	b29b      	uxth	r3, r3
 8025fc6:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8025fca:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8025fce:	f102 0b01 	add.w	fp, r2, #1
 8025fd2:	1c59      	adds	r1, r3, #1
 8025fd4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025fd8:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8025fdc:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025fe0:	0952      	lsrs	r2, r2, #5
 8025fe2:	4301      	orrs	r1, r0
 8025fe4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025fe8:	4311      	orrs	r1, r2
 8025fea:	f8a8 1000 	strh.w	r1, [r8]
 8025fee:	e739      	b.n	8025e64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025ff0:	f113 0b01 	adds.w	fp, r3, #1
 8025ff4:	f53f af36 	bmi.w	8025e64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025ff8:	45dc      	cmp	ip, fp
 8025ffa:	f6ff af33 	blt.w	8025e64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025ffe:	f110 0b01 	adds.w	fp, r0, #1
 8026002:	f53f af2f 	bmi.w	8025e64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026006:	45de      	cmp	lr, fp
 8026008:	f6ff af2c 	blt.w	8025e64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802600c:	9a08      	ldr	r2, [sp, #32]
 802600e:	9302      	str	r3, [sp, #8]
 8026010:	fa0f f38e 	sxth.w	r3, lr
 8026014:	9301      	str	r3, [sp, #4]
 8026016:	fa0f f38c 	sxth.w	r3, ip
 802601a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802601e:	9105      	str	r1, [sp, #20]
 8026020:	9300      	str	r3, [sp, #0]
 8026022:	463a      	mov	r2, r7
 8026024:	4653      	mov	r3, sl
 8026026:	4641      	mov	r1, r8
 8026028:	9811      	ldr	r0, [sp, #68]	; 0x44
 802602a:	f7ff fd73 	bl	8025b14 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802602e:	e719      	b.n	8025e64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026030:	9906      	ldr	r1, [sp, #24]
 8026032:	1422      	asrs	r2, r4, #16
 8026034:	1433      	asrs	r3, r6, #16
 8026036:	fb01 2303 	mla	r3, r1, r3, r2
 802603a:	085a      	lsrs	r2, r3, #1
 802603c:	07d9      	lsls	r1, r3, #31
 802603e:	5cba      	ldrb	r2, [r7, r2]
 8026040:	bf54      	ite	pl
 8026042:	f002 020f 	andpl.w	r2, r2, #15
 8026046:	1112      	asrmi	r2, r2, #4
 8026048:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802604c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8026050:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026054:	b2d2      	uxtb	r2, r2
 8026056:	2800      	cmp	r0, #0
 8026058:	d062      	beq.n	8026120 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 802605a:	f103 0a01 	add.w	sl, r3, #1
 802605e:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8026062:	f01a 0f01 	tst.w	sl, #1
 8026066:	5c79      	ldrb	r1, [r7, r1]
 8026068:	bf0c      	ite	eq
 802606a:	f001 010f 	andeq.w	r1, r1, #15
 802606e:	1109      	asrne	r1, r1, #4
 8026070:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026074:	b2c9      	uxtb	r1, r1
 8026076:	910f      	str	r1, [sp, #60]	; 0x3c
 8026078:	f1bc 0f00 	cmp.w	ip, #0
 802607c:	d019      	beq.n	80260b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802607e:	9908      	ldr	r1, [sp, #32]
 8026080:	440b      	add	r3, r1
 8026082:	0859      	lsrs	r1, r3, #1
 8026084:	f013 0f01 	tst.w	r3, #1
 8026088:	5c79      	ldrb	r1, [r7, r1]
 802608a:	bf0c      	ite	eq
 802608c:	f001 010f 	andeq.w	r1, r1, #15
 8026090:	1109      	asrne	r1, r1, #4
 8026092:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026096:	b2c9      	uxtb	r1, r1
 8026098:	3301      	adds	r3, #1
 802609a:	910b      	str	r1, [sp, #44]	; 0x2c
 802609c:	0859      	lsrs	r1, r3, #1
 802609e:	07db      	lsls	r3, r3, #31
 80260a0:	5c79      	ldrb	r1, [r7, r1]
 80260a2:	bf54      	ite	pl
 80260a4:	f001 010f 	andpl.w	r1, r1, #15
 80260a8:	1109      	asrmi	r1, r1, #4
 80260aa:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80260ae:	b2c9      	uxtb	r1, r1
 80260b0:	9110      	str	r1, [sp, #64]	; 0x40
 80260b2:	b280      	uxth	r0, r0
 80260b4:	fa1f fc8c 	uxth.w	ip, ip
 80260b8:	fb00 f30c 	mul.w	r3, r0, ip
 80260bc:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80260c0:	0100      	lsls	r0, r0, #4
 80260c2:	fa1f fc8c 	uxth.w	ip, ip
 80260c6:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80260ca:	eba1 010c 	sub.w	r1, r1, ip
 80260ce:	fa1f fa81 	uxth.w	sl, r1
 80260d2:	1ac0      	subs	r0, r0, r3
 80260d4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80260d6:	b280      	uxth	r0, r0
 80260d8:	4348      	muls	r0, r1
 80260da:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80260dc:	fb02 020a 	mla	r2, r2, sl, r0
 80260e0:	fb0c 2c01 	mla	ip, ip, r1, r2
 80260e4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80260e6:	fb03 c302 	mla	r3, r3, r2, ip
 80260ea:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80260ee:	2bff      	cmp	r3, #255	; 0xff
 80260f0:	d12c      	bne.n	802614c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 80260f2:	4b14      	ldr	r3, [pc, #80]	; (8026144 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80260f4:	681a      	ldr	r2, [r3, #0]
 80260f6:	4b14      	ldr	r3, [pc, #80]	; (8026148 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80260f8:	0951      	lsrs	r1, r2, #5
 80260fa:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80260fe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026102:	430b      	orrs	r3, r1
 8026104:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026108:	4313      	orrs	r3, r2
 802610a:	f8ae 3000 	strh.w	r3, [lr]
 802610e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026110:	441c      	add	r4, r3
 8026112:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026114:	f10e 0e02 	add.w	lr, lr, #2
 8026118:	441e      	add	r6, r3
 802611a:	f108 38ff 	add.w	r8, r8, #4294967295
 802611e:	e6ce      	b.n	8025ebe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8026120:	f1bc 0f00 	cmp.w	ip, #0
 8026124:	d0c5      	beq.n	80260b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026126:	9908      	ldr	r1, [sp, #32]
 8026128:	440b      	add	r3, r1
 802612a:	0859      	lsrs	r1, r3, #1
 802612c:	07db      	lsls	r3, r3, #31
 802612e:	5c79      	ldrb	r1, [r7, r1]
 8026130:	bf54      	ite	pl
 8026132:	f001 010f 	andpl.w	r1, r1, #15
 8026136:	1109      	asrmi	r1, r1, #4
 8026138:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802613c:	b2c9      	uxtb	r1, r1
 802613e:	910b      	str	r1, [sp, #44]	; 0x2c
 8026140:	e7b7      	b.n	80260b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026142:	bf00      	nop
 8026144:	20012dc4 	.word	0x20012dc4
 8026148:	fffff800 	.word	0xfffff800
 802614c:	2b00      	cmp	r3, #0
 802614e:	d0de      	beq.n	802610e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026150:	4a21      	ldr	r2, [pc, #132]	; (80261d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8026152:	f8be c000 	ldrh.w	ip, [lr]
 8026156:	6810      	ldr	r0, [r2, #0]
 8026158:	fa1f fa83 	uxth.w	sl, r3
 802615c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8026160:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026164:	43db      	mvns	r3, r3
 8026166:	b2db      	uxtb	r3, r3
 8026168:	fb12 f20a 	smulbb	r2, r2, sl
 802616c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026170:	fb01 2103 	mla	r1, r1, r3, r2
 8026174:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026178:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802617c:	b2c0      	uxtb	r0, r0
 802617e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026182:	fa5f fc8c 	uxtb.w	ip, ip
 8026186:	fb10 f00a 	smulbb	r0, r0, sl
 802618a:	fb0c 0003 	mla	r0, ip, r3, r0
 802618e:	b289      	uxth	r1, r1
 8026190:	fb1b fb0a 	smulbb	fp, fp, sl
 8026194:	b280      	uxth	r0, r0
 8026196:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802619a:	fb02 b203 	mla	r2, r2, r3, fp
 802619e:	1c4b      	adds	r3, r1, #1
 80261a0:	f100 0b01 	add.w	fp, r0, #1
 80261a4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80261a8:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80261ac:	b292      	uxth	r2, r2
 80261ae:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80261b2:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80261b6:	ea4b 0101 	orr.w	r1, fp, r1
 80261ba:	f102 0b01 	add.w	fp, r2, #1
 80261be:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80261c2:	0952      	lsrs	r2, r2, #5
 80261c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80261c8:	4311      	orrs	r1, r2
 80261ca:	f8ae 1000 	strh.w	r1, [lr]
 80261ce:	e79e      	b.n	802610e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80261d0:	b013      	add	sp, #76	; 0x4c
 80261d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80261d6:	bf00      	nop
 80261d8:	20012dc4 	.word	0x20012dc4

080261dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80261dc:	b570      	push	{r4, r5, r6, lr}
 80261de:	1208      	asrs	r0, r1, #8
 80261e0:	b29e      	uxth	r6, r3
 80261e2:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80261e6:	1213      	asrs	r3, r2, #8
 80261e8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80261ec:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80261f0:	fb13 f305 	smulbb	r3, r3, r5
 80261f4:	fb10 f006 	smulbb	r0, r0, r6
 80261f8:	4418      	add	r0, r3
 80261fa:	10cc      	asrs	r4, r1, #3
 80261fc:	10d3      	asrs	r3, r2, #3
 80261fe:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8026202:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8026206:	fb13 f305 	smulbb	r3, r3, r5
 802620a:	fb14 f406 	smulbb	r4, r4, r6
 802620e:	00c9      	lsls	r1, r1, #3
 8026210:	00d2      	lsls	r2, r2, #3
 8026212:	441c      	add	r4, r3
 8026214:	b2d2      	uxtb	r2, r2
 8026216:	b2cb      	uxtb	r3, r1
 8026218:	fb12 f205 	smulbb	r2, r2, r5
 802621c:	b280      	uxth	r0, r0
 802621e:	fb13 f306 	smulbb	r3, r3, r6
 8026222:	4413      	add	r3, r2
 8026224:	1c42      	adds	r2, r0, #1
 8026226:	b29b      	uxth	r3, r3
 8026228:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802622c:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8026230:	1c58      	adds	r0, r3, #1
 8026232:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026236:	b2a4      	uxth	r4, r4
 8026238:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802623c:	4310      	orrs	r0, r2
 802623e:	1c62      	adds	r2, r4, #1
 8026240:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8026244:	0964      	lsrs	r4, r4, #5
 8026246:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802624a:	4320      	orrs	r0, r4
 802624c:	bd70      	pop	{r4, r5, r6, pc}
	...

08026250 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8026250:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026254:	b08f      	sub	sp, #60	; 0x3c
 8026256:	461c      	mov	r4, r3
 8026258:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 802625c:	9004      	str	r0, [sp, #16]
 802625e:	460d      	mov	r5, r1
 8026260:	4616      	mov	r6, r2
 8026262:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026264:	2f00      	cmp	r7, #0
 8026266:	f000 80f6 	beq.w	8026456 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 802626a:	6820      	ldr	r0, [r4, #0]
 802626c:	6861      	ldr	r1, [r4, #4]
 802626e:	aa0a      	add	r2, sp, #40	; 0x28
 8026270:	c203      	stmia	r2!, {r0, r1}
 8026272:	6818      	ldr	r0, [r3, #0]
 8026274:	6859      	ldr	r1, [r3, #4]
 8026276:	aa0c      	add	r2, sp, #48	; 0x30
 8026278:	c203      	stmia	r2!, {r0, r1}
 802627a:	a80a      	add	r0, sp, #40	; 0x28
 802627c:	f7ef fa9c 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026280:	4621      	mov	r1, r4
 8026282:	a80c      	add	r0, sp, #48	; 0x30
 8026284:	f7ef fadc 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026288:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802628c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8026290:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8026294:	f002 0301 	and.w	r3, r2, #1
 8026298:	9306      	str	r3, [sp, #24]
 802629a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802629e:	f003 0101 	and.w	r1, r3, #1
 80262a2:	9105      	str	r1, [sp, #20]
 80262a4:	9805      	ldr	r0, [sp, #20]
 80262a6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80262aa:	4403      	add	r3, r0
 80262ac:	fb01 2303 	mla	r3, r1, r3, r2
 80262b0:	f04f 0802 	mov.w	r8, #2
 80262b4:	fb93 f3f8 	sdiv	r3, r3, r8
 80262b8:	441d      	add	r5, r3
 80262ba:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80262be:	441a      	add	r2, r3
 80262c0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80262c4:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80262c8:	4419      	add	r1, r3
 80262ca:	4b64      	ldr	r3, [pc, #400]	; (802645c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80262cc:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80262d0:	6818      	ldr	r0, [r3, #0]
 80262d2:	6803      	ldr	r3, [r0, #0]
 80262d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80262d6:	4798      	blx	r3
 80262d8:	4a61      	ldr	r2, [pc, #388]	; (8026460 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80262da:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80262de:	8813      	ldrh	r3, [r2, #0]
 80262e0:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 80262e4:	2fff      	cmp	r7, #255	; 0xff
 80262e6:	fb03 a404 	mla	r4, r3, r4, sl
 80262ea:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80262ee:	f106 0604 	add.w	r6, r6, #4
 80262f2:	4611      	mov	r1, r2
 80262f4:	fb03 fb0b 	mul.w	fp, r3, fp
 80262f8:	d06b      	beq.n	80263d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80262fa:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 80262fe:	9303      	str	r3, [sp, #12]
 8026300:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8026304:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8026308:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802630c:	9b07      	ldr	r3, [sp, #28]
 802630e:	42a3      	cmp	r3, r4
 8026310:	f240 809c 	bls.w	802644c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8026314:	9b06      	ldr	r3, [sp, #24]
 8026316:	2b00      	cmp	r3, #0
 8026318:	d039      	beq.n	802638e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 802631a:	782b      	ldrb	r3, [r5, #0]
 802631c:	8822      	ldrh	r2, [r4, #0]
 802631e:	9804      	ldr	r0, [sp, #16]
 8026320:	f003 030f 	and.w	r3, r3, #15
 8026324:	f105 0801 	add.w	r8, r5, #1
 8026328:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802632c:	9b03      	ldr	r3, [sp, #12]
 802632e:	9300      	str	r3, [sp, #0]
 8026330:	463b      	mov	r3, r7
 8026332:	f7ff ff53 	bl	80261dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026336:	f824 0b02 	strh.w	r0, [r4], #2
 802633a:	f109 3bff 	add.w	fp, r9, #4294967295
 802633e:	f1bb 0f01 	cmp.w	fp, #1
 8026342:	46a2      	mov	sl, r4
 8026344:	f104 0404 	add.w	r4, r4, #4
 8026348:	dd24      	ble.n	8026394 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 802634a:	f898 3000 	ldrb.w	r3, [r8]
 802634e:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8026352:	9804      	ldr	r0, [sp, #16]
 8026354:	091b      	lsrs	r3, r3, #4
 8026356:	f1ab 0b02 	sub.w	fp, fp, #2
 802635a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802635e:	9b03      	ldr	r3, [sp, #12]
 8026360:	9300      	str	r3, [sp, #0]
 8026362:	463b      	mov	r3, r7
 8026364:	f7ff ff3a 	bl	80261dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026368:	f824 0c04 	strh.w	r0, [r4, #-4]
 802636c:	f818 3b01 	ldrb.w	r3, [r8], #1
 8026370:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8026374:	9804      	ldr	r0, [sp, #16]
 8026376:	f003 030f 	and.w	r3, r3, #15
 802637a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802637e:	9b03      	ldr	r3, [sp, #12]
 8026380:	9300      	str	r3, [sp, #0]
 8026382:	463b      	mov	r3, r7
 8026384:	f7ff ff2a 	bl	80261dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026388:	f824 0c02 	strh.w	r0, [r4, #-2]
 802638c:	e7d7      	b.n	802633e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802638e:	46a8      	mov	r8, r5
 8026390:	46cb      	mov	fp, r9
 8026392:	e7d4      	b.n	802633e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8026394:	d10e      	bne.n	80263b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8026396:	f898 3000 	ldrb.w	r3, [r8]
 802639a:	f8ba 2000 	ldrh.w	r2, [sl]
 802639e:	9804      	ldr	r0, [sp, #16]
 80263a0:	091b      	lsrs	r3, r3, #4
 80263a2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80263a6:	9b03      	ldr	r3, [sp, #12]
 80263a8:	9300      	str	r3, [sp, #0]
 80263aa:	463b      	mov	r3, r7
 80263ac:	f7ff ff16 	bl	80261dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80263b0:	f82a 0b02 	strh.w	r0, [sl], #2
 80263b4:	9b08      	ldr	r3, [sp, #32]
 80263b6:	9a05      	ldr	r2, [sp, #20]
 80263b8:	881c      	ldrh	r4, [r3, #0]
 80263ba:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80263be:	eba4 0409 	sub.w	r4, r4, r9
 80263c2:	4413      	add	r3, r2
 80263c4:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80263c8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80263ca:	fb93 f3f2 	sdiv	r3, r3, r2
 80263ce:	441d      	add	r5, r3
 80263d0:	e79c      	b.n	802630c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80263d2:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80263d6:	45a3      	cmp	fp, r4
 80263d8:	d938      	bls.n	802644c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80263da:	9b06      	ldr	r3, [sp, #24]
 80263dc:	b1f3      	cbz	r3, 802641c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80263de:	782b      	ldrb	r3, [r5, #0]
 80263e0:	f003 030f 	and.w	r3, r3, #15
 80263e4:	1c6a      	adds	r2, r5, #1
 80263e6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80263ea:	8023      	strh	r3, [r4, #0]
 80263ec:	f109 30ff 	add.w	r0, r9, #4294967295
 80263f0:	3402      	adds	r4, #2
 80263f2:	2801      	cmp	r0, #1
 80263f4:	4623      	mov	r3, r4
 80263f6:	f104 0404 	add.w	r4, r4, #4
 80263fa:	dd12      	ble.n	8026422 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80263fc:	7813      	ldrb	r3, [r2, #0]
 80263fe:	091b      	lsrs	r3, r3, #4
 8026400:	3802      	subs	r0, #2
 8026402:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026406:	f824 3c04 	strh.w	r3, [r4, #-4]
 802640a:	f812 3b01 	ldrb.w	r3, [r2], #1
 802640e:	f003 030f 	and.w	r3, r3, #15
 8026412:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026416:	f824 3c02 	strh.w	r3, [r4, #-2]
 802641a:	e7ea      	b.n	80263f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802641c:	462a      	mov	r2, r5
 802641e:	4648      	mov	r0, r9
 8026420:	e7e7      	b.n	80263f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8026422:	d106      	bne.n	8026432 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8026424:	7812      	ldrb	r2, [r2, #0]
 8026426:	0912      	lsrs	r2, r2, #4
 8026428:	3302      	adds	r3, #2
 802642a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802642e:	f823 2c02 	strh.w	r2, [r3, #-2]
 8026432:	880c      	ldrh	r4, [r1, #0]
 8026434:	9a05      	ldr	r2, [sp, #20]
 8026436:	eba4 0409 	sub.w	r4, r4, r9
 802643a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802643e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026442:	4413      	add	r3, r2
 8026444:	fb93 f3f8 	sdiv	r3, r3, r8
 8026448:	441d      	add	r5, r3
 802644a:	e7c4      	b.n	80263d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 802644c:	4b03      	ldr	r3, [pc, #12]	; (802645c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802644e:	6818      	ldr	r0, [r3, #0]
 8026450:	6803      	ldr	r3, [r0, #0]
 8026452:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026454:	4798      	blx	r3
 8026456:	b00f      	add	sp, #60	; 0x3c
 8026458:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802645c:	20012db4 	.word	0x20012db4
 8026460:	20012dae 	.word	0x20012dae

08026464 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8026464:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026466:	f89d 5014 	ldrb.w	r5, [sp, #20]
 802646a:	2dff      	cmp	r5, #255	; 0xff
 802646c:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8026470:	d10c      	bne.n	802648c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8026472:	2bff      	cmp	r3, #255	; 0xff
 8026474:	d10a      	bne.n	802648c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8026476:	4b25      	ldr	r3, [pc, #148]	; (802650c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8026478:	0948      	lsrs	r0, r1, #5
 802647a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802647e:	403b      	ands	r3, r7
 8026480:	4318      	orrs	r0, r3
 8026482:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8026486:	4308      	orrs	r0, r1
 8026488:	b280      	uxth	r0, r0
 802648a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802648c:	fb15 f503 	smulbb	r5, r5, r3
 8026490:	b2ab      	uxth	r3, r5
 8026492:	1c5d      	adds	r5, r3, #1
 8026494:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8026498:	1214      	asrs	r4, r2, #8
 802649a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802649e:	fa1f fc85 	uxth.w	ip, r5
 80264a2:	10d6      	asrs	r6, r2, #3
 80264a4:	00d0      	lsls	r0, r2, #3
 80264a6:	43ed      	mvns	r5, r5
 80264a8:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80264ac:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80264b0:	b2eb      	uxtb	r3, r5
 80264b2:	b2c0      	uxtb	r0, r0
 80264b4:	fb12 f20c 	smulbb	r2, r2, ip
 80264b8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80264bc:	fb04 2403 	mla	r4, r4, r3, r2
 80264c0:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80264c4:	b2c8      	uxtb	r0, r1
 80264c6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80264ca:	b2fd      	uxtb	r5, r7
 80264cc:	fb10 f00c 	smulbb	r0, r0, ip
 80264d0:	b2a4      	uxth	r4, r4
 80264d2:	fb02 0003 	mla	r0, r2, r3, r0
 80264d6:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80264da:	fb15 f50c 	smulbb	r5, r5, ip
 80264de:	fb06 5503 	mla	r5, r6, r3, r5
 80264e2:	b283      	uxth	r3, r0
 80264e4:	1c60      	adds	r0, r4, #1
 80264e6:	b2ad      	uxth	r5, r5
 80264e8:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80264ec:	1c58      	adds	r0, r3, #1
 80264ee:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80264f2:	1c6b      	adds	r3, r5, #1
 80264f4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80264f8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80264fc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026500:	096d      	lsrs	r5, r5, #5
 8026502:	4320      	orrs	r0, r4
 8026504:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8026508:	4328      	orrs	r0, r5
 802650a:	e7be      	b.n	802648a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 802650c:	00fff800 	.word	0x00fff800

08026510 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8026510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026514:	461c      	mov	r4, r3
 8026516:	b08d      	sub	sp, #52	; 0x34
 8026518:	460d      	mov	r5, r1
 802651a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802651c:	6861      	ldr	r1, [r4, #4]
 802651e:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8026522:	4680      	mov	r8, r0
 8026524:	6820      	ldr	r0, [r4, #0]
 8026526:	4616      	mov	r6, r2
 8026528:	aa08      	add	r2, sp, #32
 802652a:	c203      	stmia	r2!, {r0, r1}
 802652c:	6818      	ldr	r0, [r3, #0]
 802652e:	6859      	ldr	r1, [r3, #4]
 8026530:	aa0a      	add	r2, sp, #40	; 0x28
 8026532:	c203      	stmia	r2!, {r0, r1}
 8026534:	a808      	add	r0, sp, #32
 8026536:	f7ef f93f 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802653a:	4621      	mov	r1, r4
 802653c:	a80a      	add	r0, sp, #40	; 0x28
 802653e:	f7ef f97f 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026542:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8026546:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 802654a:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 802654e:	f002 0301 	and.w	r3, r2, #1
 8026552:	9303      	str	r3, [sp, #12]
 8026554:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8026558:	f003 0101 	and.w	r1, r3, #1
 802655c:	9102      	str	r1, [sp, #8]
 802655e:	9802      	ldr	r0, [sp, #8]
 8026560:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8026564:	4403      	add	r3, r0
 8026566:	fb01 2303 	mla	r3, r1, r3, r2
 802656a:	f04f 0a02 	mov.w	sl, #2
 802656e:	fb93 f3fa 	sdiv	r3, r3, sl
 8026572:	441d      	add	r5, r3
 8026574:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8026578:	441a      	add	r2, r3
 802657a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802657e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8026582:	4a3f      	ldr	r2, [pc, #252]	; (8026680 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8026584:	9205      	str	r2, [sp, #20]
 8026586:	4419      	add	r1, r3
 8026588:	6810      	ldr	r0, [r2, #0]
 802658a:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 802658e:	6803      	ldr	r3, [r0, #0]
 8026590:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8026592:	4798      	blx	r3
 8026594:	4b3b      	ldr	r3, [pc, #236]	; (8026684 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8026596:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 802659a:	8819      	ldrh	r1, [r3, #0]
 802659c:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 80265a0:	fb01 c404 	mla	r4, r1, r4, ip
 80265a4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80265a8:	434f      	muls	r7, r1
 80265aa:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80265ae:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80265b2:	3604      	adds	r6, #4
 80265b4:	9204      	str	r2, [sp, #16]
 80265b6:	9b04      	ldr	r3, [sp, #16]
 80265b8:	429c      	cmp	r4, r3
 80265ba:	d258      	bcs.n	802666e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80265bc:	9b03      	ldr	r3, [sp, #12]
 80265be:	2b00      	cmp	r3, #0
 80265c0:	d034      	beq.n	802662c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80265c2:	782b      	ldrb	r3, [r5, #0]
 80265c4:	f003 030f 	and.w	r3, r3, #15
 80265c8:	1c6f      	adds	r7, r5, #1
 80265ca:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80265ce:	0e0b      	lsrs	r3, r1, #24
 80265d0:	d006      	beq.n	80265e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80265d2:	8822      	ldrh	r2, [r4, #0]
 80265d4:	9300      	str	r3, [sp, #0]
 80265d6:	4640      	mov	r0, r8
 80265d8:	464b      	mov	r3, r9
 80265da:	f7ff ff43 	bl	8026464 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80265de:	8020      	strh	r0, [r4, #0]
 80265e0:	3402      	adds	r4, #2
 80265e2:	f10b 3aff 	add.w	sl, fp, #4294967295
 80265e6:	f1ba 0f01 	cmp.w	sl, #1
 80265ea:	dd22      	ble.n	8026632 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80265ec:	783b      	ldrb	r3, [r7, #0]
 80265ee:	091b      	lsrs	r3, r3, #4
 80265f0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80265f4:	0e0b      	lsrs	r3, r1, #24
 80265f6:	d006      	beq.n	8026606 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80265f8:	8822      	ldrh	r2, [r4, #0]
 80265fa:	9300      	str	r3, [sp, #0]
 80265fc:	4640      	mov	r0, r8
 80265fe:	464b      	mov	r3, r9
 8026600:	f7ff ff30 	bl	8026464 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026604:	8020      	strh	r0, [r4, #0]
 8026606:	f817 3b01 	ldrb.w	r3, [r7], #1
 802660a:	f003 030f 	and.w	r3, r3, #15
 802660e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026612:	0e0b      	lsrs	r3, r1, #24
 8026614:	d006      	beq.n	8026624 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8026616:	8862      	ldrh	r2, [r4, #2]
 8026618:	9300      	str	r3, [sp, #0]
 802661a:	4640      	mov	r0, r8
 802661c:	464b      	mov	r3, r9
 802661e:	f7ff ff21 	bl	8026464 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026622:	8060      	strh	r0, [r4, #2]
 8026624:	3404      	adds	r4, #4
 8026626:	f1aa 0a02 	sub.w	sl, sl, #2
 802662a:	e7dc      	b.n	80265e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802662c:	462f      	mov	r7, r5
 802662e:	46da      	mov	sl, fp
 8026630:	e7d9      	b.n	80265e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8026632:	d10d      	bne.n	8026650 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8026634:	783b      	ldrb	r3, [r7, #0]
 8026636:	091b      	lsrs	r3, r3, #4
 8026638:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802663c:	0e0b      	lsrs	r3, r1, #24
 802663e:	d006      	beq.n	802664e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8026640:	8822      	ldrh	r2, [r4, #0]
 8026642:	9300      	str	r3, [sp, #0]
 8026644:	4640      	mov	r0, r8
 8026646:	464b      	mov	r3, r9
 8026648:	f7ff ff0c 	bl	8026464 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802664c:	8020      	strh	r0, [r4, #0]
 802664e:	3402      	adds	r4, #2
 8026650:	9b06      	ldr	r3, [sp, #24]
 8026652:	9a02      	ldr	r2, [sp, #8]
 8026654:	881b      	ldrh	r3, [r3, #0]
 8026656:	eba3 030b 	sub.w	r3, r3, fp
 802665a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802665e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8026662:	4413      	add	r3, r2
 8026664:	9a07      	ldr	r2, [sp, #28]
 8026666:	fb93 f3f2 	sdiv	r3, r3, r2
 802666a:	441d      	add	r5, r3
 802666c:	e7a3      	b.n	80265b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802666e:	9b05      	ldr	r3, [sp, #20]
 8026670:	6818      	ldr	r0, [r3, #0]
 8026672:	6803      	ldr	r3, [r0, #0]
 8026674:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026676:	4798      	blx	r3
 8026678:	b00d      	add	sp, #52	; 0x34
 802667a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802667e:	bf00      	nop
 8026680:	20012db4 	.word	0x20012db4
 8026684:	20012dae 	.word	0x20012dae

08026688 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8026688:	b570      	push	{r4, r5, r6, lr}
 802668a:	1214      	asrs	r4, r2, #8
 802668c:	788d      	ldrb	r5, [r1, #2]
 802668e:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8026692:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026696:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802669a:	fb15 f503 	smulbb	r5, r5, r3
 802669e:	fb04 5506 	mla	r5, r4, r6, r5
 80266a2:	10d0      	asrs	r0, r2, #3
 80266a4:	784c      	ldrb	r4, [r1, #1]
 80266a6:	7809      	ldrb	r1, [r1, #0]
 80266a8:	00d2      	lsls	r2, r2, #3
 80266aa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80266ae:	b2d2      	uxtb	r2, r2
 80266b0:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80266b4:	fb14 f403 	smulbb	r4, r4, r3
 80266b8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80266bc:	fb11 f303 	smulbb	r3, r1, r3
 80266c0:	fb00 4406 	mla	r4, r0, r6, r4
 80266c4:	fb02 3306 	mla	r3, r2, r6, r3
 80266c8:	b2ad      	uxth	r5, r5
 80266ca:	b29b      	uxth	r3, r3
 80266cc:	b2a4      	uxth	r4, r4
 80266ce:	1c68      	adds	r0, r5, #1
 80266d0:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80266d4:	1c62      	adds	r2, r4, #1
 80266d6:	1c58      	adds	r0, r3, #1
 80266d8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80266dc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80266e0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80266e4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80266e8:	0964      	lsrs	r4, r4, #5
 80266ea:	4328      	orrs	r0, r5
 80266ec:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80266f0:	4320      	orrs	r0, r4
 80266f2:	bd70      	pop	{r4, r5, r6, pc}

080266f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80266f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80266f8:	b08f      	sub	sp, #60	; 0x3c
 80266fa:	461c      	mov	r4, r3
 80266fc:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8026700:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026702:	4682      	mov	sl, r0
 8026704:	460e      	mov	r6, r1
 8026706:	4615      	mov	r5, r2
 8026708:	2f00      	cmp	r7, #0
 802670a:	f000 8142 	beq.w	8026992 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802670e:	6820      	ldr	r0, [r4, #0]
 8026710:	6861      	ldr	r1, [r4, #4]
 8026712:	aa0a      	add	r2, sp, #40	; 0x28
 8026714:	c203      	stmia	r2!, {r0, r1}
 8026716:	6818      	ldr	r0, [r3, #0]
 8026718:	6859      	ldr	r1, [r3, #4]
 802671a:	aa0c      	add	r2, sp, #48	; 0x30
 802671c:	c203      	stmia	r2!, {r0, r1}
 802671e:	a80a      	add	r0, sp, #40	; 0x28
 8026720:	f7ef f84a 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026724:	4621      	mov	r1, r4
 8026726:	a80c      	add	r0, sp, #48	; 0x30
 8026728:	f7ef f88a 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802672c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8026730:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8026734:	f002 0301 	and.w	r3, r2, #1
 8026738:	9306      	str	r3, [sp, #24]
 802673a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802673e:	f003 0101 	and.w	r1, r3, #1
 8026742:	9105      	str	r1, [sp, #20]
 8026744:	9805      	ldr	r0, [sp, #20]
 8026746:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 802674a:	4403      	add	r3, r0
 802674c:	fb01 2303 	mla	r3, r1, r3, r2
 8026750:	f04f 0802 	mov.w	r8, #2
 8026754:	fb93 f3f8 	sdiv	r3, r3, r8
 8026758:	441e      	add	r6, r3
 802675a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802675e:	441a      	add	r2, r3
 8026760:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8026764:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8026768:	4419      	add	r1, r3
 802676a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802676e:	9303      	str	r3, [sp, #12]
 8026770:	4b89      	ldr	r3, [pc, #548]	; (8026998 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8026772:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8026776:	6818      	ldr	r0, [r3, #0]
 8026778:	6803      	ldr	r3, [r0, #0]
 802677a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802677c:	4798      	blx	r3
 802677e:	4a87      	ldr	r2, [pc, #540]	; (802699c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8026780:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8026784:	8813      	ldrh	r3, [r2, #0]
 8026786:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 802678a:	2fff      	cmp	r7, #255	; 0xff
 802678c:	fb03 9404 	mla	r4, r3, r4, r9
 8026790:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026794:	f105 0504 	add.w	r5, r5, #4
 8026798:	4694      	mov	ip, r2
 802679a:	fb03 f30b 	mul.w	r3, r3, fp
 802679e:	d071      	beq.n	8026884 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80267a0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80267a4:	43f9      	mvns	r1, r7
 80267a6:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80267aa:	b2c9      	uxtb	r1, r1
 80267ac:	9104      	str	r1, [sp, #16]
 80267ae:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80267b2:	9b07      	ldr	r3, [sp, #28]
 80267b4:	42a3      	cmp	r3, r4
 80267b6:	f240 80e7 	bls.w	8026988 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80267ba:	9b06      	ldr	r3, [sp, #24]
 80267bc:	2b00      	cmp	r3, #0
 80267be:	d03d      	beq.n	802683c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80267c0:	7831      	ldrb	r1, [r6, #0]
 80267c2:	9b04      	ldr	r3, [sp, #16]
 80267c4:	8822      	ldrh	r2, [r4, #0]
 80267c6:	9300      	str	r3, [sp, #0]
 80267c8:	f001 010f 	and.w	r1, r1, #15
 80267cc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80267d0:	463b      	mov	r3, r7
 80267d2:	4429      	add	r1, r5
 80267d4:	4650      	mov	r0, sl
 80267d6:	f7ff ff57 	bl	8026688 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80267da:	9b03      	ldr	r3, [sp, #12]
 80267dc:	f824 0b02 	strh.w	r0, [r4], #2
 80267e0:	f106 0801 	add.w	r8, r6, #1
 80267e4:	f103 3bff 	add.w	fp, r3, #4294967295
 80267e8:	f1bb 0f01 	cmp.w	fp, #1
 80267ec:	46a1      	mov	r9, r4
 80267ee:	f104 0404 	add.w	r4, r4, #4
 80267f2:	dd27      	ble.n	8026844 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80267f4:	f898 1000 	ldrb.w	r1, [r8]
 80267f8:	9b04      	ldr	r3, [sp, #16]
 80267fa:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80267fe:	9300      	str	r3, [sp, #0]
 8026800:	0909      	lsrs	r1, r1, #4
 8026802:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026806:	463b      	mov	r3, r7
 8026808:	4429      	add	r1, r5
 802680a:	4650      	mov	r0, sl
 802680c:	f7ff ff3c 	bl	8026688 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026810:	f824 0c04 	strh.w	r0, [r4, #-4]
 8026814:	f818 1b01 	ldrb.w	r1, [r8], #1
 8026818:	9b04      	ldr	r3, [sp, #16]
 802681a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802681e:	9300      	str	r3, [sp, #0]
 8026820:	f001 010f 	and.w	r1, r1, #15
 8026824:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026828:	463b      	mov	r3, r7
 802682a:	4429      	add	r1, r5
 802682c:	4650      	mov	r0, sl
 802682e:	f7ff ff2b 	bl	8026688 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026832:	f1ab 0b02 	sub.w	fp, fp, #2
 8026836:	f824 0c02 	strh.w	r0, [r4, #-2]
 802683a:	e7d5      	b.n	80267e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802683c:	46b0      	mov	r8, r6
 802683e:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8026842:	e7d1      	b.n	80267e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8026844:	d10f      	bne.n	8026866 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8026846:	f898 1000 	ldrb.w	r1, [r8]
 802684a:	9b04      	ldr	r3, [sp, #16]
 802684c:	f8b9 2000 	ldrh.w	r2, [r9]
 8026850:	9300      	str	r3, [sp, #0]
 8026852:	0909      	lsrs	r1, r1, #4
 8026854:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026858:	463b      	mov	r3, r7
 802685a:	4429      	add	r1, r5
 802685c:	4650      	mov	r0, sl
 802685e:	f7ff ff13 	bl	8026688 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026862:	f829 0b02 	strh.w	r0, [r9], #2
 8026866:	9b08      	ldr	r3, [sp, #32]
 8026868:	9a05      	ldr	r2, [sp, #20]
 802686a:	881c      	ldrh	r4, [r3, #0]
 802686c:	9b03      	ldr	r3, [sp, #12]
 802686e:	1ae4      	subs	r4, r4, r3
 8026870:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026874:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8026878:	4413      	add	r3, r2
 802687a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802687c:	fb93 f3f2 	sdiv	r3, r3, r2
 8026880:	441e      	add	r6, r3
 8026882:	e796      	b.n	80267b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8026884:	4f46      	ldr	r7, [pc, #280]	; (80269a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8026886:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802688a:	42a3      	cmp	r3, r4
 802688c:	d97c      	bls.n	8026988 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802688e:	9a06      	ldr	r2, [sp, #24]
 8026890:	2a00      	cmp	r2, #0
 8026892:	d054      	beq.n	802693e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8026894:	7830      	ldrb	r0, [r6, #0]
 8026896:	f000 000f 	and.w	r0, r0, #15
 802689a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802689e:	eb05 0e00 	add.w	lr, r5, r0
 80268a2:	5c28      	ldrb	r0, [r5, r0]
 80268a4:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80268a8:	f89e e001 	ldrb.w	lr, [lr, #1]
 80268ac:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80268b0:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80268b4:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80268b8:	ea42 020e 	orr.w	r2, r2, lr
 80268bc:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80268c0:	f824 2b02 	strh.w	r2, [r4], #2
 80268c4:	9a03      	ldr	r2, [sp, #12]
 80268c6:	1c71      	adds	r1, r6, #1
 80268c8:	f102 3eff 	add.w	lr, r2, #4294967295
 80268cc:	f1be 0f01 	cmp.w	lr, #1
 80268d0:	4620      	mov	r0, r4
 80268d2:	f104 0404 	add.w	r4, r4, #4
 80268d6:	dd36      	ble.n	8026946 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80268d8:	7808      	ldrb	r0, [r1, #0]
 80268da:	0900      	lsrs	r0, r0, #4
 80268dc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80268e0:	eb05 0a00 	add.w	sl, r5, r0
 80268e4:	f1ae 0e02 	sub.w	lr, lr, #2
 80268e8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80268ec:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80268f0:	00d2      	lsls	r2, r2, #3
 80268f2:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80268f6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80268fa:	ea49 0202 	orr.w	r2, r9, r2
 80268fe:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026902:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026906:	f824 2c04 	strh.w	r2, [r4, #-4]
 802690a:	f811 0b01 	ldrb.w	r0, [r1], #1
 802690e:	f000 000f 	and.w	r0, r0, #15
 8026912:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026916:	eb05 0a00 	add.w	sl, r5, r0
 802691a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802691e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026922:	00d2      	lsls	r2, r2, #3
 8026924:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026928:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802692c:	ea49 0202 	orr.w	r2, r9, r2
 8026930:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026934:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026938:	f824 2c02 	strh.w	r2, [r4, #-2]
 802693c:	e7c6      	b.n	80268cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802693e:	4631      	mov	r1, r6
 8026940:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8026944:	e7c2      	b.n	80268cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8026946:	d111      	bne.n	802696c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8026948:	7809      	ldrb	r1, [r1, #0]
 802694a:	0909      	lsrs	r1, r1, #4
 802694c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026950:	186c      	adds	r4, r5, r1
 8026952:	5c69      	ldrb	r1, [r5, r1]
 8026954:	78a2      	ldrb	r2, [r4, #2]
 8026956:	7864      	ldrb	r4, [r4, #1]
 8026958:	00e4      	lsls	r4, r4, #3
 802695a:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802695e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026962:	4322      	orrs	r2, r4
 8026964:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8026968:	f820 2b02 	strh.w	r2, [r0], #2
 802696c:	9a03      	ldr	r2, [sp, #12]
 802696e:	f8bc 4000 	ldrh.w	r4, [ip]
 8026972:	9905      	ldr	r1, [sp, #20]
 8026974:	1aa4      	subs	r4, r4, r2
 8026976:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 802697a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802697e:	440a      	add	r2, r1
 8026980:	fb92 f2f8 	sdiv	r2, r2, r8
 8026984:	4416      	add	r6, r2
 8026986:	e780      	b.n	802688a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8026988:	4b03      	ldr	r3, [pc, #12]	; (8026998 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802698a:	6818      	ldr	r0, [r3, #0]
 802698c:	6803      	ldr	r3, [r0, #0]
 802698e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026990:	4798      	blx	r3
 8026992:	b00f      	add	sp, #60	; 0x3c
 8026994:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026998:	20012db4 	.word	0x20012db4
 802699c:	20012dae 	.word	0x20012dae
 80269a0:	fffff800 	.word	0xfffff800

080269a4 <CRC_Lock>:
 80269a4:	b530      	push	{r4, r5, lr}
 80269a6:	4a20      	ldr	r2, [pc, #128]	; (8026a28 <CRC_Lock+0x84>)
 80269a8:	6813      	ldr	r3, [r2, #0]
 80269aa:	f023 0301 	bic.w	r3, r3, #1
 80269ae:	6013      	str	r3, [r2, #0]
 80269b0:	4b1e      	ldr	r3, [pc, #120]	; (8026a2c <CRC_Lock+0x88>)
 80269b2:	681a      	ldr	r2, [r3, #0]
 80269b4:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80269b8:	4022      	ands	r2, r4
 80269ba:	f24c 2540 	movw	r5, #49728	; 0xc240
 80269be:	42aa      	cmp	r2, r5
 80269c0:	d005      	beq.n	80269ce <CRC_Lock+0x2a>
 80269c2:	681b      	ldr	r3, [r3, #0]
 80269c4:	f24c 2270 	movw	r2, #49776	; 0xc270
 80269c8:	4023      	ands	r3, r4
 80269ca:	4293      	cmp	r3, r2
 80269cc:	d124      	bne.n	8026a18 <CRC_Lock+0x74>
 80269ce:	4b18      	ldr	r3, [pc, #96]	; (8026a30 <CRC_Lock+0x8c>)
 80269d0:	681b      	ldr	r3, [r3, #0]
 80269d2:	bb0b      	cbnz	r3, 8026a18 <CRC_Lock+0x74>
 80269d4:	4b17      	ldr	r3, [pc, #92]	; (8026a34 <CRC_Lock+0x90>)
 80269d6:	681a      	ldr	r2, [r3, #0]
 80269d8:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80269dc:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80269e0:	d00d      	beq.n	80269fe <CRC_Lock+0x5a>
 80269e2:	681a      	ldr	r2, [r3, #0]
 80269e4:	f240 4483 	movw	r4, #1155	; 0x483
 80269e8:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80269ec:	42a2      	cmp	r2, r4
 80269ee:	d006      	beq.n	80269fe <CRC_Lock+0x5a>
 80269f0:	681b      	ldr	r3, [r3, #0]
 80269f2:	f240 4285 	movw	r2, #1157	; 0x485
 80269f6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80269fa:	4293      	cmp	r3, r2
 80269fc:	d10c      	bne.n	8026a18 <CRC_Lock+0x74>
 80269fe:	4b0e      	ldr	r3, [pc, #56]	; (8026a38 <CRC_Lock+0x94>)
 8026a00:	2201      	movs	r2, #1
 8026a02:	601a      	str	r2, [r3, #0]
 8026a04:	681a      	ldr	r2, [r3, #0]
 8026a06:	2a00      	cmp	r2, #0
 8026a08:	d1fc      	bne.n	8026a04 <CRC_Lock+0x60>
 8026a0a:	4b0c      	ldr	r3, [pc, #48]	; (8026a3c <CRC_Lock+0x98>)
 8026a0c:	6018      	str	r0, [r3, #0]
 8026a0e:	6818      	ldr	r0, [r3, #0]
 8026a10:	1a43      	subs	r3, r0, r1
 8026a12:	4258      	negs	r0, r3
 8026a14:	4158      	adcs	r0, r3
 8026a16:	bd30      	pop	{r4, r5, pc}
 8026a18:	4b09      	ldr	r3, [pc, #36]	; (8026a40 <CRC_Lock+0x9c>)
 8026a1a:	2201      	movs	r2, #1
 8026a1c:	601a      	str	r2, [r3, #0]
 8026a1e:	681a      	ldr	r2, [r3, #0]
 8026a20:	2a00      	cmp	r2, #0
 8026a22:	d1fc      	bne.n	8026a1e <CRC_Lock+0x7a>
 8026a24:	4b07      	ldr	r3, [pc, #28]	; (8026a44 <CRC_Lock+0xa0>)
 8026a26:	e7f1      	b.n	8026a0c <CRC_Lock+0x68>
 8026a28:	e0002000 	.word	0xe0002000
 8026a2c:	e000ed00 	.word	0xe000ed00
 8026a30:	e0042000 	.word	0xe0042000
 8026a34:	5c001000 	.word	0x5c001000
 8026a38:	58024c08 	.word	0x58024c08
 8026a3c:	58024c00 	.word	0x58024c00
 8026a40:	40023008 	.word	0x40023008
 8026a44:	40023000 	.word	0x40023000

08026a48 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8026a48:	6101      	str	r1, [r0, #16]
 8026a4a:	4770      	bx	lr

08026a4c <_ZN8touchgfx8Gestures4tickEv>:
 8026a4c:	7b83      	ldrb	r3, [r0, #14]
 8026a4e:	b14b      	cbz	r3, 8026a64 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8026a50:	8903      	ldrh	r3, [r0, #8]
 8026a52:	3301      	adds	r3, #1
 8026a54:	b29b      	uxth	r3, r3
 8026a56:	2b07      	cmp	r3, #7
 8026a58:	8103      	strh	r3, [r0, #8]
 8026a5a:	bf81      	itttt	hi
 8026a5c:	2300      	movhi	r3, #0
 8026a5e:	8143      	strhhi	r3, [r0, #10]
 8026a60:	8183      	strhhi	r3, [r0, #12]
 8026a62:	7383      	strbhi	r3, [r0, #14]
 8026a64:	4770      	bx	lr
	...

08026a68 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8026a68:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8026a6c:	4698      	mov	r8, r3
 8026a6e:	8883      	ldrh	r3, [r0, #4]
 8026a70:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026a74:	eba8 0303 	sub.w	r3, r8, r3
 8026a78:	b21b      	sxth	r3, r3
 8026a7a:	4604      	mov	r4, r0
 8026a7c:	2b00      	cmp	r3, #0
 8026a7e:	4617      	mov	r7, r2
 8026a80:	4a18      	ldr	r2, [pc, #96]	; (8026ae4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8026a82:	9200      	str	r2, [sp, #0]
 8026a84:	bfb8      	it	lt
 8026a86:	425b      	neglt	r3, r3
 8026a88:	8aa2      	ldrh	r2, [r4, #20]
 8026a8a:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8026a8e:	f8ad 800a 	strh.w	r8, [sp, #10]
 8026a92:	b21b      	sxth	r3, r3
 8026a94:	460e      	mov	r6, r1
 8026a96:	4293      	cmp	r3, r2
 8026a98:	88c1      	ldrh	r1, [r0, #6]
 8026a9a:	f8ad 1008 	strh.w	r1, [sp, #8]
 8026a9e:	f04f 0000 	mov.w	r0, #0
 8026aa2:	f88d 0004 	strb.w	r0, [sp, #4]
 8026aa6:	f8ad 500c 	strh.w	r5, [sp, #12]
 8026aaa:	dc07      	bgt.n	8026abc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8026aac:	1a69      	subs	r1, r5, r1
 8026aae:	b209      	sxth	r1, r1
 8026ab0:	2900      	cmp	r1, #0
 8026ab2:	bfb8      	it	lt
 8026ab4:	4249      	neglt	r1, r1
 8026ab6:	b209      	sxth	r1, r1
 8026ab8:	428a      	cmp	r2, r1
 8026aba:	da10      	bge.n	8026ade <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8026abc:	6920      	ldr	r0, [r4, #16]
 8026abe:	6803      	ldr	r3, [r0, #0]
 8026ac0:	4669      	mov	r1, sp
 8026ac2:	685b      	ldr	r3, [r3, #4]
 8026ac4:	4798      	blx	r3
 8026ac6:	eba8 0606 	sub.w	r6, r8, r6
 8026aca:	2300      	movs	r3, #0
 8026acc:	1bef      	subs	r7, r5, r7
 8026ace:	2001      	movs	r0, #1
 8026ad0:	8123      	strh	r3, [r4, #8]
 8026ad2:	8166      	strh	r6, [r4, #10]
 8026ad4:	81a7      	strh	r7, [r4, #12]
 8026ad6:	f8a4 8004 	strh.w	r8, [r4, #4]
 8026ada:	80e5      	strh	r5, [r4, #6]
 8026adc:	73a0      	strb	r0, [r4, #14]
 8026ade:	b004      	add	sp, #16
 8026ae0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026ae4:	0802f318 	.word	0x0802f318

08026ae8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8026ae8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026aea:	461e      	mov	r6, r3
 8026aec:	1e4b      	subs	r3, r1, #1
 8026aee:	2b01      	cmp	r3, #1
 8026af0:	b085      	sub	sp, #20
 8026af2:	4604      	mov	r4, r0
 8026af4:	460d      	mov	r5, r1
 8026af6:	4617      	mov	r7, r2
 8026af8:	d84b      	bhi.n	8026b92 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8026afa:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8026afe:	1cd3      	adds	r3, r2, #3
 8026b00:	b29b      	uxth	r3, r3
 8026b02:	2b06      	cmp	r3, #6
 8026b04:	d916      	bls.n	8026b34 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8026b06:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8026ba8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026b0a:	f8cd c004 	str.w	ip, [sp, #4]
 8026b0e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026b12:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026b16:	6900      	ldr	r0, [r0, #16]
 8026b18:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026b1c:	f04f 0c00 	mov.w	ip, #0
 8026b20:	f88d c008 	strb.w	ip, [sp, #8]
 8026b24:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026b28:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026b2c:	6803      	ldr	r3, [r0, #0]
 8026b2e:	a901      	add	r1, sp, #4
 8026b30:	689b      	ldr	r3, [r3, #8]
 8026b32:	4798      	blx	r3
 8026b34:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026b38:	1cd3      	adds	r3, r2, #3
 8026b3a:	b29b      	uxth	r3, r3
 8026b3c:	2b06      	cmp	r3, #6
 8026b3e:	d916      	bls.n	8026b6e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026b40:	f8df c064 	ldr.w	ip, [pc, #100]	; 8026ba8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026b44:	f8cd c004 	str.w	ip, [sp, #4]
 8026b48:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026b4c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026b50:	6920      	ldr	r0, [r4, #16]
 8026b52:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026b56:	f04f 0c01 	mov.w	ip, #1
 8026b5a:	f88d c008 	strb.w	ip, [sp, #8]
 8026b5e:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026b62:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026b66:	6803      	ldr	r3, [r0, #0]
 8026b68:	a901      	add	r1, sp, #4
 8026b6a:	689b      	ldr	r3, [r3, #8]
 8026b6c:	4798      	blx	r3
 8026b6e:	4b0d      	ldr	r3, [pc, #52]	; (8026ba4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8026b70:	9301      	str	r3, [sp, #4]
 8026b72:	6920      	ldr	r0, [r4, #16]
 8026b74:	f88d 5008 	strb.w	r5, [sp, #8]
 8026b78:	2300      	movs	r3, #0
 8026b7a:	f8ad 700a 	strh.w	r7, [sp, #10]
 8026b7e:	f8ad 600c 	strh.w	r6, [sp, #12]
 8026b82:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026b86:	6803      	ldr	r3, [r0, #0]
 8026b88:	a901      	add	r1, sp, #4
 8026b8a:	681b      	ldr	r3, [r3, #0]
 8026b8c:	4798      	blx	r3
 8026b8e:	b005      	add	sp, #20
 8026b90:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026b92:	2900      	cmp	r1, #0
 8026b94:	d1eb      	bne.n	8026b6e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026b96:	80a2      	strh	r2, [r4, #4]
 8026b98:	80c6      	strh	r6, [r0, #6]
 8026b9a:	60a1      	str	r1, [r4, #8]
 8026b9c:	81a1      	strh	r1, [r4, #12]
 8026b9e:	73a1      	strb	r1, [r4, #14]
 8026ba0:	e7e5      	b.n	8026b6e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026ba2:	bf00      	nop
 8026ba4:	0802f304 	.word	0x0802f304
 8026ba8:	0802f32c 	.word	0x0802f32c

08026bac <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8026bac:	10c9      	asrs	r1, r1, #3
 8026bae:	2900      	cmp	r1, #0
 8026bb0:	bfb8      	it	lt
 8026bb2:	4249      	neglt	r1, r1
 8026bb4:	2801      	cmp	r0, #1
 8026bb6:	d108      	bne.n	8026bca <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026bb8:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8026bbc:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8026bc0:	4601      	mov	r1, r0
 8026bc2:	dd02      	ble.n	8026bca <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026bc4:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8026bc8:	4770      	bx	lr
 8026bca:	29ff      	cmp	r1, #255	; 0xff
 8026bcc:	bfa8      	it	ge
 8026bce:	21ff      	movge	r1, #255	; 0xff
 8026bd0:	4608      	mov	r0, r1
 8026bd2:	4770      	bx	lr

08026bd4 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8026bd4:	b410      	push	{r4}
 8026bd6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8026bda:	429c      	cmp	r4, r3
 8026bdc:	d803      	bhi.n	8026be6 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8026bde:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026be2:	f7ed b8ef 	b.w	8013dc4 <_ZN8touchgfx7Outline6lineToEii>
 8026be6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026bea:	4770      	bx	lr

08026bec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8026bec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026bf0:	b08b      	sub	sp, #44	; 0x2c
 8026bf2:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8026bf6:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8026bfa:	9308      	str	r3, [sp, #32]
 8026bfc:	4606      	mov	r6, r0
 8026bfe:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8026c02:	9309      	str	r3, [sp, #36]	; 0x24
 8026c04:	468a      	mov	sl, r1
 8026c06:	f7ed fa4a 	bl	801409e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8026c0a:	68b5      	ldr	r5, [r6, #8]
 8026c0c:	4604      	mov	r4, r0
 8026c0e:	2d00      	cmp	r5, #0
 8026c10:	d044      	beq.n	8026c9c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026c12:	6873      	ldr	r3, [r6, #4]
 8026c14:	42ab      	cmp	r3, r5
 8026c16:	d33d      	bcc.n	8026c94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8026c18:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8026c1c:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8026c20:	eb02 0b03 	add.w	fp, r2, r3
 8026c24:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8026c28:	fb02 1203 	mla	r2, r2, r3, r1
 8026c2c:	9205      	str	r2, [sp, #20]
 8026c2e:	1e6a      	subs	r2, r5, #1
 8026c30:	9204      	str	r2, [sp, #16]
 8026c32:	f04f 0800 	mov.w	r8, #0
 8026c36:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8026c3a:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026c3e:	454b      	cmp	r3, r9
 8026c40:	463a      	mov	r2, r7
 8026c42:	d008      	beq.n	8026c56 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8026c44:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8026c48:	eb03 0b09 	add.w	fp, r3, r9
 8026c4c:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8026c50:	fb03 1309 	mla	r3, r3, r9, r1
 8026c54:	9305      	str	r3, [sp, #20]
 8026c56:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8026c5a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8026c5e:	4498      	add	r8, r3
 8026c60:	9b04      	ldr	r3, [sp, #16]
 8026c62:	3b01      	subs	r3, #1
 8026c64:	9304      	str	r3, [sp, #16]
 8026c66:	9b04      	ldr	r3, [sp, #16]
 8026c68:	3301      	adds	r3, #1
 8026c6a:	d015      	beq.n	8026c98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8026c6c:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8026c70:	42bb      	cmp	r3, r7
 8026c72:	d117      	bne.n	8026ca4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8026c74:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8026c78:	9b04      	ldr	r3, [sp, #16]
 8026c7a:	4548      	cmp	r0, r9
 8026c7c:	f103 33ff 	add.w	r3, r3, #4294967295
 8026c80:	d17f      	bne.n	8026d82 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8026c82:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8026c86:	4401      	add	r1, r0
 8026c88:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8026c8c:	4480      	add	r8, r0
 8026c8e:	e7e9      	b.n	8026c64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8026c90:	461f      	mov	r7, r3
 8026c92:	e044      	b.n	8026d1e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8026c94:	2000      	movs	r0, #0
 8026c96:	e002      	b.n	8026c9e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8026c98:	2900      	cmp	r1, #0
 8026c9a:	d16f      	bne.n	8026d7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8026c9c:	2001      	movs	r0, #1
 8026c9e:	b00b      	add	sp, #44	; 0x2c
 8026ca0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026ca4:	2900      	cmp	r1, #0
 8026ca6:	d030      	beq.n	8026d0a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8026ca8:	2f00      	cmp	r7, #0
 8026caa:	db29      	blt.n	8026d00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026cac:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026cb0:	42bb      	cmp	r3, r7
 8026cb2:	dd25      	ble.n	8026d00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026cb4:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8026cb8:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026cbc:	f7ff ff76 	bl	8026bac <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026cc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026cc2:	fb10 f003 	smulbb	r0, r0, r3
 8026cc6:	b280      	uxth	r0, r0
 8026cc8:	1c41      	adds	r1, r0, #1
 8026cca:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026cce:	1209      	asrs	r1, r1, #8
 8026cd0:	f011 0fff 	tst.w	r1, #255	; 0xff
 8026cd4:	d014      	beq.n	8026d00 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026cd6:	9808      	ldr	r0, [sp, #32]
 8026cd8:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026cda:	b2c9      	uxtb	r1, r1
 8026cdc:	b2ba      	uxth	r2, r7
 8026cde:	9102      	str	r1, [sp, #8]
 8026ce0:	2101      	movs	r1, #1
 8026ce2:	4413      	add	r3, r2
 8026ce4:	9101      	str	r1, [sp, #4]
 8026ce6:	4402      	add	r2, r0
 8026ce8:	fa0f f18b 	sxth.w	r1, fp
 8026cec:	f8da 0000 	ldr.w	r0, [sl]
 8026cf0:	9100      	str	r1, [sp, #0]
 8026cf2:	6941      	ldr	r1, [r0, #20]
 8026cf4:	b21b      	sxth	r3, r3
 8026cf6:	460d      	mov	r5, r1
 8026cf8:	b212      	sxth	r2, r2
 8026cfa:	9905      	ldr	r1, [sp, #20]
 8026cfc:	4650      	mov	r0, sl
 8026cfe:	47a8      	blx	r5
 8026d00:	9b04      	ldr	r3, [sp, #16]
 8026d02:	3301      	adds	r3, #1
 8026d04:	f107 0201 	add.w	r2, r7, #1
 8026d08:	d0c8      	beq.n	8026c9c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026d0a:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026d0e:	1abb      	subs	r3, r7, r2
 8026d10:	2b00      	cmp	r3, #0
 8026d12:	dd31      	ble.n	8026d78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026d14:	2a00      	cmp	r2, #0
 8026d16:	dabb      	bge.n	8026c90 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8026d18:	2f00      	cmp	r7, #0
 8026d1a:	dd2d      	ble.n	8026d78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026d1c:	2200      	movs	r2, #0
 8026d1e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026d22:	19d1      	adds	r1, r2, r7
 8026d24:	4299      	cmp	r1, r3
 8026d26:	db02      	blt.n	8026d2e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8026d28:	1a9f      	subs	r7, r3, r2
 8026d2a:	2f00      	cmp	r7, #0
 8026d2c:	dd24      	ble.n	8026d78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026d2e:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8026d32:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026d36:	f7ff ff39 	bl	8026bac <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026d3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026d3c:	fb10 f003 	smulbb	r0, r0, r3
 8026d40:	b280      	uxth	r0, r0
 8026d42:	1c41      	adds	r1, r0, #1
 8026d44:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026d48:	1209      	asrs	r1, r1, #8
 8026d4a:	f011 0fff 	tst.w	r1, #255	; 0xff
 8026d4e:	d013      	beq.n	8026d78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026d50:	9808      	ldr	r0, [sp, #32]
 8026d52:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026d54:	b292      	uxth	r2, r2
 8026d56:	b2c9      	uxtb	r1, r1
 8026d58:	4413      	add	r3, r2
 8026d5a:	9102      	str	r1, [sp, #8]
 8026d5c:	4402      	add	r2, r0
 8026d5e:	b23f      	sxth	r7, r7
 8026d60:	f8da 0000 	ldr.w	r0, [sl]
 8026d64:	9701      	str	r7, [sp, #4]
 8026d66:	fa0f f18b 	sxth.w	r1, fp
 8026d6a:	9100      	str	r1, [sp, #0]
 8026d6c:	6947      	ldr	r7, [r0, #20]
 8026d6e:	9905      	ldr	r1, [sp, #20]
 8026d70:	b21b      	sxth	r3, r3
 8026d72:	b212      	sxth	r2, r2
 8026d74:	4650      	mov	r0, sl
 8026d76:	47b8      	blx	r7
 8026d78:	464b      	mov	r3, r9
 8026d7a:	e75c      	b.n	8026c36 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8026d7c:	2f00      	cmp	r7, #0
 8026d7e:	da95      	bge.n	8026cac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8026d80:	e78c      	b.n	8026c9c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026d82:	2900      	cmp	r1, #0
 8026d84:	d0f8      	beq.n	8026d78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026d86:	e78f      	b.n	8026ca8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08026d88 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8026d88:	4b4b      	ldr	r3, [pc, #300]	; (8026eb8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8026d8a:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8026d8e:	2500      	movs	r5, #0
 8026d90:	f100 0620 	add.w	r6, r0, #32
 8026d94:	4604      	mov	r4, r0
 8026d96:	e9c0 3100 	strd	r3, r1, [r0]
 8026d9a:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8026d9e:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8026da2:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8026da6:	f100 0718 	add.w	r7, r0, #24
 8026daa:	4630      	mov	r0, r6
 8026dac:	4690      	mov	r8, r2
 8026dae:	f7ec fb41 	bl	8013434 <_ZN8touchgfx7OutlineC1Ev>
 8026db2:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8026db6:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8026dba:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8026dbe:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8026dc2:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8026dc6:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8026dca:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8026dce:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8026dd2:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8026dd6:	f9b8 2000 	ldrsh.w	r2, [r8]
 8026dda:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8026dde:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8026de2:	9500      	str	r5, [sp, #0]
 8026de4:	4410      	add	r0, r2
 8026de6:	b280      	uxth	r0, r0
 8026de8:	fa0f fa80 	sxth.w	sl, r0
 8026dec:	45aa      	cmp	sl, r5
 8026dee:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8026df2:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8026df6:	dd5c      	ble.n	8026eb2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026df8:	4591      	cmp	r9, r2
 8026dfa:	dd5a      	ble.n	8026eb2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026dfc:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8026e00:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8026e04:	440b      	add	r3, r1
 8026e06:	b29b      	uxth	r3, r3
 8026e08:	b21d      	sxth	r5, r3
 8026e0a:	2d00      	cmp	r5, #0
 8026e0c:	dd51      	ble.n	8026eb2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026e0e:	458e      	cmp	lr, r1
 8026e10:	dd4f      	ble.n	8026eb2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026e12:	45d1      	cmp	r9, sl
 8026e14:	bfb8      	it	lt
 8026e16:	fa1f f089 	uxthlt.w	r0, r9
 8026e1a:	45ae      	cmp	lr, r5
 8026e1c:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8026e20:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8026e24:	bfb8      	it	lt
 8026e26:	fa1f f38e 	uxthlt.w	r3, lr
 8026e2a:	1a80      	subs	r0, r0, r2
 8026e2c:	1a5b      	subs	r3, r3, r1
 8026e2e:	f8ad 0004 	strh.w	r0, [sp, #4]
 8026e32:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026e36:	f8ad 2000 	strh.w	r2, [sp]
 8026e3a:	f8ad 1002 	strh.w	r1, [sp, #2]
 8026e3e:	466d      	mov	r5, sp
 8026e40:	e895 0003 	ldmia.w	r5, {r0, r1}
 8026e44:	e887 0003 	stmia.w	r7, {r0, r1}
 8026e48:	f8dc 3000 	ldr.w	r3, [ip]
 8026e4c:	4660      	mov	r0, ip
 8026e4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026e50:	4639      	mov	r1, r7
 8026e52:	4798      	blx	r3
 8026e54:	6861      	ldr	r1, [r4, #4]
 8026e56:	4628      	mov	r0, r5
 8026e58:	3104      	adds	r1, #4
 8026e5a:	f7ee fcf1 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026e5e:	4638      	mov	r0, r7
 8026e60:	f7ee fcaa 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026e64:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8026e68:	f8bd 2000 	ldrh.w	r2, [sp]
 8026e6c:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8026e70:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8026e74:	4630      	mov	r0, r6
 8026e76:	f7ec fac1 	bl	80133fc <_ZN8touchgfx7Outline5resetEv>
 8026e7a:	f9bd 3000 	ldrsh.w	r3, [sp]
 8026e7e:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8026e82:	015b      	lsls	r3, r3, #5
 8026e84:	60a3      	str	r3, [r4, #8]
 8026e86:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8026e8a:	015b      	lsls	r3, r3, #5
 8026e8c:	60e3      	str	r3, [r4, #12]
 8026e8e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8026e92:	015b      	lsls	r3, r3, #5
 8026e94:	6123      	str	r3, [r4, #16]
 8026e96:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8026e9a:	015b      	lsls	r3, r3, #5
 8026e9c:	6163      	str	r3, [r4, #20]
 8026e9e:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8026ea2:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8026ea6:	4620      	mov	r0, r4
 8026ea8:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8026eac:	b002      	add	sp, #8
 8026eae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026eb2:	2300      	movs	r3, #0
 8026eb4:	9301      	str	r3, [sp, #4]
 8026eb6:	e7c2      	b.n	8026e3e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8026eb8:	0802f650 	.word	0x0802f650

08026ebc <_ZN8touchgfx6Canvas5closeEv>:
 8026ebc:	b538      	push	{r3, r4, r5, lr}
 8026ebe:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8026ec2:	4604      	mov	r4, r0
 8026ec4:	b193      	cbz	r3, 8026eec <_ZN8touchgfx6Canvas5closeEv+0x30>
 8026ec6:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8026eca:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8026ece:	4213      	tst	r3, r2
 8026ed0:	d10c      	bne.n	8026eec <_ZN8touchgfx6Canvas5closeEv+0x30>
 8026ed2:	f100 0520 	add.w	r5, r0, #32
 8026ed6:	b123      	cbz	r3, 8026ee2 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8026ed8:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8026edc:	4628      	mov	r0, r5
 8026ede:	f7ff fe79 	bl	8026bd4 <_ZN8touchgfx10Rasterizer6lineToEii>
 8026ee2:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8026ee6:	4628      	mov	r0, r5
 8026ee8:	f7ff fe74 	bl	8026bd4 <_ZN8touchgfx10Rasterizer6lineToEii>
 8026eec:	2300      	movs	r3, #0
 8026eee:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8026ef2:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8026ef6:	4298      	cmp	r0, r3
 8026ef8:	bf34      	ite	cc
 8026efa:	2000      	movcc	r0, #0
 8026efc:	2001      	movcs	r0, #1
 8026efe:	bd38      	pop	{r3, r4, r5, pc}

08026f00 <_ZN8touchgfx6Canvas6renderEh>:
 8026f00:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8026f04:	4604      	mov	r4, r0
 8026f06:	6840      	ldr	r0, [r0, #4]
 8026f08:	6803      	ldr	r3, [r0, #0]
 8026f0a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8026f0c:	460d      	mov	r5, r1
 8026f0e:	4798      	blx	r3
 8026f10:	fb10 f105 	smulbb	r1, r0, r5
 8026f14:	b289      	uxth	r1, r1
 8026f16:	1c4d      	adds	r5, r1, #1
 8026f18:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8026f1c:	122d      	asrs	r5, r5, #8
 8026f1e:	f000 809d 	beq.w	802705c <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8026f22:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8026f26:	2b00      	cmp	r3, #0
 8026f28:	f000 8098 	beq.w	802705c <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8026f2c:	4620      	mov	r0, r4
 8026f2e:	f7ff ffc5 	bl	8026ebc <_ZN8touchgfx6Canvas5closeEv>
 8026f32:	4607      	mov	r7, r0
 8026f34:	2800      	cmp	r0, #0
 8026f36:	d048      	beq.n	8026fca <_ZN8touchgfx6Canvas6renderEh+0xca>
 8026f38:	6863      	ldr	r3, [r4, #4]
 8026f3a:	4e49      	ldr	r6, [pc, #292]	; (8027060 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8026f3c:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8026f3e:	6837      	ldr	r7, [r6, #0]
 8026f40:	6803      	ldr	r3, [r0, #0]
 8026f42:	689b      	ldr	r3, [r3, #8]
 8026f44:	4798      	blx	r3
 8026f46:	4601      	mov	r1, r0
 8026f48:	4638      	mov	r0, r7
 8026f4a:	f7ea fbc5 	bl	80116d8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8026f4e:	4607      	mov	r7, r0
 8026f50:	f7dd fb88 	bl	8004664 <_ZN8touchgfx3HAL3lcdEv>
 8026f54:	6803      	ldr	r3, [r0, #0]
 8026f56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8026f58:	4798      	blx	r3
 8026f5a:	4680      	mov	r8, r0
 8026f5c:	f7dd fb82 	bl	8004664 <_ZN8touchgfx3HAL3lcdEv>
 8026f60:	6803      	ldr	r3, [r0, #0]
 8026f62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026f64:	4798      	blx	r3
 8026f66:	280b      	cmp	r0, #11
 8026f68:	d85d      	bhi.n	8027026 <_ZN8touchgfx6Canvas6renderEh+0x126>
 8026f6a:	e8df f000 	tbb	[pc, r0]
 8026f6e:	5e53      	.short	0x5e53
 8026f70:	325c066e 	.word	0x325c066e
 8026f74:	67676742 	.word	0x67676742
 8026f78:	6767      	.short	0x6767
 8026f7a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026f7e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8026f82:	2208      	movs	r2, #8
 8026f84:	fb91 f2f2 	sdiv	r2, r1, r2
 8026f88:	fb08 2303 	mla	r3, r8, r3, r2
 8026f8c:	441f      	add	r7, r3
 8026f8e:	424b      	negs	r3, r1
 8026f90:	f003 0307 	and.w	r3, r3, #7
 8026f94:	f001 0107 	and.w	r1, r1, #7
 8026f98:	bf58      	it	pl
 8026f9a:	4259      	negpl	r1, r3
 8026f9c:	b2c9      	uxtb	r1, r1
 8026f9e:	b2ed      	uxtb	r5, r5
 8026fa0:	e9cd 1500 	strd	r1, r5, [sp]
 8026fa4:	6860      	ldr	r0, [r4, #4]
 8026fa6:	463a      	mov	r2, r7
 8026fa8:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8026faa:	fa0f f388 	sxth.w	r3, r8
 8026fae:	f104 0020 	add.w	r0, r4, #32
 8026fb2:	f7ff fe1b 	bl	8026bec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8026fb6:	6863      	ldr	r3, [r4, #4]
 8026fb8:	4607      	mov	r7, r0
 8026fba:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8026fbc:	6803      	ldr	r3, [r0, #0]
 8026fbe:	691b      	ldr	r3, [r3, #16]
 8026fc0:	4798      	blx	r3
 8026fc2:	6830      	ldr	r0, [r6, #0]
 8026fc4:	6803      	ldr	r3, [r0, #0]
 8026fc6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026fc8:	4798      	blx	r3
 8026fca:	4638      	mov	r0, r7
 8026fcc:	b002      	add	sp, #8
 8026fce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026fd2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026fd6:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8026fda:	2204      	movs	r2, #4
 8026fdc:	fb91 f2f2 	sdiv	r2, r1, r2
 8026fe0:	fb08 2303 	mla	r3, r8, r3, r2
 8026fe4:	441f      	add	r7, r3
 8026fe6:	424b      	negs	r3, r1
 8026fe8:	f003 0303 	and.w	r3, r3, #3
 8026fec:	f001 0103 	and.w	r1, r1, #3
 8026ff0:	e7d2      	b.n	8026f98 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8026ff2:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8026ff6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026ffa:	2900      	cmp	r1, #0
 8026ffc:	f04f 0202 	mov.w	r2, #2
 8027000:	fb91 f2f2 	sdiv	r2, r1, r2
 8027004:	f001 0101 	and.w	r1, r1, #1
 8027008:	fb08 2303 	mla	r3, r8, r3, r2
 802700c:	441f      	add	r7, r3
 802700e:	bfb8      	it	lt
 8027010:	4249      	neglt	r1, r1
 8027012:	e7c3      	b.n	8026f9c <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8027014:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027018:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802701c:	fb08 f303 	mul.w	r3, r8, r3
 8027020:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8027024:	441f      	add	r7, r3
 8027026:	2100      	movs	r1, #0
 8027028:	e7b9      	b.n	8026f9e <_ZN8touchgfx6Canvas6renderEh+0x9e>
 802702a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802702e:	fb08 f203 	mul.w	r2, r8, r3
 8027032:	8b23      	ldrh	r3, [r4, #24]
 8027034:	2103      	movs	r1, #3
 8027036:	fb13 2301 	smlabb	r3, r3, r1, r2
 802703a:	e7f3      	b.n	8027024 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802703c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027040:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027044:	fb08 2303 	mla	r3, r8, r3, r2
 8027048:	e7ec      	b.n	8027024 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802704a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802704e:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027052:	fb08 f303 	mul.w	r3, r8, r3
 8027056:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802705a:	e7e3      	b.n	8027024 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802705c:	2701      	movs	r7, #1
 802705e:	e7b4      	b.n	8026fca <_ZN8touchgfx6Canvas6renderEh+0xca>
 8027060:	20012db4 	.word	0x20012db4

08027064 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8027064:	b510      	push	{r4, lr}
 8027066:	4b07      	ldr	r3, [pc, #28]	; (8027084 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8027068:	781b      	ldrb	r3, [r3, #0]
 802706a:	2b01      	cmp	r3, #1
 802706c:	d108      	bne.n	8027080 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 802706e:	6843      	ldr	r3, [r0, #4]
 8027070:	6814      	ldr	r4, [r2, #0]
 8027072:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8027076:	680b      	ldr	r3, [r1, #0]
 8027078:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802707c:	6013      	str	r3, [r2, #0]
 802707e:	600c      	str	r4, [r1, #0]
 8027080:	bd10      	pop	{r4, pc}
 8027082:	bf00      	nop
 8027084:	20012dac 	.word	0x20012dac

08027088 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8027088:	b513      	push	{r0, r1, r4, lr}
 802708a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802708e:	4604      	mov	r4, r0
 8027090:	e9cd 2100 	strd	r2, r1, [sp]
 8027094:	b9a3      	cbnz	r3, 80270c0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8027096:	466a      	mov	r2, sp
 8027098:	a901      	add	r1, sp, #4
 802709a:	4620      	mov	r0, r4
 802709c:	f7ff ffe2 	bl	8027064 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80270a0:	68a3      	ldr	r3, [r4, #8]
 80270a2:	9901      	ldr	r1, [sp, #4]
 80270a4:	9a00      	ldr	r2, [sp, #0]
 80270a6:	1ac9      	subs	r1, r1, r3
 80270a8:	68e3      	ldr	r3, [r4, #12]
 80270aa:	9101      	str	r1, [sp, #4]
 80270ac:	1ad2      	subs	r2, r2, r3
 80270ae:	2a00      	cmp	r2, #0
 80270b0:	9200      	str	r2, [sp, #0]
 80270b2:	da0b      	bge.n	80270cc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 80270b4:	2301      	movs	r3, #1
 80270b6:	2900      	cmp	r1, #0
 80270b8:	da0e      	bge.n	80270d8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 80270ba:	f043 0304 	orr.w	r3, r3, #4
 80270be:	e013      	b.n	80270e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 80270c0:	f7ff fefc 	bl	8026ebc <_ZN8touchgfx6Canvas5closeEv>
 80270c4:	2800      	cmp	r0, #0
 80270c6:	d1e6      	bne.n	8027096 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 80270c8:	b002      	add	sp, #8
 80270ca:	bd10      	pop	{r4, pc}
 80270cc:	6963      	ldr	r3, [r4, #20]
 80270ce:	429a      	cmp	r2, r3
 80270d0:	bfac      	ite	ge
 80270d2:	2302      	movge	r3, #2
 80270d4:	2300      	movlt	r3, #0
 80270d6:	e7ee      	b.n	80270b6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 80270d8:	6920      	ldr	r0, [r4, #16]
 80270da:	4281      	cmp	r1, r0
 80270dc:	bfac      	ite	ge
 80270de:	2008      	movge	r0, #8
 80270e0:	2000      	movlt	r0, #0
 80270e2:	4318      	orrs	r0, r3
 80270e4:	b2c3      	uxtb	r3, r0
 80270e6:	b158      	cbz	r0, 8027100 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 80270e8:	2200      	movs	r2, #0
 80270ea:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 80270ee:	9901      	ldr	r1, [sp, #4]
 80270f0:	9a00      	ldr	r2, [sp, #0]
 80270f2:	66a1      	str	r1, [r4, #104]	; 0x68
 80270f4:	66e2      	str	r2, [r4, #108]	; 0x6c
 80270f6:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 80270fa:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80270fe:	e7e3      	b.n	80270c8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8027100:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027104:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8027108:	4298      	cmp	r0, r3
 802710a:	d803      	bhi.n	8027114 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802710c:	f104 0020 	add.w	r0, r4, #32
 8027110:	f7ec fe72 	bl	8013df8 <_ZN8touchgfx7Outline6moveToEii>
 8027114:	2301      	movs	r3, #1
 8027116:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802711a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802711e:	2300      	movs	r3, #0
 8027120:	e7e5      	b.n	80270ee <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08027122 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8027122:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8027124:	ab02      	add	r3, sp, #8
 8027126:	4604      	mov	r4, r0
 8027128:	f843 2d08 	str.w	r2, [r3, #-8]!
 802712c:	9101      	str	r1, [sp, #4]
 802712e:	461a      	mov	r2, r3
 8027130:	a901      	add	r1, sp, #4
 8027132:	f7ff ff97 	bl	8027064 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027136:	68a3      	ldr	r3, [r4, #8]
 8027138:	9901      	ldr	r1, [sp, #4]
 802713a:	9a00      	ldr	r2, [sp, #0]
 802713c:	1ac9      	subs	r1, r1, r3
 802713e:	68e3      	ldr	r3, [r4, #12]
 8027140:	9101      	str	r1, [sp, #4]
 8027142:	1ad2      	subs	r2, r2, r3
 8027144:	2a00      	cmp	r2, #0
 8027146:	9200      	str	r2, [sp, #0]
 8027148:	db1c      	blt.n	8027184 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802714a:	6963      	ldr	r3, [r4, #20]
 802714c:	429a      	cmp	r2, r3
 802714e:	bfac      	ite	ge
 8027150:	2002      	movge	r0, #2
 8027152:	2000      	movlt	r0, #0
 8027154:	2900      	cmp	r1, #0
 8027156:	db17      	blt.n	8027188 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8027158:	6923      	ldr	r3, [r4, #16]
 802715a:	4299      	cmp	r1, r3
 802715c:	bfac      	ite	ge
 802715e:	2308      	movge	r3, #8
 8027160:	2300      	movlt	r3, #0
 8027162:	4303      	orrs	r3, r0
 8027164:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8027168:	b2dd      	uxtb	r5, r3
 802716a:	b978      	cbnz	r0, 802718c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802716c:	f104 0020 	add.w	r0, r4, #32
 8027170:	f7ff fd30 	bl	8026bd4 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027174:	9b01      	ldr	r3, [sp, #4]
 8027176:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027178:	9b00      	ldr	r3, [sp, #0]
 802717a:	6623      	str	r3, [r4, #96]	; 0x60
 802717c:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8027180:	b002      	add	sp, #8
 8027182:	bd70      	pop	{r4, r5, r6, pc}
 8027184:	2001      	movs	r0, #1
 8027186:	e7e5      	b.n	8027154 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8027188:	2304      	movs	r3, #4
 802718a:	e7ea      	b.n	8027162 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802718c:	b113      	cbz	r3, 8027194 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802718e:	ea10 0305 	ands.w	r3, r0, r5
 8027192:	d11c      	bne.n	80271ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8027194:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8027198:	f104 0620 	add.w	r6, r4, #32
 802719c:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 80271a0:	b98b      	cbnz	r3, 80271c6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 80271a2:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80271a6:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80271aa:	4298      	cmp	r0, r3
 80271ac:	d802      	bhi.n	80271b4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 80271ae:	4630      	mov	r0, r6
 80271b0:	f7ec fe22 	bl	8013df8 <_ZN8touchgfx7Outline6moveToEii>
 80271b4:	2301      	movs	r3, #1
 80271b6:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80271ba:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80271be:	e9dd 2100 	ldrd	r2, r1, [sp]
 80271c2:	4630      	mov	r0, r6
 80271c4:	e7d4      	b.n	8027170 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 80271c6:	4630      	mov	r0, r6
 80271c8:	f7ff fd04 	bl	8026bd4 <_ZN8touchgfx10Rasterizer6lineToEii>
 80271cc:	e7f7      	b.n	80271be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 80271ce:	461d      	mov	r5, r3
 80271d0:	e7d0      	b.n	8027174 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

080271d4 <_ZN8touchgfx6CanvasD1Ev>:
 80271d4:	b510      	push	{r4, lr}
 80271d6:	4b04      	ldr	r3, [pc, #16]	; (80271e8 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 80271d8:	4604      	mov	r4, r0
 80271da:	f840 3b20 	str.w	r3, [r0], #32
 80271de:	f7ec f905 	bl	80133ec <_ZN8touchgfx7OutlineD1Ev>
 80271e2:	4620      	mov	r0, r4
 80271e4:	bd10      	pop	{r4, pc}
 80271e6:	bf00      	nop
 80271e8:	0802f650 	.word	0x0802f650

080271ec <_ZN8touchgfx6CanvasD0Ev>:
 80271ec:	b510      	push	{r4, lr}
 80271ee:	4604      	mov	r4, r0
 80271f0:	f7ff fff0 	bl	80271d4 <_ZN8touchgfx6CanvasD1Ev>
 80271f4:	4620      	mov	r0, r4
 80271f6:	2170      	movs	r1, #112	; 0x70
 80271f8:	f002 fd09 	bl	8029c0e <_ZdlPvj>
 80271fc:	4620      	mov	r0, r4
 80271fe:	bd10      	pop	{r4, pc}

08027200 <_ZN8touchgfx6CircleD1Ev>:
 8027200:	4770      	bx	lr

08027202 <_ZN8touchgfx6CircleD0Ev>:
 8027202:	b510      	push	{r4, lr}
 8027204:	2148      	movs	r1, #72	; 0x48
 8027206:	4604      	mov	r4, r0
 8027208:	f002 fd01 	bl	8029c0e <_ZdlPvj>
 802720c:	4620      	mov	r0, r4
 802720e:	bd10      	pop	{r4, pc}

08027210 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8027210:	b508      	push	{r3, lr}
 8027212:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8027216:	f7ea fdb5 	bl	8011d84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802721a:	bd08      	pop	{r3, pc}

0802721c <_ZN8touchgfx6CircleC1Ev>:
 802721c:	b510      	push	{r4, lr}
 802721e:	4604      	mov	r4, r0
 8027220:	f7ea fc4c 	bl	8011abc <_ZN8touchgfx12CanvasWidgetC1Ev>
 8027224:	4b08      	ldr	r3, [pc, #32]	; (8027248 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8027226:	6023      	str	r3, [r4, #0]
 8027228:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 802722c:	2300      	movs	r3, #0
 802722e:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8027232:	f24b 4205 	movw	r2, #46085	; 0xb405
 8027236:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 802723a:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802723e:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8027242:	60a3      	str	r3, [r4, #8]
 8027244:	4620      	mov	r0, r4
 8027246:	bd10      	pop	{r4, pc}
 8027248:	0802f664 	.word	0x0802f664

0802724c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 802724c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027250:	428a      	cmp	r2, r1
 8027252:	4680      	mov	r8, r0
 8027254:	4610      	mov	r0, r2
 8027256:	4699      	mov	r9, r3
 8027258:	bfa6      	itte	ge
 802725a:	460a      	movge	r2, r1
 802725c:	4603      	movge	r3, r0
 802725e:	460b      	movlt	r3, r1
 8027260:	1a99      	subs	r1, r3, r2
 8027262:	b085      	sub	sp, #20
 8027264:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8027268:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 802726c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802726e:	bfa4      	itt	ge
 8027270:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8027274:	2200      	movge	r2, #0
 8027276:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 802727a:	9300      	str	r3, [sp, #0]
 802727c:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8027280:	f102 0b01 	add.w	fp, r2, #1
 8027284:	2c00      	cmp	r4, #0
 8027286:	f040 80af 	bne.w	80273e8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 802728a:	4610      	mov	r0, r2
 802728c:	9201      	str	r2, [sp, #4]
 802728e:	f7ea fd79 	bl	8011d84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027292:	a903      	add	r1, sp, #12
 8027294:	9003      	str	r0, [sp, #12]
 8027296:	4650      	mov	r0, sl
 8027298:	f7ea fc3c 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802729c:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 80272a0:	9a01      	ldr	r2, [sp, #4]
 80272a2:	4408      	add	r0, r1
 80272a4:	f8d9 1000 	ldr.w	r1, [r9]
 80272a8:	4281      	cmp	r1, r0
 80272aa:	bfc8      	it	gt
 80272ac:	f8c9 0000 	strgt.w	r0, [r9]
 80272b0:	6839      	ldr	r1, [r7, #0]
 80272b2:	4288      	cmp	r0, r1
 80272b4:	bfc8      	it	gt
 80272b6:	6038      	strgt	r0, [r7, #0]
 80272b8:	4610      	mov	r0, r2
 80272ba:	f7ff ffa9 	bl	8027210 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80272be:	a903      	add	r1, sp, #12
 80272c0:	9003      	str	r0, [sp, #12]
 80272c2:	4650      	mov	r0, sl
 80272c4:	f7ea fc26 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80272c8:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80272cc:	1a10      	subs	r0, r2, r0
 80272ce:	6832      	ldr	r2, [r6, #0]
 80272d0:	4282      	cmp	r2, r0
 80272d2:	bfc8      	it	gt
 80272d4:	6030      	strgt	r0, [r6, #0]
 80272d6:	682a      	ldr	r2, [r5, #0]
 80272d8:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80272dc:	4290      	cmp	r0, r2
 80272de:	fb9b f2f1 	sdiv	r2, fp, r1
 80272e2:	fb01 b212 	mls	r2, r1, r2, fp
 80272e6:	eba1 0202 	sub.w	r2, r1, r2
 80272ea:	bfc8      	it	gt
 80272ec:	6028      	strgt	r0, [r5, #0]
 80272ee:	fb92 f0f1 	sdiv	r0, r2, r1
 80272f2:	fb01 2210 	mls	r2, r1, r0, r2
 80272f6:	4493      	add	fp, r2
 80272f8:	9b00      	ldr	r3, [sp, #0]
 80272fa:	455b      	cmp	r3, fp
 80272fc:	db2a      	blt.n	8027354 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 80272fe:	4658      	mov	r0, fp
 8027300:	f7ea fd40 	bl	8011d84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027304:	a903      	add	r1, sp, #12
 8027306:	9003      	str	r0, [sp, #12]
 8027308:	4650      	mov	r0, sl
 802730a:	f7ea fc03 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802730e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027312:	4410      	add	r0, r2
 8027314:	f8d9 2000 	ldr.w	r2, [r9]
 8027318:	4282      	cmp	r2, r0
 802731a:	bfc8      	it	gt
 802731c:	f8c9 0000 	strgt.w	r0, [r9]
 8027320:	683a      	ldr	r2, [r7, #0]
 8027322:	4290      	cmp	r0, r2
 8027324:	bfc8      	it	gt
 8027326:	6038      	strgt	r0, [r7, #0]
 8027328:	4658      	mov	r0, fp
 802732a:	f7ff ff71 	bl	8027210 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802732e:	a903      	add	r1, sp, #12
 8027330:	9003      	str	r0, [sp, #12]
 8027332:	4650      	mov	r0, sl
 8027334:	f7ea fbee 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027338:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802733c:	1a10      	subs	r0, r2, r0
 802733e:	6832      	ldr	r2, [r6, #0]
 8027340:	4282      	cmp	r2, r0
 8027342:	bfc8      	it	gt
 8027344:	6030      	strgt	r0, [r6, #0]
 8027346:	682a      	ldr	r2, [r5, #0]
 8027348:	4290      	cmp	r0, r2
 802734a:	bfc8      	it	gt
 802734c:	6028      	strgt	r0, [r5, #0]
 802734e:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8027352:	e7d1      	b.n	80272f8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8027354:	9b00      	ldr	r3, [sp, #0]
 8027356:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802735a:	455b      	cmp	r3, fp
 802735c:	dd27      	ble.n	80273ae <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 802735e:	4618      	mov	r0, r3
 8027360:	f7ea fd10 	bl	8011d84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027364:	a903      	add	r1, sp, #12
 8027366:	9003      	str	r0, [sp, #12]
 8027368:	4650      	mov	r0, sl
 802736a:	f7ea fbd3 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802736e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027372:	4410      	add	r0, r2
 8027374:	f8d9 2000 	ldr.w	r2, [r9]
 8027378:	4282      	cmp	r2, r0
 802737a:	bfc8      	it	gt
 802737c:	f8c9 0000 	strgt.w	r0, [r9]
 8027380:	683a      	ldr	r2, [r7, #0]
 8027382:	4290      	cmp	r0, r2
 8027384:	bfc8      	it	gt
 8027386:	6038      	strgt	r0, [r7, #0]
 8027388:	9800      	ldr	r0, [sp, #0]
 802738a:	f7ff ff41 	bl	8027210 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802738e:	a903      	add	r1, sp, #12
 8027390:	9003      	str	r0, [sp, #12]
 8027392:	4650      	mov	r0, sl
 8027394:	f7ea fbbe 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027398:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802739c:	1a10      	subs	r0, r2, r0
 802739e:	6832      	ldr	r2, [r6, #0]
 80273a0:	4282      	cmp	r2, r0
 80273a2:	bfc8      	it	gt
 80273a4:	6030      	strgt	r0, [r6, #0]
 80273a6:	682a      	ldr	r2, [r5, #0]
 80273a8:	4290      	cmp	r0, r2
 80273aa:	bfc8      	it	gt
 80273ac:	6028      	strgt	r0, [r5, #0]
 80273ae:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80273b2:	f8d9 1000 	ldr.w	r1, [r9]
 80273b6:	4291      	cmp	r1, r2
 80273b8:	bfc8      	it	gt
 80273ba:	f8c9 2000 	strgt.w	r2, [r9]
 80273be:	683a      	ldr	r2, [r7, #0]
 80273c0:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 80273c4:	429a      	cmp	r2, r3
 80273c6:	bfb8      	it	lt
 80273c8:	603b      	strlt	r3, [r7, #0]
 80273ca:	6832      	ldr	r2, [r6, #0]
 80273cc:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80273d0:	429a      	cmp	r2, r3
 80273d2:	bfc8      	it	gt
 80273d4:	6033      	strgt	r3, [r6, #0]
 80273d6:	682a      	ldr	r2, [r5, #0]
 80273d8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80273dc:	429a      	cmp	r2, r3
 80273de:	da00      	bge.n	80273e2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 80273e0:	602b      	str	r3, [r5, #0]
 80273e2:	b005      	add	sp, #20
 80273e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80273e8:	2002      	movs	r0, #2
 80273ea:	3401      	adds	r4, #1
 80273ec:	fb94 f4f0 	sdiv	r4, r4, r0
 80273f0:	4610      	mov	r0, r2
 80273f2:	9201      	str	r2, [sp, #4]
 80273f4:	f7ea fcc6 	bl	8011d84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80273f8:	a903      	add	r1, sp, #12
 80273fa:	9003      	str	r0, [sp, #12]
 80273fc:	4650      	mov	r0, sl
 80273fe:	f7ea fb89 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027402:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8027406:	9a01      	ldr	r2, [sp, #4]
 8027408:	4408      	add	r0, r1
 802740a:	f8d9 1000 	ldr.w	r1, [r9]
 802740e:	1b03      	subs	r3, r0, r4
 8027410:	4299      	cmp	r1, r3
 8027412:	bfc8      	it	gt
 8027414:	f8c9 3000 	strgt.w	r3, [r9]
 8027418:	6839      	ldr	r1, [r7, #0]
 802741a:	428b      	cmp	r3, r1
 802741c:	bfc8      	it	gt
 802741e:	603b      	strgt	r3, [r7, #0]
 8027420:	f8d9 1000 	ldr.w	r1, [r9]
 8027424:	4420      	add	r0, r4
 8027426:	4281      	cmp	r1, r0
 8027428:	bfc8      	it	gt
 802742a:	f8c9 0000 	strgt.w	r0, [r9]
 802742e:	6839      	ldr	r1, [r7, #0]
 8027430:	4288      	cmp	r0, r1
 8027432:	bfc8      	it	gt
 8027434:	6038      	strgt	r0, [r7, #0]
 8027436:	4610      	mov	r0, r2
 8027438:	f7ff feea 	bl	8027210 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802743c:	a903      	add	r1, sp, #12
 802743e:	9003      	str	r0, [sp, #12]
 8027440:	4650      	mov	r0, sl
 8027442:	f7ea fb67 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027446:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802744a:	1a10      	subs	r0, r2, r0
 802744c:	6832      	ldr	r2, [r6, #0]
 802744e:	1b01      	subs	r1, r0, r4
 8027450:	428a      	cmp	r2, r1
 8027452:	bfc8      	it	gt
 8027454:	6031      	strgt	r1, [r6, #0]
 8027456:	682a      	ldr	r2, [r5, #0]
 8027458:	4291      	cmp	r1, r2
 802745a:	bfc8      	it	gt
 802745c:	6029      	strgt	r1, [r5, #0]
 802745e:	6832      	ldr	r2, [r6, #0]
 8027460:	4420      	add	r0, r4
 8027462:	4282      	cmp	r2, r0
 8027464:	bfc8      	it	gt
 8027466:	6030      	strgt	r0, [r6, #0]
 8027468:	682a      	ldr	r2, [r5, #0]
 802746a:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802746e:	4290      	cmp	r0, r2
 8027470:	fb9b f2f1 	sdiv	r2, fp, r1
 8027474:	fb01 b212 	mls	r2, r1, r2, fp
 8027478:	eba1 0202 	sub.w	r2, r1, r2
 802747c:	bfc8      	it	gt
 802747e:	6028      	strgt	r0, [r5, #0]
 8027480:	fb92 f0f1 	sdiv	r0, r2, r1
 8027484:	fb01 2210 	mls	r2, r1, r0, r2
 8027488:	4493      	add	fp, r2
 802748a:	9b00      	ldr	r3, [sp, #0]
 802748c:	455b      	cmp	r3, fp
 802748e:	db40      	blt.n	8027512 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8027490:	4658      	mov	r0, fp
 8027492:	f7ea fc77 	bl	8011d84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027496:	a903      	add	r1, sp, #12
 8027498:	9003      	str	r0, [sp, #12]
 802749a:	4650      	mov	r0, sl
 802749c:	f7ea fb3a 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80274a0:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80274a4:	4410      	add	r0, r2
 80274a6:	f8d9 2000 	ldr.w	r2, [r9]
 80274aa:	1b01      	subs	r1, r0, r4
 80274ac:	428a      	cmp	r2, r1
 80274ae:	bfc8      	it	gt
 80274b0:	f8c9 1000 	strgt.w	r1, [r9]
 80274b4:	683a      	ldr	r2, [r7, #0]
 80274b6:	4291      	cmp	r1, r2
 80274b8:	bfc8      	it	gt
 80274ba:	6039      	strgt	r1, [r7, #0]
 80274bc:	f8d9 2000 	ldr.w	r2, [r9]
 80274c0:	4420      	add	r0, r4
 80274c2:	4282      	cmp	r2, r0
 80274c4:	bfc8      	it	gt
 80274c6:	f8c9 0000 	strgt.w	r0, [r9]
 80274ca:	683a      	ldr	r2, [r7, #0]
 80274cc:	4290      	cmp	r0, r2
 80274ce:	bfc8      	it	gt
 80274d0:	6038      	strgt	r0, [r7, #0]
 80274d2:	4658      	mov	r0, fp
 80274d4:	f7ff fe9c 	bl	8027210 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80274d8:	a903      	add	r1, sp, #12
 80274da:	9003      	str	r0, [sp, #12]
 80274dc:	4650      	mov	r0, sl
 80274de:	f7ea fb19 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80274e2:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80274e6:	1a10      	subs	r0, r2, r0
 80274e8:	6832      	ldr	r2, [r6, #0]
 80274ea:	1b01      	subs	r1, r0, r4
 80274ec:	428a      	cmp	r2, r1
 80274ee:	bfc8      	it	gt
 80274f0:	6031      	strgt	r1, [r6, #0]
 80274f2:	682a      	ldr	r2, [r5, #0]
 80274f4:	4291      	cmp	r1, r2
 80274f6:	bfc8      	it	gt
 80274f8:	6029      	strgt	r1, [r5, #0]
 80274fa:	6832      	ldr	r2, [r6, #0]
 80274fc:	4420      	add	r0, r4
 80274fe:	4282      	cmp	r2, r0
 8027500:	bfc8      	it	gt
 8027502:	6030      	strgt	r0, [r6, #0]
 8027504:	682a      	ldr	r2, [r5, #0]
 8027506:	4290      	cmp	r0, r2
 8027508:	bfc8      	it	gt
 802750a:	6028      	strgt	r0, [r5, #0]
 802750c:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8027510:	e7bb      	b.n	802748a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8027512:	9b00      	ldr	r3, [sp, #0]
 8027514:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8027518:	455b      	cmp	r3, fp
 802751a:	f77f af62 	ble.w	80273e2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802751e:	4618      	mov	r0, r3
 8027520:	f7ea fc30 	bl	8011d84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027524:	a903      	add	r1, sp, #12
 8027526:	9003      	str	r0, [sp, #12]
 8027528:	4650      	mov	r0, sl
 802752a:	f7ea faf3 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802752e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027532:	4410      	add	r0, r2
 8027534:	f8d9 2000 	ldr.w	r2, [r9]
 8027538:	1b01      	subs	r1, r0, r4
 802753a:	428a      	cmp	r2, r1
 802753c:	bfc8      	it	gt
 802753e:	f8c9 1000 	strgt.w	r1, [r9]
 8027542:	683a      	ldr	r2, [r7, #0]
 8027544:	4291      	cmp	r1, r2
 8027546:	bfc8      	it	gt
 8027548:	6039      	strgt	r1, [r7, #0]
 802754a:	f8d9 2000 	ldr.w	r2, [r9]
 802754e:	4420      	add	r0, r4
 8027550:	4282      	cmp	r2, r0
 8027552:	bfc8      	it	gt
 8027554:	f8c9 0000 	strgt.w	r0, [r9]
 8027558:	683b      	ldr	r3, [r7, #0]
 802755a:	4298      	cmp	r0, r3
 802755c:	bfc8      	it	gt
 802755e:	6038      	strgt	r0, [r7, #0]
 8027560:	9800      	ldr	r0, [sp, #0]
 8027562:	f7ff fe55 	bl	8027210 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027566:	a903      	add	r1, sp, #12
 8027568:	9003      	str	r0, [sp, #12]
 802756a:	4650      	mov	r0, sl
 802756c:	f7ea fad2 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027570:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8027574:	6832      	ldr	r2, [r6, #0]
 8027576:	1a18      	subs	r0, r3, r0
 8027578:	1b03      	subs	r3, r0, r4
 802757a:	429a      	cmp	r2, r3
 802757c:	bfc8      	it	gt
 802757e:	6033      	strgt	r3, [r6, #0]
 8027580:	682a      	ldr	r2, [r5, #0]
 8027582:	4293      	cmp	r3, r2
 8027584:	bfc8      	it	gt
 8027586:	602b      	strgt	r3, [r5, #0]
 8027588:	6833      	ldr	r3, [r6, #0]
 802758a:	4404      	add	r4, r0
 802758c:	42a3      	cmp	r3, r4
 802758e:	bfc8      	it	gt
 8027590:	6034      	strgt	r4, [r6, #0]
 8027592:	682b      	ldr	r3, [r5, #0]
 8027594:	429c      	cmp	r4, r3
 8027596:	bfc8      	it	gt
 8027598:	602c      	strgt	r4, [r5, #0]
 802759a:	e722      	b.n	80273e2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

0802759c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 802759c:	b530      	push	{r4, r5, lr}
 802759e:	4604      	mov	r4, r0
 80275a0:	4608      	mov	r0, r1
 80275a2:	4611      	mov	r1, r2
 80275a4:	461a      	mov	r2, r3
 80275a6:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80275aa:	b089      	sub	sp, #36	; 0x24
 80275ac:	015b      	lsls	r3, r3, #5
 80275ae:	9304      	str	r3, [sp, #16]
 80275b0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80275b4:	2500      	movs	r5, #0
 80275b6:	015b      	lsls	r3, r3, #5
 80275b8:	e9cd 3506 	strd	r3, r5, [sp, #24]
 80275bc:	ab07      	add	r3, sp, #28
 80275be:	9302      	str	r3, [sp, #8]
 80275c0:	ab06      	add	r3, sp, #24
 80275c2:	9301      	str	r3, [sp, #4]
 80275c4:	ab05      	add	r3, sp, #20
 80275c6:	9300      	str	r3, [sp, #0]
 80275c8:	ab04      	add	r3, sp, #16
 80275ca:	9505      	str	r5, [sp, #20]
 80275cc:	f7ff fe3e 	bl	802724c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 80275d0:	2520      	movs	r5, #32
 80275d2:	9a04      	ldr	r2, [sp, #16]
 80275d4:	9805      	ldr	r0, [sp, #20]
 80275d6:	fb92 f2f5 	sdiv	r2, r2, r5
 80275da:	fb90 f0f5 	sdiv	r0, r0, r5
 80275de:	b292      	uxth	r2, r2
 80275e0:	3002      	adds	r0, #2
 80275e2:	1a80      	subs	r0, r0, r2
 80275e4:	9b06      	ldr	r3, [sp, #24]
 80275e6:	9907      	ldr	r1, [sp, #28]
 80275e8:	fb93 f3f5 	sdiv	r3, r3, r5
 80275ec:	fb91 f1f5 	sdiv	r1, r1, r5
 80275f0:	b29b      	uxth	r3, r3
 80275f2:	3102      	adds	r1, #2
 80275f4:	1ac9      	subs	r1, r1, r3
 80275f6:	3a01      	subs	r2, #1
 80275f8:	3b01      	subs	r3, #1
 80275fa:	80a0      	strh	r0, [r4, #4]
 80275fc:	4620      	mov	r0, r4
 80275fe:	8022      	strh	r2, [r4, #0]
 8027600:	8063      	strh	r3, [r4, #2]
 8027602:	80e1      	strh	r1, [r4, #6]
 8027604:	b009      	add	sp, #36	; 0x24
 8027606:	bd30      	pop	{r4, r5, pc}

08027608 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8027608:	b510      	push	{r4, lr}
 802760a:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 802760e:	4604      	mov	r4, r0
 8027610:	f7ff ffc4 	bl	802759c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8027614:	4620      	mov	r0, r4
 8027616:	bd10      	pop	{r4, pc}

08027618 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8027618:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802761a:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802761e:	4606      	mov	r6, r0
 8027620:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8027624:	6813      	ldr	r3, [r2, #0]
 8027626:	42a5      	cmp	r5, r4
 8027628:	ea4f 1040 	mov.w	r0, r0, lsl #5
 802762c:	da2b      	bge.n	8027686 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 802762e:	42a3      	cmp	r3, r4
 8027630:	dd14      	ble.n	802765c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 8027632:	b168      	cbz	r0, 8027650 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027634:	4267      	negs	r7, r4
 8027636:	fb97 f2f0 	sdiv	r2, r7, r0
 802763a:	fb00 7212 	mls	r2, r0, r2, r7
 802763e:	1a82      	subs	r2, r0, r2
 8027640:	fb92 f7f0 	sdiv	r7, r2, r0
 8027644:	fb00 2017 	mls	r0, r0, r7, r2
 8027648:	1a24      	subs	r4, r4, r0
 802764a:	42ac      	cmp	r4, r5
 802764c:	bfb8      	it	lt
 802764e:	462c      	movlt	r4, r5
 8027650:	4630      	mov	r0, r6
 8027652:	4622      	mov	r2, r4
 8027654:	f7ff ffa2 	bl	802759c <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8027658:	4630      	mov	r0, r6
 802765a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802765c:	42ab      	cmp	r3, r5
 802765e:	dd0e      	ble.n	802767e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8027660:	b168      	cbz	r0, 802767e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8027662:	425f      	negs	r7, r3
 8027664:	fb97 f2f0 	sdiv	r2, r7, r0
 8027668:	fb00 7212 	mls	r2, r0, r2, r7
 802766c:	1a82      	subs	r2, r0, r2
 802766e:	fb92 f7f0 	sdiv	r7, r2, r0
 8027672:	fb00 2017 	mls	r0, r0, r7, r2
 8027676:	1a1b      	subs	r3, r3, r0
 8027678:	42ab      	cmp	r3, r5
 802767a:	bfb8      	it	lt
 802767c:	462b      	movlt	r3, r5
 802767e:	4622      	mov	r2, r4
 8027680:	461c      	mov	r4, r3
 8027682:	4613      	mov	r3, r2
 8027684:	e7e4      	b.n	8027650 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027686:	42a3      	cmp	r3, r4
 8027688:	da10      	bge.n	80276ac <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 802768a:	b148      	cbz	r0, 80276a0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 802768c:	fb94 f2f0 	sdiv	r2, r4, r0
 8027690:	fb00 4212 	mls	r2, r0, r2, r4
 8027694:	1a82      	subs	r2, r0, r2
 8027696:	fb92 f7f0 	sdiv	r7, r2, r0
 802769a:	fb00 2017 	mls	r0, r0, r7, r2
 802769e:	4404      	add	r4, r0
 80276a0:	42a5      	cmp	r5, r4
 80276a2:	bfa8      	it	ge
 80276a4:	4625      	movge	r5, r4
 80276a6:	461c      	mov	r4, r3
 80276a8:	462b      	mov	r3, r5
 80276aa:	e7d1      	b.n	8027650 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80276ac:	42ab      	cmp	r3, r5
 80276ae:	dacf      	bge.n	8027650 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80276b0:	2800      	cmp	r0, #0
 80276b2:	d0cd      	beq.n	8027650 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80276b4:	fb93 f2f0 	sdiv	r2, r3, r0
 80276b8:	fb00 3212 	mls	r2, r0, r2, r3
 80276bc:	1a82      	subs	r2, r0, r2
 80276be:	fb92 f7f0 	sdiv	r7, r2, r0
 80276c2:	fb00 2017 	mls	r0, r0, r7, r2
 80276c6:	4403      	add	r3, r0
 80276c8:	42ab      	cmp	r3, r5
 80276ca:	bfa8      	it	ge
 80276cc:	462b      	movge	r3, r5
 80276ce:	e7bf      	b.n	8027650 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

080276d0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 80276d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80276d4:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 80276d8:	42ae      	cmp	r6, r5
 80276da:	bfa2      	ittt	ge
 80276dc:	4633      	movge	r3, r6
 80276de:	462e      	movge	r6, r5
 80276e0:	461d      	movge	r5, r3
 80276e2:	1bab      	subs	r3, r5, r6
 80276e4:	468b      	mov	fp, r1
 80276e6:	6c01      	ldr	r1, [r0, #64]	; 0x40
 80276e8:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 80276ec:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 80276f0:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80276f4:	f04f 0220 	mov.w	r2, #32
 80276f8:	b0ab      	sub	sp, #172	; 0xac
 80276fa:	4604      	mov	r4, r0
 80276fc:	bfa4      	itt	ge
 80276fe:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 8027702:	2600      	movge	r6, #0
 8027704:	fb99 f9f2 	sdiv	r9, r9, r2
 8027708:	fb9a faf2 	sdiv	sl, sl, r2
 802770c:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802770e:	2900      	cmp	r1, #0
 8027710:	f000 80f5 	beq.w	80278fe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8027714:	f9bb 0000 	ldrsh.w	r0, [fp]
 8027718:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 802771c:	eba9 0700 	sub.w	r7, r9, r0
 8027720:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8027724:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8027728:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 802772c:	ebaa 0802 	sub.w	r8, sl, r2
 8027730:	4407      	add	r7, r0
 8027732:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8027736:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 802773a:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802773e:	b23f      	sxth	r7, r7
 8027740:	4490      	add	r8, r2
 8027742:	eba9 0707 	sub.w	r7, r9, r7
 8027746:	fa0f f888 	sxth.w	r8, r8
 802774a:	ebaa 0808 	sub.w	r8, sl, r8
 802774e:	2f00      	cmp	r7, #0
 8027750:	bfb8      	it	lt
 8027752:	427f      	neglt	r7, r7
 8027754:	f1b8 0f00 	cmp.w	r8, #0
 8027758:	bfb8      	it	lt
 802775a:	f1c8 0800 	rsblt	r8, r8, #0
 802775e:	45bc      	cmp	ip, r7
 8027760:	bfcc      	ite	gt
 8027762:	f10c 0701 	addgt.w	r7, ip, #1
 8027766:	3701      	addle	r7, #1
 8027768:	4540      	cmp	r0, r8
 802776a:	bfc8      	it	gt
 802776c:	f100 0801 	addgt.w	r8, r0, #1
 8027770:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8027774:	f100 0001 	add.w	r0, r0, #1
 8027778:	ea4f 0060 	mov.w	r0, r0, asr #1
 802777c:	f04f 0202 	mov.w	r2, #2
 8027780:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8027784:	fb91 f1f2 	sdiv	r1, r1, r2
 8027788:	eba3 0301 	sub.w	r3, r3, r1
 802778c:	bfd8      	it	le
 802778e:	f108 0801 	addle.w	r8, r8, #1
 8027792:	9201      	str	r2, [sp, #4]
 8027794:	930d      	str	r3, [sp, #52]	; 0x34
 8027796:	f7ea fad5 	bl	8011d44 <_ZN8touchgfx7CWRUtil4sineEi>
 802779a:	a92a      	add	r1, sp, #168	; 0xa8
 802779c:	fb08 f808 	mul.w	r8, r8, r8
 80277a0:	f841 0d70 	str.w	r0, [r1, #-112]!
 80277a4:	a80d      	add	r0, sp, #52	; 0x34
 80277a6:	f7ea f9b5 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80277aa:	fb07 8707 	mla	r7, r7, r7, r8
 80277ae:	f04f 0c20 	mov.w	ip, #32
 80277b2:	fb90 f0fc 	sdiv	r0, r0, ip
 80277b6:	4340      	muls	r0, r0
 80277b8:	4287      	cmp	r7, r0
 80277ba:	9a01      	ldr	r2, [sp, #4]
 80277bc:	da04      	bge.n	80277c8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 80277be:	2401      	movs	r4, #1
 80277c0:	4620      	mov	r0, r4
 80277c2:	b02b      	add	sp, #172	; 0xac
 80277c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80277c8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80277ca:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80277cc:	fb91 f3f2 	sdiv	r3, r1, r2
 80277d0:	4403      	add	r3, r0
 80277d2:	fb93 f3fc 	sdiv	r3, r3, ip
 80277d6:	f9bb 1000 	ldrsh.w	r1, [fp]
 80277da:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 80277de:	440a      	add	r2, r1
 80277e0:	b212      	sxth	r2, r2
 80277e2:	454a      	cmp	r2, r9
 80277e4:	bfa8      	it	ge
 80277e6:	464a      	movge	r2, r9
 80277e8:	428a      	cmp	r2, r1
 80277ea:	bfac      	ite	ge
 80277ec:	eba9 0902 	subge.w	r9, r9, r2
 80277f0:	eba9 0901 	sublt.w	r9, r9, r1
 80277f4:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 80277f8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80277fc:	440a      	add	r2, r1
 80277fe:	b212      	sxth	r2, r2
 8027800:	4552      	cmp	r2, sl
 8027802:	bfa8      	it	ge
 8027804:	4652      	movge	r2, sl
 8027806:	428a      	cmp	r2, r1
 8027808:	bfac      	ite	ge
 802780a:	ebaa 0a02 	subge.w	sl, sl, r2
 802780e:	ebaa 0a01 	sublt.w	sl, sl, r1
 8027812:	3301      	adds	r3, #1
 8027814:	fb0a fa0a 	mul.w	sl, sl, sl
 8027818:	fb09 a909 	mla	r9, r9, r9, sl
 802781c:	435b      	muls	r3, r3
 802781e:	4599      	cmp	r9, r3
 8027820:	dccd      	bgt.n	80277be <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8027822:	465a      	mov	r2, fp
 8027824:	4621      	mov	r1, r4
 8027826:	a80e      	add	r0, sp, #56	; 0x38
 8027828:	f7ff faae 	bl	8026d88 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 802782c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 802782e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8027830:	9209      	str	r2, [sp, #36]	; 0x24
 8027832:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8027836:	930a      	str	r3, [sp, #40]	; 0x28
 8027838:	dd07      	ble.n	802784a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 802783a:	2102      	movs	r1, #2
 802783c:	fb93 f3f1 	sdiv	r3, r3, r1
 8027840:	4413      	add	r3, r2
 8027842:	930a      	str	r3, [sp, #40]	; 0x28
 8027844:	fb93 f3f1 	sdiv	r3, r3, r1
 8027848:	9309      	str	r3, [sp, #36]	; 0x24
 802784a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802784e:	4630      	mov	r0, r6
 8027850:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8027854:	930b      	str	r3, [sp, #44]	; 0x2c
 8027856:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 802785a:	f7ea fa93 	bl	8011d84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802785e:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 8027862:	f04f 0a02 	mov.w	sl, #2
 8027866:	f849 0d74 	str.w	r0, [r9, #-116]!
 802786a:	a80b      	add	r0, sp, #44	; 0x2c
 802786c:	4649      	mov	r1, r9
 802786e:	f7ea f951 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027872:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027874:	fb90 f0fa 	sdiv	r0, r0, sl
 8027878:	eb00 0b03 	add.w	fp, r0, r3
 802787c:	4630      	mov	r0, r6
 802787e:	f7ff fcc7 	bl	8027210 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027882:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8027886:	017f      	lsls	r7, r7, #5
 8027888:	f848 0d78 	str.w	r0, [r8, #-120]!
 802788c:	a80b      	add	r0, sp, #44	; 0x2c
 802788e:	4641      	mov	r1, r8
 8027890:	f7ea f940 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027894:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027896:	fb90 f0fa 	sdiv	r0, r0, sl
 802789a:	4659      	mov	r1, fp
 802789c:	1a12      	subs	r2, r2, r0
 802789e:	a80e      	add	r0, sp, #56	; 0x38
 80278a0:	f7ff fbf2 	bl	8027088 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80278a4:	f106 0a20 	add.w	sl, r6, #32
 80278a8:	bb67      	cbnz	r7, 8027904 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 80278aa:	46b3      	mov	fp, r6
 80278ac:	45aa      	cmp	sl, r5
 80278ae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80278b0:	dc33      	bgt.n	802791a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 80278b2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80278b4:	4650      	mov	r0, sl
 80278b6:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 80278ba:	920b      	str	r2, [sp, #44]	; 0x2c
 80278bc:	f7ea fa62 	bl	8011d84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80278c0:	4641      	mov	r1, r8
 80278c2:	900c      	str	r0, [sp, #48]	; 0x30
 80278c4:	a80b      	add	r0, sp, #44	; 0x2c
 80278c6:	f7ea f925 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80278ca:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80278cc:	2302      	movs	r3, #2
 80278ce:	fb90 f0f3 	sdiv	r0, r0, r3
 80278d2:	eb00 0b02 	add.w	fp, r0, r2
 80278d6:	4650      	mov	r0, sl
 80278d8:	f7ff fc9a 	bl	8027210 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80278dc:	4649      	mov	r1, r9
 80278de:	900d      	str	r0, [sp, #52]	; 0x34
 80278e0:	a80b      	add	r0, sp, #44	; 0x2c
 80278e2:	f7ea f917 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80278e6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80278e8:	2302      	movs	r3, #2
 80278ea:	4659      	mov	r1, fp
 80278ec:	fb90 f0f3 	sdiv	r0, r0, r3
 80278f0:	1a12      	subs	r2, r2, r0
 80278f2:	a80e      	add	r0, sp, #56	; 0x38
 80278f4:	46d3      	mov	fp, sl
 80278f6:	f7ff fc14 	bl	8027122 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80278fa:	44ba      	add	sl, r7
 80278fc:	e7d6      	b.n	80278ac <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 80278fe:	fb93 f3f2 	sdiv	r3, r3, r2
 8027902:	e768      	b.n	80277d6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8027904:	fb9a f2f7 	sdiv	r2, sl, r7
 8027908:	fb07 a212 	mls	r2, r7, r2, sl
 802790c:	1aba      	subs	r2, r7, r2
 802790e:	fb92 f1f7 	sdiv	r1, r2, r7
 8027912:	fb07 2211 	mls	r2, r7, r1, r2
 8027916:	4492      	add	sl, r2
 8027918:	e7c7      	b.n	80278aa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 802791a:	45ab      	cmp	fp, r5
 802791c:	da23      	bge.n	8027966 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 802791e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027920:	4628      	mov	r0, r5
 8027922:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8027926:	920b      	str	r2, [sp, #44]	; 0x2c
 8027928:	f7ea fa2c 	bl	8011d84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802792c:	4641      	mov	r1, r8
 802792e:	900c      	str	r0, [sp, #48]	; 0x30
 8027930:	a80b      	add	r0, sp, #44	; 0x2c
 8027932:	f7ea f8ef 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027936:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027938:	f04f 0a02 	mov.w	sl, #2
 802793c:	fb90 f0fa 	sdiv	r0, r0, sl
 8027940:	4403      	add	r3, r0
 8027942:	4628      	mov	r0, r5
 8027944:	9301      	str	r3, [sp, #4]
 8027946:	f7ff fc63 	bl	8027210 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802794a:	4649      	mov	r1, r9
 802794c:	900d      	str	r0, [sp, #52]	; 0x34
 802794e:	a80b      	add	r0, sp, #44	; 0x2c
 8027950:	f7ea f8e0 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027954:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027956:	9b01      	ldr	r3, [sp, #4]
 8027958:	fb90 f0fa 	sdiv	r0, r0, sl
 802795c:	4619      	mov	r1, r3
 802795e:	1a12      	subs	r2, r2, r0
 8027960:	a80e      	add	r0, sp, #56	; 0x38
 8027962:	f7ff fbde 	bl	8027122 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027966:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027968:	b99b      	cbnz	r3, 8027992 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 802796a:	1bad      	subs	r5, r5, r6
 802796c:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8027970:	da04      	bge.n	802797c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027972:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8027976:	a80e      	add	r0, sp, #56	; 0x38
 8027978:	f7ff fbd3 	bl	8027122 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802797c:	21ff      	movs	r1, #255	; 0xff
 802797e:	a80e      	add	r0, sp, #56	; 0x38
 8027980:	f7ff fabe 	bl	8026f00 <_ZN8touchgfx6Canvas6renderEh>
 8027984:	4604      	mov	r4, r0
 8027986:	4b8a      	ldr	r3, [pc, #552]	; (8027bb0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8027988:	930e      	str	r3, [sp, #56]	; 0x38
 802798a:	a816      	add	r0, sp, #88	; 0x58
 802798c:	f7eb fd2e 	bl	80133ec <_ZN8touchgfx7OutlineD1Ev>
 8027990:	e716      	b.n	80277c0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8027992:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8027996:	429a      	cmp	r2, r3
 8027998:	f0c0 8107 	bcc.w	8027baa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 802799c:	1bab      	subs	r3, r5, r6
 802799e:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 80279a2:	9301      	str	r3, [sp, #4]
 80279a4:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80279a8:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 80279ac:	da43      	bge.n	8027a36 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 80279ae:	4628      	mov	r0, r5
 80279b0:	f7ea f9e8 	bl	8011d84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80279b4:	4649      	mov	r1, r9
 80279b6:	900d      	str	r0, [sp, #52]	; 0x34
 80279b8:	a809      	add	r0, sp, #36	; 0x24
 80279ba:	f7ea f8ab 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80279be:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80279c0:	18c3      	adds	r3, r0, r3
 80279c2:	4628      	mov	r0, r5
 80279c4:	9303      	str	r3, [sp, #12]
 80279c6:	f7ff fc23 	bl	8027210 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80279ca:	4649      	mov	r1, r9
 80279cc:	900d      	str	r0, [sp, #52]	; 0x34
 80279ce:	a809      	add	r0, sp, #36	; 0x24
 80279d0:	f7ea f8a0 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80279d4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80279d6:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 80279da:	1a1b      	subs	r3, r3, r0
 80279dc:	9302      	str	r3, [sp, #8]
 80279de:	9204      	str	r2, [sp, #16]
 80279e0:	eb0a 0305 	add.w	r3, sl, r5
 80279e4:	9a04      	ldr	r2, [sp, #16]
 80279e6:	4293      	cmp	r3, r2
 80279e8:	da25      	bge.n	8027a36 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 80279ea:	4618      	mov	r0, r3
 80279ec:	9306      	str	r3, [sp, #24]
 80279ee:	f7ea f9c9 	bl	8011d84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80279f2:	4649      	mov	r1, r9
 80279f4:	900d      	str	r0, [sp, #52]	; 0x34
 80279f6:	a80a      	add	r0, sp, #40	; 0x28
 80279f8:	f7ea f88c 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80279fc:	9b03      	ldr	r3, [sp, #12]
 80279fe:	2202      	movs	r2, #2
 8027a00:	fb90 f0f2 	sdiv	r0, r0, r2
 8027a04:	18c3      	adds	r3, r0, r3
 8027a06:	9305      	str	r3, [sp, #20]
 8027a08:	9b06      	ldr	r3, [sp, #24]
 8027a0a:	9207      	str	r2, [sp, #28]
 8027a0c:	4618      	mov	r0, r3
 8027a0e:	f7ff fbff 	bl	8027210 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027a12:	a92a      	add	r1, sp, #168	; 0xa8
 8027a14:	f841 0d78 	str.w	r0, [r1, #-120]!
 8027a18:	a80a      	add	r0, sp, #40	; 0x28
 8027a1a:	f7ea f87b 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a1e:	9b02      	ldr	r3, [sp, #8]
 8027a20:	9a07      	ldr	r2, [sp, #28]
 8027a22:	9905      	ldr	r1, [sp, #20]
 8027a24:	fb90 f2f2 	sdiv	r2, r0, r2
 8027a28:	a80e      	add	r0, sp, #56	; 0x38
 8027a2a:	1a9a      	subs	r2, r3, r2
 8027a2c:	f7ff fb79 	bl	8027122 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027a30:	9b06      	ldr	r3, [sp, #24]
 8027a32:	4453      	add	r3, sl
 8027a34:	e7d6      	b.n	80279e4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8027a36:	45ab      	cmp	fp, r5
 8027a38:	da25      	bge.n	8027a86 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8027a3a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027a3e:	4628      	mov	r0, r5
 8027a40:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027a44:	930b      	str	r3, [sp, #44]	; 0x2c
 8027a46:	f7ea f99d 	bl	8011d84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027a4a:	4641      	mov	r1, r8
 8027a4c:	900c      	str	r0, [sp, #48]	; 0x30
 8027a4e:	a80b      	add	r0, sp, #44	; 0x2c
 8027a50:	f7ea f860 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a54:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027a56:	2202      	movs	r2, #2
 8027a58:	fb90 f0f2 	sdiv	r0, r0, r2
 8027a5c:	eb00 0903 	add.w	r9, r0, r3
 8027a60:	4628      	mov	r0, r5
 8027a62:	9202      	str	r2, [sp, #8]
 8027a64:	f7ff fbd4 	bl	8027210 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027a68:	a92a      	add	r1, sp, #168	; 0xa8
 8027a6a:	f841 0d74 	str.w	r0, [r1, #-116]!
 8027a6e:	a80b      	add	r0, sp, #44	; 0x2c
 8027a70:	f7ea f850 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a74:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027a76:	9a02      	ldr	r2, [sp, #8]
 8027a78:	fb90 f2f2 	sdiv	r2, r0, r2
 8027a7c:	4649      	mov	r1, r9
 8027a7e:	1a9a      	subs	r2, r3, r2
 8027a80:	a80e      	add	r0, sp, #56	; 0x38
 8027a82:	f7ff fb4e 	bl	8027122 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027a86:	46d9      	mov	r9, fp
 8027a88:	2502      	movs	r5, #2
 8027a8a:	45b1      	cmp	r9, r6
 8027a8c:	db25      	blt.n	8027ada <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8027a8e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027a92:	4648      	mov	r0, r9
 8027a94:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027a98:	930b      	str	r3, [sp, #44]	; 0x2c
 8027a9a:	f7ea f973 	bl	8011d84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027a9e:	4641      	mov	r1, r8
 8027aa0:	900c      	str	r0, [sp, #48]	; 0x30
 8027aa2:	a80b      	add	r0, sp, #44	; 0x2c
 8027aa4:	f7ea f836 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027aa8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027aaa:	fb90 f0f5 	sdiv	r0, r0, r5
 8027aae:	eb00 0b03 	add.w	fp, r0, r3
 8027ab2:	4648      	mov	r0, r9
 8027ab4:	f7ff fbac 	bl	8027210 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027ab8:	a90d      	add	r1, sp, #52	; 0x34
 8027aba:	900d      	str	r0, [sp, #52]	; 0x34
 8027abc:	a80b      	add	r0, sp, #44	; 0x2c
 8027abe:	f7ea f829 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ac2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027ac4:	fb90 f0f5 	sdiv	r0, r0, r5
 8027ac8:	4659      	mov	r1, fp
 8027aca:	1a12      	subs	r2, r2, r0
 8027acc:	a80e      	add	r0, sp, #56	; 0x38
 8027ace:	46cb      	mov	fp, r9
 8027ad0:	f7ff fb27 	bl	8027122 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027ad4:	eba9 0907 	sub.w	r9, r9, r7
 8027ad8:	e7d7      	b.n	8027a8a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8027ada:	455e      	cmp	r6, fp
 8027adc:	da22      	bge.n	8027b24 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8027ade:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027ae2:	4630      	mov	r0, r6
 8027ae4:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027ae8:	930b      	str	r3, [sp, #44]	; 0x2c
 8027aea:	f7ea f94b 	bl	8011d84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027aee:	4641      	mov	r1, r8
 8027af0:	900c      	str	r0, [sp, #48]	; 0x30
 8027af2:	a80b      	add	r0, sp, #44	; 0x2c
 8027af4:	f7ea f80e 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027af8:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8027afa:	2502      	movs	r5, #2
 8027afc:	fb90 f0f5 	sdiv	r0, r0, r5
 8027b00:	4407      	add	r7, r0
 8027b02:	4630      	mov	r0, r6
 8027b04:	f7ff fb84 	bl	8027210 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027b08:	a92a      	add	r1, sp, #168	; 0xa8
 8027b0a:	f841 0d74 	str.w	r0, [r1, #-116]!
 8027b0e:	a80b      	add	r0, sp, #44	; 0x2c
 8027b10:	f7ea f800 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b14:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027b16:	fb90 f0f5 	sdiv	r0, r0, r5
 8027b1a:	4639      	mov	r1, r7
 8027b1c:	1a12      	subs	r2, r2, r0
 8027b1e:	a80e      	add	r0, sp, #56	; 0x38
 8027b20:	f7ff faff 	bl	8027122 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027b24:	9b01      	ldr	r3, [sp, #4]
 8027b26:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027b2a:	f6bf af27 	bge.w	802797c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027b2e:	4630      	mov	r0, r6
 8027b30:	f7ea f928 	bl	8011d84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027b34:	ad2a      	add	r5, sp, #168	; 0xa8
 8027b36:	f04f 0b02 	mov.w	fp, #2
 8027b3a:	f845 0d74 	str.w	r0, [r5, #-116]!
 8027b3e:	a809      	add	r0, sp, #36	; 0x24
 8027b40:	4629      	mov	r1, r5
 8027b42:	f7e9 ffe7 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b46:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027b48:	eb00 0903 	add.w	r9, r0, r3
 8027b4c:	4630      	mov	r0, r6
 8027b4e:	f7ff fb5f 	bl	8027210 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027b52:	4629      	mov	r1, r5
 8027b54:	900d      	str	r0, [sp, #52]	; 0x34
 8027b56:	a809      	add	r0, sp, #36	; 0x24
 8027b58:	f7e9 ffdc 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b5c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027b5e:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8027b62:	eba3 0800 	sub.w	r8, r3, r0
 8027b66:	4454      	add	r4, sl
 8027b68:	42a6      	cmp	r6, r4
 8027b6a:	f77f af07 	ble.w	802797c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027b6e:	4620      	mov	r0, r4
 8027b70:	f7ea f908 	bl	8011d84 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027b74:	4629      	mov	r1, r5
 8027b76:	900d      	str	r0, [sp, #52]	; 0x34
 8027b78:	a80a      	add	r0, sp, #40	; 0x28
 8027b7a:	f7e9 ffcb 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b7e:	fb90 f0fb 	sdiv	r0, r0, fp
 8027b82:	eb00 0709 	add.w	r7, r0, r9
 8027b86:	4620      	mov	r0, r4
 8027b88:	f7ff fb42 	bl	8027210 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027b8c:	a90c      	add	r1, sp, #48	; 0x30
 8027b8e:	900c      	str	r0, [sp, #48]	; 0x30
 8027b90:	a80a      	add	r0, sp, #40	; 0x28
 8027b92:	f7e9 ffbf 	bl	8011b14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b96:	4639      	mov	r1, r7
 8027b98:	fb90 f2fb 	sdiv	r2, r0, fp
 8027b9c:	a80e      	add	r0, sp, #56	; 0x38
 8027b9e:	eba8 0202 	sub.w	r2, r8, r2
 8027ba2:	f7ff fabe 	bl	8027122 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027ba6:	4454      	add	r4, sl
 8027ba8:	e7de      	b.n	8027b68 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8027baa:	2400      	movs	r4, #0
 8027bac:	e6eb      	b.n	8027986 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8027bae:	bf00      	nop
 8027bb0:	0802f650 	.word	0x0802f650

08027bb4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8027bb4:	b570      	push	{r4, r5, r6, lr}
 8027bb6:	790b      	ldrb	r3, [r1, #4]
 8027bb8:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8027bbc:	2b00      	cmp	r3, #0
 8027bbe:	bf0c      	ite	eq
 8027bc0:	2301      	moveq	r3, #1
 8027bc2:	2300      	movne	r3, #0
 8027bc4:	4604      	mov	r4, r0
 8027bc6:	460e      	mov	r6, r1
 8027bc8:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8027bcc:	d109      	bne.n	8027be2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8027bce:	b14d      	cbz	r5, 8027be4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8027bd0:	7933      	ldrb	r3, [r6, #4]
 8027bd2:	2b01      	cmp	r3, #1
 8027bd4:	d10c      	bne.n	8027bf0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027bd6:	6823      	ldr	r3, [r4, #0]
 8027bd8:	4620      	mov	r0, r4
 8027bda:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8027bdc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8027be0:	4718      	bx	r3
 8027be2:	b12d      	cbz	r5, 8027bf0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027be4:	6823      	ldr	r3, [r4, #0]
 8027be6:	4620      	mov	r0, r4
 8027be8:	695b      	ldr	r3, [r3, #20]
 8027bea:	4798      	blx	r3
 8027bec:	2d00      	cmp	r5, #0
 8027bee:	d1ef      	bne.n	8027bd0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8027bf0:	bd70      	pop	{r4, r5, r6, pc}

08027bf2 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8027bf2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8027bf6:	4770      	bx	lr

08027bf8 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8027bf8:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8027bfc:	4770      	bx	lr

08027bfe <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8027bfe:	6802      	ldr	r2, [r0, #0]
 8027c00:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027c04:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027c06:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027c0a:	4710      	bx	r2

08027c0c <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8027c0c:	6802      	ldr	r2, [r0, #0]
 8027c0e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027c12:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027c14:	eef0 0a40 	vmov.f32	s1, s0
 8027c18:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027c1c:	4710      	bx	r2

08027c1e <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8027c1e:	6802      	ldr	r2, [r0, #0]
 8027c20:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027c24:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027c26:	eeb0 1a40 	vmov.f32	s2, s0
 8027c2a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027c2e:	4710      	bx	r2

08027c30 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8027c30:	6802      	ldr	r2, [r0, #0]
 8027c32:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027c36:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027c38:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027c3c:	4710      	bx	r2

08027c3e <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8027c3e:	6802      	ldr	r2, [r0, #0]
 8027c40:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027c44:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027c46:	eef0 0a40 	vmov.f32	s1, s0
 8027c4a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027c4e:	4710      	bx	r2

08027c50 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8027c50:	6802      	ldr	r2, [r0, #0]
 8027c52:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027c56:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027c58:	eeb0 1a40 	vmov.f32	s2, s0
 8027c5c:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027c60:	4710      	bx	r2

08027c62 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8027c62:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027c66:	4770      	bx	lr

08027c68 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8027c68:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8027c6c:	4770      	bx	lr

08027c6e <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8027c6e:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8027c72:	4770      	bx	lr

08027c74 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8027c74:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8027c78:	4770      	bx	lr

08027c7a <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8027c7a:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8027c7e:	4770      	bx	lr

08027c80 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8027c80:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8027c84:	4770      	bx	lr

08027c86 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8027c86:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8027c8a:	4770      	bx	lr

08027c8c <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8027c8c:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8027c90:	4770      	bx	lr

08027c92 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8027c92:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8027c96:	4770      	bx	lr

08027c98 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8027c98:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8027c9c:	4770      	bx	lr

08027c9e <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8027c9e:	ee07 2a90 	vmov	s15, r2
 8027ca2:	6803      	ldr	r3, [r0, #0]
 8027ca4:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8027ca8:	ee07 1a90 	vmov	s15, r1
 8027cac:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8027cb0:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8027cb4:	4718      	bx	r3

08027cb6 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8027cb6:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8027cba:	4770      	bx	lr

08027cbc <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8027cbc:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8027cc0:	4770      	bx	lr

08027cc2 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8027cc2:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8027cc6:	4770      	bx	lr

08027cc8 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8027cc8:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8027ccc:	4770      	bx	lr

08027cce <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8027cce:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8027cd2:	4770      	bx	lr

08027cd4 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8027cd4:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8027cd8:	4770      	bx	lr

08027cda <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8027cda:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8027cde:	4770      	bx	lr

08027ce0 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8027ce0:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8027ce4:	4770      	bx	lr

08027ce6 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8027ce6:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8027cea:	4770      	bx	lr

08027cec <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8027cec:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8027cf0:	4770      	bx	lr

08027cf2 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8027cf2:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8027cf6:	4770      	bx	lr

08027cf8 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8027cf8:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8027cfc:	4770      	bx	lr

08027cfe <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8027cfe:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8027d02:	4770      	bx	lr

08027d04 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8027d04:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8027d08:	4770      	bx	lr

08027d0a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8027d0a:	b510      	push	{r4, lr}
 8027d0c:	ed2d 8b04 	vpush	{d8-d9}
 8027d10:	6803      	ldr	r3, [r0, #0]
 8027d12:	4604      	mov	r4, r0
 8027d14:	699b      	ldr	r3, [r3, #24]
 8027d16:	eeb0 8a40 	vmov.f32	s16, s0
 8027d1a:	eef0 8a60 	vmov.f32	s17, s1
 8027d1e:	eeb0 9a41 	vmov.f32	s18, s2
 8027d22:	4798      	blx	r3
 8027d24:	6823      	ldr	r3, [r4, #0]
 8027d26:	4620      	mov	r0, r4
 8027d28:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8027d2a:	eeb0 1a49 	vmov.f32	s2, s18
 8027d2e:	eef0 0a68 	vmov.f32	s1, s17
 8027d32:	eeb0 0a48 	vmov.f32	s0, s16
 8027d36:	4798      	blx	r3
 8027d38:	ecbd 8b04 	vpop	{d8-d9}
 8027d3c:	6823      	ldr	r3, [r4, #0]
 8027d3e:	4620      	mov	r0, r4
 8027d40:	699b      	ldr	r3, [r3, #24]
 8027d42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027d46:	4718      	bx	r3

08027d48 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8027d48:	b510      	push	{r4, lr}
 8027d4a:	ed2d 8b02 	vpush	{d8}
 8027d4e:	6803      	ldr	r3, [r0, #0]
 8027d50:	4604      	mov	r4, r0
 8027d52:	699b      	ldr	r3, [r3, #24]
 8027d54:	eeb0 8a40 	vmov.f32	s16, s0
 8027d58:	4798      	blx	r3
 8027d5a:	6823      	ldr	r3, [r4, #0]
 8027d5c:	4620      	mov	r0, r4
 8027d5e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8027d62:	eeb0 0a48 	vmov.f32	s0, s16
 8027d66:	4798      	blx	r3
 8027d68:	ecbd 8b02 	vpop	{d8}
 8027d6c:	6823      	ldr	r3, [r4, #0]
 8027d6e:	4620      	mov	r0, r4
 8027d70:	699b      	ldr	r3, [r3, #24]
 8027d72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027d76:	4718      	bx	r3

08027d78 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8027d78:	2200      	movs	r2, #0
 8027d7a:	8002      	strh	r2, [r0, #0]
 8027d7c:	8042      	strh	r2, [r0, #2]
 8027d7e:	8082      	strh	r2, [r0, #4]
 8027d80:	80c2      	strh	r2, [r0, #6]
 8027d82:	4770      	bx	lr

08027d84 <_ZN8touchgfx13TextureMapperD1Ev>:
 8027d84:	4770      	bx	lr

08027d86 <_ZN8touchgfx13TextureMapperD0Ev>:
 8027d86:	b510      	push	{r4, lr}
 8027d88:	2190      	movs	r1, #144	; 0x90
 8027d8a:	4604      	mov	r4, r0
 8027d8c:	f001 ff3f 	bl	8029c0e <_ZdlPvj>
 8027d90:	4620      	mov	r0, r4
 8027d92:	bd10      	pop	{r4, pc}

08027d94 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8027d94:	b538      	push	{r3, r4, r5, lr}
 8027d96:	2500      	movs	r5, #0
 8027d98:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8027d9c:	2301      	movs	r3, #1
 8027d9e:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8027da2:	4b1f      	ldr	r3, [pc, #124]	; (8027e20 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8027da4:	8085      	strh	r5, [r0, #4]
 8027da6:	80c5      	strh	r5, [r0, #6]
 8027da8:	8105      	strh	r5, [r0, #8]
 8027daa:	8145      	strh	r5, [r0, #10]
 8027dac:	8185      	strh	r5, [r0, #12]
 8027dae:	81c5      	strh	r5, [r0, #14]
 8027db0:	8205      	strh	r5, [r0, #16]
 8027db2:	8245      	strh	r5, [r0, #18]
 8027db4:	61c5      	str	r5, [r0, #28]
 8027db6:	8405      	strh	r5, [r0, #32]
 8027db8:	8445      	strh	r5, [r0, #34]	; 0x22
 8027dba:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8027dbe:	6003      	str	r3, [r0, #0]
 8027dc0:	880b      	ldrh	r3, [r1, #0]
 8027dc2:	84c3      	strh	r3, [r0, #38]	; 0x26
 8027dc4:	23ff      	movs	r3, #255	; 0xff
 8027dc6:	4604      	mov	r4, r0
 8027dc8:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8027dcc:	f7eb f99f 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8027dd0:	4b14      	ldr	r3, [pc, #80]	; (8027e24 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8027dd2:	6023      	str	r3, [r4, #0]
 8027dd4:	2300      	movs	r3, #0
 8027dd6:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8027dda:	4913      	ldr	r1, [pc, #76]	; (8027e28 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8027ddc:	62e3      	str	r3, [r4, #44]	; 0x2c
 8027dde:	6323      	str	r3, [r4, #48]	; 0x30
 8027de0:	6363      	str	r3, [r4, #52]	; 0x34
 8027de2:	63a3      	str	r3, [r4, #56]	; 0x38
 8027de4:	63e3      	str	r3, [r4, #60]	; 0x3c
 8027de6:	6463      	str	r3, [r4, #68]	; 0x44
 8027de8:	64a3      	str	r3, [r4, #72]	; 0x48
 8027dea:	6523      	str	r3, [r4, #80]	; 0x50
 8027dec:	6563      	str	r3, [r4, #84]	; 0x54
 8027dee:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027df0:	6623      	str	r3, [r4, #96]	; 0x60
 8027df2:	66a3      	str	r3, [r4, #104]	; 0x68
 8027df4:	66e3      	str	r3, [r4, #108]	; 0x6c
 8027df6:	6763      	str	r3, [r4, #116]	; 0x74
 8027df8:	67a3      	str	r3, [r4, #120]	; 0x78
 8027dfa:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8027dfe:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8027e02:	230c      	movs	r3, #12
 8027e04:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8027e08:	6422      	str	r2, [r4, #64]	; 0x40
 8027e0a:	64e1      	str	r1, [r4, #76]	; 0x4c
 8027e0c:	65a1      	str	r1, [r4, #88]	; 0x58
 8027e0e:	6662      	str	r2, [r4, #100]	; 0x64
 8027e10:	6722      	str	r2, [r4, #112]	; 0x70
 8027e12:	67e2      	str	r2, [r4, #124]	; 0x7c
 8027e14:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8027e18:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8027e1c:	4620      	mov	r0, r4
 8027e1e:	bd38      	pop	{r3, r4, r5, pc}
 8027e20:	0802f0f8 	.word	0x0802f0f8
 8027e24:	0802f6dc 	.word	0x0802f6dc
 8027e28:	447a0000 	.word	0x447a0000

08027e2c <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8027e2c:	b570      	push	{r4, r5, r6, lr}
 8027e2e:	ed2d 8b04 	vpush	{d8-d9}
 8027e32:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8027e36:	add0      	add	r5, sp, #832	; 0x340
 8027e38:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8027e3a:	f825 3d40 	strh.w	r3, [r5, #-64]!
 8027e3e:	4604      	mov	r4, r0
 8027e40:	4628      	mov	r0, r5
 8027e42:	f7f1 fa7f 	bl	8019344 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027e46:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8027e48:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8027e4c:	4606      	mov	r6, r0
 8027e4e:	4628      	mov	r0, r5
 8027e50:	f7f1 faac 	bl	80193ac <_ZNK8touchgfx6Bitmap9getHeightEv>
 8027e54:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8027e58:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8027e5c:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8027e5e:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8027e62:	9312      	str	r3, [sp, #72]	; 0x48
 8027e64:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027e68:	1c72      	adds	r2, r6, #1
 8027e6a:	3001      	adds	r0, #1
 8027e6c:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8027e70:	ee07 2a90 	vmov	s15, r2
 8027e74:	ee06 0a90 	vmov	s13, r0
 8027e78:	ee36 6a47 	vsub.f32	s12, s12, s14
 8027e7c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027e80:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8027e84:	ee77 7a86 	vadd.f32	s15, s15, s12
 8027e88:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8027e8c:	9316      	str	r3, [sp, #88]	; 0x58
 8027e8e:	931a      	str	r3, [sp, #104]	; 0x68
 8027e90:	931e      	str	r3, [sp, #120]	; 0x78
 8027e92:	2300      	movs	r3, #0
 8027e94:	9320      	str	r3, [sp, #128]	; 0x80
 8027e96:	9321      	str	r3, [sp, #132]	; 0x84
 8027e98:	9322      	str	r3, [sp, #136]	; 0x88
 8027e9a:	9324      	str	r3, [sp, #144]	; 0x90
 8027e9c:	9325      	str	r3, [sp, #148]	; 0x94
 8027e9e:	9326      	str	r3, [sp, #152]	; 0x98
 8027ea0:	9328      	str	r3, [sp, #160]	; 0xa0
 8027ea2:	9329      	str	r3, [sp, #164]	; 0xa4
 8027ea4:	932a      	str	r3, [sp, #168]	; 0xa8
 8027ea6:	932c      	str	r3, [sp, #176]	; 0xb0
 8027ea8:	932d      	str	r3, [sp, #180]	; 0xb4
 8027eaa:	932e      	str	r3, [sp, #184]	; 0xb8
 8027eac:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8027eb0:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8027eb4:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8027eb8:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8027ebc:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8027ec0:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8027ec4:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8027ec8:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8027ecc:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8027ed0:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8027ed4:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8027ed8:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8027edc:	a830      	add	r0, sp, #192	; 0xc0
 8027ede:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8027ee2:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8027ee6:	f000 fc43 	bl	8028770 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027eea:	eeb1 0a49 	vneg.f32	s0, s18
 8027eee:	a830      	add	r0, sp, #192	; 0xc0
 8027ef0:	f000 fd12 	bl	8028918 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027ef4:	eeb1 0a68 	vneg.f32	s0, s17
 8027ef8:	f000 fd1c 	bl	8028934 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8027efc:	eeb1 0a48 	vneg.f32	s0, s16
 8027f00:	f000 fd27 	bl	8028952 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8027f04:	a840      	add	r0, sp, #256	; 0x100
 8027f06:	f000 fc33 	bl	8028770 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027f0a:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 8027f0e:	a840      	add	r0, sp, #256	; 0x100
 8027f10:	f000 fc86 	bl	8028820 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8027f14:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8027f18:	f000 fcac 	bl	8028874 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8027f1c:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8027f20:	f000 fcd1 	bl	80288c6 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8027f24:	a850      	add	r0, sp, #320	; 0x140
 8027f26:	f000 fc23 	bl	8028770 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027f2a:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8027f2e:	a850      	add	r0, sp, #320	; 0x140
 8027f30:	f000 fd1e 	bl	8028970 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8027f34:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8027f38:	f000 fd26 	bl	8028988 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8027f3c:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8027f40:	f000 fd2f 	bl	80289a2 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8027f44:	a860      	add	r0, sp, #384	; 0x180
 8027f46:	f000 fc13 	bl	8028770 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027f4a:	eeb0 0a49 	vmov.f32	s0, s18
 8027f4e:	a860      	add	r0, sp, #384	; 0x180
 8027f50:	f000 fce2 	bl	8028918 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027f54:	eeb0 0a68 	vmov.f32	s0, s17
 8027f58:	f000 fcec 	bl	8028934 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8027f5c:	eeb0 0a48 	vmov.f32	s0, s16
 8027f60:	f000 fcf7 	bl	8028952 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8027f64:	aa50      	add	r2, sp, #320	; 0x140
 8027f66:	a960      	add	r1, sp, #384	; 0x180
 8027f68:	a8b0      	add	r0, sp, #704	; 0x2c0
 8027f6a:	f000 fc1b 	bl	80287a4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027f6e:	4628      	mov	r0, r5
 8027f70:	aa40      	add	r2, sp, #256	; 0x100
 8027f72:	a9b0      	add	r1, sp, #704	; 0x2c0
 8027f74:	f000 fc16 	bl	80287a4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027f78:	4629      	mov	r1, r5
 8027f7a:	aa30      	add	r2, sp, #192	; 0xc0
 8027f7c:	a870      	add	r0, sp, #448	; 0x1c0
 8027f7e:	f000 fc11 	bl	80287a4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027f82:	a880      	add	r0, sp, #512	; 0x200
 8027f84:	f000 fbf4 	bl	8028770 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027f88:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8027f8c:	a880      	add	r0, sp, #512	; 0x200
 8027f8e:	eeb1 0a40 	vneg.f32	s0, s0
 8027f92:	f000 fcc1 	bl	8028918 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027f96:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8027f9a:	a880      	add	r0, sp, #512	; 0x200
 8027f9c:	eeb1 0a40 	vneg.f32	s0, s0
 8027fa0:	f000 fcc8 	bl	8028934 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8027fa4:	a890      	add	r0, sp, #576	; 0x240
 8027fa6:	f000 fbe3 	bl	8028770 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027faa:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 8027fae:	a890      	add	r0, sp, #576	; 0x240
 8027fb0:	f000 fc26 	bl	8028800 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8027fb4:	a8a0      	add	r0, sp, #640	; 0x280
 8027fb6:	f000 fbdb 	bl	8028770 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027fba:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8027fbe:	a8a0      	add	r0, sp, #640	; 0x280
 8027fc0:	f000 fcaa 	bl	8028918 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027fc4:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8027fc8:	f000 fcb4 	bl	8028934 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8027fcc:	aa90      	add	r2, sp, #576	; 0x240
 8027fce:	a9a0      	add	r1, sp, #640	; 0x280
 8027fd0:	a8b0      	add	r0, sp, #704	; 0x2c0
 8027fd2:	f000 fbe7 	bl	80287a4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027fd6:	4628      	mov	r0, r5
 8027fd8:	aa80      	add	r2, sp, #512	; 0x200
 8027fda:	a9b0      	add	r1, sp, #704	; 0x2c0
 8027fdc:	f000 fbe2 	bl	80287a4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027fe0:	4629      	mov	r1, r5
 8027fe2:	aa70      	add	r2, sp, #448	; 0x1c0
 8027fe4:	4668      	mov	r0, sp
 8027fe6:	466d      	mov	r5, sp
 8027fe8:	f000 fbdc 	bl	80287a4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027fec:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027fee:	ae70      	add	r6, sp, #448	; 0x1c0
 8027ff0:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8027ff2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027ff4:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8027ff6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027ff8:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8027ffa:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8027ffe:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8028002:	2500      	movs	r5, #0
 8028004:	0129      	lsls	r1, r5, #4
 8028006:	ab20      	add	r3, sp, #128	; 0x80
 8028008:	185e      	adds	r6, r3, r1
 802800a:	ab10      	add	r3, sp, #64	; 0x40
 802800c:	4419      	add	r1, r3
 802800e:	a870      	add	r0, sp, #448	; 0x1c0
 8028010:	f000 fb7e 	bl	8028710 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8028014:	3501      	adds	r5, #1
 8028016:	2d04      	cmp	r5, #4
 8028018:	ed86 0a00 	vstr	s0, [r6]
 802801c:	edc6 0a01 	vstr	s1, [r6, #4]
 8028020:	ed86 1a02 	vstr	s2, [r6, #8]
 8028024:	edc6 1a03 	vstr	s3, [r6, #12]
 8028028:	d1ec      	bne.n	8028004 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 802802a:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 802802e:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8028032:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8028036:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802803a:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802803e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028042:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8028046:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 802804a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802804e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028052:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8028056:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 802805a:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 802805e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028062:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8028066:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802806a:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 802806e:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8028072:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028076:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802807a:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 802807e:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8028082:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8028086:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802808a:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 802808e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028092:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8028096:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 802809a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802809e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80280a2:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 80280a6:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 80280aa:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 80280ae:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80280b2:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 80280b6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80280ba:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 80280be:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 80280c2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80280c6:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80280ca:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 80280ce:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 80280d2:	ecbd 8b04 	vpop	{d8-d9}
 80280d6:	bd70      	pop	{r4, r5, r6, pc}

080280d8 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 80280d8:	b510      	push	{r4, lr}
 80280da:	4604      	mov	r4, r0
 80280dc:	f7eb f817 	bl	801310e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80280e0:	4620      	mov	r0, r4
 80280e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80280e6:	f7ff bea1 	b.w	8027e2c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080280ea <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 80280ea:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 80280ee:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 80280f2:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 80280f6:	f7ff be99 	b.w	8027e2c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080280fa <_ZN8touchgfx13TextureMapper8setScaleEf>:
 80280fa:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 80280fe:	f7ff be95 	b.w	8027e2c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028102 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8028102:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8028106:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 802810a:	f7ff be8f 	b.w	8027e2c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802810e <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802810e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028112:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028116:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802811a:	bfd8      	it	le
 802811c:	eeb0 0a67 	vmovle.f32	s0, s15
 8028120:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8028124:	f7ff be82 	b.w	8027e2c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028128 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8028128:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 802812c:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8028130:	f7ff be7c 	b.w	8027e2c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028134 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8028134:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028138:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802813c:	f7ff be76 	b.w	8027e2c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028140 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8028140:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028144:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8028148:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 802814c:	f7ff be6e 	b.w	8027e2c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028150 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8028150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028154:	ed2d 8b04 	vpush	{d8-d9}
 8028158:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 802815c:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8028160:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8028164:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8028168:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802816c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028170:	bf54      	ite	pl
 8028172:	eeb0 0a69 	vmovpl.f32	s0, s19
 8028176:	eeb0 0a48 	vmovmi.f32	s0, s16
 802817a:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802817e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028182:	bfd8      	it	le
 8028184:	eeb0 0a49 	vmovle.f32	s0, s18
 8028188:	eef4 8ac0 	vcmpe.f32	s17, s0
 802818c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028190:	bfd8      	it	le
 8028192:	eeb0 0a68 	vmovle.f32	s0, s17
 8028196:	460c      	mov	r4, r1
 8028198:	4607      	mov	r7, r0
 802819a:	f001 ff2b 	bl	8029ff4 <floorf>
 802819e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80281a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80281a6:	bf58      	it	pl
 80281a8:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80281ac:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80281b0:	bf56      	itet	pl
 80281b2:	ee10 3a10 	vmovpl	r3, s0
 80281b6:	2600      	movmi	r6, #0
 80281b8:	b21e      	sxthpl	r6, r3
 80281ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80281be:	bfd8      	it	le
 80281c0:	eeb0 8a69 	vmovle.f32	s16, s19
 80281c4:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80281c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80281cc:	bf58      	it	pl
 80281ce:	eeb0 8a49 	vmovpl.f32	s16, s18
 80281d2:	eef4 8ac8 	vcmpe.f32	s17, s16
 80281d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80281da:	bf54      	ite	pl
 80281dc:	eeb0 0a68 	vmovpl.f32	s0, s17
 80281e0:	eeb0 0a48 	vmovmi.f32	s0, s16
 80281e4:	f001 fec4 	bl	8029f70 <ceilf>
 80281e8:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 80281ec:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 80281f0:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 80281f4:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 80281f8:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 80281fc:	ee07 8a90 	vmov	s15, r8
 8028200:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028204:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028208:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802820c:	bfd8      	it	le
 802820e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8028212:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028216:	bfdc      	itt	le
 8028218:	ee10 3a10 	vmovle	r3, s0
 802821c:	fa0f f883 	sxthle.w	r8, r3
 8028220:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028224:	bf54      	ite	pl
 8028226:	eeb0 0a69 	vmovpl.f32	s0, s19
 802822a:	eeb0 0a48 	vmovmi.f32	s0, s16
 802822e:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8028232:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028236:	bfd8      	it	le
 8028238:	eeb0 0a49 	vmovle.f32	s0, s18
 802823c:	eef4 8ac0 	vcmpe.f32	s17, s0
 8028240:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028244:	bfd8      	it	le
 8028246:	eeb0 0a68 	vmovle.f32	s0, s17
 802824a:	f001 fed3 	bl	8029ff4 <floorf>
 802824e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028252:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028256:	bf58      	it	pl
 8028258:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802825c:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028260:	bf56      	itet	pl
 8028262:	ee10 3a10 	vmovpl	r3, s0
 8028266:	2500      	movmi	r5, #0
 8028268:	b21d      	sxthpl	r5, r3
 802826a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802826e:	bfd8      	it	le
 8028270:	eeb0 8a69 	vmovle.f32	s16, s19
 8028274:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8028278:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802827c:	bf58      	it	pl
 802827e:	eeb0 8a49 	vmovpl.f32	s16, s18
 8028282:	eef4 8ac8 	vcmpe.f32	s17, s16
 8028286:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802828a:	bf54      	ite	pl
 802828c:	eeb0 0a68 	vmovpl.f32	s0, s17
 8028290:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028294:	f001 fe6c 	bl	8029f70 <ceilf>
 8028298:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 802829c:	803e      	strh	r6, [r7, #0]
 802829e:	ee07 3a90 	vmov	s15, r3
 80282a2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80282a6:	807d      	strh	r5, [r7, #2]
 80282a8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80282ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80282b0:	bfd8      	it	le
 80282b2:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 80282b6:	eba8 0606 	sub.w	r6, r8, r6
 80282ba:	bfdc      	itt	le
 80282bc:	ee10 3a10 	vmovle	r3, s0
 80282c0:	b21b      	sxthle	r3, r3
 80282c2:	1b5d      	subs	r5, r3, r5
 80282c4:	80be      	strh	r6, [r7, #4]
 80282c6:	80fd      	strh	r5, [r7, #6]
 80282c8:	ecbd 8b04 	vpop	{d8-d9}
 80282cc:	4638      	mov	r0, r7
 80282ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080282d2 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 80282d2:	b513      	push	{r0, r1, r4, lr}
 80282d4:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80282d8:	4604      	mov	r4, r0
 80282da:	b143      	cbz	r3, 80282ee <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 80282dc:	4601      	mov	r1, r0
 80282de:	4668      	mov	r0, sp
 80282e0:	f7ff ff36 	bl	8028150 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 80282e4:	6823      	ldr	r3, [r4, #0]
 80282e6:	4669      	mov	r1, sp
 80282e8:	691b      	ldr	r3, [r3, #16]
 80282ea:	4620      	mov	r0, r4
 80282ec:	4798      	blx	r3
 80282ee:	b002      	add	sp, #8
 80282f0:	bd10      	pop	{r4, pc}

080282f2 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 80282f2:	4603      	mov	r3, r0
 80282f4:	3026      	adds	r0, #38	; 0x26
 80282f6:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 80282fa:	b90b      	cbnz	r3, 8028300 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 80282fc:	f7ee be38 	b.w	8016f70 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8028300:	f7ee be46 	b.w	8016f90 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08028304 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8028304:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028308:	ed2d 8b04 	vpush	{d8-d9}
 802830c:	4604      	mov	r4, r0
 802830e:	469b      	mov	fp, r3
 8028310:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8028314:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8028318:	f9b1 6000 	ldrsh.w	r6, [r1]
 802831c:	8888      	ldrh	r0, [r1, #4]
 802831e:	b0b3      	sub	sp, #204	; 0xcc
 8028320:	4430      	add	r0, r6
 8028322:	b280      	uxth	r0, r0
 8028324:	9206      	str	r2, [sp, #24]
 8028326:	fa0f fe80 	sxth.w	lr, r0
 802832a:	2200      	movs	r2, #0
 802832c:	4596      	cmp	lr, r2
 802832e:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8028332:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8028336:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 802833a:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 802833c:	9211      	str	r2, [sp, #68]	; 0x44
 802833e:	f340 8129 	ble.w	8028594 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028342:	45b4      	cmp	ip, r6
 8028344:	f340 8126 	ble.w	8028594 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028348:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 802834c:	88ca      	ldrh	r2, [r1, #6]
 802834e:	442a      	add	r2, r5
 8028350:	b292      	uxth	r2, r2
 8028352:	b211      	sxth	r1, r2
 8028354:	2900      	cmp	r1, #0
 8028356:	f340 811d 	ble.w	8028594 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802835a:	42ab      	cmp	r3, r5
 802835c:	f340 811a 	ble.w	8028594 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8028360:	45f4      	cmp	ip, lr
 8028362:	bfb8      	it	lt
 8028364:	fa1f f08c 	uxthlt.w	r0, ip
 8028368:	428b      	cmp	r3, r1
 802836a:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 802836e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8028372:	bfb8      	it	lt
 8028374:	b29a      	uxthlt	r2, r3
 8028376:	1b80      	subs	r0, r0, r6
 8028378:	1b52      	subs	r2, r2, r5
 802837a:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 802837e:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 8028382:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8028386:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 802838a:	ab11      	add	r3, sp, #68	; 0x44
 802838c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8028390:	6822      	ldr	r2, [r4, #0]
 8028392:	9307      	str	r3, [sp, #28]
 8028394:	ad13      	add	r5, sp, #76	; 0x4c
 8028396:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8028398:	e885 0003 	stmia.w	r5, {r0, r1}
 802839c:	4629      	mov	r1, r5
 802839e:	4620      	mov	r0, r4
 80283a0:	4790      	blx	r2
 80283a2:	4621      	mov	r1, r4
 80283a4:	a815      	add	r0, sp, #84	; 0x54
 80283a6:	f7ee fd3f 	bl	8016e28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80283aa:	a815      	add	r0, sp, #84	; 0x54
 80283ac:	f7ed fa04 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80283b0:	9b07      	ldr	r3, [sp, #28]
 80283b2:	1d26      	adds	r6, r4, #4
 80283b4:	4618      	mov	r0, r3
 80283b6:	4631      	mov	r1, r6
 80283b8:	f7ed fa42 	bl	8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80283bc:	4628      	mov	r0, r5
 80283be:	f104 0526 	add.w	r5, r4, #38	; 0x26
 80283c2:	f7ed f9f9 	bl	80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80283c6:	4628      	mov	r0, r5
 80283c8:	f7f1 f8a8 	bl	801951c <_ZNK8touchgfx6Bitmap7getDataEv>
 80283cc:	9007      	str	r0, [sp, #28]
 80283ce:	2800      	cmp	r0, #0
 80283d0:	f000 80db 	beq.w	802858a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 80283d4:	f8db 2000 	ldr.w	r2, [fp]
 80283d8:	9209      	str	r2, [sp, #36]	; 0x24
 80283da:	f8db 2004 	ldr.w	r2, [fp, #4]
 80283de:	920a      	str	r2, [sp, #40]	; 0x28
 80283e0:	f8db 2008 	ldr.w	r2, [fp, #8]
 80283e4:	920b      	str	r2, [sp, #44]	; 0x2c
 80283e6:	f8db 200c 	ldr.w	r2, [fp, #12]
 80283ea:	920c      	str	r2, [sp, #48]	; 0x30
 80283ec:	f8da 2000 	ldr.w	r2, [sl]
 80283f0:	920d      	str	r2, [sp, #52]	; 0x34
 80283f2:	f8da 2004 	ldr.w	r2, [sl, #4]
 80283f6:	920e      	str	r2, [sp, #56]	; 0x38
 80283f8:	f8da 2008 	ldr.w	r2, [sl, #8]
 80283fc:	920f      	str	r2, [sp, #60]	; 0x3c
 80283fe:	f8da 200c 	ldr.w	r2, [sl, #12]
 8028402:	9210      	str	r2, [sp, #64]	; 0x40
 8028404:	a90d      	add	r1, sp, #52	; 0x34
 8028406:	4632      	mov	r2, r6
 8028408:	a809      	add	r0, sp, #36	; 0x24
 802840a:	f7ed f9fd 	bl	8015808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802840e:	4632      	mov	r2, r6
 8028410:	a90e      	add	r1, sp, #56	; 0x38
 8028412:	a80a      	add	r0, sp, #40	; 0x28
 8028414:	f7ed f9f8 	bl	8015808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028418:	4632      	mov	r2, r6
 802841a:	a90f      	add	r1, sp, #60	; 0x3c
 802841c:	a80b      	add	r0, sp, #44	; 0x2c
 802841e:	f7ed f9f3 	bl	8015808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028422:	4632      	mov	r2, r6
 8028424:	a910      	add	r1, sp, #64	; 0x40
 8028426:	a80c      	add	r0, sp, #48	; 0x30
 8028428:	f7ed f9ee 	bl	8015808 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802842c:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8028430:	edd7 4a00 	vldr	s9, [r7]
 8028434:	edd7 5a01 	vldr	s11, [r7, #4]
 8028438:	ed98 4a00 	vldr	s8, [r8]
 802843c:	ed98 5a01 	vldr	s10, [r8, #4]
 8028440:	ed99 9a00 	vldr	s18, [r9]
 8028444:	ed99 8a01 	vldr	s16, [r9, #4]
 8028448:	edd9 8a02 	vldr	s17, [r9, #8]
 802844c:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8028450:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8028454:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8028458:	eef0 6a67 	vmov.f32	s13, s15
 802845c:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8028460:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8028464:	eeb0 7a67 	vmov.f32	s14, s15
 8028468:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 802846c:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 8028470:	eeb0 6a67 	vmov.f32	s12, s15
 8028474:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028478:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 802847c:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8028480:	ee16 6a10 	vmov	r6, s12
 8028484:	eeb0 6a67 	vmov.f32	s12, s15
 8028488:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802848c:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8028490:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8028494:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8028498:	68ff      	ldr	r7, [r7, #12]
 802849a:	9624      	str	r6, [sp, #144]	; 0x90
 802849c:	ee16 0a10 	vmov	r0, s12
 80284a0:	eeb0 6a67 	vmov.f32	s12, s15
 80284a4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80284a8:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 80284ac:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 80284b0:	ee16 1a10 	vmov	r1, s12
 80284b4:	eeb0 6a67 	vmov.f32	s12, s15
 80284b8:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80284bc:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 80284c0:	ee16 2a10 	vmov	r2, s12
 80284c4:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 80284c8:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 80284cc:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80284d0:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 80284d4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80284d8:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 80284dc:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 80284e0:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 80284e4:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 80284e8:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 80284ec:	922d      	str	r2, [sp, #180]	; 0xb4
 80284ee:	4a2b      	ldr	r2, [pc, #172]	; (802859c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 80284f0:	9b06      	ldr	r3, [sp, #24]
 80284f2:	8812      	ldrh	r2, [r2, #0]
 80284f4:	9317      	str	r3, [sp, #92]	; 0x5c
 80284f6:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 80284fa:	9b07      	ldr	r3, [sp, #28]
 80284fc:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8028500:	4628      	mov	r0, r5
 8028502:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8028506:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 802850a:	9218      	str	r2, [sp, #96]	; 0x60
 802850c:	9319      	str	r3, [sp, #100]	; 0x64
 802850e:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8028512:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8028516:	9731      	str	r7, [sp, #196]	; 0xc4
 8028518:	f7f1 f830 	bl	801957c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802851c:	901a      	str	r0, [sp, #104]	; 0x68
 802851e:	4628      	mov	r0, r5
 8028520:	f7f0 ff10 	bl	8019344 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028524:	901b      	str	r0, [sp, #108]	; 0x6c
 8028526:	4628      	mov	r0, r5
 8028528:	f7f0 ff40 	bl	80193ac <_ZNK8touchgfx6Bitmap9getHeightEv>
 802852c:	901c      	str	r0, [sp, #112]	; 0x70
 802852e:	4628      	mov	r0, r5
 8028530:	f7f0 ff08 	bl	8019344 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028534:	eeb4 9a48 	vcmp.f32	s18, s16
 8028538:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802853c:	901d      	str	r0, [sp, #116]	; 0x74
 802853e:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 8028542:	d107      	bne.n	8028554 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8028544:	eeb4 8a68 	vcmp.f32	s16, s17
 8028548:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802854c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8028550:	bf08      	it	eq
 8028552:	461e      	moveq	r6, r3
 8028554:	4b12      	ldr	r3, [pc, #72]	; (80285a0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8028556:	681b      	ldr	r3, [r3, #0]
 8028558:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 802855c:	b10a      	cbz	r2, 8028562 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 802855e:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8028560:	b905      	cbnz	r5, 8028564 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 8028562:	689d      	ldr	r5, [r3, #8]
 8028564:	682b      	ldr	r3, [r5, #0]
 8028566:	4620      	mov	r0, r4
 8028568:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 802856a:	f7ff fec2 	bl	80282f2 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802856e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8028572:	9604      	str	r6, [sp, #16]
 8028574:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8028578:	ab13      	add	r3, sp, #76	; 0x4c
 802857a:	9301      	str	r3, [sp, #4]
 802857c:	ab15      	add	r3, sp, #84	; 0x54
 802857e:	9300      	str	r3, [sp, #0]
 8028580:	aa1e      	add	r2, sp, #120	; 0x78
 8028582:	ab19      	add	r3, sp, #100	; 0x64
 8028584:	a917      	add	r1, sp, #92	; 0x5c
 8028586:	4628      	mov	r0, r5
 8028588:	47b8      	blx	r7
 802858a:	b033      	add	sp, #204	; 0xcc
 802858c:	ecbd 8b04 	vpop	{d8-d9}
 8028590:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028594:	2300      	movs	r3, #0
 8028596:	9312      	str	r3, [sp, #72]	; 0x48
 8028598:	e6f7      	b.n	802838a <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 802859a:	bf00      	nop
 802859c:	20012dae 	.word	0x20012dae
 80285a0:	20012db4 	.word	0x20012db4

080285a4 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 80285a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80285a8:	ed2d 8b02 	vpush	{d8}
 80285ac:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80285b0:	b098      	sub	sp, #96	; 0x60
 80285b2:	4604      	mov	r4, r0
 80285b4:	4688      	mov	r8, r1
 80285b6:	2b00      	cmp	r3, #0
 80285b8:	d077      	beq.n	80286aa <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 80285ba:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80285be:	4628      	mov	r0, r5
 80285c0:	f7f0 fec0 	bl	8019344 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80285c4:	ee07 0a90 	vmov	s15, r0
 80285c8:	4628      	mov	r0, r5
 80285ca:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 80285ce:	f7f0 feed 	bl	80193ac <_ZNK8touchgfx6Bitmap9getHeightEv>
 80285d2:	4b4e      	ldr	r3, [pc, #312]	; (802870c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 80285d4:	781b      	ldrb	r3, [r3, #0]
 80285d6:	ee07 0a90 	vmov	s15, r0
 80285da:	2b01      	cmp	r3, #1
 80285dc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80285e0:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 80285e4:	d066      	beq.n	80286b4 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 80285e6:	eeb0 6a47 	vmov.f32	s12, s14
 80285ea:	ee17 3a10 	vmov	r3, s14
 80285ee:	eeb0 4a48 	vmov.f32	s8, s16
 80285f2:	eeb0 7a48 	vmov.f32	s14, s16
 80285f6:	eef0 4a67 	vmov.f32	s9, s15
 80285fa:	eeb0 8a67 	vmov.f32	s16, s15
 80285fe:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 8028602:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8028606:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 802860a:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802860e:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 8028612:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8028616:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8028618:	6e66      	ldr	r6, [r4, #100]	; 0x64
 802861a:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 802861c:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8028620:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8028624:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8028628:	ee73 1a65 	vsub.f32	s3, s6, s11
 802862c:	ee72 6ac5 	vsub.f32	s13, s5, s10
 8028630:	ee32 1a45 	vsub.f32	s2, s4, s10
 8028634:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8028638:	ee73 1ae5 	vsub.f32	s3, s7, s11
 802863c:	eee1 6a21 	vfma.f32	s13, s2, s3
 8028640:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8028644:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028648:	dd3d      	ble.n	80286c6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 802864a:	ed8d 5a04 	vstr	s10, [sp, #16]
 802864e:	ed8d 2a05 	vstr	s4, [sp, #20]
 8028652:	edcd 2a06 	vstr	s5, [sp, #24]
 8028656:	f8cd c01c 	str.w	ip, [sp, #28]
 802865a:	edcd 5a08 	vstr	s11, [sp, #32]
 802865e:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 8028662:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8028666:	970b      	str	r7, [sp, #44]	; 0x2c
 8028668:	960c      	str	r6, [sp, #48]	; 0x30
 802866a:	950d      	str	r5, [sp, #52]	; 0x34
 802866c:	920e      	str	r2, [sp, #56]	; 0x38
 802866e:	900f      	str	r0, [sp, #60]	; 0x3c
 8028670:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8028674:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8028678:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 802867c:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8028680:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8028684:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8028688:	9316      	str	r3, [sp, #88]	; 0x58
 802868a:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 802868e:	ab14      	add	r3, sp, #80	; 0x50
 8028690:	9303      	str	r3, [sp, #12]
 8028692:	ab10      	add	r3, sp, #64	; 0x40
 8028694:	9302      	str	r3, [sp, #8]
 8028696:	ab0c      	add	r3, sp, #48	; 0x30
 8028698:	9301      	str	r3, [sp, #4]
 802869a:	ab08      	add	r3, sp, #32
 802869c:	9300      	str	r3, [sp, #0]
 802869e:	2200      	movs	r2, #0
 80286a0:	ab04      	add	r3, sp, #16
 80286a2:	4641      	mov	r1, r8
 80286a4:	4620      	mov	r0, r4
 80286a6:	f7ff fe2d 	bl	8028304 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 80286aa:	b018      	add	sp, #96	; 0x60
 80286ac:	ecbd 8b02 	vpop	{d8}
 80286b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80286b4:	eeb0 6a48 	vmov.f32	s12, s16
 80286b8:	eef0 4a47 	vmov.f32	s9, s14
 80286bc:	ee17 3a90 	vmov	r3, s15
 80286c0:	eeb0 4a67 	vmov.f32	s8, s15
 80286c4:	e79b      	b.n	80285fe <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 80286c6:	ed8d 5a05 	vstr	s10, [sp, #20]
 80286ca:	ed8d 2a04 	vstr	s4, [sp, #16]
 80286ce:	f8cd c018 	str.w	ip, [sp, #24]
 80286d2:	edcd 2a07 	vstr	s5, [sp, #28]
 80286d6:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 80286da:	ed8d 3a08 	vstr	s6, [sp, #32]
 80286de:	970a      	str	r7, [sp, #40]	; 0x28
 80286e0:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 80286e4:	960d      	str	r6, [sp, #52]	; 0x34
 80286e6:	950c      	str	r5, [sp, #48]	; 0x30
 80286e8:	900e      	str	r0, [sp, #56]	; 0x38
 80286ea:	920f      	str	r2, [sp, #60]	; 0x3c
 80286ec:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 80286f0:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 80286f4:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 80286f8:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 80286fc:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8028700:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8028704:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8028708:	9317      	str	r3, [sp, #92]	; 0x5c
 802870a:	e7c0      	b.n	802868e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 802870c:	20012dac 	.word	0x20012dac

08028710 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8028710:	b5f0      	push	{r4, r5, r6, r7, lr}
 8028712:	b08d      	sub	sp, #52	; 0x34
 8028714:	2300      	movs	r3, #0
 8028716:	9304      	str	r3, [sp, #16]
 8028718:	9305      	str	r3, [sp, #20]
 802871a:	9306      	str	r3, [sp, #24]
 802871c:	aa04      	add	r2, sp, #16
 802871e:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8028722:	9307      	str	r3, [sp, #28]
 8028724:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8028728:	4613      	mov	r3, r2
 802872a:	f101 0710 	add.w	r7, r1, #16
 802872e:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802876c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 8028732:	460c      	mov	r4, r1
 8028734:	4605      	mov	r5, r0
 8028736:	ecb4 7a01 	vldmia	r4!, {s14}
 802873a:	ecf5 6a01 	vldmia	r5!, {s13}
 802873e:	42bc      	cmp	r4, r7
 8028740:	eee6 7a87 	vfma.f32	s15, s13, s14
 8028744:	d1f7      	bne.n	8028736 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8028746:	3010      	adds	r0, #16
 8028748:	42b0      	cmp	r0, r6
 802874a:	ece2 7a01 	vstmia	r2!, {s15}
 802874e:	d1ee      	bne.n	802872e <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 8028750:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8028752:	ac0c      	add	r4, sp, #48	; 0x30
 8028754:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8028758:	ed9d 0a08 	vldr	s0, [sp, #32]
 802875c:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 8028760:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8028764:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8028768:	b00d      	add	sp, #52	; 0x34
 802876a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802876c:	00000000 	.word	0x00000000

08028770 <_ZN8touchgfx9Matrix4x4C1Ev>:
 8028770:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 80287a0 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8028774:	2300      	movs	r3, #0
 8028776:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802877a:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 802877e:	2200      	movs	r2, #0
 8028780:	4293      	cmp	r3, r2
 8028782:	f102 0201 	add.w	r2, r2, #1
 8028786:	bf14      	ite	ne
 8028788:	eef0 6a47 	vmovne.f32	s13, s14
 802878c:	eef0 6a67 	vmoveq.f32	s13, s15
 8028790:	2a04      	cmp	r2, #4
 8028792:	ece1 6a01 	vstmia	r1!, {s13}
 8028796:	d1f3      	bne.n	8028780 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8028798:	3301      	adds	r3, #1
 802879a:	2b04      	cmp	r3, #4
 802879c:	d1ed      	bne.n	802877a <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 802879e:	4770      	bx	lr
 80287a0:	00000000 	.word	0x00000000

080287a4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 80287a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80287a8:	460c      	mov	r4, r1
 80287aa:	4605      	mov	r5, r0
 80287ac:	4690      	mov	r8, r2
 80287ae:	f7ff ffdf 	bl	8028770 <_ZN8touchgfx9Matrix4x4C1Ev>
 80287b2:	4628      	mov	r0, r5
 80287b4:	4621      	mov	r1, r4
 80287b6:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 80287ba:	2300      	movs	r3, #0
 80287bc:	eddf 7a0f 	vldr	s15, [pc, #60]	; 80287fc <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 80287c0:	eb08 0603 	add.w	r6, r8, r3
 80287c4:	460f      	mov	r7, r1
 80287c6:	2400      	movs	r4, #0
 80287c8:	4632      	mov	r2, r6
 80287ca:	ecf7 6a01 	vldmia	r7!, {s13}
 80287ce:	ed92 7a00 	vldr	s14, [r2]
 80287d2:	3401      	adds	r4, #1
 80287d4:	2c04      	cmp	r4, #4
 80287d6:	f106 0610 	add.w	r6, r6, #16
 80287da:	eee6 7a87 	vfma.f32	s15, s13, s14
 80287de:	d1f3      	bne.n	80287c8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 80287e0:	18c2      	adds	r2, r0, r3
 80287e2:	3304      	adds	r3, #4
 80287e4:	2b10      	cmp	r3, #16
 80287e6:	edc2 7a00 	vstr	s15, [r2]
 80287ea:	d1e7      	bne.n	80287bc <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 80287ec:	3110      	adds	r1, #16
 80287ee:	4561      	cmp	r1, ip
 80287f0:	f100 0010 	add.w	r0, r0, #16
 80287f4:	d1e1      	bne.n	80287ba <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 80287f6:	4628      	mov	r0, r5
 80287f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80287fc:	00000000 	.word	0x00000000

08028800 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8028800:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028804:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8028808:	f100 0320 	add.w	r3, r0, #32
 802880c:	3030      	adds	r0, #48	; 0x30
 802880e:	ecf3 7a01 	vldmia	r3!, {s15}
 8028812:	ee60 7a27 	vmul.f32	s15, s0, s15
 8028816:	4283      	cmp	r3, r0
 8028818:	edc3 7a03 	vstr	s15, [r3, #12]
 802881c:	d1f7      	bne.n	802880e <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 802881e:	4770      	bx	lr

08028820 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8028820:	b510      	push	{r4, lr}
 8028822:	ed2d 8b02 	vpush	{d8}
 8028826:	4604      	mov	r4, r0
 8028828:	eef0 8a40 	vmov.f32	s17, s0
 802882c:	f001 fb56 	bl	8029edc <sinf>
 8028830:	eeb0 8a40 	vmov.f32	s16, s0
 8028834:	eeb0 0a68 	vmov.f32	s0, s17
 8028838:	f001 fb04 	bl	8029e44 <cosf>
 802883c:	f104 0310 	add.w	r3, r4, #16
 8028840:	f104 0220 	add.w	r2, r4, #32
 8028844:	eeb1 6a48 	vneg.f32	s12, s16
 8028848:	edd3 7a04 	vldr	s15, [r3, #16]
 802884c:	edd3 6a00 	vldr	s13, [r3]
 8028850:	ee26 7a27 	vmul.f32	s14, s12, s15
 8028854:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028858:	eea6 7a80 	vfma.f32	s14, s13, s0
 802885c:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028860:	eca3 7a01 	vstmia	r3!, {s14}
 8028864:	429a      	cmp	r2, r3
 8028866:	edc3 7a03 	vstr	s15, [r3, #12]
 802886a:	d1ed      	bne.n	8028848 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 802886c:	ecbd 8b02 	vpop	{d8}
 8028870:	4620      	mov	r0, r4
 8028872:	bd10      	pop	{r4, pc}

08028874 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8028874:	b510      	push	{r4, lr}
 8028876:	ed2d 8b02 	vpush	{d8}
 802887a:	4604      	mov	r4, r0
 802887c:	eef0 8a40 	vmov.f32	s17, s0
 8028880:	f001 fb2c 	bl	8029edc <sinf>
 8028884:	eeb0 8a40 	vmov.f32	s16, s0
 8028888:	eeb0 0a68 	vmov.f32	s0, s17
 802888c:	f001 fada 	bl	8029e44 <cosf>
 8028890:	4623      	mov	r3, r4
 8028892:	f104 0210 	add.w	r2, r4, #16
 8028896:	eeb1 6a48 	vneg.f32	s12, s16
 802889a:	edd3 7a08 	vldr	s15, [r3, #32]
 802889e:	edd3 6a00 	vldr	s13, [r3]
 80288a2:	ee27 7a88 	vmul.f32	s14, s15, s16
 80288a6:	ee67 7a80 	vmul.f32	s15, s15, s0
 80288aa:	eea6 7a80 	vfma.f32	s14, s13, s0
 80288ae:	eee6 7a26 	vfma.f32	s15, s12, s13
 80288b2:	eca3 7a01 	vstmia	r3!, {s14}
 80288b6:	429a      	cmp	r2, r3
 80288b8:	edc3 7a07 	vstr	s15, [r3, #28]
 80288bc:	d1ed      	bne.n	802889a <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 80288be:	ecbd 8b02 	vpop	{d8}
 80288c2:	4620      	mov	r0, r4
 80288c4:	bd10      	pop	{r4, pc}

080288c6 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 80288c6:	b510      	push	{r4, lr}
 80288c8:	ed2d 8b02 	vpush	{d8}
 80288cc:	4604      	mov	r4, r0
 80288ce:	eef0 8a40 	vmov.f32	s17, s0
 80288d2:	f001 fb03 	bl	8029edc <sinf>
 80288d6:	eeb0 8a40 	vmov.f32	s16, s0
 80288da:	eeb0 0a68 	vmov.f32	s0, s17
 80288de:	f001 fab1 	bl	8029e44 <cosf>
 80288e2:	4623      	mov	r3, r4
 80288e4:	f104 0210 	add.w	r2, r4, #16
 80288e8:	eeb1 6a48 	vneg.f32	s12, s16
 80288ec:	edd3 7a04 	vldr	s15, [r3, #16]
 80288f0:	edd3 6a00 	vldr	s13, [r3]
 80288f4:	ee26 7a27 	vmul.f32	s14, s12, s15
 80288f8:	ee67 7a80 	vmul.f32	s15, s15, s0
 80288fc:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028900:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028904:	eca3 7a01 	vstmia	r3!, {s14}
 8028908:	429a      	cmp	r2, r3
 802890a:	edc3 7a03 	vstr	s15, [r3, #12]
 802890e:	d1ed      	bne.n	80288ec <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8028910:	ecbd 8b02 	vpop	{d8}
 8028914:	4620      	mov	r0, r4
 8028916:	bd10      	pop	{r4, pc}

08028918 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8028918:	4603      	mov	r3, r0
 802891a:	f100 0210 	add.w	r2, r0, #16
 802891e:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8028922:	edd3 7a00 	vldr	s15, [r3]
 8028926:	eee7 7a00 	vfma.f32	s15, s14, s0
 802892a:	ece3 7a01 	vstmia	r3!, {s15}
 802892e:	4293      	cmp	r3, r2
 8028930:	d1f5      	bne.n	802891e <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8028932:	4770      	bx	lr

08028934 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8028934:	f100 0310 	add.w	r3, r0, #16
 8028938:	f100 0220 	add.w	r2, r0, #32
 802893c:	ed93 7a08 	vldr	s14, [r3, #32]
 8028940:	edd3 7a00 	vldr	s15, [r3]
 8028944:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028948:	ece3 7a01 	vstmia	r3!, {s15}
 802894c:	4293      	cmp	r3, r2
 802894e:	d1f5      	bne.n	802893c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8028950:	4770      	bx	lr

08028952 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 8028952:	f100 0320 	add.w	r3, r0, #32
 8028956:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802895a:	ed93 7a04 	vldr	s14, [r3, #16]
 802895e:	edd3 7a00 	vldr	s15, [r3]
 8028962:	eee7 7a00 	vfma.f32	s15, s14, s0
 8028966:	ece3 7a01 	vstmia	r3!, {s15}
 802896a:	4293      	cmp	r3, r2
 802896c:	d1f5      	bne.n	802895a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 802896e:	4770      	bx	lr

08028970 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8028970:	4603      	mov	r3, r0
 8028972:	f100 0210 	add.w	r2, r0, #16
 8028976:	edd3 7a00 	vldr	s15, [r3]
 802897a:	ee67 7a80 	vmul.f32	s15, s15, s0
 802897e:	ece3 7a01 	vstmia	r3!, {s15}
 8028982:	4293      	cmp	r3, r2
 8028984:	d1f7      	bne.n	8028976 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8028986:	4770      	bx	lr

08028988 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8028988:	f100 0310 	add.w	r3, r0, #16
 802898c:	f100 0220 	add.w	r2, r0, #32
 8028990:	edd3 7a00 	vldr	s15, [r3]
 8028994:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028998:	ece3 7a01 	vstmia	r3!, {s15}
 802899c:	4293      	cmp	r3, r2
 802899e:	d1f7      	bne.n	8028990 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 80289a0:	4770      	bx	lr

080289a2 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 80289a2:	f100 0320 	add.w	r3, r0, #32
 80289a6:	f100 0230 	add.w	r2, r0, #48	; 0x30
 80289aa:	edd3 7a00 	vldr	s15, [r3]
 80289ae:	ee67 7a80 	vmul.f32	s15, s15, s0
 80289b2:	ece3 7a01 	vstmia	r3!, {s15}
 80289b6:	4293      	cmp	r3, r2
 80289b8:	d1f7      	bne.n	80289aa <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 80289ba:	4770      	bx	lr

080289bc <arm_max_f32>:
 80289bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80289c0:	1e4f      	subs	r7, r1, #1
 80289c2:	ea5f 0897 	movs.w	r8, r7, lsr #2
 80289c6:	f100 0e04 	add.w	lr, r0, #4
 80289ca:	edd0 7a00 	vldr	s15, [r0]
 80289ce:	d058      	beq.n	8028a82 <arm_max_f32+0xc6>
 80289d0:	3014      	adds	r0, #20
 80289d2:	46c4      	mov	ip, r8
 80289d4:	2604      	movs	r6, #4
 80289d6:	2400      	movs	r4, #0
 80289d8:	ed10 6a04 	vldr	s12, [r0, #-16]
 80289dc:	ed50 6a03 	vldr	s13, [r0, #-12]
 80289e0:	ed10 7a02 	vldr	s14, [r0, #-8]
 80289e4:	ed50 5a01 	vldr	s11, [r0, #-4]
 80289e8:	eeb4 6ae7 	vcmpe.f32	s12, s15
 80289ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80289f0:	bfc8      	it	gt
 80289f2:	eef0 7a46 	vmovgt.f32	s15, s12
 80289f6:	f1a6 0503 	sub.w	r5, r6, #3
 80289fa:	eef4 7ae6 	vcmpe.f32	s15, s13
 80289fe:	bfc8      	it	gt
 8028a00:	462c      	movgt	r4, r5
 8028a02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028a06:	bf48      	it	mi
 8028a08:	eef0 7a66 	vmovmi.f32	s15, s13
 8028a0c:	f1a6 0502 	sub.w	r5, r6, #2
 8028a10:	eef4 7ac7 	vcmpe.f32	s15, s14
 8028a14:	bf48      	it	mi
 8028a16:	462c      	movmi	r4, r5
 8028a18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028a1c:	bf48      	it	mi
 8028a1e:	eef0 7a47 	vmovmi.f32	s15, s14
 8028a22:	f106 35ff 	add.w	r5, r6, #4294967295
 8028a26:	eef4 7ae5 	vcmpe.f32	s15, s11
 8028a2a:	bf48      	it	mi
 8028a2c:	462c      	movmi	r4, r5
 8028a2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028a32:	bf48      	it	mi
 8028a34:	4634      	movmi	r4, r6
 8028a36:	bf48      	it	mi
 8028a38:	eef0 7a65 	vmovmi.f32	s15, s11
 8028a3c:	f1bc 0c01 	subs.w	ip, ip, #1
 8028a40:	f106 0604 	add.w	r6, r6, #4
 8028a44:	f100 0010 	add.w	r0, r0, #16
 8028a48:	d1c6      	bne.n	80289d8 <arm_max_f32+0x1c>
 8028a4a:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 8028a4e:	f017 0003 	ands.w	r0, r7, #3
 8028a52:	d018      	beq.n	8028a86 <arm_max_f32+0xca>
 8028a54:	1a08      	subs	r0, r1, r0
 8028a56:	ecbe 7a01 	vldmia	lr!, {s14}
 8028a5a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8028a5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028a62:	bfc8      	it	gt
 8028a64:	4604      	movgt	r4, r0
 8028a66:	f100 0001 	add.w	r0, r0, #1
 8028a6a:	bfd8      	it	le
 8028a6c:	eeb0 7a67 	vmovle.f32	s14, s15
 8028a70:	4288      	cmp	r0, r1
 8028a72:	eef0 7a47 	vmov.f32	s15, s14
 8028a76:	d1ee      	bne.n	8028a56 <arm_max_f32+0x9a>
 8028a78:	ed82 7a00 	vstr	s14, [r2]
 8028a7c:	601c      	str	r4, [r3, #0]
 8028a7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028a82:	4644      	mov	r4, r8
 8028a84:	e7e3      	b.n	8028a4e <arm_max_f32+0x92>
 8028a86:	eeb0 7a67 	vmov.f32	s14, s15
 8028a8a:	e7f5      	b.n	8028a78 <arm_max_f32+0xbc>

08028a8c <arm_rfft_fast_init_f32>:
 8028a8c:	084b      	lsrs	r3, r1, #1
 8028a8e:	2b80      	cmp	r3, #128	; 0x80
 8028a90:	b410      	push	{r4}
 8028a92:	8201      	strh	r1, [r0, #16]
 8028a94:	8003      	strh	r3, [r0, #0]
 8028a96:	d047      	beq.n	8028b28 <arm_rfft_fast_init_f32+0x9c>
 8028a98:	d917      	bls.n	8028aca <arm_rfft_fast_init_f32+0x3e>
 8028a9a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8028a9e:	d03d      	beq.n	8028b1c <arm_rfft_fast_init_f32+0x90>
 8028aa0:	d929      	bls.n	8028af6 <arm_rfft_fast_init_f32+0x6a>
 8028aa2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8028aa6:	d020      	beq.n	8028aea <arm_rfft_fast_init_f32+0x5e>
 8028aa8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8028aac:	d113      	bne.n	8028ad6 <arm_rfft_fast_init_f32+0x4a>
 8028aae:	4921      	ldr	r1, [pc, #132]	; (8028b34 <arm_rfft_fast_init_f32+0xa8>)
 8028ab0:	4a21      	ldr	r2, [pc, #132]	; (8028b38 <arm_rfft_fast_init_f32+0xac>)
 8028ab2:	4b22      	ldr	r3, [pc, #136]	; (8028b3c <arm_rfft_fast_init_f32+0xb0>)
 8028ab4:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8028ab8:	8184      	strh	r4, [r0, #12]
 8028aba:	6081      	str	r1, [r0, #8]
 8028abc:	6042      	str	r2, [r0, #4]
 8028abe:	6143      	str	r3, [r0, #20]
 8028ac0:	2000      	movs	r0, #0
 8028ac2:	b240      	sxtb	r0, r0
 8028ac4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028ac8:	4770      	bx	lr
 8028aca:	2b20      	cmp	r3, #32
 8028acc:	d01c      	beq.n	8028b08 <arm_rfft_fast_init_f32+0x7c>
 8028ace:	2b40      	cmp	r3, #64	; 0x40
 8028ad0:	d006      	beq.n	8028ae0 <arm_rfft_fast_init_f32+0x54>
 8028ad2:	2b10      	cmp	r3, #16
 8028ad4:	d01d      	beq.n	8028b12 <arm_rfft_fast_init_f32+0x86>
 8028ad6:	20ff      	movs	r0, #255	; 0xff
 8028ad8:	b240      	sxtb	r0, r0
 8028ada:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028ade:	4770      	bx	lr
 8028ae0:	2438      	movs	r4, #56	; 0x38
 8028ae2:	4917      	ldr	r1, [pc, #92]	; (8028b40 <arm_rfft_fast_init_f32+0xb4>)
 8028ae4:	4a17      	ldr	r2, [pc, #92]	; (8028b44 <arm_rfft_fast_init_f32+0xb8>)
 8028ae6:	4b18      	ldr	r3, [pc, #96]	; (8028b48 <arm_rfft_fast_init_f32+0xbc>)
 8028ae8:	e7e6      	b.n	8028ab8 <arm_rfft_fast_init_f32+0x2c>
 8028aea:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 8028aee:	4917      	ldr	r1, [pc, #92]	; (8028b4c <arm_rfft_fast_init_f32+0xc0>)
 8028af0:	4a17      	ldr	r2, [pc, #92]	; (8028b50 <arm_rfft_fast_init_f32+0xc4>)
 8028af2:	4b18      	ldr	r3, [pc, #96]	; (8028b54 <arm_rfft_fast_init_f32+0xc8>)
 8028af4:	e7e0      	b.n	8028ab8 <arm_rfft_fast_init_f32+0x2c>
 8028af6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8028afa:	d1ec      	bne.n	8028ad6 <arm_rfft_fast_init_f32+0x4a>
 8028afc:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8028b00:	4915      	ldr	r1, [pc, #84]	; (8028b58 <arm_rfft_fast_init_f32+0xcc>)
 8028b02:	4a16      	ldr	r2, [pc, #88]	; (8028b5c <arm_rfft_fast_init_f32+0xd0>)
 8028b04:	4b16      	ldr	r3, [pc, #88]	; (8028b60 <arm_rfft_fast_init_f32+0xd4>)
 8028b06:	e7d7      	b.n	8028ab8 <arm_rfft_fast_init_f32+0x2c>
 8028b08:	2430      	movs	r4, #48	; 0x30
 8028b0a:	4916      	ldr	r1, [pc, #88]	; (8028b64 <arm_rfft_fast_init_f32+0xd8>)
 8028b0c:	4a16      	ldr	r2, [pc, #88]	; (8028b68 <arm_rfft_fast_init_f32+0xdc>)
 8028b0e:	4b17      	ldr	r3, [pc, #92]	; (8028b6c <arm_rfft_fast_init_f32+0xe0>)
 8028b10:	e7d2      	b.n	8028ab8 <arm_rfft_fast_init_f32+0x2c>
 8028b12:	2414      	movs	r4, #20
 8028b14:	4916      	ldr	r1, [pc, #88]	; (8028b70 <arm_rfft_fast_init_f32+0xe4>)
 8028b16:	4a17      	ldr	r2, [pc, #92]	; (8028b74 <arm_rfft_fast_init_f32+0xe8>)
 8028b18:	4b17      	ldr	r3, [pc, #92]	; (8028b78 <arm_rfft_fast_init_f32+0xec>)
 8028b1a:	e7cd      	b.n	8028ab8 <arm_rfft_fast_init_f32+0x2c>
 8028b1c:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8028b20:	4916      	ldr	r1, [pc, #88]	; (8028b7c <arm_rfft_fast_init_f32+0xf0>)
 8028b22:	4a17      	ldr	r2, [pc, #92]	; (8028b80 <arm_rfft_fast_init_f32+0xf4>)
 8028b24:	4b17      	ldr	r3, [pc, #92]	; (8028b84 <arm_rfft_fast_init_f32+0xf8>)
 8028b26:	e7c7      	b.n	8028ab8 <arm_rfft_fast_init_f32+0x2c>
 8028b28:	24d0      	movs	r4, #208	; 0xd0
 8028b2a:	4917      	ldr	r1, [pc, #92]	; (8028b88 <arm_rfft_fast_init_f32+0xfc>)
 8028b2c:	4a17      	ldr	r2, [pc, #92]	; (8028b8c <arm_rfft_fast_init_f32+0x100>)
 8028b2e:	4b18      	ldr	r3, [pc, #96]	; (8028b90 <arm_rfft_fast_init_f32+0x104>)
 8028b30:	e7c2      	b.n	8028ab8 <arm_rfft_fast_init_f32+0x2c>
 8028b32:	bf00      	nop
 8028b34:	0803e5f0 	.word	0x0803e5f0
 8028b38:	0802f7e8 	.word	0x0802f7e8
 8028b3c:	08035958 	.word	0x08035958
 8028b40:	080338e8 	.word	0x080338e8
 8028b44:	080403b0 	.word	0x080403b0
 8028b48:	080428a0 	.word	0x080428a0
 8028b4c:	0803c2d8 	.word	0x0803c2d8
 8028b50:	0803a1d8 	.word	0x0803a1d8
 8028b54:	08033958 	.word	0x08033958
 8028b58:	08042530 	.word	0x08042530
 8028b5c:	08039958 	.word	0x08039958
 8028b60:	080405b0 	.word	0x080405b0
 8028b64:	0803d190 	.word	0x0803d190
 8028b68:	0803c1d8 	.word	0x0803c1d8
 8028b6c:	080337e8 	.word	0x080337e8
 8028b70:	0803d0e8 	.word	0x0803d0e8
 8028b74:	0803a158 	.word	0x0803a158
 8028b78:	0803d110 	.word	0x0803d110
 8028b7c:	08040db0 	.word	0x08040db0
 8028b80:	0803d5f0 	.word	0x0803d5f0
 8028b84:	08041130 	.word	0x08041130
 8028b88:	08042aa0 	.word	0x08042aa0
 8028b8c:	0803d1f0 	.word	0x0803d1f0
 8028b90:	08042130 	.word	0x08042130

08028b94 <arm_rfft_fast_f32>:
 8028b94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028b98:	8a06      	ldrh	r6, [r0, #16]
 8028b9a:	0876      	lsrs	r6, r6, #1
 8028b9c:	4607      	mov	r7, r0
 8028b9e:	4615      	mov	r5, r2
 8028ba0:	8006      	strh	r6, [r0, #0]
 8028ba2:	460c      	mov	r4, r1
 8028ba4:	2b00      	cmp	r3, #0
 8028ba6:	d15c      	bne.n	8028c62 <arm_rfft_fast_f32+0xce>
 8028ba8:	461a      	mov	r2, r3
 8028baa:	2301      	movs	r3, #1
 8028bac:	f000 fbe6 	bl	802937c <arm_cfft_f32>
 8028bb0:	edd4 7a00 	vldr	s15, [r4]
 8028bb4:	ed94 7a01 	vldr	s14, [r4, #4]
 8028bb8:	883e      	ldrh	r6, [r7, #0]
 8028bba:	6978      	ldr	r0, [r7, #20]
 8028bbc:	ee37 7a07 	vadd.f32	s14, s14, s14
 8028bc0:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8028bc4:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028bc8:	ee77 6a87 	vadd.f32	s13, s15, s14
 8028bcc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028bd0:	3e01      	subs	r6, #1
 8028bd2:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8028bd6:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028bda:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8028bde:	ed85 7a00 	vstr	s14, [r5]
 8028be2:	edc5 7a01 	vstr	s15, [r5, #4]
 8028be6:	3010      	adds	r0, #16
 8028be8:	f105 0210 	add.w	r2, r5, #16
 8028bec:	3b08      	subs	r3, #8
 8028bee:	f104 0110 	add.w	r1, r4, #16
 8028bf2:	ed51 4a02 	vldr	s9, [r1, #-8]
 8028bf6:	ed93 5a02 	vldr	s10, [r3, #8]
 8028bfa:	ed11 7a01 	vldr	s14, [r1, #-4]
 8028bfe:	ed10 6a02 	vldr	s12, [r0, #-8]
 8028c02:	edd3 5a03 	vldr	s11, [r3, #12]
 8028c06:	ed50 6a01 	vldr	s13, [r0, #-4]
 8028c0a:	ee75 7a64 	vsub.f32	s15, s10, s9
 8028c0e:	ee35 4a87 	vadd.f32	s8, s11, s14
 8028c12:	ee35 5a24 	vadd.f32	s10, s10, s9
 8028c16:	ee77 5a65 	vsub.f32	s11, s14, s11
 8028c1a:	ee66 4a27 	vmul.f32	s9, s12, s15
 8028c1e:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8028c22:	ee34 5a85 	vadd.f32	s10, s9, s10
 8028c26:	ee26 6a04 	vmul.f32	s12, s12, s8
 8028c2a:	ee66 6a84 	vmul.f32	s13, s13, s8
 8028c2e:	ee77 7a25 	vadd.f32	s15, s14, s11
 8028c32:	ee76 6a85 	vadd.f32	s13, s13, s10
 8028c36:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028c3a:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8028c3e:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028c42:	3e01      	subs	r6, #1
 8028c44:	ed42 6a02 	vstr	s13, [r2, #-8]
 8028c48:	ed42 7a01 	vstr	s15, [r2, #-4]
 8028c4c:	f1a3 0308 	sub.w	r3, r3, #8
 8028c50:	f101 0108 	add.w	r1, r1, #8
 8028c54:	f100 0008 	add.w	r0, r0, #8
 8028c58:	f102 0208 	add.w	r2, r2, #8
 8028c5c:	d1c9      	bne.n	8028bf2 <arm_rfft_fast_f32+0x5e>
 8028c5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028c62:	edd1 7a00 	vldr	s15, [r1]
 8028c66:	edd1 6a01 	vldr	s13, [r1, #4]
 8028c6a:	6941      	ldr	r1, [r0, #20]
 8028c6c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8028c70:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8028c74:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028c78:	ee27 7a23 	vmul.f32	s14, s14, s7
 8028c7c:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028c80:	3e01      	subs	r6, #1
 8028c82:	ed82 7a00 	vstr	s14, [r2]
 8028c86:	edc2 7a01 	vstr	s15, [r2, #4]
 8028c8a:	00f0      	lsls	r0, r6, #3
 8028c8c:	b3ee      	cbz	r6, 8028d0a <arm_rfft_fast_f32+0x176>
 8028c8e:	3808      	subs	r0, #8
 8028c90:	f101 0e10 	add.w	lr, r1, #16
 8028c94:	4420      	add	r0, r4
 8028c96:	f104 0110 	add.w	r1, r4, #16
 8028c9a:	f102 0c10 	add.w	ip, r2, #16
 8028c9e:	ed90 7a02 	vldr	s14, [r0, #8]
 8028ca2:	ed51 6a02 	vldr	s13, [r1, #-8]
 8028ca6:	ed1e 6a02 	vldr	s12, [lr, #-8]
 8028caa:	ed90 4a03 	vldr	s8, [r0, #12]
 8028cae:	ed11 5a01 	vldr	s10, [r1, #-4]
 8028cb2:	ed5e 5a01 	vldr	s11, [lr, #-4]
 8028cb6:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8028cba:	ee74 4a05 	vadd.f32	s9, s8, s10
 8028cbe:	ee26 3a27 	vmul.f32	s6, s12, s15
 8028cc2:	ee77 6a26 	vadd.f32	s13, s14, s13
 8028cc6:	ee35 5a44 	vsub.f32	s10, s10, s8
 8028cca:	ee25 7aa7 	vmul.f32	s14, s11, s15
 8028cce:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028cd2:	ee77 7a05 	vadd.f32	s15, s14, s10
 8028cd6:	ee26 6a24 	vmul.f32	s12, s12, s9
 8028cda:	ee65 5aa4 	vmul.f32	s11, s11, s9
 8028cde:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028ce2:	ee36 7ae5 	vsub.f32	s14, s13, s11
 8028ce6:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028cea:	ee27 7a23 	vmul.f32	s14, s14, s7
 8028cee:	3e01      	subs	r6, #1
 8028cf0:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8028cf4:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8028cf8:	f1a0 0008 	sub.w	r0, r0, #8
 8028cfc:	f101 0108 	add.w	r1, r1, #8
 8028d00:	f10e 0e08 	add.w	lr, lr, #8
 8028d04:	f10c 0c08 	add.w	ip, ip, #8
 8028d08:	d1c9      	bne.n	8028c9e <arm_rfft_fast_f32+0x10a>
 8028d0a:	4638      	mov	r0, r7
 8028d0c:	4629      	mov	r1, r5
 8028d0e:	461a      	mov	r2, r3
 8028d10:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8028d14:	2301      	movs	r3, #1
 8028d16:	f000 bb31 	b.w	802937c <arm_cfft_f32>
 8028d1a:	bf00      	nop

08028d1c <arm_cfft_radix8by2_f32>:
 8028d1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028d20:	ed2d 8b08 	vpush	{d8-d11}
 8028d24:	f8b0 e000 	ldrh.w	lr, [r0]
 8028d28:	6842      	ldr	r2, [r0, #4]
 8028d2a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8028d2e:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 8028d32:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 8028d36:	4607      	mov	r7, r0
 8028d38:	ea4f 038c 	mov.w	r3, ip, lsl #2
 8028d3c:	f000 80af 	beq.w	8028e9e <arm_cfft_radix8by2_f32+0x182>
 8028d40:	3310      	adds	r3, #16
 8028d42:	18ce      	adds	r6, r1, r3
 8028d44:	3210      	adds	r2, #16
 8028d46:	4443      	add	r3, r8
 8028d48:	f101 0510 	add.w	r5, r1, #16
 8028d4c:	f108 0410 	add.w	r4, r8, #16
 8028d50:	ed54 1a04 	vldr	s3, [r4, #-16]
 8028d54:	ed13 4a04 	vldr	s8, [r3, #-16]
 8028d58:	ed53 3a03 	vldr	s7, [r3, #-12]
 8028d5c:	ed53 5a02 	vldr	s11, [r3, #-8]
 8028d60:	ed13 5a01 	vldr	s10, [r3, #-4]
 8028d64:	ed54 6a03 	vldr	s13, [r4, #-12]
 8028d68:	ed14 0a02 	vldr	s0, [r4, #-8]
 8028d6c:	ed16 2a04 	vldr	s4, [r6, #-16]
 8028d70:	ed56 2a03 	vldr	s5, [r6, #-12]
 8028d74:	ed15 6a03 	vldr	s12, [r5, #-12]
 8028d78:	ed15 7a01 	vldr	s14, [r5, #-4]
 8028d7c:	ed15 3a04 	vldr	s6, [r5, #-16]
 8028d80:	ed54 7a01 	vldr	s15, [r4, #-4]
 8028d84:	ed56 0a02 	vldr	s1, [r6, #-8]
 8028d88:	ed16 1a01 	vldr	s2, [r6, #-4]
 8028d8c:	ed55 4a02 	vldr	s9, [r5, #-8]
 8028d90:	ee73 ba21 	vadd.f32	s23, s6, s3
 8028d94:	ee36 ba26 	vadd.f32	s22, s12, s13
 8028d98:	ee37 aa27 	vadd.f32	s20, s14, s15
 8028d9c:	ee72 9a04 	vadd.f32	s19, s4, s8
 8028da0:	ee32 9aa3 	vadd.f32	s18, s5, s7
 8028da4:	ee31 8a05 	vadd.f32	s16, s2, s10
 8028da8:	ee74 aa80 	vadd.f32	s21, s9, s0
 8028dac:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8028db0:	ed45 ba04 	vstr	s23, [r5, #-16]
 8028db4:	ed05 ba03 	vstr	s22, [r5, #-12]
 8028db8:	ed45 aa02 	vstr	s21, [r5, #-8]
 8028dbc:	ed05 aa01 	vstr	s20, [r5, #-4]
 8028dc0:	ed06 8a01 	vstr	s16, [r6, #-4]
 8028dc4:	ed46 9a04 	vstr	s19, [r6, #-16]
 8028dc8:	ed06 9a03 	vstr	s18, [r6, #-12]
 8028dcc:	ed46 8a02 	vstr	s17, [r6, #-8]
 8028dd0:	ee76 6a66 	vsub.f32	s13, s12, s13
 8028dd4:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8028dd8:	ed12 6a03 	vldr	s12, [r2, #-12]
 8028ddc:	ed52 2a04 	vldr	s5, [r2, #-16]
 8028de0:	ee33 3a61 	vsub.f32	s6, s6, s3
 8028de4:	ee34 4a42 	vsub.f32	s8, s8, s4
 8028de8:	ee26 8a86 	vmul.f32	s16, s13, s12
 8028dec:	ee24 2a06 	vmul.f32	s4, s8, s12
 8028df0:	ee63 1a22 	vmul.f32	s3, s6, s5
 8028df4:	ee24 4a22 	vmul.f32	s8, s8, s5
 8028df8:	ee23 3a06 	vmul.f32	s6, s6, s12
 8028dfc:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8028e00:	ee23 6a86 	vmul.f32	s12, s7, s12
 8028e04:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8028e08:	ee36 6a04 	vadd.f32	s12, s12, s8
 8028e0c:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028e10:	ee72 3a63 	vsub.f32	s7, s4, s7
 8028e14:	ee71 2a88 	vadd.f32	s5, s3, s16
 8028e18:	ed44 6a03 	vstr	s13, [r4, #-12]
 8028e1c:	ed44 2a04 	vstr	s5, [r4, #-16]
 8028e20:	ed43 3a04 	vstr	s7, [r3, #-16]
 8028e24:	ed03 6a03 	vstr	s12, [r3, #-12]
 8028e28:	ee77 7a67 	vsub.f32	s15, s14, s15
 8028e2c:	ee75 6ae0 	vsub.f32	s13, s11, s1
 8028e30:	ed12 7a01 	vldr	s14, [r2, #-4]
 8028e34:	ed52 5a02 	vldr	s11, [r2, #-8]
 8028e38:	ee35 6a41 	vsub.f32	s12, s10, s2
 8028e3c:	ee74 4ac0 	vsub.f32	s9, s9, s0
 8028e40:	ee67 3a87 	vmul.f32	s7, s15, s14
 8028e44:	ee26 5a87 	vmul.f32	s10, s13, s14
 8028e48:	ee24 4aa5 	vmul.f32	s8, s9, s11
 8028e4c:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8028e50:	ee64 4a87 	vmul.f32	s9, s9, s14
 8028e54:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8028e58:	ee26 7a07 	vmul.f32	s14, s12, s14
 8028e5c:	ee26 6a25 	vmul.f32	s12, s12, s11
 8028e60:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8028e64:	ee74 5a23 	vadd.f32	s11, s8, s7
 8028e68:	ee35 6a46 	vsub.f32	s12, s10, s12
 8028e6c:	ee37 7a26 	vadd.f32	s14, s14, s13
 8028e70:	f1be 0e01 	subs.w	lr, lr, #1
 8028e74:	ed44 5a02 	vstr	s11, [r4, #-8]
 8028e78:	f105 0510 	add.w	r5, r5, #16
 8028e7c:	ed44 7a01 	vstr	s15, [r4, #-4]
 8028e80:	f106 0610 	add.w	r6, r6, #16
 8028e84:	ed03 6a02 	vstr	s12, [r3, #-8]
 8028e88:	ed03 7a01 	vstr	s14, [r3, #-4]
 8028e8c:	f102 0210 	add.w	r2, r2, #16
 8028e90:	f104 0410 	add.w	r4, r4, #16
 8028e94:	f103 0310 	add.w	r3, r3, #16
 8028e98:	f47f af5a 	bne.w	8028d50 <arm_cfft_radix8by2_f32+0x34>
 8028e9c:	687a      	ldr	r2, [r7, #4]
 8028e9e:	fa1f f48c 	uxth.w	r4, ip
 8028ea2:	4608      	mov	r0, r1
 8028ea4:	2302      	movs	r3, #2
 8028ea6:	4621      	mov	r1, r4
 8028ea8:	f000 fbca 	bl	8029640 <arm_radix8_butterfly_f32>
 8028eac:	ecbd 8b08 	vpop	{d8-d11}
 8028eb0:	4640      	mov	r0, r8
 8028eb2:	4621      	mov	r1, r4
 8028eb4:	687a      	ldr	r2, [r7, #4]
 8028eb6:	2302      	movs	r3, #2
 8028eb8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8028ebc:	f000 bbc0 	b.w	8029640 <arm_radix8_butterfly_f32>

08028ec0 <arm_cfft_radix8by4_f32>:
 8028ec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028ec4:	ed2d 8b0a 	vpush	{d8-d12}
 8028ec8:	8802      	ldrh	r2, [r0, #0]
 8028eca:	ed91 6a00 	vldr	s12, [r1]
 8028ece:	b08f      	sub	sp, #60	; 0x3c
 8028ed0:	460f      	mov	r7, r1
 8028ed2:	0852      	lsrs	r2, r2, #1
 8028ed4:	0093      	lsls	r3, r2, #2
 8028ed6:	900c      	str	r0, [sp, #48]	; 0x30
 8028ed8:	9103      	str	r1, [sp, #12]
 8028eda:	6841      	ldr	r1, [r0, #4]
 8028edc:	ed97 7a01 	vldr	s14, [r7, #4]
 8028ee0:	4638      	mov	r0, r7
 8028ee2:	4418      	add	r0, r3
 8028ee4:	4606      	mov	r6, r0
 8028ee6:	9009      	str	r0, [sp, #36]	; 0x24
 8028ee8:	4418      	add	r0, r3
 8028eea:	edd0 6a00 	vldr	s13, [r0]
 8028eee:	edd6 3a00 	vldr	s7, [r6]
 8028ef2:	edd6 2a01 	vldr	s5, [r6, #4]
 8028ef6:	edd0 7a01 	vldr	s15, [r0, #4]
 8028efa:	900a      	str	r0, [sp, #40]	; 0x28
 8028efc:	ee76 5a26 	vadd.f32	s11, s12, s13
 8028f00:	4604      	mov	r4, r0
 8028f02:	4625      	mov	r5, r4
 8028f04:	441c      	add	r4, r3
 8028f06:	ed94 4a00 	vldr	s8, [r4]
 8028f0a:	ed94 5a01 	vldr	s10, [r4, #4]
 8028f0e:	9401      	str	r4, [sp, #4]
 8028f10:	ee75 4aa3 	vadd.f32	s9, s11, s7
 8028f14:	4630      	mov	r0, r6
 8028f16:	ee74 4a24 	vadd.f32	s9, s8, s9
 8028f1a:	463e      	mov	r6, r7
 8028f1c:	ee14 ea90 	vmov	lr, s9
 8028f20:	ee76 6a66 	vsub.f32	s13, s12, s13
 8028f24:	f846 eb08 	str.w	lr, [r6], #8
 8028f28:	ee37 6a27 	vadd.f32	s12, s14, s15
 8028f2c:	edd0 4a01 	vldr	s9, [r0, #4]
 8028f30:	9604      	str	r6, [sp, #16]
 8028f32:	ee77 7a67 	vsub.f32	s15, s14, s15
 8028f36:	9e01      	ldr	r6, [sp, #4]
 8028f38:	ee32 3aa6 	vadd.f32	s6, s5, s13
 8028f3c:	ed96 2a01 	vldr	s4, [r6, #4]
 8028f40:	ee36 7a24 	vadd.f32	s14, s12, s9
 8028f44:	ee75 5ae3 	vsub.f32	s11, s11, s7
 8028f48:	ee77 4ae3 	vsub.f32	s9, s15, s7
 8028f4c:	ee36 6a62 	vsub.f32	s12, s12, s5
 8028f50:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8028f54:	ee76 6ae2 	vsub.f32	s13, s13, s5
 8028f58:	ee73 3a45 	vsub.f32	s7, s6, s10
 8028f5c:	4604      	mov	r4, r0
 8028f5e:	ee36 6a45 	vsub.f32	s12, s12, s10
 8028f62:	ee75 6a26 	vadd.f32	s13, s10, s13
 8028f66:	46a3      	mov	fp, r4
 8028f68:	ee37 7a02 	vadd.f32	s14, s14, s4
 8028f6c:	ee34 5a84 	vadd.f32	s10, s9, s8
 8028f70:	ee13 8a90 	vmov	r8, s7
 8028f74:	46a4      	mov	ip, r4
 8028f76:	ee75 5ac4 	vsub.f32	s11, s11, s8
 8028f7a:	ed87 7a01 	vstr	s14, [r7, #4]
 8028f7e:	f84b 8b08 	str.w	r8, [fp], #8
 8028f82:	f1ac 0704 	sub.w	r7, ip, #4
 8028f86:	ed8c 5a01 	vstr	s10, [ip, #4]
 8028f8a:	f101 0c08 	add.w	ip, r1, #8
 8028f8e:	462c      	mov	r4, r5
 8028f90:	f8cd c014 	str.w	ip, [sp, #20]
 8028f94:	ee15 ca90 	vmov	ip, s11
 8028f98:	f844 cb08 	str.w	ip, [r4], #8
 8028f9c:	9407      	str	r4, [sp, #28]
 8028f9e:	f101 0410 	add.w	r4, r1, #16
 8028fa2:	ed85 6a01 	vstr	s12, [r5, #4]
 8028fa6:	0852      	lsrs	r2, r2, #1
 8028fa8:	9402      	str	r4, [sp, #8]
 8028faa:	462c      	mov	r4, r5
 8028fac:	f101 0518 	add.w	r5, r1, #24
 8028fb0:	920b      	str	r2, [sp, #44]	; 0x2c
 8028fb2:	46b2      	mov	sl, r6
 8028fb4:	9506      	str	r5, [sp, #24]
 8028fb6:	ee77 7ac4 	vsub.f32	s15, s15, s8
 8028fba:	3a02      	subs	r2, #2
 8028fbc:	ee16 5a90 	vmov	r5, s13
 8028fc0:	46b6      	mov	lr, r6
 8028fc2:	4630      	mov	r0, r6
 8028fc4:	0852      	lsrs	r2, r2, #1
 8028fc6:	f84a 5b08 	str.w	r5, [sl], #8
 8028fca:	f1a0 0604 	sub.w	r6, r0, #4
 8028fce:	edce 7a01 	vstr	s15, [lr, #4]
 8028fd2:	9208      	str	r2, [sp, #32]
 8028fd4:	f000 8130 	beq.w	8029238 <arm_cfft_radix8by4_f32+0x378>
 8028fd8:	4691      	mov	r9, r2
 8028fda:	9a03      	ldr	r2, [sp, #12]
 8028fdc:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8028fe0:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8028fe4:	3b08      	subs	r3, #8
 8028fe6:	f102 0510 	add.w	r5, r2, #16
 8028fea:	f101 0c20 	add.w	ip, r1, #32
 8028fee:	f1a4 020c 	sub.w	r2, r4, #12
 8028ff2:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 8028ff6:	4433      	add	r3, r6
 8028ff8:	3410      	adds	r4, #16
 8028ffa:	4650      	mov	r0, sl
 8028ffc:	4659      	mov	r1, fp
 8028ffe:	ed55 3a02 	vldr	s7, [r5, #-8]
 8029002:	ed14 5a02 	vldr	s10, [r4, #-8]
 8029006:	ed91 7a00 	vldr	s14, [r1]
 802900a:	edd0 7a00 	vldr	s15, [r0]
 802900e:	ed15 4a01 	vldr	s8, [r5, #-4]
 8029012:	ed54 5a01 	vldr	s11, [r4, #-4]
 8029016:	edd0 6a01 	vldr	s13, [r0, #4]
 802901a:	ed91 6a01 	vldr	s12, [r1, #4]
 802901e:	ee33 8a85 	vadd.f32	s16, s7, s10
 8029022:	ee34 0a25 	vadd.f32	s0, s8, s11
 8029026:	ee78 4a07 	vadd.f32	s9, s16, s14
 802902a:	ee74 5a65 	vsub.f32	s11, s8, s11
 802902e:	ee77 4aa4 	vadd.f32	s9, s15, s9
 8029032:	ee33 5ac5 	vsub.f32	s10, s7, s10
 8029036:	ed45 4a02 	vstr	s9, [r5, #-8]
 802903a:	edd1 4a01 	vldr	s9, [r1, #4]
 802903e:	ed90 4a01 	vldr	s8, [r0, #4]
 8029042:	ee70 4a24 	vadd.f32	s9, s0, s9
 8029046:	ee76 aa05 	vadd.f32	s21, s12, s10
 802904a:	ee74 4a84 	vadd.f32	s9, s9, s8
 802904e:	ee35 aac7 	vsub.f32	s20, s11, s14
 8029052:	ed45 4a01 	vstr	s9, [r5, #-4]
 8029056:	edd6 1a00 	vldr	s3, [r6]
 802905a:	edd7 0a00 	vldr	s1, [r7]
 802905e:	ed92 4a02 	vldr	s8, [r2, #8]
 8029062:	edd3 3a02 	vldr	s7, [r3, #8]
 8029066:	ed93 2a01 	vldr	s4, [r3, #4]
 802906a:	ed16 1a01 	vldr	s2, [r6, #-4]
 802906e:	edd2 2a01 	vldr	s5, [r2, #4]
 8029072:	ed57 9a01 	vldr	s19, [r7, #-4]
 8029076:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802907a:	ee39 3a81 	vadd.f32	s6, s19, s2
 802907e:	ee74 8a84 	vadd.f32	s17, s9, s8
 8029082:	ee70 1ae1 	vsub.f32	s3, s1, s3
 8029086:	ee73 8aa8 	vadd.f32	s17, s7, s17
 802908a:	ee7a aae6 	vsub.f32	s21, s21, s13
 802908e:	ee18 aa90 	vmov	sl, s17
 8029092:	f847 a908 	str.w	sl, [r7], #-8
 8029096:	edd2 8a01 	vldr	s17, [r2, #4]
 802909a:	ed93 9a01 	vldr	s18, [r3, #4]
 802909e:	ee73 8a28 	vadd.f32	s17, s6, s17
 80290a2:	ee3a aa27 	vadd.f32	s20, s20, s15
 80290a6:	ee78 8a89 	vadd.f32	s17, s17, s18
 80290aa:	ee74 0a63 	vsub.f32	s1, s8, s7
 80290ae:	edc7 8a01 	vstr	s17, [r7, #4]
 80290b2:	ed18 ba02 	vldr	s22, [r8, #-8]
 80290b6:	ed58 8a01 	vldr	s17, [r8, #-4]
 80290ba:	ee39 1ac1 	vsub.f32	s2, s19, s2
 80290be:	ee6a ba28 	vmul.f32	s23, s20, s17
 80290c2:	ee2a ca8b 	vmul.f32	s24, s21, s22
 80290c6:	ee71 9ae2 	vsub.f32	s19, s3, s5
 80290ca:	ee30 9a81 	vadd.f32	s18, s1, s2
 80290ce:	ee79 9a82 	vadd.f32	s19, s19, s4
 80290d2:	ee3c ca2b 	vadd.f32	s24, s24, s23
 80290d6:	ee6a aaa8 	vmul.f32	s21, s21, s17
 80290da:	ee69 baa8 	vmul.f32	s23, s19, s17
 80290de:	ee2a aa0b 	vmul.f32	s20, s20, s22
 80290e2:	ee69 9a8b 	vmul.f32	s19, s19, s22
 80290e6:	ee69 8a28 	vmul.f32	s17, s18, s17
 80290ea:	ee29 ba0b 	vmul.f32	s22, s18, s22
 80290ee:	ee1c aa10 	vmov	sl, s24
 80290f2:	ee78 8aa9 	vadd.f32	s17, s17, s19
 80290f6:	f841 ab08 	str.w	sl, [r1], #8
 80290fa:	ee3a aa6a 	vsub.f32	s20, s20, s21
 80290fe:	ee3b bacb 	vsub.f32	s22, s23, s22
 8029102:	ee34 4ac4 	vsub.f32	s8, s9, s8
 8029106:	ee33 3a62 	vsub.f32	s6, s6, s5
 802910a:	ed01 aa01 	vstr	s20, [r1, #-4]
 802910e:	edc2 8a01 	vstr	s17, [r2, #4]
 8029112:	ed82 ba02 	vstr	s22, [r2, #8]
 8029116:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802911a:	ee74 3a63 	vsub.f32	s7, s8, s7
 802911e:	ee38 8a47 	vsub.f32	s16, s16, s14
 8029122:	ed1c 4a03 	vldr	s8, [ip, #-12]
 8029126:	ee30 0a46 	vsub.f32	s0, s0, s12
 802912a:	ee33 3a42 	vsub.f32	s6, s6, s4
 802912e:	ee38 8a67 	vsub.f32	s16, s16, s15
 8029132:	ee30 0a66 	vsub.f32	s0, s0, s13
 8029136:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802913a:	ee63 8a04 	vmul.f32	s17, s6, s8
 802913e:	ee28 aa24 	vmul.f32	s20, s16, s9
 8029142:	ee60 9a04 	vmul.f32	s19, s0, s8
 8029146:	ee28 8a04 	vmul.f32	s16, s16, s8
 802914a:	ee20 0a24 	vmul.f32	s0, s0, s9
 802914e:	ee63 3a84 	vmul.f32	s7, s7, s8
 8029152:	ee39 4a68 	vsub.f32	s8, s18, s17
 8029156:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802915a:	ee14 aa10 	vmov	sl, s8
 802915e:	ee30 0a48 	vsub.f32	s0, s0, s16
 8029162:	ee63 4a24 	vmul.f32	s9, s6, s9
 8029166:	ed44 9a02 	vstr	s19, [r4, #-8]
 802916a:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802916e:	ed04 0a01 	vstr	s0, [r4, #-4]
 8029172:	f846 a908 	str.w	sl, [r6], #-8
 8029176:	ee35 6a46 	vsub.f32	s12, s10, s12
 802917a:	ee35 7a87 	vadd.f32	s14, s11, s14
 802917e:	edc6 3a01 	vstr	s7, [r6, #4]
 8029182:	ee76 6a86 	vadd.f32	s13, s13, s12
 8029186:	ee77 7a67 	vsub.f32	s15, s14, s15
 802918a:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802918e:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 8029192:	ee67 5a86 	vmul.f32	s11, s15, s12
 8029196:	ee26 5a87 	vmul.f32	s10, s13, s14
 802919a:	ee72 2a62 	vsub.f32	s5, s4, s5
 802919e:	ee30 1ac1 	vsub.f32	s2, s1, s2
 80291a2:	ee72 2ae1 	vsub.f32	s5, s5, s3
 80291a6:	ee75 5a25 	vadd.f32	s11, s10, s11
 80291aa:	ee62 0a86 	vmul.f32	s1, s5, s12
 80291ae:	ee66 6a86 	vmul.f32	s13, s13, s12
 80291b2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80291b6:	ee21 6a06 	vmul.f32	s12, s2, s12
 80291ba:	ee62 2a87 	vmul.f32	s5, s5, s14
 80291be:	ee21 1a07 	vmul.f32	s2, s2, s14
 80291c2:	ee15 aa90 	vmov	sl, s11
 80291c6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80291ca:	f840 ab08 	str.w	sl, [r0], #8
 80291ce:	ee30 1ac1 	vsub.f32	s2, s1, s2
 80291d2:	ee76 2a22 	vadd.f32	s5, s12, s5
 80291d6:	f1b9 0901 	subs.w	r9, r9, #1
 80291da:	ed40 7a01 	vstr	s15, [r0, #-4]
 80291de:	f105 0508 	add.w	r5, r5, #8
 80291e2:	ed83 1a02 	vstr	s2, [r3, #8]
 80291e6:	edc3 2a01 	vstr	s5, [r3, #4]
 80291ea:	f108 0808 	add.w	r8, r8, #8
 80291ee:	f1a2 0208 	sub.w	r2, r2, #8
 80291f2:	f10c 0c10 	add.w	ip, ip, #16
 80291f6:	f104 0408 	add.w	r4, r4, #8
 80291fa:	f10e 0e18 	add.w	lr, lr, #24
 80291fe:	f1a3 0308 	sub.w	r3, r3, #8
 8029202:	f47f aefc 	bne.w	8028ffe <arm_cfft_radix8by4_f32+0x13e>
 8029206:	9908      	ldr	r1, [sp, #32]
 8029208:	9802      	ldr	r0, [sp, #8]
 802920a:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802920e:	00cb      	lsls	r3, r1, #3
 8029210:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 8029214:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8029218:	9102      	str	r1, [sp, #8]
 802921a:	9904      	ldr	r1, [sp, #16]
 802921c:	4419      	add	r1, r3
 802921e:	9104      	str	r1, [sp, #16]
 8029220:	9905      	ldr	r1, [sp, #20]
 8029222:	4419      	add	r1, r3
 8029224:	9105      	str	r1, [sp, #20]
 8029226:	9907      	ldr	r1, [sp, #28]
 8029228:	449b      	add	fp, r3
 802922a:	4419      	add	r1, r3
 802922c:	449a      	add	sl, r3
 802922e:	9b06      	ldr	r3, [sp, #24]
 8029230:	9107      	str	r1, [sp, #28]
 8029232:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8029236:	9306      	str	r3, [sp, #24]
 8029238:	9a04      	ldr	r2, [sp, #16]
 802923a:	9807      	ldr	r0, [sp, #28]
 802923c:	edd2 3a00 	vldr	s7, [r2]
 8029240:	ed90 4a00 	vldr	s8, [r0]
 8029244:	eddb 7a00 	vldr	s15, [fp]
 8029248:	ed9a 3a00 	vldr	s6, [sl]
 802924c:	edd2 4a01 	vldr	s9, [r2, #4]
 8029250:	ed90 7a01 	vldr	s14, [r0, #4]
 8029254:	ed9b 2a01 	vldr	s4, [fp, #4]
 8029258:	edda 5a01 	vldr	s11, [sl, #4]
 802925c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8029260:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8029262:	ee73 6a84 	vadd.f32	s13, s7, s8
 8029266:	ee34 6a87 	vadd.f32	s12, s9, s14
 802926a:	ee36 5aa7 	vadd.f32	s10, s13, s15
 802926e:	ee34 7ac7 	vsub.f32	s14, s9, s14
 8029272:	ee33 5a05 	vadd.f32	s10, s6, s10
 8029276:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802927a:	ed82 5a00 	vstr	s10, [r2]
 802927e:	ed9b 5a01 	vldr	s10, [fp, #4]
 8029282:	edda 4a01 	vldr	s9, [sl, #4]
 8029286:	ee36 5a05 	vadd.f32	s10, s12, s10
 802928a:	ee72 3a04 	vadd.f32	s7, s4, s8
 802928e:	ee35 5a24 	vadd.f32	s10, s10, s9
 8029292:	ee77 4a67 	vsub.f32	s9, s14, s15
 8029296:	ed82 5a01 	vstr	s10, [r2, #4]
 802929a:	9a05      	ldr	r2, [sp, #20]
 802929c:	ee34 5a83 	vadd.f32	s10, s9, s6
 80292a0:	edd2 1a00 	vldr	s3, [r2]
 80292a4:	edd2 2a01 	vldr	s5, [r2, #4]
 80292a8:	9a02      	ldr	r2, [sp, #8]
 80292aa:	ee73 3ae5 	vsub.f32	s7, s7, s11
 80292ae:	ee36 6a42 	vsub.f32	s12, s12, s4
 80292b2:	ee63 4aa1 	vmul.f32	s9, s7, s3
 80292b6:	ee63 3aa2 	vmul.f32	s7, s7, s5
 80292ba:	ee65 2a22 	vmul.f32	s5, s10, s5
 80292be:	ee25 5a21 	vmul.f32	s10, s10, s3
 80292c2:	ee74 2aa2 	vadd.f32	s5, s9, s5
 80292c6:	ee35 5a63 	vsub.f32	s10, s10, s7
 80292ca:	ee76 6ae7 	vsub.f32	s13, s13, s15
 80292ce:	edcb 2a00 	vstr	s5, [fp]
 80292d2:	ed8b 5a01 	vstr	s10, [fp, #4]
 80292d6:	edd2 3a01 	vldr	s7, [r2, #4]
 80292da:	ed92 5a00 	vldr	s10, [r2]
 80292de:	9a06      	ldr	r2, [sp, #24]
 80292e0:	ee76 6ac3 	vsub.f32	s13, s13, s6
 80292e4:	ee36 6a65 	vsub.f32	s12, s12, s11
 80292e8:	ee66 4a85 	vmul.f32	s9, s13, s10
 80292ec:	ee26 5a05 	vmul.f32	s10, s12, s10
 80292f0:	ee66 6aa3 	vmul.f32	s13, s13, s7
 80292f4:	ee26 6a23 	vmul.f32	s12, s12, s7
 80292f8:	ee75 6a66 	vsub.f32	s13, s10, s13
 80292fc:	ee34 6a86 	vadd.f32	s12, s9, s12
 8029300:	ee34 4a42 	vsub.f32	s8, s8, s4
 8029304:	ee37 7a27 	vadd.f32	s14, s14, s15
 8029308:	edc0 6a01 	vstr	s13, [r0, #4]
 802930c:	ed80 6a00 	vstr	s12, [r0]
 8029310:	ed92 6a01 	vldr	s12, [r2, #4]
 8029314:	9803      	ldr	r0, [sp, #12]
 8029316:	ee77 7a43 	vsub.f32	s15, s14, s6
 802931a:	ee75 5a84 	vadd.f32	s11, s11, s8
 802931e:	ed92 7a00 	vldr	s14, [r2]
 8029322:	ee65 6a87 	vmul.f32	s13, s11, s14
 8029326:	ee27 7a87 	vmul.f32	s14, s15, s14
 802932a:	ee65 5a86 	vmul.f32	s11, s11, s12
 802932e:	ee67 7a86 	vmul.f32	s15, s15, s12
 8029332:	ee77 5a65 	vsub.f32	s11, s14, s11
 8029336:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802933a:	edca 5a01 	vstr	s11, [sl, #4]
 802933e:	edca 7a00 	vstr	s15, [sl]
 8029342:	6872      	ldr	r2, [r6, #4]
 8029344:	4621      	mov	r1, r4
 8029346:	2304      	movs	r3, #4
 8029348:	f000 f97a 	bl	8029640 <arm_radix8_butterfly_f32>
 802934c:	9809      	ldr	r0, [sp, #36]	; 0x24
 802934e:	6872      	ldr	r2, [r6, #4]
 8029350:	4621      	mov	r1, r4
 8029352:	2304      	movs	r3, #4
 8029354:	f000 f974 	bl	8029640 <arm_radix8_butterfly_f32>
 8029358:	980a      	ldr	r0, [sp, #40]	; 0x28
 802935a:	6872      	ldr	r2, [r6, #4]
 802935c:	4621      	mov	r1, r4
 802935e:	2304      	movs	r3, #4
 8029360:	f000 f96e 	bl	8029640 <arm_radix8_butterfly_f32>
 8029364:	9801      	ldr	r0, [sp, #4]
 8029366:	6872      	ldr	r2, [r6, #4]
 8029368:	4621      	mov	r1, r4
 802936a:	2304      	movs	r3, #4
 802936c:	b00f      	add	sp, #60	; 0x3c
 802936e:	ecbd 8b0a 	vpop	{d8-d12}
 8029372:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029376:	f000 b963 	b.w	8029640 <arm_radix8_butterfly_f32>
 802937a:	bf00      	nop

0802937c <arm_cfft_f32>:
 802937c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029380:	2a01      	cmp	r2, #1
 8029382:	4606      	mov	r6, r0
 8029384:	4617      	mov	r7, r2
 8029386:	460c      	mov	r4, r1
 8029388:	4698      	mov	r8, r3
 802938a:	8805      	ldrh	r5, [r0, #0]
 802938c:	d054      	beq.n	8029438 <arm_cfft_f32+0xbc>
 802938e:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8029392:	d04c      	beq.n	802942e <arm_cfft_f32+0xb2>
 8029394:	d916      	bls.n	80293c4 <arm_cfft_f32+0x48>
 8029396:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802939a:	d01a      	beq.n	80293d2 <arm_cfft_f32+0x56>
 802939c:	d95c      	bls.n	8029458 <arm_cfft_f32+0xdc>
 802939e:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 80293a2:	d044      	beq.n	802942e <arm_cfft_f32+0xb2>
 80293a4:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 80293a8:	d105      	bne.n	80293b6 <arm_cfft_f32+0x3a>
 80293aa:	4620      	mov	r0, r4
 80293ac:	4629      	mov	r1, r5
 80293ae:	6872      	ldr	r2, [r6, #4]
 80293b0:	2301      	movs	r3, #1
 80293b2:	f000 f945 	bl	8029640 <arm_radix8_butterfly_f32>
 80293b6:	f1b8 0f00 	cmp.w	r8, #0
 80293ba:	d111      	bne.n	80293e0 <arm_cfft_f32+0x64>
 80293bc:	2f01      	cmp	r7, #1
 80293be:	d016      	beq.n	80293ee <arm_cfft_f32+0x72>
 80293c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80293c4:	2d20      	cmp	r5, #32
 80293c6:	d032      	beq.n	802942e <arm_cfft_f32+0xb2>
 80293c8:	d94a      	bls.n	8029460 <arm_cfft_f32+0xe4>
 80293ca:	2d40      	cmp	r5, #64	; 0x40
 80293cc:	d0ed      	beq.n	80293aa <arm_cfft_f32+0x2e>
 80293ce:	2d80      	cmp	r5, #128	; 0x80
 80293d0:	d1f1      	bne.n	80293b6 <arm_cfft_f32+0x3a>
 80293d2:	4630      	mov	r0, r6
 80293d4:	4621      	mov	r1, r4
 80293d6:	f7ff fca1 	bl	8028d1c <arm_cfft_radix8by2_f32>
 80293da:	f1b8 0f00 	cmp.w	r8, #0
 80293de:	d0ed      	beq.n	80293bc <arm_cfft_f32+0x40>
 80293e0:	4620      	mov	r0, r4
 80293e2:	89b1      	ldrh	r1, [r6, #12]
 80293e4:	68b2      	ldr	r2, [r6, #8]
 80293e6:	f7d6 ff03 	bl	80001f0 <arm_bitreversal_32>
 80293ea:	2f01      	cmp	r7, #1
 80293ec:	d1e8      	bne.n	80293c0 <arm_cfft_f32+0x44>
 80293ee:	ee07 5a90 	vmov	s15, r5
 80293f2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80293f6:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80293fa:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 80293fe:	2d00      	cmp	r5, #0
 8029400:	d0de      	beq.n	80293c0 <arm_cfft_f32+0x44>
 8029402:	f104 0108 	add.w	r1, r4, #8
 8029406:	2300      	movs	r3, #0
 8029408:	3301      	adds	r3, #1
 802940a:	429d      	cmp	r5, r3
 802940c:	f101 0108 	add.w	r1, r1, #8
 8029410:	ed11 7a04 	vldr	s14, [r1, #-16]
 8029414:	ed51 7a03 	vldr	s15, [r1, #-12]
 8029418:	ee27 7a26 	vmul.f32	s14, s14, s13
 802941c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8029420:	ed01 7a04 	vstr	s14, [r1, #-16]
 8029424:	ed41 7a03 	vstr	s15, [r1, #-12]
 8029428:	d1ee      	bne.n	8029408 <arm_cfft_f32+0x8c>
 802942a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802942e:	4630      	mov	r0, r6
 8029430:	4621      	mov	r1, r4
 8029432:	f7ff fd45 	bl	8028ec0 <arm_cfft_radix8by4_f32>
 8029436:	e7be      	b.n	80293b6 <arm_cfft_f32+0x3a>
 8029438:	b1ad      	cbz	r5, 8029466 <arm_cfft_f32+0xea>
 802943a:	f101 030c 	add.w	r3, r1, #12
 802943e:	2200      	movs	r2, #0
 8029440:	ed53 7a02 	vldr	s15, [r3, #-8]
 8029444:	3201      	adds	r2, #1
 8029446:	eef1 7a67 	vneg.f32	s15, s15
 802944a:	4295      	cmp	r5, r2
 802944c:	ed43 7a02 	vstr	s15, [r3, #-8]
 8029450:	f103 0308 	add.w	r3, r3, #8
 8029454:	d1f4      	bne.n	8029440 <arm_cfft_f32+0xc4>
 8029456:	e79a      	b.n	802938e <arm_cfft_f32+0x12>
 8029458:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802945c:	d0a5      	beq.n	80293aa <arm_cfft_f32+0x2e>
 802945e:	e7aa      	b.n	80293b6 <arm_cfft_f32+0x3a>
 8029460:	2d10      	cmp	r5, #16
 8029462:	d0b6      	beq.n	80293d2 <arm_cfft_f32+0x56>
 8029464:	e7a7      	b.n	80293b6 <arm_cfft_f32+0x3a>
 8029466:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802946a:	d894      	bhi.n	8029396 <arm_cfft_f32+0x1a>
 802946c:	e7aa      	b.n	80293c4 <arm_cfft_f32+0x48>
 802946e:	bf00      	nop

08029470 <arm_cmplx_mag_f32>:
 8029470:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029474:	ea5f 0892 	movs.w	r8, r2, lsr #2
 8029478:	b084      	sub	sp, #16
 802947a:	d07f      	beq.n	802957c <arm_cmplx_mag_f32+0x10c>
 802947c:	2700      	movs	r7, #0
 802947e:	f100 0420 	add.w	r4, r0, #32
 8029482:	f101 0510 	add.w	r5, r1, #16
 8029486:	4646      	mov	r6, r8
 8029488:	e05a      	b.n	8029540 <arm_cmplx_mag_f32+0xd0>
 802948a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802948e:	eeb4 0a40 	vcmp.f32	s0, s0
 8029492:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029496:	f040 80a4 	bne.w	80295e2 <arm_cmplx_mag_f32+0x172>
 802949a:	ed05 0a04 	vstr	s0, [r5, #-16]
 802949e:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 80294a2:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 80294a6:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80294aa:	ee20 0a00 	vmul.f32	s0, s0, s0
 80294ae:	ee77 7a80 	vadd.f32	s15, s15, s0
 80294b2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80294b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80294ba:	f2c0 808f 	blt.w	80295dc <arm_cmplx_mag_f32+0x16c>
 80294be:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80294c2:	eeb4 0a40 	vcmp.f32	s0, s0
 80294c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80294ca:	f040 80af 	bne.w	802962c <arm_cmplx_mag_f32+0x1bc>
 80294ce:	ed05 0a03 	vstr	s0, [r5, #-12]
 80294d2:	ed54 7a04 	vldr	s15, [r4, #-16]
 80294d6:	ed14 0a03 	vldr	s0, [r4, #-12]
 80294da:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80294de:	ee20 0a00 	vmul.f32	s0, s0, s0
 80294e2:	ee77 7a80 	vadd.f32	s15, s15, s0
 80294e6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80294ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80294ee:	db72      	blt.n	80295d6 <arm_cmplx_mag_f32+0x166>
 80294f0:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80294f4:	eeb4 0a40 	vcmp.f32	s0, s0
 80294f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80294fc:	f040 808c 	bne.w	8029618 <arm_cmplx_mag_f32+0x1a8>
 8029500:	ed05 0a02 	vstr	s0, [r5, #-8]
 8029504:	ed54 7a02 	vldr	s15, [r4, #-8]
 8029508:	ed14 0a01 	vldr	s0, [r4, #-4]
 802950c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029510:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029514:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029518:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802951c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029520:	db20      	blt.n	8029564 <arm_cmplx_mag_f32+0xf4>
 8029522:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029526:	eeb4 0a40 	vcmp.f32	s0, s0
 802952a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802952e:	d169      	bne.n	8029604 <arm_cmplx_mag_f32+0x194>
 8029530:	3e01      	subs	r6, #1
 8029532:	ed05 0a01 	vstr	s0, [r5, #-4]
 8029536:	f104 0420 	add.w	r4, r4, #32
 802953a:	f105 0510 	add.w	r5, r5, #16
 802953e:	d019      	beq.n	8029574 <arm_cmplx_mag_f32+0x104>
 8029540:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 8029544:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 8029548:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802954c:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029550:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029554:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029558:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802955c:	da95      	bge.n	802948a <arm_cmplx_mag_f32+0x1a>
 802955e:	f845 7c10 	str.w	r7, [r5, #-16]
 8029562:	e79c      	b.n	802949e <arm_cmplx_mag_f32+0x2e>
 8029564:	3e01      	subs	r6, #1
 8029566:	f845 7c04 	str.w	r7, [r5, #-4]
 802956a:	f104 0420 	add.w	r4, r4, #32
 802956e:	f105 0510 	add.w	r5, r5, #16
 8029572:	d1e5      	bne.n	8029540 <arm_cmplx_mag_f32+0xd0>
 8029574:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 8029578:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802957c:	f012 0503 	ands.w	r5, r2, #3
 8029580:	d026      	beq.n	80295d0 <arm_cmplx_mag_f32+0x160>
 8029582:	2600      	movs	r6, #0
 8029584:	f100 0408 	add.w	r4, r0, #8
 8029588:	e00c      	b.n	80295a4 <arm_cmplx_mag_f32+0x134>
 802958a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802958e:	eeb4 0a40 	vcmp.f32	s0, s0
 8029592:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029596:	d12e      	bne.n	80295f6 <arm_cmplx_mag_f32+0x186>
 8029598:	3d01      	subs	r5, #1
 802959a:	ed01 0a01 	vstr	s0, [r1, #-4]
 802959e:	f104 0408 	add.w	r4, r4, #8
 80295a2:	d015      	beq.n	80295d0 <arm_cmplx_mag_f32+0x160>
 80295a4:	ed54 7a02 	vldr	s15, [r4, #-8]
 80295a8:	ed14 0a01 	vldr	s0, [r4, #-4]
 80295ac:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80295b0:	ee20 0a00 	vmul.f32	s0, s0, s0
 80295b4:	3104      	adds	r1, #4
 80295b6:	ee77 7a80 	vadd.f32	s15, s15, s0
 80295ba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80295be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80295c2:	dae2      	bge.n	802958a <arm_cmplx_mag_f32+0x11a>
 80295c4:	3d01      	subs	r5, #1
 80295c6:	f841 6c04 	str.w	r6, [r1, #-4]
 80295ca:	f104 0408 	add.w	r4, r4, #8
 80295ce:	d1e9      	bne.n	80295a4 <arm_cmplx_mag_f32+0x134>
 80295d0:	b004      	add	sp, #16
 80295d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80295d6:	f845 7c08 	str.w	r7, [r5, #-8]
 80295da:	e793      	b.n	8029504 <arm_cmplx_mag_f32+0x94>
 80295dc:	f845 7c0c 	str.w	r7, [r5, #-12]
 80295e0:	e777      	b.n	80294d2 <arm_cmplx_mag_f32+0x62>
 80295e2:	eeb0 0a67 	vmov.f32	s0, s15
 80295e6:	9203      	str	r2, [sp, #12]
 80295e8:	9102      	str	r1, [sp, #8]
 80295ea:	9001      	str	r0, [sp, #4]
 80295ec:	f000 fb38 	bl	8029c60 <sqrtf>
 80295f0:	a801      	add	r0, sp, #4
 80295f2:	c807      	ldmia	r0, {r0, r1, r2}
 80295f4:	e751      	b.n	802949a <arm_cmplx_mag_f32+0x2a>
 80295f6:	eeb0 0a67 	vmov.f32	s0, s15
 80295fa:	9101      	str	r1, [sp, #4]
 80295fc:	f000 fb30 	bl	8029c60 <sqrtf>
 8029600:	9901      	ldr	r1, [sp, #4]
 8029602:	e7c9      	b.n	8029598 <arm_cmplx_mag_f32+0x128>
 8029604:	eeb0 0a67 	vmov.f32	s0, s15
 8029608:	9203      	str	r2, [sp, #12]
 802960a:	9102      	str	r1, [sp, #8]
 802960c:	9001      	str	r0, [sp, #4]
 802960e:	f000 fb27 	bl	8029c60 <sqrtf>
 8029612:	a801      	add	r0, sp, #4
 8029614:	c807      	ldmia	r0, {r0, r1, r2}
 8029616:	e78b      	b.n	8029530 <arm_cmplx_mag_f32+0xc0>
 8029618:	eeb0 0a67 	vmov.f32	s0, s15
 802961c:	9203      	str	r2, [sp, #12]
 802961e:	9102      	str	r1, [sp, #8]
 8029620:	9001      	str	r0, [sp, #4]
 8029622:	f000 fb1d 	bl	8029c60 <sqrtf>
 8029626:	a801      	add	r0, sp, #4
 8029628:	c807      	ldmia	r0, {r0, r1, r2}
 802962a:	e769      	b.n	8029500 <arm_cmplx_mag_f32+0x90>
 802962c:	eeb0 0a67 	vmov.f32	s0, s15
 8029630:	9203      	str	r2, [sp, #12]
 8029632:	9102      	str	r1, [sp, #8]
 8029634:	9001      	str	r0, [sp, #4]
 8029636:	f000 fb13 	bl	8029c60 <sqrtf>
 802963a:	a801      	add	r0, sp, #4
 802963c:	c807      	ldmia	r0, {r0, r1, r2}
 802963e:	e746      	b.n	80294ce <arm_cmplx_mag_f32+0x5e>

08029640 <arm_radix8_butterfly_f32>:
 8029640:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029644:	ed2d 8b10 	vpush	{d8-d15}
 8029648:	b09d      	sub	sp, #116	; 0x74
 802964a:	461c      	mov	r4, r3
 802964c:	ed9f bac8 	vldr	s22, [pc, #800]	; 8029970 <arm_radix8_butterfly_f32+0x330>
 8029650:	921a      	str	r2, [sp, #104]	; 0x68
 8029652:	1d03      	adds	r3, r0, #4
 8029654:	4682      	mov	sl, r0
 8029656:	4689      	mov	r9, r1
 8029658:	468b      	mov	fp, r1
 802965a:	931b      	str	r3, [sp, #108]	; 0x6c
 802965c:	9400      	str	r4, [sp, #0]
 802965e:	469e      	mov	lr, r3
 8029660:	ea4f 03db 	mov.w	r3, fp, lsr #3
 8029664:	005a      	lsls	r2, r3, #1
 8029666:	18d6      	adds	r6, r2, r3
 8029668:	18f5      	adds	r5, r6, r3
 802966a:	9203      	str	r2, [sp, #12]
 802966c:	195a      	adds	r2, r3, r5
 802966e:	18d0      	adds	r0, r2, r3
 8029670:	00df      	lsls	r7, r3, #3
 8029672:	1819      	adds	r1, r3, r0
 8029674:	463c      	mov	r4, r7
 8029676:	9701      	str	r7, [sp, #4]
 8029678:	4457      	add	r7, sl
 802967a:	930c      	str	r3, [sp, #48]	; 0x30
 802967c:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 8029680:	011b      	lsls	r3, r3, #4
 8029682:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 8029686:	eb07 0c04 	add.w	ip, r7, r4
 802968a:	9c00      	ldr	r4, [sp, #0]
 802968c:	9302      	str	r3, [sp, #8]
 802968e:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 8029692:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 8029696:	3204      	adds	r2, #4
 8029698:	3104      	adds	r1, #4
 802969a:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802969e:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80296a2:	f04f 0800 	mov.w	r8, #0
 80296a6:	eddc 7a00 	vldr	s15, [ip]
 80296aa:	edd7 6a00 	vldr	s13, [r7]
 80296ae:	edd6 3a00 	vldr	s7, [r6]
 80296b2:	ed5e aa01 	vldr	s21, [lr, #-4]
 80296b6:	edd5 4a00 	vldr	s9, [r5]
 80296ba:	ed90 2a00 	vldr	s4, [r0]
 80296be:	ed12 7a01 	vldr	s14, [r2, #-4]
 80296c2:	ed51 0a01 	vldr	s1, [r1, #-4]
 80296c6:	ee77 8a82 	vadd.f32	s17, s15, s4
 80296ca:	ee33 4aa0 	vadd.f32	s8, s7, s1
 80296ce:	ee76 1a87 	vadd.f32	s3, s13, s14
 80296d2:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 80296d6:	ee31 6a84 	vadd.f32	s12, s3, s8
 80296da:	ee33 5a28 	vadd.f32	s10, s6, s17
 80296de:	ee36 7ac7 	vsub.f32	s14, s13, s14
 80296e2:	ee75 6a06 	vadd.f32	s13, s10, s12
 80296e6:	ee35 5a46 	vsub.f32	s10, s10, s12
 80296ea:	ed4e 6a01 	vstr	s13, [lr, #-4]
 80296ee:	ed85 5a00 	vstr	s10, [r5]
 80296f2:	ed96 1a01 	vldr	s2, [r6, #4]
 80296f6:	edd7 5a01 	vldr	s11, [r7, #4]
 80296fa:	ed92 aa00 	vldr	s20, [r2]
 80296fe:	ed91 6a00 	vldr	s12, [r1]
 8029702:	ed9e 9a00 	vldr	s18, [lr]
 8029706:	ed95 5a01 	vldr	s10, [r5, #4]
 802970a:	eddc 6a01 	vldr	s13, [ip, #4]
 802970e:	edd0 9a01 	vldr	s19, [r0, #4]
 8029712:	ee73 0ae0 	vsub.f32	s1, s7, s1
 8029716:	ee71 2a46 	vsub.f32	s5, s2, s12
 802971a:	ee75 3aca 	vsub.f32	s7, s11, s20
 802971e:	ee37 0a60 	vsub.f32	s0, s14, s1
 8029722:	ee33 8aa2 	vadd.f32	s16, s7, s5
 8029726:	ee37 7a20 	vadd.f32	s14, s14, s1
 802972a:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802972e:	ee37 2ac2 	vsub.f32	s4, s15, s4
 8029732:	ee79 3a05 	vadd.f32	s7, s18, s10
 8029736:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802973a:	ee39 5a45 	vsub.f32	s10, s18, s10
 802973e:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 8029742:	ee36 9aa9 	vadd.f32	s18, s13, s19
 8029746:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802974a:	ee31 6a06 	vadd.f32	s12, s2, s12
 802974e:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8029752:	ee28 8a0b 	vmul.f32	s16, s16, s22
 8029756:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802975a:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802975e:	ee33 3a68 	vsub.f32	s6, s6, s17
 8029762:	ee36 0a88 	vadd.f32	s0, s13, s16
 8029766:	ee75 8a86 	vadd.f32	s17, s11, s12
 802976a:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802976e:	ee71 1ac4 	vsub.f32	s3, s3, s8
 8029772:	ee75 6a62 	vsub.f32	s13, s10, s5
 8029776:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802977a:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802977e:	ee33 1a89 	vadd.f32	s2, s7, s18
 8029782:	ee74 5ae0 	vsub.f32	s11, s9, s1
 8029786:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802978a:	ee75 4a22 	vadd.f32	s9, s10, s5
 802978e:	ee32 5a27 	vadd.f32	s10, s4, s15
 8029792:	ee72 7a67 	vsub.f32	s15, s4, s15
 8029796:	ee33 8a06 	vadd.f32	s16, s6, s12
 802979a:	ee75 2a87 	vadd.f32	s5, s11, s14
 802979e:	ee31 9a28 	vadd.f32	s18, s2, s17
 80297a2:	ee33 6a46 	vsub.f32	s12, s6, s12
 80297a6:	ee74 0a61 	vsub.f32	s1, s8, s3
 80297aa:	ee33 2a80 	vadd.f32	s4, s7, s0
 80297ae:	ee35 7ac7 	vsub.f32	s14, s11, s14
 80297b2:	ee34 3ac5 	vsub.f32	s6, s9, s10
 80297b6:	ee76 5ae7 	vsub.f32	s11, s13, s15
 80297ba:	ee31 1a68 	vsub.f32	s2, s2, s17
 80297be:	ee34 4a21 	vadd.f32	s8, s8, s3
 80297c2:	ee73 3ac0 	vsub.f32	s7, s7, s0
 80297c6:	ee74 4a85 	vadd.f32	s9, s9, s10
 80297ca:	ee76 6aa7 	vadd.f32	s13, s13, s15
 80297ce:	44d8      	add	r8, fp
 80297d0:	45c1      	cmp	r9, r8
 80297d2:	ed8e 9a00 	vstr	s18, [lr]
 80297d6:	ed85 1a01 	vstr	s2, [r5, #4]
 80297da:	449e      	add	lr, r3
 80297dc:	ed8c 8a00 	vstr	s16, [ip]
 80297e0:	441d      	add	r5, r3
 80297e2:	ed80 6a00 	vstr	s12, [r0]
 80297e6:	edcc 0a01 	vstr	s1, [ip, #4]
 80297ea:	ed80 4a01 	vstr	s8, [r0, #4]
 80297ee:	449c      	add	ip, r3
 80297f0:	ed87 2a00 	vstr	s4, [r7]
 80297f4:	4418      	add	r0, r3
 80297f6:	ed41 3a01 	vstr	s7, [r1, #-4]
 80297fa:	ed42 2a01 	vstr	s5, [r2, #-4]
 80297fe:	ed86 7a00 	vstr	s14, [r6]
 8029802:	ed87 3a01 	vstr	s6, [r7, #4]
 8029806:	edc1 4a00 	vstr	s9, [r1]
 802980a:	441f      	add	r7, r3
 802980c:	edc2 5a00 	vstr	s11, [r2]
 8029810:	4419      	add	r1, r3
 8029812:	edc6 6a01 	vstr	s13, [r6, #4]
 8029816:	441a      	add	r2, r3
 8029818:	441e      	add	r6, r3
 802981a:	f63f af44 	bhi.w	80296a6 <arm_radix8_butterfly_f32+0x66>
 802981e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029820:	2907      	cmp	r1, #7
 8029822:	4620      	mov	r0, r4
 8029824:	f240 81e9 	bls.w	8029bfa <arm_radix8_butterfly_f32+0x5ba>
 8029828:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802982c:	193e      	adds	r6, r7, r4
 802982e:	1935      	adds	r5, r6, r4
 8029830:	9c03      	ldr	r4, [sp, #12]
 8029832:	9000      	str	r0, [sp, #0]
 8029834:	4622      	mov	r2, r4
 8029836:	3201      	adds	r2, #1
 8029838:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802983c:	9900      	ldr	r1, [sp, #0]
 802983e:	1828      	adds	r0, r5, r0
 8029840:	eb00 0e01 	add.w	lr, r0, r1
 8029844:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029846:	440a      	add	r2, r1
 8029848:	eb04 0c01 	add.w	ip, r4, r1
 802984c:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 8029850:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 8029854:	9a00      	ldr	r2, [sp, #0]
 8029856:	940f      	str	r4, [sp, #60]	; 0x3c
 8029858:	00ed      	lsls	r5, r5, #3
 802985a:	9511      	str	r5, [sp, #68]	; 0x44
 802985c:	00d5      	lsls	r5, r2, #3
 802985e:	950d      	str	r5, [sp, #52]	; 0x34
 8029860:	9d01      	ldr	r5, [sp, #4]
 8029862:	3508      	adds	r5, #8
 8029864:	9516      	str	r5, [sp, #88]	; 0x58
 8029866:	9d02      	ldr	r5, [sp, #8]
 8029868:	3508      	adds	r5, #8
 802986a:	0114      	lsls	r4, r2, #4
 802986c:	9517      	str	r5, [sp, #92]	; 0x5c
 802986e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8029870:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8029872:	940e      	str	r4, [sp, #56]	; 0x38
 8029874:	00c0      	lsls	r0, r0, #3
 8029876:	9010      	str	r0, [sp, #64]	; 0x40
 8029878:	18aa      	adds	r2, r5, r2
 802987a:	9207      	str	r2, [sp, #28]
 802987c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802987e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8029880:	18aa      	adds	r2, r5, r2
 8029882:	9208      	str	r2, [sp, #32]
 8029884:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8029886:	18aa      	adds	r2, r5, r2
 8029888:	9209      	str	r2, [sp, #36]	; 0x24
 802988a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802988e:	f10e 0204 	add.w	r2, lr, #4
 8029892:	920a      	str	r2, [sp, #40]	; 0x28
 8029894:	00c9      	lsls	r1, r1, #3
 8029896:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8029898:	310c      	adds	r1, #12
 802989a:	00f6      	lsls	r6, r6, #3
 802989c:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 80298a0:	9114      	str	r1, [sp, #80]	; 0x50
 80298a2:	18a9      	adds	r1, r5, r2
 80298a4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80298a6:	9612      	str	r6, [sp, #72]	; 0x48
 80298a8:	00ff      	lsls	r7, r7, #3
 80298aa:	19ae      	adds	r6, r5, r6
 80298ac:	3008      	adds	r0, #8
 80298ae:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 80298b2:	9606      	str	r6, [sp, #24]
 80298b4:	9019      	str	r0, [sp, #100]	; 0x64
 80298b6:	18aa      	adds	r2, r5, r2
 80298b8:	0164      	lsls	r4, r4, #5
 80298ba:	19ee      	adds	r6, r5, r7
 80298bc:	f10c 000c 	add.w	r0, ip, #12
 80298c0:	9713      	str	r7, [sp, #76]	; 0x4c
 80298c2:	9604      	str	r6, [sp, #16]
 80298c4:	9015      	str	r0, [sp, #84]	; 0x54
 80298c6:	9103      	str	r1, [sp, #12]
 80298c8:	9205      	str	r2, [sp, #20]
 80298ca:	f104 0208 	add.w	r2, r4, #8
 80298ce:	9218      	str	r2, [sp, #96]	; 0x60
 80298d0:	f04f 0801 	mov.w	r8, #1
 80298d4:	2200      	movs	r2, #0
 80298d6:	f102 0108 	add.w	r1, r2, #8
 80298da:	460f      	mov	r7, r1
 80298dc:	910b      	str	r1, [sp, #44]	; 0x2c
 80298de:	9918      	ldr	r1, [sp, #96]	; 0x60
 80298e0:	188e      	adds	r6, r1, r2
 80298e2:	9916      	ldr	r1, [sp, #88]	; 0x58
 80298e4:	188d      	adds	r5, r1, r2
 80298e6:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80298e8:	188c      	adds	r4, r1, r2
 80298ea:	9919      	ldr	r1, [sp, #100]	; 0x64
 80298ec:	1888      	adds	r0, r1, r2
 80298ee:	9914      	ldr	r1, [sp, #80]	; 0x50
 80298f0:	eb01 0c02 	add.w	ip, r1, r2
 80298f4:	9915      	ldr	r1, [sp, #84]	; 0x54
 80298f6:	440a      	add	r2, r1
 80298f8:	9903      	ldr	r1, [sp, #12]
 80298fa:	edd1 fa00 	vldr	s31, [r1]
 80298fe:	9905      	ldr	r1, [sp, #20]
 8029900:	ed91 fa00 	vldr	s30, [r1]
 8029904:	9904      	ldr	r1, [sp, #16]
 8029906:	edd1 ea00 	vldr	s29, [r1]
 802990a:	9906      	ldr	r1, [sp, #24]
 802990c:	ed91 ea00 	vldr	s28, [r1]
 8029910:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029912:	edd1 da00 	vldr	s27, [r1]
 8029916:	9908      	ldr	r1, [sp, #32]
 8029918:	ed91 da00 	vldr	s26, [r1]
 802991c:	9907      	ldr	r1, [sp, #28]
 802991e:	edd1 ca00 	vldr	s25, [r1]
 8029922:	9903      	ldr	r1, [sp, #12]
 8029924:	ed91 ca01 	vldr	s24, [r1, #4]
 8029928:	9905      	ldr	r1, [sp, #20]
 802992a:	edd1 ba01 	vldr	s23, [r1, #4]
 802992e:	9904      	ldr	r1, [sp, #16]
 8029930:	edd1 aa01 	vldr	s21, [r1, #4]
 8029934:	9906      	ldr	r1, [sp, #24]
 8029936:	ed91 aa01 	vldr	s20, [r1, #4]
 802993a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802993c:	edd1 7a01 	vldr	s15, [r1, #4]
 8029940:	9908      	ldr	r1, [sp, #32]
 8029942:	edcd 7a00 	vstr	s15, [sp]
 8029946:	edd1 7a01 	vldr	s15, [r1, #4]
 802994a:	9907      	ldr	r1, [sp, #28]
 802994c:	edcd 7a01 	vstr	s15, [sp, #4]
 8029950:	edd1 7a01 	vldr	s15, [r1, #4]
 8029954:	eb0a 0e07 	add.w	lr, sl, r7
 8029958:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802995a:	edcd 7a02 	vstr	s15, [sp, #8]
 802995e:	eb0c 010a 	add.w	r1, ip, sl
 8029962:	4456      	add	r6, sl
 8029964:	4455      	add	r5, sl
 8029966:	4454      	add	r4, sl
 8029968:	4450      	add	r0, sl
 802996a:	4452      	add	r2, sl
 802996c:	46c4      	mov	ip, r8
 802996e:	e001      	b.n	8029974 <arm_radix8_butterfly_f32+0x334>
 8029970:	3f3504f3 	.word	0x3f3504f3
 8029974:	ed96 5a00 	vldr	s10, [r6]
 8029978:	ed52 9a01 	vldr	s19, [r2, #-4]
 802997c:	ed11 6a01 	vldr	s12, [r1, #-4]
 8029980:	edd0 7a00 	vldr	s15, [r0]
 8029984:	ed17 7a01 	vldr	s14, [r7, #-4]
 8029988:	edde 3a00 	vldr	s7, [lr]
 802998c:	ed94 3a00 	vldr	s6, [r4]
 8029990:	ed95 2a00 	vldr	s4, [r5]
 8029994:	ed9e 0a01 	vldr	s0, [lr, #4]
 8029998:	ee33 8a85 	vadd.f32	s16, s7, s10
 802999c:	ee32 1a06 	vadd.f32	s2, s4, s12
 80299a0:	ee33 4a29 	vadd.f32	s8, s6, s19
 80299a4:	ee77 4a87 	vadd.f32	s9, s15, s14
 80299a8:	ee78 1a04 	vadd.f32	s3, s16, s8
 80299ac:	ee71 6a24 	vadd.f32	s13, s2, s9
 80299b0:	ee32 2a46 	vsub.f32	s4, s4, s12
 80299b4:	ee31 6aa6 	vadd.f32	s12, s3, s13
 80299b8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80299bc:	ed8e 6a00 	vstr	s12, [lr]
 80299c0:	edd0 8a01 	vldr	s17, [r0, #4]
 80299c4:	ed95 9a01 	vldr	s18, [r5, #4]
 80299c8:	edd1 2a00 	vldr	s5, [r1]
 80299cc:	ed97 7a00 	vldr	s14, [r7]
 80299d0:	edd4 0a01 	vldr	s1, [r4, #4]
 80299d4:	ed96 6a01 	vldr	s12, [r6, #4]
 80299d8:	edd2 5a00 	vldr	s11, [r2]
 80299dc:	ee73 3ac5 	vsub.f32	s7, s7, s10
 80299e0:	ee33 3a69 	vsub.f32	s6, s6, s19
 80299e4:	ee39 5a62 	vsub.f32	s10, s18, s5
 80299e8:	ee78 9ac7 	vsub.f32	s19, s17, s14
 80299ec:	ee38 4a44 	vsub.f32	s8, s16, s8
 80299f0:	ee38 7a87 	vadd.f32	s14, s17, s14
 80299f4:	ee30 8aa5 	vadd.f32	s16, s1, s11
 80299f8:	ee79 2a22 	vadd.f32	s5, s18, s5
 80299fc:	ee75 8a69 	vsub.f32	s17, s10, s19
 8029a00:	ee32 9a27 	vadd.f32	s18, s4, s15
 8029a04:	ee35 5a29 	vadd.f32	s10, s10, s19
 8029a08:	ee72 7a67 	vsub.f32	s15, s4, s15
 8029a0c:	ee30 2a06 	vadd.f32	s4, s0, s12
 8029a10:	ee69 9a0b 	vmul.f32	s19, s18, s22
 8029a14:	ee70 5ae5 	vsub.f32	s11, s1, s11
 8029a18:	ee32 9a08 	vadd.f32	s18, s4, s16
 8029a1c:	ee68 8a8b 	vmul.f32	s17, s17, s22
 8029a20:	ee32 2a48 	vsub.f32	s4, s4, s16
 8029a24:	ee71 4a64 	vsub.f32	s9, s2, s9
 8029a28:	ee25 5a0b 	vmul.f32	s10, s10, s22
 8029a2c:	ee32 1a87 	vadd.f32	s2, s5, s14
 8029a30:	ee67 7a8b 	vmul.f32	s15, s15, s22
 8029a34:	ee72 2ac7 	vsub.f32	s5, s5, s14
 8029a38:	ee30 6a46 	vsub.f32	s12, s0, s12
 8029a3c:	ee73 0a29 	vadd.f32	s1, s6, s19
 8029a40:	ee36 0a28 	vadd.f32	s0, s12, s17
 8029a44:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029a48:	ee32 7a64 	vsub.f32	s14, s4, s9
 8029a4c:	ee73 9aa7 	vadd.f32	s19, s7, s15
 8029a50:	ee36 6a68 	vsub.f32	s12, s12, s17
 8029a54:	ee73 7ae7 	vsub.f32	s15, s7, s15
 8029a58:	ee75 8a85 	vadd.f32	s17, s11, s10
 8029a5c:	ee74 3a22 	vadd.f32	s7, s8, s5
 8029a60:	ee35 5ac5 	vsub.f32	s10, s11, s10
 8029a64:	ee71 6ae6 	vsub.f32	s13, s3, s13
 8029a68:	ee79 1a41 	vsub.f32	s3, s18, s2
 8029a6c:	ee39 8aa8 	vadd.f32	s16, s19, s17
 8029a70:	ee76 5a43 	vsub.f32	s11, s12, s6
 8029a74:	ee74 2a62 	vsub.f32	s5, s8, s5
 8029a78:	ee72 4a24 	vadd.f32	s9, s4, s9
 8029a7c:	ee30 4a60 	vsub.f32	s8, s0, s1
 8029a80:	ee79 8ae8 	vsub.f32	s17, s19, s17
 8029a84:	ee30 0a20 	vadd.f32	s0, s0, s1
 8029a88:	ee77 9a85 	vadd.f32	s19, s15, s10
 8029a8c:	ee36 6a03 	vadd.f32	s12, s12, s6
 8029a90:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8029a94:	ee2e 2a21 	vmul.f32	s4, s28, s3
 8029a98:	ee2e 5a26 	vmul.f32	s10, s28, s13
 8029a9c:	ee6f 0a23 	vmul.f32	s1, s30, s7
 8029aa0:	ee2a 3a21 	vmul.f32	s6, s20, s3
 8029aa4:	ee39 1a01 	vadd.f32	s2, s18, s2
 8029aa8:	ee6a 6a26 	vmul.f32	s13, s20, s13
 8029aac:	ee2b 9a87 	vmul.f32	s18, s23, s14
 8029ab0:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 8029ab4:	ee2f 7a07 	vmul.f32	s14, s30, s14
 8029ab8:	ee6f 1a84 	vmul.f32	s3, s31, s8
 8029abc:	ee35 3a03 	vadd.f32	s6, s10, s6
 8029ac0:	ee72 6a66 	vsub.f32	s13, s4, s13
 8029ac4:	ee2c 5a04 	vmul.f32	s10, s24, s8
 8029ac8:	ee2f 2a88 	vmul.f32	s4, s31, s16
 8029acc:	ed9d 4a02 	vldr	s8, [sp, #8]
 8029ad0:	ed8e 1a01 	vstr	s2, [lr, #4]
 8029ad4:	ee77 3a63 	vsub.f32	s7, s14, s7
 8029ad8:	ee2c 8a08 	vmul.f32	s16, s24, s16
 8029adc:	ed9d 7a01 	vldr	s14, [sp, #4]
 8029ae0:	ed86 3a00 	vstr	s6, [r6]
 8029ae4:	ee30 9a89 	vadd.f32	s18, s1, s18
 8029ae8:	ee32 2a05 	vadd.f32	s4, s4, s10
 8029aec:	ee6d 0a22 	vmul.f32	s1, s26, s5
 8029af0:	ee31 8ac8 	vsub.f32	s16, s3, s16
 8029af4:	ee67 2a22 	vmul.f32	s5, s14, s5
 8029af8:	ee64 1a00 	vmul.f32	s3, s8, s0
 8029afc:	ee27 7a24 	vmul.f32	s14, s14, s9
 8029b00:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 8029b04:	ee6d 4a24 	vmul.f32	s9, s26, s9
 8029b08:	ee64 8a28 	vmul.f32	s17, s8, s17
 8029b0c:	ed9d 4a00 	vldr	s8, [sp]
 8029b10:	edc6 6a01 	vstr	s13, [r6, #4]
 8029b14:	ee74 2ae2 	vsub.f32	s5, s9, s5
 8029b18:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 8029b1c:	ee64 9a29 	vmul.f32	s19, s8, s19
 8029b20:	ee24 4a25 	vmul.f32	s8, s8, s11
 8029b24:	ee30 7a87 	vadd.f32	s14, s1, s14
 8029b28:	ee74 4a84 	vadd.f32	s9, s9, s8
 8029b2c:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 8029b30:	ee2a 4a86 	vmul.f32	s8, s21, s12
 8029b34:	ee2c 0a80 	vmul.f32	s0, s25, s0
 8029b38:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 8029b3c:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 8029b40:	ee2e 6a86 	vmul.f32	s12, s29, s12
 8029b44:	ee75 1a21 	vadd.f32	s3, s10, s3
 8029b48:	ee30 0a68 	vsub.f32	s0, s0, s17
 8029b4c:	ee75 9ae9 	vsub.f32	s19, s11, s19
 8029b50:	ee70 0a84 	vadd.f32	s1, s1, s8
 8029b54:	ee36 6a67 	vsub.f32	s12, s12, s15
 8029b58:	44dc      	add	ip, fp
 8029b5a:	45e1      	cmp	r9, ip
 8029b5c:	ed84 9a00 	vstr	s18, [r4]
 8029b60:	edc4 3a01 	vstr	s7, [r4, #4]
 8029b64:	449e      	add	lr, r3
 8029b66:	ed02 7a01 	vstr	s14, [r2, #-4]
 8029b6a:	edc2 2a00 	vstr	s5, [r2]
 8029b6e:	441e      	add	r6, r3
 8029b70:	ed85 2a00 	vstr	s4, [r5]
 8029b74:	ed85 8a01 	vstr	s16, [r5, #4]
 8029b78:	441c      	add	r4, r3
 8029b7a:	ed47 1a01 	vstr	s3, [r7, #-4]
 8029b7e:	ed87 0a00 	vstr	s0, [r7]
 8029b82:	441a      	add	r2, r3
 8029b84:	ed41 4a01 	vstr	s9, [r1, #-4]
 8029b88:	edc1 9a00 	vstr	s19, [r1]
 8029b8c:	441d      	add	r5, r3
 8029b8e:	edc0 0a00 	vstr	s1, [r0]
 8029b92:	441f      	add	r7, r3
 8029b94:	ed80 6a01 	vstr	s12, [r0, #4]
 8029b98:	4419      	add	r1, r3
 8029b9a:	4418      	add	r0, r3
 8029b9c:	f63f aeea 	bhi.w	8029974 <arm_radix8_butterfly_f32+0x334>
 8029ba0:	9a03      	ldr	r2, [sp, #12]
 8029ba2:	990d      	ldr	r1, [sp, #52]	; 0x34
 8029ba4:	440a      	add	r2, r1
 8029ba6:	9203      	str	r2, [sp, #12]
 8029ba8:	990e      	ldr	r1, [sp, #56]	; 0x38
 8029baa:	9a05      	ldr	r2, [sp, #20]
 8029bac:	440a      	add	r2, r1
 8029bae:	9205      	str	r2, [sp, #20]
 8029bb0:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8029bb2:	9a04      	ldr	r2, [sp, #16]
 8029bb4:	440a      	add	r2, r1
 8029bb6:	9204      	str	r2, [sp, #16]
 8029bb8:	9912      	ldr	r1, [sp, #72]	; 0x48
 8029bba:	9a06      	ldr	r2, [sp, #24]
 8029bbc:	440a      	add	r2, r1
 8029bbe:	9206      	str	r2, [sp, #24]
 8029bc0:	9911      	ldr	r1, [sp, #68]	; 0x44
 8029bc2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029bc4:	440a      	add	r2, r1
 8029bc6:	9209      	str	r2, [sp, #36]	; 0x24
 8029bc8:	9910      	ldr	r1, [sp, #64]	; 0x40
 8029bca:	9a08      	ldr	r2, [sp, #32]
 8029bcc:	440a      	add	r2, r1
 8029bce:	9208      	str	r2, [sp, #32]
 8029bd0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8029bd2:	9a07      	ldr	r2, [sp, #28]
 8029bd4:	440a      	add	r2, r1
 8029bd6:	9207      	str	r2, [sp, #28]
 8029bd8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029bda:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8029bdc:	f108 0801 	add.w	r8, r8, #1
 8029be0:	3208      	adds	r2, #8
 8029be2:	4588      	cmp	r8, r1
 8029be4:	920a      	str	r2, [sp, #40]	; 0x28
 8029be6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8029be8:	f47f ae75 	bne.w	80298d6 <arm_radix8_butterfly_f32+0x296>
 8029bec:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8029bf0:	9300      	str	r3, [sp, #0]
 8029bf2:	46c3      	mov	fp, r8
 8029bf4:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8029bf8:	e532      	b.n	8029660 <arm_radix8_butterfly_f32+0x20>
 8029bfa:	b01d      	add	sp, #116	; 0x74
 8029bfc:	ecbd 8b10 	vpop	{d8-d15}
 8029c00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08029c04 <__aeabi_atexit>:
 8029c04:	460b      	mov	r3, r1
 8029c06:	4601      	mov	r1, r0
 8029c08:	4618      	mov	r0, r3
 8029c0a:	f000 bfc7 	b.w	802ab9c <__cxa_atexit>

08029c0e <_ZdlPvj>:
 8029c0e:	f000 b812 	b.w	8029c36 <_ZdlPv>

08029c12 <__cxa_guard_acquire>:
 8029c12:	6803      	ldr	r3, [r0, #0]
 8029c14:	07db      	lsls	r3, r3, #31
 8029c16:	d406      	bmi.n	8029c26 <__cxa_guard_acquire+0x14>
 8029c18:	7843      	ldrb	r3, [r0, #1]
 8029c1a:	b103      	cbz	r3, 8029c1e <__cxa_guard_acquire+0xc>
 8029c1c:	deff      	udf	#255	; 0xff
 8029c1e:	2301      	movs	r3, #1
 8029c20:	7043      	strb	r3, [r0, #1]
 8029c22:	4618      	mov	r0, r3
 8029c24:	4770      	bx	lr
 8029c26:	2000      	movs	r0, #0
 8029c28:	4770      	bx	lr

08029c2a <__cxa_guard_release>:
 8029c2a:	2301      	movs	r3, #1
 8029c2c:	6003      	str	r3, [r0, #0]
 8029c2e:	4770      	bx	lr

08029c30 <__cxa_pure_virtual>:
 8029c30:	b508      	push	{r3, lr}
 8029c32:	f000 f80f 	bl	8029c54 <_ZSt9terminatev>

08029c36 <_ZdlPv>:
 8029c36:	f000 befd 	b.w	802aa34 <free>

08029c3a <_ZN10__cxxabiv111__terminateEPFvvE>:
 8029c3a:	b508      	push	{r3, lr}
 8029c3c:	4780      	blx	r0
 8029c3e:	f000 fec5 	bl	802a9cc <abort>
	...

08029c44 <_ZSt13get_terminatev>:
 8029c44:	4b02      	ldr	r3, [pc, #8]	; (8029c50 <_ZSt13get_terminatev+0xc>)
 8029c46:	6818      	ldr	r0, [r3, #0]
 8029c48:	f3bf 8f5b 	dmb	ish
 8029c4c:	4770      	bx	lr
 8029c4e:	bf00      	nop
 8029c50:	20000104 	.word	0x20000104

08029c54 <_ZSt9terminatev>:
 8029c54:	b508      	push	{r3, lr}
 8029c56:	f7ff fff5 	bl	8029c44 <_ZSt13get_terminatev>
 8029c5a:	f7ff ffee 	bl	8029c3a <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08029c60 <sqrtf>:
 8029c60:	b508      	push	{r3, lr}
 8029c62:	ed2d 8b02 	vpush	{d8}
 8029c66:	eeb0 8a40 	vmov.f32	s16, s0
 8029c6a:	f000 f97d 	bl	8029f68 <__ieee754_sqrtf>
 8029c6e:	eeb4 8a48 	vcmp.f32	s16, s16
 8029c72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029c76:	d60c      	bvs.n	8029c92 <sqrtf+0x32>
 8029c78:	eddf 8a07 	vldr	s17, [pc, #28]	; 8029c98 <sqrtf+0x38>
 8029c7c:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8029c80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029c84:	d505      	bpl.n	8029c92 <sqrtf+0x32>
 8029c86:	f001 f9a7 	bl	802afd8 <__errno>
 8029c8a:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8029c8e:	2321      	movs	r3, #33	; 0x21
 8029c90:	6003      	str	r3, [r0, #0]
 8029c92:	ecbd 8b02 	vpop	{d8}
 8029c96:	bd08      	pop	{r3, pc}
 8029c98:	00000000 	.word	0x00000000

08029c9c <atanf>:
 8029c9c:	b538      	push	{r3, r4, r5, lr}
 8029c9e:	ee10 5a10 	vmov	r5, s0
 8029ca2:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 8029ca6:	f1b4 4fa1 	cmp.w	r4, #1350565888	; 0x50800000
 8029caa:	eef0 7a40 	vmov.f32	s15, s0
 8029cae:	db10      	blt.n	8029cd2 <atanf+0x36>
 8029cb0:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 8029cb4:	dd04      	ble.n	8029cc0 <atanf+0x24>
 8029cb6:	ee70 7a00 	vadd.f32	s15, s0, s0
 8029cba:	eeb0 0a67 	vmov.f32	s0, s15
 8029cbe:	bd38      	pop	{r3, r4, r5, pc}
 8029cc0:	eddf 7a4d 	vldr	s15, [pc, #308]	; 8029df8 <atanf+0x15c>
 8029cc4:	ed9f 7a4d 	vldr	s14, [pc, #308]	; 8029dfc <atanf+0x160>
 8029cc8:	2d00      	cmp	r5, #0
 8029cca:	bfd8      	it	le
 8029ccc:	eef0 7a47 	vmovle.f32	s15, s14
 8029cd0:	e7f3      	b.n	8029cba <atanf+0x1e>
 8029cd2:	4b4b      	ldr	r3, [pc, #300]	; (8029e00 <atanf+0x164>)
 8029cd4:	429c      	cmp	r4, r3
 8029cd6:	dc10      	bgt.n	8029cfa <atanf+0x5e>
 8029cd8:	f1b4 5f44 	cmp.w	r4, #822083584	; 0x31000000
 8029cdc:	da0a      	bge.n	8029cf4 <atanf+0x58>
 8029cde:	ed9f 7a49 	vldr	s14, [pc, #292]	; 8029e04 <atanf+0x168>
 8029ce2:	ee30 7a07 	vadd.f32	s14, s0, s14
 8029ce6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8029cea:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8029cee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029cf2:	dce2      	bgt.n	8029cba <atanf+0x1e>
 8029cf4:	f04f 33ff 	mov.w	r3, #4294967295
 8029cf8:	e013      	b.n	8029d22 <atanf+0x86>
 8029cfa:	f000 f8e7 	bl	8029ecc <fabsf>
 8029cfe:	4b42      	ldr	r3, [pc, #264]	; (8029e08 <atanf+0x16c>)
 8029d00:	429c      	cmp	r4, r3
 8029d02:	dc4f      	bgt.n	8029da4 <atanf+0x108>
 8029d04:	f5a3 03d0 	sub.w	r3, r3, #6815744	; 0x680000
 8029d08:	429c      	cmp	r4, r3
 8029d0a:	dc41      	bgt.n	8029d90 <atanf+0xf4>
 8029d0c:	eef0 7a00 	vmov.f32	s15, #0	; 0x40000000  2.0
 8029d10:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 8029d14:	eea0 7a27 	vfma.f32	s14, s0, s15
 8029d18:	2300      	movs	r3, #0
 8029d1a:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029d1e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029d22:	1c5a      	adds	r2, r3, #1
 8029d24:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8029d28:	ed9f 7a38 	vldr	s14, [pc, #224]	; 8029e0c <atanf+0x170>
 8029d2c:	eddf 5a38 	vldr	s11, [pc, #224]	; 8029e10 <atanf+0x174>
 8029d30:	ed9f 5a38 	vldr	s10, [pc, #224]	; 8029e14 <atanf+0x178>
 8029d34:	ee66 6a06 	vmul.f32	s13, s12, s12
 8029d38:	eee6 5a87 	vfma.f32	s11, s13, s14
 8029d3c:	ed9f 7a36 	vldr	s14, [pc, #216]	; 8029e18 <atanf+0x17c>
 8029d40:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8029d44:	eddf 5a35 	vldr	s11, [pc, #212]	; 8029e1c <atanf+0x180>
 8029d48:	eee7 5a26 	vfma.f32	s11, s14, s13
 8029d4c:	ed9f 7a34 	vldr	s14, [pc, #208]	; 8029e20 <atanf+0x184>
 8029d50:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8029d54:	eddf 5a33 	vldr	s11, [pc, #204]	; 8029e24 <atanf+0x188>
 8029d58:	eee7 5a26 	vfma.f32	s11, s14, s13
 8029d5c:	ed9f 7a32 	vldr	s14, [pc, #200]	; 8029e28 <atanf+0x18c>
 8029d60:	eea6 5a87 	vfma.f32	s10, s13, s14
 8029d64:	ed9f 7a31 	vldr	s14, [pc, #196]	; 8029e2c <atanf+0x190>
 8029d68:	eea5 7a26 	vfma.f32	s14, s10, s13
 8029d6c:	ed9f 5a30 	vldr	s10, [pc, #192]	; 8029e30 <atanf+0x194>
 8029d70:	eea7 5a26 	vfma.f32	s10, s14, s13
 8029d74:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 8029e34 <atanf+0x198>
 8029d78:	eea5 7a26 	vfma.f32	s14, s10, s13
 8029d7c:	ee27 7a26 	vmul.f32	s14, s14, s13
 8029d80:	eea5 7a86 	vfma.f32	s14, s11, s12
 8029d84:	ee27 7a87 	vmul.f32	s14, s15, s14
 8029d88:	d121      	bne.n	8029dce <atanf+0x132>
 8029d8a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029d8e:	e794      	b.n	8029cba <atanf+0x1e>
 8029d90:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8029d94:	ee30 7a67 	vsub.f32	s14, s0, s15
 8029d98:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029d9c:	2301      	movs	r3, #1
 8029d9e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029da2:	e7be      	b.n	8029d22 <atanf+0x86>
 8029da4:	4b24      	ldr	r3, [pc, #144]	; (8029e38 <atanf+0x19c>)
 8029da6:	429c      	cmp	r4, r3
 8029da8:	dc0b      	bgt.n	8029dc2 <atanf+0x126>
 8029daa:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 8029dae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8029db2:	eea0 7a27 	vfma.f32	s14, s0, s15
 8029db6:	2302      	movs	r3, #2
 8029db8:	ee70 6a67 	vsub.f32	s13, s0, s15
 8029dbc:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8029dc0:	e7af      	b.n	8029d22 <atanf+0x86>
 8029dc2:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 8029dc6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029dca:	2303      	movs	r3, #3
 8029dcc:	e7a9      	b.n	8029d22 <atanf+0x86>
 8029dce:	4a1b      	ldr	r2, [pc, #108]	; (8029e3c <atanf+0x1a0>)
 8029dd0:	491b      	ldr	r1, [pc, #108]	; (8029e40 <atanf+0x1a4>)
 8029dd2:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8029dd6:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8029dda:	edd3 6a00 	vldr	s13, [r3]
 8029dde:	ee37 7a66 	vsub.f32	s14, s14, s13
 8029de2:	2d00      	cmp	r5, #0
 8029de4:	ee37 7a67 	vsub.f32	s14, s14, s15
 8029de8:	edd2 7a00 	vldr	s15, [r2]
 8029dec:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029df0:	bfb8      	it	lt
 8029df2:	eef1 7a67 	vneglt.f32	s15, s15
 8029df6:	e760      	b.n	8029cba <atanf+0x1e>
 8029df8:	3fc90fdb 	.word	0x3fc90fdb
 8029dfc:	bfc90fdb 	.word	0xbfc90fdb
 8029e00:	3edfffff 	.word	0x3edfffff
 8029e04:	7149f2ca 	.word	0x7149f2ca
 8029e08:	3f97ffff 	.word	0x3f97ffff
 8029e0c:	3c8569d7 	.word	0x3c8569d7
 8029e10:	3d4bda59 	.word	0x3d4bda59
 8029e14:	bd6ef16b 	.word	0xbd6ef16b
 8029e18:	3d886b35 	.word	0x3d886b35
 8029e1c:	3dba2e6e 	.word	0x3dba2e6e
 8029e20:	3e124925 	.word	0x3e124925
 8029e24:	3eaaaaab 	.word	0x3eaaaaab
 8029e28:	bd15a221 	.word	0xbd15a221
 8029e2c:	bd9d8795 	.word	0xbd9d8795
 8029e30:	bde38e38 	.word	0xbde38e38
 8029e34:	be4ccccd 	.word	0xbe4ccccd
 8029e38:	401bffff 	.word	0x401bffff
 8029e3c:	08042c40 	.word	0x08042c40
 8029e40:	08042c50 	.word	0x08042c50

08029e44 <cosf>:
 8029e44:	ee10 3a10 	vmov	r3, s0
 8029e48:	b507      	push	{r0, r1, r2, lr}
 8029e4a:	4a1e      	ldr	r2, [pc, #120]	; (8029ec4 <cosf+0x80>)
 8029e4c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029e50:	4293      	cmp	r3, r2
 8029e52:	dc06      	bgt.n	8029e62 <cosf+0x1e>
 8029e54:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8029ec8 <cosf+0x84>
 8029e58:	b003      	add	sp, #12
 8029e5a:	f85d eb04 	ldr.w	lr, [sp], #4
 8029e5e:	f000 b90b 	b.w	802a078 <__kernel_cosf>
 8029e62:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8029e66:	db04      	blt.n	8029e72 <cosf+0x2e>
 8029e68:	ee30 0a40 	vsub.f32	s0, s0, s0
 8029e6c:	b003      	add	sp, #12
 8029e6e:	f85d fb04 	ldr.w	pc, [sp], #4
 8029e72:	4668      	mov	r0, sp
 8029e74:	f000 f9a6 	bl	802a1c4 <__ieee754_rem_pio2f>
 8029e78:	f000 0003 	and.w	r0, r0, #3
 8029e7c:	2801      	cmp	r0, #1
 8029e7e:	d009      	beq.n	8029e94 <cosf+0x50>
 8029e80:	2802      	cmp	r0, #2
 8029e82:	d010      	beq.n	8029ea6 <cosf+0x62>
 8029e84:	b9b0      	cbnz	r0, 8029eb4 <cosf+0x70>
 8029e86:	eddd 0a01 	vldr	s1, [sp, #4]
 8029e8a:	ed9d 0a00 	vldr	s0, [sp]
 8029e8e:	f000 f8f3 	bl	802a078 <__kernel_cosf>
 8029e92:	e7eb      	b.n	8029e6c <cosf+0x28>
 8029e94:	eddd 0a01 	vldr	s1, [sp, #4]
 8029e98:	ed9d 0a00 	vldr	s0, [sp]
 8029e9c:	f000 f94a 	bl	802a134 <__kernel_sinf>
 8029ea0:	eeb1 0a40 	vneg.f32	s0, s0
 8029ea4:	e7e2      	b.n	8029e6c <cosf+0x28>
 8029ea6:	eddd 0a01 	vldr	s1, [sp, #4]
 8029eaa:	ed9d 0a00 	vldr	s0, [sp]
 8029eae:	f000 f8e3 	bl	802a078 <__kernel_cosf>
 8029eb2:	e7f5      	b.n	8029ea0 <cosf+0x5c>
 8029eb4:	eddd 0a01 	vldr	s1, [sp, #4]
 8029eb8:	ed9d 0a00 	vldr	s0, [sp]
 8029ebc:	2001      	movs	r0, #1
 8029ebe:	f000 f939 	bl	802a134 <__kernel_sinf>
 8029ec2:	e7d3      	b.n	8029e6c <cosf+0x28>
 8029ec4:	3f490fd8 	.word	0x3f490fd8
 8029ec8:	00000000 	.word	0x00000000

08029ecc <fabsf>:
 8029ecc:	ee10 3a10 	vmov	r3, s0
 8029ed0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029ed4:	ee00 3a10 	vmov	s0, r3
 8029ed8:	4770      	bx	lr
	...

08029edc <sinf>:
 8029edc:	ee10 3a10 	vmov	r3, s0
 8029ee0:	b507      	push	{r0, r1, r2, lr}
 8029ee2:	4a1f      	ldr	r2, [pc, #124]	; (8029f60 <sinf+0x84>)
 8029ee4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029ee8:	4293      	cmp	r3, r2
 8029eea:	dc07      	bgt.n	8029efc <sinf+0x20>
 8029eec:	eddf 0a1d 	vldr	s1, [pc, #116]	; 8029f64 <sinf+0x88>
 8029ef0:	2000      	movs	r0, #0
 8029ef2:	b003      	add	sp, #12
 8029ef4:	f85d eb04 	ldr.w	lr, [sp], #4
 8029ef8:	f000 b91c 	b.w	802a134 <__kernel_sinf>
 8029efc:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8029f00:	db04      	blt.n	8029f0c <sinf+0x30>
 8029f02:	ee30 0a40 	vsub.f32	s0, s0, s0
 8029f06:	b003      	add	sp, #12
 8029f08:	f85d fb04 	ldr.w	pc, [sp], #4
 8029f0c:	4668      	mov	r0, sp
 8029f0e:	f000 f959 	bl	802a1c4 <__ieee754_rem_pio2f>
 8029f12:	f000 0003 	and.w	r0, r0, #3
 8029f16:	2801      	cmp	r0, #1
 8029f18:	d00a      	beq.n	8029f30 <sinf+0x54>
 8029f1a:	2802      	cmp	r0, #2
 8029f1c:	d00f      	beq.n	8029f3e <sinf+0x62>
 8029f1e:	b9c0      	cbnz	r0, 8029f52 <sinf+0x76>
 8029f20:	eddd 0a01 	vldr	s1, [sp, #4]
 8029f24:	ed9d 0a00 	vldr	s0, [sp]
 8029f28:	2001      	movs	r0, #1
 8029f2a:	f000 f903 	bl	802a134 <__kernel_sinf>
 8029f2e:	e7ea      	b.n	8029f06 <sinf+0x2a>
 8029f30:	eddd 0a01 	vldr	s1, [sp, #4]
 8029f34:	ed9d 0a00 	vldr	s0, [sp]
 8029f38:	f000 f89e 	bl	802a078 <__kernel_cosf>
 8029f3c:	e7e3      	b.n	8029f06 <sinf+0x2a>
 8029f3e:	eddd 0a01 	vldr	s1, [sp, #4]
 8029f42:	ed9d 0a00 	vldr	s0, [sp]
 8029f46:	2001      	movs	r0, #1
 8029f48:	f000 f8f4 	bl	802a134 <__kernel_sinf>
 8029f4c:	eeb1 0a40 	vneg.f32	s0, s0
 8029f50:	e7d9      	b.n	8029f06 <sinf+0x2a>
 8029f52:	eddd 0a01 	vldr	s1, [sp, #4]
 8029f56:	ed9d 0a00 	vldr	s0, [sp]
 8029f5a:	f000 f88d 	bl	802a078 <__kernel_cosf>
 8029f5e:	e7f5      	b.n	8029f4c <sinf+0x70>
 8029f60:	3f490fd8 	.word	0x3f490fd8
 8029f64:	00000000 	.word	0x00000000

08029f68 <__ieee754_sqrtf>:
 8029f68:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8029f6c:	4770      	bx	lr
	...

08029f70 <ceilf>:
 8029f70:	ee10 3a10 	vmov	r3, s0
 8029f74:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8029f78:	3a7f      	subs	r2, #127	; 0x7f
 8029f7a:	2a16      	cmp	r2, #22
 8029f7c:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8029f80:	dc2a      	bgt.n	8029fd8 <ceilf+0x68>
 8029f82:	2a00      	cmp	r2, #0
 8029f84:	da11      	bge.n	8029faa <ceilf+0x3a>
 8029f86:	eddf 7a19 	vldr	s15, [pc, #100]	; 8029fec <ceilf+0x7c>
 8029f8a:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029f8e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8029f92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029f96:	dd05      	ble.n	8029fa4 <ceilf+0x34>
 8029f98:	2b00      	cmp	r3, #0
 8029f9a:	db23      	blt.n	8029fe4 <ceilf+0x74>
 8029f9c:	2900      	cmp	r1, #0
 8029f9e:	bf18      	it	ne
 8029fa0:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 8029fa4:	ee00 3a10 	vmov	s0, r3
 8029fa8:	4770      	bx	lr
 8029faa:	4911      	ldr	r1, [pc, #68]	; (8029ff0 <ceilf+0x80>)
 8029fac:	4111      	asrs	r1, r2
 8029fae:	420b      	tst	r3, r1
 8029fb0:	d0fa      	beq.n	8029fa8 <ceilf+0x38>
 8029fb2:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8029fec <ceilf+0x7c>
 8029fb6:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029fba:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8029fbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029fc2:	ddef      	ble.n	8029fa4 <ceilf+0x34>
 8029fc4:	2b00      	cmp	r3, #0
 8029fc6:	bfc2      	ittt	gt
 8029fc8:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8029fcc:	fa40 f202 	asrgt.w	r2, r0, r2
 8029fd0:	189b      	addgt	r3, r3, r2
 8029fd2:	ea23 0301 	bic.w	r3, r3, r1
 8029fd6:	e7e5      	b.n	8029fa4 <ceilf+0x34>
 8029fd8:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8029fdc:	d3e4      	bcc.n	8029fa8 <ceilf+0x38>
 8029fde:	ee30 0a00 	vadd.f32	s0, s0, s0
 8029fe2:	4770      	bx	lr
 8029fe4:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8029fe8:	e7dc      	b.n	8029fa4 <ceilf+0x34>
 8029fea:	bf00      	nop
 8029fec:	7149f2ca 	.word	0x7149f2ca
 8029ff0:	007fffff 	.word	0x007fffff

08029ff4 <floorf>:
 8029ff4:	ee10 3a10 	vmov	r3, s0
 8029ff8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8029ffc:	3a7f      	subs	r2, #127	; 0x7f
 8029ffe:	2a16      	cmp	r2, #22
 802a000:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a004:	dc2a      	bgt.n	802a05c <floorf+0x68>
 802a006:	2a00      	cmp	r2, #0
 802a008:	da11      	bge.n	802a02e <floorf+0x3a>
 802a00a:	eddf 7a18 	vldr	s15, [pc, #96]	; 802a06c <floorf+0x78>
 802a00e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a012:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a016:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a01a:	dd05      	ble.n	802a028 <floorf+0x34>
 802a01c:	2b00      	cmp	r3, #0
 802a01e:	da23      	bge.n	802a068 <floorf+0x74>
 802a020:	4a13      	ldr	r2, [pc, #76]	; (802a070 <floorf+0x7c>)
 802a022:	2900      	cmp	r1, #0
 802a024:	bf18      	it	ne
 802a026:	4613      	movne	r3, r2
 802a028:	ee00 3a10 	vmov	s0, r3
 802a02c:	4770      	bx	lr
 802a02e:	4911      	ldr	r1, [pc, #68]	; (802a074 <floorf+0x80>)
 802a030:	4111      	asrs	r1, r2
 802a032:	420b      	tst	r3, r1
 802a034:	d0fa      	beq.n	802a02c <floorf+0x38>
 802a036:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802a06c <floorf+0x78>
 802a03a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a03e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a042:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a046:	ddef      	ble.n	802a028 <floorf+0x34>
 802a048:	2b00      	cmp	r3, #0
 802a04a:	bfbe      	ittt	lt
 802a04c:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802a050:	fa40 f202 	asrlt.w	r2, r0, r2
 802a054:	189b      	addlt	r3, r3, r2
 802a056:	ea23 0301 	bic.w	r3, r3, r1
 802a05a:	e7e5      	b.n	802a028 <floorf+0x34>
 802a05c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a060:	d3e4      	bcc.n	802a02c <floorf+0x38>
 802a062:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a066:	4770      	bx	lr
 802a068:	2300      	movs	r3, #0
 802a06a:	e7dd      	b.n	802a028 <floorf+0x34>
 802a06c:	7149f2ca 	.word	0x7149f2ca
 802a070:	bf800000 	.word	0xbf800000
 802a074:	007fffff 	.word	0x007fffff

0802a078 <__kernel_cosf>:
 802a078:	ee10 3a10 	vmov	r3, s0
 802a07c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a080:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a084:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802a088:	da05      	bge.n	802a096 <__kernel_cosf+0x1e>
 802a08a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a08e:	ee17 2a90 	vmov	r2, s15
 802a092:	2a00      	cmp	r2, #0
 802a094:	d03b      	beq.n	802a10e <__kernel_cosf+0x96>
 802a096:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a09a:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a114 <__kernel_cosf+0x9c>
 802a09e:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802a118 <__kernel_cosf+0xa0>
 802a0a2:	4a1e      	ldr	r2, [pc, #120]	; (802a11c <__kernel_cosf+0xa4>)
 802a0a4:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a0a8:	4293      	cmp	r3, r2
 802a0aa:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802a120 <__kernel_cosf+0xa8>
 802a0ae:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a0b2:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802a124 <__kernel_cosf+0xac>
 802a0b6:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a0ba:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802a128 <__kernel_cosf+0xb0>
 802a0be:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a0c2:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802a12c <__kernel_cosf+0xb4>
 802a0c6:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a0ca:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802a0ce:	ee26 6a07 	vmul.f32	s12, s12, s14
 802a0d2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a0d6:	eee7 0a06 	vfma.f32	s1, s14, s12
 802a0da:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a0de:	dc04      	bgt.n	802a0ea <__kernel_cosf+0x72>
 802a0e0:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a0e4:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802a0e8:	4770      	bx	lr
 802a0ea:	4a11      	ldr	r2, [pc, #68]	; (802a130 <__kernel_cosf+0xb8>)
 802a0ec:	4293      	cmp	r3, r2
 802a0ee:	bfda      	itte	le
 802a0f0:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802a0f4:	ee07 3a10 	vmovle	s14, r3
 802a0f8:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802a0fc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a100:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802a104:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a108:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a10c:	4770      	bx	lr
 802a10e:	eeb0 0a66 	vmov.f32	s0, s13
 802a112:	4770      	bx	lr
 802a114:	ad47d74e 	.word	0xad47d74e
 802a118:	310f74f6 	.word	0x310f74f6
 802a11c:	3e999999 	.word	0x3e999999
 802a120:	b493f27c 	.word	0xb493f27c
 802a124:	37d00d01 	.word	0x37d00d01
 802a128:	bab60b61 	.word	0xbab60b61
 802a12c:	3d2aaaab 	.word	0x3d2aaaab
 802a130:	3f480000 	.word	0x3f480000

0802a134 <__kernel_sinf>:
 802a134:	ee10 3a10 	vmov	r3, s0
 802a138:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a13c:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a140:	da04      	bge.n	802a14c <__kernel_sinf+0x18>
 802a142:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a146:	ee17 3a90 	vmov	r3, s15
 802a14a:	b35b      	cbz	r3, 802a1a4 <__kernel_sinf+0x70>
 802a14c:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a150:	eddf 7a15 	vldr	s15, [pc, #84]	; 802a1a8 <__kernel_sinf+0x74>
 802a154:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802a1ac <__kernel_sinf+0x78>
 802a158:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a15c:	eddf 7a14 	vldr	s15, [pc, #80]	; 802a1b0 <__kernel_sinf+0x7c>
 802a160:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a164:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802a1b4 <__kernel_sinf+0x80>
 802a168:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a16c:	eddf 7a12 	vldr	s15, [pc, #72]	; 802a1b8 <__kernel_sinf+0x84>
 802a170:	ee60 6a07 	vmul.f32	s13, s0, s14
 802a174:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a178:	b930      	cbnz	r0, 802a188 <__kernel_sinf+0x54>
 802a17a:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802a1bc <__kernel_sinf+0x88>
 802a17e:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a182:	eea6 0a26 	vfma.f32	s0, s12, s13
 802a186:	4770      	bx	lr
 802a188:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802a18c:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802a190:	eee0 7a86 	vfma.f32	s15, s1, s12
 802a194:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802a198:	eddf 7a09 	vldr	s15, [pc, #36]	; 802a1c0 <__kernel_sinf+0x8c>
 802a19c:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802a1a0:	ee30 0a60 	vsub.f32	s0, s0, s1
 802a1a4:	4770      	bx	lr
 802a1a6:	bf00      	nop
 802a1a8:	2f2ec9d3 	.word	0x2f2ec9d3
 802a1ac:	b2d72f34 	.word	0xb2d72f34
 802a1b0:	3638ef1b 	.word	0x3638ef1b
 802a1b4:	b9500d01 	.word	0xb9500d01
 802a1b8:	3c088889 	.word	0x3c088889
 802a1bc:	be2aaaab 	.word	0xbe2aaaab
 802a1c0:	3e2aaaab 	.word	0x3e2aaaab

0802a1c4 <__ieee754_rem_pio2f>:
 802a1c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a1c6:	ee10 6a10 	vmov	r6, s0
 802a1ca:	4b86      	ldr	r3, [pc, #536]	; (802a3e4 <__ieee754_rem_pio2f+0x220>)
 802a1cc:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802a1d0:	429d      	cmp	r5, r3
 802a1d2:	b087      	sub	sp, #28
 802a1d4:	4604      	mov	r4, r0
 802a1d6:	dc05      	bgt.n	802a1e4 <__ieee754_rem_pio2f+0x20>
 802a1d8:	2300      	movs	r3, #0
 802a1da:	ed80 0a00 	vstr	s0, [r0]
 802a1de:	6043      	str	r3, [r0, #4]
 802a1e0:	2000      	movs	r0, #0
 802a1e2:	e020      	b.n	802a226 <__ieee754_rem_pio2f+0x62>
 802a1e4:	4b80      	ldr	r3, [pc, #512]	; (802a3e8 <__ieee754_rem_pio2f+0x224>)
 802a1e6:	429d      	cmp	r5, r3
 802a1e8:	dc38      	bgt.n	802a25c <__ieee754_rem_pio2f+0x98>
 802a1ea:	2e00      	cmp	r6, #0
 802a1ec:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802a3ec <__ieee754_rem_pio2f+0x228>
 802a1f0:	4b7f      	ldr	r3, [pc, #508]	; (802a3f0 <__ieee754_rem_pio2f+0x22c>)
 802a1f2:	f025 050f 	bic.w	r5, r5, #15
 802a1f6:	dd18      	ble.n	802a22a <__ieee754_rem_pio2f+0x66>
 802a1f8:	429d      	cmp	r5, r3
 802a1fa:	ee70 7a47 	vsub.f32	s15, s0, s14
 802a1fe:	bf09      	itett	eq
 802a200:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802a3f4 <__ieee754_rem_pio2f+0x230>
 802a204:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802a3f8 <__ieee754_rem_pio2f+0x234>
 802a208:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802a20c:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802a3fc <__ieee754_rem_pio2f+0x238>
 802a210:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802a214:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a218:	edc0 6a00 	vstr	s13, [r0]
 802a21c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a220:	edc0 7a01 	vstr	s15, [r0, #4]
 802a224:	2001      	movs	r0, #1
 802a226:	b007      	add	sp, #28
 802a228:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a22a:	429d      	cmp	r5, r3
 802a22c:	ee70 7a07 	vadd.f32	s15, s0, s14
 802a230:	bf09      	itett	eq
 802a232:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802a3f4 <__ieee754_rem_pio2f+0x230>
 802a236:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802a3f8 <__ieee754_rem_pio2f+0x234>
 802a23a:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802a23e:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802a3fc <__ieee754_rem_pio2f+0x238>
 802a242:	ee77 6a87 	vadd.f32	s13, s15, s14
 802a246:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a24a:	edc0 6a00 	vstr	s13, [r0]
 802a24e:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a252:	edc0 7a01 	vstr	s15, [r0, #4]
 802a256:	f04f 30ff 	mov.w	r0, #4294967295
 802a25a:	e7e4      	b.n	802a226 <__ieee754_rem_pio2f+0x62>
 802a25c:	4b68      	ldr	r3, [pc, #416]	; (802a400 <__ieee754_rem_pio2f+0x23c>)
 802a25e:	429d      	cmp	r5, r3
 802a260:	dc71      	bgt.n	802a346 <__ieee754_rem_pio2f+0x182>
 802a262:	f7ff fe33 	bl	8029ecc <fabsf>
 802a266:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802a404 <__ieee754_rem_pio2f+0x240>
 802a26a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a26e:	eee0 7a07 	vfma.f32	s15, s0, s14
 802a272:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a276:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802a27a:	ee17 0a90 	vmov	r0, s15
 802a27e:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802a3ec <__ieee754_rem_pio2f+0x228>
 802a282:	eea7 0a67 	vfms.f32	s0, s14, s15
 802a286:	281f      	cmp	r0, #31
 802a288:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802a3f8 <__ieee754_rem_pio2f+0x234>
 802a28c:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a290:	eeb1 6a47 	vneg.f32	s12, s14
 802a294:	ee70 6a67 	vsub.f32	s13, s0, s15
 802a298:	ee16 2a90 	vmov	r2, s13
 802a29c:	dc1c      	bgt.n	802a2d8 <__ieee754_rem_pio2f+0x114>
 802a29e:	495a      	ldr	r1, [pc, #360]	; (802a408 <__ieee754_rem_pio2f+0x244>)
 802a2a0:	1e47      	subs	r7, r0, #1
 802a2a2:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802a2a6:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802a2aa:	428b      	cmp	r3, r1
 802a2ac:	d014      	beq.n	802a2d8 <__ieee754_rem_pio2f+0x114>
 802a2ae:	6022      	str	r2, [r4, #0]
 802a2b0:	ed94 7a00 	vldr	s14, [r4]
 802a2b4:	ee30 0a47 	vsub.f32	s0, s0, s14
 802a2b8:	2e00      	cmp	r6, #0
 802a2ba:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a2be:	ed84 0a01 	vstr	s0, [r4, #4]
 802a2c2:	dab0      	bge.n	802a226 <__ieee754_rem_pio2f+0x62>
 802a2c4:	eeb1 7a47 	vneg.f32	s14, s14
 802a2c8:	eeb1 0a40 	vneg.f32	s0, s0
 802a2cc:	ed84 7a00 	vstr	s14, [r4]
 802a2d0:	ed84 0a01 	vstr	s0, [r4, #4]
 802a2d4:	4240      	negs	r0, r0
 802a2d6:	e7a6      	b.n	802a226 <__ieee754_rem_pio2f+0x62>
 802a2d8:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a2dc:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802a2e0:	2908      	cmp	r1, #8
 802a2e2:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802a2e6:	dde2      	ble.n	802a2ae <__ieee754_rem_pio2f+0xea>
 802a2e8:	eddf 5a42 	vldr	s11, [pc, #264]	; 802a3f4 <__ieee754_rem_pio2f+0x230>
 802a2ec:	eef0 6a40 	vmov.f32	s13, s0
 802a2f0:	eee6 6a25 	vfma.f32	s13, s12, s11
 802a2f4:	ee70 7a66 	vsub.f32	s15, s0, s13
 802a2f8:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a2fc:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802a3fc <__ieee754_rem_pio2f+0x238>
 802a300:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802a304:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802a308:	ee15 2a90 	vmov	r2, s11
 802a30c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a310:	1a5b      	subs	r3, r3, r1
 802a312:	2b19      	cmp	r3, #25
 802a314:	dc04      	bgt.n	802a320 <__ieee754_rem_pio2f+0x15c>
 802a316:	edc4 5a00 	vstr	s11, [r4]
 802a31a:	eeb0 0a66 	vmov.f32	s0, s13
 802a31e:	e7c7      	b.n	802a2b0 <__ieee754_rem_pio2f+0xec>
 802a320:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802a40c <__ieee754_rem_pio2f+0x248>
 802a324:	eeb0 0a66 	vmov.f32	s0, s13
 802a328:	eea6 0a25 	vfma.f32	s0, s12, s11
 802a32c:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802a330:	eddf 6a37 	vldr	s13, [pc, #220]	; 802a410 <__ieee754_rem_pio2f+0x24c>
 802a334:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a338:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802a33c:	ee30 7a67 	vsub.f32	s14, s0, s15
 802a340:	ed84 7a00 	vstr	s14, [r4]
 802a344:	e7b4      	b.n	802a2b0 <__ieee754_rem_pio2f+0xec>
 802a346:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802a34a:	db06      	blt.n	802a35a <__ieee754_rem_pio2f+0x196>
 802a34c:	ee70 7a40 	vsub.f32	s15, s0, s0
 802a350:	edc0 7a01 	vstr	s15, [r0, #4]
 802a354:	edc0 7a00 	vstr	s15, [r0]
 802a358:	e742      	b.n	802a1e0 <__ieee754_rem_pio2f+0x1c>
 802a35a:	15ea      	asrs	r2, r5, #23
 802a35c:	3a86      	subs	r2, #134	; 0x86
 802a35e:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802a362:	ee07 3a90 	vmov	s15, r3
 802a366:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a36a:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802a414 <__ieee754_rem_pio2f+0x250>
 802a36e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a372:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a376:	ed8d 7a03 	vstr	s14, [sp, #12]
 802a37a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a37e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a382:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a386:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a38a:	ed8d 7a04 	vstr	s14, [sp, #16]
 802a38e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a392:	eef5 7a40 	vcmp.f32	s15, #0.0
 802a396:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a39a:	edcd 7a05 	vstr	s15, [sp, #20]
 802a39e:	d11e      	bne.n	802a3de <__ieee754_rem_pio2f+0x21a>
 802a3a0:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802a3a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a3a8:	bf14      	ite	ne
 802a3aa:	2302      	movne	r3, #2
 802a3ac:	2301      	moveq	r3, #1
 802a3ae:	491a      	ldr	r1, [pc, #104]	; (802a418 <__ieee754_rem_pio2f+0x254>)
 802a3b0:	9101      	str	r1, [sp, #4]
 802a3b2:	2102      	movs	r1, #2
 802a3b4:	9100      	str	r1, [sp, #0]
 802a3b6:	a803      	add	r0, sp, #12
 802a3b8:	4621      	mov	r1, r4
 802a3ba:	f000 f895 	bl	802a4e8 <__kernel_rem_pio2f>
 802a3be:	2e00      	cmp	r6, #0
 802a3c0:	f6bf af31 	bge.w	802a226 <__ieee754_rem_pio2f+0x62>
 802a3c4:	edd4 7a00 	vldr	s15, [r4]
 802a3c8:	eef1 7a67 	vneg.f32	s15, s15
 802a3cc:	edc4 7a00 	vstr	s15, [r4]
 802a3d0:	edd4 7a01 	vldr	s15, [r4, #4]
 802a3d4:	eef1 7a67 	vneg.f32	s15, s15
 802a3d8:	edc4 7a01 	vstr	s15, [r4, #4]
 802a3dc:	e77a      	b.n	802a2d4 <__ieee754_rem_pio2f+0x110>
 802a3de:	2303      	movs	r3, #3
 802a3e0:	e7e5      	b.n	802a3ae <__ieee754_rem_pio2f+0x1ea>
 802a3e2:	bf00      	nop
 802a3e4:	3f490fd8 	.word	0x3f490fd8
 802a3e8:	4016cbe3 	.word	0x4016cbe3
 802a3ec:	3fc90f80 	.word	0x3fc90f80
 802a3f0:	3fc90fd0 	.word	0x3fc90fd0
 802a3f4:	37354400 	.word	0x37354400
 802a3f8:	37354443 	.word	0x37354443
 802a3fc:	2e85a308 	.word	0x2e85a308
 802a400:	43490f80 	.word	0x43490f80
 802a404:	3f22f984 	.word	0x3f22f984
 802a408:	08042c60 	.word	0x08042c60
 802a40c:	2e85a300 	.word	0x2e85a300
 802a410:	248d3132 	.word	0x248d3132
 802a414:	43800000 	.word	0x43800000
 802a418:	08042ce0 	.word	0x08042ce0

0802a41c <scalbnf>:
 802a41c:	ee10 3a10 	vmov	r3, s0
 802a420:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802a424:	d02b      	beq.n	802a47e <scalbnf+0x62>
 802a426:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802a42a:	d302      	bcc.n	802a432 <scalbnf+0x16>
 802a42c:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a430:	4770      	bx	lr
 802a432:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802a436:	d123      	bne.n	802a480 <scalbnf+0x64>
 802a438:	4b24      	ldr	r3, [pc, #144]	; (802a4cc <scalbnf+0xb0>)
 802a43a:	eddf 7a25 	vldr	s15, [pc, #148]	; 802a4d0 <scalbnf+0xb4>
 802a43e:	4298      	cmp	r0, r3
 802a440:	ee20 0a27 	vmul.f32	s0, s0, s15
 802a444:	db17      	blt.n	802a476 <scalbnf+0x5a>
 802a446:	ee10 3a10 	vmov	r3, s0
 802a44a:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a44e:	3a19      	subs	r2, #25
 802a450:	f24c 3150 	movw	r1, #50000	; 0xc350
 802a454:	4288      	cmp	r0, r1
 802a456:	dd15      	ble.n	802a484 <scalbnf+0x68>
 802a458:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a4d4 <scalbnf+0xb8>
 802a45c:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802a4d8 <scalbnf+0xbc>
 802a460:	ee10 3a10 	vmov	r3, s0
 802a464:	eeb0 7a67 	vmov.f32	s14, s15
 802a468:	2b00      	cmp	r3, #0
 802a46a:	bfb8      	it	lt
 802a46c:	eef0 7a66 	vmovlt.f32	s15, s13
 802a470:	ee27 0a87 	vmul.f32	s0, s15, s14
 802a474:	4770      	bx	lr
 802a476:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a4dc <scalbnf+0xc0>
 802a47a:	ee27 0a80 	vmul.f32	s0, s15, s0
 802a47e:	4770      	bx	lr
 802a480:	0dd2      	lsrs	r2, r2, #23
 802a482:	e7e5      	b.n	802a450 <scalbnf+0x34>
 802a484:	4410      	add	r0, r2
 802a486:	28fe      	cmp	r0, #254	; 0xfe
 802a488:	dce6      	bgt.n	802a458 <scalbnf+0x3c>
 802a48a:	2800      	cmp	r0, #0
 802a48c:	dd06      	ble.n	802a49c <scalbnf+0x80>
 802a48e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802a492:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a496:	ee00 3a10 	vmov	s0, r3
 802a49a:	4770      	bx	lr
 802a49c:	f110 0f16 	cmn.w	r0, #22
 802a4a0:	da09      	bge.n	802a4b6 <scalbnf+0x9a>
 802a4a2:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a4dc <scalbnf+0xc0>
 802a4a6:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802a4e0 <scalbnf+0xc4>
 802a4aa:	ee10 3a10 	vmov	r3, s0
 802a4ae:	eeb0 7a67 	vmov.f32	s14, s15
 802a4b2:	2b00      	cmp	r3, #0
 802a4b4:	e7d9      	b.n	802a46a <scalbnf+0x4e>
 802a4b6:	3019      	adds	r0, #25
 802a4b8:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802a4bc:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a4c0:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802a4e4 <scalbnf+0xc8>
 802a4c4:	ee07 3a90 	vmov	s15, r3
 802a4c8:	e7d7      	b.n	802a47a <scalbnf+0x5e>
 802a4ca:	bf00      	nop
 802a4cc:	ffff3cb0 	.word	0xffff3cb0
 802a4d0:	4c000000 	.word	0x4c000000
 802a4d4:	7149f2ca 	.word	0x7149f2ca
 802a4d8:	f149f2ca 	.word	0xf149f2ca
 802a4dc:	0da24260 	.word	0x0da24260
 802a4e0:	8da24260 	.word	0x8da24260
 802a4e4:	33000000 	.word	0x33000000

0802a4e8 <__kernel_rem_pio2f>:
 802a4e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a4ec:	ed2d 8b04 	vpush	{d8-d9}
 802a4f0:	b0d9      	sub	sp, #356	; 0x164
 802a4f2:	4688      	mov	r8, r1
 802a4f4:	9002      	str	r0, [sp, #8]
 802a4f6:	49b8      	ldr	r1, [pc, #736]	; (802a7d8 <__kernel_rem_pio2f+0x2f0>)
 802a4f8:	9866      	ldr	r0, [sp, #408]	; 0x198
 802a4fa:	9301      	str	r3, [sp, #4]
 802a4fc:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802a500:	9901      	ldr	r1, [sp, #4]
 802a502:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802a504:	f101 3bff 	add.w	fp, r1, #4294967295
 802a508:	1d11      	adds	r1, r2, #4
 802a50a:	db25      	blt.n	802a558 <__kernel_rem_pio2f+0x70>
 802a50c:	1ed0      	subs	r0, r2, #3
 802a50e:	bf48      	it	mi
 802a510:	1d10      	addmi	r0, r2, #4
 802a512:	10c0      	asrs	r0, r0, #3
 802a514:	1c45      	adds	r5, r0, #1
 802a516:	00e9      	lsls	r1, r5, #3
 802a518:	eba0 070b 	sub.w	r7, r0, fp
 802a51c:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802a7e8 <__kernel_rem_pio2f+0x300>
 802a520:	9103      	str	r1, [sp, #12]
 802a522:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802a526:	eb0a 0c0b 	add.w	ip, sl, fp
 802a52a:	ae1c      	add	r6, sp, #112	; 0x70
 802a52c:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802a530:	2400      	movs	r4, #0
 802a532:	4564      	cmp	r4, ip
 802a534:	dd12      	ble.n	802a55c <__kernel_rem_pio2f+0x74>
 802a536:	9901      	ldr	r1, [sp, #4]
 802a538:	ac1c      	add	r4, sp, #112	; 0x70
 802a53a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802a53e:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802a542:	f04f 0c00 	mov.w	ip, #0
 802a546:	45d4      	cmp	ip, sl
 802a548:	dc27      	bgt.n	802a59a <__kernel_rem_pio2f+0xb2>
 802a54a:	f8dd e008 	ldr.w	lr, [sp, #8]
 802a54e:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802a7e8 <__kernel_rem_pio2f+0x300>
 802a552:	4627      	mov	r7, r4
 802a554:	2600      	movs	r6, #0
 802a556:	e016      	b.n	802a586 <__kernel_rem_pio2f+0x9e>
 802a558:	2000      	movs	r0, #0
 802a55a:	e7db      	b.n	802a514 <__kernel_rem_pio2f+0x2c>
 802a55c:	42e7      	cmn	r7, r4
 802a55e:	bf5d      	ittte	pl
 802a560:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802a564:	ee07 1a90 	vmovpl	s15, r1
 802a568:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802a56c:	eef0 7a47 	vmovmi.f32	s15, s14
 802a570:	ece6 7a01 	vstmia	r6!, {s15}
 802a574:	3401      	adds	r4, #1
 802a576:	e7dc      	b.n	802a532 <__kernel_rem_pio2f+0x4a>
 802a578:	ecfe 6a01 	vldmia	lr!, {s13}
 802a57c:	ed97 7a00 	vldr	s14, [r7]
 802a580:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a584:	3601      	adds	r6, #1
 802a586:	455e      	cmp	r6, fp
 802a588:	f1a7 0704 	sub.w	r7, r7, #4
 802a58c:	ddf4      	ble.n	802a578 <__kernel_rem_pio2f+0x90>
 802a58e:	ece9 7a01 	vstmia	r9!, {s15}
 802a592:	f10c 0c01 	add.w	ip, ip, #1
 802a596:	3404      	adds	r4, #4
 802a598:	e7d5      	b.n	802a546 <__kernel_rem_pio2f+0x5e>
 802a59a:	a908      	add	r1, sp, #32
 802a59c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802a5a0:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802a5a4:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802a7e4 <__kernel_rem_pio2f+0x2fc>
 802a5a8:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802a7e0 <__kernel_rem_pio2f+0x2f8>
 802a5ac:	9105      	str	r1, [sp, #20]
 802a5ae:	9304      	str	r3, [sp, #16]
 802a5b0:	4656      	mov	r6, sl
 802a5b2:	00b3      	lsls	r3, r6, #2
 802a5b4:	9306      	str	r3, [sp, #24]
 802a5b6:	ab58      	add	r3, sp, #352	; 0x160
 802a5b8:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802a5bc:	ac08      	add	r4, sp, #32
 802a5be:	ab44      	add	r3, sp, #272	; 0x110
 802a5c0:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802a5c4:	46a4      	mov	ip, r4
 802a5c6:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802a5ca:	4637      	mov	r7, r6
 802a5cc:	2f00      	cmp	r7, #0
 802a5ce:	f1a0 0004 	sub.w	r0, r0, #4
 802a5d2:	dc4a      	bgt.n	802a66a <__kernel_rem_pio2f+0x182>
 802a5d4:	4628      	mov	r0, r5
 802a5d6:	9207      	str	r2, [sp, #28]
 802a5d8:	f7ff ff20 	bl	802a41c <scalbnf>
 802a5dc:	eeb0 8a40 	vmov.f32	s16, s0
 802a5e0:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802a5e4:	ee28 0a00 	vmul.f32	s0, s16, s0
 802a5e8:	f7ff fd04 	bl	8029ff4 <floorf>
 802a5ec:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802a5f0:	eea0 8a67 	vfms.f32	s16, s0, s15
 802a5f4:	2d00      	cmp	r5, #0
 802a5f6:	9a07      	ldr	r2, [sp, #28]
 802a5f8:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802a5fc:	ee17 9a90 	vmov	r9, s15
 802a600:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a604:	ee38 8a67 	vsub.f32	s16, s16, s15
 802a608:	dd41      	ble.n	802a68e <__kernel_rem_pio2f+0x1a6>
 802a60a:	f106 3cff 	add.w	ip, r6, #4294967295
 802a60e:	ab08      	add	r3, sp, #32
 802a610:	f1c5 0e08 	rsb	lr, r5, #8
 802a614:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802a618:	fa47 f00e 	asr.w	r0, r7, lr
 802a61c:	4481      	add	r9, r0
 802a61e:	fa00 f00e 	lsl.w	r0, r0, lr
 802a622:	1a3f      	subs	r7, r7, r0
 802a624:	f1c5 0007 	rsb	r0, r5, #7
 802a628:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802a62c:	4107      	asrs	r7, r0
 802a62e:	2f00      	cmp	r7, #0
 802a630:	dd3c      	ble.n	802a6ac <__kernel_rem_pio2f+0x1c4>
 802a632:	f04f 0e00 	mov.w	lr, #0
 802a636:	f109 0901 	add.w	r9, r9, #1
 802a63a:	4671      	mov	r1, lr
 802a63c:	4576      	cmp	r6, lr
 802a63e:	dc67      	bgt.n	802a710 <__kernel_rem_pio2f+0x228>
 802a640:	2d00      	cmp	r5, #0
 802a642:	dd03      	ble.n	802a64c <__kernel_rem_pio2f+0x164>
 802a644:	2d01      	cmp	r5, #1
 802a646:	d074      	beq.n	802a732 <__kernel_rem_pio2f+0x24a>
 802a648:	2d02      	cmp	r5, #2
 802a64a:	d07b      	beq.n	802a744 <__kernel_rem_pio2f+0x25c>
 802a64c:	2f02      	cmp	r7, #2
 802a64e:	d12d      	bne.n	802a6ac <__kernel_rem_pio2f+0x1c4>
 802a650:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802a654:	ee30 8a48 	vsub.f32	s16, s0, s16
 802a658:	b341      	cbz	r1, 802a6ac <__kernel_rem_pio2f+0x1c4>
 802a65a:	4628      	mov	r0, r5
 802a65c:	9207      	str	r2, [sp, #28]
 802a65e:	f7ff fedd 	bl	802a41c <scalbnf>
 802a662:	9a07      	ldr	r2, [sp, #28]
 802a664:	ee38 8a40 	vsub.f32	s16, s16, s0
 802a668:	e020      	b.n	802a6ac <__kernel_rem_pio2f+0x1c4>
 802a66a:	ee60 7a28 	vmul.f32	s15, s0, s17
 802a66e:	3f01      	subs	r7, #1
 802a670:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a674:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a678:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802a67c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a680:	ecac 0a01 	vstmia	ip!, {s0}
 802a684:	ed90 0a00 	vldr	s0, [r0]
 802a688:	ee37 0a80 	vadd.f32	s0, s15, s0
 802a68c:	e79e      	b.n	802a5cc <__kernel_rem_pio2f+0xe4>
 802a68e:	d105      	bne.n	802a69c <__kernel_rem_pio2f+0x1b4>
 802a690:	1e70      	subs	r0, r6, #1
 802a692:	ab08      	add	r3, sp, #32
 802a694:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802a698:	11ff      	asrs	r7, r7, #7
 802a69a:	e7c8      	b.n	802a62e <__kernel_rem_pio2f+0x146>
 802a69c:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a6a0:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802a6a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a6a8:	da30      	bge.n	802a70c <__kernel_rem_pio2f+0x224>
 802a6aa:	2700      	movs	r7, #0
 802a6ac:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802a6b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a6b4:	f040 809a 	bne.w	802a7ec <__kernel_rem_pio2f+0x304>
 802a6b8:	1e74      	subs	r4, r6, #1
 802a6ba:	46a4      	mov	ip, r4
 802a6bc:	2100      	movs	r1, #0
 802a6be:	45d4      	cmp	ip, sl
 802a6c0:	da47      	bge.n	802a752 <__kernel_rem_pio2f+0x26a>
 802a6c2:	2900      	cmp	r1, #0
 802a6c4:	d063      	beq.n	802a78e <__kernel_rem_pio2f+0x2a6>
 802a6c6:	ab08      	add	r3, sp, #32
 802a6c8:	3d08      	subs	r5, #8
 802a6ca:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802a6ce:	2b00      	cmp	r3, #0
 802a6d0:	d07f      	beq.n	802a7d2 <__kernel_rem_pio2f+0x2ea>
 802a6d2:	4628      	mov	r0, r5
 802a6d4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802a6d8:	f7ff fea0 	bl	802a41c <scalbnf>
 802a6dc:	1c63      	adds	r3, r4, #1
 802a6de:	aa44      	add	r2, sp, #272	; 0x110
 802a6e0:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802a7e4 <__kernel_rem_pio2f+0x2fc>
 802a6e4:	0099      	lsls	r1, r3, #2
 802a6e6:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802a6ea:	4623      	mov	r3, r4
 802a6ec:	2b00      	cmp	r3, #0
 802a6ee:	f280 80ad 	bge.w	802a84c <__kernel_rem_pio2f+0x364>
 802a6f2:	4623      	mov	r3, r4
 802a6f4:	2b00      	cmp	r3, #0
 802a6f6:	f2c0 80cb 	blt.w	802a890 <__kernel_rem_pio2f+0x3a8>
 802a6fa:	aa44      	add	r2, sp, #272	; 0x110
 802a6fc:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802a700:	4e36      	ldr	r6, [pc, #216]	; (802a7dc <__kernel_rem_pio2f+0x2f4>)
 802a702:	eddf 7a39 	vldr	s15, [pc, #228]	; 802a7e8 <__kernel_rem_pio2f+0x300>
 802a706:	2000      	movs	r0, #0
 802a708:	1ae2      	subs	r2, r4, r3
 802a70a:	e0b6      	b.n	802a87a <__kernel_rem_pio2f+0x392>
 802a70c:	2702      	movs	r7, #2
 802a70e:	e790      	b.n	802a632 <__kernel_rem_pio2f+0x14a>
 802a710:	6820      	ldr	r0, [r4, #0]
 802a712:	b949      	cbnz	r1, 802a728 <__kernel_rem_pio2f+0x240>
 802a714:	b118      	cbz	r0, 802a71e <__kernel_rem_pio2f+0x236>
 802a716:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802a71a:	6020      	str	r0, [r4, #0]
 802a71c:	2001      	movs	r0, #1
 802a71e:	f10e 0e01 	add.w	lr, lr, #1
 802a722:	3404      	adds	r4, #4
 802a724:	4601      	mov	r1, r0
 802a726:	e789      	b.n	802a63c <__kernel_rem_pio2f+0x154>
 802a728:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802a72c:	6020      	str	r0, [r4, #0]
 802a72e:	4608      	mov	r0, r1
 802a730:	e7f5      	b.n	802a71e <__kernel_rem_pio2f+0x236>
 802a732:	1e74      	subs	r4, r6, #1
 802a734:	ab08      	add	r3, sp, #32
 802a736:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802a73a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802a73e:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802a742:	e783      	b.n	802a64c <__kernel_rem_pio2f+0x164>
 802a744:	1e74      	subs	r4, r6, #1
 802a746:	ab08      	add	r3, sp, #32
 802a748:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802a74c:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802a750:	e7f5      	b.n	802a73e <__kernel_rem_pio2f+0x256>
 802a752:	ab08      	add	r3, sp, #32
 802a754:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802a758:	f10c 3cff 	add.w	ip, ip, #4294967295
 802a75c:	4301      	orrs	r1, r0
 802a75e:	e7ae      	b.n	802a6be <__kernel_rem_pio2f+0x1d6>
 802a760:	3001      	adds	r0, #1
 802a762:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802a766:	2f00      	cmp	r7, #0
 802a768:	d0fa      	beq.n	802a760 <__kernel_rem_pio2f+0x278>
 802a76a:	9b06      	ldr	r3, [sp, #24]
 802a76c:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802a770:	eb0d 0403 	add.w	r4, sp, r3
 802a774:	9b01      	ldr	r3, [sp, #4]
 802a776:	18f7      	adds	r7, r6, r3
 802a778:	ab1c      	add	r3, sp, #112	; 0x70
 802a77a:	f106 0c01 	add.w	ip, r6, #1
 802a77e:	3c4c      	subs	r4, #76	; 0x4c
 802a780:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802a784:	4430      	add	r0, r6
 802a786:	4560      	cmp	r0, ip
 802a788:	da04      	bge.n	802a794 <__kernel_rem_pio2f+0x2ac>
 802a78a:	4606      	mov	r6, r0
 802a78c:	e711      	b.n	802a5b2 <__kernel_rem_pio2f+0xca>
 802a78e:	9c05      	ldr	r4, [sp, #20]
 802a790:	2001      	movs	r0, #1
 802a792:	e7e6      	b.n	802a762 <__kernel_rem_pio2f+0x27a>
 802a794:	9b04      	ldr	r3, [sp, #16]
 802a796:	f8dd e008 	ldr.w	lr, [sp, #8]
 802a79a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802a79e:	9306      	str	r3, [sp, #24]
 802a7a0:	ee07 3a90 	vmov	s15, r3
 802a7a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a7a8:	2600      	movs	r6, #0
 802a7aa:	ece7 7a01 	vstmia	r7!, {s15}
 802a7ae:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a7e8 <__kernel_rem_pio2f+0x300>
 802a7b2:	46b9      	mov	r9, r7
 802a7b4:	455e      	cmp	r6, fp
 802a7b6:	dd04      	ble.n	802a7c2 <__kernel_rem_pio2f+0x2da>
 802a7b8:	ece4 7a01 	vstmia	r4!, {s15}
 802a7bc:	f10c 0c01 	add.w	ip, ip, #1
 802a7c0:	e7e1      	b.n	802a786 <__kernel_rem_pio2f+0x29e>
 802a7c2:	ecfe 6a01 	vldmia	lr!, {s13}
 802a7c6:	ed39 7a01 	vldmdb	r9!, {s14}
 802a7ca:	3601      	adds	r6, #1
 802a7cc:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a7d0:	e7f0      	b.n	802a7b4 <__kernel_rem_pio2f+0x2cc>
 802a7d2:	3c01      	subs	r4, #1
 802a7d4:	e777      	b.n	802a6c6 <__kernel_rem_pio2f+0x1de>
 802a7d6:	bf00      	nop
 802a7d8:	08043024 	.word	0x08043024
 802a7dc:	08042ff8 	.word	0x08042ff8
 802a7e0:	43800000 	.word	0x43800000
 802a7e4:	3b800000 	.word	0x3b800000
 802a7e8:	00000000 	.word	0x00000000
 802a7ec:	9b03      	ldr	r3, [sp, #12]
 802a7ee:	eeb0 0a48 	vmov.f32	s0, s16
 802a7f2:	1a98      	subs	r0, r3, r2
 802a7f4:	f7ff fe12 	bl	802a41c <scalbnf>
 802a7f8:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802a7e0 <__kernel_rem_pio2f+0x2f8>
 802a7fc:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802a800:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a804:	db19      	blt.n	802a83a <__kernel_rem_pio2f+0x352>
 802a806:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802a7e4 <__kernel_rem_pio2f+0x2fc>
 802a80a:	ee60 7a27 	vmul.f32	s15, s0, s15
 802a80e:	aa08      	add	r2, sp, #32
 802a810:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a814:	1c74      	adds	r4, r6, #1
 802a816:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a81a:	3508      	adds	r5, #8
 802a81c:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802a820:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a824:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a828:	ee10 3a10 	vmov	r3, s0
 802a82c:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802a830:	ee17 3a90 	vmov	r3, s15
 802a834:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802a838:	e74b      	b.n	802a6d2 <__kernel_rem_pio2f+0x1ea>
 802a83a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a83e:	aa08      	add	r2, sp, #32
 802a840:	ee10 3a10 	vmov	r3, s0
 802a844:	4634      	mov	r4, r6
 802a846:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802a84a:	e742      	b.n	802a6d2 <__kernel_rem_pio2f+0x1ea>
 802a84c:	a808      	add	r0, sp, #32
 802a84e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802a852:	9001      	str	r0, [sp, #4]
 802a854:	ee07 0a90 	vmov	s15, r0
 802a858:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a85c:	3b01      	subs	r3, #1
 802a85e:	ee67 7a80 	vmul.f32	s15, s15, s0
 802a862:	ee20 0a07 	vmul.f32	s0, s0, s14
 802a866:	ed62 7a01 	vstmdb	r2!, {s15}
 802a86a:	e73f      	b.n	802a6ec <__kernel_rem_pio2f+0x204>
 802a86c:	ecf6 6a01 	vldmia	r6!, {s13}
 802a870:	ecb5 7a01 	vldmia	r5!, {s14}
 802a874:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a878:	3001      	adds	r0, #1
 802a87a:	4550      	cmp	r0, sl
 802a87c:	dc01      	bgt.n	802a882 <__kernel_rem_pio2f+0x39a>
 802a87e:	4290      	cmp	r0, r2
 802a880:	ddf4      	ble.n	802a86c <__kernel_rem_pio2f+0x384>
 802a882:	a858      	add	r0, sp, #352	; 0x160
 802a884:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802a888:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802a88c:	3b01      	subs	r3, #1
 802a88e:	e731      	b.n	802a6f4 <__kernel_rem_pio2f+0x20c>
 802a890:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802a892:	2b02      	cmp	r3, #2
 802a894:	dc09      	bgt.n	802a8aa <__kernel_rem_pio2f+0x3c2>
 802a896:	2b00      	cmp	r3, #0
 802a898:	dc2b      	bgt.n	802a8f2 <__kernel_rem_pio2f+0x40a>
 802a89a:	d044      	beq.n	802a926 <__kernel_rem_pio2f+0x43e>
 802a89c:	f009 0007 	and.w	r0, r9, #7
 802a8a0:	b059      	add	sp, #356	; 0x164
 802a8a2:	ecbd 8b04 	vpop	{d8-d9}
 802a8a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a8aa:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802a8ac:	2b03      	cmp	r3, #3
 802a8ae:	d1f5      	bne.n	802a89c <__kernel_rem_pio2f+0x3b4>
 802a8b0:	aa30      	add	r2, sp, #192	; 0xc0
 802a8b2:	1f0b      	subs	r3, r1, #4
 802a8b4:	4413      	add	r3, r2
 802a8b6:	461a      	mov	r2, r3
 802a8b8:	4620      	mov	r0, r4
 802a8ba:	2800      	cmp	r0, #0
 802a8bc:	f1a2 0204 	sub.w	r2, r2, #4
 802a8c0:	dc52      	bgt.n	802a968 <__kernel_rem_pio2f+0x480>
 802a8c2:	4622      	mov	r2, r4
 802a8c4:	2a01      	cmp	r2, #1
 802a8c6:	f1a3 0304 	sub.w	r3, r3, #4
 802a8ca:	dc5d      	bgt.n	802a988 <__kernel_rem_pio2f+0x4a0>
 802a8cc:	ab30      	add	r3, sp, #192	; 0xc0
 802a8ce:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802a7e8 <__kernel_rem_pio2f+0x300>
 802a8d2:	440b      	add	r3, r1
 802a8d4:	2c01      	cmp	r4, #1
 802a8d6:	dc67      	bgt.n	802a9a8 <__kernel_rem_pio2f+0x4c0>
 802a8d8:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802a8dc:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802a8e0:	2f00      	cmp	r7, #0
 802a8e2:	d167      	bne.n	802a9b4 <__kernel_rem_pio2f+0x4cc>
 802a8e4:	edc8 6a00 	vstr	s13, [r8]
 802a8e8:	ed88 7a01 	vstr	s14, [r8, #4]
 802a8ec:	edc8 7a02 	vstr	s15, [r8, #8]
 802a8f0:	e7d4      	b.n	802a89c <__kernel_rem_pio2f+0x3b4>
 802a8f2:	ab30      	add	r3, sp, #192	; 0xc0
 802a8f4:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802a7e8 <__kernel_rem_pio2f+0x300>
 802a8f8:	440b      	add	r3, r1
 802a8fa:	4622      	mov	r2, r4
 802a8fc:	2a00      	cmp	r2, #0
 802a8fe:	da24      	bge.n	802a94a <__kernel_rem_pio2f+0x462>
 802a900:	b34f      	cbz	r7, 802a956 <__kernel_rem_pio2f+0x46e>
 802a902:	eef1 7a47 	vneg.f32	s15, s14
 802a906:	edc8 7a00 	vstr	s15, [r8]
 802a90a:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802a90e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a912:	aa31      	add	r2, sp, #196	; 0xc4
 802a914:	2301      	movs	r3, #1
 802a916:	429c      	cmp	r4, r3
 802a918:	da20      	bge.n	802a95c <__kernel_rem_pio2f+0x474>
 802a91a:	b10f      	cbz	r7, 802a920 <__kernel_rem_pio2f+0x438>
 802a91c:	eef1 7a67 	vneg.f32	s15, s15
 802a920:	edc8 7a01 	vstr	s15, [r8, #4]
 802a924:	e7ba      	b.n	802a89c <__kernel_rem_pio2f+0x3b4>
 802a926:	ab30      	add	r3, sp, #192	; 0xc0
 802a928:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802a7e8 <__kernel_rem_pio2f+0x300>
 802a92c:	440b      	add	r3, r1
 802a92e:	2c00      	cmp	r4, #0
 802a930:	da05      	bge.n	802a93e <__kernel_rem_pio2f+0x456>
 802a932:	b10f      	cbz	r7, 802a938 <__kernel_rem_pio2f+0x450>
 802a934:	eef1 7a67 	vneg.f32	s15, s15
 802a938:	edc8 7a00 	vstr	s15, [r8]
 802a93c:	e7ae      	b.n	802a89c <__kernel_rem_pio2f+0x3b4>
 802a93e:	ed33 7a01 	vldmdb	r3!, {s14}
 802a942:	3c01      	subs	r4, #1
 802a944:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a948:	e7f1      	b.n	802a92e <__kernel_rem_pio2f+0x446>
 802a94a:	ed73 7a01 	vldmdb	r3!, {s15}
 802a94e:	3a01      	subs	r2, #1
 802a950:	ee37 7a27 	vadd.f32	s14, s14, s15
 802a954:	e7d2      	b.n	802a8fc <__kernel_rem_pio2f+0x414>
 802a956:	eef0 7a47 	vmov.f32	s15, s14
 802a95a:	e7d4      	b.n	802a906 <__kernel_rem_pio2f+0x41e>
 802a95c:	ecb2 7a01 	vldmia	r2!, {s14}
 802a960:	3301      	adds	r3, #1
 802a962:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a966:	e7d6      	b.n	802a916 <__kernel_rem_pio2f+0x42e>
 802a968:	edd2 7a00 	vldr	s15, [r2]
 802a96c:	edd2 6a01 	vldr	s13, [r2, #4]
 802a970:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802a974:	3801      	subs	r0, #1
 802a976:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a97a:	ed82 7a00 	vstr	s14, [r2]
 802a97e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802a982:	edc2 7a01 	vstr	s15, [r2, #4]
 802a986:	e798      	b.n	802a8ba <__kernel_rem_pio2f+0x3d2>
 802a988:	edd3 7a00 	vldr	s15, [r3]
 802a98c:	edd3 6a01 	vldr	s13, [r3, #4]
 802a990:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802a994:	3a01      	subs	r2, #1
 802a996:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a99a:	ed83 7a00 	vstr	s14, [r3]
 802a99e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802a9a2:	edc3 7a01 	vstr	s15, [r3, #4]
 802a9a6:	e78d      	b.n	802a8c4 <__kernel_rem_pio2f+0x3dc>
 802a9a8:	ed33 7a01 	vldmdb	r3!, {s14}
 802a9ac:	3c01      	subs	r4, #1
 802a9ae:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a9b2:	e78f      	b.n	802a8d4 <__kernel_rem_pio2f+0x3ec>
 802a9b4:	eef1 6a66 	vneg.f32	s13, s13
 802a9b8:	eeb1 7a47 	vneg.f32	s14, s14
 802a9bc:	edc8 6a00 	vstr	s13, [r8]
 802a9c0:	ed88 7a01 	vstr	s14, [r8, #4]
 802a9c4:	eef1 7a67 	vneg.f32	s15, s15
 802a9c8:	e790      	b.n	802a8ec <__kernel_rem_pio2f+0x404>
 802a9ca:	bf00      	nop

0802a9cc <abort>:
 802a9cc:	b508      	push	{r3, lr}
 802a9ce:	2006      	movs	r0, #6
 802a9d0:	f000 fa3a 	bl	802ae48 <raise>
 802a9d4:	2001      	movs	r0, #1
 802a9d6:	f7d8 f935 	bl	8002c44 <_exit>
	...

0802a9dc <__assert_func>:
 802a9dc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802a9de:	4614      	mov	r4, r2
 802a9e0:	461a      	mov	r2, r3
 802a9e2:	4b09      	ldr	r3, [pc, #36]	; (802aa08 <__assert_func+0x2c>)
 802a9e4:	681b      	ldr	r3, [r3, #0]
 802a9e6:	4605      	mov	r5, r0
 802a9e8:	68d8      	ldr	r0, [r3, #12]
 802a9ea:	b14c      	cbz	r4, 802aa00 <__assert_func+0x24>
 802a9ec:	4b07      	ldr	r3, [pc, #28]	; (802aa0c <__assert_func+0x30>)
 802a9ee:	9100      	str	r1, [sp, #0]
 802a9f0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802a9f4:	4906      	ldr	r1, [pc, #24]	; (802aa10 <__assert_func+0x34>)
 802a9f6:	462b      	mov	r3, r5
 802a9f8:	f000 f982 	bl	802ad00 <fiprintf>
 802a9fc:	f7ff ffe6 	bl	802a9cc <abort>
 802aa00:	4b04      	ldr	r3, [pc, #16]	; (802aa14 <__assert_func+0x38>)
 802aa02:	461c      	mov	r4, r3
 802aa04:	e7f3      	b.n	802a9ee <__assert_func+0x12>
 802aa06:	bf00      	nop
 802aa08:	20000160 	.word	0x20000160
 802aa0c:	08043030 	.word	0x08043030
 802aa10:	0804303d 	.word	0x0804303d
 802aa14:	0804306b 	.word	0x0804306b

0802aa18 <atexit>:
 802aa18:	2300      	movs	r3, #0
 802aa1a:	4601      	mov	r1, r0
 802aa1c:	461a      	mov	r2, r3
 802aa1e:	4618      	mov	r0, r3
 802aa20:	f000 bb16 	b.w	802b050 <__register_exitproc>

0802aa24 <malloc>:
 802aa24:	4b02      	ldr	r3, [pc, #8]	; (802aa30 <malloc+0xc>)
 802aa26:	4601      	mov	r1, r0
 802aa28:	6818      	ldr	r0, [r3, #0]
 802aa2a:	f000 b82b 	b.w	802aa84 <_malloc_r>
 802aa2e:	bf00      	nop
 802aa30:	20000160 	.word	0x20000160

0802aa34 <free>:
 802aa34:	4b02      	ldr	r3, [pc, #8]	; (802aa40 <free+0xc>)
 802aa36:	4601      	mov	r1, r0
 802aa38:	6818      	ldr	r0, [r3, #0]
 802aa3a:	f000 bb67 	b.w	802b10c <_free_r>
 802aa3e:	bf00      	nop
 802aa40:	20000160 	.word	0x20000160

0802aa44 <sbrk_aligned>:
 802aa44:	b570      	push	{r4, r5, r6, lr}
 802aa46:	4e0e      	ldr	r6, [pc, #56]	; (802aa80 <sbrk_aligned+0x3c>)
 802aa48:	460c      	mov	r4, r1
 802aa4a:	6831      	ldr	r1, [r6, #0]
 802aa4c:	4605      	mov	r5, r0
 802aa4e:	b911      	cbnz	r1, 802aa56 <sbrk_aligned+0x12>
 802aa50:	f000 faa0 	bl	802af94 <_sbrk_r>
 802aa54:	6030      	str	r0, [r6, #0]
 802aa56:	4621      	mov	r1, r4
 802aa58:	4628      	mov	r0, r5
 802aa5a:	f000 fa9b 	bl	802af94 <_sbrk_r>
 802aa5e:	1c43      	adds	r3, r0, #1
 802aa60:	d00a      	beq.n	802aa78 <sbrk_aligned+0x34>
 802aa62:	1cc4      	adds	r4, r0, #3
 802aa64:	f024 0403 	bic.w	r4, r4, #3
 802aa68:	42a0      	cmp	r0, r4
 802aa6a:	d007      	beq.n	802aa7c <sbrk_aligned+0x38>
 802aa6c:	1a21      	subs	r1, r4, r0
 802aa6e:	4628      	mov	r0, r5
 802aa70:	f000 fa90 	bl	802af94 <_sbrk_r>
 802aa74:	3001      	adds	r0, #1
 802aa76:	d101      	bne.n	802aa7c <sbrk_aligned+0x38>
 802aa78:	f04f 34ff 	mov.w	r4, #4294967295
 802aa7c:	4620      	mov	r0, r4
 802aa7e:	bd70      	pop	{r4, r5, r6, pc}
 802aa80:	2001370c 	.word	0x2001370c

0802aa84 <_malloc_r>:
 802aa84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802aa88:	1ccd      	adds	r5, r1, #3
 802aa8a:	f025 0503 	bic.w	r5, r5, #3
 802aa8e:	3508      	adds	r5, #8
 802aa90:	2d0c      	cmp	r5, #12
 802aa92:	bf38      	it	cc
 802aa94:	250c      	movcc	r5, #12
 802aa96:	2d00      	cmp	r5, #0
 802aa98:	4607      	mov	r7, r0
 802aa9a:	db01      	blt.n	802aaa0 <_malloc_r+0x1c>
 802aa9c:	42a9      	cmp	r1, r5
 802aa9e:	d905      	bls.n	802aaac <_malloc_r+0x28>
 802aaa0:	230c      	movs	r3, #12
 802aaa2:	603b      	str	r3, [r7, #0]
 802aaa4:	2600      	movs	r6, #0
 802aaa6:	4630      	mov	r0, r6
 802aaa8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802aaac:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802ab80 <_malloc_r+0xfc>
 802aab0:	f000 f868 	bl	802ab84 <__malloc_lock>
 802aab4:	f8d8 3000 	ldr.w	r3, [r8]
 802aab8:	461c      	mov	r4, r3
 802aaba:	bb5c      	cbnz	r4, 802ab14 <_malloc_r+0x90>
 802aabc:	4629      	mov	r1, r5
 802aabe:	4638      	mov	r0, r7
 802aac0:	f7ff ffc0 	bl	802aa44 <sbrk_aligned>
 802aac4:	1c43      	adds	r3, r0, #1
 802aac6:	4604      	mov	r4, r0
 802aac8:	d155      	bne.n	802ab76 <_malloc_r+0xf2>
 802aaca:	f8d8 4000 	ldr.w	r4, [r8]
 802aace:	4626      	mov	r6, r4
 802aad0:	2e00      	cmp	r6, #0
 802aad2:	d145      	bne.n	802ab60 <_malloc_r+0xdc>
 802aad4:	2c00      	cmp	r4, #0
 802aad6:	d048      	beq.n	802ab6a <_malloc_r+0xe6>
 802aad8:	6823      	ldr	r3, [r4, #0]
 802aada:	4631      	mov	r1, r6
 802aadc:	4638      	mov	r0, r7
 802aade:	eb04 0903 	add.w	r9, r4, r3
 802aae2:	f000 fa57 	bl	802af94 <_sbrk_r>
 802aae6:	4581      	cmp	r9, r0
 802aae8:	d13f      	bne.n	802ab6a <_malloc_r+0xe6>
 802aaea:	6821      	ldr	r1, [r4, #0]
 802aaec:	1a6d      	subs	r5, r5, r1
 802aaee:	4629      	mov	r1, r5
 802aaf0:	4638      	mov	r0, r7
 802aaf2:	f7ff ffa7 	bl	802aa44 <sbrk_aligned>
 802aaf6:	3001      	adds	r0, #1
 802aaf8:	d037      	beq.n	802ab6a <_malloc_r+0xe6>
 802aafa:	6823      	ldr	r3, [r4, #0]
 802aafc:	442b      	add	r3, r5
 802aafe:	6023      	str	r3, [r4, #0]
 802ab00:	f8d8 3000 	ldr.w	r3, [r8]
 802ab04:	2b00      	cmp	r3, #0
 802ab06:	d038      	beq.n	802ab7a <_malloc_r+0xf6>
 802ab08:	685a      	ldr	r2, [r3, #4]
 802ab0a:	42a2      	cmp	r2, r4
 802ab0c:	d12b      	bne.n	802ab66 <_malloc_r+0xe2>
 802ab0e:	2200      	movs	r2, #0
 802ab10:	605a      	str	r2, [r3, #4]
 802ab12:	e00f      	b.n	802ab34 <_malloc_r+0xb0>
 802ab14:	6822      	ldr	r2, [r4, #0]
 802ab16:	1b52      	subs	r2, r2, r5
 802ab18:	d41f      	bmi.n	802ab5a <_malloc_r+0xd6>
 802ab1a:	2a0b      	cmp	r2, #11
 802ab1c:	d917      	bls.n	802ab4e <_malloc_r+0xca>
 802ab1e:	1961      	adds	r1, r4, r5
 802ab20:	42a3      	cmp	r3, r4
 802ab22:	6025      	str	r5, [r4, #0]
 802ab24:	bf18      	it	ne
 802ab26:	6059      	strne	r1, [r3, #4]
 802ab28:	6863      	ldr	r3, [r4, #4]
 802ab2a:	bf08      	it	eq
 802ab2c:	f8c8 1000 	streq.w	r1, [r8]
 802ab30:	5162      	str	r2, [r4, r5]
 802ab32:	604b      	str	r3, [r1, #4]
 802ab34:	4638      	mov	r0, r7
 802ab36:	f104 060b 	add.w	r6, r4, #11
 802ab3a:	f000 f829 	bl	802ab90 <__malloc_unlock>
 802ab3e:	f026 0607 	bic.w	r6, r6, #7
 802ab42:	1d23      	adds	r3, r4, #4
 802ab44:	1af2      	subs	r2, r6, r3
 802ab46:	d0ae      	beq.n	802aaa6 <_malloc_r+0x22>
 802ab48:	1b9b      	subs	r3, r3, r6
 802ab4a:	50a3      	str	r3, [r4, r2]
 802ab4c:	e7ab      	b.n	802aaa6 <_malloc_r+0x22>
 802ab4e:	42a3      	cmp	r3, r4
 802ab50:	6862      	ldr	r2, [r4, #4]
 802ab52:	d1dd      	bne.n	802ab10 <_malloc_r+0x8c>
 802ab54:	f8c8 2000 	str.w	r2, [r8]
 802ab58:	e7ec      	b.n	802ab34 <_malloc_r+0xb0>
 802ab5a:	4623      	mov	r3, r4
 802ab5c:	6864      	ldr	r4, [r4, #4]
 802ab5e:	e7ac      	b.n	802aaba <_malloc_r+0x36>
 802ab60:	4634      	mov	r4, r6
 802ab62:	6876      	ldr	r6, [r6, #4]
 802ab64:	e7b4      	b.n	802aad0 <_malloc_r+0x4c>
 802ab66:	4613      	mov	r3, r2
 802ab68:	e7cc      	b.n	802ab04 <_malloc_r+0x80>
 802ab6a:	230c      	movs	r3, #12
 802ab6c:	603b      	str	r3, [r7, #0]
 802ab6e:	4638      	mov	r0, r7
 802ab70:	f000 f80e 	bl	802ab90 <__malloc_unlock>
 802ab74:	e797      	b.n	802aaa6 <_malloc_r+0x22>
 802ab76:	6025      	str	r5, [r4, #0]
 802ab78:	e7dc      	b.n	802ab34 <_malloc_r+0xb0>
 802ab7a:	605b      	str	r3, [r3, #4]
 802ab7c:	deff      	udf	#255	; 0xff
 802ab7e:	bf00      	nop
 802ab80:	20013708 	.word	0x20013708

0802ab84 <__malloc_lock>:
 802ab84:	4801      	ldr	r0, [pc, #4]	; (802ab8c <__malloc_lock+0x8>)
 802ab86:	f000 ba52 	b.w	802b02e <__retarget_lock_acquire_recursive>
 802ab8a:	bf00      	nop
 802ab8c:	20013851 	.word	0x20013851

0802ab90 <__malloc_unlock>:
 802ab90:	4801      	ldr	r0, [pc, #4]	; (802ab98 <__malloc_unlock+0x8>)
 802ab92:	f000 ba4d 	b.w	802b030 <__retarget_lock_release_recursive>
 802ab96:	bf00      	nop
 802ab98:	20013851 	.word	0x20013851

0802ab9c <__cxa_atexit>:
 802ab9c:	b510      	push	{r4, lr}
 802ab9e:	4c05      	ldr	r4, [pc, #20]	; (802abb4 <__cxa_atexit+0x18>)
 802aba0:	4613      	mov	r3, r2
 802aba2:	b12c      	cbz	r4, 802abb0 <__cxa_atexit+0x14>
 802aba4:	460a      	mov	r2, r1
 802aba6:	4601      	mov	r1, r0
 802aba8:	2002      	movs	r0, #2
 802abaa:	f000 fa51 	bl	802b050 <__register_exitproc>
 802abae:	bd10      	pop	{r4, pc}
 802abb0:	4620      	mov	r0, r4
 802abb2:	e7fc      	b.n	802abae <__cxa_atexit+0x12>
 802abb4:	0802b051 	.word	0x0802b051

0802abb8 <std>:
 802abb8:	2300      	movs	r3, #0
 802abba:	b510      	push	{r4, lr}
 802abbc:	4604      	mov	r4, r0
 802abbe:	e9c0 3300 	strd	r3, r3, [r0]
 802abc2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802abc6:	6083      	str	r3, [r0, #8]
 802abc8:	8181      	strh	r1, [r0, #12]
 802abca:	6643      	str	r3, [r0, #100]	; 0x64
 802abcc:	81c2      	strh	r2, [r0, #14]
 802abce:	6183      	str	r3, [r0, #24]
 802abd0:	4619      	mov	r1, r3
 802abd2:	2208      	movs	r2, #8
 802abd4:	305c      	adds	r0, #92	; 0x5c
 802abd6:	f000 f906 	bl	802ade6 <memset>
 802abda:	4b0d      	ldr	r3, [pc, #52]	; (802ac10 <std+0x58>)
 802abdc:	6263      	str	r3, [r4, #36]	; 0x24
 802abde:	4b0d      	ldr	r3, [pc, #52]	; (802ac14 <std+0x5c>)
 802abe0:	62a3      	str	r3, [r4, #40]	; 0x28
 802abe2:	4b0d      	ldr	r3, [pc, #52]	; (802ac18 <std+0x60>)
 802abe4:	62e3      	str	r3, [r4, #44]	; 0x2c
 802abe6:	4b0d      	ldr	r3, [pc, #52]	; (802ac1c <std+0x64>)
 802abe8:	6323      	str	r3, [r4, #48]	; 0x30
 802abea:	4b0d      	ldr	r3, [pc, #52]	; (802ac20 <std+0x68>)
 802abec:	6224      	str	r4, [r4, #32]
 802abee:	429c      	cmp	r4, r3
 802abf0:	d006      	beq.n	802ac00 <std+0x48>
 802abf2:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802abf6:	4294      	cmp	r4, r2
 802abf8:	d002      	beq.n	802ac00 <std+0x48>
 802abfa:	33d0      	adds	r3, #208	; 0xd0
 802abfc:	429c      	cmp	r4, r3
 802abfe:	d105      	bne.n	802ac0c <std+0x54>
 802ac00:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802ac04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ac08:	f000 ba10 	b.w	802b02c <__retarget_lock_init_recursive>
 802ac0c:	bd10      	pop	{r4, pc}
 802ac0e:	bf00      	nop
 802ac10:	0802ad61 	.word	0x0802ad61
 802ac14:	0802ad83 	.word	0x0802ad83
 802ac18:	0802adbb 	.word	0x0802adbb
 802ac1c:	0802addf 	.word	0x0802addf
 802ac20:	20013710 	.word	0x20013710

0802ac24 <stdio_exit_handler>:
 802ac24:	4a02      	ldr	r2, [pc, #8]	; (802ac30 <stdio_exit_handler+0xc>)
 802ac26:	4903      	ldr	r1, [pc, #12]	; (802ac34 <stdio_exit_handler+0x10>)
 802ac28:	4803      	ldr	r0, [pc, #12]	; (802ac38 <stdio_exit_handler+0x14>)
 802ac2a:	f000 b87b 	b.w	802ad24 <_fwalk_sglue>
 802ac2e:	bf00      	nop
 802ac30:	20000108 	.word	0x20000108
 802ac34:	0802b859 	.word	0x0802b859
 802ac38:	20000114 	.word	0x20000114

0802ac3c <cleanup_stdio>:
 802ac3c:	6841      	ldr	r1, [r0, #4]
 802ac3e:	4b0c      	ldr	r3, [pc, #48]	; (802ac70 <cleanup_stdio+0x34>)
 802ac40:	4299      	cmp	r1, r3
 802ac42:	b510      	push	{r4, lr}
 802ac44:	4604      	mov	r4, r0
 802ac46:	d001      	beq.n	802ac4c <cleanup_stdio+0x10>
 802ac48:	f000 fe06 	bl	802b858 <_fflush_r>
 802ac4c:	68a1      	ldr	r1, [r4, #8]
 802ac4e:	4b09      	ldr	r3, [pc, #36]	; (802ac74 <cleanup_stdio+0x38>)
 802ac50:	4299      	cmp	r1, r3
 802ac52:	d002      	beq.n	802ac5a <cleanup_stdio+0x1e>
 802ac54:	4620      	mov	r0, r4
 802ac56:	f000 fdff 	bl	802b858 <_fflush_r>
 802ac5a:	68e1      	ldr	r1, [r4, #12]
 802ac5c:	4b06      	ldr	r3, [pc, #24]	; (802ac78 <cleanup_stdio+0x3c>)
 802ac5e:	4299      	cmp	r1, r3
 802ac60:	d004      	beq.n	802ac6c <cleanup_stdio+0x30>
 802ac62:	4620      	mov	r0, r4
 802ac64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ac68:	f000 bdf6 	b.w	802b858 <_fflush_r>
 802ac6c:	bd10      	pop	{r4, pc}
 802ac6e:	bf00      	nop
 802ac70:	20013710 	.word	0x20013710
 802ac74:	20013778 	.word	0x20013778
 802ac78:	200137e0 	.word	0x200137e0

0802ac7c <global_stdio_init.part.0>:
 802ac7c:	b510      	push	{r4, lr}
 802ac7e:	4b0b      	ldr	r3, [pc, #44]	; (802acac <global_stdio_init.part.0+0x30>)
 802ac80:	4c0b      	ldr	r4, [pc, #44]	; (802acb0 <global_stdio_init.part.0+0x34>)
 802ac82:	4a0c      	ldr	r2, [pc, #48]	; (802acb4 <global_stdio_init.part.0+0x38>)
 802ac84:	601a      	str	r2, [r3, #0]
 802ac86:	4620      	mov	r0, r4
 802ac88:	2200      	movs	r2, #0
 802ac8a:	2104      	movs	r1, #4
 802ac8c:	f7ff ff94 	bl	802abb8 <std>
 802ac90:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802ac94:	2201      	movs	r2, #1
 802ac96:	2109      	movs	r1, #9
 802ac98:	f7ff ff8e 	bl	802abb8 <std>
 802ac9c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802aca0:	2202      	movs	r2, #2
 802aca2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802aca6:	2112      	movs	r1, #18
 802aca8:	f7ff bf86 	b.w	802abb8 <std>
 802acac:	20013848 	.word	0x20013848
 802acb0:	20013710 	.word	0x20013710
 802acb4:	0802ac25 	.word	0x0802ac25

0802acb8 <__sfp_lock_acquire>:
 802acb8:	4801      	ldr	r0, [pc, #4]	; (802acc0 <__sfp_lock_acquire+0x8>)
 802acba:	f000 b9b8 	b.w	802b02e <__retarget_lock_acquire_recursive>
 802acbe:	bf00      	nop
 802acc0:	20013852 	.word	0x20013852

0802acc4 <__sfp_lock_release>:
 802acc4:	4801      	ldr	r0, [pc, #4]	; (802accc <__sfp_lock_release+0x8>)
 802acc6:	f000 b9b3 	b.w	802b030 <__retarget_lock_release_recursive>
 802acca:	bf00      	nop
 802accc:	20013852 	.word	0x20013852

0802acd0 <__sinit>:
 802acd0:	b510      	push	{r4, lr}
 802acd2:	4604      	mov	r4, r0
 802acd4:	f7ff fff0 	bl	802acb8 <__sfp_lock_acquire>
 802acd8:	6a23      	ldr	r3, [r4, #32]
 802acda:	b11b      	cbz	r3, 802ace4 <__sinit+0x14>
 802acdc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ace0:	f7ff bff0 	b.w	802acc4 <__sfp_lock_release>
 802ace4:	4b04      	ldr	r3, [pc, #16]	; (802acf8 <__sinit+0x28>)
 802ace6:	6223      	str	r3, [r4, #32]
 802ace8:	4b04      	ldr	r3, [pc, #16]	; (802acfc <__sinit+0x2c>)
 802acea:	681b      	ldr	r3, [r3, #0]
 802acec:	2b00      	cmp	r3, #0
 802acee:	d1f5      	bne.n	802acdc <__sinit+0xc>
 802acf0:	f7ff ffc4 	bl	802ac7c <global_stdio_init.part.0>
 802acf4:	e7f2      	b.n	802acdc <__sinit+0xc>
 802acf6:	bf00      	nop
 802acf8:	0802ac3d 	.word	0x0802ac3d
 802acfc:	20013848 	.word	0x20013848

0802ad00 <fiprintf>:
 802ad00:	b40e      	push	{r1, r2, r3}
 802ad02:	b503      	push	{r0, r1, lr}
 802ad04:	4601      	mov	r1, r0
 802ad06:	ab03      	add	r3, sp, #12
 802ad08:	4805      	ldr	r0, [pc, #20]	; (802ad20 <fiprintf+0x20>)
 802ad0a:	f853 2b04 	ldr.w	r2, [r3], #4
 802ad0e:	6800      	ldr	r0, [r0, #0]
 802ad10:	9301      	str	r3, [sp, #4]
 802ad12:	f000 fa71 	bl	802b1f8 <_vfiprintf_r>
 802ad16:	b002      	add	sp, #8
 802ad18:	f85d eb04 	ldr.w	lr, [sp], #4
 802ad1c:	b003      	add	sp, #12
 802ad1e:	4770      	bx	lr
 802ad20:	20000160 	.word	0x20000160

0802ad24 <_fwalk_sglue>:
 802ad24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ad28:	4607      	mov	r7, r0
 802ad2a:	4688      	mov	r8, r1
 802ad2c:	4614      	mov	r4, r2
 802ad2e:	2600      	movs	r6, #0
 802ad30:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802ad34:	f1b9 0901 	subs.w	r9, r9, #1
 802ad38:	d505      	bpl.n	802ad46 <_fwalk_sglue+0x22>
 802ad3a:	6824      	ldr	r4, [r4, #0]
 802ad3c:	2c00      	cmp	r4, #0
 802ad3e:	d1f7      	bne.n	802ad30 <_fwalk_sglue+0xc>
 802ad40:	4630      	mov	r0, r6
 802ad42:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ad46:	89ab      	ldrh	r3, [r5, #12]
 802ad48:	2b01      	cmp	r3, #1
 802ad4a:	d907      	bls.n	802ad5c <_fwalk_sglue+0x38>
 802ad4c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802ad50:	3301      	adds	r3, #1
 802ad52:	d003      	beq.n	802ad5c <_fwalk_sglue+0x38>
 802ad54:	4629      	mov	r1, r5
 802ad56:	4638      	mov	r0, r7
 802ad58:	47c0      	blx	r8
 802ad5a:	4306      	orrs	r6, r0
 802ad5c:	3568      	adds	r5, #104	; 0x68
 802ad5e:	e7e9      	b.n	802ad34 <_fwalk_sglue+0x10>

0802ad60 <__sread>:
 802ad60:	b510      	push	{r4, lr}
 802ad62:	460c      	mov	r4, r1
 802ad64:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ad68:	f000 f8ee 	bl	802af48 <_read_r>
 802ad6c:	2800      	cmp	r0, #0
 802ad6e:	bfab      	itete	ge
 802ad70:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802ad72:	89a3      	ldrhlt	r3, [r4, #12]
 802ad74:	181b      	addge	r3, r3, r0
 802ad76:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802ad7a:	bfac      	ite	ge
 802ad7c:	6563      	strge	r3, [r4, #84]	; 0x54
 802ad7e:	81a3      	strhlt	r3, [r4, #12]
 802ad80:	bd10      	pop	{r4, pc}

0802ad82 <__swrite>:
 802ad82:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802ad86:	461f      	mov	r7, r3
 802ad88:	898b      	ldrh	r3, [r1, #12]
 802ad8a:	05db      	lsls	r3, r3, #23
 802ad8c:	4605      	mov	r5, r0
 802ad8e:	460c      	mov	r4, r1
 802ad90:	4616      	mov	r6, r2
 802ad92:	d505      	bpl.n	802ada0 <__swrite+0x1e>
 802ad94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ad98:	2302      	movs	r3, #2
 802ad9a:	2200      	movs	r2, #0
 802ad9c:	f000 f8c2 	bl	802af24 <_lseek_r>
 802ada0:	89a3      	ldrh	r3, [r4, #12]
 802ada2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802ada6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802adaa:	81a3      	strh	r3, [r4, #12]
 802adac:	4632      	mov	r2, r6
 802adae:	463b      	mov	r3, r7
 802adb0:	4628      	mov	r0, r5
 802adb2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802adb6:	f000 b8fd 	b.w	802afb4 <_write_r>

0802adba <__sseek>:
 802adba:	b510      	push	{r4, lr}
 802adbc:	460c      	mov	r4, r1
 802adbe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802adc2:	f000 f8af 	bl	802af24 <_lseek_r>
 802adc6:	1c43      	adds	r3, r0, #1
 802adc8:	89a3      	ldrh	r3, [r4, #12]
 802adca:	bf15      	itete	ne
 802adcc:	6560      	strne	r0, [r4, #84]	; 0x54
 802adce:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802add2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802add6:	81a3      	strheq	r3, [r4, #12]
 802add8:	bf18      	it	ne
 802adda:	81a3      	strhne	r3, [r4, #12]
 802addc:	bd10      	pop	{r4, pc}

0802adde <__sclose>:
 802adde:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ade2:	f000 b839 	b.w	802ae58 <_close_r>

0802ade6 <memset>:
 802ade6:	4402      	add	r2, r0
 802ade8:	4603      	mov	r3, r0
 802adea:	4293      	cmp	r3, r2
 802adec:	d100      	bne.n	802adf0 <memset+0xa>
 802adee:	4770      	bx	lr
 802adf0:	f803 1b01 	strb.w	r1, [r3], #1
 802adf4:	e7f9      	b.n	802adea <memset+0x4>

0802adf6 <_raise_r>:
 802adf6:	291f      	cmp	r1, #31
 802adf8:	b538      	push	{r3, r4, r5, lr}
 802adfa:	4604      	mov	r4, r0
 802adfc:	460d      	mov	r5, r1
 802adfe:	d904      	bls.n	802ae0a <_raise_r+0x14>
 802ae00:	2316      	movs	r3, #22
 802ae02:	6003      	str	r3, [r0, #0]
 802ae04:	f04f 30ff 	mov.w	r0, #4294967295
 802ae08:	bd38      	pop	{r3, r4, r5, pc}
 802ae0a:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802ae0c:	b112      	cbz	r2, 802ae14 <_raise_r+0x1e>
 802ae0e:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802ae12:	b94b      	cbnz	r3, 802ae28 <_raise_r+0x32>
 802ae14:	4620      	mov	r0, r4
 802ae16:	f000 f8bb 	bl	802af90 <_getpid_r>
 802ae1a:	462a      	mov	r2, r5
 802ae1c:	4601      	mov	r1, r0
 802ae1e:	4620      	mov	r0, r4
 802ae20:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802ae24:	f000 b8a2 	b.w	802af6c <_kill_r>
 802ae28:	2b01      	cmp	r3, #1
 802ae2a:	d00a      	beq.n	802ae42 <_raise_r+0x4c>
 802ae2c:	1c59      	adds	r1, r3, #1
 802ae2e:	d103      	bne.n	802ae38 <_raise_r+0x42>
 802ae30:	2316      	movs	r3, #22
 802ae32:	6003      	str	r3, [r0, #0]
 802ae34:	2001      	movs	r0, #1
 802ae36:	e7e7      	b.n	802ae08 <_raise_r+0x12>
 802ae38:	2400      	movs	r4, #0
 802ae3a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802ae3e:	4628      	mov	r0, r5
 802ae40:	4798      	blx	r3
 802ae42:	2000      	movs	r0, #0
 802ae44:	e7e0      	b.n	802ae08 <_raise_r+0x12>
	...

0802ae48 <raise>:
 802ae48:	4b02      	ldr	r3, [pc, #8]	; (802ae54 <raise+0xc>)
 802ae4a:	4601      	mov	r1, r0
 802ae4c:	6818      	ldr	r0, [r3, #0]
 802ae4e:	f7ff bfd2 	b.w	802adf6 <_raise_r>
 802ae52:	bf00      	nop
 802ae54:	20000160 	.word	0x20000160

0802ae58 <_close_r>:
 802ae58:	b538      	push	{r3, r4, r5, lr}
 802ae5a:	4d06      	ldr	r5, [pc, #24]	; (802ae74 <_close_r+0x1c>)
 802ae5c:	2300      	movs	r3, #0
 802ae5e:	4604      	mov	r4, r0
 802ae60:	4608      	mov	r0, r1
 802ae62:	602b      	str	r3, [r5, #0]
 802ae64:	f7d7 ff10 	bl	8002c88 <_close>
 802ae68:	1c43      	adds	r3, r0, #1
 802ae6a:	d102      	bne.n	802ae72 <_close_r+0x1a>
 802ae6c:	682b      	ldr	r3, [r5, #0]
 802ae6e:	b103      	cbz	r3, 802ae72 <_close_r+0x1a>
 802ae70:	6023      	str	r3, [r4, #0]
 802ae72:	bd38      	pop	{r3, r4, r5, pc}
 802ae74:	2001384c 	.word	0x2001384c

0802ae78 <_reclaim_reent>:
 802ae78:	4b29      	ldr	r3, [pc, #164]	; (802af20 <_reclaim_reent+0xa8>)
 802ae7a:	681b      	ldr	r3, [r3, #0]
 802ae7c:	4283      	cmp	r3, r0
 802ae7e:	b570      	push	{r4, r5, r6, lr}
 802ae80:	4604      	mov	r4, r0
 802ae82:	d04b      	beq.n	802af1c <_reclaim_reent+0xa4>
 802ae84:	69c3      	ldr	r3, [r0, #28]
 802ae86:	b143      	cbz	r3, 802ae9a <_reclaim_reent+0x22>
 802ae88:	68db      	ldr	r3, [r3, #12]
 802ae8a:	2b00      	cmp	r3, #0
 802ae8c:	d144      	bne.n	802af18 <_reclaim_reent+0xa0>
 802ae8e:	69e3      	ldr	r3, [r4, #28]
 802ae90:	6819      	ldr	r1, [r3, #0]
 802ae92:	b111      	cbz	r1, 802ae9a <_reclaim_reent+0x22>
 802ae94:	4620      	mov	r0, r4
 802ae96:	f000 f939 	bl	802b10c <_free_r>
 802ae9a:	6961      	ldr	r1, [r4, #20]
 802ae9c:	b111      	cbz	r1, 802aea4 <_reclaim_reent+0x2c>
 802ae9e:	4620      	mov	r0, r4
 802aea0:	f000 f934 	bl	802b10c <_free_r>
 802aea4:	69e1      	ldr	r1, [r4, #28]
 802aea6:	b111      	cbz	r1, 802aeae <_reclaim_reent+0x36>
 802aea8:	4620      	mov	r0, r4
 802aeaa:	f000 f92f 	bl	802b10c <_free_r>
 802aeae:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802aeb0:	b111      	cbz	r1, 802aeb8 <_reclaim_reent+0x40>
 802aeb2:	4620      	mov	r0, r4
 802aeb4:	f000 f92a 	bl	802b10c <_free_r>
 802aeb8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802aeba:	b111      	cbz	r1, 802aec2 <_reclaim_reent+0x4a>
 802aebc:	4620      	mov	r0, r4
 802aebe:	f000 f925 	bl	802b10c <_free_r>
 802aec2:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802aec4:	b111      	cbz	r1, 802aecc <_reclaim_reent+0x54>
 802aec6:	4620      	mov	r0, r4
 802aec8:	f000 f920 	bl	802b10c <_free_r>
 802aecc:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802aece:	b111      	cbz	r1, 802aed6 <_reclaim_reent+0x5e>
 802aed0:	4620      	mov	r0, r4
 802aed2:	f000 f91b 	bl	802b10c <_free_r>
 802aed6:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802aed8:	b111      	cbz	r1, 802aee0 <_reclaim_reent+0x68>
 802aeda:	4620      	mov	r0, r4
 802aedc:	f000 f916 	bl	802b10c <_free_r>
 802aee0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802aee2:	b111      	cbz	r1, 802aeea <_reclaim_reent+0x72>
 802aee4:	4620      	mov	r0, r4
 802aee6:	f000 f911 	bl	802b10c <_free_r>
 802aeea:	6a23      	ldr	r3, [r4, #32]
 802aeec:	b1b3      	cbz	r3, 802af1c <_reclaim_reent+0xa4>
 802aeee:	4620      	mov	r0, r4
 802aef0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802aef4:	4718      	bx	r3
 802aef6:	5949      	ldr	r1, [r1, r5]
 802aef8:	b941      	cbnz	r1, 802af0c <_reclaim_reent+0x94>
 802aefa:	3504      	adds	r5, #4
 802aefc:	69e3      	ldr	r3, [r4, #28]
 802aefe:	2d80      	cmp	r5, #128	; 0x80
 802af00:	68d9      	ldr	r1, [r3, #12]
 802af02:	d1f8      	bne.n	802aef6 <_reclaim_reent+0x7e>
 802af04:	4620      	mov	r0, r4
 802af06:	f000 f901 	bl	802b10c <_free_r>
 802af0a:	e7c0      	b.n	802ae8e <_reclaim_reent+0x16>
 802af0c:	680e      	ldr	r6, [r1, #0]
 802af0e:	4620      	mov	r0, r4
 802af10:	f000 f8fc 	bl	802b10c <_free_r>
 802af14:	4631      	mov	r1, r6
 802af16:	e7ef      	b.n	802aef8 <_reclaim_reent+0x80>
 802af18:	2500      	movs	r5, #0
 802af1a:	e7ef      	b.n	802aefc <_reclaim_reent+0x84>
 802af1c:	bd70      	pop	{r4, r5, r6, pc}
 802af1e:	bf00      	nop
 802af20:	20000160 	.word	0x20000160

0802af24 <_lseek_r>:
 802af24:	b538      	push	{r3, r4, r5, lr}
 802af26:	4d07      	ldr	r5, [pc, #28]	; (802af44 <_lseek_r+0x20>)
 802af28:	4604      	mov	r4, r0
 802af2a:	4608      	mov	r0, r1
 802af2c:	4611      	mov	r1, r2
 802af2e:	2200      	movs	r2, #0
 802af30:	602a      	str	r2, [r5, #0]
 802af32:	461a      	mov	r2, r3
 802af34:	f7d7 feb4 	bl	8002ca0 <_lseek>
 802af38:	1c43      	adds	r3, r0, #1
 802af3a:	d102      	bne.n	802af42 <_lseek_r+0x1e>
 802af3c:	682b      	ldr	r3, [r5, #0]
 802af3e:	b103      	cbz	r3, 802af42 <_lseek_r+0x1e>
 802af40:	6023      	str	r3, [r4, #0]
 802af42:	bd38      	pop	{r3, r4, r5, pc}
 802af44:	2001384c 	.word	0x2001384c

0802af48 <_read_r>:
 802af48:	b538      	push	{r3, r4, r5, lr}
 802af4a:	4d07      	ldr	r5, [pc, #28]	; (802af68 <_read_r+0x20>)
 802af4c:	4604      	mov	r4, r0
 802af4e:	4608      	mov	r0, r1
 802af50:	4611      	mov	r1, r2
 802af52:	2200      	movs	r2, #0
 802af54:	602a      	str	r2, [r5, #0]
 802af56:	461a      	mov	r2, r3
 802af58:	f7d7 fe7a 	bl	8002c50 <_read>
 802af5c:	1c43      	adds	r3, r0, #1
 802af5e:	d102      	bne.n	802af66 <_read_r+0x1e>
 802af60:	682b      	ldr	r3, [r5, #0]
 802af62:	b103      	cbz	r3, 802af66 <_read_r+0x1e>
 802af64:	6023      	str	r3, [r4, #0]
 802af66:	bd38      	pop	{r3, r4, r5, pc}
 802af68:	2001384c 	.word	0x2001384c

0802af6c <_kill_r>:
 802af6c:	b538      	push	{r3, r4, r5, lr}
 802af6e:	4d07      	ldr	r5, [pc, #28]	; (802af8c <_kill_r+0x20>)
 802af70:	2300      	movs	r3, #0
 802af72:	4604      	mov	r4, r0
 802af74:	4608      	mov	r0, r1
 802af76:	4611      	mov	r1, r2
 802af78:	602b      	str	r3, [r5, #0]
 802af7a:	f7d7 fe5b 	bl	8002c34 <_kill>
 802af7e:	1c43      	adds	r3, r0, #1
 802af80:	d102      	bne.n	802af88 <_kill_r+0x1c>
 802af82:	682b      	ldr	r3, [r5, #0]
 802af84:	b103      	cbz	r3, 802af88 <_kill_r+0x1c>
 802af86:	6023      	str	r3, [r4, #0]
 802af88:	bd38      	pop	{r3, r4, r5, pc}
 802af8a:	bf00      	nop
 802af8c:	2001384c 	.word	0x2001384c

0802af90 <_getpid_r>:
 802af90:	f7d7 be4e 	b.w	8002c30 <_getpid>

0802af94 <_sbrk_r>:
 802af94:	b538      	push	{r3, r4, r5, lr}
 802af96:	4d06      	ldr	r5, [pc, #24]	; (802afb0 <_sbrk_r+0x1c>)
 802af98:	2300      	movs	r3, #0
 802af9a:	4604      	mov	r4, r0
 802af9c:	4608      	mov	r0, r1
 802af9e:	602b      	str	r3, [r5, #0]
 802afa0:	f7d7 fe80 	bl	8002ca4 <_sbrk>
 802afa4:	1c43      	adds	r3, r0, #1
 802afa6:	d102      	bne.n	802afae <_sbrk_r+0x1a>
 802afa8:	682b      	ldr	r3, [r5, #0]
 802afaa:	b103      	cbz	r3, 802afae <_sbrk_r+0x1a>
 802afac:	6023      	str	r3, [r4, #0]
 802afae:	bd38      	pop	{r3, r4, r5, pc}
 802afb0:	2001384c 	.word	0x2001384c

0802afb4 <_write_r>:
 802afb4:	b538      	push	{r3, r4, r5, lr}
 802afb6:	4d07      	ldr	r5, [pc, #28]	; (802afd4 <_write_r+0x20>)
 802afb8:	4604      	mov	r4, r0
 802afba:	4608      	mov	r0, r1
 802afbc:	4611      	mov	r1, r2
 802afbe:	2200      	movs	r2, #0
 802afc0:	602a      	str	r2, [r5, #0]
 802afc2:	461a      	mov	r2, r3
 802afc4:	f7d7 fe52 	bl	8002c6c <_write>
 802afc8:	1c43      	adds	r3, r0, #1
 802afca:	d102      	bne.n	802afd2 <_write_r+0x1e>
 802afcc:	682b      	ldr	r3, [r5, #0]
 802afce:	b103      	cbz	r3, 802afd2 <_write_r+0x1e>
 802afd0:	6023      	str	r3, [r4, #0]
 802afd2:	bd38      	pop	{r3, r4, r5, pc}
 802afd4:	2001384c 	.word	0x2001384c

0802afd8 <__errno>:
 802afd8:	4b01      	ldr	r3, [pc, #4]	; (802afe0 <__errno+0x8>)
 802afda:	6818      	ldr	r0, [r3, #0]
 802afdc:	4770      	bx	lr
 802afde:	bf00      	nop
 802afe0:	20000160 	.word	0x20000160

0802afe4 <__libc_init_array>:
 802afe4:	b570      	push	{r4, r5, r6, lr}
 802afe6:	4d0d      	ldr	r5, [pc, #52]	; (802b01c <__libc_init_array+0x38>)
 802afe8:	4c0d      	ldr	r4, [pc, #52]	; (802b020 <__libc_init_array+0x3c>)
 802afea:	1b64      	subs	r4, r4, r5
 802afec:	10a4      	asrs	r4, r4, #2
 802afee:	2600      	movs	r6, #0
 802aff0:	42a6      	cmp	r6, r4
 802aff2:	d109      	bne.n	802b008 <__libc_init_array+0x24>
 802aff4:	4d0b      	ldr	r5, [pc, #44]	; (802b024 <__libc_init_array+0x40>)
 802aff6:	4c0c      	ldr	r4, [pc, #48]	; (802b028 <__libc_init_array+0x44>)
 802aff8:	f000 fd70 	bl	802badc <_init>
 802affc:	1b64      	subs	r4, r4, r5
 802affe:	10a4      	asrs	r4, r4, #2
 802b000:	2600      	movs	r6, #0
 802b002:	42a6      	cmp	r6, r4
 802b004:	d105      	bne.n	802b012 <__libc_init_array+0x2e>
 802b006:	bd70      	pop	{r4, r5, r6, pc}
 802b008:	f855 3b04 	ldr.w	r3, [r5], #4
 802b00c:	4798      	blx	r3
 802b00e:	3601      	adds	r6, #1
 802b010:	e7ee      	b.n	802aff0 <__libc_init_array+0xc>
 802b012:	f855 3b04 	ldr.w	r3, [r5], #4
 802b016:	4798      	blx	r3
 802b018:	3601      	adds	r6, #1
 802b01a:	e7f2      	b.n	802b002 <__libc_init_array+0x1e>
 802b01c:	081607e4 	.word	0x081607e4
 802b020:	081607e4 	.word	0x081607e4
 802b024:	081607e4 	.word	0x081607e4
 802b028:	081607f8 	.word	0x081607f8

0802b02c <__retarget_lock_init_recursive>:
 802b02c:	4770      	bx	lr

0802b02e <__retarget_lock_acquire_recursive>:
 802b02e:	4770      	bx	lr

0802b030 <__retarget_lock_release_recursive>:
 802b030:	4770      	bx	lr

0802b032 <memcpy>:
 802b032:	440a      	add	r2, r1
 802b034:	4291      	cmp	r1, r2
 802b036:	f100 33ff 	add.w	r3, r0, #4294967295
 802b03a:	d100      	bne.n	802b03e <memcpy+0xc>
 802b03c:	4770      	bx	lr
 802b03e:	b510      	push	{r4, lr}
 802b040:	f811 4b01 	ldrb.w	r4, [r1], #1
 802b044:	f803 4f01 	strb.w	r4, [r3, #1]!
 802b048:	4291      	cmp	r1, r2
 802b04a:	d1f9      	bne.n	802b040 <memcpy+0xe>
 802b04c:	bd10      	pop	{r4, pc}
	...

0802b050 <__register_exitproc>:
 802b050:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b054:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802b108 <__register_exitproc+0xb8>
 802b058:	4606      	mov	r6, r0
 802b05a:	f8d8 0000 	ldr.w	r0, [r8]
 802b05e:	461f      	mov	r7, r3
 802b060:	460d      	mov	r5, r1
 802b062:	4691      	mov	r9, r2
 802b064:	f7ff ffe3 	bl	802b02e <__retarget_lock_acquire_recursive>
 802b068:	4b23      	ldr	r3, [pc, #140]	; (802b0f8 <__register_exitproc+0xa8>)
 802b06a:	681c      	ldr	r4, [r3, #0]
 802b06c:	b934      	cbnz	r4, 802b07c <__register_exitproc+0x2c>
 802b06e:	4c23      	ldr	r4, [pc, #140]	; (802b0fc <__register_exitproc+0xac>)
 802b070:	601c      	str	r4, [r3, #0]
 802b072:	4b23      	ldr	r3, [pc, #140]	; (802b100 <__register_exitproc+0xb0>)
 802b074:	b113      	cbz	r3, 802b07c <__register_exitproc+0x2c>
 802b076:	681b      	ldr	r3, [r3, #0]
 802b078:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802b07c:	6863      	ldr	r3, [r4, #4]
 802b07e:	2b1f      	cmp	r3, #31
 802b080:	dd07      	ble.n	802b092 <__register_exitproc+0x42>
 802b082:	f8d8 0000 	ldr.w	r0, [r8]
 802b086:	f7ff ffd3 	bl	802b030 <__retarget_lock_release_recursive>
 802b08a:	f04f 30ff 	mov.w	r0, #4294967295
 802b08e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b092:	b32e      	cbz	r6, 802b0e0 <__register_exitproc+0x90>
 802b094:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b098:	b968      	cbnz	r0, 802b0b6 <__register_exitproc+0x66>
 802b09a:	4b1a      	ldr	r3, [pc, #104]	; (802b104 <__register_exitproc+0xb4>)
 802b09c:	2b00      	cmp	r3, #0
 802b09e:	d0f0      	beq.n	802b082 <__register_exitproc+0x32>
 802b0a0:	f44f 7084 	mov.w	r0, #264	; 0x108
 802b0a4:	f7ff fcbe 	bl	802aa24 <malloc>
 802b0a8:	2800      	cmp	r0, #0
 802b0aa:	d0ea      	beq.n	802b082 <__register_exitproc+0x32>
 802b0ac:	2300      	movs	r3, #0
 802b0ae:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802b0b2:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802b0b6:	6863      	ldr	r3, [r4, #4]
 802b0b8:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802b0bc:	2201      	movs	r2, #1
 802b0be:	409a      	lsls	r2, r3
 802b0c0:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802b0c4:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802b0c8:	4313      	orrs	r3, r2
 802b0ca:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802b0ce:	2e02      	cmp	r6, #2
 802b0d0:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802b0d4:	bf02      	ittt	eq
 802b0d6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802b0da:	4313      	orreq	r3, r2
 802b0dc:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802b0e0:	6863      	ldr	r3, [r4, #4]
 802b0e2:	f8d8 0000 	ldr.w	r0, [r8]
 802b0e6:	1c5a      	adds	r2, r3, #1
 802b0e8:	3302      	adds	r3, #2
 802b0ea:	6062      	str	r2, [r4, #4]
 802b0ec:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802b0f0:	f7ff ff9e 	bl	802b030 <__retarget_lock_release_recursive>
 802b0f4:	2000      	movs	r0, #0
 802b0f6:	e7ca      	b.n	802b08e <__register_exitproc+0x3e>
 802b0f8:	200138e0 	.word	0x200138e0
 802b0fc:	20013854 	.word	0x20013854
 802b100:	0804306c 	.word	0x0804306c
 802b104:	0802aa25 	.word	0x0802aa25
 802b108:	20000164 	.word	0x20000164

0802b10c <_free_r>:
 802b10c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802b10e:	2900      	cmp	r1, #0
 802b110:	d044      	beq.n	802b19c <_free_r+0x90>
 802b112:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802b116:	9001      	str	r0, [sp, #4]
 802b118:	2b00      	cmp	r3, #0
 802b11a:	f1a1 0404 	sub.w	r4, r1, #4
 802b11e:	bfb8      	it	lt
 802b120:	18e4      	addlt	r4, r4, r3
 802b122:	f7ff fd2f 	bl	802ab84 <__malloc_lock>
 802b126:	4a1e      	ldr	r2, [pc, #120]	; (802b1a0 <_free_r+0x94>)
 802b128:	9801      	ldr	r0, [sp, #4]
 802b12a:	6813      	ldr	r3, [r2, #0]
 802b12c:	b933      	cbnz	r3, 802b13c <_free_r+0x30>
 802b12e:	6063      	str	r3, [r4, #4]
 802b130:	6014      	str	r4, [r2, #0]
 802b132:	b003      	add	sp, #12
 802b134:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802b138:	f7ff bd2a 	b.w	802ab90 <__malloc_unlock>
 802b13c:	42a3      	cmp	r3, r4
 802b13e:	d908      	bls.n	802b152 <_free_r+0x46>
 802b140:	6825      	ldr	r5, [r4, #0]
 802b142:	1961      	adds	r1, r4, r5
 802b144:	428b      	cmp	r3, r1
 802b146:	bf01      	itttt	eq
 802b148:	6819      	ldreq	r1, [r3, #0]
 802b14a:	685b      	ldreq	r3, [r3, #4]
 802b14c:	1949      	addeq	r1, r1, r5
 802b14e:	6021      	streq	r1, [r4, #0]
 802b150:	e7ed      	b.n	802b12e <_free_r+0x22>
 802b152:	461a      	mov	r2, r3
 802b154:	685b      	ldr	r3, [r3, #4]
 802b156:	b10b      	cbz	r3, 802b15c <_free_r+0x50>
 802b158:	42a3      	cmp	r3, r4
 802b15a:	d9fa      	bls.n	802b152 <_free_r+0x46>
 802b15c:	6811      	ldr	r1, [r2, #0]
 802b15e:	1855      	adds	r5, r2, r1
 802b160:	42a5      	cmp	r5, r4
 802b162:	d10b      	bne.n	802b17c <_free_r+0x70>
 802b164:	6824      	ldr	r4, [r4, #0]
 802b166:	4421      	add	r1, r4
 802b168:	1854      	adds	r4, r2, r1
 802b16a:	42a3      	cmp	r3, r4
 802b16c:	6011      	str	r1, [r2, #0]
 802b16e:	d1e0      	bne.n	802b132 <_free_r+0x26>
 802b170:	681c      	ldr	r4, [r3, #0]
 802b172:	685b      	ldr	r3, [r3, #4]
 802b174:	6053      	str	r3, [r2, #4]
 802b176:	440c      	add	r4, r1
 802b178:	6014      	str	r4, [r2, #0]
 802b17a:	e7da      	b.n	802b132 <_free_r+0x26>
 802b17c:	d902      	bls.n	802b184 <_free_r+0x78>
 802b17e:	230c      	movs	r3, #12
 802b180:	6003      	str	r3, [r0, #0]
 802b182:	e7d6      	b.n	802b132 <_free_r+0x26>
 802b184:	6825      	ldr	r5, [r4, #0]
 802b186:	1961      	adds	r1, r4, r5
 802b188:	428b      	cmp	r3, r1
 802b18a:	bf04      	itt	eq
 802b18c:	6819      	ldreq	r1, [r3, #0]
 802b18e:	685b      	ldreq	r3, [r3, #4]
 802b190:	6063      	str	r3, [r4, #4]
 802b192:	bf04      	itt	eq
 802b194:	1949      	addeq	r1, r1, r5
 802b196:	6021      	streq	r1, [r4, #0]
 802b198:	6054      	str	r4, [r2, #4]
 802b19a:	e7ca      	b.n	802b132 <_free_r+0x26>
 802b19c:	b003      	add	sp, #12
 802b19e:	bd30      	pop	{r4, r5, pc}
 802b1a0:	20013708 	.word	0x20013708

0802b1a4 <__sfputc_r>:
 802b1a4:	6893      	ldr	r3, [r2, #8]
 802b1a6:	3b01      	subs	r3, #1
 802b1a8:	2b00      	cmp	r3, #0
 802b1aa:	b410      	push	{r4}
 802b1ac:	6093      	str	r3, [r2, #8]
 802b1ae:	da08      	bge.n	802b1c2 <__sfputc_r+0x1e>
 802b1b0:	6994      	ldr	r4, [r2, #24]
 802b1b2:	42a3      	cmp	r3, r4
 802b1b4:	db01      	blt.n	802b1ba <__sfputc_r+0x16>
 802b1b6:	290a      	cmp	r1, #10
 802b1b8:	d103      	bne.n	802b1c2 <__sfputc_r+0x1e>
 802b1ba:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b1be:	f000 bb73 	b.w	802b8a8 <__swbuf_r>
 802b1c2:	6813      	ldr	r3, [r2, #0]
 802b1c4:	1c58      	adds	r0, r3, #1
 802b1c6:	6010      	str	r0, [r2, #0]
 802b1c8:	7019      	strb	r1, [r3, #0]
 802b1ca:	4608      	mov	r0, r1
 802b1cc:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b1d0:	4770      	bx	lr

0802b1d2 <__sfputs_r>:
 802b1d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b1d4:	4606      	mov	r6, r0
 802b1d6:	460f      	mov	r7, r1
 802b1d8:	4614      	mov	r4, r2
 802b1da:	18d5      	adds	r5, r2, r3
 802b1dc:	42ac      	cmp	r4, r5
 802b1de:	d101      	bne.n	802b1e4 <__sfputs_r+0x12>
 802b1e0:	2000      	movs	r0, #0
 802b1e2:	e007      	b.n	802b1f4 <__sfputs_r+0x22>
 802b1e4:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b1e8:	463a      	mov	r2, r7
 802b1ea:	4630      	mov	r0, r6
 802b1ec:	f7ff ffda 	bl	802b1a4 <__sfputc_r>
 802b1f0:	1c43      	adds	r3, r0, #1
 802b1f2:	d1f3      	bne.n	802b1dc <__sfputs_r+0xa>
 802b1f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802b1f8 <_vfiprintf_r>:
 802b1f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b1fc:	460d      	mov	r5, r1
 802b1fe:	b09d      	sub	sp, #116	; 0x74
 802b200:	4614      	mov	r4, r2
 802b202:	4698      	mov	r8, r3
 802b204:	4606      	mov	r6, r0
 802b206:	b118      	cbz	r0, 802b210 <_vfiprintf_r+0x18>
 802b208:	6a03      	ldr	r3, [r0, #32]
 802b20a:	b90b      	cbnz	r3, 802b210 <_vfiprintf_r+0x18>
 802b20c:	f7ff fd60 	bl	802acd0 <__sinit>
 802b210:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b212:	07d9      	lsls	r1, r3, #31
 802b214:	d405      	bmi.n	802b222 <_vfiprintf_r+0x2a>
 802b216:	89ab      	ldrh	r3, [r5, #12]
 802b218:	059a      	lsls	r2, r3, #22
 802b21a:	d402      	bmi.n	802b222 <_vfiprintf_r+0x2a>
 802b21c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b21e:	f7ff ff06 	bl	802b02e <__retarget_lock_acquire_recursive>
 802b222:	89ab      	ldrh	r3, [r5, #12]
 802b224:	071b      	lsls	r3, r3, #28
 802b226:	d501      	bpl.n	802b22c <_vfiprintf_r+0x34>
 802b228:	692b      	ldr	r3, [r5, #16]
 802b22a:	b99b      	cbnz	r3, 802b254 <_vfiprintf_r+0x5c>
 802b22c:	4629      	mov	r1, r5
 802b22e:	4630      	mov	r0, r6
 802b230:	f000 fb78 	bl	802b924 <__swsetup_r>
 802b234:	b170      	cbz	r0, 802b254 <_vfiprintf_r+0x5c>
 802b236:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b238:	07dc      	lsls	r4, r3, #31
 802b23a:	d504      	bpl.n	802b246 <_vfiprintf_r+0x4e>
 802b23c:	f04f 30ff 	mov.w	r0, #4294967295
 802b240:	b01d      	add	sp, #116	; 0x74
 802b242:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b246:	89ab      	ldrh	r3, [r5, #12]
 802b248:	0598      	lsls	r0, r3, #22
 802b24a:	d4f7      	bmi.n	802b23c <_vfiprintf_r+0x44>
 802b24c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b24e:	f7ff feef 	bl	802b030 <__retarget_lock_release_recursive>
 802b252:	e7f3      	b.n	802b23c <_vfiprintf_r+0x44>
 802b254:	2300      	movs	r3, #0
 802b256:	9309      	str	r3, [sp, #36]	; 0x24
 802b258:	2320      	movs	r3, #32
 802b25a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802b25e:	f8cd 800c 	str.w	r8, [sp, #12]
 802b262:	2330      	movs	r3, #48	; 0x30
 802b264:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802b418 <_vfiprintf_r+0x220>
 802b268:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802b26c:	f04f 0901 	mov.w	r9, #1
 802b270:	4623      	mov	r3, r4
 802b272:	469a      	mov	sl, r3
 802b274:	f813 2b01 	ldrb.w	r2, [r3], #1
 802b278:	b10a      	cbz	r2, 802b27e <_vfiprintf_r+0x86>
 802b27a:	2a25      	cmp	r2, #37	; 0x25
 802b27c:	d1f9      	bne.n	802b272 <_vfiprintf_r+0x7a>
 802b27e:	ebba 0b04 	subs.w	fp, sl, r4
 802b282:	d00b      	beq.n	802b29c <_vfiprintf_r+0xa4>
 802b284:	465b      	mov	r3, fp
 802b286:	4622      	mov	r2, r4
 802b288:	4629      	mov	r1, r5
 802b28a:	4630      	mov	r0, r6
 802b28c:	f7ff ffa1 	bl	802b1d2 <__sfputs_r>
 802b290:	3001      	adds	r0, #1
 802b292:	f000 80a9 	beq.w	802b3e8 <_vfiprintf_r+0x1f0>
 802b296:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802b298:	445a      	add	r2, fp
 802b29a:	9209      	str	r2, [sp, #36]	; 0x24
 802b29c:	f89a 3000 	ldrb.w	r3, [sl]
 802b2a0:	2b00      	cmp	r3, #0
 802b2a2:	f000 80a1 	beq.w	802b3e8 <_vfiprintf_r+0x1f0>
 802b2a6:	2300      	movs	r3, #0
 802b2a8:	f04f 32ff 	mov.w	r2, #4294967295
 802b2ac:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802b2b0:	f10a 0a01 	add.w	sl, sl, #1
 802b2b4:	9304      	str	r3, [sp, #16]
 802b2b6:	9307      	str	r3, [sp, #28]
 802b2b8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802b2bc:	931a      	str	r3, [sp, #104]	; 0x68
 802b2be:	4654      	mov	r4, sl
 802b2c0:	2205      	movs	r2, #5
 802b2c2:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b2c6:	4854      	ldr	r0, [pc, #336]	; (802b418 <_vfiprintf_r+0x220>)
 802b2c8:	f7d4 fff2 	bl	80002b0 <memchr>
 802b2cc:	9a04      	ldr	r2, [sp, #16]
 802b2ce:	b9d8      	cbnz	r0, 802b308 <_vfiprintf_r+0x110>
 802b2d0:	06d1      	lsls	r1, r2, #27
 802b2d2:	bf44      	itt	mi
 802b2d4:	2320      	movmi	r3, #32
 802b2d6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b2da:	0713      	lsls	r3, r2, #28
 802b2dc:	bf44      	itt	mi
 802b2de:	232b      	movmi	r3, #43	; 0x2b
 802b2e0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b2e4:	f89a 3000 	ldrb.w	r3, [sl]
 802b2e8:	2b2a      	cmp	r3, #42	; 0x2a
 802b2ea:	d015      	beq.n	802b318 <_vfiprintf_r+0x120>
 802b2ec:	9a07      	ldr	r2, [sp, #28]
 802b2ee:	4654      	mov	r4, sl
 802b2f0:	2000      	movs	r0, #0
 802b2f2:	f04f 0c0a 	mov.w	ip, #10
 802b2f6:	4621      	mov	r1, r4
 802b2f8:	f811 3b01 	ldrb.w	r3, [r1], #1
 802b2fc:	3b30      	subs	r3, #48	; 0x30
 802b2fe:	2b09      	cmp	r3, #9
 802b300:	d94d      	bls.n	802b39e <_vfiprintf_r+0x1a6>
 802b302:	b1b0      	cbz	r0, 802b332 <_vfiprintf_r+0x13a>
 802b304:	9207      	str	r2, [sp, #28]
 802b306:	e014      	b.n	802b332 <_vfiprintf_r+0x13a>
 802b308:	eba0 0308 	sub.w	r3, r0, r8
 802b30c:	fa09 f303 	lsl.w	r3, r9, r3
 802b310:	4313      	orrs	r3, r2
 802b312:	9304      	str	r3, [sp, #16]
 802b314:	46a2      	mov	sl, r4
 802b316:	e7d2      	b.n	802b2be <_vfiprintf_r+0xc6>
 802b318:	9b03      	ldr	r3, [sp, #12]
 802b31a:	1d19      	adds	r1, r3, #4
 802b31c:	681b      	ldr	r3, [r3, #0]
 802b31e:	9103      	str	r1, [sp, #12]
 802b320:	2b00      	cmp	r3, #0
 802b322:	bfbb      	ittet	lt
 802b324:	425b      	neglt	r3, r3
 802b326:	f042 0202 	orrlt.w	r2, r2, #2
 802b32a:	9307      	strge	r3, [sp, #28]
 802b32c:	9307      	strlt	r3, [sp, #28]
 802b32e:	bfb8      	it	lt
 802b330:	9204      	strlt	r2, [sp, #16]
 802b332:	7823      	ldrb	r3, [r4, #0]
 802b334:	2b2e      	cmp	r3, #46	; 0x2e
 802b336:	d10c      	bne.n	802b352 <_vfiprintf_r+0x15a>
 802b338:	7863      	ldrb	r3, [r4, #1]
 802b33a:	2b2a      	cmp	r3, #42	; 0x2a
 802b33c:	d134      	bne.n	802b3a8 <_vfiprintf_r+0x1b0>
 802b33e:	9b03      	ldr	r3, [sp, #12]
 802b340:	1d1a      	adds	r2, r3, #4
 802b342:	681b      	ldr	r3, [r3, #0]
 802b344:	9203      	str	r2, [sp, #12]
 802b346:	2b00      	cmp	r3, #0
 802b348:	bfb8      	it	lt
 802b34a:	f04f 33ff 	movlt.w	r3, #4294967295
 802b34e:	3402      	adds	r4, #2
 802b350:	9305      	str	r3, [sp, #20]
 802b352:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802b428 <_vfiprintf_r+0x230>
 802b356:	7821      	ldrb	r1, [r4, #0]
 802b358:	2203      	movs	r2, #3
 802b35a:	4650      	mov	r0, sl
 802b35c:	f7d4 ffa8 	bl	80002b0 <memchr>
 802b360:	b138      	cbz	r0, 802b372 <_vfiprintf_r+0x17a>
 802b362:	9b04      	ldr	r3, [sp, #16]
 802b364:	eba0 000a 	sub.w	r0, r0, sl
 802b368:	2240      	movs	r2, #64	; 0x40
 802b36a:	4082      	lsls	r2, r0
 802b36c:	4313      	orrs	r3, r2
 802b36e:	3401      	adds	r4, #1
 802b370:	9304      	str	r3, [sp, #16]
 802b372:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b376:	4829      	ldr	r0, [pc, #164]	; (802b41c <_vfiprintf_r+0x224>)
 802b378:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802b37c:	2206      	movs	r2, #6
 802b37e:	f7d4 ff97 	bl	80002b0 <memchr>
 802b382:	2800      	cmp	r0, #0
 802b384:	d03f      	beq.n	802b406 <_vfiprintf_r+0x20e>
 802b386:	4b26      	ldr	r3, [pc, #152]	; (802b420 <_vfiprintf_r+0x228>)
 802b388:	bb1b      	cbnz	r3, 802b3d2 <_vfiprintf_r+0x1da>
 802b38a:	9b03      	ldr	r3, [sp, #12]
 802b38c:	3307      	adds	r3, #7
 802b38e:	f023 0307 	bic.w	r3, r3, #7
 802b392:	3308      	adds	r3, #8
 802b394:	9303      	str	r3, [sp, #12]
 802b396:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802b398:	443b      	add	r3, r7
 802b39a:	9309      	str	r3, [sp, #36]	; 0x24
 802b39c:	e768      	b.n	802b270 <_vfiprintf_r+0x78>
 802b39e:	fb0c 3202 	mla	r2, ip, r2, r3
 802b3a2:	460c      	mov	r4, r1
 802b3a4:	2001      	movs	r0, #1
 802b3a6:	e7a6      	b.n	802b2f6 <_vfiprintf_r+0xfe>
 802b3a8:	2300      	movs	r3, #0
 802b3aa:	3401      	adds	r4, #1
 802b3ac:	9305      	str	r3, [sp, #20]
 802b3ae:	4619      	mov	r1, r3
 802b3b0:	f04f 0c0a 	mov.w	ip, #10
 802b3b4:	4620      	mov	r0, r4
 802b3b6:	f810 2b01 	ldrb.w	r2, [r0], #1
 802b3ba:	3a30      	subs	r2, #48	; 0x30
 802b3bc:	2a09      	cmp	r2, #9
 802b3be:	d903      	bls.n	802b3c8 <_vfiprintf_r+0x1d0>
 802b3c0:	2b00      	cmp	r3, #0
 802b3c2:	d0c6      	beq.n	802b352 <_vfiprintf_r+0x15a>
 802b3c4:	9105      	str	r1, [sp, #20]
 802b3c6:	e7c4      	b.n	802b352 <_vfiprintf_r+0x15a>
 802b3c8:	fb0c 2101 	mla	r1, ip, r1, r2
 802b3cc:	4604      	mov	r4, r0
 802b3ce:	2301      	movs	r3, #1
 802b3d0:	e7f0      	b.n	802b3b4 <_vfiprintf_r+0x1bc>
 802b3d2:	ab03      	add	r3, sp, #12
 802b3d4:	9300      	str	r3, [sp, #0]
 802b3d6:	462a      	mov	r2, r5
 802b3d8:	4b12      	ldr	r3, [pc, #72]	; (802b424 <_vfiprintf_r+0x22c>)
 802b3da:	a904      	add	r1, sp, #16
 802b3dc:	4630      	mov	r0, r6
 802b3de:	f3af 8000 	nop.w
 802b3e2:	4607      	mov	r7, r0
 802b3e4:	1c78      	adds	r0, r7, #1
 802b3e6:	d1d6      	bne.n	802b396 <_vfiprintf_r+0x19e>
 802b3e8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b3ea:	07d9      	lsls	r1, r3, #31
 802b3ec:	d405      	bmi.n	802b3fa <_vfiprintf_r+0x202>
 802b3ee:	89ab      	ldrh	r3, [r5, #12]
 802b3f0:	059a      	lsls	r2, r3, #22
 802b3f2:	d402      	bmi.n	802b3fa <_vfiprintf_r+0x202>
 802b3f4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b3f6:	f7ff fe1b 	bl	802b030 <__retarget_lock_release_recursive>
 802b3fa:	89ab      	ldrh	r3, [r5, #12]
 802b3fc:	065b      	lsls	r3, r3, #25
 802b3fe:	f53f af1d 	bmi.w	802b23c <_vfiprintf_r+0x44>
 802b402:	9809      	ldr	r0, [sp, #36]	; 0x24
 802b404:	e71c      	b.n	802b240 <_vfiprintf_r+0x48>
 802b406:	ab03      	add	r3, sp, #12
 802b408:	9300      	str	r3, [sp, #0]
 802b40a:	462a      	mov	r2, r5
 802b40c:	4b05      	ldr	r3, [pc, #20]	; (802b424 <_vfiprintf_r+0x22c>)
 802b40e:	a904      	add	r1, sp, #16
 802b410:	4630      	mov	r0, r6
 802b412:	f000 f879 	bl	802b508 <_printf_i>
 802b416:	e7e4      	b.n	802b3e2 <_vfiprintf_r+0x1ea>
 802b418:	08043070 	.word	0x08043070
 802b41c:	0804307a 	.word	0x0804307a
 802b420:	00000000 	.word	0x00000000
 802b424:	0802b1d3 	.word	0x0802b1d3
 802b428:	08043076 	.word	0x08043076

0802b42c <_printf_common>:
 802b42c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802b430:	4616      	mov	r6, r2
 802b432:	4699      	mov	r9, r3
 802b434:	688a      	ldr	r2, [r1, #8]
 802b436:	690b      	ldr	r3, [r1, #16]
 802b438:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802b43c:	4293      	cmp	r3, r2
 802b43e:	bfb8      	it	lt
 802b440:	4613      	movlt	r3, r2
 802b442:	6033      	str	r3, [r6, #0]
 802b444:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802b448:	4607      	mov	r7, r0
 802b44a:	460c      	mov	r4, r1
 802b44c:	b10a      	cbz	r2, 802b452 <_printf_common+0x26>
 802b44e:	3301      	adds	r3, #1
 802b450:	6033      	str	r3, [r6, #0]
 802b452:	6823      	ldr	r3, [r4, #0]
 802b454:	0699      	lsls	r1, r3, #26
 802b456:	bf42      	ittt	mi
 802b458:	6833      	ldrmi	r3, [r6, #0]
 802b45a:	3302      	addmi	r3, #2
 802b45c:	6033      	strmi	r3, [r6, #0]
 802b45e:	6825      	ldr	r5, [r4, #0]
 802b460:	f015 0506 	ands.w	r5, r5, #6
 802b464:	d106      	bne.n	802b474 <_printf_common+0x48>
 802b466:	f104 0a19 	add.w	sl, r4, #25
 802b46a:	68e3      	ldr	r3, [r4, #12]
 802b46c:	6832      	ldr	r2, [r6, #0]
 802b46e:	1a9b      	subs	r3, r3, r2
 802b470:	42ab      	cmp	r3, r5
 802b472:	dc26      	bgt.n	802b4c2 <_printf_common+0x96>
 802b474:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802b478:	1e13      	subs	r3, r2, #0
 802b47a:	6822      	ldr	r2, [r4, #0]
 802b47c:	bf18      	it	ne
 802b47e:	2301      	movne	r3, #1
 802b480:	0692      	lsls	r2, r2, #26
 802b482:	d42b      	bmi.n	802b4dc <_printf_common+0xb0>
 802b484:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802b488:	4649      	mov	r1, r9
 802b48a:	4638      	mov	r0, r7
 802b48c:	47c0      	blx	r8
 802b48e:	3001      	adds	r0, #1
 802b490:	d01e      	beq.n	802b4d0 <_printf_common+0xa4>
 802b492:	6823      	ldr	r3, [r4, #0]
 802b494:	6922      	ldr	r2, [r4, #16]
 802b496:	f003 0306 	and.w	r3, r3, #6
 802b49a:	2b04      	cmp	r3, #4
 802b49c:	bf02      	ittt	eq
 802b49e:	68e5      	ldreq	r5, [r4, #12]
 802b4a0:	6833      	ldreq	r3, [r6, #0]
 802b4a2:	1aed      	subeq	r5, r5, r3
 802b4a4:	68a3      	ldr	r3, [r4, #8]
 802b4a6:	bf0c      	ite	eq
 802b4a8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802b4ac:	2500      	movne	r5, #0
 802b4ae:	4293      	cmp	r3, r2
 802b4b0:	bfc4      	itt	gt
 802b4b2:	1a9b      	subgt	r3, r3, r2
 802b4b4:	18ed      	addgt	r5, r5, r3
 802b4b6:	2600      	movs	r6, #0
 802b4b8:	341a      	adds	r4, #26
 802b4ba:	42b5      	cmp	r5, r6
 802b4bc:	d11a      	bne.n	802b4f4 <_printf_common+0xc8>
 802b4be:	2000      	movs	r0, #0
 802b4c0:	e008      	b.n	802b4d4 <_printf_common+0xa8>
 802b4c2:	2301      	movs	r3, #1
 802b4c4:	4652      	mov	r2, sl
 802b4c6:	4649      	mov	r1, r9
 802b4c8:	4638      	mov	r0, r7
 802b4ca:	47c0      	blx	r8
 802b4cc:	3001      	adds	r0, #1
 802b4ce:	d103      	bne.n	802b4d8 <_printf_common+0xac>
 802b4d0:	f04f 30ff 	mov.w	r0, #4294967295
 802b4d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b4d8:	3501      	adds	r5, #1
 802b4da:	e7c6      	b.n	802b46a <_printf_common+0x3e>
 802b4dc:	18e1      	adds	r1, r4, r3
 802b4de:	1c5a      	adds	r2, r3, #1
 802b4e0:	2030      	movs	r0, #48	; 0x30
 802b4e2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802b4e6:	4422      	add	r2, r4
 802b4e8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802b4ec:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802b4f0:	3302      	adds	r3, #2
 802b4f2:	e7c7      	b.n	802b484 <_printf_common+0x58>
 802b4f4:	2301      	movs	r3, #1
 802b4f6:	4622      	mov	r2, r4
 802b4f8:	4649      	mov	r1, r9
 802b4fa:	4638      	mov	r0, r7
 802b4fc:	47c0      	blx	r8
 802b4fe:	3001      	adds	r0, #1
 802b500:	d0e6      	beq.n	802b4d0 <_printf_common+0xa4>
 802b502:	3601      	adds	r6, #1
 802b504:	e7d9      	b.n	802b4ba <_printf_common+0x8e>
	...

0802b508 <_printf_i>:
 802b508:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802b50c:	7e0f      	ldrb	r7, [r1, #24]
 802b50e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802b510:	2f78      	cmp	r7, #120	; 0x78
 802b512:	4691      	mov	r9, r2
 802b514:	4680      	mov	r8, r0
 802b516:	460c      	mov	r4, r1
 802b518:	469a      	mov	sl, r3
 802b51a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802b51e:	d807      	bhi.n	802b530 <_printf_i+0x28>
 802b520:	2f62      	cmp	r7, #98	; 0x62
 802b522:	d80a      	bhi.n	802b53a <_printf_i+0x32>
 802b524:	2f00      	cmp	r7, #0
 802b526:	f000 80d4 	beq.w	802b6d2 <_printf_i+0x1ca>
 802b52a:	2f58      	cmp	r7, #88	; 0x58
 802b52c:	f000 80c0 	beq.w	802b6b0 <_printf_i+0x1a8>
 802b530:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b534:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802b538:	e03a      	b.n	802b5b0 <_printf_i+0xa8>
 802b53a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802b53e:	2b15      	cmp	r3, #21
 802b540:	d8f6      	bhi.n	802b530 <_printf_i+0x28>
 802b542:	a101      	add	r1, pc, #4	; (adr r1, 802b548 <_printf_i+0x40>)
 802b544:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802b548:	0802b5a1 	.word	0x0802b5a1
 802b54c:	0802b5b5 	.word	0x0802b5b5
 802b550:	0802b531 	.word	0x0802b531
 802b554:	0802b531 	.word	0x0802b531
 802b558:	0802b531 	.word	0x0802b531
 802b55c:	0802b531 	.word	0x0802b531
 802b560:	0802b5b5 	.word	0x0802b5b5
 802b564:	0802b531 	.word	0x0802b531
 802b568:	0802b531 	.word	0x0802b531
 802b56c:	0802b531 	.word	0x0802b531
 802b570:	0802b531 	.word	0x0802b531
 802b574:	0802b6b9 	.word	0x0802b6b9
 802b578:	0802b5e1 	.word	0x0802b5e1
 802b57c:	0802b673 	.word	0x0802b673
 802b580:	0802b531 	.word	0x0802b531
 802b584:	0802b531 	.word	0x0802b531
 802b588:	0802b6db 	.word	0x0802b6db
 802b58c:	0802b531 	.word	0x0802b531
 802b590:	0802b5e1 	.word	0x0802b5e1
 802b594:	0802b531 	.word	0x0802b531
 802b598:	0802b531 	.word	0x0802b531
 802b59c:	0802b67b 	.word	0x0802b67b
 802b5a0:	682b      	ldr	r3, [r5, #0]
 802b5a2:	1d1a      	adds	r2, r3, #4
 802b5a4:	681b      	ldr	r3, [r3, #0]
 802b5a6:	602a      	str	r2, [r5, #0]
 802b5a8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b5ac:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802b5b0:	2301      	movs	r3, #1
 802b5b2:	e09f      	b.n	802b6f4 <_printf_i+0x1ec>
 802b5b4:	6820      	ldr	r0, [r4, #0]
 802b5b6:	682b      	ldr	r3, [r5, #0]
 802b5b8:	0607      	lsls	r7, r0, #24
 802b5ba:	f103 0104 	add.w	r1, r3, #4
 802b5be:	6029      	str	r1, [r5, #0]
 802b5c0:	d501      	bpl.n	802b5c6 <_printf_i+0xbe>
 802b5c2:	681e      	ldr	r6, [r3, #0]
 802b5c4:	e003      	b.n	802b5ce <_printf_i+0xc6>
 802b5c6:	0646      	lsls	r6, r0, #25
 802b5c8:	d5fb      	bpl.n	802b5c2 <_printf_i+0xba>
 802b5ca:	f9b3 6000 	ldrsh.w	r6, [r3]
 802b5ce:	2e00      	cmp	r6, #0
 802b5d0:	da03      	bge.n	802b5da <_printf_i+0xd2>
 802b5d2:	232d      	movs	r3, #45	; 0x2d
 802b5d4:	4276      	negs	r6, r6
 802b5d6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802b5da:	485a      	ldr	r0, [pc, #360]	; (802b744 <_printf_i+0x23c>)
 802b5dc:	230a      	movs	r3, #10
 802b5de:	e012      	b.n	802b606 <_printf_i+0xfe>
 802b5e0:	682b      	ldr	r3, [r5, #0]
 802b5e2:	6820      	ldr	r0, [r4, #0]
 802b5e4:	1d19      	adds	r1, r3, #4
 802b5e6:	6029      	str	r1, [r5, #0]
 802b5e8:	0605      	lsls	r5, r0, #24
 802b5ea:	d501      	bpl.n	802b5f0 <_printf_i+0xe8>
 802b5ec:	681e      	ldr	r6, [r3, #0]
 802b5ee:	e002      	b.n	802b5f6 <_printf_i+0xee>
 802b5f0:	0641      	lsls	r1, r0, #25
 802b5f2:	d5fb      	bpl.n	802b5ec <_printf_i+0xe4>
 802b5f4:	881e      	ldrh	r6, [r3, #0]
 802b5f6:	4853      	ldr	r0, [pc, #332]	; (802b744 <_printf_i+0x23c>)
 802b5f8:	2f6f      	cmp	r7, #111	; 0x6f
 802b5fa:	bf0c      	ite	eq
 802b5fc:	2308      	moveq	r3, #8
 802b5fe:	230a      	movne	r3, #10
 802b600:	2100      	movs	r1, #0
 802b602:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802b606:	6865      	ldr	r5, [r4, #4]
 802b608:	60a5      	str	r5, [r4, #8]
 802b60a:	2d00      	cmp	r5, #0
 802b60c:	bfa2      	ittt	ge
 802b60e:	6821      	ldrge	r1, [r4, #0]
 802b610:	f021 0104 	bicge.w	r1, r1, #4
 802b614:	6021      	strge	r1, [r4, #0]
 802b616:	b90e      	cbnz	r6, 802b61c <_printf_i+0x114>
 802b618:	2d00      	cmp	r5, #0
 802b61a:	d04b      	beq.n	802b6b4 <_printf_i+0x1ac>
 802b61c:	4615      	mov	r5, r2
 802b61e:	fbb6 f1f3 	udiv	r1, r6, r3
 802b622:	fb03 6711 	mls	r7, r3, r1, r6
 802b626:	5dc7      	ldrb	r7, [r0, r7]
 802b628:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802b62c:	4637      	mov	r7, r6
 802b62e:	42bb      	cmp	r3, r7
 802b630:	460e      	mov	r6, r1
 802b632:	d9f4      	bls.n	802b61e <_printf_i+0x116>
 802b634:	2b08      	cmp	r3, #8
 802b636:	d10b      	bne.n	802b650 <_printf_i+0x148>
 802b638:	6823      	ldr	r3, [r4, #0]
 802b63a:	07de      	lsls	r6, r3, #31
 802b63c:	d508      	bpl.n	802b650 <_printf_i+0x148>
 802b63e:	6923      	ldr	r3, [r4, #16]
 802b640:	6861      	ldr	r1, [r4, #4]
 802b642:	4299      	cmp	r1, r3
 802b644:	bfde      	ittt	le
 802b646:	2330      	movle	r3, #48	; 0x30
 802b648:	f805 3c01 	strble.w	r3, [r5, #-1]
 802b64c:	f105 35ff 	addle.w	r5, r5, #4294967295
 802b650:	1b52      	subs	r2, r2, r5
 802b652:	6122      	str	r2, [r4, #16]
 802b654:	f8cd a000 	str.w	sl, [sp]
 802b658:	464b      	mov	r3, r9
 802b65a:	aa03      	add	r2, sp, #12
 802b65c:	4621      	mov	r1, r4
 802b65e:	4640      	mov	r0, r8
 802b660:	f7ff fee4 	bl	802b42c <_printf_common>
 802b664:	3001      	adds	r0, #1
 802b666:	d14a      	bne.n	802b6fe <_printf_i+0x1f6>
 802b668:	f04f 30ff 	mov.w	r0, #4294967295
 802b66c:	b004      	add	sp, #16
 802b66e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b672:	6823      	ldr	r3, [r4, #0]
 802b674:	f043 0320 	orr.w	r3, r3, #32
 802b678:	6023      	str	r3, [r4, #0]
 802b67a:	4833      	ldr	r0, [pc, #204]	; (802b748 <_printf_i+0x240>)
 802b67c:	2778      	movs	r7, #120	; 0x78
 802b67e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802b682:	6823      	ldr	r3, [r4, #0]
 802b684:	6829      	ldr	r1, [r5, #0]
 802b686:	061f      	lsls	r7, r3, #24
 802b688:	f851 6b04 	ldr.w	r6, [r1], #4
 802b68c:	d402      	bmi.n	802b694 <_printf_i+0x18c>
 802b68e:	065f      	lsls	r7, r3, #25
 802b690:	bf48      	it	mi
 802b692:	b2b6      	uxthmi	r6, r6
 802b694:	07df      	lsls	r7, r3, #31
 802b696:	bf48      	it	mi
 802b698:	f043 0320 	orrmi.w	r3, r3, #32
 802b69c:	6029      	str	r1, [r5, #0]
 802b69e:	bf48      	it	mi
 802b6a0:	6023      	strmi	r3, [r4, #0]
 802b6a2:	b91e      	cbnz	r6, 802b6ac <_printf_i+0x1a4>
 802b6a4:	6823      	ldr	r3, [r4, #0]
 802b6a6:	f023 0320 	bic.w	r3, r3, #32
 802b6aa:	6023      	str	r3, [r4, #0]
 802b6ac:	2310      	movs	r3, #16
 802b6ae:	e7a7      	b.n	802b600 <_printf_i+0xf8>
 802b6b0:	4824      	ldr	r0, [pc, #144]	; (802b744 <_printf_i+0x23c>)
 802b6b2:	e7e4      	b.n	802b67e <_printf_i+0x176>
 802b6b4:	4615      	mov	r5, r2
 802b6b6:	e7bd      	b.n	802b634 <_printf_i+0x12c>
 802b6b8:	682b      	ldr	r3, [r5, #0]
 802b6ba:	6826      	ldr	r6, [r4, #0]
 802b6bc:	6961      	ldr	r1, [r4, #20]
 802b6be:	1d18      	adds	r0, r3, #4
 802b6c0:	6028      	str	r0, [r5, #0]
 802b6c2:	0635      	lsls	r5, r6, #24
 802b6c4:	681b      	ldr	r3, [r3, #0]
 802b6c6:	d501      	bpl.n	802b6cc <_printf_i+0x1c4>
 802b6c8:	6019      	str	r1, [r3, #0]
 802b6ca:	e002      	b.n	802b6d2 <_printf_i+0x1ca>
 802b6cc:	0670      	lsls	r0, r6, #25
 802b6ce:	d5fb      	bpl.n	802b6c8 <_printf_i+0x1c0>
 802b6d0:	8019      	strh	r1, [r3, #0]
 802b6d2:	2300      	movs	r3, #0
 802b6d4:	6123      	str	r3, [r4, #16]
 802b6d6:	4615      	mov	r5, r2
 802b6d8:	e7bc      	b.n	802b654 <_printf_i+0x14c>
 802b6da:	682b      	ldr	r3, [r5, #0]
 802b6dc:	1d1a      	adds	r2, r3, #4
 802b6de:	602a      	str	r2, [r5, #0]
 802b6e0:	681d      	ldr	r5, [r3, #0]
 802b6e2:	6862      	ldr	r2, [r4, #4]
 802b6e4:	2100      	movs	r1, #0
 802b6e6:	4628      	mov	r0, r5
 802b6e8:	f7d4 fde2 	bl	80002b0 <memchr>
 802b6ec:	b108      	cbz	r0, 802b6f2 <_printf_i+0x1ea>
 802b6ee:	1b40      	subs	r0, r0, r5
 802b6f0:	6060      	str	r0, [r4, #4]
 802b6f2:	6863      	ldr	r3, [r4, #4]
 802b6f4:	6123      	str	r3, [r4, #16]
 802b6f6:	2300      	movs	r3, #0
 802b6f8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802b6fc:	e7aa      	b.n	802b654 <_printf_i+0x14c>
 802b6fe:	6923      	ldr	r3, [r4, #16]
 802b700:	462a      	mov	r2, r5
 802b702:	4649      	mov	r1, r9
 802b704:	4640      	mov	r0, r8
 802b706:	47d0      	blx	sl
 802b708:	3001      	adds	r0, #1
 802b70a:	d0ad      	beq.n	802b668 <_printf_i+0x160>
 802b70c:	6823      	ldr	r3, [r4, #0]
 802b70e:	079b      	lsls	r3, r3, #30
 802b710:	d413      	bmi.n	802b73a <_printf_i+0x232>
 802b712:	68e0      	ldr	r0, [r4, #12]
 802b714:	9b03      	ldr	r3, [sp, #12]
 802b716:	4298      	cmp	r0, r3
 802b718:	bfb8      	it	lt
 802b71a:	4618      	movlt	r0, r3
 802b71c:	e7a6      	b.n	802b66c <_printf_i+0x164>
 802b71e:	2301      	movs	r3, #1
 802b720:	4632      	mov	r2, r6
 802b722:	4649      	mov	r1, r9
 802b724:	4640      	mov	r0, r8
 802b726:	47d0      	blx	sl
 802b728:	3001      	adds	r0, #1
 802b72a:	d09d      	beq.n	802b668 <_printf_i+0x160>
 802b72c:	3501      	adds	r5, #1
 802b72e:	68e3      	ldr	r3, [r4, #12]
 802b730:	9903      	ldr	r1, [sp, #12]
 802b732:	1a5b      	subs	r3, r3, r1
 802b734:	42ab      	cmp	r3, r5
 802b736:	dcf2      	bgt.n	802b71e <_printf_i+0x216>
 802b738:	e7eb      	b.n	802b712 <_printf_i+0x20a>
 802b73a:	2500      	movs	r5, #0
 802b73c:	f104 0619 	add.w	r6, r4, #25
 802b740:	e7f5      	b.n	802b72e <_printf_i+0x226>
 802b742:	bf00      	nop
 802b744:	08043081 	.word	0x08043081
 802b748:	08043092 	.word	0x08043092

0802b74c <__sflush_r>:
 802b74c:	898a      	ldrh	r2, [r1, #12]
 802b74e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b752:	4605      	mov	r5, r0
 802b754:	0710      	lsls	r0, r2, #28
 802b756:	460c      	mov	r4, r1
 802b758:	d458      	bmi.n	802b80c <__sflush_r+0xc0>
 802b75a:	684b      	ldr	r3, [r1, #4]
 802b75c:	2b00      	cmp	r3, #0
 802b75e:	dc05      	bgt.n	802b76c <__sflush_r+0x20>
 802b760:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802b762:	2b00      	cmp	r3, #0
 802b764:	dc02      	bgt.n	802b76c <__sflush_r+0x20>
 802b766:	2000      	movs	r0, #0
 802b768:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b76c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802b76e:	2e00      	cmp	r6, #0
 802b770:	d0f9      	beq.n	802b766 <__sflush_r+0x1a>
 802b772:	2300      	movs	r3, #0
 802b774:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802b778:	682f      	ldr	r7, [r5, #0]
 802b77a:	6a21      	ldr	r1, [r4, #32]
 802b77c:	602b      	str	r3, [r5, #0]
 802b77e:	d032      	beq.n	802b7e6 <__sflush_r+0x9a>
 802b780:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802b782:	89a3      	ldrh	r3, [r4, #12]
 802b784:	075a      	lsls	r2, r3, #29
 802b786:	d505      	bpl.n	802b794 <__sflush_r+0x48>
 802b788:	6863      	ldr	r3, [r4, #4]
 802b78a:	1ac0      	subs	r0, r0, r3
 802b78c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802b78e:	b10b      	cbz	r3, 802b794 <__sflush_r+0x48>
 802b790:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802b792:	1ac0      	subs	r0, r0, r3
 802b794:	2300      	movs	r3, #0
 802b796:	4602      	mov	r2, r0
 802b798:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802b79a:	6a21      	ldr	r1, [r4, #32]
 802b79c:	4628      	mov	r0, r5
 802b79e:	47b0      	blx	r6
 802b7a0:	1c43      	adds	r3, r0, #1
 802b7a2:	89a3      	ldrh	r3, [r4, #12]
 802b7a4:	d106      	bne.n	802b7b4 <__sflush_r+0x68>
 802b7a6:	6829      	ldr	r1, [r5, #0]
 802b7a8:	291d      	cmp	r1, #29
 802b7aa:	d82b      	bhi.n	802b804 <__sflush_r+0xb8>
 802b7ac:	4a29      	ldr	r2, [pc, #164]	; (802b854 <__sflush_r+0x108>)
 802b7ae:	410a      	asrs	r2, r1
 802b7b0:	07d6      	lsls	r6, r2, #31
 802b7b2:	d427      	bmi.n	802b804 <__sflush_r+0xb8>
 802b7b4:	2200      	movs	r2, #0
 802b7b6:	6062      	str	r2, [r4, #4]
 802b7b8:	04d9      	lsls	r1, r3, #19
 802b7ba:	6922      	ldr	r2, [r4, #16]
 802b7bc:	6022      	str	r2, [r4, #0]
 802b7be:	d504      	bpl.n	802b7ca <__sflush_r+0x7e>
 802b7c0:	1c42      	adds	r2, r0, #1
 802b7c2:	d101      	bne.n	802b7c8 <__sflush_r+0x7c>
 802b7c4:	682b      	ldr	r3, [r5, #0]
 802b7c6:	b903      	cbnz	r3, 802b7ca <__sflush_r+0x7e>
 802b7c8:	6560      	str	r0, [r4, #84]	; 0x54
 802b7ca:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b7cc:	602f      	str	r7, [r5, #0]
 802b7ce:	2900      	cmp	r1, #0
 802b7d0:	d0c9      	beq.n	802b766 <__sflush_r+0x1a>
 802b7d2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802b7d6:	4299      	cmp	r1, r3
 802b7d8:	d002      	beq.n	802b7e0 <__sflush_r+0x94>
 802b7da:	4628      	mov	r0, r5
 802b7dc:	f7ff fc96 	bl	802b10c <_free_r>
 802b7e0:	2000      	movs	r0, #0
 802b7e2:	6360      	str	r0, [r4, #52]	; 0x34
 802b7e4:	e7c0      	b.n	802b768 <__sflush_r+0x1c>
 802b7e6:	2301      	movs	r3, #1
 802b7e8:	4628      	mov	r0, r5
 802b7ea:	47b0      	blx	r6
 802b7ec:	1c41      	adds	r1, r0, #1
 802b7ee:	d1c8      	bne.n	802b782 <__sflush_r+0x36>
 802b7f0:	682b      	ldr	r3, [r5, #0]
 802b7f2:	2b00      	cmp	r3, #0
 802b7f4:	d0c5      	beq.n	802b782 <__sflush_r+0x36>
 802b7f6:	2b1d      	cmp	r3, #29
 802b7f8:	d001      	beq.n	802b7fe <__sflush_r+0xb2>
 802b7fa:	2b16      	cmp	r3, #22
 802b7fc:	d101      	bne.n	802b802 <__sflush_r+0xb6>
 802b7fe:	602f      	str	r7, [r5, #0]
 802b800:	e7b1      	b.n	802b766 <__sflush_r+0x1a>
 802b802:	89a3      	ldrh	r3, [r4, #12]
 802b804:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802b808:	81a3      	strh	r3, [r4, #12]
 802b80a:	e7ad      	b.n	802b768 <__sflush_r+0x1c>
 802b80c:	690f      	ldr	r7, [r1, #16]
 802b80e:	2f00      	cmp	r7, #0
 802b810:	d0a9      	beq.n	802b766 <__sflush_r+0x1a>
 802b812:	0793      	lsls	r3, r2, #30
 802b814:	680e      	ldr	r6, [r1, #0]
 802b816:	bf08      	it	eq
 802b818:	694b      	ldreq	r3, [r1, #20]
 802b81a:	600f      	str	r7, [r1, #0]
 802b81c:	bf18      	it	ne
 802b81e:	2300      	movne	r3, #0
 802b820:	eba6 0807 	sub.w	r8, r6, r7
 802b824:	608b      	str	r3, [r1, #8]
 802b826:	f1b8 0f00 	cmp.w	r8, #0
 802b82a:	dd9c      	ble.n	802b766 <__sflush_r+0x1a>
 802b82c:	6a21      	ldr	r1, [r4, #32]
 802b82e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802b830:	4643      	mov	r3, r8
 802b832:	463a      	mov	r2, r7
 802b834:	4628      	mov	r0, r5
 802b836:	47b0      	blx	r6
 802b838:	2800      	cmp	r0, #0
 802b83a:	dc06      	bgt.n	802b84a <__sflush_r+0xfe>
 802b83c:	89a3      	ldrh	r3, [r4, #12]
 802b83e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802b842:	81a3      	strh	r3, [r4, #12]
 802b844:	f04f 30ff 	mov.w	r0, #4294967295
 802b848:	e78e      	b.n	802b768 <__sflush_r+0x1c>
 802b84a:	4407      	add	r7, r0
 802b84c:	eba8 0800 	sub.w	r8, r8, r0
 802b850:	e7e9      	b.n	802b826 <__sflush_r+0xda>
 802b852:	bf00      	nop
 802b854:	dfbffffe 	.word	0xdfbffffe

0802b858 <_fflush_r>:
 802b858:	b538      	push	{r3, r4, r5, lr}
 802b85a:	690b      	ldr	r3, [r1, #16]
 802b85c:	4605      	mov	r5, r0
 802b85e:	460c      	mov	r4, r1
 802b860:	b913      	cbnz	r3, 802b868 <_fflush_r+0x10>
 802b862:	2500      	movs	r5, #0
 802b864:	4628      	mov	r0, r5
 802b866:	bd38      	pop	{r3, r4, r5, pc}
 802b868:	b118      	cbz	r0, 802b872 <_fflush_r+0x1a>
 802b86a:	6a03      	ldr	r3, [r0, #32]
 802b86c:	b90b      	cbnz	r3, 802b872 <_fflush_r+0x1a>
 802b86e:	f7ff fa2f 	bl	802acd0 <__sinit>
 802b872:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802b876:	2b00      	cmp	r3, #0
 802b878:	d0f3      	beq.n	802b862 <_fflush_r+0xa>
 802b87a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802b87c:	07d0      	lsls	r0, r2, #31
 802b87e:	d404      	bmi.n	802b88a <_fflush_r+0x32>
 802b880:	0599      	lsls	r1, r3, #22
 802b882:	d402      	bmi.n	802b88a <_fflush_r+0x32>
 802b884:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802b886:	f7ff fbd2 	bl	802b02e <__retarget_lock_acquire_recursive>
 802b88a:	4628      	mov	r0, r5
 802b88c:	4621      	mov	r1, r4
 802b88e:	f7ff ff5d 	bl	802b74c <__sflush_r>
 802b892:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802b894:	07da      	lsls	r2, r3, #31
 802b896:	4605      	mov	r5, r0
 802b898:	d4e4      	bmi.n	802b864 <_fflush_r+0xc>
 802b89a:	89a3      	ldrh	r3, [r4, #12]
 802b89c:	059b      	lsls	r3, r3, #22
 802b89e:	d4e1      	bmi.n	802b864 <_fflush_r+0xc>
 802b8a0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802b8a2:	f7ff fbc5 	bl	802b030 <__retarget_lock_release_recursive>
 802b8a6:	e7dd      	b.n	802b864 <_fflush_r+0xc>

0802b8a8 <__swbuf_r>:
 802b8a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b8aa:	460e      	mov	r6, r1
 802b8ac:	4614      	mov	r4, r2
 802b8ae:	4605      	mov	r5, r0
 802b8b0:	b118      	cbz	r0, 802b8ba <__swbuf_r+0x12>
 802b8b2:	6a03      	ldr	r3, [r0, #32]
 802b8b4:	b90b      	cbnz	r3, 802b8ba <__swbuf_r+0x12>
 802b8b6:	f7ff fa0b 	bl	802acd0 <__sinit>
 802b8ba:	69a3      	ldr	r3, [r4, #24]
 802b8bc:	60a3      	str	r3, [r4, #8]
 802b8be:	89a3      	ldrh	r3, [r4, #12]
 802b8c0:	071a      	lsls	r2, r3, #28
 802b8c2:	d525      	bpl.n	802b910 <__swbuf_r+0x68>
 802b8c4:	6923      	ldr	r3, [r4, #16]
 802b8c6:	b31b      	cbz	r3, 802b910 <__swbuf_r+0x68>
 802b8c8:	6823      	ldr	r3, [r4, #0]
 802b8ca:	6922      	ldr	r2, [r4, #16]
 802b8cc:	1a98      	subs	r0, r3, r2
 802b8ce:	6963      	ldr	r3, [r4, #20]
 802b8d0:	b2f6      	uxtb	r6, r6
 802b8d2:	4283      	cmp	r3, r0
 802b8d4:	4637      	mov	r7, r6
 802b8d6:	dc04      	bgt.n	802b8e2 <__swbuf_r+0x3a>
 802b8d8:	4621      	mov	r1, r4
 802b8da:	4628      	mov	r0, r5
 802b8dc:	f7ff ffbc 	bl	802b858 <_fflush_r>
 802b8e0:	b9e0      	cbnz	r0, 802b91c <__swbuf_r+0x74>
 802b8e2:	68a3      	ldr	r3, [r4, #8]
 802b8e4:	3b01      	subs	r3, #1
 802b8e6:	60a3      	str	r3, [r4, #8]
 802b8e8:	6823      	ldr	r3, [r4, #0]
 802b8ea:	1c5a      	adds	r2, r3, #1
 802b8ec:	6022      	str	r2, [r4, #0]
 802b8ee:	701e      	strb	r6, [r3, #0]
 802b8f0:	6962      	ldr	r2, [r4, #20]
 802b8f2:	1c43      	adds	r3, r0, #1
 802b8f4:	429a      	cmp	r2, r3
 802b8f6:	d004      	beq.n	802b902 <__swbuf_r+0x5a>
 802b8f8:	89a3      	ldrh	r3, [r4, #12]
 802b8fa:	07db      	lsls	r3, r3, #31
 802b8fc:	d506      	bpl.n	802b90c <__swbuf_r+0x64>
 802b8fe:	2e0a      	cmp	r6, #10
 802b900:	d104      	bne.n	802b90c <__swbuf_r+0x64>
 802b902:	4621      	mov	r1, r4
 802b904:	4628      	mov	r0, r5
 802b906:	f7ff ffa7 	bl	802b858 <_fflush_r>
 802b90a:	b938      	cbnz	r0, 802b91c <__swbuf_r+0x74>
 802b90c:	4638      	mov	r0, r7
 802b90e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802b910:	4621      	mov	r1, r4
 802b912:	4628      	mov	r0, r5
 802b914:	f000 f806 	bl	802b924 <__swsetup_r>
 802b918:	2800      	cmp	r0, #0
 802b91a:	d0d5      	beq.n	802b8c8 <__swbuf_r+0x20>
 802b91c:	f04f 37ff 	mov.w	r7, #4294967295
 802b920:	e7f4      	b.n	802b90c <__swbuf_r+0x64>
	...

0802b924 <__swsetup_r>:
 802b924:	b538      	push	{r3, r4, r5, lr}
 802b926:	4b2a      	ldr	r3, [pc, #168]	; (802b9d0 <__swsetup_r+0xac>)
 802b928:	4605      	mov	r5, r0
 802b92a:	6818      	ldr	r0, [r3, #0]
 802b92c:	460c      	mov	r4, r1
 802b92e:	b118      	cbz	r0, 802b938 <__swsetup_r+0x14>
 802b930:	6a03      	ldr	r3, [r0, #32]
 802b932:	b90b      	cbnz	r3, 802b938 <__swsetup_r+0x14>
 802b934:	f7ff f9cc 	bl	802acd0 <__sinit>
 802b938:	89a3      	ldrh	r3, [r4, #12]
 802b93a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802b93e:	0718      	lsls	r0, r3, #28
 802b940:	d422      	bmi.n	802b988 <__swsetup_r+0x64>
 802b942:	06d9      	lsls	r1, r3, #27
 802b944:	d407      	bmi.n	802b956 <__swsetup_r+0x32>
 802b946:	2309      	movs	r3, #9
 802b948:	602b      	str	r3, [r5, #0]
 802b94a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802b94e:	81a3      	strh	r3, [r4, #12]
 802b950:	f04f 30ff 	mov.w	r0, #4294967295
 802b954:	e034      	b.n	802b9c0 <__swsetup_r+0x9c>
 802b956:	0758      	lsls	r0, r3, #29
 802b958:	d512      	bpl.n	802b980 <__swsetup_r+0x5c>
 802b95a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b95c:	b141      	cbz	r1, 802b970 <__swsetup_r+0x4c>
 802b95e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802b962:	4299      	cmp	r1, r3
 802b964:	d002      	beq.n	802b96c <__swsetup_r+0x48>
 802b966:	4628      	mov	r0, r5
 802b968:	f7ff fbd0 	bl	802b10c <_free_r>
 802b96c:	2300      	movs	r3, #0
 802b96e:	6363      	str	r3, [r4, #52]	; 0x34
 802b970:	89a3      	ldrh	r3, [r4, #12]
 802b972:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802b976:	81a3      	strh	r3, [r4, #12]
 802b978:	2300      	movs	r3, #0
 802b97a:	6063      	str	r3, [r4, #4]
 802b97c:	6923      	ldr	r3, [r4, #16]
 802b97e:	6023      	str	r3, [r4, #0]
 802b980:	89a3      	ldrh	r3, [r4, #12]
 802b982:	f043 0308 	orr.w	r3, r3, #8
 802b986:	81a3      	strh	r3, [r4, #12]
 802b988:	6923      	ldr	r3, [r4, #16]
 802b98a:	b94b      	cbnz	r3, 802b9a0 <__swsetup_r+0x7c>
 802b98c:	89a3      	ldrh	r3, [r4, #12]
 802b98e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802b992:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802b996:	d003      	beq.n	802b9a0 <__swsetup_r+0x7c>
 802b998:	4621      	mov	r1, r4
 802b99a:	4628      	mov	r0, r5
 802b99c:	f000 f840 	bl	802ba20 <__smakebuf_r>
 802b9a0:	89a0      	ldrh	r0, [r4, #12]
 802b9a2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802b9a6:	f010 0301 	ands.w	r3, r0, #1
 802b9aa:	d00a      	beq.n	802b9c2 <__swsetup_r+0x9e>
 802b9ac:	2300      	movs	r3, #0
 802b9ae:	60a3      	str	r3, [r4, #8]
 802b9b0:	6963      	ldr	r3, [r4, #20]
 802b9b2:	425b      	negs	r3, r3
 802b9b4:	61a3      	str	r3, [r4, #24]
 802b9b6:	6923      	ldr	r3, [r4, #16]
 802b9b8:	b943      	cbnz	r3, 802b9cc <__swsetup_r+0xa8>
 802b9ba:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802b9be:	d1c4      	bne.n	802b94a <__swsetup_r+0x26>
 802b9c0:	bd38      	pop	{r3, r4, r5, pc}
 802b9c2:	0781      	lsls	r1, r0, #30
 802b9c4:	bf58      	it	pl
 802b9c6:	6963      	ldrpl	r3, [r4, #20]
 802b9c8:	60a3      	str	r3, [r4, #8]
 802b9ca:	e7f4      	b.n	802b9b6 <__swsetup_r+0x92>
 802b9cc:	2000      	movs	r0, #0
 802b9ce:	e7f7      	b.n	802b9c0 <__swsetup_r+0x9c>
 802b9d0:	20000160 	.word	0x20000160

0802b9d4 <__swhatbuf_r>:
 802b9d4:	b570      	push	{r4, r5, r6, lr}
 802b9d6:	460c      	mov	r4, r1
 802b9d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b9dc:	2900      	cmp	r1, #0
 802b9de:	b096      	sub	sp, #88	; 0x58
 802b9e0:	4615      	mov	r5, r2
 802b9e2:	461e      	mov	r6, r3
 802b9e4:	da0d      	bge.n	802ba02 <__swhatbuf_r+0x2e>
 802b9e6:	89a3      	ldrh	r3, [r4, #12]
 802b9e8:	f013 0f80 	tst.w	r3, #128	; 0x80
 802b9ec:	f04f 0100 	mov.w	r1, #0
 802b9f0:	bf0c      	ite	eq
 802b9f2:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802b9f6:	2340      	movne	r3, #64	; 0x40
 802b9f8:	2000      	movs	r0, #0
 802b9fa:	6031      	str	r1, [r6, #0]
 802b9fc:	602b      	str	r3, [r5, #0]
 802b9fe:	b016      	add	sp, #88	; 0x58
 802ba00:	bd70      	pop	{r4, r5, r6, pc}
 802ba02:	466a      	mov	r2, sp
 802ba04:	f000 f848 	bl	802ba98 <_fstat_r>
 802ba08:	2800      	cmp	r0, #0
 802ba0a:	dbec      	blt.n	802b9e6 <__swhatbuf_r+0x12>
 802ba0c:	9901      	ldr	r1, [sp, #4]
 802ba0e:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802ba12:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802ba16:	4259      	negs	r1, r3
 802ba18:	4159      	adcs	r1, r3
 802ba1a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802ba1e:	e7eb      	b.n	802b9f8 <__swhatbuf_r+0x24>

0802ba20 <__smakebuf_r>:
 802ba20:	898b      	ldrh	r3, [r1, #12]
 802ba22:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802ba24:	079d      	lsls	r5, r3, #30
 802ba26:	4606      	mov	r6, r0
 802ba28:	460c      	mov	r4, r1
 802ba2a:	d507      	bpl.n	802ba3c <__smakebuf_r+0x1c>
 802ba2c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802ba30:	6023      	str	r3, [r4, #0]
 802ba32:	6123      	str	r3, [r4, #16]
 802ba34:	2301      	movs	r3, #1
 802ba36:	6163      	str	r3, [r4, #20]
 802ba38:	b002      	add	sp, #8
 802ba3a:	bd70      	pop	{r4, r5, r6, pc}
 802ba3c:	ab01      	add	r3, sp, #4
 802ba3e:	466a      	mov	r2, sp
 802ba40:	f7ff ffc8 	bl	802b9d4 <__swhatbuf_r>
 802ba44:	9900      	ldr	r1, [sp, #0]
 802ba46:	4605      	mov	r5, r0
 802ba48:	4630      	mov	r0, r6
 802ba4a:	f7ff f81b 	bl	802aa84 <_malloc_r>
 802ba4e:	b948      	cbnz	r0, 802ba64 <__smakebuf_r+0x44>
 802ba50:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802ba54:	059a      	lsls	r2, r3, #22
 802ba56:	d4ef      	bmi.n	802ba38 <__smakebuf_r+0x18>
 802ba58:	f023 0303 	bic.w	r3, r3, #3
 802ba5c:	f043 0302 	orr.w	r3, r3, #2
 802ba60:	81a3      	strh	r3, [r4, #12]
 802ba62:	e7e3      	b.n	802ba2c <__smakebuf_r+0xc>
 802ba64:	89a3      	ldrh	r3, [r4, #12]
 802ba66:	6020      	str	r0, [r4, #0]
 802ba68:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802ba6c:	81a3      	strh	r3, [r4, #12]
 802ba6e:	9b00      	ldr	r3, [sp, #0]
 802ba70:	6163      	str	r3, [r4, #20]
 802ba72:	9b01      	ldr	r3, [sp, #4]
 802ba74:	6120      	str	r0, [r4, #16]
 802ba76:	b15b      	cbz	r3, 802ba90 <__smakebuf_r+0x70>
 802ba78:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802ba7c:	4630      	mov	r0, r6
 802ba7e:	f000 f81d 	bl	802babc <_isatty_r>
 802ba82:	b128      	cbz	r0, 802ba90 <__smakebuf_r+0x70>
 802ba84:	89a3      	ldrh	r3, [r4, #12]
 802ba86:	f023 0303 	bic.w	r3, r3, #3
 802ba8a:	f043 0301 	orr.w	r3, r3, #1
 802ba8e:	81a3      	strh	r3, [r4, #12]
 802ba90:	89a3      	ldrh	r3, [r4, #12]
 802ba92:	431d      	orrs	r5, r3
 802ba94:	81a5      	strh	r5, [r4, #12]
 802ba96:	e7cf      	b.n	802ba38 <__smakebuf_r+0x18>

0802ba98 <_fstat_r>:
 802ba98:	b538      	push	{r3, r4, r5, lr}
 802ba9a:	4d07      	ldr	r5, [pc, #28]	; (802bab8 <_fstat_r+0x20>)
 802ba9c:	2300      	movs	r3, #0
 802ba9e:	4604      	mov	r4, r0
 802baa0:	4608      	mov	r0, r1
 802baa2:	4611      	mov	r1, r2
 802baa4:	602b      	str	r3, [r5, #0]
 802baa6:	f7d7 f8f3 	bl	8002c90 <_fstat>
 802baaa:	1c43      	adds	r3, r0, #1
 802baac:	d102      	bne.n	802bab4 <_fstat_r+0x1c>
 802baae:	682b      	ldr	r3, [r5, #0]
 802bab0:	b103      	cbz	r3, 802bab4 <_fstat_r+0x1c>
 802bab2:	6023      	str	r3, [r4, #0]
 802bab4:	bd38      	pop	{r3, r4, r5, pc}
 802bab6:	bf00      	nop
 802bab8:	2001384c 	.word	0x2001384c

0802babc <_isatty_r>:
 802babc:	b538      	push	{r3, r4, r5, lr}
 802babe:	4d06      	ldr	r5, [pc, #24]	; (802bad8 <_isatty_r+0x1c>)
 802bac0:	2300      	movs	r3, #0
 802bac2:	4604      	mov	r4, r0
 802bac4:	4608      	mov	r0, r1
 802bac6:	602b      	str	r3, [r5, #0]
 802bac8:	f7d7 f8e8 	bl	8002c9c <_isatty>
 802bacc:	1c43      	adds	r3, r0, #1
 802bace:	d102      	bne.n	802bad6 <_isatty_r+0x1a>
 802bad0:	682b      	ldr	r3, [r5, #0]
 802bad2:	b103      	cbz	r3, 802bad6 <_isatty_r+0x1a>
 802bad4:	6023      	str	r3, [r4, #0]
 802bad6:	bd38      	pop	{r3, r4, r5, pc}
 802bad8:	2001384c 	.word	0x2001384c

0802badc <_init>:
 802badc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bade:	bf00      	nop
 802bae0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802bae2:	bc08      	pop	{r3}
 802bae4:	469e      	mov	lr, r3
 802bae6:	4770      	bx	lr

0802bae8 <_fini>:
 802bae8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802baea:	bf00      	nop
 802baec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802baee:	bc08      	pop	{r3}
 802baf0:	469e      	mov	lr, r3
 802baf2:	4770      	bx	lr

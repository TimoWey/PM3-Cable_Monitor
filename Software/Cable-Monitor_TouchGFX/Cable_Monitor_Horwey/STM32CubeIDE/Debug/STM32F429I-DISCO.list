
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002b0fc  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00017538  0802b2ac  0802b2ac  0003b2ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00002d3e  080427e4  080427e4  000527e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000170  08045524  08045524  00055524  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000674  08045694  08045694  00055694  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  08045d08  08045d08  00055d08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0815ed38  0815ed38  00170168  2**0
                  CONTENTS
  8 .ARM          00000008  0815ed38  0815ed38  0016ed38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0815ed40  0815ed40  00170168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0815ed40  0815ed40  0016ed40  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  0815ed54  0815ed54  0016ed54  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  0815ed58  00170000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000139fc  20000168  0815eec0  00170168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20013b64  0815eec0  00173b64  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00170168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00180000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  00170198  2**0
                  CONTENTS, READONLY
 18 .debug_line   0009bc79  00000000  00000000  001702ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  0020bf43  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   002935fd  00000000  00000000  0020bfd6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 00032959  00000000  00000000  0049f5d3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004818  00000000  00000000  004d1f30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    001209d1  00000000  00000000  004d6748  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00008064  00000000  00000000  005f7119  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 00032828  00000000  00000000  005ff17d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003c7fc  00000000  00000000  006319a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000d408  00000000  00000000  0066e1a4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  0067b5ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  0067e924  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802b294 	.word	0x0802b294

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802b294 	.word	0x0802b294

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b970 	b.w	8000648 <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9e08      	ldr	r6, [sp, #32]
 8000386:	460d      	mov	r5, r1
 8000388:	4604      	mov	r4, r0
 800038a:	460f      	mov	r7, r1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d14a      	bne.n	8000426 <__udivmoddi4+0xa6>
 8000390:	428a      	cmp	r2, r1
 8000392:	4694      	mov	ip, r2
 8000394:	d965      	bls.n	8000462 <__udivmoddi4+0xe2>
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	b143      	cbz	r3, 80003ae <__udivmoddi4+0x2e>
 800039c:	fa02 fc03 	lsl.w	ip, r2, r3
 80003a0:	f1c3 0220 	rsb	r2, r3, #32
 80003a4:	409f      	lsls	r7, r3
 80003a6:	fa20 f202 	lsr.w	r2, r0, r2
 80003aa:	4317      	orrs	r7, r2
 80003ac:	409c      	lsls	r4, r3
 80003ae:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003b2:	fa1f f58c 	uxth.w	r5, ip
 80003b6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ba:	0c22      	lsrs	r2, r4, #16
 80003bc:	fb0e 7711 	mls	r7, lr, r1, r7
 80003c0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003c4:	fb01 f005 	mul.w	r0, r1, r5
 80003c8:	4290      	cmp	r0, r2
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x62>
 80003cc:	eb1c 0202 	adds.w	r2, ip, r2
 80003d0:	f101 37ff 	add.w	r7, r1, #4294967295
 80003d4:	f080 811c 	bcs.w	8000610 <__udivmoddi4+0x290>
 80003d8:	4290      	cmp	r0, r2
 80003da:	f240 8119 	bls.w	8000610 <__udivmoddi4+0x290>
 80003de:	3902      	subs	r1, #2
 80003e0:	4462      	add	r2, ip
 80003e2:	1a12      	subs	r2, r2, r0
 80003e4:	b2a4      	uxth	r4, r4
 80003e6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ea:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ee:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f2:	fb00 f505 	mul.w	r5, r0, r5
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d90a      	bls.n	8000410 <__udivmoddi4+0x90>
 80003fa:	eb1c 0404 	adds.w	r4, ip, r4
 80003fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000402:	f080 8107 	bcs.w	8000614 <__udivmoddi4+0x294>
 8000406:	42a5      	cmp	r5, r4
 8000408:	f240 8104 	bls.w	8000614 <__udivmoddi4+0x294>
 800040c:	4464      	add	r4, ip
 800040e:	3802      	subs	r0, #2
 8000410:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000414:	1b64      	subs	r4, r4, r5
 8000416:	2100      	movs	r1, #0
 8000418:	b11e      	cbz	r6, 8000422 <__udivmoddi4+0xa2>
 800041a:	40dc      	lsrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	e9c6 4300 	strd	r4, r3, [r6]
 8000422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000426:	428b      	cmp	r3, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0xbc>
 800042a:	2e00      	cmp	r6, #0
 800042c:	f000 80ed 	beq.w	800060a <__udivmoddi4+0x28a>
 8000430:	2100      	movs	r1, #0
 8000432:	e9c6 0500 	strd	r0, r5, [r6]
 8000436:	4608      	mov	r0, r1
 8000438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800043c:	fab3 f183 	clz	r1, r3
 8000440:	2900      	cmp	r1, #0
 8000442:	d149      	bne.n	80004d8 <__udivmoddi4+0x158>
 8000444:	42ab      	cmp	r3, r5
 8000446:	d302      	bcc.n	800044e <__udivmoddi4+0xce>
 8000448:	4282      	cmp	r2, r0
 800044a:	f200 80f8 	bhi.w	800063e <__udivmoddi4+0x2be>
 800044e:	1a84      	subs	r4, r0, r2
 8000450:	eb65 0203 	sbc.w	r2, r5, r3
 8000454:	2001      	movs	r0, #1
 8000456:	4617      	mov	r7, r2
 8000458:	2e00      	cmp	r6, #0
 800045a:	d0e2      	beq.n	8000422 <__udivmoddi4+0xa2>
 800045c:	e9c6 4700 	strd	r4, r7, [r6]
 8000460:	e7df      	b.n	8000422 <__udivmoddi4+0xa2>
 8000462:	b902      	cbnz	r2, 8000466 <__udivmoddi4+0xe6>
 8000464:	deff      	udf	#255	; 0xff
 8000466:	fab2 f382 	clz	r3, r2
 800046a:	2b00      	cmp	r3, #0
 800046c:	f040 8090 	bne.w	8000590 <__udivmoddi4+0x210>
 8000470:	1a8a      	subs	r2, r1, r2
 8000472:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000476:	fa1f fe8c 	uxth.w	lr, ip
 800047a:	2101      	movs	r1, #1
 800047c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000480:	fb07 2015 	mls	r0, r7, r5, r2
 8000484:	0c22      	lsrs	r2, r4, #16
 8000486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800048a:	fb0e f005 	mul.w	r0, lr, r5
 800048e:	4290      	cmp	r0, r2
 8000490:	d908      	bls.n	80004a4 <__udivmoddi4+0x124>
 8000492:	eb1c 0202 	adds.w	r2, ip, r2
 8000496:	f105 38ff 	add.w	r8, r5, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x122>
 800049c:	4290      	cmp	r0, r2
 800049e:	f200 80cb 	bhi.w	8000638 <__udivmoddi4+0x2b8>
 80004a2:	4645      	mov	r5, r8
 80004a4:	1a12      	subs	r2, r2, r0
 80004a6:	b2a4      	uxth	r4, r4
 80004a8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004ac:	fb07 2210 	mls	r2, r7, r0, r2
 80004b0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004b4:	fb0e fe00 	mul.w	lr, lr, r0
 80004b8:	45a6      	cmp	lr, r4
 80004ba:	d908      	bls.n	80004ce <__udivmoddi4+0x14e>
 80004bc:	eb1c 0404 	adds.w	r4, ip, r4
 80004c0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004c4:	d202      	bcs.n	80004cc <__udivmoddi4+0x14c>
 80004c6:	45a6      	cmp	lr, r4
 80004c8:	f200 80bb 	bhi.w	8000642 <__udivmoddi4+0x2c2>
 80004cc:	4610      	mov	r0, r2
 80004ce:	eba4 040e 	sub.w	r4, r4, lr
 80004d2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80004d6:	e79f      	b.n	8000418 <__udivmoddi4+0x98>
 80004d8:	f1c1 0720 	rsb	r7, r1, #32
 80004dc:	408b      	lsls	r3, r1
 80004de:	fa22 fc07 	lsr.w	ip, r2, r7
 80004e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80004e6:	fa05 f401 	lsl.w	r4, r5, r1
 80004ea:	fa20 f307 	lsr.w	r3, r0, r7
 80004ee:	40fd      	lsrs	r5, r7
 80004f0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004f4:	4323      	orrs	r3, r4
 80004f6:	fbb5 f8f9 	udiv	r8, r5, r9
 80004fa:	fa1f fe8c 	uxth.w	lr, ip
 80004fe:	fb09 5518 	mls	r5, r9, r8, r5
 8000502:	0c1c      	lsrs	r4, r3, #16
 8000504:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000508:	fb08 f50e 	mul.w	r5, r8, lr
 800050c:	42a5      	cmp	r5, r4
 800050e:	fa02 f201 	lsl.w	r2, r2, r1
 8000512:	fa00 f001 	lsl.w	r0, r0, r1
 8000516:	d90b      	bls.n	8000530 <__udivmoddi4+0x1b0>
 8000518:	eb1c 0404 	adds.w	r4, ip, r4
 800051c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000520:	f080 8088 	bcs.w	8000634 <__udivmoddi4+0x2b4>
 8000524:	42a5      	cmp	r5, r4
 8000526:	f240 8085 	bls.w	8000634 <__udivmoddi4+0x2b4>
 800052a:	f1a8 0802 	sub.w	r8, r8, #2
 800052e:	4464      	add	r4, ip
 8000530:	1b64      	subs	r4, r4, r5
 8000532:	b29d      	uxth	r5, r3
 8000534:	fbb4 f3f9 	udiv	r3, r4, r9
 8000538:	fb09 4413 	mls	r4, r9, r3, r4
 800053c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000540:	fb03 fe0e 	mul.w	lr, r3, lr
 8000544:	45a6      	cmp	lr, r4
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x1da>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000550:	d26c      	bcs.n	800062c <__udivmoddi4+0x2ac>
 8000552:	45a6      	cmp	lr, r4
 8000554:	d96a      	bls.n	800062c <__udivmoddi4+0x2ac>
 8000556:	3b02      	subs	r3, #2
 8000558:	4464      	add	r4, ip
 800055a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800055e:	fba3 9502 	umull	r9, r5, r3, r2
 8000562:	eba4 040e 	sub.w	r4, r4, lr
 8000566:	42ac      	cmp	r4, r5
 8000568:	46c8      	mov	r8, r9
 800056a:	46ae      	mov	lr, r5
 800056c:	d356      	bcc.n	800061c <__udivmoddi4+0x29c>
 800056e:	d053      	beq.n	8000618 <__udivmoddi4+0x298>
 8000570:	b156      	cbz	r6, 8000588 <__udivmoddi4+0x208>
 8000572:	ebb0 0208 	subs.w	r2, r0, r8
 8000576:	eb64 040e 	sbc.w	r4, r4, lr
 800057a:	fa04 f707 	lsl.w	r7, r4, r7
 800057e:	40ca      	lsrs	r2, r1
 8000580:	40cc      	lsrs	r4, r1
 8000582:	4317      	orrs	r7, r2
 8000584:	e9c6 7400 	strd	r7, r4, [r6]
 8000588:	4618      	mov	r0, r3
 800058a:	2100      	movs	r1, #0
 800058c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000590:	f1c3 0120 	rsb	r1, r3, #32
 8000594:	fa02 fc03 	lsl.w	ip, r2, r3
 8000598:	fa20 f201 	lsr.w	r2, r0, r1
 800059c:	fa25 f101 	lsr.w	r1, r5, r1
 80005a0:	409d      	lsls	r5, r3
 80005a2:	432a      	orrs	r2, r5
 80005a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005a8:	fa1f fe8c 	uxth.w	lr, ip
 80005ac:	fbb1 f0f7 	udiv	r0, r1, r7
 80005b0:	fb07 1510 	mls	r5, r7, r0, r1
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ba:	fb00 f50e 	mul.w	r5, r0, lr
 80005be:	428d      	cmp	r5, r1
 80005c0:	fa04 f403 	lsl.w	r4, r4, r3
 80005c4:	d908      	bls.n	80005d8 <__udivmoddi4+0x258>
 80005c6:	eb1c 0101 	adds.w	r1, ip, r1
 80005ca:	f100 38ff 	add.w	r8, r0, #4294967295
 80005ce:	d22f      	bcs.n	8000630 <__udivmoddi4+0x2b0>
 80005d0:	428d      	cmp	r5, r1
 80005d2:	d92d      	bls.n	8000630 <__udivmoddi4+0x2b0>
 80005d4:	3802      	subs	r0, #2
 80005d6:	4461      	add	r1, ip
 80005d8:	1b49      	subs	r1, r1, r5
 80005da:	b292      	uxth	r2, r2
 80005dc:	fbb1 f5f7 	udiv	r5, r1, r7
 80005e0:	fb07 1115 	mls	r1, r7, r5, r1
 80005e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005e8:	fb05 f10e 	mul.w	r1, r5, lr
 80005ec:	4291      	cmp	r1, r2
 80005ee:	d908      	bls.n	8000602 <__udivmoddi4+0x282>
 80005f0:	eb1c 0202 	adds.w	r2, ip, r2
 80005f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80005f8:	d216      	bcs.n	8000628 <__udivmoddi4+0x2a8>
 80005fa:	4291      	cmp	r1, r2
 80005fc:	d914      	bls.n	8000628 <__udivmoddi4+0x2a8>
 80005fe:	3d02      	subs	r5, #2
 8000600:	4462      	add	r2, ip
 8000602:	1a52      	subs	r2, r2, r1
 8000604:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000608:	e738      	b.n	800047c <__udivmoddi4+0xfc>
 800060a:	4631      	mov	r1, r6
 800060c:	4630      	mov	r0, r6
 800060e:	e708      	b.n	8000422 <__udivmoddi4+0xa2>
 8000610:	4639      	mov	r1, r7
 8000612:	e6e6      	b.n	80003e2 <__udivmoddi4+0x62>
 8000614:	4610      	mov	r0, r2
 8000616:	e6fb      	b.n	8000410 <__udivmoddi4+0x90>
 8000618:	4548      	cmp	r0, r9
 800061a:	d2a9      	bcs.n	8000570 <__udivmoddi4+0x1f0>
 800061c:	ebb9 0802 	subs.w	r8, r9, r2
 8000620:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000624:	3b01      	subs	r3, #1
 8000626:	e7a3      	b.n	8000570 <__udivmoddi4+0x1f0>
 8000628:	4645      	mov	r5, r8
 800062a:	e7ea      	b.n	8000602 <__udivmoddi4+0x282>
 800062c:	462b      	mov	r3, r5
 800062e:	e794      	b.n	800055a <__udivmoddi4+0x1da>
 8000630:	4640      	mov	r0, r8
 8000632:	e7d1      	b.n	80005d8 <__udivmoddi4+0x258>
 8000634:	46d0      	mov	r8, sl
 8000636:	e77b      	b.n	8000530 <__udivmoddi4+0x1b0>
 8000638:	3d02      	subs	r5, #2
 800063a:	4462      	add	r2, ip
 800063c:	e732      	b.n	80004a4 <__udivmoddi4+0x124>
 800063e:	4608      	mov	r0, r1
 8000640:	e70a      	b.n	8000458 <__udivmoddi4+0xd8>
 8000642:	4464      	add	r4, ip
 8000644:	3802      	subs	r0, #2
 8000646:	e742      	b.n	80004ce <__udivmoddi4+0x14e>

08000648 <__aeabi_idiv0>:
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800064c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000684 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000650:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000652:	e003      	b.n	800065c <LoopCopyDataInit>

08000654 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000656:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000658:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800065a:	3104      	adds	r1, #4

0800065c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800065c:	480b      	ldr	r0, [pc, #44]	; (800068c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800065e:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000660:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000662:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000664:	d3f6      	bcc.n	8000654 <CopyDataInit>
  ldr  r2, =_sbss
 8000666:	4a0b      	ldr	r2, [pc, #44]	; (8000694 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000668:	e002      	b.n	8000670 <LoopFillZerobss>

0800066a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800066a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800066c:	f842 3b04 	str.w	r3, [r2], #4

08000670 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000674:	d3f9      	bcc.n	800066a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000676:	f008 fd7f 	bl	8009178 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800067a:	f02a f88f 	bl	802a79c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800067e:	f000 fed5 	bl	800142c <main>
  bx  lr    
 8000682:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000684:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000688:	0815ed58 	.word	0x0815ed58
  ldr  r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000690:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000694:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000698:	20013b64 	.word	0x20013b64

0800069c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC_IRQHandler>
	...

080006a0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80006a0:	4770      	bx	lr
 80006a2:	bf00      	nop

080006a4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80006a4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80006a6:	f000 fba9 	bl	8000dfc <touchgfx_components_init>
  touchgfx_init();
}
 80006aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80006ae:	f000 bb33 	b.w	8000d18 <touchgfx_init>
 80006b2:	bf00      	nop

080006b4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80006b4:	f000 bba4 	b.w	8000e00 <touchgfx_taskEntry>

080006b8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006b8:	4770      	bx	lr

080006ba <_ZN20STM32TouchControllerD0Ev>:
 80006ba:	b510      	push	{r4, lr}
 80006bc:	2104      	movs	r1, #4
 80006be:	4604      	mov	r4, r0
 80006c0:	f028 ff55 	bl	802956e <_ZdlPvj>
 80006c4:	4620      	mov	r0, r4
 80006c6:	bd10      	pop	{r4, pc}

080006c8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80006c8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80006ca:	4b0c      	ldr	r3, [pc, #48]	; (80006fc <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006cc:	4c0c      	ldr	r4, [pc, #48]	; (8000700 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80006ce:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80006d0:	4b0c      	ldr	r3, [pc, #48]	; (8000704 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006d2:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 80006d4:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006d6:	6863      	ldr	r3, [r4, #4]
 80006d8:	4798      	blx	r3
 80006da:	f640 0311 	movw	r3, #2065	; 0x811
 80006de:	4298      	cmp	r0, r3
 80006e0:	d10a      	bne.n	80006f8 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80006e2:	4d09      	ldr	r5, [pc, #36]	; (8000708 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80006e4:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80006e6:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80006e8:	2082      	movs	r0, #130	; 0x82
 80006ea:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80006ec:	682b      	ldr	r3, [r5, #0]
 80006ee:	2082      	movs	r0, #130	; 0x82
 80006f0:	68db      	ldr	r3, [r3, #12]
 80006f2:	4798      	blx	r3
 80006f4:	2000      	movs	r0, #0
    }

    return ret;
}
 80006f6:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 80006f8:	2001      	movs	r0, #1
 80006fa:	e7fc      	b.n	80006f6 <_Z11BSP_TS_Inittt+0x2e>
 80006fc:	20000184 	.word	0x20000184
 8000700:	20000050 	.word	0x20000050
 8000704:	20000186 	.word	0x20000186
 8000708:	20000188 	.word	0x20000188

0800070c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800070c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000710:	20f0      	movs	r0, #240	; 0xf0
 8000712:	f7ff bfd9 	b.w	80006c8 <_Z11BSP_TS_Inittt>
	...

08000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000718:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800071a:	4d33      	ldr	r5, [pc, #204]	; (80007e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800071c:	682b      	ldr	r3, [r5, #0]
{
 800071e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000720:	691b      	ldr	r3, [r3, #16]
 8000722:	2082      	movs	r0, #130	; 0x82
 8000724:	4798      	blx	r3
 8000726:	b280      	uxth	r0, r0
 8000728:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800072a:	2800      	cmp	r0, #0
 800072c:	d04a      	beq.n	80007c4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800072e:	682b      	ldr	r3, [r5, #0]
 8000730:	f10d 0206 	add.w	r2, sp, #6
 8000734:	695b      	ldr	r3, [r3, #20]
 8000736:	a901      	add	r1, sp, #4
 8000738:	2082      	movs	r0, #130	; 0x82
 800073a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800073c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000740:	f640 6274 	movw	r2, #3700	; 0xe74
 8000744:	4293      	cmp	r3, r2
 8000746:	d93f      	bls.n	80007c8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8000748:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800074c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000750:	1ad2      	subs	r2, r2, r3
 8000752:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000754:	2a0a      	cmp	r2, #10
 8000756:	d93d      	bls.n	80007d4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8000758:	230b      	movs	r3, #11
 800075a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800075e:	4b23      	ldr	r3, [pc, #140]	; (80007ec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8000760:	881b      	ldrh	r3, [r3, #0]
 8000762:	429a      	cmp	r2, r3
 8000764:	d901      	bls.n	800076a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8000766:	3b01      	subs	r3, #1
 8000768:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800076a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800076e:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000772:	428b      	cmp	r3, r1
 8000774:	d830      	bhi.n	80007d8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8000776:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 800077a:	330e      	adds	r3, #14
 800077c:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 800077e:	210f      	movs	r1, #15
 8000780:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8000784:	491a      	ldr	r1, [pc, #104]	; (80007f0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8000786:	8809      	ldrh	r1, [r1, #0]
 8000788:	428b      	cmp	r3, r1
 800078a:	d901      	bls.n	8000790 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 800078c:	3901      	subs	r1, #1
 800078e:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000790:	4e18      	ldr	r6, [pc, #96]	; (80007f4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000792:	4d19      	ldr	r5, [pc, #100]	; (80007f8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000794:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000796:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000798:	4283      	cmp	r3, r0
 800079a:	b281      	uxth	r1, r0
 800079c:	bf8c      	ite	hi
 800079e:	1a59      	subhi	r1, r3, r1
 80007a0:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007a2:	b2b8      	uxth	r0, r7
 80007a4:	42ba      	cmp	r2, r7
 80007a6:	bf8c      	ite	hi
 80007a8:	1a10      	subhi	r0, r2, r0
 80007aa:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007ac:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007ae:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80007b0:	4401      	add	r1, r0
 80007b2:	2905      	cmp	r1, #5
        {
            _x = x;
 80007b4:	bfc8      	it	gt
 80007b6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80007b8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80007ba:	bfc8      	it	gt
 80007bc:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80007be:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80007c0:	682b      	ldr	r3, [r5, #0]
 80007c2:	80a3      	strh	r3, [r4, #4]
    }
}
 80007c4:	b003      	add	sp, #12
 80007c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 80007c8:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 80007ca:	bf9c      	itt	ls
 80007cc:	23b4      	movls	r3, #180	; 0xb4
 80007ce:	f8ad 3006 	strhls.w	r3, [sp, #6]
 80007d2:	e7bb      	b.n	800074c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 80007d4:	2200      	movs	r2, #0
 80007d6:	e7c8      	b.n	800076a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 80007d8:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80007dc:	3308      	adds	r3, #8
 80007de:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80007e0:	2b0e      	cmp	r3, #14
 80007e2:	d8cc      	bhi.n	800077e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 80007e4:	2300      	movs	r3, #0
 80007e6:	e7d3      	b.n	8000790 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 80007e8:	20000188 	.word	0x20000188
 80007ec:	20000186 	.word	0x20000186
 80007f0:	20000184 	.word	0x20000184
 80007f4:	2000018c 	.word	0x2000018c
 80007f8:	20000190 	.word	0x20000190

080007fc <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80007fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80007fe:	4668      	mov	r0, sp
{
 8000800:	460d      	mov	r5, r1
 8000802:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000804:	f7ff ff88 	bl	8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000808:	f8bd 0000 	ldrh.w	r0, [sp]
 800080c:	b148      	cbz	r0, 8000822 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 800080e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000812:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000814:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000818:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 800081a:	4b03      	ldr	r3, [pc, #12]	; (8000828 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 800081c:	223c      	movs	r2, #60	; 0x3c
 800081e:	601a      	str	r2, [r3, #0]
        return true;
 8000820:	2001      	movs	r0, #1
}
 8000822:	b003      	add	sp, #12
 8000824:	bd30      	pop	{r4, r5, pc}
 8000826:	bf00      	nop
 8000828:	20000014 	.word	0x20000014

0800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800082c:	b110      	cbz	r0, 8000834 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800082e:	2802      	cmp	r0, #2
 8000830:	d009      	beq.n	8000846 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000832:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000834:	4b07      	ldr	r3, [pc, #28]	; (8000854 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000836:	681a      	ldr	r2, [r3, #0]
 8000838:	fab2 f282 	clz	r2, r2
 800083c:	0952      	lsrs	r2, r2, #5
 800083e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000840:	4805      	ldr	r0, [pc, #20]	; (8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000842:	f009 b8a3 	b.w	800998c <HAL_GPIO_WritePin>
 8000846:	4b03      	ldr	r3, [pc, #12]	; (8000854 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000848:	689a      	ldr	r2, [r3, #8]
 800084a:	fab2 f282 	clz	r2, r2
 800084e:	0952      	lsrs	r2, r2, #5
 8000850:	2110      	movs	r1, #16
 8000852:	e7f5      	b.n	8000840 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8000854:	20000194 	.word	0x20000194
 8000858:	40021000 	.word	0x40021000

0800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800085c:	b110      	cbz	r0, 8000864 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800085e:	2802      	cmp	r0, #2
 8000860:	d009      	beq.n	8000876 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8000862:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000864:	4b07      	ldr	r3, [pc, #28]	; (8000884 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8000866:	681a      	ldr	r2, [r3, #0]
 8000868:	3a00      	subs	r2, #0
 800086a:	bf18      	it	ne
 800086c:	2201      	movne	r2, #1
 800086e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8000870:	4805      	ldr	r0, [pc, #20]	; (8000888 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8000872:	f009 b88b 	b.w	800998c <HAL_GPIO_WritePin>
 8000876:	4b03      	ldr	r3, [pc, #12]	; (8000884 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8000878:	689a      	ldr	r2, [r3, #8]
 800087a:	3a00      	subs	r2, #0
 800087c:	bf18      	it	ne
 800087e:	2201      	movne	r2, #1
 8000880:	2110      	movs	r1, #16
 8000882:	e7f5      	b.n	8000870 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8000884:	20000194 	.word	0x20000194
 8000888:	40021000 	.word	0x40021000

0800088c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 800088c:	b110      	cbz	r0, 8000894 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 800088e:	2802      	cmp	r0, #2
 8000890:	d004      	beq.n	800089c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8000892:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000894:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000896:	4802      	ldr	r0, [pc, #8]	; (80008a0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8000898:	f009 b87c 	b.w	8009994 <HAL_GPIO_TogglePin>
 800089c:	2110      	movs	r1, #16
 800089e:	e7fa      	b.n	8000896 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 80008a0:	40021000 	.word	0x40021000

080008a4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80008a4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80008a6:	b130      	cbz	r0, 80008b6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80008a8:	2802      	cmp	r0, #2
 80008aa:	d009      	beq.n	80008c0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80008ac:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80008ae:	1e43      	subs	r3, r0, #1
 80008b0:	4258      	negs	r0, r3
 80008b2:	4158      	adcs	r0, r3
 80008b4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80008b6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80008b8:	4802      	ldr	r0, [pc, #8]	; (80008c4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 80008ba:	f009 f861 	bl	8009980 <HAL_GPIO_ReadPin>
        break;
 80008be:	e7f6      	b.n	80008ae <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80008c0:	2110      	movs	r1, #16
 80008c2:	e7f9      	b.n	80008b8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 80008c4:	40021000 	.word	0x40021000

080008c8 <_ZN8touchgfx4GPIO4initEv>:
{
 80008c8:	b570      	push	{r4, r5, r6, lr}
 80008ca:	4d08      	ldr	r5, [pc, #32]	; (80008ec <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 80008cc:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 80008ce:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 80008d0:	b2e0      	uxtb	r0, r4
 80008d2:	f7ff ffe7 	bl	80008a4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 80008d6:	b118      	cbz	r0, 80008e0 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 80008d8:	682b      	ldr	r3, [r5, #0]
 80008da:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80008dc:	bf18      	it	ne
 80008de:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80008e0:	3401      	adds	r4, #1
 80008e2:	2c05      	cmp	r4, #5
 80008e4:	f105 0504 	add.w	r5, r5, #4
 80008e8:	d1f2      	bne.n	80008d0 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80008ea:	bd70      	pop	{r4, r5, r6, pc}
 80008ec:	20000194 	.word	0x20000194

080008f0 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80008f0:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80008f2:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 80008f6:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 80008fa:	4770      	bx	lr

080008fc <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80008fc:	2000      	movs	r0, #0
 80008fe:	4770      	bx	lr

08000900 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000900:	4b03      	ldr	r3, [pc, #12]	; (8000910 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000902:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000904:	3900      	subs	r1, #0
 8000906:	bf18      	it	ne
 8000908:	2101      	movne	r1, #1
 800090a:	7019      	strb	r1, [r3, #0]
    }
 800090c:	4770      	bx	lr
 800090e:	bf00      	nop
 8000910:	20012f2b 	.word	0x20012f2b

08000914 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000914:	2000      	movs	r0, #0
 8000916:	4770      	bx	lr

08000918 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000918:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800091a:	b10b      	cbz	r3, 8000920 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800091c:	4608      	mov	r0, r1
 800091e:	4718      	bx	r3
        }
    }
 8000920:	4770      	bx	lr

08000922 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000922:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000926:	4770      	bx	lr

08000928 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000928:	6840      	ldr	r0, [r0, #4]
 800092a:	6803      	ldr	r3, [r0, #0]
 800092c:	699b      	ldr	r3, [r3, #24]
 800092e:	4718      	bx	r3

08000930 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000930:	4770      	bx	lr

08000932 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000932:	4770      	bx	lr

08000934 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000934:	4770      	bx	lr
	...

08000938 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000938:	b510      	push	{r4, lr}
 800093a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800093c:	f000 fb4c 	bl	8000fd8 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000940:	6823      	ldr	r3, [r4, #0]
 8000942:	4903      	ldr	r1, [pc, #12]	; (8000950 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000944:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000948:	4620      	mov	r0, r4
}
 800094a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 800094e:	4718      	bx	r3
 8000950:	d0000000 	.word	0xd0000000

08000954 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000954:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000956:	6803      	ldr	r3, [r0, #0]
{
 8000958:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800095a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800095e:	4798      	blx	r3
    enableInterrupts();
 8000960:	6823      	ldr	r3, [r4, #0]
 8000962:	4620      	mov	r0, r4
 8000964:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000966:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000968:	f000 f8ec 	bl	8000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800096c:	6823      	ldr	r3, [r4, #0]
 800096e:	4620      	mov	r0, r4
 8000970:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000972:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000974:	2029      	movs	r0, #41	; 0x29
 8000976:	f001 f8b5 	bl	8001ae4 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 800097a:	f000 f8e3 	bl	8000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 800097e:	6823      	ldr	r3, [r4, #0]
 8000980:	4620      	mov	r0, r4
 8000982:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000984:	4798      	blx	r3
    for (;;)
 8000986:	e7f8      	b.n	800097a <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000988 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000988:	b510      	push	{r4, lr}
 800098a:	4604      	mov	r4, r0
        swapFrameBuffers();
 800098c:	f010 fb0a 	bl	8010fa4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000990:	6823      	ldr	r3, [r4, #0]
 8000992:	4620      	mov	r0, r4
 8000994:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000998:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 800099c:	4718      	bx	r3

0800099e <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800099e:	f000 bb0d 	b.w	8000fbc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080009a2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80009a2:	f000 bb11 	b.w	8000fc8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080009a6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80009a6:	f000 bb35 	b.w	8001014 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080009aa <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80009aa:	f000 badd 	b.w	8000f68 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080009ae <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80009ae:	f000 bae3 	b.w	8000f78 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080009b2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80009b2:	f000 bb3b 	b.w	800102c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080009b6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80009b6:	f000 bae7 	b.w	8000f88 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080009ba <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80009ba:	f00f bd5f 	b.w	801047c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080009be <_ZN11TouchGFXHALD0Ev>:
 80009be:	b510      	push	{r4, lr}
 80009c0:	217c      	movs	r1, #124	; 0x7c
 80009c2:	4604      	mov	r4, r0
 80009c4:	f028 fdd3 	bl	802956e <_ZdlPvj>
 80009c8:	4620      	mov	r0, r4
 80009ca:	bd10      	pop	{r4, pc}

080009cc <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80009cc:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 80009d0:	b11b      	cbz	r3, 80009da <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80009d2:	6840      	ldr	r0, [r0, #4]
 80009d4:	6803      	ldr	r3, [r0, #0]
 80009d6:	681b      	ldr	r3, [r3, #0]
 80009d8:	4718      	bx	r3
    }
 80009da:	4618      	mov	r0, r3
 80009dc:	4770      	bx	lr
	...

080009e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80009e0:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80009e2:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80009e6:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 80009ea:	4b0c      	ldr	r3, [pc, #48]	; (8000a1c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80009ec:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80009ee:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80009f0:	d009      	beq.n	8000a06 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80009f2:	b93a      	cbnz	r2, 8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f4:	4a0a      	ldr	r2, [pc, #40]	; (8000a20 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009f6:	490b      	ldr	r1, [pc, #44]	; (8000a24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f8:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009fa:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80009fc:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009fe:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000a00:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000a02:	701a      	strb	r2, [r3, #0]
    }
 8000a04:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000a06:	2a00      	cmp	r2, #0
 8000a08:	d0fc      	beq.n	8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a0a:	4a05      	ldr	r2, [pc, #20]	; (8000a20 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a0c:	4905      	ldr	r1, [pc, #20]	; (8000a24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a0e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a10:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000a12:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a14:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000a16:	2200      	movs	r2, #0
 8000a18:	e7f3      	b.n	8000a02 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000a1a:	bf00      	nop
 8000a1c:	20012f24 	.word	0x20012f24
 8000a20:	20012f20 	.word	0x20012f20
 8000a24:	20012f22 	.word	0x20012f22

08000a28 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000a28:	b570      	push	{r4, r5, r6, lr}
 8000a2a:	460d      	mov	r5, r1
 8000a2c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000a2e:	b935      	cbnz	r5, 8000a3e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000a30:	4b09      	ldr	r3, [pc, #36]	; (8000a58 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000a32:	4a0a      	ldr	r2, [pc, #40]	; (8000a5c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000a34:	480a      	ldr	r0, [pc, #40]	; (8000a60 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000a36:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000a3a:	f029 fbab 	bl	802a194 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000a3e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a42:	4b08      	ldr	r3, [pc, #32]	; (8000a64 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000a44:	3a00      	subs	r2, #0
 8000a46:	bf18      	it	ne
 8000a48:	2201      	movne	r2, #1
 8000a4a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000a4c:	6803      	ldr	r3, [r0, #0]
    }
 8000a4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000a52:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000a56:	4718      	bx	r3
 8000a58:	0802b304 	.word	0x0802b304
 8000a5c:	0802b33c 	.word	0x0802b33c
 8000a60:	0802b38a 	.word	0x0802b38a
 8000a64:	20012f2a 	.word	0x20012f2a

08000a68 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000a68:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000a6a:	4b09      	ldr	r3, [pc, #36]	; (8000a90 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000a6c:	881b      	ldrh	r3, [r3, #0]
 8000a6e:	428b      	cmp	r3, r1
 8000a70:	d803      	bhi.n	8000a7a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000a72:	4b08      	ldr	r3, [pc, #32]	; (8000a94 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000a74:	881b      	ldrh	r3, [r3, #0]
 8000a76:	4293      	cmp	r3, r2
 8000a78:	d905      	bls.n	8000a86 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000a7a:	4b07      	ldr	r3, [pc, #28]	; (8000a98 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000a7c:	4a07      	ldr	r2, [pc, #28]	; (8000a9c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000a7e:	4808      	ldr	r0, [pc, #32]	; (8000aa0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000a80:	219e      	movs	r1, #158	; 0x9e
 8000a82:	f029 fb87 	bl	802a194 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000a86:	4b07      	ldr	r3, [pc, #28]	; (8000aa4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000a88:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000a8a:	4b07      	ldr	r3, [pc, #28]	; (8000aa8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000a8c:	801a      	strh	r2, [r3, #0]
    }
 8000a8e:	bd08      	pop	{r3, pc}
 8000a90:	20012f20 	.word	0x20012f20
 8000a94:	20012f22 	.word	0x20012f22
 8000a98:	0802b3cf 	.word	0x0802b3cf
 8000a9c:	0802b432 	.word	0x0802b432
 8000aa0:	0802b38a 	.word	0x0802b38a
 8000aa4:	20012f26 	.word	0x20012f26
 8000aa8:	20012f28 	.word	0x20012f28

08000aac <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000aac:	2101      	movs	r1, #1
{
 8000aae:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000ab0:	2200      	movs	r2, #0
 8000ab2:	4608      	mov	r0, r1
 8000ab4:	f00c faee 	bl	800d094 <osSemaphoreNew>
 8000ab8:	4b0a      	ldr	r3, [pc, #40]	; (8000ae4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000aba:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000abc:	b928      	cbnz	r0, 8000aca <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000abe:	4b0a      	ldr	r3, [pc, #40]	; (8000ae8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000ac0:	4a0a      	ldr	r2, [pc, #40]	; (8000aec <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000ac2:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000ac4:	480a      	ldr	r0, [pc, #40]	; (8000af0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000ac6:	f029 fb65 	bl	802a194 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000aca:	2200      	movs	r2, #0
 8000acc:	2104      	movs	r1, #4
 8000ace:	2001      	movs	r0, #1
 8000ad0:	f00c fb94 	bl	800d1fc <osMessageQueueNew>
 8000ad4:	4b07      	ldr	r3, [pc, #28]	; (8000af4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000ad6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000ad8:	b918      	cbnz	r0, 8000ae2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000ada:	4b07      	ldr	r3, [pc, #28]	; (8000af8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000adc:	4a03      	ldr	r2, [pc, #12]	; (8000aec <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000ade:	212c      	movs	r1, #44	; 0x2c
 8000ae0:	e7f0      	b.n	8000ac4 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000ae2:	bd08      	pop	{r3, pc}
 8000ae4:	200001a8 	.word	0x200001a8
 8000ae8:	0802b550 	.word	0x0802b550
 8000aec:	0802b599 	.word	0x0802b599
 8000af0:	0802b5c8 	.word	0x0802b5c8
 8000af4:	200001a4 	.word	0x200001a4
 8000af8:	0802b642 	.word	0x0802b642

08000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000afc:	4b02      	ldr	r3, [pc, #8]	; (8000b08 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000afe:	f04f 31ff 	mov.w	r1, #4294967295
 8000b02:	6818      	ldr	r0, [r3, #0]
 8000b04:	f00c bb1a 	b.w	800d13c <osSemaphoreAcquire>
 8000b08:	200001a8 	.word	0x200001a8

08000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000b0c:	4b01      	ldr	r3, [pc, #4]	; (8000b14 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000b0e:	6818      	ldr	r0, [r3, #0]
 8000b10:	f00c bb48 	b.w	800d1a4 <osSemaphoreRelease>
 8000b14:	200001a8 	.word	0x200001a8

08000b18 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000b18:	4b02      	ldr	r3, [pc, #8]	; (8000b24 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000b1a:	2100      	movs	r1, #0
 8000b1c:	6818      	ldr	r0, [r3, #0]
 8000b1e:	f00c bb0d 	b.w	800d13c <osSemaphoreAcquire>
 8000b22:	bf00      	nop
 8000b24:	200001a8 	.word	0x200001a8

08000b28 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000b28:	f7ff bff0 	b.w	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000b2c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000b2c:	4803      	ldr	r0, [pc, #12]	; (8000b3c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000b2e:	4904      	ldr	r1, [pc, #16]	; (8000b40 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000b30:	6800      	ldr	r0, [r0, #0]
 8000b32:	2300      	movs	r3, #0
 8000b34:	461a      	mov	r2, r3
 8000b36:	f00c bb9b 	b.w	800d270 <osMessageQueuePut>
 8000b3a:	bf00      	nop
 8000b3c:	200001a4 	.word	0x200001a4
 8000b40:	20000004 	.word	0x20000004

08000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000b44:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000b46:	4c08      	ldr	r4, [pc, #32]	; (8000b68 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000b48:	2300      	movs	r3, #0
 8000b4a:	461a      	mov	r2, r3
 8000b4c:	a901      	add	r1, sp, #4
 8000b4e:	6820      	ldr	r0, [r4, #0]
 8000b50:	f00c fbc4 	bl	800d2dc <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000b54:	6820      	ldr	r0, [r4, #0]
 8000b56:	f04f 33ff 	mov.w	r3, #4294967295
 8000b5a:	2200      	movs	r2, #0
 8000b5c:	a901      	add	r1, sp, #4
 8000b5e:	f00c fbbd 	bl	800d2dc <osMessageQueueGet>
}
 8000b62:	b002      	add	sp, #8
 8000b64:	bd10      	pop	{r4, pc}
 8000b66:	bf00      	nop
 8000b68:	200001a4 	.word	0x200001a4

08000b6c <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8000b6c:	4770      	bx	lr

08000b6e <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8000b6e:	2000      	movs	r0, #0
 8000b70:	4770      	bx	lr

08000b72 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8000b72:	4770      	bx	lr

08000b74 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8000b74:	4770      	bx	lr

08000b76 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8000b76:	2000      	movs	r0, #0
 8000b78:	4770      	bx	lr

08000b7a <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8000b7a:	4770      	bx	lr

08000b7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8000b7c:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000b7e:	4a03      	ldr	r2, [pc, #12]	; (8000b8c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8000b80:	4b03      	ldr	r3, [pc, #12]	; (8000b90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8000b82:	4804      	ldr	r0, [pc, #16]	; (8000b94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8000b84:	2122      	movs	r1, #34	; 0x22
 8000b86:	f029 fb05 	bl	802a194 <__assert_func>
 8000b8a:	bf00      	nop
 8000b8c:	0802b6a7 	.word	0x0802b6a7
 8000b90:	0802b684 	.word	0x0802b684
 8000b94:	0802b6e5 	.word	0x0802b6e5

08000b98 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8000b98:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000b9a:	4a03      	ldr	r2, [pc, #12]	; (8000ba8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8000b9c:	4b03      	ldr	r3, [pc, #12]	; (8000bac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8000b9e:	4804      	ldr	r0, [pc, #16]	; (8000bb0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8000ba0:	2127      	movs	r1, #39	; 0x27
 8000ba2:	f029 faf7 	bl	802a194 <__assert_func>
 8000ba6:	bf00      	nop
 8000ba8:	0802b75d 	.word	0x0802b75d
 8000bac:	0802b684 	.word	0x0802b684
 8000bb0:	0802b6e5 	.word	0x0802b6e5

08000bb4 <_ZN8STM32DMAD0Ev>:
 8000bb4:	b510      	push	{r4, lr}
 8000bb6:	2144      	movs	r1, #68	; 0x44
 8000bb8:	4604      	mov	r4, r0
 8000bba:	f028 fcd8 	bl	802956e <_ZdlPvj>
 8000bbe:	4620      	mov	r0, r4
 8000bc0:	bd10      	pop	{r4, pc}
	...

08000bc4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000bc4:	b538      	push	{r3, r4, r5, lr}
 8000bc6:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8000bc8:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000bca:	2500      	movs	r5, #0
 8000bcc:	4b06      	ldr	r3, [pc, #24]	; (8000be8 <_ZN8STM32DMAC1Ev+0x24>)
 8000bce:	7225      	strb	r5, [r4, #8]
 8000bd0:	300c      	adds	r0, #12
 8000bd2:	6060      	str	r0, [r4, #4]
 8000bd4:	7265      	strb	r5, [r4, #9]
 8000bd6:	2201      	movs	r2, #1
 8000bd8:	f841 3b20 	str.w	r3, [r1], #32
 8000bdc:	f010 fb3a 	bl	8011254 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000be0:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8000be2:	4620      	mov	r0, r4
 8000be4:	bd38      	pop	{r3, r4, r5, pc}
 8000be6:	bf00      	nop
 8000be8:	0802b7a4 	.word	0x0802b7a4

08000bec <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000bec:	2001      	movs	r0, #1
 8000bee:	4770      	bx	lr

08000bf0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000bf0:	2038      	movs	r0, #56	; 0x38
 8000bf2:	4770      	bx	lr

08000bf4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000bf4:	2338      	movs	r3, #56	; 0x38
 8000bf6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000bfa:	3008      	adds	r0, #8
 8000bfc:	4770      	bx	lr

08000bfe <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000bfe:	2338      	movs	r3, #56	; 0x38
 8000c00:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c04:	3008      	adds	r0, #8
 8000c06:	4770      	bx	lr

08000c08 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000c08:	2001      	movs	r0, #1
 8000c0a:	4770      	bx	lr

08000c0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000c0c:	f241 30f8 	movw	r0, #5112	; 0x13f8
 8000c10:	4770      	bx	lr

08000c12 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c12:	f241 33f8 	movw	r3, #5112	; 0x13f8
 8000c16:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c1a:	3008      	adds	r0, #8
 8000c1c:	4770      	bx	lr

08000c1e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c1e:	f241 33f8 	movw	r3, #5112	; 0x13f8
 8000c22:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c26:	3008      	adds	r0, #8
 8000c28:	4770      	bx	lr

08000c2a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000c2a:	2001      	movs	r0, #1
 8000c2c:	4770      	bx	lr

08000c2e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000c2e:	2010      	movs	r0, #16
 8000c30:	4770      	bx	lr

08000c32 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c32:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000c36:	3008      	adds	r0, #8
 8000c38:	4770      	bx	lr

08000c3a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c3a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000c3e:	3008      	adds	r0, #8
 8000c40:	4770      	bx	lr

08000c42 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8000c42:	4608      	mov	r0, r1
 8000c44:	f002 bf08 	b.w	8003a58 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000c48:	b510      	push	{r4, lr}
 8000c4a:	4b03      	ldr	r3, [pc, #12]	; (8000c58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000c4c:	6003      	str	r3, [r0, #0]
 8000c4e:	4604      	mov	r4, r0
 8000c50:	f00e ff9d 	bl	800fb8e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000c54:	4620      	mov	r0, r4
 8000c56:	bd10      	pop	{r4, pc}
 8000c58:	0802b85c 	.word	0x0802b85c

08000c5c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000c5c:	b510      	push	{r4, lr}
 8000c5e:	4604      	mov	r4, r0
 8000c60:	f7ff fff2 	bl	8000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000c64:	4620      	mov	r0, r4
 8000c66:	2140      	movs	r1, #64	; 0x40
 8000c68:	f028 fc81 	bl	802956e <_ZdlPvj>
 8000c6c:	4620      	mov	r0, r4
 8000c6e:	bd10      	pop	{r4, pc}

08000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000c70:	b510      	push	{r4, lr}
 8000c72:	4b03      	ldr	r3, [pc, #12]	; (8000c80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000c74:	6003      	str	r3, [r0, #0]
 8000c76:	4604      	mov	r4, r0
 8000c78:	f00e ff89 	bl	800fb8e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000c7c:	4620      	mov	r0, r4
 8000c7e:	bd10      	pop	{r4, pc}
 8000c80:	0802b828 	.word	0x0802b828

08000c84 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000c84:	b510      	push	{r4, lr}
 8000c86:	4604      	mov	r4, r0
 8000c88:	f7ff fff2 	bl	8000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000c8c:	4620      	mov	r0, r4
 8000c8e:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8000c92:	f028 fc6c 	bl	802956e <_ZdlPvj>
 8000c96:	4620      	mov	r0, r4
 8000c98:	bd10      	pop	{r4, pc}
	...

08000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000c9c:	b510      	push	{r4, lr}
 8000c9e:	4b03      	ldr	r3, [pc, #12]	; (8000cac <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ca0:	6003      	str	r3, [r0, #0]
 8000ca2:	4604      	mov	r4, r0
 8000ca4:	f00e ff73 	bl	800fb8e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ca8:	4620      	mov	r0, r4
 8000caa:	bd10      	pop	{r4, pc}
 8000cac:	0802b7f4 	.word	0x0802b7f4

08000cb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000cb0:	b510      	push	{r4, lr}
 8000cb2:	4604      	mov	r4, r0
 8000cb4:	f7ff fff2 	bl	8000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000cb8:	4620      	mov	r0, r4
 8000cba:	2118      	movs	r1, #24
 8000cbc:	f028 fc57 	bl	802956e <_ZdlPvj>
 8000cc0:	4620      	mov	r0, r4
 8000cc2:	bd10      	pop	{r4, pc}

08000cc4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000cc4:	b510      	push	{r4, lr}
 8000cc6:	4b09      	ldr	r3, [pc, #36]	; (8000cec <_ZN12FrontendHeapD1Ev+0x28>)
 8000cc8:	6003      	str	r3, [r0, #0]
 8000cca:	4604      	mov	r4, r0
 8000ccc:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 8000cd0:	300c      	adds	r0, #12
 8000cd2:	f7ff ffb9 	bl	8000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000cd6:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000cda:	f7ff ffc9 	bl	8000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000cde:	f104 0014 	add.w	r0, r4, #20
 8000ce2:	f7ff ffdb 	bl	8000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ce6:	4620      	mov	r0, r4
 8000ce8:	bd10      	pop	{r4, pc}
 8000cea:	bf00      	nop
 8000cec:	0802b890 	.word	0x0802b890

08000cf0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000cf0:	b508      	push	{r3, lr}
 8000cf2:	4802      	ldr	r0, [pc, #8]	; (8000cfc <__tcf_0+0xc>)
 8000cf4:	f7ff ffe6 	bl	8000cc4 <_ZN12FrontendHeapD1Ev>
 8000cf8:	bd08      	pop	{r3, pc}
 8000cfa:	bf00      	nop
 8000cfc:	200001b0 	.word	0x200001b0

08000d00 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000d00:	b510      	push	{r4, lr}
 8000d02:	4604      	mov	r4, r0
 8000d04:	f7ff ffde 	bl	8000cc4 <_ZN12FrontendHeapD1Ev>
 8000d08:	4620      	mov	r0, r4
 8000d0a:	f241 51d0 	movw	r1, #5584	; 0x15d0
 8000d0e:	f028 fc2e 	bl	802956e <_ZdlPvj>
 8000d12:	4620      	mov	r0, r4
 8000d14:	bd10      	pop	{r4, pc}
	...

08000d18 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000d18:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000d1c:	f001 fc8e 	bl	800263c <_ZN14BitmapDatabase11getInstanceEv>
 8000d20:	4605      	mov	r5, r0
 8000d22:	f001 fc8f 	bl	8002644 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000d26:	2400      	movs	r4, #0
 8000d28:	4601      	mov	r1, r0
 8000d2a:	4623      	mov	r3, r4
 8000d2c:	4628      	mov	r0, r5
 8000d2e:	4622      	mov	r2, r4
 8000d30:	9400      	str	r4, [sp, #0]
 8000d32:	f017 ffa3 	bl	8018c7c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000d36:	4b26      	ldr	r3, [pc, #152]	; (8000dd0 <touchgfx_init+0xb8>)
 8000d38:	4a26      	ldr	r2, [pc, #152]	; (8000dd4 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000d3a:	4d27      	ldr	r5, [pc, #156]	; (8000dd8 <touchgfx_init+0xc0>)
 8000d3c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000d3e:	4620      	mov	r0, r4
 8000d40:	f007 fa6c 	bl	800821c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000d44:	4825      	ldr	r0, [pc, #148]	; (8000ddc <touchgfx_init+0xc4>)
 8000d46:	f017 ff01 	bl	8018b4c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000d4a:	682b      	ldr	r3, [r5, #0]
 8000d4c:	f3bf 8f5b 	dmb	ish
 8000d50:	07db      	lsls	r3, r3, #31
 8000d52:	d437      	bmi.n	8000dc4 <touchgfx_init+0xac>
 8000d54:	4628      	mov	r0, r5
 8000d56:	f028 fc0c 	bl	8029572 <__cxa_guard_acquire>
 8000d5a:	b398      	cbz	r0, 8000dc4 <touchgfx_init+0xac>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000d5c:	4c20      	ldr	r4, [pc, #128]	; (8000de0 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000d5e:	4b21      	ldr	r3, [pc, #132]	; (8000de4 <touchgfx_init+0xcc>)
 8000d60:	6023      	str	r3, [r4, #0]
 8000d62:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8000d66:	f104 082c 	add.w	r8, r4, #44	; 0x2c
          transitionStorage(tra),
          frontendApplication(app)
 8000d6a:	f500 56a3 	add.w	r6, r0, #5216	; 0x1460
          transitionStorage(tra),
 8000d6e:	f508 57a0 	add.w	r7, r8, #5120	; 0x1400
        : presenterStorage(pres),
 8000d72:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000d74:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8000d78:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000d7a:	6126      	str	r6, [r4, #16]
 8000d7c:	f00e ff08 	bl	800fb90 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d80:	4b19      	ldr	r3, [pc, #100]	; (8000de8 <touchgfx_init+0xd0>)
 8000d82:	6163      	str	r3, [r4, #20]
 8000d84:	4640      	mov	r0, r8
 8000d86:	f00e ff03 	bl	800fb90 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d8a:	4b18      	ldr	r3, [pc, #96]	; (8000dec <touchgfx_init+0xd4>)
 8000d8c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000d8e:	4638      	mov	r0, r7
 8000d90:	f00e fefe 	bl	800fb90 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d94:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8000d98:	4a15      	ldr	r2, [pc, #84]	; (8000df0 <touchgfx_init+0xd8>)
 8000d9a:	f8c3 242c 	str.w	r2, [r3, #1068]	; 0x42c
 8000d9e:	f203 406c 	addw	r0, r3, #1132	; 0x46c
 8000da2:	f007 fea9 	bl	8008af8 <_ZN5ModelC1Ev>
 8000da6:	4622      	mov	r2, r4
 8000da8:	f1a6 0108 	sub.w	r1, r6, #8
 8000dac:	4630      	mov	r0, r6
 8000dae:	f007 fb8f 	bl	80084d0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000db2:	4630      	mov	r0, r6
 8000db4:	f002 fe50 	bl	8003a58 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 8000db8:	480e      	ldr	r0, [pc, #56]	; (8000df4 <touchgfx_init+0xdc>)
 8000dba:	f029 fa09 	bl	802a1d0 <atexit>
 8000dbe:	4628      	mov	r0, r5
 8000dc0:	f028 fbe3 	bl	802958a <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000dc4:	480c      	ldr	r0, [pc, #48]	; (8000df8 <touchgfx_init+0xe0>)
}
 8000dc6:	b002      	add	sp, #8
 8000dc8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000dcc:	f7ff bdb4 	b.w	8000938 <_ZN11TouchGFXHAL10initializeEv>
 8000dd0:	20012f90 	.word	0x20012f90
 8000dd4:	20001844 	.word	0x20001844
 8000dd8:	200001ac 	.word	0x200001ac
 8000ddc:	20000008 	.word	0x20000008
 8000de0:	200001b0 	.word	0x200001b0
 8000de4:	0802b890 	.word	0x0802b890
 8000de8:	0802b7f4 	.word	0x0802b7f4
 8000dec:	0802b828 	.word	0x0802b828
 8000df0:	0802b85c 	.word	0x0802b85c
 8000df4:	08000cf1 	.word	0x08000cf1
 8000df8:	200017c8 	.word	0x200017c8

08000dfc <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8000dfc:	4770      	bx	lr
	...

08000e00 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000e00:	4801      	ldr	r0, [pc, #4]	; (8000e08 <touchgfx_taskEntry+0x8>)
 8000e02:	f7ff bda7 	b.w	8000954 <_ZN11TouchGFXHAL9taskEntryEv>
 8000e06:	bf00      	nop
 8000e08:	200017c8 	.word	0x200017c8

08000e0c <_GLOBAL__sub_I_touchgfx_init>:
}
 8000e0c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8000e0e:	4e22      	ldr	r6, [pc, #136]	; (8000e98 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8000e10:	4c22      	ldr	r4, [pc, #136]	; (8000e9c <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8000e12:	4d23      	ldr	r5, [pc, #140]	; (8000ea0 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000e14:	4b23      	ldr	r3, [pc, #140]	; (8000ea4 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8000e16:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000e18:	4630      	mov	r0, r6
 8000e1a:	f7ff fed3 	bl	8000bc4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000e1e:	4628      	mov	r0, r5
 8000e20:	f01c f9f8 	bl	801d214 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8000e24:	4b20      	ldr	r3, [pc, #128]	; (8000ea8 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e26:	4821      	ldr	r0, [pc, #132]	; (8000eac <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8000e28:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8000e2a:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8000e2c:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8000e30:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8000e34:	491e      	ldr	r1, [pc, #120]	; (8000eb0 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000e36:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8000e38:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8000e3c:	491d      	ldr	r1, [pc, #116]	; (8000eb4 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8000e3e:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8000e40:	491d      	ldr	r1, [pc, #116]	; (8000eb8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8000e42:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8000e46:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e48:	21f0      	movs	r1, #240	; 0xf0
 8000e4a:	8001      	strh	r1, [r0, #0]
 8000e4c:	481b      	ldr	r0, [pc, #108]	; (8000ebc <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 8000e4e:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e50:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e52:	481b      	ldr	r0, [pc, #108]	; (8000ec0 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8000e54:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e58:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8000e5c:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000e60:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000e64:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000e68:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8000e6c:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8000e70:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000e74:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8000e78:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8000e7c:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 8000e7e:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e82:	8001      	strh	r1, [r0, #0]
 8000e84:	480f      	ldr	r0, [pc, #60]	; (8000ec4 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8000e86:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8000e88:	490f      	ldr	r1, [pc, #60]	; (8000ec8 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000e8a:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000e8c:	2201      	movs	r2, #1
 8000e8e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000e92:	4a0e      	ldr	r2, [pc, #56]	; (8000ecc <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000e94:	601a      	str	r2, [r3, #0]
}
 8000e96:	bd70      	pop	{r4, r5, r6, pc}
 8000e98:	20001784 	.word	0x20001784
 8000e9c:	20001780 	.word	0x20001780
 8000ea0:	20001848 	.word	0x20001848
 8000ea4:	0802b2f4 	.word	0x0802b2f4
 8000ea8:	200017c8 	.word	0x200017c8
 8000eac:	20012f20 	.word	0x20012f20
 8000eb0:	01000001 	.word	0x01000001
 8000eb4:	01010000 	.word	0x01010000
 8000eb8:	20012f2c 	.word	0x20012f2c
 8000ebc:	20012f26 	.word	0x20012f26
 8000ec0:	20012f22 	.word	0x20012f22
 8000ec4:	20012f28 	.word	0x20012f28
 8000ec8:	20012f24 	.word	0x20012f24
 8000ecc:	0802b480 	.word	0x0802b480

08000ed0 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8000ed0:	2000      	movs	r0, #0
 8000ed2:	4770      	bx	lr

08000ed4 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8000ed4:	8081      	strh	r1, [r0, #4]
    }
 8000ed6:	4770      	bx	lr

08000ed8 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8000ed8:	80c1      	strh	r1, [r0, #6]
    }
 8000eda:	4770      	bx	lr

08000edc <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8000edc:	8101      	strh	r1, [r0, #8]
    }
 8000ede:	4770      	bx	lr

08000ee0 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8000ee0:	8141      	strh	r1, [r0, #10]
    }
 8000ee2:	4770      	bx	lr

08000ee4 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8000ee4:	4770      	bx	lr

08000ee6 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8000ee6:	4770      	bx	lr

08000ee8 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8000ee8:	4770      	bx	lr

08000eea <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8000eea:	4770      	bx	lr

08000eec <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8000eec:	4770      	bx	lr

08000eee <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8000eee:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8000ef0:	88c4      	ldrh	r4, [r0, #6]
 8000ef2:	6803      	ldr	r3, [r0, #0]
 8000ef4:	1b12      	subs	r2, r2, r4
 8000ef6:	8884      	ldrh	r4, [r0, #4]
 8000ef8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8000efa:	1b09      	subs	r1, r1, r4
 8000efc:	b212      	sxth	r2, r2
    }
 8000efe:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8000f02:	b209      	sxth	r1, r1
 8000f04:	4718      	bx	r3

08000f06 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8000f06:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8000f0a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8000f0c:	f04f 33ff 	mov.w	r3, #4294967295
 8000f10:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8000f12:	6813      	ldr	r3, [r2, #0]
 8000f14:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8000f16:	6010      	str	r0, [r2, #0]
    }
 8000f18:	4770      	bx	lr

08000f1a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8000f1a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8000f1e:	b11a      	cbz	r2, 8000f28 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8000f20:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8000f24:	b102      	cbz	r2, 8000f28 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8000f26:	6018      	str	r0, [r3, #0]
        }
    }
 8000f28:	4770      	bx	lr

08000f2a <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8000f2a:	2000      	movs	r0, #0
 8000f2c:	4770      	bx	lr

08000f2e <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8000f2e:	888b      	ldrh	r3, [r1, #4]
 8000f30:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8000f32:	2001      	movs	r0, #1
 8000f34:	4770      	bx	lr

08000f36 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8000f36:	4770      	bx	lr

08000f38 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8000f38:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8000f3c:	4770      	bx	lr

08000f3e <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8000f3e:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8000f42:	4770      	bx	lr

08000f44 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8000f44:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8000f46:	2200      	movs	r2, #0
        return rect.width;
 8000f48:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8000f4c:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8000f50:	8002      	strh	r2, [r0, #0]
 8000f52:	8042      	strh	r2, [r0, #2]
 8000f54:	8084      	strh	r4, [r0, #4]
 8000f56:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8000f58:	bd10      	pop	{r4, pc}

08000f5a <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8000f5a:	2200      	movs	r2, #0
 8000f5c:	8002      	strh	r2, [r0, #0]
 8000f5e:	8042      	strh	r2, [r0, #2]
 8000f60:	8082      	strh	r2, [r0, #4]
 8000f62:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8000f64:	4770      	bx	lr
	...

08000f68 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f68:	4b02      	ldr	r3, [pc, #8]	; (8000f74 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8000f6a:	2290      	movs	r2, #144	; 0x90
 8000f6c:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8000f70:	4770      	bx	lr
 8000f72:	bf00      	nop
 8000f74:	e000e100 	.word	0xe000e100

08000f78 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000f78:	4b02      	ldr	r3, [pc, #8]	; (8000f84 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8000f7a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8000f7e:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 8000f80:	4770      	bx	lr
 8000f82:	bf00      	nop
 8000f84:	e000e100 	.word	0xe000e100

08000f88 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000f88:	4a09      	ldr	r2, [pc, #36]	; (8000fb0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8000f8a:	490a      	ldr	r1, [pc, #40]	; (8000fb4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8000f8c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000f8e:	480a      	ldr	r0, [pc, #40]	; (8000fb8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000f90:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8000f94:	3b01      	subs	r3, #1
 8000f96:	b29b      	uxth	r3, r3
 8000f98:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000f9a:	6911      	ldr	r1, [r2, #16]
 8000f9c:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8000fa0:	3901      	subs	r1, #1
 8000fa2:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8000fa4:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8000fa6:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8000fa8:	f043 0301 	orr.w	r3, r3, #1
 8000fac:	6353      	str	r3, [r2, #52]	; 0x34
}
 8000fae:	4770      	bx	lr
 8000fb0:	40016800 	.word	0x40016800
 8000fb4:	200018ce 	.word	0x200018ce
 8000fb8:	200018cc 	.word	0x200018cc

08000fbc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8000fbc:	4b01      	ldr	r3, [pc, #4]	; (8000fc4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8000fbe:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8000fc2:	4770      	bx	lr
 8000fc4:	40016800 	.word	0x40016800

08000fc8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8000fc8:	4b02      	ldr	r3, [pc, #8]	; (8000fd4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000fca:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8000fcc:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000fd0:	625a      	str	r2, [r3, #36]	; 0x24
}
 8000fd2:	4770      	bx	lr
 8000fd4:	40016800 	.word	0x40016800

08000fd8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8000fd8:	b570      	push	{r4, r5, r6, lr}
 8000fda:	4604      	mov	r4, r0
    HAL::initialize();
 8000fdc:	f00f faa3 	bl	8010526 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8000fe0:	6823      	ldr	r3, [r4, #0]
 8000fe2:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8000fe4:	f014 fa4c 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
 8000fe8:	4601      	mov	r1, r0
 8000fea:	4620      	mov	r0, r4
 8000fec:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8000fee:	6823      	ldr	r3, [r4, #0]
 8000ff0:	4a05      	ldr	r2, [pc, #20]	; (8001008 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8000ff2:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8000ff6:	4620      	mov	r0, r4
 8000ff8:	46ac      	mov	ip, r5
 8000ffa:	2300      	movs	r3, #0
}
 8000ffc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001000:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001004:	4760      	bx	ip
 8001006:	bf00      	nop
 8001008:	d004b000 	.word	0xd004b000

0800100c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 800100c:	f00f ba72 	b.w	80104f4 <_ZN8touchgfx3HAL10beginFrameEv>

08001010 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001010:	f00f ba7c 	b.w	801050c <_ZN8touchgfx3HAL8endFrameEv>

08001014 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001014:	f00f ba38 	b.w	8010488 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001018 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001018:	f00f bb99 	b.w	801074e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

0800101c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 800101c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001020:	b112      	cbz	r2, 8001028 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001022:	6803      	ldr	r3, [r0, #0]
 8001024:	695b      	ldr	r3, [r3, #20]
 8001026:	4718      	bx	r3
    }
 8001028:	4770      	bx	lr
	...

0800102c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800102c:	4b04      	ldr	r3, [pc, #16]	; (8001040 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 800102e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001032:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001036:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800103a:	f3bf 8f6f 	isb	sy
}
 800103e:	4770      	bx	lr
 8001040:	e000e100 	.word	0xe000e100

08001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8001044:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8001046:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001048:	4e12      	ldr	r6, [pc, #72]	; (8001094 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 800104a:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 800104c:	4b12      	ldr	r3, [pc, #72]	; (8001098 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 800104e:	6003      	str	r3, [r0, #0]
 8001050:	6833      	ldr	r3, [r6, #0]
 8001052:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 8001056:	4605      	mov	r5, r0
 8001058:	b10a      	cbz	r2, 800105e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 800105a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800105c:	b900      	cbnz	r0, 8001060 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 800105e:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001060:	6803      	ldr	r3, [r0, #0]
 8001062:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001064:	4798      	blx	r3
        return auxiliaryLCD;
 8001066:	6833      	ldr	r3, [r6, #0]
 8001068:	fab0 f480 	clz	r4, r0
 800106c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800106e:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001070:	b130      	cbz	r0, 8001080 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001072:	6803      	ldr	r3, [r0, #0]
 8001074:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001076:	4798      	blx	r3
 8001078:	2800      	cmp	r0, #0
 800107a:	bf08      	it	eq
 800107c:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001080:	b92c      	cbnz	r4, 800108e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001082:	4b06      	ldr	r3, [pc, #24]	; (800109c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001084:	4a06      	ldr	r2, [pc, #24]	; (80010a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001086:	4807      	ldr	r0, [pc, #28]	; (80010a4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001088:	212c      	movs	r1, #44	; 0x2c
 800108a:	f029 f883 	bl	802a194 <__assert_func>
    }
 800108e:	4628      	mov	r0, r5
 8001090:	bd70      	pop	{r4, r5, r6, pc}
 8001092:	bf00      	nop
 8001094:	20012f2c 	.word	0x20012f2c
 8001098:	0802b9a0 	.word	0x0802b9a0
 800109c:	0802b89c 	.word	0x0802b89c
 80010a0:	0802b8fa 	.word	0x0802b8fa
 80010a4:	0802b933 	.word	0x0802b933

080010a8 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 80010a8:	4770      	bx	lr
	...

080010ac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80010ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 80010b0:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 80010b2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 80010b6:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 80010ba:	d105      	bne.n	80010c8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 80010bc:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 80010c0:	4281      	cmp	r1, r0
 80010c2:	d8fb      	bhi.n	80010bc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 80010c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 80010c8:	4f17      	ldr	r7, [pc, #92]	; (8001128 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010ca:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010ce:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010d2:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010d6:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010da:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010dc:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 80010de:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010e0:	b2db      	uxtb	r3, r3
 80010e2:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 80010e4:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010e8:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010ec:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010f0:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010f4:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010f8:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010fc:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001100:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001104:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001106:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800110a:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800110e:	fb03 4e0e 	mla	lr, r3, lr, r4
 8001112:	fbbe fef5 	udiv	lr, lr, r5
 8001116:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800111a:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 800111e:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8001122:	4281      	cmp	r1, r0
 8001124:	d8de      	bhi.n	80010e4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 8001126:	e7cd      	b.n	80010c4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 8001128:	fffff800 	.word	0xfffff800

0800112c <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 800112c:	b510      	push	{r4, lr}
        return instance;
 800112e:	4c14      	ldr	r4, [pc, #80]	; (8001180 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001130:	6823      	ldr	r3, [r4, #0]
 8001132:	b323      	cbz	r3, 800117e <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001134:	4b13      	ldr	r3, [pc, #76]	; (8001184 <HAL_LTDC_LineEventCallback+0x58>)
 8001136:	4a14      	ldr	r2, [pc, #80]	; (8001188 <HAL_LTDC_LineEventCallback+0x5c>)
 8001138:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800113a:	8811      	ldrh	r1, [r2, #0]
 800113c:	428b      	cmp	r3, r1
 800113e:	d113      	bne.n	8001168 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001140:	4b12      	ldr	r3, [pc, #72]	; (800118c <HAL_LTDC_LineEventCallback+0x60>)
 8001142:	8819      	ldrh	r1, [r3, #0]
 8001144:	f00a fa3e 	bl	800b5c4 <HAL_LTDC_ProgramLineEvent>
 8001148:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800114a:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 800114e:	3301      	adds	r3, #1
 8001150:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001154:	f7ff fcea 	bl	8000b2c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001158:	6820      	ldr	r0, [r4, #0]
 800115a:	f00f ff23 	bl	8010fa4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800115e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001162:	2000      	movs	r0, #0
 8001164:	f7ff bb62 	b.w	800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001168:	f00a fa2c 	bl	800b5c4 <HAL_LTDC_ProgramLineEvent>
        return instance;
 800116c:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 800116e:	6803      	ldr	r3, [r0, #0]
 8001170:	6a1b      	ldr	r3, [r3, #32]
 8001172:	4798      	blx	r3
    }
 8001174:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001178:	2000      	movs	r0, #0
 800117a:	f7ff bb6f 	b.w	800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 800117e:	bd10      	pop	{r4, pc}
 8001180:	20012f2c 	.word	0x20012f2c
 8001184:	40016800 	.word	0x40016800
 8001188:	200018ce 	.word	0x200018ce
 800118c:	200018cc 	.word	0x200018cc

08001190 <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 8001190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001194:	ed2d 8b02 	vpush	{d8}
 8001198:	b091      	sub	sp, #68	; 0x44
 800119a:	af00      	add	r7, sp, #0
 800119c:	4605      	mov	r5, r0
 800119e:	4688      	mov	r8, r1
 80011a0:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
	uint8_t buffer_size = MEAS_get_num_of_samples();
 80011a2:	f000 fe79 	bl	8001e98 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 80011a6:	b203      	sxth	r3, r0
 80011a8:	60bb      	str	r3, [r7, #8]
 80011aa:	009b      	lsls	r3, r3, #2
 80011ac:	607b      	str	r3, [r7, #4]
 80011ae:	3307      	adds	r3, #7
 80011b0:	f023 0307 	bic.w	r3, r3, #7
 80011b4:	ebad 0d03 	sub.w	sp, sp, r3
	uint8_t buffer_size = MEAS_get_num_of_samples();
 80011b8:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 80011ba:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 80011bc:	b1f0      	cbz	r0, 80011fc <calculate_freq_and_signalstrength+0x6c>
 80011be:	3d01      	subs	r5, #1
 80011c0:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011c2:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 80011c4:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011c6:	f000 fe65 	bl	8001e94 <MEAS_get_num_of_chan>
 80011ca:	fb06 5000 	mla	r0, r6, r0, r5
 80011ce:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80011d2:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80011d6:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011d8:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80011dc:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011de:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80011e2:	d1f0      	bne.n	80011c6 <calculate_freq_and_signalstrength+0x36>
 80011e4:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80011e6:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 8001294 <calculate_freq_and_signalstrength+0x104>
 80011ea:	4456      	add	r6, sl
 80011ec:	edd9 7a00 	vldr	s15, [r9]
 80011f0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80011f4:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80011f8:	454e      	cmp	r6, r9
 80011fa:	d1f7      	bne.n	80011ec <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 80011fc:	68bb      	ldr	r3, [r7, #8]
 80011fe:	466a      	mov	r2, sp
 8001200:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 8001204:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001206:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800120a:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 800120c:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 800120e:	b2a1      	uxth	r1, r4
 8001210:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001214:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8001218:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 800121c:	f027 f8e6 	bl	80283ec <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8001220:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8001222:	2300      	movs	r3, #0
 8001224:	4651      	mov	r1, sl
 8001226:	f107 0028 	add.w	r0, r7, #40	; 0x28
 800122a:	462a      	mov	r2, r5
 800122c:	f027 f962 	bl	80284f4 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8001230:	4622      	mov	r2, r4
 8001232:	4629      	mov	r1, r5
 8001234:	4628      	mov	r0, r5
 8001236:	f027 fdcb 	bl	8028dd0 <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800123a:	f000 fe2f 	bl	8001e9c <MEAS_get_samp_freq>
 800123e:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001242:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 8001246:	edd9 7a00 	vldr	s15, [r9]
 800124a:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800124e:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001252:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8001256:	f107 021c 	add.w	r2, r7, #28
 800125a:	4621      	mov	r1, r4
 800125c:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800125e:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8001262:	f027 f85b 	bl	802831c <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001266:	edd7 7a06 	vldr	s15, [r7, #24]
 800126a:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 800126e:	f000 fe15 	bl	8001e9c <MEAS_get_samp_freq>
 8001272:	ee07 0a90 	vmov	s15, r0
 8001276:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 800127a:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800127e:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 8001282:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001284:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 8001288:	46bd      	mov	sp, r7
 800128a:	ecbd 8b02 	vpop	{d8}
 800128e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001292:	bf00      	nop
 8001294:	44fff000 	.word	0x44fff000

08001298 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001298:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800129a:	2064      	movs	r0, #100	; 0x64
 800129c:	f00b feec 	bl	800d078 <osDelay>
  for(;;)
 80012a0:	e7fb      	b.n	800129a <StartDefaultTask+0x2>
 80012a2:	bf00      	nop

080012a4 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 80012a4:	b580      	push	{r7, lr}
 80012a6:	4c10      	ldr	r4, [pc, #64]	; (80012e8 <StartTimeoutTask+0x44>)
 80012a8:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80012f4 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012ac:	4f0f      	ldr	r7, [pc, #60]	; (80012ec <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80012ae:	4e10      	ldr	r6, [pc, #64]	; (80012f0 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 80012b0:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012b2:	2300      	movs	r3, #0
 80012b4:	461a      	mov	r2, r3
 80012b6:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 80012b8:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012ba:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 80012be:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012c0:	f00b ffd6 	bl	800d270 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80012c4:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80012c6:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012c8:	4638      	mov	r0, r7
 80012ca:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80012cc:	b912      	cbnz	r2, 80012d4 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80012ce:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012d0:	f008 fb5c 	bl	800998c <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80012d4:	4630      	mov	r0, r6
 80012d6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80012da:	f008 fb5b 	bl	8009994 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80012de:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80012e2:	f00b fec9 	bl	800d078 <osDelay>
	  sleep_timeout_value--;
 80012e6:	e7e3      	b.n	80012b0 <StartTimeoutTask+0xc>
 80012e8:	20000014 	.word	0x20000014
 80012ec:	40021000 	.word	0x40021000
 80012f0:	40021800 	.word	0x40021800
 80012f4:	200018d8 	.word	0x200018d8

080012f8 <updateGUI_test>:
	return sleep_timeout_value;
 80012f8:	4b01      	ldr	r3, [pc, #4]	; (8001300 <updateGUI_test+0x8>)
}
 80012fa:	6818      	ldr	r0, [r3, #0]
 80012fc:	4770      	bx	lr
 80012fe:	bf00      	nop
 8001300:	20000014 	.word	0x20000014

08001304 <gyro_disable>:
{
 8001304:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001306:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001308:	4e1f      	ldr	r6, [pc, #124]	; (8001388 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 800130a:	4d20      	ldr	r5, [pc, #128]	; (800138c <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 800130c:	4c20      	ldr	r4, [pc, #128]	; (8001390 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 800130e:	2700      	movs	r7, #0
 8001310:	9700      	str	r7, [sp, #0]
 8001312:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001314:	f043 0304 	orr.w	r3, r3, #4
 8001318:	6333      	str	r3, [r6, #48]	; 0x30
 800131a:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800131c:	f003 0304 	and.w	r3, r3, #4
 8001320:	9300      	str	r3, [sp, #0]
 8001322:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8001324:	682b      	ldr	r3, [r5, #0]
 8001326:	f023 030c 	bic.w	r3, r3, #12
 800132a:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 800132c:	682b      	ldr	r3, [r5, #0]
 800132e:	f043 0304 	orr.w	r3, r3, #4
 8001332:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8001334:	69ab      	ldr	r3, [r5, #24]
 8001336:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800133a:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 800133c:	200a      	movs	r0, #10
 800133e:	f007 ff55 	bl	80091ec <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8001342:	682b      	ldr	r3, [r5, #0]
 8001344:	f043 030c 	orr.w	r3, r3, #12
 8001348:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 800134a:	9701      	str	r7, [sp, #4]
 800134c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800134e:	f043 0320 	orr.w	r3, r3, #32
 8001352:	6333      	str	r3, [r6, #48]	; 0x30
 8001354:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001356:	f003 0320 	and.w	r3, r3, #32
 800135a:	9301      	str	r3, [sp, #4]
 800135c:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 800135e:	68a3      	ldr	r3, [r4, #8]
 8001360:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001364:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8001366:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001368:	f023 030f 	bic.w	r3, r3, #15
 800136c:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 800136e:	68e3      	ldr	r3, [r4, #12]
 8001370:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001374:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8001376:	200a      	movs	r0, #10
 8001378:	f007 ff38 	bl	80091ec <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 800137c:	6823      	ldr	r3, [r4, #0]
 800137e:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8001382:	6023      	str	r3, [r4, #0]
}
 8001384:	b003      	add	sp, #12
 8001386:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001388:	40023800 	.word	0x40023800
 800138c:	40020800 	.word	0x40020800
 8001390:	40021400 	.word	0x40021400

08001394 <SystemClock_Config>:
{
 8001394:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001396:	2400      	movs	r4, #0
{
 8001398:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800139a:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 800139e:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013a2:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80013a6:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 80013aa:	4a1e      	ldr	r2, [pc, #120]	; (8001424 <SystemClock_Config+0x90>)
 80013ac:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013ae:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 80013b0:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013b2:	4b1d      	ldr	r3, [pc, #116]	; (8001428 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80013b4:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80013b8:	6411      	str	r1, [r2, #64]	; 0x40
 80013ba:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80013bc:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 80013c0:	9201      	str	r2, [sp, #4]
 80013c2:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013c4:	9402      	str	r4, [sp, #8]
 80013c6:	681a      	ldr	r2, [r3, #0]
 80013c8:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80013cc:	601a      	str	r2, [r3, #0]
 80013ce:	681b      	ldr	r3, [r3, #0]
 80013d0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80013d4:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80013d6:	2201      	movs	r2, #1
 80013d8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80013dc:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 80013e0:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80013e2:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 80013e4:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80013e6:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 80013ea:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80013ee:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80013f2:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80013f4:	2202      	movs	r2, #2
 80013f6:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80013f8:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80013fa:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013fe:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001400:	f00a f902 	bl	800b608 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001404:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001406:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800140a:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800140e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001412:	a803      	add	r0, sp, #12
 8001414:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001416:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800141a:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800141c:	f00a fb0c 	bl	800ba38 <HAL_RCC_ClockConfig>
}
 8001420:	b015      	add	sp, #84	; 0x54
 8001422:	bd30      	pop	{r4, r5, pc}
 8001424:	40023800 	.word	0x40023800
 8001428:	40007000 	.word	0x40007000

0800142c <main>:
{
 800142c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001430:	2400      	movs	r4, #0
{
 8001432:	b09f      	sub	sp, #124	; 0x7c
  HAL_Init();
 8001434:	f007 feae 	bl	8009194 <HAL_Init>
  SystemClock_Config();
 8001438:	f7ff ffac 	bl	8001394 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800143c:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001440:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001444:	4dbe      	ldr	r5, [pc, #760]	; (8001740 <main+0x314>)
 8001446:	9402      	str	r4, [sp, #8]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001448:	9415      	str	r4, [sp, #84]	; 0x54
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800144a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800144c:	48bd      	ldr	r0, [pc, #756]	; (8001744 <main+0x318>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800144e:	f043 0310 	orr.w	r3, r3, #16
 8001452:	632b      	str	r3, [r5, #48]	; 0x30
 8001454:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001456:	f003 0310 	and.w	r3, r3, #16
 800145a:	9302      	str	r3, [sp, #8]
 800145c:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800145e:	9403      	str	r4, [sp, #12]
 8001460:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001462:	f043 0320 	orr.w	r3, r3, #32
 8001466:	632b      	str	r3, [r5, #48]	; 0x30
 8001468:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800146a:	f003 0320 	and.w	r3, r3, #32
 800146e:	9303      	str	r3, [sp, #12]
 8001470:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001472:	9404      	str	r4, [sp, #16]
 8001474:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001476:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800147a:	632b      	str	r3, [r5, #48]	; 0x30
 800147c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800147e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001482:	9304      	str	r3, [sp, #16]
 8001484:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001486:	9405      	str	r4, [sp, #20]
 8001488:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800148a:	f043 0304 	orr.w	r3, r3, #4
 800148e:	632b      	str	r3, [r5, #48]	; 0x30
 8001490:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001492:	f003 0304 	and.w	r3, r3, #4
 8001496:	9305      	str	r3, [sp, #20]
 8001498:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800149a:	9406      	str	r4, [sp, #24]
 800149c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800149e:	f043 0301 	orr.w	r3, r3, #1
 80014a2:	632b      	str	r3, [r5, #48]	; 0x30
 80014a4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80014a6:	f003 0301 	and.w	r3, r3, #1
 80014aa:	9306      	str	r3, [sp, #24]
 80014ac:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014ae:	9407      	str	r4, [sp, #28]
 80014b0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80014b2:	f043 0302 	orr.w	r3, r3, #2
 80014b6:	632b      	str	r3, [r5, #48]	; 0x30
 80014b8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80014ba:	f003 0302 	and.w	r3, r3, #2
 80014be:	9307      	str	r3, [sp, #28]
 80014c0:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014c2:	9408      	str	r4, [sp, #32]
 80014c4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80014c6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80014ca:	632b      	str	r3, [r5, #48]	; 0x30
 80014cc:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80014ce:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80014d2:	9308      	str	r3, [sp, #32]
 80014d4:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014d6:	9409      	str	r4, [sp, #36]	; 0x24
 80014d8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80014da:	f043 0308 	orr.w	r3, r3, #8
 80014de:	632b      	str	r3, [r5, #48]	; 0x30
 80014e0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80014e2:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014e6:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014e8:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014ea:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014ee:	f008 fa4d 	bl	800998c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 80014f2:	4894      	ldr	r0, [pc, #592]	; (8001744 <main+0x318>)
 80014f4:	2120      	movs	r1, #32
 80014f6:	2201      	movs	r2, #1
 80014f8:	f008 fa48 	bl	800998c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 80014fc:	4892      	ldr	r0, [pc, #584]	; (8001748 <main+0x31c>)
 80014fe:	4622      	mov	r2, r4
 8001500:	2114      	movs	r1, #20
 8001502:	f008 fa43 	bl	800998c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEBUG2_GPIO_GPIO_Port, DEBUG2_GPIO_Pin, GPIO_PIN_RESET);
 8001506:	4891      	ldr	r0, [pc, #580]	; (800174c <main+0x320>)
 8001508:	4622      	mov	r2, r4
 800150a:	2180      	movs	r1, #128	; 0x80
 800150c:	f008 fa3e 	bl	800998c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001510:	488f      	ldr	r0, [pc, #572]	; (8001750 <main+0x324>)
 8001512:	4622      	mov	r2, r4
 8001514:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001518:	f008 fa38 	bl	800998c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 800151c:	2201      	movs	r2, #1
 800151e:	488d      	ldr	r0, [pc, #564]	; (8001754 <main+0x328>)
 8001520:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001524:	f008 fa32 	bl	800998c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001528:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800152a:	f04f 0b03 	mov.w	fp, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 800152e:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001530:	4884      	ldr	r0, [pc, #528]	; (8001744 <main+0x318>)
 8001532:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001534:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001538:	e9cd 3611 	strd	r3, r6, [sp, #68]	; 0x44
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800153c:	e9cd 4b13 	strd	r4, fp, [sp, #76]	; 0x4c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001540:	f008 f8e0 	bl	8009704 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001544:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001548:	487e      	ldr	r0, [pc, #504]	; (8001744 <main+0x318>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800154a:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800154e:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001550:	9312      	str	r3, [sp, #72]	; 0x48
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001552:	9413      	str	r4, [sp, #76]	; 0x4c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001554:	f008 f8d6 	bl	8009704 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8001558:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800155a:	487a      	ldr	r0, [pc, #488]	; (8001744 <main+0x318>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 800155c:	9311      	str	r3, [sp, #68]	; 0x44
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800155e:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001560:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001562:	f04f 0904 	mov.w	r9, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001566:	e9cd 6412 	strd	r6, r4, [sp, #72]	; 0x48
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800156a:	9414      	str	r4, [sp, #80]	; 0x50
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800156c:	f008 f8ca 	bl	8009704 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001570:	4875      	ldr	r0, [pc, #468]	; (8001748 <main+0x31c>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001572:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001576:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001578:	e9cd 6412 	strd	r6, r4, [sp, #72]	; 0x48
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800157c:	9714      	str	r7, [sp, #80]	; 0x50
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800157e:	f008 f8c1 	bl	8009704 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8001582:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001584:	4871      	ldr	r0, [pc, #452]	; (800174c <main+0x320>)
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8001586:	9311      	str	r3, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001588:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 800158a:	f04f 0a10 	mov.w	sl, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800158e:	e9cd 6412 	strd	r6, r4, [sp, #72]	; 0x48
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001592:	9414      	str	r4, [sp, #80]	; 0x50
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001594:	f008 f8b6 	bl	8009704 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001598:	486b      	ldr	r0, [pc, #428]	; (8001748 <main+0x31c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800159a:	9414      	str	r4, [sp, #80]	; 0x50
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 800159c:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800159e:	e9cd 6412 	strd	r6, r4, [sp, #72]	; 0x48
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 80015a2:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015a6:	f008 f8ad 	bl	8009704 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015aa:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015ae:	4868      	ldr	r0, [pc, #416]	; (8001750 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015b0:	9311      	str	r3, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015b2:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015b4:	e9cd 6412 	strd	r6, r4, [sp, #72]	; 0x48
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015b8:	9714      	str	r7, [sp, #80]	; 0x50
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015ba:	f008 f8a3 	bl	8009704 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80015be:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015c2:	4862      	ldr	r0, [pc, #392]	; (800174c <main+0x320>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80015c4:	9311      	str	r3, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015c6:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 80015c8:	230f      	movs	r3, #15
 80015ca:	9315      	str	r3, [sp, #84]	; 0x54
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015cc:	e9cd 7412 	strd	r7, r4, [sp, #72]	; 0x48
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015d0:	9414      	str	r4, [sp, #80]	; 0x50
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015d2:	f008 f897 	bl	8009704 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 80015d6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 80015da:	485e      	ldr	r0, [pc, #376]	; (8001754 <main+0x328>)
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 80015dc:	9311      	str	r3, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 80015de:	a911      	add	r1, sp, #68	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015e0:	e9cd 6412 	strd	r6, r4, [sp, #72]	; 0x48
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015e4:	9414      	str	r4, [sp, #80]	; 0x50
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 80015e6:	f008 f88d 	bl	8009704 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 80015ea:	4622      	mov	r2, r4
 80015ec:	2105      	movs	r1, #5
 80015ee:	2009      	movs	r0, #9
 80015f0:	f007 fe20 	bl	8009234 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 80015f4:	2009      	movs	r0, #9
 80015f6:	f007 fe5b 	bl	80092b0 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_DMA1_CLK_ENABLE();
 80015fa:	9401      	str	r4, [sp, #4]
 80015fc:	6b2a      	ldr	r2, [r5, #48]	; 0x30
 80015fe:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8001602:	632a      	str	r2, [r5, #48]	; 0x30
 8001604:	6b2a      	ldr	r2, [r5, #48]	; 0x30
  hi2c3.Instance = I2C3;
 8001606:	4d54      	ldr	r5, [pc, #336]	; (8001758 <main+0x32c>)
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001608:	f402 1200 	and.w	r2, r2, #2097152	; 0x200000
 800160c:	9201      	str	r2, [sp, #4]
  HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 5, 0);
 800160e:	2105      	movs	r1, #5
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001610:	9a01      	ldr	r2, [sp, #4]
  HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 5, 0);
 8001612:	200c      	movs	r0, #12
 8001614:	4622      	mov	r2, r4
 8001616:	f007 fe0d 	bl	8009234 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 800161a:	200c      	movs	r0, #12
 800161c:	f007 fe48 	bl	80092b0 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8001620:	484e      	ldr	r0, [pc, #312]	; (800175c <main+0x330>)
 8001622:	4a4f      	ldr	r2, [pc, #316]	; (8001760 <main+0x334>)
 8001624:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001626:	f007 fe51 	bl	80092cc <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 800162a:	494e      	ldr	r1, [pc, #312]	; (8001764 <main+0x338>)
 800162c:	4a4e      	ldr	r2, [pc, #312]	; (8001768 <main+0x33c>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800162e:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8001630:	e9c5 1200 	strd	r1, r2, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001634:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8001638:	612a      	str	r2, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 800163a:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 800163e:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001642:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001646:	f008 fc07 	bl	8009e58 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800164a:	4651      	mov	r1, sl
 800164c:	4628      	mov	r0, r5
 800164e:	f009 fdcf 	bl	800b1f0 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001652:	4621      	mov	r1, r4
 8001654:	4628      	mov	r0, r5
 8001656:	f009 fdeb 	bl	800b230 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800165a:	f8df c120 	ldr.w	ip, [pc, #288]	; 800177c <main+0x350>
  hspi5.Instance = SPI5;
 800165e:	4843      	ldr	r0, [pc, #268]	; (800176c <main+0x340>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001660:	4d43      	ldr	r5, [pc, #268]	; (8001770 <main+0x344>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001662:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001664:	f44f 7282 	mov.w	r2, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001668:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800166c:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001670:	2218      	movs	r2, #24
 8001672:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001676:	220a      	movs	r2, #10
 8001678:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800167a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800167e:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001682:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001686:	f00a fcc5 	bl	800c014 <HAL_SPI_Init>
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800168a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800168e:	62ab      	str	r3, [r5, #40]	; 0x28
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001690:	2307      	movs	r3, #7
 8001692:	9312      	str	r3, [sp, #72]	; 0x48
  SdramTiming.RowCycleDelay = 7;
 8001694:	9314      	str	r3, [sp, #80]	; 0x50
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001696:	4b37      	ldr	r3, [pc, #220]	; (8001774 <main+0x348>)
 8001698:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800169a:	2040      	movs	r0, #64	; 0x40
 800169c:	f44f 73c0 	mov.w	r3, #384	; 0x180
 80016a0:	e9c5 0305 	strd	r0, r3, [r5, #20]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016a4:	a911      	add	r1, sp, #68	; 0x44
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016a6:	f44f 6300 	mov.w	r3, #2048	; 0x800
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016aa:	4628      	mov	r0, r5
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016ac:	622b      	str	r3, [r5, #32]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016ae:	e9c5 9a03 	strd	r9, sl, [r5, #12]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80016b2:	e9c5 6401 	strd	r6, r4, [r5, #4]
  SdramTiming.RPDelay = 2;
 80016b6:	e9cd b715 	strd	fp, r7, [sp, #84]	; 0x54
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80016ba:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80016bc:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 80016be:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
  SdramTiming.LoadToActiveDelay = 2;
 80016c2:	9711      	str	r7, [sp, #68]	; 0x44
  SdramTiming.RCDDelay = 2;
 80016c4:	9717      	str	r7, [sp, #92]	; 0x5c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016c6:	f00a fbb3 	bl	800be30 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016ca:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016ce:	a90d      	add	r1, sp, #52	; 0x34
 80016d0:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016d2:	e9cd 680d 	strd	r6, r8, [sp, #52]	; 0x34
  Command->ModeRegisterDefinition  = 0;
 80016d6:	e9cd 640f 	strd	r6, r4, [sp, #60]	; 0x3c
 __IO uint32_t tmpmrd =0;
 80016da:	940a      	str	r4, [sp, #40]	; 0x28
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016dc:	f00a fbca 	bl	800be74 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80016e0:	4630      	mov	r0, r6
 80016e2:	f007 fd83 	bl	80091ec <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016e6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016ea:	a90d      	add	r1, sp, #52	; 0x34
 80016ec:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016ee:	e9cd 780d 	strd	r7, r8, [sp, #52]	; 0x34
  Command->ModeRegisterDefinition  = 0;
 80016f2:	e9cd 640f 	strd	r6, r4, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016f6:	f00a fbbd 	bl	800be74 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016fa:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016fe:	a90d      	add	r1, sp, #52	; 0x34
 8001700:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001702:	e9cd b80d 	strd	fp, r8, [sp, #52]	; 0x34
  Command->ModeRegisterDefinition  = 0;
 8001706:	e9cd 940f 	strd	r9, r4, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800170a:	f00a fbb3 	bl	800be74 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 800170e:	f44f 730c 	mov.w	r3, #560	; 0x230
 8001712:	930a      	str	r3, [sp, #40]	; 0x28
  Command->ModeRegisterDefinition  = tmpmrd;
 8001714:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001716:	9310      	str	r3, [sp, #64]	; 0x40
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001718:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800171c:	a90d      	add	r1, sp, #52	; 0x34
 800171e:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001720:	e9cd 980d 	strd	r9, r8, [sp, #52]	; 0x34
  Command->AutoRefreshNumber       = 1;
 8001724:	960f      	str	r6, [sp, #60]	; 0x3c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001726:	f00a fba5 	bl	800be74 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 800172a:	4628      	mov	r0, r5
 800172c:	f240 516a 	movw	r1, #1386	; 0x56a
 8001730:	f00a fbbe 	bl	800beb0 <HAL_SDRAM_ProgramRefreshRate>
  hltdc.Instance = LTDC;
 8001734:	4d10      	ldr	r5, [pc, #64]	; (8001778 <main+0x34c>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001736:	2234      	movs	r2, #52	; 0x34
 8001738:	4621      	mov	r1, r4
 800173a:	a811      	add	r0, sp, #68	; 0x44
 800173c:	e020      	b.n	8001780 <main+0x354>
 800173e:	bf00      	nop
 8001740:	40023800 	.word	0x40023800
 8001744:	40021000 	.word	0x40021000
 8001748:	40020800 	.word	0x40020800
 800174c:	40020000 	.word	0x40020000
 8001750:	40020c00 	.word	0x40020c00
 8001754:	40021800 	.word	0x40021800
 8001758:	2000198c 	.word	0x2000198c
 800175c:	200018e4 	.word	0x200018e4
 8001760:	40023000 	.word	0x40023000
 8001764:	40005c00 	.word	0x40005c00
 8001768:	000186a0 	.word	0x000186a0
 800176c:	20001abc 	.word	0x20001abc
 8001770:	20001a88 	.word	0x20001a88
 8001774:	a0000140 	.word	0xa0000140
 8001778:	200019e0 	.word	0x200019e0
 800177c:	40015000 	.word	0x40015000
 8001780:	f028 ff0d 	bl	802a59e <memset>
  hltdc.Instance = LTDC;
 8001784:	4b7c      	ldr	r3, [pc, #496]	; (8001978 <main+0x54c>)
 8001786:	602b      	str	r3, [r5, #0]
  hltdc.Init.AccumulatedHBP = 29;
 8001788:	231d      	movs	r3, #29
 800178a:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 800178c:	f240 180d 	movw	r8, #269	; 0x10d
 8001790:	f240 1343 	movw	r3, #323	; 0x143
 8001794:	e9c5 8309 	strd	r8, r3, [r5, #36]	; 0x24
  hltdc.Init.AccumulatedVBP = 3;
 8001798:	f8c5 b020 	str.w	fp, [r5, #32]
  hltdc.Init.TotalHeigh = 327;
 800179c:	f240 1347 	movw	r3, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 80017a0:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HorizontalSync = 9;
 80017a2:	f04f 0909 	mov.w	r9, #9
  hltdc.Init.TotalHeigh = 327;
 80017a6:	f240 1b17 	movw	fp, #279	; 0x117
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80017aa:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 80017ac:	e9c5 b30b 	strd	fp, r3, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 80017b0:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80017b4:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.VerticalSync = 1;
 80017b8:	61ae      	str	r6, [r5, #24]
  hltdc.Init.Backcolor.Red = 0;
 80017ba:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.HorizontalSync = 9;
 80017be:	f8c5 9014 	str.w	r9, [r5, #20]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80017c2:	f009 fd59 	bl	800b278 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 80017c6:	23f0      	movs	r3, #240	; 0xf0
 80017c8:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageWidth = 240;
 80017ca:	931b      	str	r3, [sp, #108]	; 0x6c
  pLayerCfg.WindowY1 = 320;
 80017cc:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80017d0:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.ImageHeight = 320;
 80017d2:	931c      	str	r3, [sp, #112]	; 0x70
  pLayerCfg.Alpha = 255;
 80017d4:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017d6:	f44f 6c80 	mov.w	ip, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017da:	4622      	mov	r2, r4
 80017dc:	a911      	add	r1, sp, #68	; 0x44
 80017de:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 80017e0:	9316      	str	r3, [sp, #88]	; 0x58
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017e2:	2305      	movs	r3, #5
 80017e4:	e9cd c318 	strd	ip, r3, [sp, #96]	; 0x60
  LcdDrv = &ili9341_drv;
 80017e8:	4d64      	ldr	r5, [pc, #400]	; (800197c <main+0x550>)
  pLayerCfg.WindowX0 = 0;
 80017ea:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.WindowY0 = 0;
 80017ec:	9413      	str	r4, [sp, #76]	; 0x4c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80017ee:	9715      	str	r7, [sp, #84]	; 0x54
  pLayerCfg.Alpha0 = 0;
 80017f0:	9417      	str	r4, [sp, #92]	; 0x5c
  pLayerCfg.FBStartAdress = 0;
 80017f2:	941a      	str	r4, [sp, #104]	; 0x68
  pLayerCfg.Backcolor.Blue = 0;
 80017f4:	f8ad 4074 	strh.w	r4, [sp, #116]	; 0x74
  pLayerCfg.Backcolor.Red = 0;
 80017f8:	f88d 4076 	strb.w	r4, [sp, #118]	; 0x76
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017fc:	f009 fe12 	bl	800b424 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001800:	4b5f      	ldr	r3, [pc, #380]	; (8001980 <main+0x554>)
 8001802:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001804:	681b      	ldr	r3, [r3, #0]
  htim1.Instance = TIM1;
 8001806:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 80019c4 <main+0x598>
  LcdDrv->Init();
 800180a:	4798      	blx	r3
  LcdDrv->DisplayOff();
 800180c:	682b      	ldr	r3, [r5, #0]
  htim3.Instance = TIM3;
 800180e:	4d5d      	ldr	r5, [pc, #372]	; (8001984 <main+0x558>)
  LcdDrv->DisplayOff();
 8001810:	68db      	ldr	r3, [r3, #12]
 8001812:	4798      	blx	r3
  htim1.Init.Period = 65535;
 8001814:	f64f 7bff 	movw	fp, #65535	; 0xffff
  htim1.Instance = TIM1;
 8001818:	4b5b      	ldr	r3, [pc, #364]	; (8001988 <main+0x55c>)
 800181a:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800181e:	4640      	mov	r0, r8
  htim1.Init.Period = 65535;
 8001820:	f8c8 b00c 	str.w	fp, [r8, #12]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001824:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim1.Init.RepetitionCounter = 0;
 8001828:	e9c8 4404 	strd	r4, r4, [r8, #16]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800182c:	f8c8 4018 	str.w	r4, [r8, #24]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001830:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001834:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001838:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 800183c:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800183e:	f00a ffd9 	bl	800c7f4 <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8001842:	a911      	add	r1, sp, #68	; 0x44
 8001844:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8001846:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 800184a:	f00b f94d 	bl	800cae8 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800184e:	a90d      	add	r1, sp, #52	; 0x34
 8001850:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001852:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001856:	f00b fa85 	bl	800cd64 <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 800185a:	4b4c      	ldr	r3, [pc, #304]	; (800198c <main+0x560>)
 800185c:	602b      	str	r3, [r5, #0]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800185e:	4628      	mov	r0, r5
  htim3.Init.Period = 65535;
 8001860:	f8c5 b00c 	str.w	fp, [r5, #12]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001864:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001868:	612c      	str	r4, [r5, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800186a:	61ac      	str	r4, [r5, #24]
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800186c:	f44f 5b80 	mov.w	fp, #4096	; 0x1000
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001870:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
 8001874:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001878:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 800187c:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 8001880:	9415      	str	r4, [sp, #84]	; 0x54
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001882:	940b      	str	r4, [sp, #44]	; 0x2c
 8001884:	940c      	str	r4, [sp, #48]	; 0x30
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001886:	f00a ffb5 	bl	800c7f4 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 800188a:	a90d      	add	r1, sp, #52	; 0x34
 800188c:	4628      	mov	r0, r5
  hdma2d.Instance = DMA2D;
 800188e:	f8df 8138 	ldr.w	r8, [pc, #312]	; 80019c8 <main+0x59c>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001892:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001896:	f00b f877 	bl	800c988 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 800189a:	a911      	add	r1, sp, #68	; 0x44
 800189c:	4628      	mov	r0, r5
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 800189e:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80018a2:	f00b f921 	bl	800cae8 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018a6:	a90b      	add	r1, sp, #44	; 0x2c
 80018a8:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80018aa:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018ae:	f00b fa59 	bl	800cd64 <HAL_TIMEx_MasterConfigSynchronization>
  hdma2d.Instance = DMA2D;
 80018b2:	4b37      	ldr	r3, [pc, #220]	; (8001990 <main+0x564>)
  htim2.Instance = TIM2;
 80018b4:	4d37      	ldr	r5, [pc, #220]	; (8001994 <main+0x568>)
  hdma2d.Instance = DMA2D;
 80018b6:	f8c8 3000 	str.w	r3, [r8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 80018ba:	e9c8 440a 	strd	r4, r4, [r8, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80018be:	e9c8 440c 	strd	r4, r4, [r8, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80018c2:	4640      	mov	r0, r8
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 80018c4:	e9c8 4401 	strd	r4, r4, [r8, #4]
  hdma2d.Init.OutputOffset = 0;
 80018c8:	f8c8 400c 	str.w	r4, [r8, #12]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80018cc:	f007 fe96 	bl	80095fc <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80018d0:	4631      	mov	r1, r6
 80018d2:	4640      	mov	r0, r8
 80018d4:	f007 fec0 	bl	8009658 <HAL_DMA2D_ConfigLayer>
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80018d8:	2380      	movs	r3, #128	; 0x80
  htim2.Init.Prescaler = 13124;
 80018da:	f04f 4e80 	mov.w	lr, #1073741824	; 0x40000000
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80018de:	61ab      	str	r3, [r5, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80018e0:	4628      	mov	r0, r5
  htim2.Init.Prescaler = 13124;
 80018e2:	f243 3344 	movw	r3, #13124	; 0x3344
 80018e6:	e9c5 e300 	strd	lr, r3, [r5]
  htim2.Init.Period = 9;
 80018ea:	f8c5 900c 	str.w	r9, [r5, #12]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80018ee:	60ac      	str	r4, [r5, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80018f0:	612c      	str	r4, [r5, #16]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80018f2:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 80018f6:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80018fa:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80018fe:	f00a ff79 	bl	800c7f4 <HAL_TIM_Base_Init>
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001902:	a911      	add	r1, sp, #68	; 0x44
 8001904:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001906:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800190a:	f00b f83d 	bl	800c988 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800190e:	a90d      	add	r1, sp, #52	; 0x34
 8001910:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001912:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001916:	f00b fa25 	bl	800cd64 <HAL_TIMEx_MasterConfigSynchronization>
  HAL_TIM_Base_Start_IT(&htim2);
 800191a:	4628      	mov	r0, r5
 800191c:	f00a fff8 	bl	800c910 <HAL_TIM_Base_Start_IT>
  MX_TouchGFX_Init();
 8001920:	f7fe fec0 	bl	80006a4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001924:	f7fe febc 	bl	80006a0 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8001928:	f7ff fcec 	bl	8001304 <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 800192c:	f000 f950 	bl	8001bd0 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 8001930:	f000 f982 	bl	8001c38 <MEAS_timer_init>
  osKernelInitialize();
 8001934:	f00b fb28 	bl	800cf88 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001938:	4a17      	ldr	r2, [pc, #92]	; (8001998 <main+0x56c>)
 800193a:	4639      	mov	r1, r7
 800193c:	4650      	mov	r0, sl
 800193e:	f00b fc5d 	bl	800d1fc <osMessageQueueNew>
 8001942:	4b16      	ldr	r3, [pc, #88]	; (800199c <main+0x570>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001944:	4a16      	ldr	r2, [pc, #88]	; (80019a0 <main+0x574>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001946:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001948:	4621      	mov	r1, r4
 800194a:	4816      	ldr	r0, [pc, #88]	; (80019a4 <main+0x578>)
 800194c:	f00b fb48 	bl	800cfe0 <osThreadNew>
 8001950:	4b15      	ldr	r3, [pc, #84]	; (80019a8 <main+0x57c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001952:	4a16      	ldr	r2, [pc, #88]	; (80019ac <main+0x580>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001954:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001956:	4621      	mov	r1, r4
 8001958:	4815      	ldr	r0, [pc, #84]	; (80019b0 <main+0x584>)
 800195a:	f00b fb41 	bl	800cfe0 <osThreadNew>
 800195e:	4b15      	ldr	r3, [pc, #84]	; (80019b4 <main+0x588>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001960:	4a15      	ldr	r2, [pc, #84]	; (80019b8 <main+0x58c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001962:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001964:	4621      	mov	r1, r4
 8001966:	4815      	ldr	r0, [pc, #84]	; (80019bc <main+0x590>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001968:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800196a:	f00b fb39 	bl	800cfe0 <osThreadNew>
 800196e:	4b14      	ldr	r3, [pc, #80]	; (80019c0 <main+0x594>)
 8001970:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001972:	f00b fb1b 	bl	800cfac <osKernelStart>
  while (1)
 8001976:	e7fe      	b.n	8001976 <main+0x54a>
 8001978:	40016800 	.word	0x40016800
 800197c:	200018d4 	.word	0x200018d4
 8001980:	20000018 	.word	0x20000018
 8001984:	20001ba4 	.word	0x20001ba4
 8001988:	40010000 	.word	0x40010000
 800198c:	40000400 	.word	0x40000400
 8001990:	4002b000 	.word	0x4002b000
 8001994:	20001b5c 	.word	0x20001b5c
 8001998:	0802ba10 	.word	0x0802ba10
 800199c:	200018d8 	.word	0x200018d8
 80019a0:	0802ba4c 	.word	0x0802ba4c
 80019a4:	08001299 	.word	0x08001299
 80019a8:	200018e0 	.word	0x200018e0
 80019ac:	0802b9ec 	.word	0x0802b9ec
 80019b0:	080006b5 	.word	0x080006b5
 80019b4:	200018d0 	.word	0x200018d0
 80019b8:	0802ba28 	.word	0x0802ba28
 80019bc:	080012a5 	.word	0x080012a5
 80019c0:	200018dc 	.word	0x200018dc
 80019c4:	20001b14 	.word	0x20001b14
 80019c8:	200018ec 	.word	0x200018ec

080019cc <IOE_Init>:
 80019cc:	4770      	bx	lr
 80019ce:	bf00      	nop

080019d0 <IOE_ITConfig>:
 80019d0:	4770      	bx	lr
 80019d2:	bf00      	nop

080019d4 <IOE_Write>:
{
 80019d4:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80019d6:	4c09      	ldr	r4, [pc, #36]	; (80019fc <IOE_Write+0x28>)
{
 80019d8:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80019da:	6824      	ldr	r4, [r4, #0]
 80019dc:	9402      	str	r4, [sp, #8]
{
 80019de:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80019e0:	2301      	movs	r3, #1
 80019e2:	f88d 4017 	strb.w	r4, [sp, #23]
 80019e6:	f10d 0417 	add.w	r4, sp, #23
 80019ea:	460a      	mov	r2, r1
 80019ec:	9301      	str	r3, [sp, #4]
 80019ee:	4601      	mov	r1, r0
 80019f0:	9400      	str	r4, [sp, #0]
 80019f2:	4803      	ldr	r0, [pc, #12]	; (8001a00 <IOE_Write+0x2c>)
 80019f4:	f008 faf8 	bl	8009fe8 <HAL_I2C_Mem_Write>
}
 80019f8:	b006      	add	sp, #24
 80019fa:	bd10      	pop	{r4, pc}
 80019fc:	2000000c 	.word	0x2000000c
 8001a00:	2000198c 	.word	0x2000198c

08001a04 <IOE_Read>:
{
 8001a04:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001a06:	4b0b      	ldr	r3, [pc, #44]	; (8001a34 <IOE_Read+0x30>)
{
 8001a08:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001a0a:	681b      	ldr	r3, [r3, #0]
 8001a0c:	9302      	str	r3, [sp, #8]
{
 8001a0e:	4684      	mov	ip, r0
 8001a10:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001a12:	2301      	movs	r3, #1
 8001a14:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 8001a18:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001a1a:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8001a1e:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001a22:	4661      	mov	r1, ip
 8001a24:	4804      	ldr	r0, [pc, #16]	; (8001a38 <IOE_Read+0x34>)
 8001a26:	f008 fbd1 	bl	800a1cc <HAL_I2C_Mem_Read>
}
 8001a2a:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001a2e:	b007      	add	sp, #28
 8001a30:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a34:	2000000c 	.word	0x2000000c
 8001a38:	2000198c 	.word	0x2000198c

08001a3c <IOE_ReadMultiple>:
{
 8001a3c:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001a3e:	4c09      	ldr	r4, [pc, #36]	; (8001a64 <IOE_ReadMultiple+0x28>)
{
 8001a40:	b084      	sub	sp, #16
 8001a42:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001a44:	6820      	ldr	r0, [r4, #0]
 8001a46:	9002      	str	r0, [sp, #8]
 8001a48:	e9cd 2300 	strd	r2, r3, [sp]
 8001a4c:	4806      	ldr	r0, [pc, #24]	; (8001a68 <IOE_ReadMultiple+0x2c>)
 8001a4e:	460a      	mov	r2, r1
 8001a50:	2301      	movs	r3, #1
 8001a52:	4661      	mov	r1, ip
 8001a54:	f008 fbba 	bl	800a1cc <HAL_I2C_Mem_Read>
}
 8001a58:	3800      	subs	r0, #0
 8001a5a:	bf18      	it	ne
 8001a5c:	2001      	movne	r0, #1
 8001a5e:	b004      	add	sp, #16
 8001a60:	bd10      	pop	{r4, pc}
 8001a62:	bf00      	nop
 8001a64:	2000000c 	.word	0x2000000c
 8001a68:	2000198c 	.word	0x2000198c

08001a6c <IOE_Delay>:
 8001a6c:	f007 bbbe 	b.w	80091ec <HAL_Delay>

08001a70 <LCD_IO_Init>:
{
 8001a70:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a72:	4806      	ldr	r0, [pc, #24]	; (8001a8c <LCD_IO_Init+0x1c>)
 8001a74:	2200      	movs	r2, #0
 8001a76:	2104      	movs	r1, #4
 8001a78:	f007 ff88 	bl	800998c <HAL_GPIO_WritePin>
}
 8001a7c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a80:	4802      	ldr	r0, [pc, #8]	; (8001a8c <LCD_IO_Init+0x1c>)
 8001a82:	2201      	movs	r2, #1
 8001a84:	2104      	movs	r1, #4
 8001a86:	f007 bf81 	b.w	800998c <HAL_GPIO_WritePin>
 8001a8a:	bf00      	nop
 8001a8c:	40020800 	.word	0x40020800

08001a90 <LCD_IO_WriteData>:
{
 8001a90:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a92:	4d10      	ldr	r5, [pc, #64]	; (8001ad4 <LCD_IO_WriteData+0x44>)
{
 8001a94:	b083      	sub	sp, #12
 8001a96:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a98:	2201      	movs	r2, #1
 8001a9a:	480f      	ldr	r0, [pc, #60]	; (8001ad8 <LCD_IO_WriteData+0x48>)
 8001a9c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001aa0:	f007 ff74 	bl	800998c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001aa4:	4628      	mov	r0, r5
 8001aa6:	2200      	movs	r2, #0
 8001aa8:	2104      	movs	r1, #4
 8001aaa:	f007 ff6f 	bl	800998c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001aae:	4b0b      	ldr	r3, [pc, #44]	; (8001adc <LCD_IO_WriteData+0x4c>)
 8001ab0:	480b      	ldr	r0, [pc, #44]	; (8001ae0 <LCD_IO_WriteData+0x50>)
 8001ab2:	681b      	ldr	r3, [r3, #0]
 8001ab4:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001ab8:	f10d 0106 	add.w	r1, sp, #6
 8001abc:	2201      	movs	r2, #1
 8001abe:	f00a fb0b 	bl	800c0d8 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ac2:	2201      	movs	r2, #1
 8001ac4:	2104      	movs	r1, #4
 8001ac6:	4628      	mov	r0, r5
}
 8001ac8:	b003      	add	sp, #12
 8001aca:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ace:	f007 bf5d 	b.w	800998c <HAL_GPIO_WritePin>
 8001ad2:	bf00      	nop
 8001ad4:	40020800 	.word	0x40020800
 8001ad8:	40020c00 	.word	0x40020c00
 8001adc:	20000010 	.word	0x20000010
 8001ae0:	20001abc 	.word	0x20001abc

08001ae4 <LCD_IO_WriteReg>:
{
 8001ae4:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ae6:	4d10      	ldr	r5, [pc, #64]	; (8001b28 <LCD_IO_WriteReg+0x44>)
{
 8001ae8:	b083      	sub	sp, #12
 8001aea:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001aec:	2200      	movs	r2, #0
 8001aee:	480f      	ldr	r0, [pc, #60]	; (8001b2c <LCD_IO_WriteReg+0x48>)
 8001af0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001af4:	f007 ff4a 	bl	800998c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001af8:	4628      	mov	r0, r5
 8001afa:	2200      	movs	r2, #0
 8001afc:	2104      	movs	r1, #4
 8001afe:	f007 ff45 	bl	800998c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001b02:	4b0b      	ldr	r3, [pc, #44]	; (8001b30 <LCD_IO_WriteReg+0x4c>)
 8001b04:	480b      	ldr	r0, [pc, #44]	; (8001b34 <LCD_IO_WriteReg+0x50>)
 8001b06:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001b08:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001b0c:	f10d 0106 	add.w	r1, sp, #6
 8001b10:	2201      	movs	r2, #1
 8001b12:	f00a fae1 	bl	800c0d8 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001b16:	2201      	movs	r2, #1
 8001b18:	2104      	movs	r1, #4
 8001b1a:	4628      	mov	r0, r5
}
 8001b1c:	b003      	add	sp, #12
 8001b1e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001b22:	f007 bf33 	b.w	800998c <HAL_GPIO_WritePin>
 8001b26:	bf00      	nop
 8001b28:	40020800 	.word	0x40020800
 8001b2c:	40020c00 	.word	0x40020c00
 8001b30:	20000010 	.word	0x20000010
 8001b34:	20001abc 	.word	0x20001abc

08001b38 <LCD_IO_ReadData>:
{
 8001b38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b3c:	4e19      	ldr	r6, [pc, #100]	; (8001ba4 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001b3e:	4f1a      	ldr	r7, [pc, #104]	; (8001ba8 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001b40:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001bac <LCD_IO_ReadData+0x74>
 8001b44:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001bb0 <LCD_IO_ReadData+0x78>
{
 8001b48:	b083      	sub	sp, #12
 8001b4a:	460c      	mov	r4, r1
 8001b4c:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b4e:	2200      	movs	r2, #0
 8001b50:	4630      	mov	r0, r6
 8001b52:	2104      	movs	r1, #4
 8001b54:	f007 ff1a 	bl	800998c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001b58:	4638      	mov	r0, r7
 8001b5a:	2200      	movs	r2, #0
 8001b5c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001b60:	f007 ff14 	bl	800998c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001b64:	f8d9 3000 	ldr.w	r3, [r9]
 8001b68:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001b6c:	a901      	add	r1, sp, #4
 8001b6e:	2201      	movs	r2, #1
 8001b70:	4640      	mov	r0, r8
 8001b72:	f00a fab1 	bl	800c0d8 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001b76:	f8d9 3000 	ldr.w	r3, [r9]
 8001b7a:	4622      	mov	r2, r4
 8001b7c:	a901      	add	r1, sp, #4
 8001b7e:	4640      	mov	r0, r8
 8001b80:	f00a fd52 	bl	800c628 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b84:	4638      	mov	r0, r7
 8001b86:	2201      	movs	r2, #1
 8001b88:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001b8c:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b8e:	f007 fefd 	bl	800998c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001b92:	4630      	mov	r0, r6
 8001b94:	2201      	movs	r2, #1
 8001b96:	2104      	movs	r1, #4
 8001b98:	f007 fef8 	bl	800998c <HAL_GPIO_WritePin>
}
 8001b9c:	4620      	mov	r0, r4
 8001b9e:	b003      	add	sp, #12
 8001ba0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001ba4:	40020800 	.word	0x40020800
 8001ba8:	40020c00 	.word	0x40020c00
 8001bac:	20000010 	.word	0x20000010
 8001bb0:	20001abc 	.word	0x20001abc

08001bb4 <LCD_Delay>:
  HAL_Delay(Delay);
 8001bb4:	f007 bb1a 	b.w	80091ec <HAL_Delay>

08001bb8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001bb8:	4b03      	ldr	r3, [pc, #12]	; (8001bc8 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001bba:	6802      	ldr	r2, [r0, #0]
 8001bbc:	429a      	cmp	r2, r3
 8001bbe:	d000      	beq.n	8001bc2 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001bc0:	4770      	bx	lr
    HAL_IncTick();
 8001bc2:	f007 bb01 	b.w	80091c8 <HAL_IncTick>
 8001bc6:	bf00      	nop
 8001bc8:	40001000 	.word	0x40001000

08001bcc <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001bcc:	4770      	bx	lr
 8001bce:	bf00      	nop

08001bd0 <MEAS_GPIO_analog_init>:
 * - ADC3_IN4 = GPIO PF6 (Pad left)
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void) {
 8001bd0:	b410      	push	{r4}
 8001bd2:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001bd4:	4b15      	ldr	r3, [pc, #84]	; (8001c2c <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001bd6:	4916      	ldr	r1, [pc, #88]	; (8001c30 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001bd8:	2400      	movs	r4, #0
 8001bda:	9400      	str	r4, [sp, #0]
 8001bdc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bde:	f042 0220 	orr.w	r2, r2, #32
 8001be2:	631a      	str	r2, [r3, #48]	; 0x30
 8001be4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001be6:	f002 0220 	and.w	r2, r2, #32
 8001bea:	9200      	str	r2, [sp, #0]
 8001bec:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001bee:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001bf0:	4a10      	ldr	r2, [pc, #64]	; (8001c34 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001bf2:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8001bf6:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001bf8:	6808      	ldr	r0, [r1, #0]
 8001bfa:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001bfe:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001c00:	9401      	str	r4, [sp, #4]
 8001c02:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001c04:	f041 0104 	orr.w	r1, r1, #4
 8001c08:	6319      	str	r1, [r3, #48]	; 0x30
 8001c0a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c0c:	f003 0304 	and.w	r3, r3, #4
 8001c10:	9301      	str	r3, [sp, #4]
 8001c12:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001c14:	6813      	ldr	r3, [r2, #0]
 8001c16:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001c1a:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001c1c:	6813      	ldr	r3, [r2, #0]
 8001c1e:	f043 030c 	orr.w	r3, r3, #12
 8001c22:	6013      	str	r3, [r2, #0]
}
 8001c24:	b003      	add	sp, #12
 8001c26:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001c2a:	4770      	bx	lr
 8001c2c:	40023800 	.word	0x40023800
 8001c30:	40021400 	.word	0x40021400
 8001c34:	40020800 	.word	0x40020800

08001c38 <MEAS_timer_init>:
/** ***************************************************************************
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void) {
 8001c38:	b082      	sub	sp, #8
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001c3a:	4a0c      	ldr	r2, [pc, #48]	; (8001c6c <MEAS_timer_init+0x34>)
 8001c3c:	2300      	movs	r3, #0
 8001c3e:	9301      	str	r3, [sp, #4]
 8001c40:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001c42:	f041 0101 	orr.w	r1, r1, #1
 8001c46:	6411      	str	r1, [r2, #64]	; 0x40
 8001c48:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001c4a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001c4e:	f002 0201 	and.w	r2, r2, #1
 8001c52:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001c54:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001c58:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001c5a:	9801      	ldr	r0, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001c5c:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001c5e:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001c60:	685a      	ldr	r2, [r3, #4]
 8001c62:	f042 0220 	orr.w	r2, r2, #32
 8001c66:	605a      	str	r2, [r3, #4]
}
 8001c68:	b002      	add	sp, #8
 8001c6a:	4770      	bx	lr
 8001c6c:	40023800 	.word	0x40023800

08001c70 <MEAS_ADC3_scan_init>:
 * @n As each conversion triggers the DMA, the number of transfers is doubled.
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void) {
 8001c70:	b410      	push	{r4}
 8001c72:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001c74:	4934      	ldr	r1, [pc, #208]	; (8001d48 <MEAS_ADC3_scan_init+0xd8>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001c76:	4a35      	ldr	r2, [pc, #212]	; (8001d4c <MEAS_ADC3_scan_init+0xdc>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001c78:	2400      	movs	r4, #0
 8001c7a:	9400      	str	r4, [sp, #0]
 8001c7c:	6c4b      	ldr	r3, [r1, #68]	; 0x44
 8001c7e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001c82:	644b      	str	r3, [r1, #68]	; 0x44
 8001c84:	6c4b      	ldr	r3, [r1, #68]	; 0x44
 8001c86:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001c8a:	9300      	str	r3, [sp, #0]
 8001c8c:	9b00      	ldr	r3, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001c8e:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001c90:	4b2f      	ldr	r3, [pc, #188]	; (8001d50 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001c92:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 8001c96:	62d0      	str	r0, [r2, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8001c98:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001c9a:	f040 0004 	orr.w	r0, r0, #4
 8001c9e:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8001ca0:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001ca2:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 8001ca6:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8001ca8:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001caa:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8001cae:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8001cb0:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001cb2:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 8001cb6:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8001cb8:	6850      	ldr	r0, [r2, #4]
 8001cba:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001cbe:	6050      	str	r0, [r2, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8001cc0:	6890      	ldr	r0, [r2, #8]
 8001cc2:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001cc6:	6090      	str	r0, [r2, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8001cc8:	6890      	ldr	r0, [r2, #8]
 8001cca:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 8001cce:	6090      	str	r0, [r2, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8001cd0:	6890      	ldr	r0, [r2, #8]
 8001cd2:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001cd6:	6090      	str	r0, [r2, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001cd8:	9401      	str	r4, [sp, #4]
 8001cda:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 8001cdc:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8001ce0:	630a      	str	r2, [r1, #48]	; 0x30
 8001ce2:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 8001ce4:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8001ce8:	9201      	str	r2, [sp, #4]
 8001cea:	9a01      	ldr	r2, [sp, #4]
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001cec:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001cee:	f022 0201 	bic.w	r2, r2, #1
 8001cf2:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN){};  // Wait for DMA to finish
 8001cf4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001cf6:	07d2      	lsls	r2, r2, #31
 8001cf8:	d4fc      	bmi.n	8001cf4 <MEAS_ADC3_scan_init+0x84>
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001cfa:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    DMA2_Stream1->NDTR =
        INPUT_COUNT * ADC_NUMS;  // Number of data items to transfer
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001cfc:	4815      	ldr	r0, [pc, #84]	; (8001d54 <MEAS_ADC3_scan_init+0xe4>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001cfe:	4916      	ldr	r1, [pc, #88]	; (8001d58 <MEAS_ADC3_scan_init+0xe8>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001d00:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001d04:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001d06:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001d08:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001d0c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 8001d0e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001d10:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001d14:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001d16:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001d18:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001d1c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 8001d1e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001d20:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001d24:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001d26:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001d28:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001d2c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001d2e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR =
 8001d30:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001d34:	f042 0210 	orr.w	r2, r2, #16
 8001d38:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR =
 8001d3a:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001d3c:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001d3e:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001d40:	b003      	add	sp, #12
 8001d42:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001d46:	4770      	bx	lr
 8001d48:	40023800 	.word	0x40023800
 8001d4c:	40012200 	.word	0x40012200
 8001d50:	40026400 	.word	0x40026400
 8001d54:	4001224c 	.word	0x4001224c
 8001d58:	20001bec 	.word	0x20001bec

08001d5c <DMA2_Stream1_IRQHandler>:
 *
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
 8001d5c:	b508      	push	{r3, lr}
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4, GPIO_PIN_SET);
 8001d5e:	2201      	movs	r2, #1
 8001d60:	2110      	movs	r1, #16
 8001d62:	4825      	ldr	r0, [pc, #148]	; (8001df8 <DMA2_Stream1_IRQHandler+0x9c>)
 8001d64:	f007 fe12 	bl	800998c <HAL_GPIO_WritePin>
	static int debug = 0;
    debug++;
 8001d68:	4924      	ldr	r1, [pc, #144]	; (8001dfc <DMA2_Stream1_IRQHandler+0xa0>)
    //HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);

	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001d6a:	4b25      	ldr	r3, [pc, #148]	; (8001e00 <DMA2_Stream1_IRQHandler+0xa4>)
    debug++;
 8001d6c:	680a      	ldr	r2, [r1, #0]
 8001d6e:	3201      	adds	r2, #1
 8001d70:	600a      	str	r2, [r1, #0]
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001d72:	681a      	ldr	r2, [r3, #0]
 8001d74:	0511      	lsls	r1, r2, #20
 8001d76:	d406      	bmi.n	8001d86 <DMA2_Stream1_IRQHandler+0x2a>
        // copy data from DMA buffer to ADC_samples
        MEAS_ADC_reset();
        MEAS_data_ready = true;
    }
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4, GPIO_PIN_RESET);
}
 8001d78:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4, GPIO_PIN_RESET);
 8001d7c:	481e      	ldr	r0, [pc, #120]	; (8001df8 <DMA2_Stream1_IRQHandler+0x9c>)
 8001d7e:	2200      	movs	r2, #0
 8001d80:	2110      	movs	r1, #16
 8001d82:	f007 be03 	b.w	800998c <HAL_GPIO_WritePin>
 8001d86:	4a1f      	ldr	r2, [pc, #124]	; (8001e04 <DMA2_Stream1_IRQHandler+0xa8>)
 8001d88:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8001d8c:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8001d90:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001d94:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001d98:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8001d9c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001d9e:	f022 0201 	bic.w	r2, r2, #1
 8001da2:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001da4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001da6:	07d2      	lsls	r2, r2, #31
 8001da8:	d4fc      	bmi.n	8001da4 <DMA2_Stream1_IRQHandler+0x48>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001daa:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001dac:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001db0:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8001db4:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001db6:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001db8:	4913      	ldr	r1, [pc, #76]	; (8001e08 <DMA2_Stream1_IRQHandler+0xac>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001dba:	f023 0301 	bic.w	r3, r3, #1
 8001dbe:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001dc0:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001dc2:	4b12      	ldr	r3, [pc, #72]	; (8001e0c <DMA2_Stream1_IRQHandler+0xb0>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001dc4:	f020 0001 	bic.w	r0, r0, #1
 8001dc8:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8001dca:	6888      	ldr	r0, [r1, #8]
 8001dcc:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8001dd0:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001dd2:	6a59      	ldr	r1, [r3, #36]	; 0x24
        MEAS_data_ready = true;
 8001dd4:	480e      	ldr	r0, [pc, #56]	; (8001e10 <DMA2_Stream1_IRQHandler+0xb4>)
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001dd6:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8001dda:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8001ddc:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001dde:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8001de2:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001de4:	6813      	ldr	r3, [r2, #0]
        MEAS_data_ready = true;
 8001de6:	f04f 0c01 	mov.w	ip, #1
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001dea:	f023 0301 	bic.w	r3, r3, #1
 8001dee:	6013      	str	r3, [r2, #0]
        MEAS_data_ready = true;
 8001df0:	f880 c000 	strb.w	ip, [r0]
 8001df4:	e7c0      	b.n	8001d78 <DMA2_Stream1_IRQHandler+0x1c>
 8001df6:	bf00      	nop
 8001df8:	40020800 	.word	0x40020800
 8001dfc:	20001ff0 	.word	0x20001ff0
 8001e00:	40026400 	.word	0x40026400
 8001e04:	e000e100 	.word	0xe000e100
 8001e08:	40012200 	.word	0x40012200
 8001e0c:	40023800 	.word	0x40023800
 8001e10:	20001fec 	.word	0x20001fec

08001e14 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 8001e14:	b510      	push	{r4, lr}
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001e16:	4c18      	ldr	r4, [pc, #96]	; (8001e78 <MEAS_start_measure+0x64>)
        buffer[i] = 0;
 8001e18:	4818      	ldr	r0, [pc, #96]	; (8001e7c <MEAS_start_measure+0x68>)
 8001e1a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001e1e:	2100      	movs	r1, #0
 8001e20:	f028 fbbd 	bl	802a59e <memset>

	//works
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);

    //
	MEAS_ADC3_scan_init();
 8001e24:	f7ff ff24 	bl	8001c70 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001e28:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8001e2a:	4915      	ldr	r1, [pc, #84]	; (8001e80 <MEAS_start_measure+0x6c>)
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001e2c:	4a15      	ldr	r2, [pc, #84]	; (8001e84 <MEAS_start_measure+0x70>)
 8001e2e:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001e32:	f043 0301 	orr.w	r3, r3, #1
 8001e36:	62a3      	str	r3, [r4, #40]	; 0x28
 8001e38:	f8c1 0184 	str.w	r0, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001e3c:	6048      	str	r0, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001e3e:	6893      	ldr	r3, [r2, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001e40:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001e44:	f043 0301 	orr.w	r3, r3, #1
 8001e48:	6093      	str	r3, [r2, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001e4a:	680b      	ldr	r3, [r1, #0]

	//
    MEAS_ADC3_scan_start();

    static int timeout = 0;
    while ((!MEAS_data_ready) & (timeout > 99999))
 8001e4c:	4a0e      	ldr	r2, [pc, #56]	; (8001e88 <MEAS_start_measure+0x74>)
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001e4e:	f043 0301 	orr.w	r3, r3, #1
 8001e52:	600b      	str	r3, [r1, #0]
    while ((!MEAS_data_ready) & (timeout > 99999))
 8001e54:	6811      	ldr	r1, [r2, #0]
 8001e56:	4b0d      	ldr	r3, [pc, #52]	; (8001e8c <MEAS_start_measure+0x78>)
 8001e58:	4299      	cmp	r1, r3
 8001e5a:	490d      	ldr	r1, [pc, #52]	; (8001e90 <MEAS_start_measure+0x7c>)
 8001e5c:	dd03      	ble.n	8001e66 <MEAS_start_measure+0x52>
 8001e5e:	780b      	ldrb	r3, [r1, #0]
 8001e60:	2b01      	cmp	r3, #1
 8001e62:	d000      	beq.n	8001e66 <MEAS_start_measure+0x52>
 8001e64:	e7fe      	b.n	8001e64 <MEAS_start_measure+0x50>
    {
    	// Wait for data
    	timeout++;
    }
    MEAS_data_ready = false;
 8001e66:	2300      	movs	r3, #0
    timeout=0;

    HAL_Delay(100);
 8001e68:	2064      	movs	r0, #100	; 0x64
    MEAS_data_ready = false;
 8001e6a:	700b      	strb	r3, [r1, #0]
    timeout=0;
 8001e6c:	6013      	str	r3, [r2, #0]
    HAL_Delay(100);
 8001e6e:	f007 f9bd 	bl	80091ec <HAL_Delay>


    return ADC_samples;
}
 8001e72:	4802      	ldr	r0, [pc, #8]	; (8001e7c <MEAS_start_measure+0x68>)
 8001e74:	bd10      	pop	{r4, pc}
 8001e76:	bf00      	nop
 8001e78:	40026400 	.word	0x40026400
 8001e7c:	20001bec 	.word	0x20001bec
 8001e80:	e000e100 	.word	0xe000e100
 8001e84:	40012200 	.word	0x40012200
 8001e88:	20001ff4 	.word	0x20001ff4
 8001e8c:	0001869f 	.word	0x0001869f
 8001e90:	20001fec 	.word	0x20001fec

08001e94 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8001e94:	2004      	movs	r0, #4
 8001e96:	4770      	bx	lr

08001e98 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001e98:	2040      	movs	r0, #64	; 0x40
 8001e9a:	4770      	bx	lr

08001e9c <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8001e9c:	f44f 7020 	mov.w	r0, #640	; 0x280
 8001ea0:	4770      	bx	lr
 8001ea2:	bf00      	nop

08001ea4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001ea4:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001ea6:	4b0e      	ldr	r3, [pc, #56]	; (8001ee0 <HAL_MspInit+0x3c>)
 8001ea8:	2200      	movs	r2, #0
 8001eaa:	9200      	str	r2, [sp, #0]
 8001eac:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001eae:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001eb2:	6459      	str	r1, [r3, #68]	; 0x44
 8001eb4:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001eb6:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001eba:	9000      	str	r0, [sp, #0]
 8001ebc:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001ebe:	9201      	str	r2, [sp, #4]
 8001ec0:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001ec2:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001ec6:	6418      	str	r0, [r3, #64]	; 0x40
 8001ec8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001eca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001ece:	9301      	str	r3, [sp, #4]
 8001ed0:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001ed2:	210f      	movs	r1, #15
 8001ed4:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001ed8:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001eda:	f007 b9ab 	b.w	8009234 <HAL_NVIC_SetPriority>
 8001ede:	bf00      	nop
 8001ee0:	40023800 	.word	0x40023800

08001ee4 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001ee4:	4b0b      	ldr	r3, [pc, #44]	; (8001f14 <HAL_CRC_MspInit+0x30>)
 8001ee6:	6802      	ldr	r2, [r0, #0]
 8001ee8:	429a      	cmp	r2, r3
 8001eea:	d000      	beq.n	8001eee <HAL_CRC_MspInit+0xa>
 8001eec:	4770      	bx	lr
{
 8001eee:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001ef0:	2200      	movs	r2, #0
 8001ef2:	9201      	str	r2, [sp, #4]
 8001ef4:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001ef8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001efc:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001f00:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001f04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f06:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001f0a:	9301      	str	r3, [sp, #4]
 8001f0c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001f0e:	b002      	add	sp, #8
 8001f10:	4770      	bx	lr
 8001f12:	bf00      	nop
 8001f14:	40023000 	.word	0x40023000

08001f18 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001f18:	4b0a      	ldr	r3, [pc, #40]	; (8001f44 <HAL_DMA2D_MspInit+0x2c>)
 8001f1a:	6802      	ldr	r2, [r0, #0]
 8001f1c:	429a      	cmp	r2, r3
 8001f1e:	d000      	beq.n	8001f22 <HAL_DMA2D_MspInit+0xa>
 8001f20:	4770      	bx	lr
{
 8001f22:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001f24:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001f28:	2200      	movs	r2, #0
 8001f2a:	9201      	str	r2, [sp, #4]
 8001f2c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f2e:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8001f32:	631a      	str	r2, [r3, #48]	; 0x30
 8001f34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f36:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001f3a:	9301      	str	r3, [sp, #4]
 8001f3c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001f3e:	b002      	add	sp, #8
 8001f40:	4770      	bx	lr
 8001f42:	bf00      	nop
 8001f44:	4002b000 	.word	0x4002b000

08001f48 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001f48:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001f4c:	4b2e      	ldr	r3, [pc, #184]	; (8002008 <HAL_I2C_MspInit+0xc0>)
 8001f4e:	6802      	ldr	r2, [r0, #0]
{
 8001f50:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f52:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001f54:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f56:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001f5a:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001f5e:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001f60:	d002      	beq.n	8001f68 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001f62:	b00a      	add	sp, #40	; 0x28
 8001f64:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001f68:	4d28      	ldr	r5, [pc, #160]	; (800200c <HAL_I2C_MspInit+0xc4>)
 8001f6a:	9401      	str	r4, [sp, #4]
 8001f6c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f6e:	4828      	ldr	r0, [pc, #160]	; (8002010 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001f70:	f043 0304 	orr.w	r3, r3, #4
 8001f74:	632b      	str	r3, [r5, #48]	; 0x30
 8001f76:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001f78:	f003 0304 	and.w	r3, r3, #4
 8001f7c:	9301      	str	r3, [sp, #4]
 8001f7e:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001f80:	9402      	str	r4, [sp, #8]
 8001f82:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001f84:	f043 0301 	orr.w	r3, r3, #1
 8001f88:	632b      	str	r3, [r5, #48]	; 0x30
 8001f8a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001f8c:	f003 0301 	and.w	r3, r3, #1
 8001f90:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001f92:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001f96:	f04f 0801 	mov.w	r8, #1
 8001f9a:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001f9e:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fa0:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001fa2:	2312      	movs	r3, #18
 8001fa4:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001fa8:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001fac:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001fae:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fb0:	f007 fba8 	bl	8009704 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fb4:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001fb6:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001fba:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fbc:	4815      	ldr	r0, [pc, #84]	; (8002014 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001fbe:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001fc0:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001fc4:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fc8:	f007 fb9c 	bl	8009704 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001fcc:	9403      	str	r4, [sp, #12]
 8001fce:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001fd0:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001fd4:	642b      	str	r3, [r5, #64]	; 0x40
 8001fd6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001fd8:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001fdc:	4622      	mov	r2, r4
 8001fde:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001fe0:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001fe2:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001fe4:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001fe6:	f007 f925 	bl	8009234 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001fea:	2048      	movs	r0, #72	; 0x48
 8001fec:	f007 f960 	bl	80092b0 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001ff0:	6a2b      	ldr	r3, [r5, #32]
 8001ff2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001ff6:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001ff8:	6a2b      	ldr	r3, [r5, #32]
 8001ffa:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001ffe:	622b      	str	r3, [r5, #32]
}
 8002000:	b00a      	add	sp, #40	; 0x28
 8002002:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8002006:	bf00      	nop
 8002008:	40005c00 	.word	0x40005c00
 800200c:	40023800 	.word	0x40023800
 8002010:	40020800 	.word	0x40020800
 8002014:	40020000 	.word	0x40020000

08002018 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002018:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800201c:	4604      	mov	r4, r0
 800201e:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002020:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002022:	2230      	movs	r2, #48	; 0x30
 8002024:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002026:	e9cd 1108 	strd	r1, r1, [sp, #32]
 800202a:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 800202e:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002030:	f028 fab5 	bl	802a59e <memset>
  if(hltdc->Instance==LTDC)
 8002034:	4b67      	ldr	r3, [pc, #412]	; (80021d4 <HAL_LTDC_MspInit+0x1bc>)
 8002036:	6822      	ldr	r2, [r4, #0]
 8002038:	429a      	cmp	r2, r3
 800203a:	d002      	beq.n	8002042 <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 800203c:	b01a      	add	sp, #104	; 0x68
 800203e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8002042:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002044:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8002046:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8002048:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800204a:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 800204c:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002050:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8002052:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8002054:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002056:	f009 fdbf 	bl	800bbd8 <HAL_RCCEx_PeriphCLKConfig>
 800205a:	2800      	cmp	r0, #0
 800205c:	f040 80b7 	bne.w	80021ce <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002060:	4b5d      	ldr	r3, [pc, #372]	; (80021d8 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002062:	485e      	ldr	r0, [pc, #376]	; (80021dc <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002064:	2400      	movs	r4, #0
 8002066:	9401      	str	r4, [sp, #4]
 8002068:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800206a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800206e:	645a      	str	r2, [r3, #68]	; 0x44
 8002070:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002072:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8002076:	9201      	str	r2, [sp, #4]
 8002078:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800207a:	9402      	str	r4, [sp, #8]
 800207c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800207e:	f042 0220 	orr.w	r2, r2, #32
 8002082:	631a      	str	r2, [r3, #48]	; 0x30
 8002084:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002086:	f002 0220 	and.w	r2, r2, #32
 800208a:	9202      	str	r2, [sp, #8]
 800208c:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800208e:	9403      	str	r4, [sp, #12]
 8002090:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002092:	f042 0201 	orr.w	r2, r2, #1
 8002096:	631a      	str	r2, [r3, #48]	; 0x30
 8002098:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800209a:	f002 0201 	and.w	r2, r2, #1
 800209e:	9203      	str	r2, [sp, #12]
 80020a0:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80020a2:	9404      	str	r4, [sp, #16]
 80020a4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80020a6:	f042 0202 	orr.w	r2, r2, #2
 80020aa:	631a      	str	r2, [r3, #48]	; 0x30
 80020ac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80020ae:	f002 0202 	and.w	r2, r2, #2
 80020b2:	9204      	str	r2, [sp, #16]
 80020b4:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80020b6:	9405      	str	r4, [sp, #20]
 80020b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80020ba:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80020be:	631a      	str	r2, [r3, #48]	; 0x30
 80020c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80020c2:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80020c6:	9205      	str	r2, [sp, #20]
 80020c8:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80020ca:	9406      	str	r4, [sp, #24]
 80020cc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80020ce:	f042 0204 	orr.w	r2, r2, #4
 80020d2:	631a      	str	r2, [r3, #48]	; 0x30
 80020d4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80020d6:	f002 0204 	and.w	r2, r2, #4
 80020da:	9206      	str	r2, [sp, #24]
 80020dc:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80020de:	9407      	str	r4, [sp, #28]
 80020e0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80020e2:	f042 0208 	orr.w	r2, r2, #8
 80020e6:	631a      	str	r2, [r3, #48]	; 0x30
 80020e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80020ea:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80020ee:	2600      	movs	r6, #0
 80020f0:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80020f2:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80020f4:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80020f6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80020f8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80020fc:	2302      	movs	r3, #2
 80020fe:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002102:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002106:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002108:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800210a:	f007 fafb 	bl	8009704 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800210e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002110:	f641 0258 	movw	r2, #6232	; 0x1858
 8002114:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002116:	4832      	ldr	r0, [pc, #200]	; (80021e0 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002118:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800211a:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800211e:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002122:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002126:	f007 faed 	bl	8009704 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800212a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800212c:	2203      	movs	r2, #3
 800212e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002130:	482c      	ldr	r0, [pc, #176]	; (80021e4 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002132:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002136:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800213a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800213e:	f007 fae1 	bl	8009704 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002142:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002144:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8002148:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800214a:	4826      	ldr	r0, [pc, #152]	; (80021e4 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800214c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800214e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002152:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002156:	f007 fad5 	bl	8009704 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800215a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 800215c:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8002160:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002162:	4821      	ldr	r0, [pc, #132]	; (80021e8 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002164:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002166:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800216a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800216e:	f007 fac9 	bl	8009704 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002172:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002174:	22c0      	movs	r2, #192	; 0xc0
 8002176:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002178:	481c      	ldr	r0, [pc, #112]	; (80021ec <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800217a:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800217c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002180:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002184:	f007 fabe 	bl	8009704 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002188:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800218a:	2208      	movs	r2, #8
 800218c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800218e:	4818      	ldr	r0, [pc, #96]	; (80021f0 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002190:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002192:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002196:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800219a:	f007 fab3 	bl	8009704 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800219e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80021a0:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80021a2:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80021a6:	4810      	ldr	r0, [pc, #64]	; (80021e8 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80021a8:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80021ac:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80021b0:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80021b4:	f007 faa6 	bl	8009704 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80021b8:	4622      	mov	r2, r4
 80021ba:	2105      	movs	r1, #5
 80021bc:	2058      	movs	r0, #88	; 0x58
 80021be:	f007 f839 	bl	8009234 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80021c2:	2058      	movs	r0, #88	; 0x58
 80021c4:	f007 f874 	bl	80092b0 <HAL_NVIC_EnableIRQ>
}
 80021c8:	b01a      	add	sp, #104	; 0x68
 80021ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 80021ce:	f7ff fcfd 	bl	8001bcc <Error_Handler>
 80021d2:	e745      	b.n	8002060 <HAL_LTDC_MspInit+0x48>
 80021d4:	40016800 	.word	0x40016800
 80021d8:	40023800 	.word	0x40023800
 80021dc:	40021400 	.word	0x40021400
 80021e0:	40020000 	.word	0x40020000
 80021e4:	40020400 	.word	0x40020400
 80021e8:	40021800 	.word	0x40021800
 80021ec:	40020800 	.word	0x40020800
 80021f0:	40020c00 	.word	0x40020c00
 80021f4:	00000000 	.word	0x00000000

080021f8 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80021f8:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 80021fa:	4a1b      	ldr	r2, [pc, #108]	; (8002268 <HAL_SPI_MspInit+0x70>)
 80021fc:	6801      	ldr	r1, [r0, #0]
{
 80021fe:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002200:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8002202:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002204:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002208:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800220c:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 800220e:	d001      	beq.n	8002214 <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002210:	b008      	add	sp, #32
 8002212:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002214:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8002218:	9300      	str	r3, [sp, #0]
 800221a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800221c:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8002220:	6450      	str	r0, [r2, #68]	; 0x44
 8002222:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002224:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8002228:	9000      	str	r0, [sp, #0]
 800222a:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800222c:	9301      	str	r3, [sp, #4]
 800222e:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002230:	480e      	ldr	r0, [pc, #56]	; (800226c <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002232:	f043 0320 	orr.w	r3, r3, #32
 8002236:	6313      	str	r3, [r2, #48]	; 0x30
 8002238:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800223a:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8002260 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800223e:	f003 0320 	and.w	r3, r3, #32
 8002242:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002244:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002246:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002248:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800224a:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800224e:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002252:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002254:	f007 fa56 	bl	8009704 <HAL_GPIO_Init>
}
 8002258:	b008      	add	sp, #32
 800225a:	bd10      	pop	{r4, pc}
 800225c:	f3af 8000 	nop.w
 8002260:	00000380 	.word	0x00000380
 8002264:	00000002 	.word	0x00000002
 8002268:	40015000 	.word	0x40015000
 800226c:	40021400 	.word	0x40021400

08002270 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002270:	b530      	push	{r4, r5, lr}
  if(htim_base->Instance==TIM1)
 8002272:	4a31      	ldr	r2, [pc, #196]	; (8002338 <HAL_TIM_Base_MspInit+0xc8>)
 8002274:	6803      	ldr	r3, [r0, #0]
 8002276:	4293      	cmp	r3, r2
{
 8002278:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 800227a:	d007      	beq.n	800228c <HAL_TIM_Base_MspInit+0x1c>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 800227c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002280:	d020      	beq.n	80022c4 <HAL_TIM_Base_MspInit+0x54>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8002282:	4a2e      	ldr	r2, [pc, #184]	; (800233c <HAL_TIM_Base_MspInit+0xcc>)
 8002284:	4293      	cmp	r3, r2
 8002286:	d00f      	beq.n	80022a8 <HAL_TIM_Base_MspInit+0x38>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8002288:	b005      	add	sp, #20
 800228a:	bd30      	pop	{r4, r5, pc}
    __HAL_RCC_TIM1_CLK_ENABLE();
 800228c:	4b2c      	ldr	r3, [pc, #176]	; (8002340 <HAL_TIM_Base_MspInit+0xd0>)
 800228e:	2200      	movs	r2, #0
 8002290:	9201      	str	r2, [sp, #4]
 8002292:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002294:	f042 0201 	orr.w	r2, r2, #1
 8002298:	645a      	str	r2, [r3, #68]	; 0x44
 800229a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800229c:	f003 0301 	and.w	r3, r3, #1
 80022a0:	9301      	str	r3, [sp, #4]
 80022a2:	9b01      	ldr	r3, [sp, #4]
}
 80022a4:	b005      	add	sp, #20
 80022a6:	bd30      	pop	{r4, r5, pc}
    __HAL_RCC_TIM3_CLK_ENABLE();
 80022a8:	4b25      	ldr	r3, [pc, #148]	; (8002340 <HAL_TIM_Base_MspInit+0xd0>)
 80022aa:	2200      	movs	r2, #0
 80022ac:	9203      	str	r2, [sp, #12]
 80022ae:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80022b0:	f042 0202 	orr.w	r2, r2, #2
 80022b4:	641a      	str	r2, [r3, #64]	; 0x40
 80022b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022b8:	f003 0302 	and.w	r3, r3, #2
 80022bc:	9303      	str	r3, [sp, #12]
 80022be:	9b03      	ldr	r3, [sp, #12]
}
 80022c0:	b005      	add	sp, #20
 80022c2:	bd30      	pop	{r4, r5, pc}
    __HAL_RCC_TIM2_CLK_ENABLE();
 80022c4:	2300      	movs	r3, #0
 80022c6:	4a1e      	ldr	r2, [pc, #120]	; (8002340 <HAL_TIM_Base_MspInit+0xd0>)
 80022c8:	9302      	str	r3, [sp, #8]
 80022ca:	6c11      	ldr	r1, [r2, #64]	; 0x40
    hdma_tim2_up_ch3.Instance = DMA1_Stream1;
 80022cc:	4d1d      	ldr	r5, [pc, #116]	; (8002344 <HAL_TIM_Base_MspInit+0xd4>)
    __HAL_RCC_TIM2_CLK_ENABLE();
 80022ce:	f041 0101 	orr.w	r1, r1, #1
 80022d2:	6411      	str	r1, [r2, #64]	; 0x40
 80022d4:	6c12      	ldr	r2, [r2, #64]	; 0x40
    hdma_tim2_up_ch3.Instance = DMA1_Stream1;
 80022d6:	491c      	ldr	r1, [pc, #112]	; (8002348 <HAL_TIM_Base_MspInit+0xd8>)
    hdma_tim2_up_ch3.Init.PeriphInc = DMA_PINC_DISABLE;
 80022d8:	60eb      	str	r3, [r5, #12]
    __HAL_RCC_TIM2_CLK_ENABLE();
 80022da:	f002 0201 	and.w	r2, r2, #1
 80022de:	9202      	str	r2, [sp, #8]
    hdma_tim2_up_ch3.Init.Channel = DMA_CHANNEL_3;
 80022e0:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 80022e4:	e9c5 1200 	strd	r1, r2, [r5]
    hdma_tim2_up_ch3.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80022e8:	2140      	movs	r1, #64	; 0x40
    hdma_tim2_up_ch3.Init.MemInc = DMA_MINC_ENABLE;
 80022ea:	f44f 6280 	mov.w	r2, #1024	; 0x400
    hdma_tim2_up_ch3.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80022ee:	60a9      	str	r1, [r5, #8]
    hdma_tim2_up_ch3.Init.MemInc = DMA_MINC_ENABLE;
 80022f0:	612a      	str	r2, [r5, #16]
    hdma_tim2_up_ch3.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 80022f2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80022f6:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80022fa:	e9c5 1205 	strd	r1, r2, [r5, #20]
 80022fe:	4604      	mov	r4, r0
    hdma_tim2_up_ch3.Init.Priority = DMA_PRIORITY_MEDIUM;
 8002300:	f44f 3280 	mov.w	r2, #65536	; 0x10000
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002304:	9802      	ldr	r0, [sp, #8]
    hdma_tim2_up_ch3.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8002306:	626b      	str	r3, [r5, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_tim2_up_ch3) != HAL_OK)
 8002308:	4628      	mov	r0, r5
    hdma_tim2_up_ch3.Init.Priority = DMA_PRIORITY_MEDIUM;
 800230a:	e9c5 3207 	strd	r3, r2, [r5, #28]
    if (HAL_DMA_Init(&hdma_tim2_up_ch3) != HAL_OK)
 800230e:	f006 fff1 	bl	80092f4 <HAL_DMA_Init>
 8002312:	b968      	cbnz	r0, 8002330 <HAL_TIM_Base_MspInit+0xc0>
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_UPDATE],hdma_tim2_up_ch3);
 8002314:	6225      	str	r5, [r4, #32]
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC3],hdma_tim2_up_ch3);
 8002316:	62e5      	str	r5, [r4, #44]	; 0x2c
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8002318:	201c      	movs	r0, #28
 800231a:	2200      	movs	r2, #0
 800231c:	2105      	movs	r1, #5
    __HAL_LINKDMA(htim_base,hdma[TIM_DMA_ID_CC3],hdma_tim2_up_ch3);
 800231e:	63ac      	str	r4, [r5, #56]	; 0x38
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8002320:	f006 ff88 	bl	8009234 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002324:	201c      	movs	r0, #28
}
 8002326:	b005      	add	sp, #20
 8002328:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 800232c:	f006 bfc0 	b.w	80092b0 <HAL_NVIC_EnableIRQ>
      Error_Handler();
 8002330:	f7ff fc4c 	bl	8001bcc <Error_Handler>
 8002334:	e7ee      	b.n	8002314 <HAL_TIM_Base_MspInit+0xa4>
 8002336:	bf00      	nop
 8002338:	40010000 	.word	0x40010000
 800233c:	40000400 	.word	0x40000400
 8002340:	40023800 	.word	0x40023800
 8002344:	2000192c 	.word	0x2000192c
 8002348:	40026028 	.word	0x40026028

0800234c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 800234c:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 800234e:	4b2b      	ldr	r3, [pc, #172]	; (80023fc <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002350:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8002352:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002354:	2200      	movs	r2, #0
 8002356:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8002358:	2c00      	cmp	r4, #0
 800235a:	d14c      	bne.n	80023f6 <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 800235c:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 800235e:	4a28      	ldr	r2, [pc, #160]	; (8002400 <HAL_SDRAM_MspInit+0xb4>)
 8002360:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8002362:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002364:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002366:	4827      	ldr	r0, [pc, #156]	; (8002404 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002368:	433b      	orrs	r3, r7
 800236a:	6393      	str	r3, [r2, #56]	; 0x38
 800236c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800236e:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002370:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002372:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002374:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8002378:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800237a:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800237c:	2302      	movs	r3, #2
 800237e:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002382:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002386:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002388:	f007 f9bc 	bl	8009704 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800238c:	481e      	ldr	r0, [pc, #120]	; (8002408 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 800238e:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002390:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002392:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002394:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002398:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800239c:	f007 f9b2 	bl	8009704 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80023a0:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023a4:	4819      	ldr	r0, [pc, #100]	; (800240c <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80023a6:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023a8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80023aa:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80023ae:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023b2:	f007 f9a7 	bl	8009704 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80023b6:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80023ba:	4815      	ldr	r0, [pc, #84]	; (8002410 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80023bc:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80023be:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80023c0:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80023c4:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80023c8:	f007 f99c 	bl	8009704 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80023cc:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80023d0:	4810      	ldr	r0, [pc, #64]	; (8002414 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80023d2:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80023d4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80023d6:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80023da:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80023de:	f007 f991 	bl	8009704 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80023e2:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023e4:	480c      	ldr	r0, [pc, #48]	; (8002418 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023e6:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023e8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80023ea:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80023ee:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80023f0:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023f2:	f007 f987 	bl	8009704 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80023f6:	b009      	add	sp, #36	; 0x24
 80023f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80023fa:	bf00      	nop
 80023fc:	20001ff8 	.word	0x20001ff8
 8002400:	40023800 	.word	0x40023800
 8002404:	40021400 	.word	0x40021400
 8002408:	40020800 	.word	0x40020800
 800240c:	40021800 	.word	0x40021800
 8002410:	40021000 	.word	0x40021000
 8002414:	40020c00 	.word	0x40020c00
 8002418:	40020400 	.word	0x40020400

0800241c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800241c:	b570      	push	{r4, r5, r6, lr}
 800241e:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002420:	4b23      	ldr	r3, [pc, #140]	; (80024b0 <HAL_InitTick+0x94>)
 8002422:	2200      	movs	r2, #0
 8002424:	9202      	str	r2, [sp, #8]
 8002426:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002428:	f042 0210 	orr.w	r2, r2, #16
 800242c:	641a      	str	r2, [r3, #64]	; 0x40
 800242e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002430:	f003 0310 	and.w	r3, r3, #16
 8002434:	9302      	str	r3, [sp, #8]
{
 8002436:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002438:	a901      	add	r1, sp, #4
 800243a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 800243c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800243e:	f009 fba9 	bl	800bb94 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002442:	9b06      	ldr	r3, [sp, #24]
 8002444:	b9d3      	cbnz	r3, 800247c <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002446:	f009 fb95 	bl	800bb74 <HAL_RCC_GetPCLK1Freq>
 800244a:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800244c:	4a19      	ldr	r2, [pc, #100]	; (80024b4 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 800244e:	4c1a      	ldr	r4, [pc, #104]	; (80024b8 <HAL_InitTick+0x9c>)
 8002450:	491a      	ldr	r1, [pc, #104]	; (80024bc <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002452:	fba2 2303 	umull	r2, r3, r2, r3
 8002456:	0c9b      	lsrs	r3, r3, #18
 8002458:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 800245a:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 800245c:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002460:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002462:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8002466:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002468:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800246a:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 800246c:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 800246e:	f00a f9c1 	bl	800c7f4 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002472:	4606      	mov	r6, r0
 8002474:	b130      	cbz	r0, 8002484 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 8002476:	4630      	mov	r0, r6
 8002478:	b008      	add	sp, #32
 800247a:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 800247c:	f009 fb7a 	bl	800bb74 <HAL_RCC_GetPCLK1Freq>
 8002480:	0043      	lsls	r3, r0, #1
 8002482:	e7e3      	b.n	800244c <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002484:	4620      	mov	r0, r4
 8002486:	f00a fa43 	bl	800c910 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 800248a:	4606      	mov	r6, r0
 800248c:	2800      	cmp	r0, #0
 800248e:	d1f2      	bne.n	8002476 <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002490:	2036      	movs	r0, #54	; 0x36
 8002492:	f006 ff0d 	bl	80092b0 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002496:	2d0f      	cmp	r5, #15
 8002498:	d901      	bls.n	800249e <HAL_InitTick+0x82>
        status = HAL_ERROR;
 800249a:	2601      	movs	r6, #1
 800249c:	e7eb      	b.n	8002476 <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 800249e:	4632      	mov	r2, r6
 80024a0:	4629      	mov	r1, r5
 80024a2:	2036      	movs	r0, #54	; 0x36
 80024a4:	f006 fec6 	bl	8009234 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80024a8:	4b05      	ldr	r3, [pc, #20]	; (80024c0 <HAL_InitTick+0xa4>)
 80024aa:	601d      	str	r5, [r3, #0]
 80024ac:	e7e3      	b.n	8002476 <HAL_InitTick+0x5a>
 80024ae:	bf00      	nop
 80024b0:	40023800 	.word	0x40023800
 80024b4:	431bde83 	.word	0x431bde83
 80024b8:	20001ffc 	.word	0x20001ffc
 80024bc:	40001000 	.word	0x40001000
 80024c0:	20000080 	.word	0x20000080

080024c4 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80024c4:	4770      	bx	lr
 80024c6:	bf00      	nop

080024c8 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80024c8:	e7fe      	b.n	80024c8 <HardFault_Handler>
 80024ca:	bf00      	nop

080024cc <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80024cc:	e7fe      	b.n	80024cc <MemManage_Handler>
 80024ce:	bf00      	nop

080024d0 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80024d0:	e7fe      	b.n	80024d0 <BusFault_Handler>
 80024d2:	bf00      	nop

080024d4 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80024d4:	e7fe      	b.n	80024d4 <UsageFault_Handler>
 80024d6:	bf00      	nop

080024d8 <DebugMon_Handler>:
 80024d8:	4770      	bx	lr
 80024da:	bf00      	nop

080024dc <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 80024dc:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 80024de:	20c8      	movs	r0, #200	; 0xc8
 80024e0:	f006 fe84 	bl	80091ec <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80024e4:	4804      	ldr	r0, [pc, #16]	; (80024f8 <EXTI3_IRQHandler+0x1c>)
 80024e6:	2200      	movs	r2, #0
 80024e8:	2120      	movs	r1, #32
 80024ea:	f007 fa4f 	bl	800998c <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 80024ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 80024f2:	2008      	movs	r0, #8
 80024f4:	f007 ba5a 	b.w	80099ac <HAL_GPIO_EXTI_IRQHandler>
 80024f8:	40021000 	.word	0x40021000

080024fc <DMA1_Stream1_IRQHandler>:
void DMA1_Stream1_IRQHandler(void)
{
  /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */

  /* USER CODE END DMA1_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_tim2_up_ch3);
 80024fc:	4801      	ldr	r0, [pc, #4]	; (8002504 <DMA1_Stream1_IRQHandler+0x8>)
 80024fe:	f006 bfa3 	b.w	8009448 <HAL_DMA_IRQHandler>
 8002502:	bf00      	nop
 8002504:	2000192c 	.word	0x2000192c

08002508 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8002508:	b508      	push	{r3, lr}
  /* USER CODE BEGIN TIM2_IRQn 0 */
  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800250a:	4805      	ldr	r0, [pc, #20]	; (8002520 <TIM2_IRQHandler+0x18>)
 800250c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002510:	f007 fa40 	bl	8009994 <HAL_GPIO_TogglePin>
  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8002514:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_TIM_IRQHandler(&htim2);
 8002518:	4802      	ldr	r0, [pc, #8]	; (8002524 <TIM2_IRQHandler+0x1c>)
 800251a:	f00a bb79 	b.w	800cc10 <HAL_TIM_IRQHandler>
 800251e:	bf00      	nop
 8002520:	40021800 	.word	0x40021800
 8002524:	20001b5c 	.word	0x20001b5c

08002528 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002528:	4801      	ldr	r0, [pc, #4]	; (8002530 <TIM6_DAC_IRQHandler+0x8>)
 800252a:	f00a bb71 	b.w	800cc10 <HAL_TIM_IRQHandler>
 800252e:	bf00      	nop
 8002530:	20001ffc 	.word	0x20001ffc

08002534 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8002534:	4801      	ldr	r0, [pc, #4]	; (800253c <I2C3_EV_IRQHandler+0x8>)
 8002536:	f008 b999 	b.w	800a86c <HAL_I2C_EV_IRQHandler>
 800253a:	bf00      	nop
 800253c:	2000198c 	.word	0x2000198c

08002540 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002540:	4801      	ldr	r0, [pc, #4]	; (8002548 <LTDC_IRQHandler+0x8>)
 8002542:	f008 bf0d 	b.w	800b360 <HAL_LTDC_IRQHandler>
 8002546:	bf00      	nop
 8002548:	200019e0 	.word	0x200019e0

0800254c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 800254c:	2001      	movs	r0, #1
 800254e:	4770      	bx	lr

08002550 <_kill>:

int _kill(int pid, int sig)
{
 8002550:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002552:	f028 f91d 	bl	802a790 <__errno>
 8002556:	2316      	movs	r3, #22
 8002558:	6003      	str	r3, [r0, #0]
	return -1;
}
 800255a:	f04f 30ff 	mov.w	r0, #4294967295
 800255e:	bd08      	pop	{r3, pc}

08002560 <_exit>:

void _exit (int status)
{
 8002560:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002562:	f028 f915 	bl	802a790 <__errno>
 8002566:	2316      	movs	r3, #22
 8002568:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800256a:	e7fe      	b.n	800256a <_exit+0xa>

0800256c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800256c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800256e:	1e16      	subs	r6, r2, #0
 8002570:	dd07      	ble.n	8002582 <_read+0x16>
 8002572:	460c      	mov	r4, r1
 8002574:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8002576:	f3af 8000 	nop.w
 800257a:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800257e:	42a5      	cmp	r5, r4
 8002580:	d1f9      	bne.n	8002576 <_read+0xa>
	}

return len;
}
 8002582:	4630      	mov	r0, r6
 8002584:	bd70      	pop	{r4, r5, r6, pc}
 8002586:	bf00      	nop

08002588 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002588:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800258a:	1e16      	subs	r6, r2, #0
 800258c:	dd07      	ble.n	800259e <_write+0x16>
 800258e:	460c      	mov	r4, r1
 8002590:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8002592:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002596:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800259a:	42ac      	cmp	r4, r5
 800259c:	d1f9      	bne.n	8002592 <_write+0xa>
	}
	return len;
}
 800259e:	4630      	mov	r0, r6
 80025a0:	bd70      	pop	{r4, r5, r6, pc}
 80025a2:	bf00      	nop

080025a4 <_close>:

int _close(int file)
{
	return -1;
}
 80025a4:	f04f 30ff 	mov.w	r0, #4294967295
 80025a8:	4770      	bx	lr
 80025aa:	bf00      	nop

080025ac <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80025ac:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80025b0:	604b      	str	r3, [r1, #4]
	return 0;
}
 80025b2:	2000      	movs	r0, #0
 80025b4:	4770      	bx	lr
 80025b6:	bf00      	nop

080025b8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80025b8:	2001      	movs	r0, #1
 80025ba:	4770      	bx	lr

080025bc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80025bc:	2000      	movs	r0, #0
 80025be:	4770      	bx	lr

080025c0 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80025c0:	4a0b      	ldr	r2, [pc, #44]	; (80025f0 <_sbrk+0x30>)
{
 80025c2:	b508      	push	{r3, lr}
 80025c4:	4603      	mov	r3, r0
	if (heap_end == 0)
 80025c6:	6810      	ldr	r0, [r2, #0]
 80025c8:	b128      	cbz	r0, 80025d6 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 80025ca:	4403      	add	r3, r0
 80025cc:	4669      	mov	r1, sp
 80025ce:	428b      	cmp	r3, r1
 80025d0:	d807      	bhi.n	80025e2 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 80025d2:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 80025d4:	bd08      	pop	{r3, pc}
		heap_end = &end;
 80025d6:	4807      	ldr	r0, [pc, #28]	; (80025f4 <_sbrk+0x34>)
 80025d8:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80025da:	4403      	add	r3, r0
 80025dc:	4669      	mov	r1, sp
 80025de:	428b      	cmp	r3, r1
 80025e0:	d9f7      	bls.n	80025d2 <_sbrk+0x12>
		errno = ENOMEM;
 80025e2:	f028 f8d5 	bl	802a790 <__errno>
 80025e6:	230c      	movs	r3, #12
 80025e8:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80025ea:	f04f 30ff 	mov.w	r0, #4294967295
}
 80025ee:	bd08      	pop	{r3, pc}
 80025f0:	20002044 	.word	0x20002044
 80025f4:	20013b68 	.word	0x20013b68

080025f8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80025f8:	4770      	bx	lr

080025fa <_ZN23ApplicationFontProviderD0Ev>:
 80025fa:	b510      	push	{r4, lr}
 80025fc:	2104      	movs	r1, #4
 80025fe:	4604      	mov	r4, r0
 8002600:	f026 ffb5 	bl	802956e <_ZdlPvj>
 8002604:	4620      	mov	r0, r4
 8002606:	bd10      	pop	{r4, pc}

08002608 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002608:	b508      	push	{r3, lr}
    switch (typography)
 800260a:	2903      	cmp	r1, #3
 800260c:	d813      	bhi.n	8002636 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 800260e:	e8df f001 	tbb	[pc, r1]
 8002612:	0602      	.short	0x0602
 8002614:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002616:	f005 fe4d 	bl	80082b4 <_ZN17TypedTextDatabase8getFontsEv>
 800261a:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 800261c:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800261e:	f005 fe49 	bl	80082b4 <_ZN17TypedTextDatabase8getFontsEv>
 8002622:	6840      	ldr	r0, [r0, #4]
 8002624:	e7fa      	b.n	800261c <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002626:	f005 fe45 	bl	80082b4 <_ZN17TypedTextDatabase8getFontsEv>
 800262a:	6880      	ldr	r0, [r0, #8]
 800262c:	e7f6      	b.n	800261c <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 800262e:	f005 fe41 	bl	80082b4 <_ZN17TypedTextDatabase8getFontsEv>
 8002632:	68c0      	ldr	r0, [r0, #12]
 8002634:	e7f2      	b.n	800261c <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8002636:	2000      	movs	r0, #0
 8002638:	e7f0      	b.n	800261c <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

0800263c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 800263c:	4800      	ldr	r0, [pc, #0]	; (8002640 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800263e:	4770      	bx	lr
 8002640:	0802ba84 	.word	0x0802ba84

08002644 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002644:	200d      	movs	r0, #13
 8002646:	4770      	bx	lr

08002648 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002648:	b513      	push	{r0, r1, r4, lr}
 800264a:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 800264c:	b151      	cbz	r1, 8002664 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800264e:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002650:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002652:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002656:	aa01      	add	r2, sp, #4
 8002658:	689c      	ldr	r4, [r3, #8]
 800265a:	f10d 0303 	add.w	r3, sp, #3
 800265e:	47a0      	blx	r4
        return glyph;
    }
 8002660:	b002      	add	sp, #8
 8002662:	bd10      	pop	{r4, pc}
            return 0;
 8002664:	4608      	mov	r0, r1
 8002666:	e7fb      	b.n	8002660 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002668 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002668:	89c0      	ldrh	r0, [r0, #14]
 800266a:	4770      	bx	lr

0800266c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 800266c:	8a00      	ldrh	r0, [r0, #16]
 800266e:	4770      	bx	lr

08002670 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002670:	88c0      	ldrh	r0, [r0, #6]
 8002672:	4770      	bx	lr

08002674 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002674:	8880      	ldrh	r0, [r0, #4]
 8002676:	4770      	bx	lr

08002678 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002678:	7a80      	ldrb	r0, [r0, #10]
    }
 800267a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800267e:	4770      	bx	lr

08002680 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002680:	7a80      	ldrb	r0, [r0, #10]
    }
 8002682:	09c0      	lsrs	r0, r0, #7
 8002684:	4770      	bx	lr

08002686 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002686:	4770      	bx	lr

08002688 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002688:	4770      	bx	lr

0800268a <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800268a:	4770      	bx	lr

0800268c <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800268c:	4770      	bx	lr

0800268e <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800268e:	4770      	bx	lr

08002690 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002690:	4770      	bx	lr

08002692 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002692:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002694:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002696:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002698:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800269a:	466d      	mov	r5, sp
 800269c:	4601      	mov	r1, r0
 800269e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80026a2:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80026a4:	4628      	mov	r0, r5
 80026a6:	4798      	blx	r3
 80026a8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80026ac:	343c      	adds	r4, #60	; 0x3c
 80026ae:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80026b2:	b005      	add	sp, #20
 80026b4:	bd30      	pop	{r4, r5, pc}

080026b6 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80026b6:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80026b8:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80026ba:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80026bc:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80026be:	466d      	mov	r5, sp
 80026c0:	4601      	mov	r1, r0
 80026c2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80026c6:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80026c8:	4628      	mov	r0, r5
 80026ca:	4798      	blx	r3
 80026cc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80026d0:	343c      	adds	r4, #60	; 0x3c
 80026d2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80026d6:	b005      	add	sp, #20
 80026d8:	bd30      	pop	{r4, r5, pc}

080026da <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80026da:	2200      	movs	r2, #0
 80026dc:	8002      	strh	r2, [r0, #0]
 80026de:	8042      	strh	r2, [r0, #2]
 80026e0:	8082      	strh	r2, [r0, #4]
 80026e2:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80026e4:	4770      	bx	lr

080026e6 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80026e6:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80026ea:	4770      	bx	lr

080026ec <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80026ec:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80026ee:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80026f0:	4604      	mov	r4, r0
        setX(x);
 80026f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80026f4:	4615      	mov	r5, r2
        setX(x);
 80026f6:	4798      	blx	r3
        setBaselineY(baselineY);
 80026f8:	6823      	ldr	r3, [r4, #0]
 80026fa:	4629      	mov	r1, r5
 80026fc:	4620      	mov	r0, r4
 80026fe:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002700:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002704:	4718      	bx	r3

08002706 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002706:	2000      	movs	r0, #0
 8002708:	4770      	bx	lr

0800270a <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800270a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800270c:	4770      	bx	lr

0800270e <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 800270e:	4770      	bx	lr

08002710 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002710:	4770      	bx	lr

08002712 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002712:	4770      	bx	lr

08002714 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002714:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8002716:	68c2      	ldr	r2, [r0, #12]
 8002718:	6844      	ldr	r4, [r0, #4]
 800271a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800271c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800271e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002722:	07d2      	lsls	r2, r2, #31
 8002724:	bf48      	it	mi
 8002726:	5962      	ldrmi	r2, [r4, r5]
 8002728:	689b      	ldr	r3, [r3, #8]
    }
 800272a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800272c:	bf48      	it	mi
 800272e:	58d3      	ldrmi	r3, [r2, r3]
 8002730:	4718      	bx	r3

08002732 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002732:	6843      	ldr	r3, [r0, #4]
 8002734:	b12b      	cbz	r3, 8002742 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002736:	6883      	ldr	r3, [r0, #8]
 8002738:	b92b      	cbnz	r3, 8002746 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800273a:	68c0      	ldr	r0, [r0, #12]
 800273c:	f000 0001 	and.w	r0, r0, #1
 8002740:	4770      	bx	lr
 8002742:	4618      	mov	r0, r3
 8002744:	4770      	bx	lr
 8002746:	2001      	movs	r0, #1
    }
 8002748:	4770      	bx	lr

0800274a <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800274a:	b510      	push	{r4, lr}
    }
 800274c:	2108      	movs	r1, #8
    virtual ~TypedText()
 800274e:	4604      	mov	r4, r0
    }
 8002750:	f026 ff0d 	bl	802956e <_ZdlPvj>
 8002754:	4620      	mov	r0, r4
 8002756:	bd10      	pop	{r4, pc}

08002758 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002758:	b510      	push	{r4, lr}
 800275a:	214c      	movs	r1, #76	; 0x4c
 800275c:	4604      	mov	r4, r0
 800275e:	f026 ff06 	bl	802956e <_ZdlPvj>
 8002762:	4620      	mov	r0, r4
 8002764:	bd10      	pop	{r4, pc}

08002766 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002766:	b510      	push	{r4, lr}
 8002768:	2110      	movs	r1, #16
 800276a:	4604      	mov	r4, r0
 800276c:	f026 feff 	bl	802956e <_ZdlPvj>
 8002770:	4620      	mov	r0, r4
 8002772:	bd10      	pop	{r4, pc}

08002774 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002774:	b510      	push	{r4, lr}
 8002776:	4b03      	ldr	r3, [pc, #12]	; (8002784 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 8002778:	6003      	str	r3, [r0, #0]
 800277a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800277c:	f011 f97e 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002780:	4620      	mov	r0, r4
 8002782:	bd10      	pop	{r4, pc}
 8002784:	0802bdf0 	.word	0x0802bdf0

08002788 <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002788:	b507      	push	{r0, r1, r2, lr}
 800278a:	4b07      	ldr	r3, [pc, #28]	; (80027a8 <_ZN19CalibrationViewBaseD0Ev+0x20>)
 800278c:	6003      	str	r3, [r0, #0]
 800278e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002790:	f011 f974 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002794:	9801      	ldr	r0, [sp, #4]
 8002796:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800279a:	f026 fee8 	bl	802956e <_ZdlPvj>
 800279e:	9801      	ldr	r0, [sp, #4]
 80027a0:	b003      	add	sp, #12
 80027a2:	f85d fb04 	ldr.w	pc, [sp], #4
 80027a6:	bf00      	nop
 80027a8:	0802bdf0 	.word	0x0802bdf0

080027ac <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80027ac:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80027ae:	f7fe fc35 	bl	800101c <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80027b2:	bd08      	pop	{r3, pc}

080027b4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80027b4:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80027b6:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80027b8:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80027ba:	4b12      	ldr	r3, [pc, #72]	; (8002804 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80027bc:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80027be:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80027c0:	b28d      	uxth	r5, r1
 80027c2:	b92b      	cbnz	r3, 80027d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80027c4:	4b10      	ldr	r3, [pc, #64]	; (8002808 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80027c6:	4a11      	ldr	r2, [pc, #68]	; (800280c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80027c8:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80027ca:	4811      	ldr	r0, [pc, #68]	; (8002810 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80027cc:	f027 fce2 	bl	802a194 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80027d0:	4910      	ldr	r1, [pc, #64]	; (8002814 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80027d2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80027d4:	8809      	ldrh	r1, [r1, #0]
 80027d6:	4291      	cmp	r1, r2
 80027d8:	d803      	bhi.n	80027e2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80027da:	4b0f      	ldr	r3, [pc, #60]	; (8002818 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80027dc:	4a0b      	ldr	r2, [pc, #44]	; (800280c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80027de:	216d      	movs	r1, #109	; 0x6d
 80027e0:	e7f3      	b.n	80027ca <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80027e2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80027e6:	4b0d      	ldr	r3, [pc, #52]	; (800281c <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80027e8:	681b      	ldr	r3, [r3, #0]
 80027ea:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80027ee:	6803      	ldr	r3, [r0, #0]
 80027f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027f2:	4798      	blx	r3
 80027f4:	1a28      	subs	r0, r5, r0
 80027f6:	b201      	sxth	r1, r0
 80027f8:	4633      	mov	r3, r6
 80027fa:	4620      	mov	r0, r4
    }
 80027fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002800:	4718      	bx	r3
 8002802:	bf00      	nop
 8002804:	20012f84 	.word	0x20012f84
 8002808:	0802bb88 	.word	0x0802bb88
 800280c:	0802bbca 	.word	0x0802bbca
 8002810:	0802bc05 	.word	0x0802bc05
 8002814:	20012f88 	.word	0x20012f88
 8002818:	0802bc4c 	.word	0x0802bc4c
 800281c:	20012f8c 	.word	0x20012f8c

08002820 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002820:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8002822:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8002826:	4299      	cmp	r1, r3
{
 8002828:	4604      	mov	r4, r0
 800282a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800282c:	d103      	bne.n	8002836 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800282e:	f012 fe27 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002832:	f001 f921 	bl	8003a78 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8002836:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800283a:	429d      	cmp	r5, r3
 800283c:	d103      	bne.n	8002846 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800283e:	f012 fe1f 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8002842:	f001 f9d9 	bl	8003bf8 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8002846:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800284a:	42a5      	cmp	r5, r4
 800284c:	d105      	bne.n	800285a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800284e:	f012 fe17 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 8002852:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 8002856:	f001 b9df 	b.w	8003c18 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 800285a:	bd38      	pop	{r3, r4, r5, pc}

0800285c <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800285c:	2200      	movs	r2, #0
 800285e:	f04f 31ff 	mov.w	r1, #4294967295
 8002862:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002866:	6082      	str	r2, [r0, #8]
    }
 8002868:	4770      	bx	lr

0800286a <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800286a:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800286c:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800286e:	4604      	mov	r4, r0
        setX(x);
 8002870:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002872:	4615      	mov	r5, r2
        setX(x);
 8002874:	4798      	blx	r3
        setY(y);
 8002876:	6823      	ldr	r3, [r4, #0]
 8002878:	4629      	mov	r1, r5
 800287a:	4620      	mov	r0, r4
 800287c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800287e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002882:	4718      	bx	r3

08002884 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002884:	b570      	push	{r4, r5, r6, lr}
 8002886:	4604      	mov	r4, r0
 8002888:	461d      	mov	r5, r3
 800288a:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 800288e:	f7ff ffec 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002892:	6823      	ldr	r3, [r4, #0]
 8002894:	4629      	mov	r1, r5
 8002896:	4620      	mov	r0, r4
 8002898:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800289a:	4798      	blx	r3
        setHeight(height);
 800289c:	6823      	ldr	r3, [r4, #0]
 800289e:	4631      	mov	r1, r6
 80028a0:	4620      	mov	r0, r4
 80028a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80028a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80028a8:	4718      	bx	r3
	...

080028ac <_ZN8touchgfx6WidgetC1Ev>:
 80028ac:	2200      	movs	r2, #0
 80028ae:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80028b2:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80028b6:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80028ba:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80028be:	f44f 7280 	mov.w	r2, #256	; 0x100
 80028c2:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80028c4:	4a01      	ldr	r2, [pc, #4]	; (80028cc <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80028c6:	6002      	str	r2, [r0, #0]
 80028c8:	4770      	bx	lr
 80028ca:	bf00      	nop
 80028cc:	0802bcd0 	.word	0x0802bcd0

080028d0 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80028d0:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80028d2:	2226      	movs	r2, #38	; 0x26
    TextArea()
 80028d4:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80028d6:	2100      	movs	r1, #0
 80028d8:	f027 fe61 	bl	802a59e <memset>
 80028dc:	4620      	mov	r0, r4
 80028de:	f7ff ffe5 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 80028e2:	4b0a      	ldr	r3, [pc, #40]	; (800290c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80028e4:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80028e6:	4b0a      	ldr	r3, [pc, #40]	; (8002910 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80028e8:	62a3      	str	r3, [r4, #40]	; 0x28
 80028ea:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80028ee:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80028f0:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80028f4:	2300      	movs	r3, #0
 80028f6:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80028fa:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 80028fe:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002902:	8723      	strh	r3, [r4, #56]	; 0x38
 8002904:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002906:	4620      	mov	r0, r4
 8002908:	bd10      	pop	{r4, pc}
 800290a:	bf00      	nop
 800290c:	0802e600 	.word	0x0802e600
 8002910:	0802bd38 	.word	0x0802bd38

08002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002914:	4b1a      	ldr	r3, [pc, #104]	; (8002980 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002916:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002918:	881b      	ldrh	r3, [r3, #0]
 800291a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800291c:	428b      	cmp	r3, r1
    void updateTextPosition()
 800291e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002920:	d92b      	bls.n	800297a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002922:	4b18      	ldr	r3, [pc, #96]	; (8002984 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002924:	681b      	ldr	r3, [r3, #0]
 8002926:	b92b      	cbnz	r3, 8002934 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002928:	4b17      	ldr	r3, [pc, #92]	; (8002988 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800292a:	4a18      	ldr	r2, [pc, #96]	; (800298c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 800292c:	4818      	ldr	r0, [pc, #96]	; (8002990 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 800292e:	216c      	movs	r1, #108	; 0x6c
 8002930:	f027 fc30 	bl	802a194 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002934:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002938:	4b16      	ldr	r3, [pc, #88]	; (8002994 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800293a:	681b      	ldr	r3, [r3, #0]
 800293c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002940:	4b15      	ldr	r3, [pc, #84]	; (8002998 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002942:	6818      	ldr	r0, [r3, #0]
 8002944:	f005 fca6 	bl	8008294 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002948:	682b      	ldr	r3, [r5, #0]
 800294a:	9001      	str	r0, [sp, #4]
 800294c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800294e:	4628      	mov	r0, r5
 8002950:	4798      	blx	r3
 8002952:	682b      	ldr	r3, [r5, #0]
 8002954:	9901      	ldr	r1, [sp, #4]
 8002956:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002958:	4604      	mov	r4, r0
 800295a:	4628      	mov	r0, r5
 800295c:	4798      	blx	r3
 800295e:	682b      	ldr	r3, [r5, #0]
 8002960:	9901      	ldr	r1, [sp, #4]
 8002962:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002964:	fb14 f400 	smulbb	r4, r4, r0
 8002968:	4628      	mov	r0, r5
 800296a:	4798      	blx	r3
 800296c:	b2a4      	uxth	r4, r4
 800296e:	1823      	adds	r3, r4, r0
 8002970:	b21b      	sxth	r3, r3
 8002972:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002976:	b002      	add	sp, #8
 8002978:	bd70      	pop	{r4, r5, r6, pc}
 800297a:	2300      	movs	r3, #0
 800297c:	e7f9      	b.n	8002972 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 800297e:	bf00      	nop
 8002980:	20012f88 	.word	0x20012f88
 8002984:	20012f84 	.word	0x20012f84
 8002988:	0802bb88 	.word	0x0802bb88
 800298c:	0802bbca 	.word	0x0802bbca
 8002990:	0802bc05 	.word	0x0802bc05
 8002994:	20012f8c 	.word	0x20012f8c
 8002998:	20012f90 	.word	0x20012f90

0800299c <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 800299c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80029a0:	ed2d 8b06 	vpush	{d8-d10}
 80029a4:	4604      	mov	r4, r0
 80029a6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 80029a8:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 80029aa:	2500      	movs	r5, #0
 80029ac:	f014 f9e8 	bl	8016d80 <_ZN8touchgfx6ScreenC1Ev>
 80029b0:	4b66      	ldr	r3, [pc, #408]	; (8002b4c <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 80029b2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80029b4:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80029b8:	2226      	movs	r2, #38	; 0x26
 80029ba:	4629      	mov	r1, r5
 80029bc:	4658      	mov	r0, fp
 80029be:	f027 fdee 	bl	802a59e <memset>
 80029c2:	4658      	mov	r0, fp
 80029c4:	f7ff ff72 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 80029c8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80029cc:	26ff      	movs	r6, #255	; 0xff
 80029ce:	4b60      	ldr	r3, [pc, #384]	; (8002b50 <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 80029d0:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 80029d2:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80029d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80029d8:	4629      	mov	r1, r5
 80029da:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80029de:	4650      	mov	r0, sl
        : color(col)
 80029e0:	66a5      	str	r5, [r4, #104]	; 0x68
 80029e2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80029e6:	f027 fdda 	bl	802a59e <memset>
 80029ea:	4650      	mov	r0, sl
 80029ec:	f7ff ff5e 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 80029f0:	4b58      	ldr	r3, [pc, #352]	; (8002b54 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 80029f2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80029f4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80029f8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 80029fc:	a90a      	add	r1, sp, #40	; 0x28
 80029fe:	4650      	mov	r0, sl
 8002a00:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8002a04:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002a08:	f010 f831 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8002a0c:	4648      	mov	r0, r9
 8002a0e:	f7ff ff5f 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8002a12:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8002a16:	4b50      	ldr	r3, [pc, #320]	; (8002b58 <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 8002a18:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8002a1c:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8002a20:	4638      	mov	r0, r7
 8002a22:	f00e feed 	bl	8011800 <_ZN8touchgfx4LineC1Ev>
 8002a26:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002a2a:	4618      	mov	r0, r3
 8002a2c:	9303      	str	r3, [sp, #12]
 8002a2e:	f7fe fb09 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002a32:	4b4a      	ldr	r3, [pc, #296]	; (8002b5c <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 8002a34:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8002a38:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8002a3c:	3324      	adds	r3, #36	; 0x24
 8002a3e:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8002a42:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8002a46:	4640      	mov	r0, r8
 8002a48:	f7ff ff42 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8002a4c:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8002a50:	4618      	mov	r0, r3
 8002a52:	ee08 3a10 	vmov	s16, r3
 8002a56:	f7ff ff3b 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8002a5a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8002a5e:	4618      	mov	r0, r3
 8002a60:	ee08 3a90 	vmov	s17, r3
 8002a64:	f7ff ff34 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8002a68:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8002a6c:	4618      	mov	r0, r3
 8002a6e:	ee09 3a10 	vmov	s18, r3
 8002a72:	f010 f93d 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002a76:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8002a7a:	4618      	mov	r0, r3
 8002a7c:	ee09 3a90 	vmov	s19, r3
 8002a80:	f010 f936 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002a84:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8002a88:	4618      	mov	r0, r3
 8002a8a:	ee0a 3a10 	vmov	s20, r3
 8002a8e:	f010 f92f 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002a92:	4a33      	ldr	r2, [pc, #204]	; (8002b60 <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 8002a94:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002a98:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8002a9c:	4a31      	ldr	r2, [pc, #196]	; (8002b64 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002a9e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002aa2:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8002aa6:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8002aaa:	f010 ffdd 	bl	8013a68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002aae:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002ab2:	462a      	mov	r2, r5
 8002ab4:	4658      	mov	r0, fp
 8002ab6:	9300      	str	r3, [sp, #0]
 8002ab8:	4629      	mov	r1, r5
 8002aba:	23f0      	movs	r3, #240	; 0xf0
 8002abc:	f7ff fee2 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002ac0:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002ac2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002ac6:	66a3      	str	r3, [r4, #104]	; 0x68
 8002ac8:	4659      	mov	r1, fp
 8002aca:	4630      	mov	r0, r6
 8002acc:	f00d fa40 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002ad0:	462a      	mov	r2, r5
 8002ad2:	4650      	mov	r0, sl
 8002ad4:	4629      	mov	r1, r5
 8002ad6:	f7ff fec8 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8002ada:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002adc:	4650      	mov	r0, sl
 8002ade:	a90a      	add	r1, sp, #40	; 0x28
 8002ae0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002ae4:	f00f ffc3 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002ae8:	4651      	mov	r1, sl
 8002aea:	4630      	mov	r0, r6
 8002aec:	f00d fa30 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 8002af0:	f44f 729a 	mov.w	r2, #308	; 0x134
 8002af4:	2159      	movs	r1, #89	; 0x59
 8002af6:	4648      	mov	r0, r9
 8002af8:	f7ff feb7 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002afc:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8002b00:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8002b04:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8002b08:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8002b0c:	4650      	mov	r0, sl
 8002b0e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002b12:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8002b16:	4649      	mov	r1, r9
 8002b18:	4798      	blx	r3
 8002b1a:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8002b1e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002b22:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002b26:	4b10      	ldr	r3, [pc, #64]	; (8002b68 <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 8002b28:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 8002b2a:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8002b2e:	b92b      	cbnz	r3, 8002b3c <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 8002b30:	4b0e      	ldr	r3, [pc, #56]	; (8002b6c <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 8002b32:	4a0f      	ldr	r2, [pc, #60]	; (8002b70 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002b34:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002b36:	480f      	ldr	r0, [pc, #60]	; (8002b74 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 8002b38:	f027 fb2c 	bl	802a194 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002b3c:	4b0e      	ldr	r3, [pc, #56]	; (8002b78 <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002b3e:	881b      	ldrh	r3, [r3, #0]
 8002b40:	2b14      	cmp	r3, #20
 8002b42:	d81d      	bhi.n	8002b80 <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 8002b44:	4b0d      	ldr	r3, [pc, #52]	; (8002b7c <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 8002b46:	4a0a      	ldr	r2, [pc, #40]	; (8002b70 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002b48:	2161      	movs	r1, #97	; 0x61
 8002b4a:	e7f4      	b.n	8002b36 <_ZN19CalibrationViewBaseC1Ev+0x19a>
 8002b4c:	0802bdf0 	.word	0x0802bdf0
 8002b50:	0802e690 	.word	0x0802e690
 8002b54:	0802e858 	.word	0x0802e858
 8002b58:	0802bd48 	.word	0x0802bd48
 8002b5c:	0802e3c4 	.word	0x0802e3c4
 8002b60:	0802bdd8 	.word	0x0802bdd8
 8002b64:	08002821 	.word	0x08002821
 8002b68:	20012f84 	.word	0x20012f84
 8002b6c:	0802bb88 	.word	0x0802bb88
 8002b70:	0802bc8a 	.word	0x0802bc8a
 8002b74:	0802bc05 	.word	0x0802bc05
 8002b78:	20012f88 	.word	0x20012f88
 8002b7c:	0802bc4c 	.word	0x0802bc4c
        return texts->getText(typedTextId);
 8002b80:	4b93      	ldr	r3, [pc, #588]	; (8002dd0 <_ZN19CalibrationViewBaseC1Ev+0x434>)
 8002b82:	2114      	movs	r1, #20
 8002b84:	6818      	ldr	r0, [r3, #0]
 8002b86:	f005 fb85 	bl	8008294 <_ZNK8touchgfx5Texts7getTextEt>
 8002b8a:	4a92      	ldr	r2, [pc, #584]	; (8002dd4 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 8002b8c:	4603      	mov	r3, r0
 8002b8e:	2104      	movs	r1, #4
 8002b90:	4650      	mov	r0, sl
 8002b92:	f015 fde5 	bl	8018760 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8002b96:	4648      	mov	r0, r9
        wc1 = value;
 8002b98:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8002b9c:	f00f fb6c 	bl	8012278 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002ba0:	4b8d      	ldr	r3, [pc, #564]	; (8002dd8 <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 8002ba2:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 8002ba4:	a90a      	add	r1, sp, #40	; 0x28
 8002ba6:	2315      	movs	r3, #21
 8002ba8:	4648      	mov	r0, r9
 8002baa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002bae:	f00f fb83 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002bb2:	4649      	mov	r1, r9
 8002bb4:	4630      	mov	r0, r6
 8002bb6:	f00d f9cb 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002bba:	230a      	movs	r3, #10
 8002bbc:	9300      	str	r3, [sp, #0]
 8002bbe:	2232      	movs	r2, #50	; 0x32
 8002bc0:	23f0      	movs	r3, #240	; 0xf0
 8002bc2:	4629      	mov	r1, r5
 8002bc4:	4638      	mov	r0, r7
 8002bc6:	f7ff fe5d 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 8002bca:	9b03      	ldr	r3, [sp, #12]
 8002bcc:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002bd0:	22a0      	movs	r2, #160	; 0xa0
 8002bd2:	4611      	mov	r1, r2
 8002bd4:	4638      	mov	r0, r7
 8002bd6:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002bda:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8002bde:	f00e ff25 	bl	8011a2c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002be2:	22a0      	movs	r2, #160	; 0xa0
 8002be4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002be8:	4638      	mov	r0, r7
 8002bea:	f00e ff2a 	bl	8011a42 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8002bee:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002bf2:	2b20      	cmp	r3, #32
 8002bf4:	d005      	beq.n	8002c02 <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8002bf6:	2320      	movs	r3, #32
 8002bf8:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 8002bfc:	4638      	mov	r0, r7
 8002bfe:	f00e fe1f 	bl	8011840 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002c02:	4638      	mov	r0, r7
 8002c04:	2101      	movs	r1, #1
 8002c06:	f00e ff27 	bl	8011a58 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002c0a:	4639      	mov	r1, r7
 8002c0c:	4630      	mov	r0, r6
 8002c0e:	ad04      	add	r5, sp, #16
        color = newColor;
 8002c10:	f04f 37ff 	mov.w	r7, #4294967295
 8002c14:	f00d f99c 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8002c18:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 8002c1c:	223c      	movs	r2, #60	; 0x3c
 8002c1e:	4640      	mov	r0, r8
 8002c20:	2146      	movs	r1, #70	; 0x46
 8002c22:	f7ff fe22 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002c26:	4641      	mov	r1, r8
 8002c28:	4628      	mov	r0, r5
        color = newColor;
 8002c2a:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8002c2e:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8002c32:	f00f f8a7 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002c36:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002c3a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8002c3e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002c42:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8002dd8 <_ZN19CalibrationViewBaseC1Ev+0x43c>
 8002c46:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002c4a:	230d      	movs	r3, #13
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 8002c4c:	a90a      	add	r1, sp, #40	; 0x28
 8002c4e:	4640      	mov	r0, r8
 8002c50:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002c54:	f00f fb30 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002c58:	4641      	mov	r1, r8
 8002c5a:	4630      	mov	r0, r6
 8002c5c:	f00d f978 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8002c60:	ee18 0a10 	vmov	r0, s16
 8002c64:	2223      	movs	r2, #35	; 0x23
 8002c66:	2145      	movs	r1, #69	; 0x45
 8002c68:	f7ff fdff 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8002c6c:	ee18 1a10 	vmov	r1, s16
 8002c70:	4628      	mov	r0, r5
        color = newColor;
 8002c72:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8002c76:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8002c7a:	f00f f883 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002c7e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002c82:	ee18 3a10 	vmov	r3, s16
 8002c86:	333c      	adds	r3, #60	; 0x3c
 8002c88:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002c8c:	234a      	movs	r3, #74	; 0x4a
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 8002c8e:	ee18 0a10 	vmov	r0, s16
 8002c92:	a90a      	add	r1, sp, #40	; 0x28
 8002c94:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002c98:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002c9c:	f00f fb0c 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002ca0:	ee18 1a10 	vmov	r1, s16
 8002ca4:	4630      	mov	r0, r6
 8002ca6:	f00d f953 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002caa:	ee18 0a90 	vmov	r0, s17
 8002cae:	220c      	movs	r2, #12
 8002cb0:	2136      	movs	r1, #54	; 0x36
 8002cb2:	f7ff fdda 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8002cb6:	ee18 1a90 	vmov	r1, s17
 8002cba:	4628      	mov	r0, r5
        color = newColor;
 8002cbc:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8002cc0:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8002cc4:	f00f f85e 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002cc8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002ccc:	ee18 3a90 	vmov	r3, s17
 8002cd0:	333c      	adds	r3, #60	; 0x3c
 8002cd2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002cd6:	2349      	movs	r3, #73	; 0x49
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 8002cd8:	ee18 0a90 	vmov	r0, s17
 8002cdc:	a90a      	add	r1, sp, #40	; 0x28
 8002cde:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002ce2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002ce6:	f00f fae7 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002cea:	ee18 1a90 	vmov	r1, s17
 8002cee:	4630      	mov	r0, r6
 8002cf0:	f00d f92e 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8002cf4:	ee19 0a10 	vmov	r0, s18
 8002cf8:	22f0      	movs	r2, #240	; 0xf0
 8002cfa:	2121      	movs	r1, #33	; 0x21
 8002cfc:	f7ff fdb5 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8002d00:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002d04:	aa0a      	add	r2, sp, #40	; 0x28
 8002d06:	f04f 0802 	mov.w	r8, #2
 8002d0a:	a909      	add	r1, sp, #36	; 0x24
 8002d0c:	ee19 0a10 	vmov	r0, s18
 8002d10:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002d14:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8002d18:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002d1c:	f00f fcb1 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002d20:	2348      	movs	r3, #72	; 0x48
 8002d22:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8002d26:	3510      	adds	r5, #16
        updateTextPosition();
 8002d28:	ee19 0a10 	vmov	r0, s18
 8002d2c:	f7ff fdf2 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002d30:	ee19 1a10 	vmov	r1, s18
 8002d34:	4630      	mov	r0, r6
        colorPressed = col;
 8002d36:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002d3a:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8002d3e:	f00d f907 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8002d42:	ee19 0a90 	vmov	r0, s19
 8002d46:	22aa      	movs	r2, #170	; 0xaa
 8002d48:	2121      	movs	r1, #33	; 0x21
 8002d4a:	f7ff fd8e 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002d4e:	aa0a      	add	r2, sp, #40	; 0x28
 8002d50:	a909      	add	r1, sp, #36	; 0x24
 8002d52:	ee19 0a90 	vmov	r0, s19
 8002d56:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002d5a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002d5e:	f00f fc90 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002d62:	2347      	movs	r3, #71	; 0x47
 8002d64:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8002d68:	ee19 0a90 	vmov	r0, s19
 8002d6c:	f7ff fdd2 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002d70:	ee19 1a90 	vmov	r1, s19
 8002d74:	4630      	mov	r0, r6
        colorPressed = col;
 8002d76:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8002d7a:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8002d7e:	f00d f8e7 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8002d82:	ee1a 0a10 	vmov	r0, s20
 8002d86:	2264      	movs	r2, #100	; 0x64
 8002d88:	2121      	movs	r1, #33	; 0x21
 8002d8a:	f7ff fd6e 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002d8e:	aa0a      	add	r2, sp, #40	; 0x28
 8002d90:	a909      	add	r1, sp, #36	; 0x24
 8002d92:	ee1a 0a10 	vmov	r0, s20
 8002d96:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002d9a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002d9e:	f00f fc70 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002da2:	2346      	movs	r3, #70	; 0x46
        updateTextPosition();
 8002da4:	ee1a 0a10 	vmov	r0, s20
 8002da8:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8002dac:	f7ff fdb2 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002db0:	4630      	mov	r0, r6
        colorPressed = col;
 8002db2:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8002db6:	ee1a 1a10 	vmov	r1, s20
 8002dba:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8002dbe:	f00d f8c7 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002dc2:	4620      	mov	r0, r4
 8002dc4:	b00d      	add	sp, #52	; 0x34
 8002dc6:	ecbd 8b06 	vpop	{d8-d10}
 8002dca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002dce:	bf00      	nop
 8002dd0:	20012f90 	.word	0x20012f90
 8002dd4:	0802bcc2 	.word	0x0802bcc2
 8002dd8:	0802bd38 	.word	0x0802bd38

08002ddc <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 8002ddc:	4770      	bx	lr

08002dde <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002dde:	4770      	bx	lr

08002de0 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002de0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002de2:	68c2      	ldr	r2, [r0, #12]
 8002de4:	6844      	ldr	r4, [r0, #4]
 8002de6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002de8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002dea:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002dee:	07d2      	lsls	r2, r2, #31
 8002df0:	bf48      	it	mi
 8002df2:	5962      	ldrmi	r2, [r4, r5]
 8002df4:	689b      	ldr	r3, [r3, #8]
    }
 8002df6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002df8:	bf48      	it	mi
 8002dfa:	58d3      	ldrmi	r3, [r2, r3]
 8002dfc:	4718      	bx	r3

08002dfe <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002dfe:	6843      	ldr	r3, [r0, #4]
 8002e00:	b12b      	cbz	r3, 8002e0e <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002e02:	6883      	ldr	r3, [r0, #8]
 8002e04:	b92b      	cbnz	r3, 8002e12 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002e06:	68c0      	ldr	r0, [r0, #12]
 8002e08:	f000 0001 	and.w	r0, r0, #1
 8002e0c:	4770      	bx	lr
 8002e0e:	4618      	mov	r0, r3
 8002e10:	4770      	bx	lr
 8002e12:	2001      	movs	r0, #1
    }
 8002e14:	4770      	bx	lr

08002e16 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002e16:	b510      	push	{r4, lr}
 8002e18:	2110      	movs	r1, #16
 8002e1a:	4604      	mov	r4, r0
 8002e1c:	f026 fba7 	bl	802956e <_ZdlPvj>
 8002e20:	4620      	mov	r0, r4
 8002e22:	bd10      	pop	{r4, pc}

08002e24 <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002e24:	b510      	push	{r4, lr}
 8002e26:	4b03      	ldr	r3, [pc, #12]	; (8002e34 <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 8002e28:	6003      	str	r3, [r0, #0]
 8002e2a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002e2c:	f010 fe26 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002e30:	4620      	mov	r0, r4
 8002e32:	bd10      	pop	{r4, pc}
 8002e34:	0802be3c 	.word	0x0802be3c

08002e38 <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002e38:	b507      	push	{r0, r1, r2, lr}
 8002e3a:	4b07      	ldr	r3, [pc, #28]	; (8002e58 <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 8002e3c:	6003      	str	r3, [r0, #0]
 8002e3e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002e40:	f010 fe1c 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002e44:	9801      	ldr	r0, [sp, #4]
 8002e46:	f241 015c 	movw	r1, #4188	; 0x105c
 8002e4a:	f026 fb90 	bl	802956e <_ZdlPvj>
 8002e4e:	9801      	ldr	r0, [sp, #4]
 8002e50:	b003      	add	sp, #12
 8002e52:	f85d fb04 	ldr.w	pc, [sp], #4
 8002e56:	bf00      	nop
 8002e58:	0802be3c 	.word	0x0802be3c

08002e5c <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_HallViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002e5c:	3098      	adds	r0, #152	; 0x98
 8002e5e:	4288      	cmp	r0, r1
{
 8002e60:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002e62:	d105      	bne.n	8002e70 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_HallViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002e64:	f012 fb0c 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002e68:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002e6c:	f000 beb4 	b.w	8003bd8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002e70:	bd08      	pop	{r3, pc}
	...

08002e74 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8002e74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e78:	ed2d 8b02 	vpush	{d8}
 8002e7c:	4604      	mov	r4, r0
 8002e7e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_HallViewBase::buttonCallbackHandler)
 8002e80:	46a1      	mov	r9, r4
 8002e82:	2500      	movs	r5, #0
 8002e84:	f013 ff7c 	bl	8016d80 <_ZN8touchgfx6ScreenC1Ev>
 8002e88:	4ba5      	ldr	r3, [pc, #660]	; (8003120 <_ZN24Calibration_HallViewBaseC1Ev+0x2ac>)
 8002e8a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002e8c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002e90:	2226      	movs	r2, #38	; 0x26
 8002e92:	4629      	mov	r1, r5
 8002e94:	4648      	mov	r0, r9
 8002e96:	f027 fb82 	bl	802a59e <memset>
 8002e9a:	4648      	mov	r0, r9
 8002e9c:	f7ff fd06 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 8002ea0:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002ea4:	26ff      	movs	r6, #255	; 0xff
 8002ea6:	4b9f      	ldr	r3, [pc, #636]	; (8003124 <_ZN24Calibration_HallViewBaseC1Ev+0x2b0>)
 8002ea8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002eaa:	2226      	movs	r2, #38	; 0x26
 8002eac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002eb0:	4629      	mov	r1, r5
 8002eb2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002eb6:	4640      	mov	r0, r8
 8002eb8:	66a5      	str	r5, [r4, #104]	; 0x68
 8002eba:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002ebe:	f027 fb6e 	bl	802a59e <memset>
 8002ec2:	4640      	mov	r0, r8
 8002ec4:	f7ff fcf2 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 8002ec8:	4b97      	ldr	r3, [pc, #604]	; (8003128 <_ZN24Calibration_HallViewBaseC1Ev+0x2b4>)
 8002eca:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002ecc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002ed0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002ed4:	a90a      	add	r1, sp, #40	; 0x28
 8002ed6:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002eda:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002edc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002ee0:	f00f fdc5 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002ee4:	4658      	mov	r0, fp
 8002ee6:	f00f ff03 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002eea:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002eee:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8002ef2:	4618      	mov	r0, r3
 8002ef4:	ee08 3a90 	vmov	s17, r3
 8002ef8:	f7ff fcea 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8002efc:	4638      	mov	r0, r7
 8002efe:	f00e fc7f 	bl	8011800 <_ZN8touchgfx4LineC1Ev>
 8002f02:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002f06:	4618      	mov	r0, r3
 8002f08:	9303      	str	r3, [sp, #12]
 8002f0a:	f7fe f89b 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002f0e:	4b87      	ldr	r3, [pc, #540]	; (800312c <_ZN24Calibration_HallViewBaseC1Ev+0x2b8>)
 8002f10:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8002f14:	3324      	adds	r3, #36	; 0x24
 8002f16:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8002f1a:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8002f1e:	4618      	mov	r0, r3
 8002f20:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8002f24:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8002f28:	ee08 3a10 	vmov	s16, r3
 8002f2c:	f7ff fcd0 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8002f30:	4650      	mov	r0, sl
 8002f32:	f7ff fccd 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002f36:	4a7e      	ldr	r2, [pc, #504]	; (8003130 <_ZN24Calibration_HallViewBaseC1Ev+0x2bc>)
 8002f38:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002f3c:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8002f40:	4a7c      	ldr	r2, [pc, #496]	; (8003134 <_ZN24Calibration_HallViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002f42:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002f46:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8002f4a:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8002f4e:	f010 fd8b 	bl	8013a68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002f52:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002f56:	462a      	mov	r2, r5
 8002f58:	4648      	mov	r0, r9
 8002f5a:	9300      	str	r3, [sp, #0]
 8002f5c:	4629      	mov	r1, r5
 8002f5e:	23f0      	movs	r3, #240	; 0xf0
 8002f60:	f7ff fc90 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002f64:	1d26      	adds	r6, r4, #4
        color = newColor;
 8002f66:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002f6a:	66a3      	str	r3, [r4, #104]	; 0x68
 8002f6c:	4649      	mov	r1, r9
 8002f6e:	4630      	mov	r0, r6
 8002f70:	f00c ffee 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002f74:	462a      	mov	r2, r5
 8002f76:	4640      	mov	r0, r8
 8002f78:	4629      	mov	r1, r5
 8002f7a:	f7ff fc76 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8002f7e:	f04f 0909 	mov.w	r9, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002f82:	4640      	mov	r0, r8
 8002f84:	a90a      	add	r1, sp, #40	; 0x28
 8002f86:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8002f8a:	f00f fd70 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002f8e:	4641      	mov	r1, r8
 8002f90:	4630      	mov	r0, r6
 8002f92:	f00c ffdd 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002f96:	4658      	mov	r0, fp
 8002f98:	f240 1201 	movw	r2, #257	; 0x101
 8002f9c:	2121      	movs	r1, #33	; 0x21
 8002f9e:	f7ff fc64 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8002fa2:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002fa4:	aa0a      	add	r2, sp, #40	; 0x28
 8002fa6:	a909      	add	r1, sp, #36	; 0x24
 8002fa8:	4658      	mov	r0, fp
 8002faa:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002fae:	2302      	movs	r3, #2
 8002fb0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002fb4:	f00f fb65 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8002fb8:	4658      	mov	r0, fp
 8002fba:	f8a4 90d0 	strh.w	r9, [r4, #208]	; 0xd0
 8002fbe:	f7ff fca9 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8002fc2:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8002fc6:	330c      	adds	r3, #12
        color = col;
 8002fc8:	f04f 39ff 	mov.w	r9, #4294967295
 8002fcc:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002fd0:	4659      	mov	r1, fp
 8002fd2:	4630      	mov	r0, r6
        colorPressed = col;
 8002fd4:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8002fd8:	f00c ffba 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002fdc:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(32, 60);
 8002fe0:	223c      	movs	r2, #60	; 0x3c
 8002fe2:	ee18 0a90 	vmov	r0, s17
 8002fe6:	2120      	movs	r1, #32
 8002fe8:	f7ff fc3f 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8002fec:	ee18 1a90 	vmov	r1, s17
 8002ff0:	4640      	mov	r0, r8
        color = newColor;
 8002ff2:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8002ff6:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8002ffa:	f00e fec3 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002ffe:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003002:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8003006:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800300a:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8003138 <_ZN24Calibration_HallViewBaseC1Ev+0x2c4>
 800300e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003012:	230a      	movs	r3, #10
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 8003014:	ee18 0a90 	vmov	r0, s17
 8003018:	a90a      	add	r1, sp, #40	; 0x28
 800301a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800301e:	f00f f94b 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003022:	ee18 1a90 	vmov	r1, s17
 8003026:	4630      	mov	r0, r6
 8003028:	f00c ff92 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800302c:	230a      	movs	r3, #10
 800302e:	9300      	str	r3, [sp, #0]
 8003030:	2232      	movs	r2, #50	; 0x32
 8003032:	23f0      	movs	r3, #240	; 0xf0
 8003034:	4629      	mov	r1, r5
 8003036:	4638      	mov	r0, r7
 8003038:	f7ff fc24 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 800303c:	9b03      	ldr	r3, [sp, #12]
 800303e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003042:	22a0      	movs	r2, #160	; 0xa0
 8003044:	4611      	mov	r1, r2
 8003046:	4638      	mov	r0, r7
 8003048:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 800304c:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8003050:	f00e fcec 	bl	8011a2c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003054:	22a0      	movs	r2, #160	; 0xa0
 8003056:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800305a:	4638      	mov	r0, r7
 800305c:	f00e fcf1 	bl	8011a42 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8003060:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8003064:	2b20      	cmp	r3, #32
 8003066:	d005      	beq.n	8003074 <_ZN24Calibration_HallViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8003068:	2320      	movs	r3, #32
 800306a:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 800306e:	4638      	mov	r0, r7
 8003070:	f00e fbe6 	bl	8011840 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003074:	4638      	mov	r0, r7
 8003076:	2101      	movs	r1, #1
 8003078:	f00e fcee 	bl	8011a58 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800307c:	4639      	mov	r1, r7
 800307e:	4630      	mov	r0, r6
 8003080:	f00c ff66 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003084:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8003088:	ee18 0a10 	vmov	r0, s16
 800308c:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800308e:	2500      	movs	r5, #0
 8003090:	2145      	movs	r1, #69	; 0x45
 8003092:	f7ff fbea 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003096:	ee18 1a10 	vmov	r1, s16
 800309a:	4640      	mov	r0, r8
        color = newColor;
 800309c:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 80030a0:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80030a4:	f00e fe6e 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80030a8:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80030ac:	ee18 3a10 	vmov	r3, s16
 80030b0:	333c      	adds	r3, #60	; 0x3c
 80030b2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80030b6:	230b      	movs	r3, #11
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 80030b8:	ee18 0a10 	vmov	r0, s16
 80030bc:	a90a      	add	r1, sp, #40	; 0x28
 80030be:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80030c2:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80030c6:	f00f f8f7 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80030ca:	ee18 1a10 	vmov	r1, s16
 80030ce:	4630      	mov	r0, r6
 80030d0:	f00c ff3e 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80030d4:	220c      	movs	r2, #12
 80030d6:	4650      	mov	r0, sl
 80030d8:	2136      	movs	r1, #54	; 0x36
 80030da:	f7ff fbc6 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 80030de:	4651      	mov	r1, sl
 80030e0:	4640      	mov	r0, r8
        color = newColor;
 80030e2:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 80030e6:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80030ea:	f00e fe4b 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80030ee:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80030f2:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80030f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80030fa:	230c      	movs	r3, #12
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 80030fc:	a90a      	add	r1, sp, #40	; 0x28
 80030fe:	4650      	mov	r0, sl
 8003100:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003104:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003108:	f00f f8d6 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800310c:	4630      	mov	r0, r6
 800310e:	4651      	mov	r1, sl
 8003110:	f00c ff1e 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003114:	4620      	mov	r0, r4
 8003116:	b00d      	add	sp, #52	; 0x34
 8003118:	ecbd 8b02 	vpop	{d8}
 800311c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003120:	0802be3c 	.word	0x0802be3c
 8003124:	0802e690 	.word	0x0802e690
 8003128:	0802e858 	.word	0x0802e858
 800312c:	0802e3c4 	.word	0x0802e3c4
 8003130:	0802be24 	.word	0x0802be24
 8003134:	08002e5d 	.word	0x08002e5d
 8003138:	0802bd38 	.word	0x0802bd38

0800313c <_ZN23Calibration_PadViewBase11setupScreenEv>:
}

void Calibration_PadViewBase::setupScreen()
{

}
 800313c:	4770      	bx	lr

0800313e <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800313e:	4770      	bx	lr

08003140 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003140:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003142:	68c2      	ldr	r2, [r0, #12]
 8003144:	6844      	ldr	r4, [r0, #4]
 8003146:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003148:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800314a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800314e:	07d2      	lsls	r2, r2, #31
 8003150:	bf48      	it	mi
 8003152:	5962      	ldrmi	r2, [r4, r5]
 8003154:	689b      	ldr	r3, [r3, #8]
    }
 8003156:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003158:	bf48      	it	mi
 800315a:	58d3      	ldrmi	r3, [r2, r3]
 800315c:	4718      	bx	r3

0800315e <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800315e:	6843      	ldr	r3, [r0, #4]
 8003160:	b12b      	cbz	r3, 800316e <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003162:	6883      	ldr	r3, [r0, #8]
 8003164:	b92b      	cbnz	r3, 8003172 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003166:	68c0      	ldr	r0, [r0, #12]
 8003168:	f000 0001 	and.w	r0, r0, #1
 800316c:	4770      	bx	lr
 800316e:	4618      	mov	r0, r3
 8003170:	4770      	bx	lr
 8003172:	2001      	movs	r0, #1
    }
 8003174:	4770      	bx	lr

08003176 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003176:	b510      	push	{r4, lr}
 8003178:	2110      	movs	r1, #16
 800317a:	4604      	mov	r4, r0
 800317c:	f026 f9f7 	bl	802956e <_ZdlPvj>
 8003180:	4620      	mov	r0, r4
 8003182:	bd10      	pop	{r4, pc}

08003184 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003184:	b510      	push	{r4, lr}
 8003186:	4b03      	ldr	r3, [pc, #12]	; (8003194 <_ZN23Calibration_PadViewBaseD1Ev+0x10>)
 8003188:	6003      	str	r3, [r0, #0]
 800318a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800318c:	f010 fc76 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003190:	4620      	mov	r0, r4
 8003192:	bd10      	pop	{r4, pc}
 8003194:	0802be88 	.word	0x0802be88

08003198 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003198:	b507      	push	{r0, r1, r2, lr}
 800319a:	4b07      	ldr	r3, [pc, #28]	; (80031b8 <_ZN23Calibration_PadViewBaseD0Ev+0x20>)
 800319c:	6003      	str	r3, [r0, #0]
 800319e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80031a0:	f010 fc6c 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80031a4:	9801      	ldr	r0, [sp, #4]
 80031a6:	f241 015c 	movw	r1, #4188	; 0x105c
 80031aa:	f026 f9e0 	bl	802956e <_ZdlPvj>
 80031ae:	9801      	ldr	r0, [sp, #4]
 80031b0:	b003      	add	sp, #12
 80031b2:	f85d fb04 	ldr.w	pc, [sp], #4
 80031b6:	bf00      	nop
 80031b8:	0802be88 	.word	0x0802be88

080031bc <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_PadViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80031bc:	3098      	adds	r0, #152	; 0x98
 80031be:	4288      	cmp	r0, r1
{
 80031c0:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80031c2:	d105      	bne.n	80031d0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_PadViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80031c4:	f012 f95c 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 80031c8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 80031cc:	f000 bd04 	b.w	8003bd8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 80031d0:	bd08      	pop	{r3, pc}
	...

080031d4 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 80031d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80031d8:	ed2d 8b02 	vpush	{d8}
 80031dc:	4604      	mov	r4, r0
 80031de:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 80031e0:	46a1      	mov	r9, r4
 80031e2:	2500      	movs	r5, #0
 80031e4:	f013 fdcc 	bl	8016d80 <_ZN8touchgfx6ScreenC1Ev>
 80031e8:	4ba5      	ldr	r3, [pc, #660]	; (8003480 <_ZN23Calibration_PadViewBaseC1Ev+0x2ac>)
 80031ea:	63e5      	str	r5, [r4, #60]	; 0x3c
 80031ec:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80031f0:	2226      	movs	r2, #38	; 0x26
 80031f2:	4629      	mov	r1, r5
 80031f4:	4648      	mov	r0, r9
 80031f6:	f027 f9d2 	bl	802a59e <memset>
 80031fa:	4648      	mov	r0, r9
 80031fc:	f7ff fb56 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 8003200:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8003204:	26ff      	movs	r6, #255	; 0xff
 8003206:	4b9f      	ldr	r3, [pc, #636]	; (8003484 <_ZN23Calibration_PadViewBaseC1Ev+0x2b0>)
 8003208:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800320a:	2226      	movs	r2, #38	; 0x26
 800320c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003210:	4629      	mov	r1, r5
 8003212:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8003216:	4640      	mov	r0, r8
 8003218:	66a5      	str	r5, [r4, #104]	; 0x68
 800321a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800321e:	f027 f9be 	bl	802a59e <memset>
 8003222:	4640      	mov	r0, r8
 8003224:	f7ff fb42 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 8003228:	4b97      	ldr	r3, [pc, #604]	; (8003488 <_ZN23Calibration_PadViewBaseC1Ev+0x2b4>)
 800322a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800322c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8003230:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003234:	a90a      	add	r1, sp, #40	; 0x28
 8003236:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 800323a:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 800323c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003240:	f00f fc15 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003244:	4658      	mov	r0, fp
 8003246:	f00f fd53 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800324a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800324e:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8003252:	4618      	mov	r0, r3
 8003254:	ee08 3a90 	vmov	s17, r3
 8003258:	f7ff fb3a 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 800325c:	4638      	mov	r0, r7
 800325e:	f00e facf 	bl	8011800 <_ZN8touchgfx4LineC1Ev>
 8003262:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003266:	4618      	mov	r0, r3
 8003268:	9303      	str	r3, [sp, #12]
 800326a:	f7fd feeb 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800326e:	4b87      	ldr	r3, [pc, #540]	; (800348c <_ZN23Calibration_PadViewBaseC1Ev+0x2b8>)
 8003270:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8003274:	3324      	adds	r3, #36	; 0x24
 8003276:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800327a:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 800327e:	4618      	mov	r0, r3
 8003280:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8003284:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8003288:	ee08 3a10 	vmov	s16, r3
 800328c:	f7ff fb20 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8003290:	4650      	mov	r0, sl
 8003292:	f7ff fb1d 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003296:	4a7e      	ldr	r2, [pc, #504]	; (8003490 <_ZN23Calibration_PadViewBaseC1Ev+0x2bc>)
 8003298:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800329c:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 80032a0:	4a7c      	ldr	r2, [pc, #496]	; (8003494 <_ZN23Calibration_PadViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80032a2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80032a6:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 80032aa:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80032ae:	f010 fbdb 	bl	8013a68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80032b2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80032b6:	462a      	mov	r2, r5
 80032b8:	4648      	mov	r0, r9
 80032ba:	9300      	str	r3, [sp, #0]
 80032bc:	4629      	mov	r1, r5
 80032be:	23f0      	movs	r3, #240	; 0xf0
 80032c0:	f7ff fae0 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 80032c4:	1d26      	adds	r6, r4, #4
        color = newColor;
 80032c6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80032ca:	66a3      	str	r3, [r4, #104]	; 0x68
 80032cc:	4649      	mov	r1, r9
 80032ce:	4630      	mov	r0, r6
 80032d0:	f00c fe3e 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80032d4:	462a      	mov	r2, r5
 80032d6:	4640      	mov	r0, r8
 80032d8:	4629      	mov	r1, r5
 80032da:	f7ff fac6 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 80032de:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80032e0:	4640      	mov	r0, r8
 80032e2:	a90a      	add	r1, sp, #40	; 0x28
 80032e4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80032e8:	f00f fbc1 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80032ec:	4641      	mov	r1, r8
 80032ee:	4630      	mov	r0, r6
 80032f0:	f00c fe2e 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80032f4:	4658      	mov	r0, fp
 80032f6:	f240 1201 	movw	r2, #257	; 0x101
 80032fa:	2121      	movs	r1, #33	; 0x21
 80032fc:	f7ff fab5 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8003300:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003302:	aa0a      	add	r2, sp, #40	; 0x28
 8003304:	a909      	add	r1, sp, #36	; 0x24
 8003306:	4658      	mov	r0, fp
 8003308:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800330c:	2302      	movs	r3, #2
 800330e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003312:	f00f f9b6 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003316:	230f      	movs	r3, #15
        updateTextPosition();
 8003318:	4658      	mov	r0, fp
 800331a:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800331e:	f7ff faf9 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8003322:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8003326:	330c      	adds	r3, #12
        color = col;
 8003328:	f04f 39ff 	mov.w	r9, #4294967295
 800332c:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8003330:	4659      	mov	r1, fp
 8003332:	4630      	mov	r0, r6
        colorPressed = col;
 8003334:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8003338:	f00c fe0a 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800333c:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(58, 60);
 8003340:	223c      	movs	r2, #60	; 0x3c
 8003342:	ee18 0a90 	vmov	r0, s17
 8003346:	213a      	movs	r1, #58	; 0x3a
 8003348:	f7ff fa8f 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 800334c:	ee18 1a90 	vmov	r1, s17
 8003350:	4640      	mov	r0, r8
        color = newColor;
 8003352:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8003356:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800335a:	f00e fd13 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800335e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003362:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8003366:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800336a:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8003498 <_ZN23Calibration_PadViewBaseC1Ev+0x2c4>
 800336e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003372:	230e      	movs	r3, #14
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8003374:	ee18 0a90 	vmov	r0, s17
 8003378:	a90a      	add	r1, sp, #40	; 0x28
 800337a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800337e:	f00e ff9b 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003382:	ee18 1a90 	vmov	r1, s17
 8003386:	4630      	mov	r0, r6
 8003388:	f00c fde2 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800338c:	230a      	movs	r3, #10
 800338e:	9300      	str	r3, [sp, #0]
 8003390:	2232      	movs	r2, #50	; 0x32
 8003392:	23f0      	movs	r3, #240	; 0xf0
 8003394:	4629      	mov	r1, r5
 8003396:	4638      	mov	r0, r7
 8003398:	f7ff fa74 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 800339c:	9b03      	ldr	r3, [sp, #12]
 800339e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80033a2:	22a0      	movs	r2, #160	; 0xa0
 80033a4:	4611      	mov	r1, r2
 80033a6:	4638      	mov	r0, r7
 80033a8:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80033ac:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80033b0:	f00e fb3c 	bl	8011a2c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80033b4:	22a0      	movs	r2, #160	; 0xa0
 80033b6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80033ba:	4638      	mov	r0, r7
 80033bc:	f00e fb41 	bl	8011a42 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80033c0:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80033c4:	2b20      	cmp	r3, #32
 80033c6:	d005      	beq.n	80033d4 <_ZN23Calibration_PadViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 80033c8:	2320      	movs	r3, #32
 80033ca:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80033ce:	4638      	mov	r0, r7
 80033d0:	f00e fa36 	bl	8011840 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80033d4:	4638      	mov	r0, r7
 80033d6:	2101      	movs	r1, #1
 80033d8:	f00e fb3e 	bl	8011a58 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80033dc:	4639      	mov	r1, r7
 80033de:	4630      	mov	r0, r6
 80033e0:	f00c fdb6 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80033e4:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 80033e8:	ee18 0a10 	vmov	r0, s16
 80033ec:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80033ee:	2500      	movs	r5, #0
 80033f0:	2145      	movs	r1, #69	; 0x45
 80033f2:	f7ff fa3a 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80033f6:	ee18 1a10 	vmov	r1, s16
 80033fa:	4640      	mov	r0, r8
        color = newColor;
 80033fc:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8003400:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8003404:	f00e fcbe 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003408:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800340c:	ee18 3a10 	vmov	r3, s16
 8003410:	333c      	adds	r3, #60	; 0x3c
 8003412:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003416:	2310      	movs	r3, #16
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8003418:	ee18 0a10 	vmov	r0, s16
 800341c:	a90a      	add	r1, sp, #40	; 0x28
 800341e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003422:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003426:	f00e ff47 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800342a:	ee18 1a10 	vmov	r1, s16
 800342e:	4630      	mov	r0, r6
 8003430:	f00c fd8e 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003434:	220c      	movs	r2, #12
 8003436:	4650      	mov	r0, sl
 8003438:	2136      	movs	r1, #54	; 0x36
 800343a:	f7ff fa16 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 800343e:	4651      	mov	r1, sl
 8003440:	4640      	mov	r0, r8
        color = newColor;
 8003442:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8003446:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800344a:	f00e fc9b 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800344e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003452:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8003456:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800345a:	2311      	movs	r3, #17
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 800345c:	a90a      	add	r1, sp, #40	; 0x28
 800345e:	4650      	mov	r0, sl
 8003460:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003464:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003468:	f00e ff26 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800346c:	4630      	mov	r0, r6
 800346e:	4651      	mov	r1, sl
 8003470:	f00c fd6e 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003474:	4620      	mov	r0, r4
 8003476:	b00d      	add	sp, #52	; 0x34
 8003478:	ecbd 8b02 	vpop	{d8}
 800347c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003480:	0802be88 	.word	0x0802be88
 8003484:	0802e690 	.word	0x0802e690
 8003488:	0802e858 	.word	0x0802e858
 800348c:	0802e3c4 	.word	0x0802e3c4
 8003490:	0802be70 	.word	0x0802be70
 8003494:	080031bd 	.word	0x080031bd
 8003498:	0802bd38 	.word	0x0802bd38

0800349c <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 800349c:	4770      	bx	lr

0800349e <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800349e:	4770      	bx	lr

080034a0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80034a0:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80034a4:	6808      	ldr	r0, [r1, #0]
 80034a6:	6849      	ldr	r1, [r1, #4]
 80034a8:	c303      	stmia	r3!, {r0, r1}
    }
 80034aa:	4770      	bx	lr

080034ac <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80034ac:	4770      	bx	lr

080034ae <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80034ae:	4770      	bx	lr

080034b0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80034b0:	6041      	str	r1, [r0, #4]
    }
 80034b2:	4770      	bx	lr

080034b4 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80034b4:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80034b6:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80034b8:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80034bc:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80034c0:	8002      	strh	r2, [r0, #0]
 80034c2:	8042      	strh	r2, [r0, #2]
 80034c4:	8084      	strh	r4, [r0, #4]
 80034c6:	80c1      	strh	r1, [r0, #6]
        }
 80034c8:	bd10      	pop	{r4, pc}

080034ca <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 80034ca:	4770      	bx	lr

080034cc <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80034cc:	4770      	bx	lr
	...

080034d0 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80034d0:	4b06      	ldr	r3, [pc, #24]	; (80034ec <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80034d2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80034d6:	2300      	movs	r3, #0
 80034d8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80034dc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80034e0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80034e4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 80034e8:	4770      	bx	lr
 80034ea:	bf00      	nop
 80034ec:	0800388d 	.word	0x0800388d

080034f0 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80034f0:	2301      	movs	r3, #1
 80034f2:	7203      	strb	r3, [r0, #8]
    }
 80034f4:	4770      	bx	lr

080034f6 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 80034f6:	4770      	bx	lr

080034f8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 80034f8:	4770      	bx	lr

080034fa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 80034fa:	4770      	bx	lr

080034fc <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80034fc:	4770      	bx	lr

080034fe <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80034fe:	4770      	bx	lr

08003500 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8003500:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8003502:	6840      	ldr	r0, [r0, #4]
 8003504:	6803      	ldr	r3, [r0, #0]
 8003506:	3110      	adds	r1, #16
 8003508:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800350a:	4718      	bx	r3

0800350c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 800350c:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800350e:	6840      	ldr	r0, [r0, #4]
 8003510:	6803      	ldr	r3, [r0, #0]
 8003512:	3110      	adds	r1, #16
 8003514:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003516:	4718      	bx	r3

08003518 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8003518:	4770      	bx	lr

0800351a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800351a:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 800351c:	6840      	ldr	r0, [r0, #4]
 800351e:	6803      	ldr	r3, [r0, #0]
 8003520:	3110      	adds	r1, #16
 8003522:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003524:	4718      	bx	r3

08003526 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8003526:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8003528:	6840      	ldr	r0, [r0, #4]
 800352a:	6803      	ldr	r3, [r0, #0]
 800352c:	3110      	adds	r1, #16
 800352e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003530:	4718      	bx	r3

08003532 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8003532:	4770      	bx	lr

08003534 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8003534:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8003536:	68c2      	ldr	r2, [r0, #12]
 8003538:	6841      	ldr	r1, [r0, #4]
 800353a:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800353c:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800353e:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003542:	07d2      	lsls	r2, r2, #31
 8003544:	bf48      	it	mi
 8003546:	590a      	ldrmi	r2, [r1, r4]
 8003548:	689b      	ldr	r3, [r3, #8]
    }
 800354a:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800354e:	bf48      	it	mi
 8003550:	58d3      	ldrmi	r3, [r2, r3]
 8003552:	4718      	bx	r3

08003554 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8003554:	6843      	ldr	r3, [r0, #4]
 8003556:	b12b      	cbz	r3, 8003564 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8003558:	6883      	ldr	r3, [r0, #8]
 800355a:	b92b      	cbnz	r3, 8003568 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800355c:	68c0      	ldr	r0, [r0, #12]
 800355e:	f000 0001 	and.w	r0, r0, #1
 8003562:	4770      	bx	lr
 8003564:	4618      	mov	r0, r3
 8003566:	4770      	bx	lr
 8003568:	2001      	movs	r0, #1
    }
 800356a:	4770      	bx	lr

0800356c <_ZN8touchgfx12NoTransitionD0Ev>:
 800356c:	b510      	push	{r4, lr}
 800356e:	210c      	movs	r1, #12
 8003570:	4604      	mov	r4, r0
 8003572:	f025 fffc 	bl	802956e <_ZdlPvj>
 8003576:	4620      	mov	r0, r4
 8003578:	bd10      	pop	{r4, pc}

0800357a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800357a:	b510      	push	{r4, lr}
 800357c:	2110      	movs	r1, #16
 800357e:	4604      	mov	r4, r0
 8003580:	f025 fff5 	bl	802956e <_ZdlPvj>
 8003584:	4620      	mov	r0, r4
 8003586:	bd10      	pop	{r4, pc}

08003588 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8003588:	b510      	push	{r4, lr}
 800358a:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800358e:	4604      	mov	r4, r0
 8003590:	f025 ffed 	bl	802956e <_ZdlPvj>
 8003594:	4620      	mov	r0, r4
 8003596:	bd10      	pop	{r4, pc}

08003598 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 8003598:	b510      	push	{r4, lr}
 800359a:	2138      	movs	r1, #56	; 0x38
 800359c:	4604      	mov	r4, r0
 800359e:	f025 ffe6 	bl	802956e <_ZdlPvj>
 80035a2:	4620      	mov	r0, r4
 80035a4:	bd10      	pop	{r4, pc}

080035a6 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80035a6:	b510      	push	{r4, lr}
 80035a8:	2128      	movs	r1, #40	; 0x28
 80035aa:	4604      	mov	r4, r0
 80035ac:	f025 ffdf 	bl	802956e <_ZdlPvj>
 80035b0:	4620      	mov	r0, r4
 80035b2:	bd10      	pop	{r4, pc}

080035b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80035b4:	b510      	push	{r4, lr}
 80035b6:	2138      	movs	r1, #56	; 0x38
 80035b8:	4604      	mov	r4, r0
 80035ba:	f025 ffd8 	bl	802956e <_ZdlPvj>
 80035be:	4620      	mov	r0, r4
 80035c0:	bd10      	pop	{r4, pc}

080035c2 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80035c2:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80035c4:	f011 ff5c 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
 80035c8:	6803      	ldr	r3, [r0, #0]
    }
 80035ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80035ce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80035d0:	4718      	bx	r3
	...

080035d4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80035d4:	b513      	push	{r0, r1, r4, lr}
 80035d6:	4604      	mov	r4, r0
        animationCounter++;
 80035d8:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80035da:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80035dc:	3001      	adds	r0, #1
 80035de:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80035e0:	4298      	cmp	r0, r3
        animationCounter++;
 80035e2:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80035e4:	d905      	bls.n	80035f2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 80035e6:	2301      	movs	r3, #1
 80035e8:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80035ea:	2300      	movs	r3, #0
 80035ec:	72a3      	strb	r3, [r4, #10]
    }
 80035ee:	b002      	add	sp, #8
 80035f0:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80035f2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80035f6:	2100      	movs	r1, #0
 80035f8:	f013 fd74 	bl	80170e4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80035fc:	f010 0201 	ands.w	r2, r0, #1
 8003600:	b283      	uxth	r3, r0
 8003602:	d12a      	bne.n	800365a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003604:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003606:	4a19      	ldr	r2, [pc, #100]	; (800366c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8003608:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 800360c:	89e3      	ldrh	r3, [r4, #14]
 800360e:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8003610:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8003614:	82a0      	strh	r0, [r4, #20]
 8003616:	2000      	movs	r0, #0
 8003618:	1ad2      	subs	r2, r2, r3
 800361a:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 800361e:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8003620:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8003622:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003624:	4a12      	ldr	r2, [pc, #72]	; (8003670 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8003626:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800362a:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 800362c:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8003630:	691b      	ldr	r3, [r3, #16]
 8003632:	f8ad 1000 	strh.w	r1, [sp]
 8003636:	f8ad 2006 	strh.w	r2, [sp, #6]
 800363a:	4669      	mov	r1, sp
 800363c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800363e:	7aa3      	ldrb	r3, [r4, #10]
 8003640:	2b01      	cmp	r3, #1
 8003642:	d1d4      	bne.n	80035ee <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8003644:	4b0b      	ldr	r3, [pc, #44]	; (8003674 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8003646:	781b      	ldrb	r3, [r3, #0]
 8003648:	2b00      	cmp	r3, #0
 800364a:	d0d0      	beq.n	80035ee <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800364c:	f011 ff18 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003650:	b002      	add	sp, #8
 8003652:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003656:	f011 bf19 	b.w	801548c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800365a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800365e:	2800      	cmp	r0, #0
 8003660:	bfd8      	it	le
 8003662:	460a      	movle	r2, r1
 8003664:	4413      	add	r3, r2
 8003666:	81e3      	strh	r3, [r4, #14]
 8003668:	e7cd      	b.n	8003606 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 800366a:	bf00      	nop
 800366c:	20012f20 	.word	0x20012f20
 8003670:	20012f22 	.word	0x20012f22
 8003674:	20012f2a 	.word	0x20012f2a

08003678 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003678:	b510      	push	{r4, lr}
 800367a:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800367c:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003680:	b158      	cbz	r0, 800369a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8003682:	6803      	ldr	r3, [r0, #0]
 8003684:	68db      	ldr	r3, [r3, #12]
 8003686:	4798      	blx	r3
 8003688:	b138      	cbz	r0, 800369a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800368a:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800368e:	6803      	ldr	r3, [r0, #0]
 8003690:	689b      	ldr	r3, [r3, #8]
 8003692:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8003694:	2300      	movs	r3, #0
 8003696:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 800369a:	bd10      	pop	{r4, pc}

0800369c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 800369c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80036a0:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80036a4:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80036a6:	68a8      	ldr	r0, [r5, #8]
 80036a8:	6803      	ldr	r3, [r0, #0]
 80036aa:	6a1b      	ldr	r3, [r3, #32]
 80036ac:	4798      	blx	r3
 80036ae:	2897      	cmp	r0, #151	; 0x97
 80036b0:	d805      	bhi.n	80036be <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80036b2:	4b46      	ldr	r3, [pc, #280]	; (80037cc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80036b4:	4a46      	ldr	r2, [pc, #280]	; (80037d0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80036b6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80036b8:	4846      	ldr	r0, [pc, #280]	; (80037d4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80036ba:	f026 fd6b 	bl	802a194 <__assert_func>
 80036be:	6868      	ldr	r0, [r5, #4]
 80036c0:	6803      	ldr	r3, [r0, #0]
 80036c2:	6a1b      	ldr	r3, [r3, #32]
 80036c4:	4798      	blx	r3
 80036c6:	280f      	cmp	r0, #15
 80036c8:	d803      	bhi.n	80036d2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80036ca:	4b43      	ldr	r3, [pc, #268]	; (80037d8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80036cc:	4a40      	ldr	r2, [pc, #256]	; (80037d0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80036ce:	21a4      	movs	r1, #164	; 0xa4
 80036d0:	e7f2      	b.n	80036b8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80036d2:	68e8      	ldr	r0, [r5, #12]
 80036d4:	6803      	ldr	r3, [r0, #0]
 80036d6:	6a1b      	ldr	r3, [r3, #32]
 80036d8:	4798      	blx	r3
 80036da:	280b      	cmp	r0, #11
 80036dc:	d803      	bhi.n	80036e6 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 80036de:	4b3f      	ldr	r3, [pc, #252]	; (80037dc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 80036e0:	4a3b      	ldr	r2, [pc, #236]	; (80037d0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80036e2:	21a5      	movs	r1, #165	; 0xa5
 80036e4:	e7e8      	b.n	80036b8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80036e6:	f011 fecb 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80036ea:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80037e4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80036ee:	3004      	adds	r0, #4
 80036f0:	f011 ff2c 	bl	801554c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80036f4:	f8d9 0000 	ldr.w	r0, [r9]
 80036f8:	b110      	cbz	r0, 8003700 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80036fa:	6803      	ldr	r3, [r0, #0]
 80036fc:	68db      	ldr	r3, [r3, #12]
 80036fe:	4798      	blx	r3
    if (*currentTrans)
 8003700:	f8d9 0000 	ldr.w	r0, [r9]
 8003704:	b110      	cbz	r0, 800370c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8003706:	6803      	ldr	r3, [r0, #0]
 8003708:	681b      	ldr	r3, [r3, #0]
 800370a:	4798      	blx	r3
    if (*currentScreen)
 800370c:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80037e8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8003710:	f8d8 0000 	ldr.w	r0, [r8]
 8003714:	b110      	cbz	r0, 800371c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8003716:	6803      	ldr	r3, [r0, #0]
 8003718:	695b      	ldr	r3, [r3, #20]
 800371a:	4798      	blx	r3
    if (*currentPresenter)
 800371c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003720:	b110      	cbz	r0, 8003728 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8003722:	6803      	ldr	r3, [r0, #0]
 8003724:	685b      	ldr	r3, [r3, #4]
 8003726:	4798      	blx	r3
    if (*currentScreen)
 8003728:	f8d8 0000 	ldr.w	r0, [r8]
 800372c:	b110      	cbz	r0, 8003734 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800372e:	6803      	ldr	r3, [r0, #0]
 8003730:	681b      	ldr	r3, [r3, #0]
 8003732:	4798      	blx	r3
    if (*currentPresenter)
 8003734:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003738:	b110      	cbz	r0, 8003740 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800373a:	6803      	ldr	r3, [r0, #0]
 800373c:	689b      	ldr	r3, [r3, #8]
 800373e:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003740:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8003742:	6803      	ldr	r3, [r0, #0]
 8003744:	2100      	movs	r1, #0
 8003746:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003748:	4798      	blx	r3
        : screenContainer(0), done(false)
 800374a:	f04f 0b00 	mov.w	fp, #0
 800374e:	4b24      	ldr	r3, [pc, #144]	; (80037e0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8003750:	6003      	str	r3, [r0, #0]
 8003752:	4604      	mov	r4, r0
 8003754:	f8c0 b004 	str.w	fp, [r0, #4]
 8003758:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800375c:	68a8      	ldr	r0, [r5, #8]
 800375e:	6803      	ldr	r3, [r0, #0]
 8003760:	4659      	mov	r1, fp
 8003762:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003764:	4798      	blx	r3
 8003766:	4606      	mov	r6, r0
 8003768:	f005 fa78 	bl	8008c5c <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800376c:	6868      	ldr	r0, [r5, #4]
 800376e:	6803      	ldr	r3, [r0, #0]
 8003770:	4659      	mov	r1, fp
 8003772:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003774:	4798      	blx	r3
 8003776:	4631      	mov	r1, r6
 8003778:	4605      	mov	r5, r0
 800377a:	f005 fa4b 	bl	8008c14 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 800377e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003782:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003786:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800378a:	b1e5      	cbz	r5, 80037c6 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 800378c:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800378e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003792:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8003794:	f8c5 a008 	str.w	sl, [r5, #8]
 8003798:	4630      	mov	r0, r6
 800379a:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 800379c:	63f5      	str	r5, [r6, #60]	; 0x3c
 800379e:	4798      	blx	r3
    newPresenter->activate();
 80037a0:	682b      	ldr	r3, [r5, #0]
 80037a2:	4628      	mov	r0, r5
 80037a4:	681b      	ldr	r3, [r3, #0]
 80037a6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80037a8:	4621      	mov	r1, r4
 80037aa:	4630      	mov	r0, r6
 80037ac:	f013 fc94 	bl	80170d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80037b0:	6823      	ldr	r3, [r4, #0]
 80037b2:	4620      	mov	r0, r4
 80037b4:	691b      	ldr	r3, [r3, #16]
 80037b6:	4798      	blx	r3
    newTransition->invalidate();
 80037b8:	6823      	ldr	r3, [r4, #0]
 80037ba:	695b      	ldr	r3, [r3, #20]
 80037bc:	4620      	mov	r0, r4
}
 80037be:	b001      	add	sp, #4
 80037c0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80037c4:	4718      	bx	r3
    model->bind(newPresenter);
 80037c6:	462b      	mov	r3, r5
 80037c8:	e7e1      	b.n	800378e <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 80037ca:	bf00      	nop
 80037cc:	0802beb4 	.word	0x0802beb4
 80037d0:	0802bf42 	.word	0x0802bf42
 80037d4:	0802c050 	.word	0x0802c050
 80037d8:	0802c097 	.word	0x0802c097
 80037dc:	0802c13a 	.word	0x0802c13a
 80037e0:	0802d558 	.word	0x0802d558
 80037e4:	20012f74 	.word	0x20012f74
 80037e8:	20012f70 	.word	0x20012f70

080037ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80037ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80037ee:	4604      	mov	r4, r0
        animationCounter++;
 80037f0:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80037f2:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80037f4:	3001      	adds	r0, #1
 80037f6:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80037f8:	4298      	cmp	r0, r3
        animationCounter++;
 80037fa:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80037fc:	d905      	bls.n	800380a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 80037fe:	2301      	movs	r3, #1
 8003800:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8003802:	2300      	movs	r3, #0
 8003804:	72a3      	strb	r3, [r4, #10]
    }
 8003806:	b003      	add	sp, #12
 8003808:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800380a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800380e:	2100      	movs	r1, #0
 8003810:	f013 fc68 	bl	80170e4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003814:	f010 0201 	ands.w	r2, r0, #1
 8003818:	b283      	uxth	r3, r0
 800381a:	d128      	bne.n	800386e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800381c:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800381e:	4b18      	ldr	r3, [pc, #96]	; (8003880 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8003820:	4818      	ldr	r0, [pc, #96]	; (8003884 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003822:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8003824:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003826:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8003828:	f9b0 0000 	ldrsh.w	r0, [r0]
 800382c:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003830:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8003832:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8003834:	442b      	add	r3, r5
 8003836:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003838:	b212      	sxth	r2, r2
 800383a:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800383e:	6803      	ldr	r3, [r0, #0]
 8003840:	8322      	strh	r2, [r4, #24]
 8003842:	f8ad 2000 	strh.w	r2, [sp]
 8003846:	2200      	movs	r2, #0
 8003848:	691b      	ldr	r3, [r3, #16]
 800384a:	f8ad 2002 	strh.w	r2, [sp, #2]
 800384e:	4669      	mov	r1, sp
 8003850:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003852:	7aa3      	ldrb	r3, [r4, #10]
 8003854:	2b01      	cmp	r3, #1
 8003856:	d1d6      	bne.n	8003806 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8003858:	4b0b      	ldr	r3, [pc, #44]	; (8003888 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 800385a:	781b      	ldrb	r3, [r3, #0]
 800385c:	2b00      	cmp	r3, #0
 800385e:	d0d2      	beq.n	8003806 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003860:	f011 fe0e 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003864:	b003      	add	sp, #12
 8003866:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800386a:	f011 be0f 	b.w	801548c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800386e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003872:	2800      	cmp	r0, #0
 8003874:	bfd8      	it	le
 8003876:	460a      	movle	r2, r1
 8003878:	4413      	add	r3, r2
 800387a:	81e3      	strh	r3, [r4, #14]
 800387c:	e7cf      	b.n	800381e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 800387e:	bf00      	nop
 8003880:	20012f20 	.word	0x20012f20
 8003884:	20012f22 	.word	0x20012f22
 8003888:	20012f2a 	.word	0x20012f2a

0800388c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 800388c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003890:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8003894:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003896:	68a8      	ldr	r0, [r5, #8]
 8003898:	6803      	ldr	r3, [r0, #0]
 800389a:	6a1b      	ldr	r3, [r3, #32]
 800389c:	4798      	blx	r3
 800389e:	f241 137b 	movw	r3, #4475	; 0x117b
 80038a2:	4298      	cmp	r0, r3
 80038a4:	d805      	bhi.n	80038b2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 80038a6:	4b46      	ldr	r3, [pc, #280]	; (80039c0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80038a8:	4a46      	ldr	r2, [pc, #280]	; (80039c4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80038aa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80038ac:	4846      	ldr	r0, [pc, #280]	; (80039c8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 80038ae:	f026 fc71 	bl	802a194 <__assert_func>
 80038b2:	6868      	ldr	r0, [r5, #4]
 80038b4:	6803      	ldr	r3, [r0, #0]
 80038b6:	6a1b      	ldr	r3, [r3, #32]
 80038b8:	4798      	blx	r3
 80038ba:	280f      	cmp	r0, #15
 80038bc:	d803      	bhi.n	80038c6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 80038be:	4b43      	ldr	r3, [pc, #268]	; (80039cc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 80038c0:	4a40      	ldr	r2, [pc, #256]	; (80039c4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80038c2:	21a4      	movs	r1, #164	; 0xa4
 80038c4:	e7f2      	b.n	80038ac <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80038c6:	68e8      	ldr	r0, [r5, #12]
 80038c8:	6803      	ldr	r3, [r0, #0]
 80038ca:	6a1b      	ldr	r3, [r3, #32]
 80038cc:	4798      	blx	r3
 80038ce:	280b      	cmp	r0, #11
 80038d0:	d803      	bhi.n	80038da <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 80038d2:	4b3f      	ldr	r3, [pc, #252]	; (80039d0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 80038d4:	4a3b      	ldr	r2, [pc, #236]	; (80039c4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80038d6:	21a5      	movs	r1, #165	; 0xa5
 80038d8:	e7e8      	b.n	80038ac <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80038da:	f011 fdd1 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80038de:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80039d8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 80038e2:	3004      	adds	r0, #4
 80038e4:	f011 fe32 	bl	801554c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80038e8:	f8d9 0000 	ldr.w	r0, [r9]
 80038ec:	b110      	cbz	r0, 80038f4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80038ee:	6803      	ldr	r3, [r0, #0]
 80038f0:	68db      	ldr	r3, [r3, #12]
 80038f2:	4798      	blx	r3
    if (*currentTrans)
 80038f4:	f8d9 0000 	ldr.w	r0, [r9]
 80038f8:	b110      	cbz	r0, 8003900 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 80038fa:	6803      	ldr	r3, [r0, #0]
 80038fc:	681b      	ldr	r3, [r3, #0]
 80038fe:	4798      	blx	r3
    if (*currentScreen)
 8003900:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80039dc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8003904:	f8d8 0000 	ldr.w	r0, [r8]
 8003908:	b110      	cbz	r0, 8003910 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800390a:	6803      	ldr	r3, [r0, #0]
 800390c:	695b      	ldr	r3, [r3, #20]
 800390e:	4798      	blx	r3
    if (*currentPresenter)
 8003910:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003914:	b110      	cbz	r0, 800391c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003916:	6803      	ldr	r3, [r0, #0]
 8003918:	685b      	ldr	r3, [r3, #4]
 800391a:	4798      	blx	r3
    if (*currentScreen)
 800391c:	f8d8 0000 	ldr.w	r0, [r8]
 8003920:	b110      	cbz	r0, 8003928 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003922:	6803      	ldr	r3, [r0, #0]
 8003924:	681b      	ldr	r3, [r3, #0]
 8003926:	4798      	blx	r3
    if (*currentPresenter)
 8003928:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800392c:	b110      	cbz	r0, 8003934 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800392e:	6803      	ldr	r3, [r0, #0]
 8003930:	689b      	ldr	r3, [r3, #8]
 8003932:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003934:	68e8      	ldr	r0, [r5, #12]
 8003936:	6803      	ldr	r3, [r0, #0]
 8003938:	2100      	movs	r1, #0
 800393a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800393c:	4798      	blx	r3
 800393e:	f04f 0b00 	mov.w	fp, #0
 8003942:	4b24      	ldr	r3, [pc, #144]	; (80039d4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8003944:	6003      	str	r3, [r0, #0]
 8003946:	4604      	mov	r4, r0
 8003948:	f8c0 b004 	str.w	fp, [r0, #4]
 800394c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003950:	68a8      	ldr	r0, [r5, #8]
 8003952:	6803      	ldr	r3, [r0, #0]
 8003954:	4659      	mov	r1, fp
 8003956:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003958:	4798      	blx	r3
 800395a:	4606      	mov	r6, r0
 800395c:	f004 fe20 	bl	80085a0 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003960:	6868      	ldr	r0, [r5, #4]
 8003962:	6803      	ldr	r3, [r0, #0]
 8003964:	4659      	mov	r1, fp
 8003966:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003968:	4798      	blx	r3
 800396a:	4631      	mov	r1, r6
 800396c:	4605      	mov	r5, r0
 800396e:	f004 fdf1 	bl	8008554 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8003972:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003976:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800397a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800397e:	b1e5      	cbz	r5, 80039ba <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 8003980:	1d2b      	adds	r3, r5, #4
 8003982:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003986:	6833      	ldr	r3, [r6, #0]
 8003988:	f8c5 a008 	str.w	sl, [r5, #8]
 800398c:	4630      	mov	r0, r6
 800398e:	68db      	ldr	r3, [r3, #12]
 8003990:	63f5      	str	r5, [r6, #60]	; 0x3c
 8003992:	4798      	blx	r3
    newPresenter->activate();
 8003994:	682b      	ldr	r3, [r5, #0]
 8003996:	4628      	mov	r0, r5
 8003998:	681b      	ldr	r3, [r3, #0]
 800399a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800399c:	4621      	mov	r1, r4
 800399e:	4630      	mov	r0, r6
 80039a0:	f013 fb9a 	bl	80170d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80039a4:	6823      	ldr	r3, [r4, #0]
 80039a6:	4620      	mov	r0, r4
 80039a8:	691b      	ldr	r3, [r3, #16]
 80039aa:	4798      	blx	r3
    newTransition->invalidate();
 80039ac:	6823      	ldr	r3, [r4, #0]
 80039ae:	695b      	ldr	r3, [r3, #20]
 80039b0:	4620      	mov	r0, r4
}
 80039b2:	b001      	add	sp, #4
 80039b4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80039b8:	4718      	bx	r3
    model->bind(newPresenter);
 80039ba:	462b      	mov	r3, r5
 80039bc:	e7e1      	b.n	8003982 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 80039be:	bf00      	nop
 80039c0:	0802beb4 	.word	0x0802beb4
 80039c4:	0802c1dd 	.word	0x0802c1dd
 80039c8:	0802c050 	.word	0x0802c050
 80039cc:	0802c097 	.word	0x0802c097
 80039d0:	0802c13a 	.word	0x0802c13a
 80039d4:	0802d558 	.word	0x0802d558
 80039d8:	20012f74 	.word	0x20012f74
 80039dc:	20012f70 	.word	0x20012f70

080039e0 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80039e0:	4b04      	ldr	r3, [pc, #16]	; (80039f4 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80039e2:	681b      	ldr	r3, [r3, #0]
 80039e4:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80039e8:	b10a      	cbz	r2, 80039ee <_ZN8touchgfx3HAL3lcdEv+0xe>
 80039ea:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80039ec:	b900      	cbnz	r0, 80039f0 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80039ee:	6898      	ldr	r0, [r3, #8]
    }
 80039f0:	4770      	bx	lr
 80039f2:	bf00      	nop
 80039f4:	20012f2c 	.word	0x20012f2c

080039f8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80039f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80039fa:	4604      	mov	r4, r0
 80039fc:	4617      	mov	r7, r2
 80039fe:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8003a00:	f011 fe72 	bl	80156e8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8003a04:	4b10      	ldr	r3, [pc, #64]	; (8003a48 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8003a06:	601c      	str	r4, [r3, #0]
      model(m)
 8003a08:	4b10      	ldr	r3, [pc, #64]	; (8003a4c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8003a0a:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8003a0c:	4b10      	ldr	r3, [pc, #64]	; (8003a50 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8003a0e:	2500      	movs	r5, #0
 8003a10:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8003a14:	4b0f      	ldr	r3, [pc, #60]	; (8003a54 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8003a16:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8003a1a:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003a1c:	6803      	ldr	r3, [r0, #0]
 8003a1e:	2101      	movs	r1, #1
 8003a20:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8003a22:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8003a26:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003a2a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003a2c:	4628      	mov	r0, r5
 8003a2e:	f004 fbf5 	bl	800821c <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8003a32:	f7ff ffd5 	bl	80039e0 <_ZN8touchgfx3HAL3lcdEv>
 8003a36:	f01b fa1c 	bl	801ee72 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8003a3a:	f7ff ffd1 	bl	80039e0 <_ZN8touchgfx3HAL3lcdEv>
 8003a3e:	f01b fa93 	bl	801ef68 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8003a42:	4620      	mov	r0, r4
 8003a44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003a46:	bf00      	nop
 8003a48:	20012f80 	.word	0x20012f80
 8003a4c:	0802d504 	.word	0x0802d504
 8003a50:	0802d4ec 	.word	0x0802d4ec
 8003a54:	20012f2c 	.word	0x20012f2c

08003a58 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003a58:	4b06      	ldr	r3, [pc, #24]	; (8003a74 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 8003a5a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a5e:	2300      	movs	r3, #0
 8003a60:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a64:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a68:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a6c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a70:	4770      	bx	lr
 8003a72:	bf00      	nop
 8003a74:	0800388d 	.word	0x0800388d

08003a78 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8003a78:	4b06      	ldr	r3, [pc, #24]	; (8003a94 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8003a7a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a7e:	2300      	movs	r3, #0
 8003a80:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a84:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a88:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a8c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a90:	4770      	bx	lr
 8003a92:	bf00      	nop
 8003a94:	0800409d 	.word	0x0800409d

08003a98 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8003a98:	4b06      	ldr	r3, [pc, #24]	; (8003ab4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8003a9a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a9e:	2300      	movs	r3, #0
 8003aa0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003aa4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003aa8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003aac:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003ab0:	4770      	bx	lr
 8003ab2:	bf00      	nop
 8003ab4:	08004ec1 	.word	0x08004ec1

08003ab8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 8003ab8:	4b06      	ldr	r3, [pc, #24]	; (8003ad4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 8003aba:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003abe:	2300      	movs	r3, #0
 8003ac0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003ac4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ac8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003acc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003ad0:	4770      	bx	lr
 8003ad2:	bf00      	nop
 8003ad4:	08003f5d 	.word	0x08003f5d

08003ad8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 8003ad8:	4b06      	ldr	r3, [pc, #24]	; (8003af4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 8003ada:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003ade:	2300      	movs	r3, #0
 8003ae0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003ae4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ae8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003aec:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003af0:	4770      	bx	lr
 8003af2:	bf00      	nop
 8003af4:	08004d81 	.word	0x08004d81

08003af8 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8003af8:	4b06      	ldr	r3, [pc, #24]	; (8003b14 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8003afa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003afe:	2300      	movs	r3, #0
 8003b00:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003b04:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003b08:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003b0c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003b10:	4770      	bx	lr
 8003b12:	bf00      	nop
 8003b14:	08004c41 	.word	0x08004c41

08003b18 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8003b18:	4b06      	ldr	r3, [pc, #24]	; (8003b34 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8003b1a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003b1e:	2300      	movs	r3, #0
 8003b20:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003b24:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003b28:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003b2c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003b30:	4770      	bx	lr
 8003b32:	bf00      	nop
 8003b34:	08004b01 	.word	0x08004b01

08003b38 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8003b38:	4b06      	ldr	r3, [pc, #24]	; (8003b54 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8003b3a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003b3e:	2300      	movs	r3, #0
 8003b40:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003b44:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003b48:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003b4c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003b50:	4770      	bx	lr
 8003b52:	bf00      	nop
 8003b54:	080049c1 	.word	0x080049c1

08003b58 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8003b58:	4b06      	ldr	r3, [pc, #24]	; (8003b74 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8003b5a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003b5e:	2300      	movs	r3, #0
 8003b60:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003b64:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003b68:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003b6c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003b70:	4770      	bx	lr
 8003b72:	bf00      	nop
 8003b74:	08003e1d 	.word	0x08003e1d

08003b78 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8003b78:	4b06      	ldr	r3, [pc, #24]	; (8003b94 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8003b7a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003b7e:	2300      	movs	r3, #0
 8003b80:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003b84:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003b88:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003b8c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003b90:	4770      	bx	lr
 8003b92:	bf00      	nop
 8003b94:	08004881 	.word	0x08004881

08003b98 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8003b98:	4b06      	ldr	r3, [pc, #24]	; (8003bb4 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8003b9a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003b9e:	2300      	movs	r3, #0
 8003ba0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003ba4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ba8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003bac:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003bb0:	4770      	bx	lr
 8003bb2:	bf00      	nop
 8003bb4:	08004741 	.word	0x08004741

08003bb8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 8003bb8:	4b06      	ldr	r3, [pc, #24]	; (8003bd4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 8003bba:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003bbe:	2300      	movs	r3, #0
 8003bc0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003bc4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003bc8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003bcc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003bd0:	4770      	bx	lr
 8003bd2:	bf00      	nop
 8003bd4:	08004601 	.word	0x08004601

08003bd8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 8003bd8:	4b06      	ldr	r3, [pc, #24]	; (8003bf4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 8003bda:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003bde:	2300      	movs	r3, #0
 8003be0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003be4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003be8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003bec:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003bf0:	4770      	bx	lr
 8003bf2:	bf00      	nop
 8003bf4:	08003cdd 	.word	0x08003cdd

08003bf8 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8003bf8:	4b06      	ldr	r3, [pc, #24]	; (8003c14 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8003bfa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003bfe:	2300      	movs	r3, #0
 8003c00:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003c04:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003c08:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003c0c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003c10:	4770      	bx	lr
 8003c12:	bf00      	nop
 8003c14:	080044c1 	.word	0x080044c1

08003c18 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 8003c18:	4b06      	ldr	r3, [pc, #24]	; (8003c34 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 8003c1a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003c1e:	2300      	movs	r3, #0
 8003c20:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003c24:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003c28:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003c2c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003c30:	4770      	bx	lr
 8003c32:	bf00      	nop
 8003c34:	08004381 	.word	0x08004381

08003c38 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8003c38:	4b06      	ldr	r3, [pc, #24]	; (8003c54 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8003c3a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003c3e:	2300      	movs	r3, #0
 8003c40:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003c44:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003c48:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003c4c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003c50:	4770      	bx	lr
 8003c52:	bf00      	nop
 8003c54:	08004241 	.word	0x08004241

08003c58 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8003c58:	4b06      	ldr	r3, [pc, #24]	; (8003c74 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8003c5a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003c5e:	2300      	movs	r3, #0
 8003c60:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003c64:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003c68:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003c6c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003c70:	4770      	bx	lr
 8003c72:	bf00      	nop
 8003c74:	0800369d 	.word	0x0800369d

08003c78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8003c78:	6803      	ldr	r3, [r0, #0]
 8003c7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c7c:	4718      	bx	r3
	...

08003c80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8003c80:	4b12      	ldr	r3, [pc, #72]	; (8003ccc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8003c82:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003c84:	6003      	str	r3, [r0, #0]
 8003c86:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003c8a:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003c8c:	4b10      	ldr	r3, [pc, #64]	; (8003cd0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8003c8e:	7241      	strb	r1, [r0, #9]
 8003c90:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003c92:	4910      	ldr	r1, [pc, #64]	; (8003cd4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003c94:	4b10      	ldr	r3, [pc, #64]	; (8003cd8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003c96:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003c9a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003c9e:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8003ca0:	2200      	movs	r2, #0
 8003ca2:	6042      	str	r2, [r0, #4]
 8003ca4:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003ca6:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003ca8:	81c2      	strh	r2, [r0, #14]
          solid()
 8003caa:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003cae:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003cb2:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8003cb6:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8003cba:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003cbc:	9100      	str	r1, [sp, #0]
 8003cbe:	3010      	adds	r0, #16
 8003cc0:	4611      	mov	r1, r2
 8003cc2:	f7fe fddf 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8003cc6:	4620      	mov	r0, r4
 8003cc8:	b002      	add	sp, #8
 8003cca:	bd10      	pop	{r4, pc}
 8003ccc:	0802d5a0 	.word	0x0802d5a0
 8003cd0:	0802d484 	.word	0x0802d484
 8003cd4:	20012f22 	.word	0x20012f22
 8003cd8:	20012f20 	.word	0x20012f20

08003cdc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 8003cdc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003ce0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003ce4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003ce6:	68a0      	ldr	r0, [r4, #8]
 8003ce8:	6803      	ldr	r3, [r0, #0]
 8003cea:	6a1b      	ldr	r3, [r3, #32]
 8003cec:	4798      	blx	r3
 8003cee:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003cf2:	d205      	bcs.n	8003d00 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 8003cf4:	4b42      	ldr	r3, [pc, #264]	; (8003e00 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 8003cf6:	4a43      	ldr	r2, [pc, #268]	; (8003e04 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003cf8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003cfa:	4843      	ldr	r0, [pc, #268]	; (8003e08 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 8003cfc:	f026 fa4a 	bl	802a194 <__assert_func>
 8003d00:	6860      	ldr	r0, [r4, #4]
 8003d02:	6803      	ldr	r3, [r0, #0]
 8003d04:	6a1b      	ldr	r3, [r3, #32]
 8003d06:	4798      	blx	r3
 8003d08:	280f      	cmp	r0, #15
 8003d0a:	d803      	bhi.n	8003d14 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 8003d0c:	4b3f      	ldr	r3, [pc, #252]	; (8003e0c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 8003d0e:	4a3d      	ldr	r2, [pc, #244]	; (8003e04 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003d10:	21a4      	movs	r1, #164	; 0xa4
 8003d12:	e7f2      	b.n	8003cfa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003d14:	68e0      	ldr	r0, [r4, #12]
 8003d16:	6803      	ldr	r3, [r0, #0]
 8003d18:	6a1b      	ldr	r3, [r3, #32]
 8003d1a:	4798      	blx	r3
 8003d1c:	2837      	cmp	r0, #55	; 0x37
 8003d1e:	d803      	bhi.n	8003d28 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 8003d20:	4b3b      	ldr	r3, [pc, #236]	; (8003e10 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 8003d22:	4a38      	ldr	r2, [pc, #224]	; (8003e04 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003d24:	21a5      	movs	r1, #165	; 0xa5
 8003d26:	e7e8      	b.n	8003cfa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003d28:	f011 fbaa 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003d2c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003e14 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 8003d30:	3004      	adds	r0, #4
 8003d32:	f011 fc0b 	bl	801554c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003d36:	f8d9 0000 	ldr.w	r0, [r9]
 8003d3a:	b110      	cbz	r0, 8003d42 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003d3c:	6803      	ldr	r3, [r0, #0]
 8003d3e:	68db      	ldr	r3, [r3, #12]
 8003d40:	4798      	blx	r3
    if (*currentTrans)
 8003d42:	f8d9 0000 	ldr.w	r0, [r9]
 8003d46:	b110      	cbz	r0, 8003d4e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003d48:	6803      	ldr	r3, [r0, #0]
 8003d4a:	681b      	ldr	r3, [r3, #0]
 8003d4c:	4798      	blx	r3
    if (*currentScreen)
 8003d4e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003e18 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 8003d52:	f8d8 0000 	ldr.w	r0, [r8]
 8003d56:	b110      	cbz	r0, 8003d5e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003d58:	6803      	ldr	r3, [r0, #0]
 8003d5a:	695b      	ldr	r3, [r3, #20]
 8003d5c:	4798      	blx	r3
    if (*currentPresenter)
 8003d5e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003d62:	b110      	cbz	r0, 8003d6a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003d64:	6803      	ldr	r3, [r0, #0]
 8003d66:	685b      	ldr	r3, [r3, #4]
 8003d68:	4798      	blx	r3
    if (*currentScreen)
 8003d6a:	f8d8 0000 	ldr.w	r0, [r8]
 8003d6e:	b110      	cbz	r0, 8003d76 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003d70:	6803      	ldr	r3, [r0, #0]
 8003d72:	681b      	ldr	r3, [r3, #0]
 8003d74:	4798      	blx	r3
    if (*currentPresenter)
 8003d76:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003d7a:	b110      	cbz	r0, 8003d82 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003d7c:	6803      	ldr	r3, [r0, #0]
 8003d7e:	689b      	ldr	r3, [r3, #8]
 8003d80:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003d82:	68e0      	ldr	r0, [r4, #12]
 8003d84:	2100      	movs	r1, #0
 8003d86:	f7ff ff77 	bl	8003c78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003d8a:	2114      	movs	r1, #20
 8003d8c:	4605      	mov	r5, r0
 8003d8e:	f7ff ff77 	bl	8003c80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003d92:	68a0      	ldr	r0, [r4, #8]
 8003d94:	6803      	ldr	r3, [r0, #0]
 8003d96:	2100      	movs	r1, #0
 8003d98:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d9a:	4798      	blx	r3
 8003d9c:	4606      	mov	r6, r0
 8003d9e:	f004 fadb 	bl	8008358 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003da2:	6860      	ldr	r0, [r4, #4]
 8003da4:	6803      	ldr	r3, [r0, #0]
 8003da6:	2100      	movs	r1, #0
 8003da8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003daa:	4798      	blx	r3
 8003dac:	4631      	mov	r1, r6
 8003dae:	4604      	mov	r4, r0
 8003db0:	f004 faac 	bl	800830c <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8003db4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003db8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003dbc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003dc0:	b1dc      	cbz	r4, 8003dfa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 8003dc2:	1d23      	adds	r3, r4, #4
 8003dc4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003dc8:	6833      	ldr	r3, [r6, #0]
 8003dca:	f8c4 a008 	str.w	sl, [r4, #8]
 8003dce:	4630      	mov	r0, r6
 8003dd0:	68db      	ldr	r3, [r3, #12]
 8003dd2:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003dd4:	4798      	blx	r3
    newPresenter->activate();
 8003dd6:	6823      	ldr	r3, [r4, #0]
 8003dd8:	4620      	mov	r0, r4
 8003dda:	681b      	ldr	r3, [r3, #0]
 8003ddc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003dde:	4629      	mov	r1, r5
 8003de0:	4630      	mov	r0, r6
 8003de2:	f013 f979 	bl	80170d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003de6:	682b      	ldr	r3, [r5, #0]
 8003de8:	4628      	mov	r0, r5
 8003dea:	691b      	ldr	r3, [r3, #16]
 8003dec:	4798      	blx	r3
    newTransition->invalidate();
 8003dee:	682b      	ldr	r3, [r5, #0]
 8003df0:	4628      	mov	r0, r5
 8003df2:	695b      	ldr	r3, [r3, #20]
}
 8003df4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003df8:	4718      	bx	r3
    model->bind(newPresenter);
 8003dfa:	4623      	mov	r3, r4
 8003dfc:	e7e2      	b.n	8003dc4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 8003dfe:	bf00      	nop
 8003e00:	0802beb4 	.word	0x0802beb4
 8003e04:	0802c2e5 	.word	0x0802c2e5
 8003e08:	0802c050 	.word	0x0802c050
 8003e0c:	0802c097 	.word	0x0802c097
 8003e10:	0802c13a 	.word	0x0802c13a
 8003e14:	20012f74 	.word	0x20012f74
 8003e18:	20012f70 	.word	0x20012f70

08003e1c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8003e1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003e20:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003e24:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003e26:	68a0      	ldr	r0, [r4, #8]
 8003e28:	6803      	ldr	r3, [r0, #0]
 8003e2a:	6a1b      	ldr	r3, [r3, #32]
 8003e2c:	4798      	blx	r3
 8003e2e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003e32:	d205      	bcs.n	8003e40 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8003e34:	4b42      	ldr	r3, [pc, #264]	; (8003f40 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8003e36:	4a43      	ldr	r2, [pc, #268]	; (8003f44 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003e38:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003e3a:	4843      	ldr	r0, [pc, #268]	; (8003f48 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8003e3c:	f026 f9aa 	bl	802a194 <__assert_func>
 8003e40:	6860      	ldr	r0, [r4, #4]
 8003e42:	6803      	ldr	r3, [r0, #0]
 8003e44:	6a1b      	ldr	r3, [r3, #32]
 8003e46:	4798      	blx	r3
 8003e48:	280f      	cmp	r0, #15
 8003e4a:	d803      	bhi.n	8003e54 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8003e4c:	4b3f      	ldr	r3, [pc, #252]	; (8003f4c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8003e4e:	4a3d      	ldr	r2, [pc, #244]	; (8003f44 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003e50:	21a4      	movs	r1, #164	; 0xa4
 8003e52:	e7f2      	b.n	8003e3a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003e54:	68e0      	ldr	r0, [r4, #12]
 8003e56:	6803      	ldr	r3, [r0, #0]
 8003e58:	6a1b      	ldr	r3, [r3, #32]
 8003e5a:	4798      	blx	r3
 8003e5c:	2837      	cmp	r0, #55	; 0x37
 8003e5e:	d803      	bhi.n	8003e68 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8003e60:	4b3b      	ldr	r3, [pc, #236]	; (8003f50 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8003e62:	4a38      	ldr	r2, [pc, #224]	; (8003f44 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003e64:	21a5      	movs	r1, #165	; 0xa5
 8003e66:	e7e8      	b.n	8003e3a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003e68:	f011 fb0a 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003e6c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003f54 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8003e70:	3004      	adds	r0, #4
 8003e72:	f011 fb6b 	bl	801554c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003e76:	f8d9 0000 	ldr.w	r0, [r9]
 8003e7a:	b110      	cbz	r0, 8003e82 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003e7c:	6803      	ldr	r3, [r0, #0]
 8003e7e:	68db      	ldr	r3, [r3, #12]
 8003e80:	4798      	blx	r3
    if (*currentTrans)
 8003e82:	f8d9 0000 	ldr.w	r0, [r9]
 8003e86:	b110      	cbz	r0, 8003e8e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003e88:	6803      	ldr	r3, [r0, #0]
 8003e8a:	681b      	ldr	r3, [r3, #0]
 8003e8c:	4798      	blx	r3
    if (*currentScreen)
 8003e8e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003f58 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8003e92:	f8d8 0000 	ldr.w	r0, [r8]
 8003e96:	b110      	cbz	r0, 8003e9e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003e98:	6803      	ldr	r3, [r0, #0]
 8003e9a:	695b      	ldr	r3, [r3, #20]
 8003e9c:	4798      	blx	r3
    if (*currentPresenter)
 8003e9e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003ea2:	b110      	cbz	r0, 8003eaa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003ea4:	6803      	ldr	r3, [r0, #0]
 8003ea6:	685b      	ldr	r3, [r3, #4]
 8003ea8:	4798      	blx	r3
    if (*currentScreen)
 8003eaa:	f8d8 0000 	ldr.w	r0, [r8]
 8003eae:	b110      	cbz	r0, 8003eb6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003eb0:	6803      	ldr	r3, [r0, #0]
 8003eb2:	681b      	ldr	r3, [r3, #0]
 8003eb4:	4798      	blx	r3
    if (*currentPresenter)
 8003eb6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003eba:	b110      	cbz	r0, 8003ec2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003ebc:	6803      	ldr	r3, [r0, #0]
 8003ebe:	689b      	ldr	r3, [r3, #8]
 8003ec0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003ec2:	68e0      	ldr	r0, [r4, #12]
 8003ec4:	2100      	movs	r1, #0
 8003ec6:	f7ff fed7 	bl	8003c78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003eca:	2114      	movs	r1, #20
 8003ecc:	4605      	mov	r5, r0
 8003ece:	f7ff fed7 	bl	8003c80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003ed2:	68a0      	ldr	r0, [r4, #8]
 8003ed4:	6803      	ldr	r3, [r0, #0]
 8003ed6:	2100      	movs	r1, #0
 8003ed8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003eda:	4798      	blx	r3
 8003edc:	4606      	mov	r6, r0
 8003ede:	f004 fc1f 	bl	8008720 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003ee2:	6860      	ldr	r0, [r4, #4]
 8003ee4:	6803      	ldr	r3, [r0, #0]
 8003ee6:	2100      	movs	r1, #0
 8003ee8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003eea:	4798      	blx	r3
 8003eec:	4631      	mov	r1, r6
 8003eee:	4604      	mov	r4, r0
 8003ef0:	f004 fbf0 	bl	80086d4 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8003ef4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003ef8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003efc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003f00:	b1dc      	cbz	r4, 8003f3a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8003f02:	1d23      	adds	r3, r4, #4
 8003f04:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003f08:	6833      	ldr	r3, [r6, #0]
 8003f0a:	f8c4 a008 	str.w	sl, [r4, #8]
 8003f0e:	4630      	mov	r0, r6
 8003f10:	68db      	ldr	r3, [r3, #12]
 8003f12:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003f14:	4798      	blx	r3
    newPresenter->activate();
 8003f16:	6823      	ldr	r3, [r4, #0]
 8003f18:	4620      	mov	r0, r4
 8003f1a:	681b      	ldr	r3, [r3, #0]
 8003f1c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003f1e:	4629      	mov	r1, r5
 8003f20:	4630      	mov	r0, r6
 8003f22:	f013 f8d9 	bl	80170d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003f26:	682b      	ldr	r3, [r5, #0]
 8003f28:	4628      	mov	r0, r5
 8003f2a:	691b      	ldr	r3, [r3, #16]
 8003f2c:	4798      	blx	r3
    newTransition->invalidate();
 8003f2e:	682b      	ldr	r3, [r5, #0]
 8003f30:	4628      	mov	r0, r5
 8003f32:	695b      	ldr	r3, [r3, #20]
}
 8003f34:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f38:	4718      	bx	r3
    model->bind(newPresenter);
 8003f3a:	4623      	mov	r3, r4
 8003f3c:	e7e2      	b.n	8003f04 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8003f3e:	bf00      	nop
 8003f40:	0802beb4 	.word	0x0802beb4
 8003f44:	0802c403 	.word	0x0802c403
 8003f48:	0802c050 	.word	0x0802c050
 8003f4c:	0802c097 	.word	0x0802c097
 8003f50:	0802c13a 	.word	0x0802c13a
 8003f54:	20012f74 	.word	0x20012f74
 8003f58:	20012f70 	.word	0x20012f70

08003f5c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8003f5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003f60:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003f64:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003f66:	68a0      	ldr	r0, [r4, #8]
 8003f68:	6803      	ldr	r3, [r0, #0]
 8003f6a:	6a1b      	ldr	r3, [r3, #32]
 8003f6c:	4798      	blx	r3
 8003f6e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003f72:	d205      	bcs.n	8003f80 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8003f74:	4b42      	ldr	r3, [pc, #264]	; (8004080 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8003f76:	4a43      	ldr	r2, [pc, #268]	; (8004084 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003f78:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003f7a:	4843      	ldr	r0, [pc, #268]	; (8004088 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8003f7c:	f026 f90a 	bl	802a194 <__assert_func>
 8003f80:	6860      	ldr	r0, [r4, #4]
 8003f82:	6803      	ldr	r3, [r0, #0]
 8003f84:	6a1b      	ldr	r3, [r3, #32]
 8003f86:	4798      	blx	r3
 8003f88:	280f      	cmp	r0, #15
 8003f8a:	d803      	bhi.n	8003f94 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8003f8c:	4b3f      	ldr	r3, [pc, #252]	; (800408c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8003f8e:	4a3d      	ldr	r2, [pc, #244]	; (8004084 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003f90:	21a4      	movs	r1, #164	; 0xa4
 8003f92:	e7f2      	b.n	8003f7a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003f94:	68e0      	ldr	r0, [r4, #12]
 8003f96:	6803      	ldr	r3, [r0, #0]
 8003f98:	6a1b      	ldr	r3, [r3, #32]
 8003f9a:	4798      	blx	r3
 8003f9c:	2837      	cmp	r0, #55	; 0x37
 8003f9e:	d803      	bhi.n	8003fa8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8003fa0:	4b3b      	ldr	r3, [pc, #236]	; (8004090 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8003fa2:	4a38      	ldr	r2, [pc, #224]	; (8004084 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003fa4:	21a5      	movs	r1, #165	; 0xa5
 8003fa6:	e7e8      	b.n	8003f7a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003fa8:	f011 fa6a 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003fac:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004094 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8003fb0:	3004      	adds	r0, #4
 8003fb2:	f011 facb 	bl	801554c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003fb6:	f8d9 0000 	ldr.w	r0, [r9]
 8003fba:	b110      	cbz	r0, 8003fc2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003fbc:	6803      	ldr	r3, [r0, #0]
 8003fbe:	68db      	ldr	r3, [r3, #12]
 8003fc0:	4798      	blx	r3
    if (*currentTrans)
 8003fc2:	f8d9 0000 	ldr.w	r0, [r9]
 8003fc6:	b110      	cbz	r0, 8003fce <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003fc8:	6803      	ldr	r3, [r0, #0]
 8003fca:	681b      	ldr	r3, [r3, #0]
 8003fcc:	4798      	blx	r3
    if (*currentScreen)
 8003fce:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004098 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8003fd2:	f8d8 0000 	ldr.w	r0, [r8]
 8003fd6:	b110      	cbz	r0, 8003fde <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003fd8:	6803      	ldr	r3, [r0, #0]
 8003fda:	695b      	ldr	r3, [r3, #20]
 8003fdc:	4798      	blx	r3
    if (*currentPresenter)
 8003fde:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003fe2:	b110      	cbz	r0, 8003fea <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003fe4:	6803      	ldr	r3, [r0, #0]
 8003fe6:	685b      	ldr	r3, [r3, #4]
 8003fe8:	4798      	blx	r3
    if (*currentScreen)
 8003fea:	f8d8 0000 	ldr.w	r0, [r8]
 8003fee:	b110      	cbz	r0, 8003ff6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003ff0:	6803      	ldr	r3, [r0, #0]
 8003ff2:	681b      	ldr	r3, [r3, #0]
 8003ff4:	4798      	blx	r3
    if (*currentPresenter)
 8003ff6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003ffa:	b110      	cbz	r0, 8004002 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003ffc:	6803      	ldr	r3, [r0, #0]
 8003ffe:	689b      	ldr	r3, [r3, #8]
 8004000:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004002:	68e0      	ldr	r0, [r4, #12]
 8004004:	2100      	movs	r1, #0
 8004006:	f7ff fe37 	bl	8003c78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 800400a:	2114      	movs	r1, #20
 800400c:	4605      	mov	r5, r0
 800400e:	f7ff fe37 	bl	8003c80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004012:	68a0      	ldr	r0, [r4, #8]
 8004014:	6803      	ldr	r3, [r0, #0]
 8004016:	2100      	movs	r1, #0
 8004018:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800401a:	4798      	blx	r3
 800401c:	4606      	mov	r6, r0
 800401e:	f004 fb1f 	bl	8008660 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004022:	6860      	ldr	r0, [r4, #4]
 8004024:	6803      	ldr	r3, [r0, #0]
 8004026:	2100      	movs	r1, #0
 8004028:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800402a:	4798      	blx	r3
 800402c:	4631      	mov	r1, r6
 800402e:	4604      	mov	r4, r0
 8004030:	f004 faf0 	bl	8008614 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004034:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004038:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800403c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004040:	b1dc      	cbz	r4, 800407a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8004042:	1d23      	adds	r3, r4, #4
 8004044:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004048:	6833      	ldr	r3, [r6, #0]
 800404a:	f8c4 a008 	str.w	sl, [r4, #8]
 800404e:	4630      	mov	r0, r6
 8004050:	68db      	ldr	r3, [r3, #12]
 8004052:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004054:	4798      	blx	r3
    newPresenter->activate();
 8004056:	6823      	ldr	r3, [r4, #0]
 8004058:	4620      	mov	r0, r4
 800405a:	681b      	ldr	r3, [r3, #0]
 800405c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800405e:	4629      	mov	r1, r5
 8004060:	4630      	mov	r0, r6
 8004062:	f013 f839 	bl	80170d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004066:	682b      	ldr	r3, [r5, #0]
 8004068:	4628      	mov	r0, r5
 800406a:	691b      	ldr	r3, [r3, #16]
 800406c:	4798      	blx	r3
    newTransition->invalidate();
 800406e:	682b      	ldr	r3, [r5, #0]
 8004070:	4628      	mov	r0, r5
 8004072:	695b      	ldr	r3, [r3, #20]
}
 8004074:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004078:	4718      	bx	r3
    model->bind(newPresenter);
 800407a:	4623      	mov	r3, r4
 800407c:	e7e2      	b.n	8004044 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 800407e:	bf00      	nop
 8004080:	0802beb4 	.word	0x0802beb4
 8004084:	0802c533 	.word	0x0802c533
 8004088:	0802c050 	.word	0x0802c050
 800408c:	0802c097 	.word	0x0802c097
 8004090:	0802c13a 	.word	0x0802c13a
 8004094:	20012f74 	.word	0x20012f74
 8004098:	20012f70 	.word	0x20012f70

0800409c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 800409c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80040a0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80040a4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80040a6:	68a0      	ldr	r0, [r4, #8]
 80040a8:	6803      	ldr	r3, [r0, #0]
 80040aa:	6a1b      	ldr	r3, [r3, #32]
 80040ac:	4798      	blx	r3
 80040ae:	f241 137b 	movw	r3, #4475	; 0x117b
 80040b2:	4298      	cmp	r0, r3
 80040b4:	d805      	bhi.n	80040c2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 80040b6:	4b42      	ldr	r3, [pc, #264]	; (80041c0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 80040b8:	4a42      	ldr	r2, [pc, #264]	; (80041c4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 80040ba:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80040bc:	4842      	ldr	r0, [pc, #264]	; (80041c8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 80040be:	f026 f869 	bl	802a194 <__assert_func>
 80040c2:	6860      	ldr	r0, [r4, #4]
 80040c4:	6803      	ldr	r3, [r0, #0]
 80040c6:	6a1b      	ldr	r3, [r3, #32]
 80040c8:	4798      	blx	r3
 80040ca:	280f      	cmp	r0, #15
 80040cc:	d803      	bhi.n	80040d6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 80040ce:	4b3f      	ldr	r3, [pc, #252]	; (80041cc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 80040d0:	4a3c      	ldr	r2, [pc, #240]	; (80041c4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 80040d2:	21a4      	movs	r1, #164	; 0xa4
 80040d4:	e7f2      	b.n	80040bc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80040d6:	68e0      	ldr	r0, [r4, #12]
 80040d8:	6803      	ldr	r3, [r0, #0]
 80040da:	6a1b      	ldr	r3, [r3, #32]
 80040dc:	4798      	blx	r3
 80040de:	2837      	cmp	r0, #55	; 0x37
 80040e0:	d803      	bhi.n	80040ea <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 80040e2:	4b3b      	ldr	r3, [pc, #236]	; (80041d0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 80040e4:	4a37      	ldr	r2, [pc, #220]	; (80041c4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 80040e6:	21a5      	movs	r1, #165	; 0xa5
 80040e8:	e7e8      	b.n	80040bc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80040ea:	f011 f9c9 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80040ee:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80041d4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 80040f2:	3004      	adds	r0, #4
 80040f4:	f011 fa2a 	bl	801554c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80040f8:	f8d9 0000 	ldr.w	r0, [r9]
 80040fc:	b110      	cbz	r0, 8004104 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 80040fe:	6803      	ldr	r3, [r0, #0]
 8004100:	68db      	ldr	r3, [r3, #12]
 8004102:	4798      	blx	r3
    if (*currentTrans)
 8004104:	f8d9 0000 	ldr.w	r0, [r9]
 8004108:	b110      	cbz	r0, 8004110 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 800410a:	6803      	ldr	r3, [r0, #0]
 800410c:	681b      	ldr	r3, [r3, #0]
 800410e:	4798      	blx	r3
    if (*currentScreen)
 8004110:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80041d8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8004114:	f8d8 0000 	ldr.w	r0, [r8]
 8004118:	b110      	cbz	r0, 8004120 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800411a:	6803      	ldr	r3, [r0, #0]
 800411c:	695b      	ldr	r3, [r3, #20]
 800411e:	4798      	blx	r3
    if (*currentPresenter)
 8004120:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004124:	b110      	cbz	r0, 800412c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004126:	6803      	ldr	r3, [r0, #0]
 8004128:	685b      	ldr	r3, [r3, #4]
 800412a:	4798      	blx	r3
    if (*currentScreen)
 800412c:	f8d8 0000 	ldr.w	r0, [r8]
 8004130:	b110      	cbz	r0, 8004138 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004132:	6803      	ldr	r3, [r0, #0]
 8004134:	681b      	ldr	r3, [r3, #0]
 8004136:	4798      	blx	r3
    if (*currentPresenter)
 8004138:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800413c:	b110      	cbz	r0, 8004144 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800413e:	6803      	ldr	r3, [r0, #0]
 8004140:	689b      	ldr	r3, [r3, #8]
 8004142:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004144:	68e0      	ldr	r0, [r4, #12]
 8004146:	2100      	movs	r1, #0
 8004148:	f7ff fd96 	bl	8003c78 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 800414c:	2114      	movs	r1, #20
 800414e:	4605      	mov	r5, r0
 8004150:	f7ff fd96 	bl	8003c80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004154:	68a0      	ldr	r0, [r4, #8]
 8004156:	6803      	ldr	r3, [r0, #0]
 8004158:	2100      	movs	r1, #0
 800415a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800415c:	4798      	blx	r3
 800415e:	4606      	mov	r6, r0
 8004160:	f004 fa1e 	bl	80085a0 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004164:	6860      	ldr	r0, [r4, #4]
 8004166:	6803      	ldr	r3, [r0, #0]
 8004168:	2100      	movs	r1, #0
 800416a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800416c:	4798      	blx	r3
 800416e:	4631      	mov	r1, r6
 8004170:	4604      	mov	r4, r0
 8004172:	f004 f9ef 	bl	8008554 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004176:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800417a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800417e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004182:	b1dc      	cbz	r4, 80041bc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8004184:	1d23      	adds	r3, r4, #4
 8004186:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800418a:	6833      	ldr	r3, [r6, #0]
 800418c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004190:	4630      	mov	r0, r6
 8004192:	68db      	ldr	r3, [r3, #12]
 8004194:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004196:	4798      	blx	r3
    newPresenter->activate();
 8004198:	6823      	ldr	r3, [r4, #0]
 800419a:	4620      	mov	r0, r4
 800419c:	681b      	ldr	r3, [r3, #0]
 800419e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80041a0:	4629      	mov	r1, r5
 80041a2:	4630      	mov	r0, r6
 80041a4:	f012 ff98 	bl	80170d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80041a8:	682b      	ldr	r3, [r5, #0]
 80041aa:	4628      	mov	r0, r5
 80041ac:	691b      	ldr	r3, [r3, #16]
 80041ae:	4798      	blx	r3
    newTransition->invalidate();
 80041b0:	682b      	ldr	r3, [r5, #0]
 80041b2:	4628      	mov	r0, r5
 80041b4:	695b      	ldr	r3, [r3, #20]
}
 80041b6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80041ba:	4718      	bx	r3
    model->bind(newPresenter);
 80041bc:	4623      	mov	r3, r4
 80041be:	e7e2      	b.n	8004186 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 80041c0:	0802beb4 	.word	0x0802beb4
 80041c4:	0802c651 	.word	0x0802c651
 80041c8:	0802c050 	.word	0x0802c050
 80041cc:	0802c097 	.word	0x0802c097
 80041d0:	0802c13a 	.word	0x0802c13a
 80041d4:	20012f74 	.word	0x20012f74
 80041d8:	20012f70 	.word	0x20012f70

080041dc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 80041dc:	6803      	ldr	r3, [r0, #0]
 80041de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80041e0:	4718      	bx	r3
	...

080041e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 80041e4:	4b12      	ldr	r3, [pc, #72]	; (8004230 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 80041e6:	b513      	push	{r0, r1, r4, lr}
          solid()
 80041e8:	6003      	str	r3, [r0, #0]
 80041ea:	f44f 7380 	mov.w	r3, #256	; 0x100
 80041ee:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 80041f0:	4b10      	ldr	r3, [pc, #64]	; (8004234 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 80041f2:	7241      	strb	r1, [r0, #9]
 80041f4:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80041f6:	4910      	ldr	r1, [pc, #64]	; (8004238 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 80041f8:	4b10      	ldr	r3, [pc, #64]	; (800423c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80041fa:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 80041fe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004202:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004204:	2200      	movs	r2, #0
 8004206:	6042      	str	r2, [r0, #4]
 8004208:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 800420a:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 800420c:	81c2      	strh	r2, [r0, #14]
          solid()
 800420e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004212:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004216:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 800421a:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 800421e:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004220:	9100      	str	r1, [sp, #0]
 8004222:	3010      	adds	r0, #16
 8004224:	4611      	mov	r1, r2
 8004226:	f7fe fb2d 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800422a:	4620      	mov	r0, r4
 800422c:	b002      	add	sp, #8
 800422e:	bd10      	pop	{r4, pc}
 8004230:	0802d57c 	.word	0x0802d57c
 8004234:	0802d484 	.word	0x0802d484
 8004238:	20012f22 	.word	0x20012f22
 800423c:	20012f20 	.word	0x20012f20

08004240 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8004240:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004244:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004248:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800424a:	68a0      	ldr	r0, [r4, #8]
 800424c:	6803      	ldr	r3, [r0, #0]
 800424e:	6a1b      	ldr	r3, [r3, #32]
 8004250:	4798      	blx	r3
 8004252:	f241 03af 	movw	r3, #4271	; 0x10af
 8004256:	4298      	cmp	r0, r3
 8004258:	d805      	bhi.n	8004266 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 800425a:	4b42      	ldr	r3, [pc, #264]	; (8004364 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 800425c:	4a42      	ldr	r2, [pc, #264]	; (8004368 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 800425e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004260:	4842      	ldr	r0, [pc, #264]	; (800436c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8004262:	f025 ff97 	bl	802a194 <__assert_func>
 8004266:	6860      	ldr	r0, [r4, #4]
 8004268:	6803      	ldr	r3, [r0, #0]
 800426a:	6a1b      	ldr	r3, [r3, #32]
 800426c:	4798      	blx	r3
 800426e:	280f      	cmp	r0, #15
 8004270:	d803      	bhi.n	800427a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8004272:	4b3f      	ldr	r3, [pc, #252]	; (8004370 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8004274:	4a3c      	ldr	r2, [pc, #240]	; (8004368 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004276:	21a4      	movs	r1, #164	; 0xa4
 8004278:	e7f2      	b.n	8004260 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800427a:	68e0      	ldr	r0, [r4, #12]
 800427c:	6803      	ldr	r3, [r0, #0]
 800427e:	6a1b      	ldr	r3, [r3, #32]
 8004280:	4798      	blx	r3
 8004282:	2837      	cmp	r0, #55	; 0x37
 8004284:	d803      	bhi.n	800428e <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8004286:	4b3b      	ldr	r3, [pc, #236]	; (8004374 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8004288:	4a37      	ldr	r2, [pc, #220]	; (8004368 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 800428a:	21a5      	movs	r1, #165	; 0xa5
 800428c:	e7e8      	b.n	8004260 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800428e:	f011 f8f7 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004292:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004378 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8004296:	3004      	adds	r0, #4
 8004298:	f011 f958 	bl	801554c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800429c:	f8d9 0000 	ldr.w	r0, [r9]
 80042a0:	b110      	cbz	r0, 80042a8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80042a2:	6803      	ldr	r3, [r0, #0]
 80042a4:	68db      	ldr	r3, [r3, #12]
 80042a6:	4798      	blx	r3
    if (*currentTrans)
 80042a8:	f8d9 0000 	ldr.w	r0, [r9]
 80042ac:	b110      	cbz	r0, 80042b4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80042ae:	6803      	ldr	r3, [r0, #0]
 80042b0:	681b      	ldr	r3, [r3, #0]
 80042b2:	4798      	blx	r3
    if (*currentScreen)
 80042b4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800437c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 80042b8:	f8d8 0000 	ldr.w	r0, [r8]
 80042bc:	b110      	cbz	r0, 80042c4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80042be:	6803      	ldr	r3, [r0, #0]
 80042c0:	695b      	ldr	r3, [r3, #20]
 80042c2:	4798      	blx	r3
    if (*currentPresenter)
 80042c4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80042c8:	b110      	cbz	r0, 80042d0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80042ca:	6803      	ldr	r3, [r0, #0]
 80042cc:	685b      	ldr	r3, [r3, #4]
 80042ce:	4798      	blx	r3
    if (*currentScreen)
 80042d0:	f8d8 0000 	ldr.w	r0, [r8]
 80042d4:	b110      	cbz	r0, 80042dc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80042d6:	6803      	ldr	r3, [r0, #0]
 80042d8:	681b      	ldr	r3, [r3, #0]
 80042da:	4798      	blx	r3
    if (*currentPresenter)
 80042dc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80042e0:	b110      	cbz	r0, 80042e8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80042e2:	6803      	ldr	r3, [r0, #0]
 80042e4:	689b      	ldr	r3, [r3, #8]
 80042e6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80042e8:	68e0      	ldr	r0, [r4, #12]
 80042ea:	2100      	movs	r1, #0
 80042ec:	f7ff ff76 	bl	80041dc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80042f0:	2114      	movs	r1, #20
 80042f2:	4605      	mov	r5, r0
 80042f4:	f7ff ff76 	bl	80041e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80042f8:	68a0      	ldr	r0, [r4, #8]
 80042fa:	6803      	ldr	r3, [r0, #0]
 80042fc:	2100      	movs	r1, #0
 80042fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004300:	4798      	blx	r3
 8004302:	4606      	mov	r6, r0
 8004304:	f004 fc52 	bl	8008bac <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004308:	6860      	ldr	r0, [r4, #4]
 800430a:	6803      	ldr	r3, [r0, #0]
 800430c:	2100      	movs	r1, #0
 800430e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004310:	4798      	blx	r3
 8004312:	4631      	mov	r1, r6
 8004314:	4604      	mov	r4, r0
 8004316:	f004 fc23 	bl	8008b60 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 800431a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800431e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004322:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004326:	b1dc      	cbz	r4, 8004360 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8004328:	1d23      	adds	r3, r4, #4
 800432a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800432e:	6833      	ldr	r3, [r6, #0]
 8004330:	f8c4 a008 	str.w	sl, [r4, #8]
 8004334:	4630      	mov	r0, r6
 8004336:	68db      	ldr	r3, [r3, #12]
 8004338:	63f4      	str	r4, [r6, #60]	; 0x3c
 800433a:	4798      	blx	r3
    newPresenter->activate();
 800433c:	6823      	ldr	r3, [r4, #0]
 800433e:	4620      	mov	r0, r4
 8004340:	681b      	ldr	r3, [r3, #0]
 8004342:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004344:	4629      	mov	r1, r5
 8004346:	4630      	mov	r0, r6
 8004348:	f012 fec6 	bl	80170d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800434c:	682b      	ldr	r3, [r5, #0]
 800434e:	4628      	mov	r0, r5
 8004350:	691b      	ldr	r3, [r3, #16]
 8004352:	4798      	blx	r3
    newTransition->invalidate();
 8004354:	682b      	ldr	r3, [r5, #0]
 8004356:	4628      	mov	r0, r5
 8004358:	695b      	ldr	r3, [r3, #20]
}
 800435a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800435e:	4718      	bx	r3
    model->bind(newPresenter);
 8004360:	4623      	mov	r3, r4
 8004362:	e7e2      	b.n	800432a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8004364:	0802beb4 	.word	0x0802beb4
 8004368:	0802c76b 	.word	0x0802c76b
 800436c:	0802c050 	.word	0x0802c050
 8004370:	0802c097 	.word	0x0802c097
 8004374:	0802c13a 	.word	0x0802c13a
 8004378:	20012f74 	.word	0x20012f74
 800437c:	20012f70 	.word	0x20012f70

08004380 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 8004380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004384:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004388:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800438a:	68a0      	ldr	r0, [r4, #8]
 800438c:	6803      	ldr	r3, [r0, #0]
 800438e:	6a1b      	ldr	r3, [r3, #32]
 8004390:	4798      	blx	r3
 8004392:	f241 035b 	movw	r3, #4187	; 0x105b
 8004396:	4298      	cmp	r0, r3
 8004398:	d805      	bhi.n	80043a6 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x26>
 800439a:	4b42      	ldr	r3, [pc, #264]	; (80044a4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 800439c:	4a42      	ldr	r2, [pc, #264]	; (80044a8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 800439e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80043a0:	4842      	ldr	r0, [pc, #264]	; (80044ac <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 80043a2:	f025 fef7 	bl	802a194 <__assert_func>
 80043a6:	6860      	ldr	r0, [r4, #4]
 80043a8:	6803      	ldr	r3, [r0, #0]
 80043aa:	6a1b      	ldr	r3, [r3, #32]
 80043ac:	4798      	blx	r3
 80043ae:	280f      	cmp	r0, #15
 80043b0:	d803      	bhi.n	80043ba <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x3a>
 80043b2:	4b3f      	ldr	r3, [pc, #252]	; (80044b0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 80043b4:	4a3c      	ldr	r2, [pc, #240]	; (80044a8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80043b6:	21a4      	movs	r1, #164	; 0xa4
 80043b8:	e7f2      	b.n	80043a0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80043ba:	68e0      	ldr	r0, [r4, #12]
 80043bc:	6803      	ldr	r3, [r0, #0]
 80043be:	6a1b      	ldr	r3, [r3, #32]
 80043c0:	4798      	blx	r3
 80043c2:	2837      	cmp	r0, #55	; 0x37
 80043c4:	d803      	bhi.n	80043ce <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4e>
 80043c6:	4b3b      	ldr	r3, [pc, #236]	; (80044b4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 80043c8:	4a37      	ldr	r2, [pc, #220]	; (80044a8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80043ca:	21a5      	movs	r1, #165	; 0xa5
 80043cc:	e7e8      	b.n	80043a0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80043ce:	f011 f857 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80043d2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80044b8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 80043d6:	3004      	adds	r0, #4
 80043d8:	f011 f8b8 	bl	801554c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80043dc:	f8d9 0000 	ldr.w	r0, [r9]
 80043e0:	b110      	cbz	r0, 80043e8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80043e2:	6803      	ldr	r3, [r0, #0]
 80043e4:	68db      	ldr	r3, [r3, #12]
 80043e6:	4798      	blx	r3
    if (*currentTrans)
 80043e8:	f8d9 0000 	ldr.w	r0, [r9]
 80043ec:	b110      	cbz	r0, 80043f4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80043ee:	6803      	ldr	r3, [r0, #0]
 80043f0:	681b      	ldr	r3, [r3, #0]
 80043f2:	4798      	blx	r3
    if (*currentScreen)
 80043f4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80044bc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 80043f8:	f8d8 0000 	ldr.w	r0, [r8]
 80043fc:	b110      	cbz	r0, 8004404 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80043fe:	6803      	ldr	r3, [r0, #0]
 8004400:	695b      	ldr	r3, [r3, #20]
 8004402:	4798      	blx	r3
    if (*currentPresenter)
 8004404:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004408:	b110      	cbz	r0, 8004410 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800440a:	6803      	ldr	r3, [r0, #0]
 800440c:	685b      	ldr	r3, [r3, #4]
 800440e:	4798      	blx	r3
    if (*currentScreen)
 8004410:	f8d8 0000 	ldr.w	r0, [r8]
 8004414:	b110      	cbz	r0, 800441c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004416:	6803      	ldr	r3, [r0, #0]
 8004418:	681b      	ldr	r3, [r3, #0]
 800441a:	4798      	blx	r3
    if (*currentPresenter)
 800441c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004420:	b110      	cbz	r0, 8004428 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004422:	6803      	ldr	r3, [r0, #0]
 8004424:	689b      	ldr	r3, [r3, #8]
 8004426:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004428:	68e0      	ldr	r0, [r4, #12]
 800442a:	2100      	movs	r1, #0
 800442c:	f7ff fed6 	bl	80041dc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004430:	2114      	movs	r1, #20
 8004432:	4605      	mov	r5, r0
 8004434:	f7ff fed6 	bl	80041e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004438:	68a0      	ldr	r0, [r4, #8]
 800443a:	6803      	ldr	r3, [r0, #0]
 800443c:	2100      	movs	r1, #0
 800443e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004440:	4798      	blx	r3
 8004442:	4606      	mov	r6, r0
 8004444:	f003 ffe2 	bl	800840c <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004448:	6860      	ldr	r0, [r4, #4]
 800444a:	6803      	ldr	r3, [r0, #0]
 800444c:	2100      	movs	r1, #0
 800444e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004450:	4798      	blx	r3
 8004452:	4631      	mov	r1, r6
 8004454:	4604      	mov	r4, r0
 8004456:	f003 ffb3 	bl	80083c0 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 800445a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800445e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004462:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004466:	b1dc      	cbz	r4, 80044a0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x120>
 8004468:	1d23      	adds	r3, r4, #4
 800446a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800446e:	6833      	ldr	r3, [r6, #0]
 8004470:	f8c4 a008 	str.w	sl, [r4, #8]
 8004474:	4630      	mov	r0, r6
 8004476:	68db      	ldr	r3, [r3, #12]
 8004478:	63f4      	str	r4, [r6, #60]	; 0x3c
 800447a:	4798      	blx	r3
    newPresenter->activate();
 800447c:	6823      	ldr	r3, [r4, #0]
 800447e:	4620      	mov	r0, r4
 8004480:	681b      	ldr	r3, [r3, #0]
 8004482:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004484:	4629      	mov	r1, r5
 8004486:	4630      	mov	r0, r6
 8004488:	f012 fe26 	bl	80170d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800448c:	682b      	ldr	r3, [r5, #0]
 800448e:	4628      	mov	r0, r5
 8004490:	691b      	ldr	r3, [r3, #16]
 8004492:	4798      	blx	r3
    newTransition->invalidate();
 8004494:	682b      	ldr	r3, [r5, #0]
 8004496:	4628      	mov	r0, r5
 8004498:	695b      	ldr	r3, [r3, #20]
}
 800449a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800449e:	4718      	bx	r3
    model->bind(newPresenter);
 80044a0:	4623      	mov	r3, r4
 80044a2:	e7e2      	b.n	800446a <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xea>
 80044a4:	0802beb4 	.word	0x0802beb4
 80044a8:	0802c88b 	.word	0x0802c88b
 80044ac:	0802c050 	.word	0x0802c050
 80044b0:	0802c097 	.word	0x0802c097
 80044b4:	0802c13a 	.word	0x0802c13a
 80044b8:	20012f74 	.word	0x20012f74
 80044bc:	20012f70 	.word	0x20012f70

080044c0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 80044c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80044c4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80044c8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80044ca:	68a0      	ldr	r0, [r4, #8]
 80044cc:	6803      	ldr	r3, [r0, #0]
 80044ce:	6a1b      	ldr	r3, [r3, #32]
 80044d0:	4798      	blx	r3
 80044d2:	f241 035b 	movw	r3, #4187	; 0x105b
 80044d6:	4298      	cmp	r0, r3
 80044d8:	d805      	bhi.n	80044e6 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 80044da:	4b42      	ldr	r3, [pc, #264]	; (80045e4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 80044dc:	4a42      	ldr	r2, [pc, #264]	; (80045e8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 80044de:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80044e0:	4842      	ldr	r0, [pc, #264]	; (80045ec <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 80044e2:	f025 fe57 	bl	802a194 <__assert_func>
 80044e6:	6860      	ldr	r0, [r4, #4]
 80044e8:	6803      	ldr	r3, [r0, #0]
 80044ea:	6a1b      	ldr	r3, [r3, #32]
 80044ec:	4798      	blx	r3
 80044ee:	280f      	cmp	r0, #15
 80044f0:	d803      	bhi.n	80044fa <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 80044f2:	4b3f      	ldr	r3, [pc, #252]	; (80045f0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 80044f4:	4a3c      	ldr	r2, [pc, #240]	; (80045e8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 80044f6:	21a4      	movs	r1, #164	; 0xa4
 80044f8:	e7f2      	b.n	80044e0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80044fa:	68e0      	ldr	r0, [r4, #12]
 80044fc:	6803      	ldr	r3, [r0, #0]
 80044fe:	6a1b      	ldr	r3, [r3, #32]
 8004500:	4798      	blx	r3
 8004502:	2837      	cmp	r0, #55	; 0x37
 8004504:	d803      	bhi.n	800450e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8004506:	4b3b      	ldr	r3, [pc, #236]	; (80045f4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8004508:	4a37      	ldr	r2, [pc, #220]	; (80045e8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800450a:	21a5      	movs	r1, #165	; 0xa5
 800450c:	e7e8      	b.n	80044e0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800450e:	f010 ffb7 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004512:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80045f8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8004516:	3004      	adds	r0, #4
 8004518:	f011 f818 	bl	801554c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800451c:	f8d9 0000 	ldr.w	r0, [r9]
 8004520:	b110      	cbz	r0, 8004528 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004522:	6803      	ldr	r3, [r0, #0]
 8004524:	68db      	ldr	r3, [r3, #12]
 8004526:	4798      	blx	r3
    if (*currentTrans)
 8004528:	f8d9 0000 	ldr.w	r0, [r9]
 800452c:	b110      	cbz	r0, 8004534 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800452e:	6803      	ldr	r3, [r0, #0]
 8004530:	681b      	ldr	r3, [r3, #0]
 8004532:	4798      	blx	r3
    if (*currentScreen)
 8004534:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80045fc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8004538:	f8d8 0000 	ldr.w	r0, [r8]
 800453c:	b110      	cbz	r0, 8004544 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800453e:	6803      	ldr	r3, [r0, #0]
 8004540:	695b      	ldr	r3, [r3, #20]
 8004542:	4798      	blx	r3
    if (*currentPresenter)
 8004544:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004548:	b110      	cbz	r0, 8004550 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800454a:	6803      	ldr	r3, [r0, #0]
 800454c:	685b      	ldr	r3, [r3, #4]
 800454e:	4798      	blx	r3
    if (*currentScreen)
 8004550:	f8d8 0000 	ldr.w	r0, [r8]
 8004554:	b110      	cbz	r0, 800455c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004556:	6803      	ldr	r3, [r0, #0]
 8004558:	681b      	ldr	r3, [r3, #0]
 800455a:	4798      	blx	r3
    if (*currentPresenter)
 800455c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004560:	b110      	cbz	r0, 8004568 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004562:	6803      	ldr	r3, [r0, #0]
 8004564:	689b      	ldr	r3, [r3, #8]
 8004566:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004568:	68e0      	ldr	r0, [r4, #12]
 800456a:	2100      	movs	r1, #0
 800456c:	f7ff fe36 	bl	80041dc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004570:	2114      	movs	r1, #20
 8004572:	4605      	mov	r5, r0
 8004574:	f7ff fe36 	bl	80041e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004578:	68a0      	ldr	r0, [r4, #8]
 800457a:	6803      	ldr	r3, [r0, #0]
 800457c:	2100      	movs	r1, #0
 800457e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004580:	4798      	blx	r3
 8004582:	4606      	mov	r6, r0
 8004584:	f003 ff84 	bl	8008490 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004588:	6860      	ldr	r0, [r4, #4]
 800458a:	6803      	ldr	r3, [r0, #0]
 800458c:	2100      	movs	r1, #0
 800458e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004590:	4798      	blx	r3
 8004592:	4631      	mov	r1, r6
 8004594:	4604      	mov	r4, r0
 8004596:	f003 ff55 	bl	8008444 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 800459a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800459e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80045a2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80045a6:	b1dc      	cbz	r4, 80045e0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 80045a8:	1d23      	adds	r3, r4, #4
 80045aa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80045ae:	6833      	ldr	r3, [r6, #0]
 80045b0:	f8c4 a008 	str.w	sl, [r4, #8]
 80045b4:	4630      	mov	r0, r6
 80045b6:	68db      	ldr	r3, [r3, #12]
 80045b8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80045ba:	4798      	blx	r3
    newPresenter->activate();
 80045bc:	6823      	ldr	r3, [r4, #0]
 80045be:	4620      	mov	r0, r4
 80045c0:	681b      	ldr	r3, [r3, #0]
 80045c2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80045c4:	4629      	mov	r1, r5
 80045c6:	4630      	mov	r0, r6
 80045c8:	f012 fd86 	bl	80170d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80045cc:	682b      	ldr	r3, [r5, #0]
 80045ce:	4628      	mov	r0, r5
 80045d0:	691b      	ldr	r3, [r3, #16]
 80045d2:	4798      	blx	r3
    newTransition->invalidate();
 80045d4:	682b      	ldr	r3, [r5, #0]
 80045d6:	4628      	mov	r0, r5
 80045d8:	695b      	ldr	r3, [r3, #20]
}
 80045da:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80045de:	4718      	bx	r3
    model->bind(newPresenter);
 80045e0:	4623      	mov	r3, r4
 80045e2:	e7e2      	b.n	80045aa <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 80045e4:	0802beb4 	.word	0x0802beb4
 80045e8:	0802c9b3 	.word	0x0802c9b3
 80045ec:	0802c050 	.word	0x0802c050
 80045f0:	0802c097 	.word	0x0802c097
 80045f4:	0802c13a 	.word	0x0802c13a
 80045f8:	20012f74 	.word	0x20012f74
 80045fc:	20012f70 	.word	0x20012f70

08004600 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 8004600:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004604:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004608:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800460a:	68a0      	ldr	r0, [r4, #8]
 800460c:	6803      	ldr	r3, [r0, #0]
 800460e:	6a1b      	ldr	r3, [r3, #32]
 8004610:	4798      	blx	r3
 8004612:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004616:	d205      	bcs.n	8004624 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 8004618:	4b42      	ldr	r3, [pc, #264]	; (8004724 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 800461a:	4a43      	ldr	r2, [pc, #268]	; (8004728 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 800461c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800461e:	4843      	ldr	r0, [pc, #268]	; (800472c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 8004620:	f025 fdb8 	bl	802a194 <__assert_func>
 8004624:	6860      	ldr	r0, [r4, #4]
 8004626:	6803      	ldr	r3, [r0, #0]
 8004628:	6a1b      	ldr	r3, [r3, #32]
 800462a:	4798      	blx	r3
 800462c:	280f      	cmp	r0, #15
 800462e:	d803      	bhi.n	8004638 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 8004630:	4b3f      	ldr	r3, [pc, #252]	; (8004730 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 8004632:	4a3d      	ldr	r2, [pc, #244]	; (8004728 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004634:	21a4      	movs	r1, #164	; 0xa4
 8004636:	e7f2      	b.n	800461e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004638:	68e0      	ldr	r0, [r4, #12]
 800463a:	6803      	ldr	r3, [r0, #0]
 800463c:	6a1b      	ldr	r3, [r3, #32]
 800463e:	4798      	blx	r3
 8004640:	2837      	cmp	r0, #55	; 0x37
 8004642:	d803      	bhi.n	800464c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 8004644:	4b3b      	ldr	r3, [pc, #236]	; (8004734 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 8004646:	4a38      	ldr	r2, [pc, #224]	; (8004728 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004648:	21a5      	movs	r1, #165	; 0xa5
 800464a:	e7e8      	b.n	800461e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800464c:	f010 ff18 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004650:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004738 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 8004654:	3004      	adds	r0, #4
 8004656:	f010 ff79 	bl	801554c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800465a:	f8d9 0000 	ldr.w	r0, [r9]
 800465e:	b110      	cbz	r0, 8004666 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004660:	6803      	ldr	r3, [r0, #0]
 8004662:	68db      	ldr	r3, [r3, #12]
 8004664:	4798      	blx	r3
    if (*currentTrans)
 8004666:	f8d9 0000 	ldr.w	r0, [r9]
 800466a:	b110      	cbz	r0, 8004672 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800466c:	6803      	ldr	r3, [r0, #0]
 800466e:	681b      	ldr	r3, [r3, #0]
 8004670:	4798      	blx	r3
    if (*currentScreen)
 8004672:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800473c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 8004676:	f8d8 0000 	ldr.w	r0, [r8]
 800467a:	b110      	cbz	r0, 8004682 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800467c:	6803      	ldr	r3, [r0, #0]
 800467e:	695b      	ldr	r3, [r3, #20]
 8004680:	4798      	blx	r3
    if (*currentPresenter)
 8004682:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004686:	b110      	cbz	r0, 800468e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004688:	6803      	ldr	r3, [r0, #0]
 800468a:	685b      	ldr	r3, [r3, #4]
 800468c:	4798      	blx	r3
    if (*currentScreen)
 800468e:	f8d8 0000 	ldr.w	r0, [r8]
 8004692:	b110      	cbz	r0, 800469a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004694:	6803      	ldr	r3, [r0, #0]
 8004696:	681b      	ldr	r3, [r3, #0]
 8004698:	4798      	blx	r3
    if (*currentPresenter)
 800469a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800469e:	b110      	cbz	r0, 80046a6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80046a0:	6803      	ldr	r3, [r0, #0]
 80046a2:	689b      	ldr	r3, [r3, #8]
 80046a4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80046a6:	68e0      	ldr	r0, [r4, #12]
 80046a8:	2100      	movs	r1, #0
 80046aa:	f7ff fd97 	bl	80041dc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80046ae:	2114      	movs	r1, #20
 80046b0:	4605      	mov	r5, r0
 80046b2:	f7ff fd97 	bl	80041e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80046b6:	68a0      	ldr	r0, [r4, #8]
 80046b8:	6803      	ldr	r3, [r0, #0]
 80046ba:	2100      	movs	r1, #0
 80046bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046be:	4798      	blx	r3
 80046c0:	4606      	mov	r6, r0
 80046c2:	f003 fe49 	bl	8008358 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80046c6:	6860      	ldr	r0, [r4, #4]
 80046c8:	6803      	ldr	r3, [r0, #0]
 80046ca:	2100      	movs	r1, #0
 80046cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046ce:	4798      	blx	r3
 80046d0:	4631      	mov	r1, r6
 80046d2:	4604      	mov	r4, r0
 80046d4:	f003 fe1a 	bl	800830c <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 80046d8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80046dc:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80046e0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80046e4:	b1dc      	cbz	r4, 800471e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 80046e6:	1d23      	adds	r3, r4, #4
 80046e8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80046ec:	6833      	ldr	r3, [r6, #0]
 80046ee:	f8c4 a008 	str.w	sl, [r4, #8]
 80046f2:	4630      	mov	r0, r6
 80046f4:	68db      	ldr	r3, [r3, #12]
 80046f6:	63f4      	str	r4, [r6, #60]	; 0x3c
 80046f8:	4798      	blx	r3
    newPresenter->activate();
 80046fa:	6823      	ldr	r3, [r4, #0]
 80046fc:	4620      	mov	r0, r4
 80046fe:	681b      	ldr	r3, [r3, #0]
 8004700:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004702:	4629      	mov	r1, r5
 8004704:	4630      	mov	r0, r6
 8004706:	f012 fce7 	bl	80170d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800470a:	682b      	ldr	r3, [r5, #0]
 800470c:	4628      	mov	r0, r5
 800470e:	691b      	ldr	r3, [r3, #16]
 8004710:	4798      	blx	r3
    newTransition->invalidate();
 8004712:	682b      	ldr	r3, [r5, #0]
 8004714:	4628      	mov	r0, r5
 8004716:	695b      	ldr	r3, [r3, #20]
}
 8004718:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800471c:	4718      	bx	r3
    model->bind(newPresenter);
 800471e:	4623      	mov	r3, r4
 8004720:	e7e2      	b.n	80046e8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 8004722:	bf00      	nop
 8004724:	0802beb4 	.word	0x0802beb4
 8004728:	0802cad9 	.word	0x0802cad9
 800472c:	0802c050 	.word	0x0802c050
 8004730:	0802c097 	.word	0x0802c097
 8004734:	0802c13a 	.word	0x0802c13a
 8004738:	20012f74 	.word	0x20012f74
 800473c:	20012f70 	.word	0x20012f70

08004740 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8004740:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004744:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004748:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800474a:	68a0      	ldr	r0, [r4, #8]
 800474c:	6803      	ldr	r3, [r0, #0]
 800474e:	6a1b      	ldr	r3, [r3, #32]
 8004750:	4798      	blx	r3
 8004752:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8004756:	4298      	cmp	r0, r3
 8004758:	d805      	bhi.n	8004766 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 800475a:	4b42      	ldr	r3, [pc, #264]	; (8004864 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 800475c:	4a42      	ldr	r2, [pc, #264]	; (8004868 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800475e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004760:	4842      	ldr	r0, [pc, #264]	; (800486c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8004762:	f025 fd17 	bl	802a194 <__assert_func>
 8004766:	6860      	ldr	r0, [r4, #4]
 8004768:	6803      	ldr	r3, [r0, #0]
 800476a:	6a1b      	ldr	r3, [r3, #32]
 800476c:	4798      	blx	r3
 800476e:	280f      	cmp	r0, #15
 8004770:	d803      	bhi.n	800477a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8004772:	4b3f      	ldr	r3, [pc, #252]	; (8004870 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8004774:	4a3c      	ldr	r2, [pc, #240]	; (8004868 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004776:	21a4      	movs	r1, #164	; 0xa4
 8004778:	e7f2      	b.n	8004760 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800477a:	68e0      	ldr	r0, [r4, #12]
 800477c:	6803      	ldr	r3, [r0, #0]
 800477e:	6a1b      	ldr	r3, [r3, #32]
 8004780:	4798      	blx	r3
 8004782:	2837      	cmp	r0, #55	; 0x37
 8004784:	d803      	bhi.n	800478e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8004786:	4b3b      	ldr	r3, [pc, #236]	; (8004874 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8004788:	4a37      	ldr	r2, [pc, #220]	; (8004868 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800478a:	21a5      	movs	r1, #165	; 0xa5
 800478c:	e7e8      	b.n	8004760 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800478e:	f010 fe77 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004792:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004878 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8004796:	3004      	adds	r0, #4
 8004798:	f010 fed8 	bl	801554c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800479c:	f8d9 0000 	ldr.w	r0, [r9]
 80047a0:	b110      	cbz	r0, 80047a8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80047a2:	6803      	ldr	r3, [r0, #0]
 80047a4:	68db      	ldr	r3, [r3, #12]
 80047a6:	4798      	blx	r3
    if (*currentTrans)
 80047a8:	f8d9 0000 	ldr.w	r0, [r9]
 80047ac:	b110      	cbz	r0, 80047b4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80047ae:	6803      	ldr	r3, [r0, #0]
 80047b0:	681b      	ldr	r3, [r3, #0]
 80047b2:	4798      	blx	r3
    if (*currentScreen)
 80047b4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800487c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 80047b8:	f8d8 0000 	ldr.w	r0, [r8]
 80047bc:	b110      	cbz	r0, 80047c4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80047be:	6803      	ldr	r3, [r0, #0]
 80047c0:	695b      	ldr	r3, [r3, #20]
 80047c2:	4798      	blx	r3
    if (*currentPresenter)
 80047c4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80047c8:	b110      	cbz	r0, 80047d0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80047ca:	6803      	ldr	r3, [r0, #0]
 80047cc:	685b      	ldr	r3, [r3, #4]
 80047ce:	4798      	blx	r3
    if (*currentScreen)
 80047d0:	f8d8 0000 	ldr.w	r0, [r8]
 80047d4:	b110      	cbz	r0, 80047dc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80047d6:	6803      	ldr	r3, [r0, #0]
 80047d8:	681b      	ldr	r3, [r3, #0]
 80047da:	4798      	blx	r3
    if (*currentPresenter)
 80047dc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80047e0:	b110      	cbz	r0, 80047e8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80047e2:	6803      	ldr	r3, [r0, #0]
 80047e4:	689b      	ldr	r3, [r3, #8]
 80047e6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80047e8:	68e0      	ldr	r0, [r4, #12]
 80047ea:	2100      	movs	r1, #0
 80047ec:	f7ff fcf6 	bl	80041dc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80047f0:	2114      	movs	r1, #20
 80047f2:	4605      	mov	r5, r0
 80047f4:	f7ff fcf6 	bl	80041e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80047f8:	68a0      	ldr	r0, [r4, #8]
 80047fa:	6803      	ldr	r3, [r0, #0]
 80047fc:	2100      	movs	r1, #0
 80047fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004800:	4798      	blx	r3
 8004802:	4606      	mov	r6, r0
 8004804:	f004 f828 	bl	8008858 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004808:	6860      	ldr	r0, [r4, #4]
 800480a:	6803      	ldr	r3, [r0, #0]
 800480c:	2100      	movs	r1, #0
 800480e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004810:	4798      	blx	r3
 8004812:	4631      	mov	r1, r6
 8004814:	4604      	mov	r4, r0
 8004816:	f003 fff9 	bl	800880c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 800481a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800481e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004822:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004826:	b1dc      	cbz	r4, 8004860 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8004828:	1d23      	adds	r3, r4, #4
 800482a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800482e:	6833      	ldr	r3, [r6, #0]
 8004830:	f8c4 a008 	str.w	sl, [r4, #8]
 8004834:	4630      	mov	r0, r6
 8004836:	68db      	ldr	r3, [r3, #12]
 8004838:	63f4      	str	r4, [r6, #60]	; 0x3c
 800483a:	4798      	blx	r3
    newPresenter->activate();
 800483c:	6823      	ldr	r3, [r4, #0]
 800483e:	4620      	mov	r0, r4
 8004840:	681b      	ldr	r3, [r3, #0]
 8004842:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004844:	4629      	mov	r1, r5
 8004846:	4630      	mov	r0, r6
 8004848:	f012 fc46 	bl	80170d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800484c:	682b      	ldr	r3, [r5, #0]
 800484e:	4628      	mov	r0, r5
 8004850:	691b      	ldr	r3, [r3, #16]
 8004852:	4798      	blx	r3
    newTransition->invalidate();
 8004854:	682b      	ldr	r3, [r5, #0]
 8004856:	4628      	mov	r0, r5
 8004858:	695b      	ldr	r3, [r3, #20]
}
 800485a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800485e:	4718      	bx	r3
    model->bind(newPresenter);
 8004860:	4623      	mov	r3, r4
 8004862:	e7e2      	b.n	800482a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8004864:	0802beb4 	.word	0x0802beb4
 8004868:	0802cbf7 	.word	0x0802cbf7
 800486c:	0802c050 	.word	0x0802c050
 8004870:	0802c097 	.word	0x0802c097
 8004874:	0802c13a 	.word	0x0802c13a
 8004878:	20012f74 	.word	0x20012f74
 800487c:	20012f70 	.word	0x20012f70

08004880 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8004880:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004884:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004888:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800488a:	68a0      	ldr	r0, [r4, #8]
 800488c:	6803      	ldr	r3, [r0, #0]
 800488e:	6a1b      	ldr	r3, [r3, #32]
 8004890:	4798      	blx	r3
 8004892:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8004896:	4298      	cmp	r0, r3
 8004898:	d805      	bhi.n	80048a6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 800489a:	4b42      	ldr	r3, [pc, #264]	; (80049a4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 800489c:	4a42      	ldr	r2, [pc, #264]	; (80049a8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800489e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80048a0:	4842      	ldr	r0, [pc, #264]	; (80049ac <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 80048a2:	f025 fc77 	bl	802a194 <__assert_func>
 80048a6:	6860      	ldr	r0, [r4, #4]
 80048a8:	6803      	ldr	r3, [r0, #0]
 80048aa:	6a1b      	ldr	r3, [r3, #32]
 80048ac:	4798      	blx	r3
 80048ae:	280f      	cmp	r0, #15
 80048b0:	d803      	bhi.n	80048ba <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80048b2:	4b3f      	ldr	r3, [pc, #252]	; (80049b0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 80048b4:	4a3c      	ldr	r2, [pc, #240]	; (80049a8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80048b6:	21a4      	movs	r1, #164	; 0xa4
 80048b8:	e7f2      	b.n	80048a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80048ba:	68e0      	ldr	r0, [r4, #12]
 80048bc:	6803      	ldr	r3, [r0, #0]
 80048be:	6a1b      	ldr	r3, [r3, #32]
 80048c0:	4798      	blx	r3
 80048c2:	2837      	cmp	r0, #55	; 0x37
 80048c4:	d803      	bhi.n	80048ce <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 80048c6:	4b3b      	ldr	r3, [pc, #236]	; (80049b4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 80048c8:	4a37      	ldr	r2, [pc, #220]	; (80049a8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80048ca:	21a5      	movs	r1, #165	; 0xa5
 80048cc:	e7e8      	b.n	80048a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80048ce:	f010 fdd7 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80048d2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80049b8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 80048d6:	3004      	adds	r0, #4
 80048d8:	f010 fe38 	bl	801554c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80048dc:	f8d9 0000 	ldr.w	r0, [r9]
 80048e0:	b110      	cbz	r0, 80048e8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80048e2:	6803      	ldr	r3, [r0, #0]
 80048e4:	68db      	ldr	r3, [r3, #12]
 80048e6:	4798      	blx	r3
    if (*currentTrans)
 80048e8:	f8d9 0000 	ldr.w	r0, [r9]
 80048ec:	b110      	cbz	r0, 80048f4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80048ee:	6803      	ldr	r3, [r0, #0]
 80048f0:	681b      	ldr	r3, [r3, #0]
 80048f2:	4798      	blx	r3
    if (*currentScreen)
 80048f4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80049bc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 80048f8:	f8d8 0000 	ldr.w	r0, [r8]
 80048fc:	b110      	cbz	r0, 8004904 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80048fe:	6803      	ldr	r3, [r0, #0]
 8004900:	695b      	ldr	r3, [r3, #20]
 8004902:	4798      	blx	r3
    if (*currentPresenter)
 8004904:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004908:	b110      	cbz	r0, 8004910 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800490a:	6803      	ldr	r3, [r0, #0]
 800490c:	685b      	ldr	r3, [r3, #4]
 800490e:	4798      	blx	r3
    if (*currentScreen)
 8004910:	f8d8 0000 	ldr.w	r0, [r8]
 8004914:	b110      	cbz	r0, 800491c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004916:	6803      	ldr	r3, [r0, #0]
 8004918:	681b      	ldr	r3, [r3, #0]
 800491a:	4798      	blx	r3
    if (*currentPresenter)
 800491c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004920:	b110      	cbz	r0, 8004928 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004922:	6803      	ldr	r3, [r0, #0]
 8004924:	689b      	ldr	r3, [r3, #8]
 8004926:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004928:	68e0      	ldr	r0, [r4, #12]
 800492a:	2100      	movs	r1, #0
 800492c:	f7ff fc56 	bl	80041dc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004930:	2114      	movs	r1, #20
 8004932:	4605      	mov	r5, r0
 8004934:	f7ff fc56 	bl	80041e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004938:	68a0      	ldr	r0, [r4, #8]
 800493a:	6803      	ldr	r3, [r0, #0]
 800493c:	2100      	movs	r1, #0
 800493e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004940:	4798      	blx	r3
 8004942:	4606      	mov	r6, r0
 8004944:	f003 ff46 	bl	80087d4 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004948:	6860      	ldr	r0, [r4, #4]
 800494a:	6803      	ldr	r3, [r0, #0]
 800494c:	2100      	movs	r1, #0
 800494e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004950:	4798      	blx	r3
 8004952:	4631      	mov	r1, r6
 8004954:	4604      	mov	r4, r0
 8004956:	f003 ff17 	bl	8008788 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 800495a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800495e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004962:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004966:	b1dc      	cbz	r4, 80049a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8004968:	1d23      	adds	r3, r4, #4
 800496a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800496e:	6833      	ldr	r3, [r6, #0]
 8004970:	f8c4 a008 	str.w	sl, [r4, #8]
 8004974:	4630      	mov	r0, r6
 8004976:	68db      	ldr	r3, [r3, #12]
 8004978:	63f4      	str	r4, [r6, #60]	; 0x3c
 800497a:	4798      	blx	r3
    newPresenter->activate();
 800497c:	6823      	ldr	r3, [r4, #0]
 800497e:	4620      	mov	r0, r4
 8004980:	681b      	ldr	r3, [r3, #0]
 8004982:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004984:	4629      	mov	r1, r5
 8004986:	4630      	mov	r0, r6
 8004988:	f012 fba6 	bl	80170d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800498c:	682b      	ldr	r3, [r5, #0]
 800498e:	4628      	mov	r0, r5
 8004990:	691b      	ldr	r3, [r3, #16]
 8004992:	4798      	blx	r3
    newTransition->invalidate();
 8004994:	682b      	ldr	r3, [r5, #0]
 8004996:	4628      	mov	r0, r5
 8004998:	695b      	ldr	r3, [r3, #20]
}
 800499a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800499e:	4718      	bx	r3
    model->bind(newPresenter);
 80049a0:	4623      	mov	r3, r4
 80049a2:	e7e2      	b.n	800496a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 80049a4:	0802beb4 	.word	0x0802beb4
 80049a8:	0802cd3b 	.word	0x0802cd3b
 80049ac:	0802c050 	.word	0x0802c050
 80049b0:	0802c097 	.word	0x0802c097
 80049b4:	0802c13a 	.word	0x0802c13a
 80049b8:	20012f74 	.word	0x20012f74
 80049bc:	20012f70 	.word	0x20012f70

080049c0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 80049c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80049c4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80049c8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80049ca:	68a0      	ldr	r0, [r4, #8]
 80049cc:	6803      	ldr	r3, [r0, #0]
 80049ce:	6a1b      	ldr	r3, [r3, #32]
 80049d0:	4798      	blx	r3
 80049d2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80049d6:	d205      	bcs.n	80049e4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 80049d8:	4b42      	ldr	r3, [pc, #264]	; (8004ae4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80049da:	4a43      	ldr	r2, [pc, #268]	; (8004ae8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80049dc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80049de:	4843      	ldr	r0, [pc, #268]	; (8004aec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 80049e0:	f025 fbd8 	bl	802a194 <__assert_func>
 80049e4:	6860      	ldr	r0, [r4, #4]
 80049e6:	6803      	ldr	r3, [r0, #0]
 80049e8:	6a1b      	ldr	r3, [r3, #32]
 80049ea:	4798      	blx	r3
 80049ec:	280f      	cmp	r0, #15
 80049ee:	d803      	bhi.n	80049f8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 80049f0:	4b3f      	ldr	r3, [pc, #252]	; (8004af0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 80049f2:	4a3d      	ldr	r2, [pc, #244]	; (8004ae8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80049f4:	21a4      	movs	r1, #164	; 0xa4
 80049f6:	e7f2      	b.n	80049de <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80049f8:	68e0      	ldr	r0, [r4, #12]
 80049fa:	6803      	ldr	r3, [r0, #0]
 80049fc:	6a1b      	ldr	r3, [r3, #32]
 80049fe:	4798      	blx	r3
 8004a00:	2837      	cmp	r0, #55	; 0x37
 8004a02:	d803      	bhi.n	8004a0c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8004a04:	4b3b      	ldr	r3, [pc, #236]	; (8004af4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8004a06:	4a38      	ldr	r2, [pc, #224]	; (8004ae8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004a08:	21a5      	movs	r1, #165	; 0xa5
 8004a0a:	e7e8      	b.n	80049de <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004a0c:	f010 fd38 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004a10:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004af8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8004a14:	3004      	adds	r0, #4
 8004a16:	f010 fd99 	bl	801554c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004a1a:	f8d9 0000 	ldr.w	r0, [r9]
 8004a1e:	b110      	cbz	r0, 8004a26 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004a20:	6803      	ldr	r3, [r0, #0]
 8004a22:	68db      	ldr	r3, [r3, #12]
 8004a24:	4798      	blx	r3
    if (*currentTrans)
 8004a26:	f8d9 0000 	ldr.w	r0, [r9]
 8004a2a:	b110      	cbz	r0, 8004a32 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004a2c:	6803      	ldr	r3, [r0, #0]
 8004a2e:	681b      	ldr	r3, [r3, #0]
 8004a30:	4798      	blx	r3
    if (*currentScreen)
 8004a32:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004afc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8004a36:	f8d8 0000 	ldr.w	r0, [r8]
 8004a3a:	b110      	cbz	r0, 8004a42 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004a3c:	6803      	ldr	r3, [r0, #0]
 8004a3e:	695b      	ldr	r3, [r3, #20]
 8004a40:	4798      	blx	r3
    if (*currentPresenter)
 8004a42:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a46:	b110      	cbz	r0, 8004a4e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004a48:	6803      	ldr	r3, [r0, #0]
 8004a4a:	685b      	ldr	r3, [r3, #4]
 8004a4c:	4798      	blx	r3
    if (*currentScreen)
 8004a4e:	f8d8 0000 	ldr.w	r0, [r8]
 8004a52:	b110      	cbz	r0, 8004a5a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004a54:	6803      	ldr	r3, [r0, #0]
 8004a56:	681b      	ldr	r3, [r3, #0]
 8004a58:	4798      	blx	r3
    if (*currentPresenter)
 8004a5a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a5e:	b110      	cbz	r0, 8004a66 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004a60:	6803      	ldr	r3, [r0, #0]
 8004a62:	689b      	ldr	r3, [r3, #8]
 8004a64:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004a66:	68e0      	ldr	r0, [r4, #12]
 8004a68:	2100      	movs	r1, #0
 8004a6a:	f7ff fbb7 	bl	80041dc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004a6e:	2114      	movs	r1, #20
 8004a70:	4605      	mov	r5, r0
 8004a72:	f7ff fbb7 	bl	80041e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004a76:	68a0      	ldr	r0, [r4, #8]
 8004a78:	6803      	ldr	r3, [r0, #0]
 8004a7a:	2100      	movs	r1, #0
 8004a7c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a7e:	4798      	blx	r3
 8004a80:	4606      	mov	r6, r0
 8004a82:	f003 fe4d 	bl	8008720 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004a86:	6860      	ldr	r0, [r4, #4]
 8004a88:	6803      	ldr	r3, [r0, #0]
 8004a8a:	2100      	movs	r1, #0
 8004a8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a8e:	4798      	blx	r3
 8004a90:	4631      	mov	r1, r6
 8004a92:	4604      	mov	r4, r0
 8004a94:	f003 fe1e 	bl	80086d4 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004a98:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004a9c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004aa0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004aa4:	b1dc      	cbz	r4, 8004ade <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 8004aa6:	1d23      	adds	r3, r4, #4
 8004aa8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004aac:	6833      	ldr	r3, [r6, #0]
 8004aae:	f8c4 a008 	str.w	sl, [r4, #8]
 8004ab2:	4630      	mov	r0, r6
 8004ab4:	68db      	ldr	r3, [r3, #12]
 8004ab6:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004ab8:	4798      	blx	r3
    newPresenter->activate();
 8004aba:	6823      	ldr	r3, [r4, #0]
 8004abc:	4620      	mov	r0, r4
 8004abe:	681b      	ldr	r3, [r3, #0]
 8004ac0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004ac2:	4629      	mov	r1, r5
 8004ac4:	4630      	mov	r0, r6
 8004ac6:	f012 fb07 	bl	80170d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004aca:	682b      	ldr	r3, [r5, #0]
 8004acc:	4628      	mov	r0, r5
 8004ace:	691b      	ldr	r3, [r3, #16]
 8004ad0:	4798      	blx	r3
    newTransition->invalidate();
 8004ad2:	682b      	ldr	r3, [r5, #0]
 8004ad4:	4628      	mov	r0, r5
 8004ad6:	695b      	ldr	r3, [r3, #20]
}
 8004ad8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004adc:	4718      	bx	r3
    model->bind(newPresenter);
 8004ade:	4623      	mov	r3, r4
 8004ae0:	e7e2      	b.n	8004aa8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 8004ae2:	bf00      	nop
 8004ae4:	0802beb4 	.word	0x0802beb4
 8004ae8:	0802ce7b 	.word	0x0802ce7b
 8004aec:	0802c050 	.word	0x0802c050
 8004af0:	0802c097 	.word	0x0802c097
 8004af4:	0802c13a 	.word	0x0802c13a
 8004af8:	20012f74 	.word	0x20012f74
 8004afc:	20012f70 	.word	0x20012f70

08004b00 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8004b00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004b04:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004b08:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004b0a:	68a0      	ldr	r0, [r4, #8]
 8004b0c:	6803      	ldr	r3, [r0, #0]
 8004b0e:	6a1b      	ldr	r3, [r3, #32]
 8004b10:	4798      	blx	r3
 8004b12:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8004b16:	4298      	cmp	r0, r3
 8004b18:	d805      	bhi.n	8004b26 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 8004b1a:	4b42      	ldr	r3, [pc, #264]	; (8004c24 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8004b1c:	4a42      	ldr	r2, [pc, #264]	; (8004c28 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004b1e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004b20:	4842      	ldr	r0, [pc, #264]	; (8004c2c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8004b22:	f025 fb37 	bl	802a194 <__assert_func>
 8004b26:	6860      	ldr	r0, [r4, #4]
 8004b28:	6803      	ldr	r3, [r0, #0]
 8004b2a:	6a1b      	ldr	r3, [r3, #32]
 8004b2c:	4798      	blx	r3
 8004b2e:	280f      	cmp	r0, #15
 8004b30:	d803      	bhi.n	8004b3a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8004b32:	4b3f      	ldr	r3, [pc, #252]	; (8004c30 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8004b34:	4a3c      	ldr	r2, [pc, #240]	; (8004c28 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004b36:	21a4      	movs	r1, #164	; 0xa4
 8004b38:	e7f2      	b.n	8004b20 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004b3a:	68e0      	ldr	r0, [r4, #12]
 8004b3c:	6803      	ldr	r3, [r0, #0]
 8004b3e:	6a1b      	ldr	r3, [r3, #32]
 8004b40:	4798      	blx	r3
 8004b42:	2837      	cmp	r0, #55	; 0x37
 8004b44:	d803      	bhi.n	8004b4e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8004b46:	4b3b      	ldr	r3, [pc, #236]	; (8004c34 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8004b48:	4a37      	ldr	r2, [pc, #220]	; (8004c28 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004b4a:	21a5      	movs	r1, #165	; 0xa5
 8004b4c:	e7e8      	b.n	8004b20 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004b4e:	f010 fc97 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004b52:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004c38 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8004b56:	3004      	adds	r0, #4
 8004b58:	f010 fcf8 	bl	801554c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004b5c:	f8d9 0000 	ldr.w	r0, [r9]
 8004b60:	b110      	cbz	r0, 8004b68 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004b62:	6803      	ldr	r3, [r0, #0]
 8004b64:	68db      	ldr	r3, [r3, #12]
 8004b66:	4798      	blx	r3
    if (*currentTrans)
 8004b68:	f8d9 0000 	ldr.w	r0, [r9]
 8004b6c:	b110      	cbz	r0, 8004b74 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004b6e:	6803      	ldr	r3, [r0, #0]
 8004b70:	681b      	ldr	r3, [r3, #0]
 8004b72:	4798      	blx	r3
    if (*currentScreen)
 8004b74:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004c3c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8004b78:	f8d8 0000 	ldr.w	r0, [r8]
 8004b7c:	b110      	cbz	r0, 8004b84 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004b7e:	6803      	ldr	r3, [r0, #0]
 8004b80:	695b      	ldr	r3, [r3, #20]
 8004b82:	4798      	blx	r3
    if (*currentPresenter)
 8004b84:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b88:	b110      	cbz	r0, 8004b90 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004b8a:	6803      	ldr	r3, [r0, #0]
 8004b8c:	685b      	ldr	r3, [r3, #4]
 8004b8e:	4798      	blx	r3
    if (*currentScreen)
 8004b90:	f8d8 0000 	ldr.w	r0, [r8]
 8004b94:	b110      	cbz	r0, 8004b9c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004b96:	6803      	ldr	r3, [r0, #0]
 8004b98:	681b      	ldr	r3, [r3, #0]
 8004b9a:	4798      	blx	r3
    if (*currentPresenter)
 8004b9c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ba0:	b110      	cbz	r0, 8004ba8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004ba2:	6803      	ldr	r3, [r0, #0]
 8004ba4:	689b      	ldr	r3, [r3, #8]
 8004ba6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004ba8:	68e0      	ldr	r0, [r4, #12]
 8004baa:	2100      	movs	r1, #0
 8004bac:	f7ff fb16 	bl	80041dc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004bb0:	2114      	movs	r1, #20
 8004bb2:	4605      	mov	r5, r0
 8004bb4:	f7ff fb16 	bl	80041e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004bb8:	68a0      	ldr	r0, [r4, #8]
 8004bba:	6803      	ldr	r3, [r0, #0]
 8004bbc:	2100      	movs	r1, #0
 8004bbe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bc0:	4798      	blx	r3
 8004bc2:	4606      	mov	r6, r0
 8004bc4:	f003 ff8c 	bl	8008ae0 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004bc8:	6860      	ldr	r0, [r4, #4]
 8004bca:	6803      	ldr	r3, [r0, #0]
 8004bcc:	2100      	movs	r1, #0
 8004bce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bd0:	4798      	blx	r3
 8004bd2:	4631      	mov	r1, r6
 8004bd4:	4604      	mov	r4, r0
 8004bd6:	f003 ff5d 	bl	8008a94 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 8004bda:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004bde:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004be2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004be6:	b1dc      	cbz	r4, 8004c20 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8004be8:	1d23      	adds	r3, r4, #4
 8004bea:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004bee:	6833      	ldr	r3, [r6, #0]
 8004bf0:	f8c4 a008 	str.w	sl, [r4, #8]
 8004bf4:	4630      	mov	r0, r6
 8004bf6:	68db      	ldr	r3, [r3, #12]
 8004bf8:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004bfa:	4798      	blx	r3
    newPresenter->activate();
 8004bfc:	6823      	ldr	r3, [r4, #0]
 8004bfe:	4620      	mov	r0, r4
 8004c00:	681b      	ldr	r3, [r3, #0]
 8004c02:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004c04:	4629      	mov	r1, r5
 8004c06:	4630      	mov	r0, r6
 8004c08:	f012 fa66 	bl	80170d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004c0c:	682b      	ldr	r3, [r5, #0]
 8004c0e:	4628      	mov	r0, r5
 8004c10:	691b      	ldr	r3, [r3, #16]
 8004c12:	4798      	blx	r3
    newTransition->invalidate();
 8004c14:	682b      	ldr	r3, [r5, #0]
 8004c16:	4628      	mov	r0, r5
 8004c18:	695b      	ldr	r3, [r3, #20]
}
 8004c1a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c1e:	4718      	bx	r3
    model->bind(newPresenter);
 8004c20:	4623      	mov	r3, r4
 8004c22:	e7e2      	b.n	8004bea <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8004c24:	0802beb4 	.word	0x0802beb4
 8004c28:	0802cfab 	.word	0x0802cfab
 8004c2c:	0802c050 	.word	0x0802c050
 8004c30:	0802c097 	.word	0x0802c097
 8004c34:	0802c13a 	.word	0x0802c13a
 8004c38:	20012f74 	.word	0x20012f74
 8004c3c:	20012f70 	.word	0x20012f70

08004c40 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8004c40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004c44:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004c48:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c4a:	68a0      	ldr	r0, [r4, #8]
 8004c4c:	6803      	ldr	r3, [r0, #0]
 8004c4e:	6a1b      	ldr	r3, [r3, #32]
 8004c50:	4798      	blx	r3
 8004c52:	f241 33f7 	movw	r3, #5111	; 0x13f7
 8004c56:	4298      	cmp	r0, r3
 8004c58:	d805      	bhi.n	8004c66 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8004c5a:	4b42      	ldr	r3, [pc, #264]	; (8004d64 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8004c5c:	4a42      	ldr	r2, [pc, #264]	; (8004d68 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004c5e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004c60:	4842      	ldr	r0, [pc, #264]	; (8004d6c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8004c62:	f025 fa97 	bl	802a194 <__assert_func>
 8004c66:	6860      	ldr	r0, [r4, #4]
 8004c68:	6803      	ldr	r3, [r0, #0]
 8004c6a:	6a1b      	ldr	r3, [r3, #32]
 8004c6c:	4798      	blx	r3
 8004c6e:	280f      	cmp	r0, #15
 8004c70:	d803      	bhi.n	8004c7a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8004c72:	4b3f      	ldr	r3, [pc, #252]	; (8004d70 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8004c74:	4a3c      	ldr	r2, [pc, #240]	; (8004d68 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004c76:	21a4      	movs	r1, #164	; 0xa4
 8004c78:	e7f2      	b.n	8004c60 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004c7a:	68e0      	ldr	r0, [r4, #12]
 8004c7c:	6803      	ldr	r3, [r0, #0]
 8004c7e:	6a1b      	ldr	r3, [r3, #32]
 8004c80:	4798      	blx	r3
 8004c82:	2837      	cmp	r0, #55	; 0x37
 8004c84:	d803      	bhi.n	8004c8e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8004c86:	4b3b      	ldr	r3, [pc, #236]	; (8004d74 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8004c88:	4a37      	ldr	r2, [pc, #220]	; (8004d68 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004c8a:	21a5      	movs	r1, #165	; 0xa5
 8004c8c:	e7e8      	b.n	8004c60 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004c8e:	f010 fbf7 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004c92:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004d78 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8004c96:	3004      	adds	r0, #4
 8004c98:	f010 fc58 	bl	801554c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c9c:	f8d9 0000 	ldr.w	r0, [r9]
 8004ca0:	b110      	cbz	r0, 8004ca8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004ca2:	6803      	ldr	r3, [r0, #0]
 8004ca4:	68db      	ldr	r3, [r3, #12]
 8004ca6:	4798      	blx	r3
    if (*currentTrans)
 8004ca8:	f8d9 0000 	ldr.w	r0, [r9]
 8004cac:	b110      	cbz	r0, 8004cb4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004cae:	6803      	ldr	r3, [r0, #0]
 8004cb0:	681b      	ldr	r3, [r3, #0]
 8004cb2:	4798      	blx	r3
    if (*currentScreen)
 8004cb4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004d7c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8004cb8:	f8d8 0000 	ldr.w	r0, [r8]
 8004cbc:	b110      	cbz	r0, 8004cc4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004cbe:	6803      	ldr	r3, [r0, #0]
 8004cc0:	695b      	ldr	r3, [r3, #20]
 8004cc2:	4798      	blx	r3
    if (*currentPresenter)
 8004cc4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004cc8:	b110      	cbz	r0, 8004cd0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004cca:	6803      	ldr	r3, [r0, #0]
 8004ccc:	685b      	ldr	r3, [r3, #4]
 8004cce:	4798      	blx	r3
    if (*currentScreen)
 8004cd0:	f8d8 0000 	ldr.w	r0, [r8]
 8004cd4:	b110      	cbz	r0, 8004cdc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004cd6:	6803      	ldr	r3, [r0, #0]
 8004cd8:	681b      	ldr	r3, [r3, #0]
 8004cda:	4798      	blx	r3
    if (*currentPresenter)
 8004cdc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ce0:	b110      	cbz	r0, 8004ce8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004ce2:	6803      	ldr	r3, [r0, #0]
 8004ce4:	689b      	ldr	r3, [r3, #8]
 8004ce6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004ce8:	68e0      	ldr	r0, [r4, #12]
 8004cea:	2100      	movs	r1, #0
 8004cec:	f7ff fa76 	bl	80041dc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004cf0:	2114      	movs	r1, #20
 8004cf2:	4605      	mov	r5, r0
 8004cf4:	f7ff fa76 	bl	80041e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004cf8:	68a0      	ldr	r0, [r4, #8]
 8004cfa:	6803      	ldr	r3, [r0, #0]
 8004cfc:	2100      	movs	r1, #0
 8004cfe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d00:	4798      	blx	r3
 8004d02:	4606      	mov	r6, r0
 8004d04:	f003 fe4a 	bl	800899c <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004d08:	6860      	ldr	r0, [r4, #4]
 8004d0a:	6803      	ldr	r3, [r0, #0]
 8004d0c:	2100      	movs	r1, #0
 8004d0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d10:	4798      	blx	r3
 8004d12:	4631      	mov	r1, r6
 8004d14:	4604      	mov	r4, r0
 8004d16:	f003 fe1b 	bl	8008950 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8004d1a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004d1e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004d22:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004d26:	b1dc      	cbz	r4, 8004d60 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8004d28:	1d23      	adds	r3, r4, #4
 8004d2a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004d2e:	6833      	ldr	r3, [r6, #0]
 8004d30:	f8c4 a008 	str.w	sl, [r4, #8]
 8004d34:	4630      	mov	r0, r6
 8004d36:	68db      	ldr	r3, [r3, #12]
 8004d38:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004d3a:	4798      	blx	r3
    newPresenter->activate();
 8004d3c:	6823      	ldr	r3, [r4, #0]
 8004d3e:	4620      	mov	r0, r4
 8004d40:	681b      	ldr	r3, [r3, #0]
 8004d42:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004d44:	4629      	mov	r1, r5
 8004d46:	4630      	mov	r0, r6
 8004d48:	f012 f9c6 	bl	80170d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004d4c:	682b      	ldr	r3, [r5, #0]
 8004d4e:	4628      	mov	r0, r5
 8004d50:	691b      	ldr	r3, [r3, #16]
 8004d52:	4798      	blx	r3
    newTransition->invalidate();
 8004d54:	682b      	ldr	r3, [r5, #0]
 8004d56:	4628      	mov	r0, r5
 8004d58:	695b      	ldr	r3, [r3, #20]
}
 8004d5a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004d5e:	4718      	bx	r3
    model->bind(newPresenter);
 8004d60:	4623      	mov	r3, r4
 8004d62:	e7e2      	b.n	8004d2a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8004d64:	0802beb4 	.word	0x0802beb4
 8004d68:	0802d0ed 	.word	0x0802d0ed
 8004d6c:	0802c050 	.word	0x0802c050
 8004d70:	0802c097 	.word	0x0802c097
 8004d74:	0802c13a 	.word	0x0802c13a
 8004d78:	20012f74 	.word	0x20012f74
 8004d7c:	20012f70 	.word	0x20012f70

08004d80 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8004d80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d84:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004d88:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d8a:	68a0      	ldr	r0, [r4, #8]
 8004d8c:	6803      	ldr	r3, [r0, #0]
 8004d8e:	6a1b      	ldr	r3, [r3, #32]
 8004d90:	4798      	blx	r3
 8004d92:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004d96:	d205      	bcs.n	8004da4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8004d98:	4b42      	ldr	r3, [pc, #264]	; (8004ea4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8004d9a:	4a43      	ldr	r2, [pc, #268]	; (8004ea8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004d9c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d9e:	4843      	ldr	r0, [pc, #268]	; (8004eac <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8004da0:	f025 f9f8 	bl	802a194 <__assert_func>
 8004da4:	6860      	ldr	r0, [r4, #4]
 8004da6:	6803      	ldr	r3, [r0, #0]
 8004da8:	6a1b      	ldr	r3, [r3, #32]
 8004daa:	4798      	blx	r3
 8004dac:	280f      	cmp	r0, #15
 8004dae:	d803      	bhi.n	8004db8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8004db0:	4b3f      	ldr	r3, [pc, #252]	; (8004eb0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8004db2:	4a3d      	ldr	r2, [pc, #244]	; (8004ea8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004db4:	21a4      	movs	r1, #164	; 0xa4
 8004db6:	e7f2      	b.n	8004d9e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004db8:	68e0      	ldr	r0, [r4, #12]
 8004dba:	6803      	ldr	r3, [r0, #0]
 8004dbc:	6a1b      	ldr	r3, [r3, #32]
 8004dbe:	4798      	blx	r3
 8004dc0:	2837      	cmp	r0, #55	; 0x37
 8004dc2:	d803      	bhi.n	8004dcc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8004dc4:	4b3b      	ldr	r3, [pc, #236]	; (8004eb4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8004dc6:	4a38      	ldr	r2, [pc, #224]	; (8004ea8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004dc8:	21a5      	movs	r1, #165	; 0xa5
 8004dca:	e7e8      	b.n	8004d9e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004dcc:	f010 fb58 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004dd0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004eb8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8004dd4:	3004      	adds	r0, #4
 8004dd6:	f010 fbb9 	bl	801554c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004dda:	f8d9 0000 	ldr.w	r0, [r9]
 8004dde:	b110      	cbz	r0, 8004de6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004de0:	6803      	ldr	r3, [r0, #0]
 8004de2:	68db      	ldr	r3, [r3, #12]
 8004de4:	4798      	blx	r3
    if (*currentTrans)
 8004de6:	f8d9 0000 	ldr.w	r0, [r9]
 8004dea:	b110      	cbz	r0, 8004df2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004dec:	6803      	ldr	r3, [r0, #0]
 8004dee:	681b      	ldr	r3, [r3, #0]
 8004df0:	4798      	blx	r3
    if (*currentScreen)
 8004df2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004ebc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8004df6:	f8d8 0000 	ldr.w	r0, [r8]
 8004dfa:	b110      	cbz	r0, 8004e02 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004dfc:	6803      	ldr	r3, [r0, #0]
 8004dfe:	695b      	ldr	r3, [r3, #20]
 8004e00:	4798      	blx	r3
    if (*currentPresenter)
 8004e02:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e06:	b110      	cbz	r0, 8004e0e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004e08:	6803      	ldr	r3, [r0, #0]
 8004e0a:	685b      	ldr	r3, [r3, #4]
 8004e0c:	4798      	blx	r3
    if (*currentScreen)
 8004e0e:	f8d8 0000 	ldr.w	r0, [r8]
 8004e12:	b110      	cbz	r0, 8004e1a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004e14:	6803      	ldr	r3, [r0, #0]
 8004e16:	681b      	ldr	r3, [r3, #0]
 8004e18:	4798      	blx	r3
    if (*currentPresenter)
 8004e1a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e1e:	b110      	cbz	r0, 8004e26 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004e20:	6803      	ldr	r3, [r0, #0]
 8004e22:	689b      	ldr	r3, [r3, #8]
 8004e24:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004e26:	68e0      	ldr	r0, [r4, #12]
 8004e28:	2100      	movs	r1, #0
 8004e2a:	f7ff f9d7 	bl	80041dc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004e2e:	2114      	movs	r1, #20
 8004e30:	4605      	mov	r5, r0
 8004e32:	f7ff f9d7 	bl	80041e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004e36:	68a0      	ldr	r0, [r4, #8]
 8004e38:	6803      	ldr	r3, [r0, #0]
 8004e3a:	2100      	movs	r1, #0
 8004e3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e3e:	4798      	blx	r3
 8004e40:	4606      	mov	r6, r0
 8004e42:	f003 fd51 	bl	80088e8 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004e46:	6860      	ldr	r0, [r4, #4]
 8004e48:	6803      	ldr	r3, [r0, #0]
 8004e4a:	2100      	movs	r1, #0
 8004e4c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e4e:	4798      	blx	r3
 8004e50:	4631      	mov	r1, r6
 8004e52:	4604      	mov	r4, r0
 8004e54:	f003 fd22 	bl	800889c <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8004e58:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004e5c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004e60:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004e64:	b1dc      	cbz	r4, 8004e9e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8004e66:	1d23      	adds	r3, r4, #4
 8004e68:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004e6c:	6833      	ldr	r3, [r6, #0]
 8004e6e:	f8c4 a008 	str.w	sl, [r4, #8]
 8004e72:	4630      	mov	r0, r6
 8004e74:	68db      	ldr	r3, [r3, #12]
 8004e76:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004e78:	4798      	blx	r3
    newPresenter->activate();
 8004e7a:	6823      	ldr	r3, [r4, #0]
 8004e7c:	4620      	mov	r0, r4
 8004e7e:	681b      	ldr	r3, [r3, #0]
 8004e80:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004e82:	4629      	mov	r1, r5
 8004e84:	4630      	mov	r0, r6
 8004e86:	f012 f927 	bl	80170d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e8a:	682b      	ldr	r3, [r5, #0]
 8004e8c:	4628      	mov	r0, r5
 8004e8e:	691b      	ldr	r3, [r3, #16]
 8004e90:	4798      	blx	r3
    newTransition->invalidate();
 8004e92:	682b      	ldr	r3, [r5, #0]
 8004e94:	4628      	mov	r0, r5
 8004e96:	695b      	ldr	r3, [r3, #20]
}
 8004e98:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e9c:	4718      	bx	r3
    model->bind(newPresenter);
 8004e9e:	4623      	mov	r3, r4
 8004ea0:	e7e2      	b.n	8004e68 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8004ea2:	bf00      	nop
 8004ea4:	0802beb4 	.word	0x0802beb4
 8004ea8:	0802d22f 	.word	0x0802d22f
 8004eac:	0802c050 	.word	0x0802c050
 8004eb0:	0802c097 	.word	0x0802c097
 8004eb4:	0802c13a 	.word	0x0802c13a
 8004eb8:	20012f74 	.word	0x20012f74
 8004ebc:	20012f70 	.word	0x20012f70

08004ec0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8004ec0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004ec4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004ec8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004eca:	68a0      	ldr	r0, [r4, #8]
 8004ecc:	6803      	ldr	r3, [r0, #0]
 8004ece:	6a1b      	ldr	r3, [r3, #32]
 8004ed0:	4798      	blx	r3
 8004ed2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004ed6:	d205      	bcs.n	8004ee4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8004ed8:	4b42      	ldr	r3, [pc, #264]	; (8004fe4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8004eda:	4a43      	ldr	r2, [pc, #268]	; (8004fe8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004edc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004ede:	4843      	ldr	r0, [pc, #268]	; (8004fec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8004ee0:	f025 f958 	bl	802a194 <__assert_func>
 8004ee4:	6860      	ldr	r0, [r4, #4]
 8004ee6:	6803      	ldr	r3, [r0, #0]
 8004ee8:	6a1b      	ldr	r3, [r3, #32]
 8004eea:	4798      	blx	r3
 8004eec:	280f      	cmp	r0, #15
 8004eee:	d803      	bhi.n	8004ef8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8004ef0:	4b3f      	ldr	r3, [pc, #252]	; (8004ff0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8004ef2:	4a3d      	ldr	r2, [pc, #244]	; (8004fe8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004ef4:	21a4      	movs	r1, #164	; 0xa4
 8004ef6:	e7f2      	b.n	8004ede <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004ef8:	68e0      	ldr	r0, [r4, #12]
 8004efa:	6803      	ldr	r3, [r0, #0]
 8004efc:	6a1b      	ldr	r3, [r3, #32]
 8004efe:	4798      	blx	r3
 8004f00:	2837      	cmp	r0, #55	; 0x37
 8004f02:	d803      	bhi.n	8004f0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8004f04:	4b3b      	ldr	r3, [pc, #236]	; (8004ff4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8004f06:	4a38      	ldr	r2, [pc, #224]	; (8004fe8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004f08:	21a5      	movs	r1, #165	; 0xa5
 8004f0a:	e7e8      	b.n	8004ede <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004f0c:	f010 fab8 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004f10:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ff8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8004f14:	3004      	adds	r0, #4
 8004f16:	f010 fb19 	bl	801554c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004f1a:	f8d9 0000 	ldr.w	r0, [r9]
 8004f1e:	b110      	cbz	r0, 8004f26 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004f20:	6803      	ldr	r3, [r0, #0]
 8004f22:	68db      	ldr	r3, [r3, #12]
 8004f24:	4798      	blx	r3
    if (*currentTrans)
 8004f26:	f8d9 0000 	ldr.w	r0, [r9]
 8004f2a:	b110      	cbz	r0, 8004f32 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004f2c:	6803      	ldr	r3, [r0, #0]
 8004f2e:	681b      	ldr	r3, [r3, #0]
 8004f30:	4798      	blx	r3
    if (*currentScreen)
 8004f32:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004ffc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8004f36:	f8d8 0000 	ldr.w	r0, [r8]
 8004f3a:	b110      	cbz	r0, 8004f42 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004f3c:	6803      	ldr	r3, [r0, #0]
 8004f3e:	695b      	ldr	r3, [r3, #20]
 8004f40:	4798      	blx	r3
    if (*currentPresenter)
 8004f42:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f46:	b110      	cbz	r0, 8004f4e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004f48:	6803      	ldr	r3, [r0, #0]
 8004f4a:	685b      	ldr	r3, [r3, #4]
 8004f4c:	4798      	blx	r3
    if (*currentScreen)
 8004f4e:	f8d8 0000 	ldr.w	r0, [r8]
 8004f52:	b110      	cbz	r0, 8004f5a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004f54:	6803      	ldr	r3, [r0, #0]
 8004f56:	681b      	ldr	r3, [r3, #0]
 8004f58:	4798      	blx	r3
    if (*currentPresenter)
 8004f5a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f5e:	b110      	cbz	r0, 8004f66 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004f60:	6803      	ldr	r3, [r0, #0]
 8004f62:	689b      	ldr	r3, [r3, #8]
 8004f64:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004f66:	68e0      	ldr	r0, [r4, #12]
 8004f68:	2100      	movs	r1, #0
 8004f6a:	f7ff f937 	bl	80041dc <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004f6e:	2114      	movs	r1, #20
 8004f70:	4605      	mov	r5, r0
 8004f72:	f7ff f937 	bl	80041e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004f76:	68a0      	ldr	r0, [r4, #8]
 8004f78:	6803      	ldr	r3, [r0, #0]
 8004f7a:	2100      	movs	r1, #0
 8004f7c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f7e:	4798      	blx	r3
 8004f80:	4606      	mov	r6, r0
 8004f82:	f003 fb6d 	bl	8008660 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004f86:	6860      	ldr	r0, [r4, #4]
 8004f88:	6803      	ldr	r3, [r0, #0]
 8004f8a:	2100      	movs	r1, #0
 8004f8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f8e:	4798      	blx	r3
 8004f90:	4631      	mov	r1, r6
 8004f92:	4604      	mov	r4, r0
 8004f94:	f003 fb3e 	bl	8008614 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004f98:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004f9c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004fa0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004fa4:	b1dc      	cbz	r4, 8004fde <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8004fa6:	1d23      	adds	r3, r4, #4
 8004fa8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004fac:	6833      	ldr	r3, [r6, #0]
 8004fae:	f8c4 a008 	str.w	sl, [r4, #8]
 8004fb2:	4630      	mov	r0, r6
 8004fb4:	68db      	ldr	r3, [r3, #12]
 8004fb6:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004fb8:	4798      	blx	r3
    newPresenter->activate();
 8004fba:	6823      	ldr	r3, [r4, #0]
 8004fbc:	4620      	mov	r0, r4
 8004fbe:	681b      	ldr	r3, [r3, #0]
 8004fc0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004fc2:	4629      	mov	r1, r5
 8004fc4:	4630      	mov	r0, r6
 8004fc6:	f012 f887 	bl	80170d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004fca:	682b      	ldr	r3, [r5, #0]
 8004fcc:	4628      	mov	r0, r5
 8004fce:	691b      	ldr	r3, [r3, #16]
 8004fd0:	4798      	blx	r3
    newTransition->invalidate();
 8004fd2:	682b      	ldr	r3, [r5, #0]
 8004fd4:	4628      	mov	r0, r5
 8004fd6:	695b      	ldr	r3, [r3, #20]
}
 8004fd8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004fdc:	4718      	bx	r3
    model->bind(newPresenter);
 8004fde:	4623      	mov	r3, r4
 8004fe0:	e7e2      	b.n	8004fa8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8004fe2:	bf00      	nop
 8004fe4:	0802beb4 	.word	0x0802beb4
 8004fe8:	0802d35b 	.word	0x0802d35b
 8004fec:	0802c050 	.word	0x0802c050
 8004ff0:	0802c097 	.word	0x0802c097
 8004ff4:	0802c13a 	.word	0x0802c13a
 8004ff8:	20012f74 	.word	0x20012f74
 8004ffc:	20012f70 	.word	0x20012f70

08005000 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8005000:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005002:	4770      	bx	lr

08005004 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 8005004:	4770      	bx	lr

08005006 <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 8005006:	4770      	bx	lr

08005008 <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8005008:	b510      	push	{r4, lr}
}
 800500a:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 800500e:	4604      	mov	r4, r0
}
 8005010:	f024 faad 	bl	802956e <_ZdlPvj>
 8005014:	4620      	mov	r0, r4
 8005016:	bd10      	pop	{r4, pc}

08005018 <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 8005018:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 800501c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005020:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 8005022:	2600      	movs	r6, #0
 8005024:	ed2d 8b02 	vpush	{d8}
 8005028:	8483      	strh	r3, [r0, #36]	; 0x24
 800502a:	4bb2      	ldr	r3, [pc, #712]	; (80052f4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2dc>)
          firstChild(0)
 800502c:	6286      	str	r6, [r0, #40]	; 0x28
 800502e:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8005032:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8005036:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 800503a:	e9c0 6607 	strd	r6, r6, [r0, #28]
 800503e:	f848 3b2c 	str.w	r3, [r8], #44
 8005042:	b08b      	sub	sp, #44	; 0x2c
 8005044:	4604      	mov	r4, r0
 8005046:	4640      	mov	r0, r8
 8005048:	f7fd fc42 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 800504c:	f104 0374 	add.w	r3, r4, #116	; 0x74
 8005050:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8005054:	4618      	mov	r0, r3
 8005056:	9303      	str	r3, [sp, #12]
 8005058:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 800505c:	f7fd fc38 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005060:	4658      	mov	r0, fp
 8005062:	f7fd fc35 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005066:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 800506a:	4da3      	ldr	r5, [pc, #652]	; (80052f8 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
        : TextArea()
 800506c:	4650      	mov	r0, sl
 800506e:	f7fd fc2f 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005072:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8005076:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 800507a:	4648      	mov	r0, r9
 800507c:	f7fd fc28 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005080:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8005084:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 8005088:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800508a:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 800508e:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 8005092:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 8005096:	f7fd fc1b 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800509a:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 800509e:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 80050a2:	4638      	mov	r0, r7
 80050a4:	f00d f9a6 	bl	80123f4 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 80050a8:	4a94      	ldr	r2, [pc, #592]	; (80052fc <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
 80050aa:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 80050ac:	4640      	mov	r0, r8
 80050ae:	226d      	movs	r2, #109	; 0x6d
 80050b0:	21d9      	movs	r1, #217	; 0xd9
 80050b2:	ad04      	add	r5, sp, #16
 80050b4:	f7fd fbd9 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80050b8:	f04f 33ff 	mov.w	r3, #4294967295
 80050bc:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 80050be:	4641      	mov	r1, r8
 80050c0:	4628      	mov	r0, r5
        linespace = space;
 80050c2:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 80050c6:	f00c fe5d 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80050ca:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80050ce:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 80050d2:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 80050d6:	4b8a      	ldr	r3, [pc, #552]	; (8005300 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 80050d8:	9308      	str	r3, [sp, #32]
 80050da:	222f      	movs	r2, #47	; 0x2f
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 80050dc:	a908      	add	r1, sp, #32
 80050de:	4640      	mov	r0, r8
 80050e0:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80050e4:	f00d f8e8 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 80050e8:	4641      	mov	r1, r8
 80050ea:	4620      	mov	r0, r4
 80050ec:	f00a ff30 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 80050f0:	9b03      	ldr	r3, [sp, #12]
 80050f2:	4631      	mov	r1, r6
 80050f4:	4618      	mov	r0, r3
 80050f6:	226d      	movs	r2, #109	; 0x6d
 80050f8:	f7fd fbb7 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 80050fc:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 80050fe:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 8005102:	f04f 32ff 	mov.w	r2, #4294967295
 8005106:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 800510a:	4619      	mov	r1, r3
 800510c:	4628      	mov	r0, r5
 800510e:	f00c fe39 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005112:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005116:	4b7a      	ldr	r3, [pc, #488]	; (8005300 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005118:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 800511a:	9b03      	ldr	r3, [sp, #12]
 800511c:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 8005120:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8005124:	2230      	movs	r2, #48	; 0x30
 8005126:	a908      	add	r1, sp, #32
 8005128:	4618      	mov	r0, r3
 800512a:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800512e:	f00d f8c3 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 8005132:	9b03      	ldr	r3, [sp, #12]
 8005134:	4620      	mov	r0, r4
 8005136:	4619      	mov	r1, r3
 8005138:	f00a ff0a 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 800513c:	4632      	mov	r2, r6
 800513e:	4658      	mov	r0, fp
 8005140:	2171      	movs	r1, #113	; 0x71
 8005142:	f7fd fb92 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005146:	f04f 32ff 	mov.w	r2, #4294967295
 800514a:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 800514e:	4659      	mov	r1, fp
 8005150:	4628      	mov	r0, r5
        linespace = space;
 8005152:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 8005156:	f00c fe15 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800515a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800515e:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 8005162:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005166:	4b66      	ldr	r3, [pc, #408]	; (8005300 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005168:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 800516a:	a908      	add	r1, sp, #32
 800516c:	2331      	movs	r3, #49	; 0x31
 800516e:	4658      	mov	r0, fp
 8005170:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005174:	f00d f8a0 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 8005178:	4659      	mov	r1, fp
 800517a:	4620      	mov	r0, r4
 800517c:	f00a fee8 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 8005180:	4650      	mov	r0, sl
 8005182:	227c      	movs	r2, #124	; 0x7c
 8005184:	214c      	movs	r1, #76	; 0x4c
 8005186:	f7fd fb70 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 800518a:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 800518e:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 8005192:	f04f 32ff 	mov.w	r2, #4294967295
 8005196:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 800519a:	4651      	mov	r1, sl
 800519c:	4628      	mov	r0, r5
 800519e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80051a2:	4798      	blx	r3
 80051a4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80051a8:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 80051ac:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80051b0:	4b53      	ldr	r3, [pc, #332]	; (8005300 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 80051b2:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 80051b4:	a908      	add	r1, sp, #32
 80051b6:	232e      	movs	r3, #46	; 0x2e
 80051b8:	4650      	mov	r0, sl
 80051ba:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80051be:	f00d f87b 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 80051c2:	4651      	mov	r1, sl
 80051c4:	4620      	mov	r0, r4
 80051c6:	f00a fec3 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 80051ca:	4648      	mov	r0, r9
 80051cc:	228b      	movs	r2, #139	; 0x8b
 80051ce:	2156      	movs	r1, #86	; 0x56
 80051d0:	f7fd fb4b 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 80051d4:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 80051d8:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 80051dc:	f04f 32ff 	mov.w	r2, #4294967295
 80051e0:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 80051e4:	4649      	mov	r1, r9
 80051e6:	4628      	mov	r0, r5
 80051e8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80051ec:	4798      	blx	r3
 80051ee:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80051f2:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 80051f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80051fa:	4b41      	ldr	r3, [pc, #260]	; (8005300 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 80051fc:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 80051fe:	a908      	add	r1, sp, #32
 8005200:	232d      	movs	r3, #45	; 0x2d
 8005202:	4648      	mov	r0, r9
 8005204:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005208:	f00d f856 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 800520c:	4649      	mov	r1, r9
 800520e:	4620      	mov	r0, r4
 8005210:	f00a fe9e 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 8005214:	ee18 0a10 	vmov	r0, s16
 8005218:	229a      	movs	r2, #154	; 0x9a
 800521a:	2156      	movs	r1, #86	; 0x56
 800521c:	f7fd fb25 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8005220:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 8005224:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 8005228:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 800522c:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 8005230:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 8005234:	4628      	mov	r0, r5
 8005236:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800523a:	4798      	blx	r3
 800523c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005240:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 8005244:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005248:	4b2d      	ldr	r3, [pc, #180]	; (8005300 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 800524a:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 800524c:	ee18 0a10 	vmov	r0, s16
 8005250:	232c      	movs	r3, #44	; 0x2c
 8005252:	a908      	add	r1, sp, #32
 8005254:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005258:	f00d f82e 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 800525c:	ee18 1a10 	vmov	r1, s16
 8005260:	4620      	mov	r0, r4
 8005262:	f00a fe75 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005266:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8005268:	a908      	add	r1, sp, #32
 800526a:	4638      	mov	r0, r7
 800526c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8005270:	f00a fe00 	bl	800fe74 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 8005274:	2212      	movs	r2, #18
 8005276:	4638      	mov	r0, r7
 8005278:	211c      	movs	r1, #28
 800527a:	f7fd faf6 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800527e:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8005282:	4638      	mov	r0, r7
 8005284:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005286:	21b8      	movs	r1, #184	; 0xb8
 8005288:	4798      	blx	r3
        setHeight(height);
 800528a:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 800528e:	4638      	mov	r0, r7
 8005290:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005292:	216a      	movs	r1, #106	; 0x6a
 8005294:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 8005296:	225c      	movs	r2, #92	; 0x5c
 8005298:	4611      	mov	r1, r2
 800529a:	4638      	mov	r0, r7
 800529c:	f00d f955 	bl	801254a <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 80052a0:	4638      	mov	r0, r7
 80052a2:	225a      	movs	r2, #90	; 0x5a
 80052a4:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80052a8:	f00d f9d4 	bl	8012654 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 80052ac:	4633      	mov	r3, r6
 80052ae:	225a      	movs	r2, #90	; 0x5a
 80052b0:	4638      	mov	r0, r7
 80052b2:	9600      	str	r6, [sp, #0]
 80052b4:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80052b8:	f00a fc89 	bl	800fbce <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 80052bc:	4631      	mov	r1, r6
 80052be:	4638      	mov	r0, r7
 80052c0:	f00d f972 	bl	80125a8 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 80052c4:	2335      	movs	r3, #53	; 0x35
 80052c6:	2208      	movs	r2, #8
 80052c8:	4638      	mov	r0, r7
 80052ca:	2105      	movs	r1, #5
 80052cc:	f00d f928 	bl	8012520 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80052d0:	4638      	mov	r0, r7
 80052d2:	2101      	movs	r1, #1
 80052d4:	f00d f8c6 	bl	8012464 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80052d8:	4638      	mov	r0, r7
 80052da:	2101      	movs	r1, #1
 80052dc:	f00d f8c5 	bl	801246a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 80052e0:	4620      	mov	r0, r4
 80052e2:	4639      	mov	r1, r7
 80052e4:	f00a fe34 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80052e8:	4620      	mov	r0, r4
 80052ea:	b00b      	add	sp, #44	; 0x2c
 80052ec:	ecbd 8b02 	vpop	{d8}
 80052f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80052f4:	0802d5c4 	.word	0x0802d5c4
 80052f8:	0802bd48 	.word	0x0802bd48
 80052fc:	00a900f0 	.word	0x00a900f0
 8005300:	0802bd38 	.word	0x0802bd38

08005304 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005304:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005306:	4770      	bx	lr

08005308 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005308:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800530a:	4770      	bx	lr

0800530c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 800530c:	4770      	bx	lr

0800530e <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800530e:	888b      	ldrh	r3, [r1, #4]
 8005310:	69c0      	ldr	r0, [r0, #28]
 8005312:	680a      	ldr	r2, [r1, #0]
 8005314:	0adb      	lsrs	r3, r3, #11
 8005316:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800531a:	4410      	add	r0, r2
 800531c:	4770      	bx	lr

0800531e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800531e:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8005320:	b1c2      	cbz	r2, 8005354 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8005322:	7b13      	ldrb	r3, [r2, #12]
 8005324:	b1b3      	cbz	r3, 8005354 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8005326:	7b54      	ldrb	r4, [r2, #13]
 8005328:	7ad2      	ldrb	r2, [r2, #11]
 800532a:	0224      	lsls	r4, r4, #8
 800532c:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005330:	4314      	orrs	r4, r2
 8005332:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005334:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005336:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800533a:	8813      	ldrh	r3, [r2, #0]
 800533c:	428b      	cmp	r3, r1
 800533e:	d102      	bne.n	8005346 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8005340:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8005344:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8005346:	d805      	bhi.n	8005354 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005348:	3801      	subs	r0, #1
 800534a:	b280      	uxth	r0, r0
 800534c:	3204      	adds	r2, #4
 800534e:	2800      	cmp	r0, #0
 8005350:	d1f3      	bne.n	800533a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8005352:	e7f7      	b.n	8005344 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005354:	2000      	movs	r0, #0
 8005356:	e7f5      	b.n	8005344 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08005358 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8005358:	b510      	push	{r4, lr}
 800535a:	212c      	movs	r1, #44	; 0x2c
 800535c:	4604      	mov	r4, r0
 800535e:	f024 f906 	bl	802956e <_ZdlPvj>
 8005362:	4620      	mov	r0, r4
 8005364:	bd10      	pop	{r4, pc}
	...

08005368 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8005368:	b530      	push	{r4, r5, lr}
 800536a:	b08b      	sub	sp, #44	; 0x2c
 800536c:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800536e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8005372:	9508      	str	r5, [sp, #32]
 8005374:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8005378:	9507      	str	r5, [sp, #28]
 800537a:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800537e:	9506      	str	r5, [sp, #24]
 8005380:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8005384:	9505      	str	r5, [sp, #20]
 8005386:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800538a:	9504      	str	r5, [sp, #16]
 800538c:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8005390:	9503      	str	r5, [sp, #12]
 8005392:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8005396:	9502      	str	r5, [sp, #8]
 8005398:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 800539c:	9501      	str	r5, [sp, #4]
 800539e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80053a2:	9500      	str	r5, [sp, #0]
 80053a4:	f011 fa02 	bl	80167ac <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80053a8:	4b06      	ldr	r3, [pc, #24]	; (80053c4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80053aa:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80053ac:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80053ae:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80053b0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80053b2:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80053b4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80053b6:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 80053b8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80053ba:	62a3      	str	r3, [r4, #40]	; 0x28
}
 80053bc:	4620      	mov	r0, r4
 80053be:	b00b      	add	sp, #44	; 0x2c
 80053c0:	bd30      	pop	{r4, r5, pc}
 80053c2:	bf00      	nop
 80053c4:	0802d658 	.word	0x0802d658

080053c8 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 80053c8:	4770      	bx	lr

080053ca <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80053ca:	4770      	bx	lr

080053cc <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80053cc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80053ce:	68c2      	ldr	r2, [r0, #12]
 80053d0:	6844      	ldr	r4, [r0, #4]
 80053d2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80053d4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80053d6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80053da:	07d2      	lsls	r2, r2, #31
 80053dc:	bf48      	it	mi
 80053de:	5962      	ldrmi	r2, [r4, r5]
 80053e0:	689b      	ldr	r3, [r3, #8]
    }
 80053e2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80053e4:	bf48      	it	mi
 80053e6:	58d3      	ldrmi	r3, [r2, r3]
 80053e8:	4718      	bx	r3

080053ea <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80053ea:	6843      	ldr	r3, [r0, #4]
 80053ec:	b12b      	cbz	r3, 80053fa <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80053ee:	6883      	ldr	r3, [r0, #8]
 80053f0:	b92b      	cbnz	r3, 80053fe <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80053f2:	68c0      	ldr	r0, [r0, #12]
 80053f4:	f000 0001 	and.w	r0, r0, #1
 80053f8:	4770      	bx	lr
 80053fa:	4618      	mov	r0, r3
 80053fc:	4770      	bx	lr
 80053fe:	2001      	movs	r0, #1
    }
 8005400:	4770      	bx	lr

08005402 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005402:	b510      	push	{r4, lr}
 8005404:	2110      	movs	r1, #16
 8005406:	4604      	mov	r4, r0
 8005408:	f024 f8b1 	bl	802956e <_ZdlPvj>
 800540c:	4620      	mov	r0, r4
 800540e:	bd10      	pop	{r4, pc}

08005410 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005410:	b510      	push	{r4, lr}
 8005412:	4b03      	ldr	r3, [pc, #12]	; (8005420 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8005414:	6003      	str	r3, [r0, #0]
 8005416:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005418:	f00e fb30 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800541c:	4620      	mov	r0, r4
 800541e:	bd10      	pop	{r4, pc}
 8005420:	0802d6d0 	.word	0x0802d6d0

08005424 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005424:	b507      	push	{r0, r1, r2, lr}
 8005426:	4b07      	ldr	r3, [pc, #28]	; (8005444 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8005428:	6003      	str	r3, [r0, #0]
 800542a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800542c:	f00e fb26 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005430:	9801      	ldr	r0, [sp, #4]
 8005432:	f241 117c 	movw	r1, #4476	; 0x117c
 8005436:	f024 f89a 	bl	802956e <_ZdlPvj>
 800543a:	9801      	ldr	r0, [sp, #4]
 800543c:	b003      	add	sp, #12
 800543e:	f85d fb04 	ldr.w	pc, [sp], #4
 8005442:	bf00      	nop
 8005444:	0802d6d0 	.word	0x0802d6d0

08005448 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005448:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 800544a:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 800544e:	4299      	cmp	r1, r3
{
 8005450:	4604      	mov	r4, r0
 8005452:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8005454:	d103      	bne.n	800545e <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005456:	f010 f813 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 800545a:	f7fe fb1d 	bl	8003a98 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800545e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005462:	429d      	cmp	r5, r3
 8005464:	d103      	bne.n	800546e <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005466:	f010 f80b 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 800546a:	f7fe fba5 	bl	8003bb8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 800546e:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005472:	429d      	cmp	r5, r3
 8005474:	d103      	bne.n	800547e <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8005476:	f010 f803 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 800547a:	f7fe fbdd 	bl	8003c38 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 800547e:	f504 7446 	add.w	r4, r4, #792	; 0x318
 8005482:	42a5      	cmp	r5, r4
 8005484:	d10a      	bne.n	800549c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8005486:	4806      	ldr	r0, [pc, #24]	; (80054a0 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 8005488:	2200      	movs	r2, #0
 800548a:	2120      	movs	r1, #32
 800548c:	f004 fa7e 	bl	800998c <HAL_GPIO_WritePin>
 8005490:	f00f fff6 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8005494:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 8005498:	f7fe bbde 	b.w	8003c58 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800549c:	bd38      	pop	{r3, r4, r5, pc}
 800549e:	bf00      	nop
 80054a0:	40021000 	.word	0x40021000

080054a4 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 80054a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80054a8:	ed2d 8b06 	vpush	{d8-d10}
 80054ac:	4604      	mov	r4, r0
 80054ae:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 80054b0:	46a3      	mov	fp, r4
        : presenter(0)
 80054b2:	2500      	movs	r5, #0
 80054b4:	f011 fc64 	bl	8016d80 <_ZN8touchgfx6ScreenC1Ev>
 80054b8:	4b6a      	ldr	r3, [pc, #424]	; (8005664 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 80054ba:	63e5      	str	r5, [r4, #60]	; 0x3c
 80054bc:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80054c0:	2226      	movs	r2, #38	; 0x26
 80054c2:	4629      	mov	r1, r5
 80054c4:	4658      	mov	r0, fp
 80054c6:	f025 f86a 	bl	802a59e <memset>
 80054ca:	4658      	mov	r0, fp
 80054cc:	f7fd f9ee 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 80054d0:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80054d4:	26ff      	movs	r6, #255	; 0xff
 80054d6:	4b64      	ldr	r3, [pc, #400]	; (8005668 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 80054d8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80054da:	2226      	movs	r2, #38	; 0x26
 80054dc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80054e0:	4629      	mov	r1, r5
 80054e2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80054e6:	4650      	mov	r0, sl
        : color(col)
 80054e8:	66a5      	str	r5, [r4, #104]	; 0x68
 80054ea:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80054ee:	f025 f856 	bl	802a59e <memset>
 80054f2:	4650      	mov	r0, sl
 80054f4:	f7fd f9da 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 80054f8:	4b5c      	ldr	r3, [pc, #368]	; (800566c <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 80054fa:	66e3      	str	r3, [r4, #108]	; 0x6c
 80054fc:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8005500:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005504:	a90c      	add	r1, sp, #48	; 0x30
 8005506:	4650      	mov	r0, sl
 8005508:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800550c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005510:	f00d faad 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005514:	4648      	mov	r0, r9
 8005516:	f7fd f9db 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 800551a:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800551e:	4b54      	ldr	r3, [pc, #336]	; (8005670 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8005520:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005524:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005528:	4638      	mov	r0, r7
 800552a:	f00c f969 	bl	8011800 <_ZN8touchgfx4LineC1Ev>
 800552e:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005532:	4618      	mov	r0, r3
 8005534:	9303      	str	r3, [sp, #12]
 8005536:	f7fb fd85 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800553a:	4b4e      	ldr	r3, [pc, #312]	; (8005674 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 800553c:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005540:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005544:	3324      	adds	r3, #36	; 0x24
 8005546:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800554a:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800554e:	4640      	mov	r0, r8
 8005550:	f7fd f9be 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005554:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005558:	4618      	mov	r0, r3
 800555a:	ee08 3a10 	vmov	s16, r3
 800555e:	f7fd f9b7 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005562:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005566:	4618      	mov	r0, r3
 8005568:	ee08 3a90 	vmov	s17, r3
 800556c:	f7fd f9b0 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005570:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005574:	4618      	mov	r0, r3
 8005576:	ee09 3a10 	vmov	s18, r3
 800557a:	f00d fbb9 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800557e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005582:	4618      	mov	r0, r3
 8005584:	ee09 3a90 	vmov	s19, r3
 8005588:	f00d fbb2 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800558c:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005590:	4618      	mov	r0, r3
 8005592:	ee0a 3a10 	vmov	s20, r3
 8005596:	f00d fbab 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800559a:	f504 7346 	add.w	r3, r4, #792	; 0x318
 800559e:	4618      	mov	r0, r3
 80055a0:	ee0a 3a90 	vmov	s21, r3
 80055a4:	f00d fa3c 	bl	8012a20 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80055a8:	4a33      	ldr	r2, [pc, #204]	; (8005678 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 80055aa:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80055ae:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 80055b2:	4a32      	ldr	r2, [pc, #200]	; (800567c <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80055b4:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80055b8:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 80055bc:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 80055c0:	f00e fa52 	bl	8013a68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80055c4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80055c8:	462a      	mov	r2, r5
 80055ca:	4658      	mov	r0, fp
 80055cc:	9300      	str	r3, [sp, #0]
 80055ce:	4629      	mov	r1, r5
 80055d0:	23f0      	movs	r3, #240	; 0xf0
 80055d2:	f7fd f957 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 80055d6:	1d26      	adds	r6, r4, #4
        color = newColor;
 80055d8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80055dc:	66a3      	str	r3, [r4, #104]	; 0x68
 80055de:	4659      	mov	r1, fp
 80055e0:	4630      	mov	r0, r6
 80055e2:	f00a fcb5 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80055e6:	462a      	mov	r2, r5
 80055e8:	4650      	mov	r0, sl
 80055ea:	4629      	mov	r1, r5
 80055ec:	f7fd f93d 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 80055f0:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80055f2:	4650      	mov	r0, sl
 80055f4:	a90c      	add	r1, sp, #48	; 0x30
 80055f6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80055fa:	f00d fa38 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80055fe:	4651      	mov	r1, sl
 8005600:	4630      	mov	r0, r6
 8005602:	f00a fca5 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 8005606:	f44f 729a 	mov.w	r2, #308	; 0x134
 800560a:	2156      	movs	r1, #86	; 0x56
 800560c:	4648      	mov	r0, r9
 800560e:	f7fd f92c 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8005612:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005616:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800561a:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 800561e:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005622:	4650      	mov	r0, sl
 8005624:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005628:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800562c:	4649      	mov	r1, r9
 800562e:	4798      	blx	r3
 8005630:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005634:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005638:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800563c:	4b10      	ldr	r3, [pc, #64]	; (8005680 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 800563e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8005640:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005644:	b92b      	cbnz	r3, 8005652 <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8005646:	4b0f      	ldr	r3, [pc, #60]	; (8005684 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8005648:	4a0f      	ldr	r2, [pc, #60]	; (8005688 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800564a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800564c:	480f      	ldr	r0, [pc, #60]	; (800568c <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 800564e:	f024 fda1 	bl	802a194 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005652:	4b0f      	ldr	r3, [pc, #60]	; (8005690 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005654:	881b      	ldrh	r3, [r3, #0]
 8005656:	2b2a      	cmp	r3, #42	; 0x2a
 8005658:	d81e      	bhi.n	8005698 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 800565a:	4b0e      	ldr	r3, [pc, #56]	; (8005694 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 800565c:	4a0a      	ldr	r2, [pc, #40]	; (8005688 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800565e:	2161      	movs	r1, #97	; 0x61
 8005660:	e7f4      	b.n	800564c <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8005662:	bf00      	nop
 8005664:	0802d6d0 	.word	0x0802d6d0
 8005668:	0802e690 	.word	0x0802e690
 800566c:	0802e858 	.word	0x0802e858
 8005670:	0802bd48 	.word	0x0802bd48
 8005674:	0802e3c4 	.word	0x0802e3c4
 8005678:	0802d6b8 	.word	0x0802d6b8
 800567c:	08005449 	.word	0x08005449
 8005680:	20012f84 	.word	0x20012f84
 8005684:	0802bb88 	.word	0x0802bb88
 8005688:	0802bc8a 	.word	0x0802bc8a
 800568c:	0802bc05 	.word	0x0802bc05
 8005690:	20012f88 	.word	0x20012f88
 8005694:	0802bc4c 	.word	0x0802bc4c
        return texts->getText(typedTextId);
 8005698:	4ba5      	ldr	r3, [pc, #660]	; (8005930 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 800569a:	212a      	movs	r1, #42	; 0x2a
 800569c:	6818      	ldr	r0, [r3, #0]
 800569e:	f002 fdf9 	bl	8008294 <_ZNK8touchgfx5Texts7getTextEt>
 80056a2:	4aa4      	ldr	r2, [pc, #656]	; (8005934 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 80056a4:	4603      	mov	r3, r0
 80056a6:	2104      	movs	r1, #4
 80056a8:	4650      	mov	r0, sl
 80056aa:	f013 f859 	bl	8018760 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 80056ae:	4648      	mov	r0, r9
        wc1 = value;
 80056b0:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80056b4:	f00c fde0 	bl	8012278 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80056b8:	4b9f      	ldr	r3, [pc, #636]	; (8005938 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 80056ba:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 80056bc:	a90c      	add	r1, sp, #48	; 0x30
 80056be:	232b      	movs	r3, #43	; 0x2b
 80056c0:	4648      	mov	r0, r9
 80056c2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80056c6:	f00c fdf7 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80056ca:	4649      	mov	r1, r9
 80056cc:	4630      	mov	r0, r6
 80056ce:	f00a fc3f 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80056d2:	230a      	movs	r3, #10
 80056d4:	9300      	str	r3, [sp, #0]
 80056d6:	2232      	movs	r2, #50	; 0x32
 80056d8:	23f0      	movs	r3, #240	; 0xf0
 80056da:	4629      	mov	r1, r5
 80056dc:	4638      	mov	r0, r7
 80056de:	f7fd f8d1 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 80056e2:	9b03      	ldr	r3, [sp, #12]
 80056e4:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80056e8:	22a0      	movs	r2, #160	; 0xa0
 80056ea:	4611      	mov	r1, r2
 80056ec:	4638      	mov	r0, r7
 80056ee:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 80056f2:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80056f6:	f00c f999 	bl	8011a2c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80056fa:	22a0      	movs	r2, #160	; 0xa0
 80056fc:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005700:	4638      	mov	r0, r7
 8005702:	f00c f99e 	bl	8011a42 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005706:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800570a:	2b20      	cmp	r3, #32
 800570c:	d005      	beq.n	800571a <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 800570e:	2320      	movs	r3, #32
 8005710:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005714:	4638      	mov	r0, r7
 8005716:	f00c f893 	bl	8011840 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800571a:	4638      	mov	r0, r7
 800571c:	2101      	movs	r1, #1
 800571e:	f00c f99b 	bl	8011a58 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005722:	4639      	mov	r1, r7
 8005724:	4630      	mov	r0, r6
 8005726:	ad04      	add	r5, sp, #16
        color = newColor;
 8005728:	f04f 37ff 	mov.w	r7, #4294967295
 800572c:	f00a fc10 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005730:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005734:	2223      	movs	r2, #35	; 0x23
 8005736:	4640      	mov	r0, r8
 8005738:	2145      	movs	r1, #69	; 0x45
 800573a:	f7fd f896 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800573e:	4641      	mov	r1, r8
 8005740:	4628      	mov	r0, r5
        color = newColor;
 8005742:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005746:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800574a:	f00c fb1b 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800574e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8005752:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8005756:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800575a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800575e:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8005938 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 8005762:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005766:	2350      	movs	r3, #80	; 0x50
 8005768:	4649      	mov	r1, r9
 800576a:	4640      	mov	r0, r8
 800576c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005770:	f00c fda2 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005774:	4641      	mov	r1, r8
 8005776:	4630      	mov	r0, r6
 8005778:	f00a fbea 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800577c:	ee18 0a10 	vmov	r0, s16
 8005780:	220c      	movs	r2, #12
 8005782:	2136      	movs	r1, #54	; 0x36
 8005784:	f7fd f871 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8005788:	ee18 1a10 	vmov	r1, s16
 800578c:	4628      	mov	r0, r5
        color = newColor;
 800578e:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005792:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005796:	f00c faf5 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800579a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800579e:	ee18 3a10 	vmov	r3, s16
 80057a2:	333c      	adds	r3, #60	; 0x3c
 80057a4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80057a8:	2351      	movs	r3, #81	; 0x51
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 80057aa:	ee18 0a10 	vmov	r0, s16
 80057ae:	4649      	mov	r1, r9
 80057b0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80057b4:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80057b8:	f00c fd7e 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80057bc:	ee18 1a10 	vmov	r1, s16
 80057c0:	4630      	mov	r0, r6
 80057c2:	f00a fbc5 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 80057c6:	ee18 0a90 	vmov	r0, s17
 80057ca:	223c      	movs	r2, #60	; 0x3c
 80057cc:	2158      	movs	r1, #88	; 0x58
 80057ce:	f7fd f84c 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 80057d2:	ee18 1a90 	vmov	r1, s17
 80057d6:	4628      	mov	r0, r5
        color = newColor;
 80057d8:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80057dc:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80057e0:	f00c fad0 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80057e4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80057e8:	ee18 3a90 	vmov	r3, s17
 80057ec:	333c      	adds	r3, #60	; 0x3c
 80057ee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80057f2:	231a      	movs	r3, #26
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 80057f4:	ee18 0a90 	vmov	r0, s17
 80057f8:	4649      	mov	r1, r9
 80057fa:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80057fe:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005802:	f00c fd59 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005806:	ee18 1a90 	vmov	r1, s17
 800580a:	4630      	mov	r0, r6
 800580c:	f00a fba0 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005810:	ee19 0a10 	vmov	r0, s18
 8005814:	22f0      	movs	r2, #240	; 0xf0
 8005816:	2121      	movs	r1, #33	; 0x21
 8005818:	f7fd f827 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 800581c:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005820:	464a      	mov	r2, r9
 8005822:	f04f 0802 	mov.w	r8, #2
 8005826:	a90b      	add	r1, sp, #44	; 0x2c
 8005828:	ee19 0a10 	vmov	r0, s18
 800582c:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005830:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8005834:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005838:	f00c ff23 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800583c:	2352      	movs	r3, #82	; 0x52
 800583e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005842:	350c      	adds	r5, #12
        updateTextPosition();
 8005844:	ee19 0a10 	vmov	r0, s18
 8005848:	f7fd f864 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800584c:	ee19 1a10 	vmov	r1, s18
 8005850:	4630      	mov	r0, r6
        colorPressed = col;
 8005852:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8005856:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800585a:	f00a fb79 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 800585e:	ee19 0a90 	vmov	r0, s19
 8005862:	22aa      	movs	r2, #170	; 0xaa
 8005864:	2121      	movs	r1, #33	; 0x21
 8005866:	f7fd f800 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800586a:	464a      	mov	r2, r9
 800586c:	a90b      	add	r1, sp, #44	; 0x2c
 800586e:	ee19 0a90 	vmov	r0, s19
 8005872:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005876:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800587a:	f00c ff02 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800587e:	2353      	movs	r3, #83	; 0x53
 8005880:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005884:	ee19 0a90 	vmov	r0, s19
 8005888:	f7fd f844 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800588c:	ee19 1a90 	vmov	r1, s19
 8005890:	4630      	mov	r0, r6
        colorPressed = col;
 8005892:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8005896:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800589a:	f00a fb59 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 800589e:	ee1a 0a10 	vmov	r0, s20
 80058a2:	2264      	movs	r2, #100	; 0x64
 80058a4:	2121      	movs	r1, #33	; 0x21
 80058a6:	f7fc ffe0 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80058aa:	464a      	mov	r2, r9
 80058ac:	a90b      	add	r1, sp, #44	; 0x2c
 80058ae:	ee1a 0a10 	vmov	r0, s20
 80058b2:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80058b6:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80058ba:	f00c fee2 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80058be:	2354      	movs	r3, #84	; 0x54
 80058c0:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 80058c4:	ee1a 0a10 	vmov	r0, s20
 80058c8:	f7fd f824 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80058cc:	ee1a 1a10 	vmov	r1, s20
 80058d0:	4630      	mov	r0, r6
        colorPressed = col;
 80058d2:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80058d6:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80058da:	f00a fb39 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 80058de:	ee1a 0a90 	vmov	r0, s21
 80058e2:	2205      	movs	r2, #5
 80058e4:	21c6      	movs	r1, #198	; 0xc6
 80058e6:	f7fc ffc0 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 80058ea:	2301      	movs	r3, #1
 80058ec:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80058f0:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 80058f2:	ee1a 0a90 	vmov	r0, s21
 80058f6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80058fa:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80058fe:	aa0a      	add	r2, sp, #40	; 0x28
 8005900:	ab0b      	add	r3, sp, #44	; 0x2c
 8005902:	a909      	add	r1, sp, #36	; 0x24
 8005904:	f8cd 9000 	str.w	r9, [sp]
 8005908:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 800590c:	f00c fff3 	bl	80128f6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8005910:	4630      	mov	r0, r6
 8005912:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 8005916:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 800591a:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 800591e:	f00a fb17 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005922:	4620      	mov	r0, r4
 8005924:	b00f      	add	sp, #60	; 0x3c
 8005926:	ecbd 8b06 	vpop	{d8-d10}
 800592a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800592e:	bf00      	nop
 8005930:	20012f90 	.word	0x20012f90
 8005934:	0802bcc2 	.word	0x0802bcc2
 8005938:	0802bd38 	.word	0x0802bd38

0800593c <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 800593c:	4770      	bx	lr

0800593e <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800593e:	4770      	bx	lr

08005940 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005940:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005942:	68c2      	ldr	r2, [r0, #12]
 8005944:	6844      	ldr	r4, [r0, #4]
 8005946:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005948:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800594a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800594e:	07d2      	lsls	r2, r2, #31
 8005950:	bf48      	it	mi
 8005952:	5962      	ldrmi	r2, [r4, r5]
 8005954:	689b      	ldr	r3, [r3, #8]
    }
 8005956:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005958:	bf48      	it	mi
 800595a:	58d3      	ldrmi	r3, [r2, r3]
 800595c:	4718      	bx	r3

0800595e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800595e:	6843      	ldr	r3, [r0, #4]
 8005960:	b12b      	cbz	r3, 800596e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005962:	6883      	ldr	r3, [r0, #8]
 8005964:	b92b      	cbnz	r3, 8005972 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005966:	68c0      	ldr	r0, [r0, #12]
 8005968:	f000 0001 	and.w	r0, r0, #1
 800596c:	4770      	bx	lr
 800596e:	4618      	mov	r0, r3
 8005970:	4770      	bx	lr
 8005972:	2001      	movs	r0, #1
    }
 8005974:	4770      	bx	lr

08005976 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005976:	b510      	push	{r4, lr}
 8005978:	2110      	movs	r1, #16
 800597a:	4604      	mov	r4, r0
 800597c:	f023 fdf7 	bl	802956e <_ZdlPvj>
 8005980:	4620      	mov	r0, r4
 8005982:	bd10      	pop	{r4, pc}

08005984 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005984:	b510      	push	{r4, lr}
 8005986:	4b03      	ldr	r3, [pc, #12]	; (8005994 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8005988:	6003      	str	r3, [r0, #0]
 800598a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800598c:	f00e f876 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005990:	4620      	mov	r0, r4
 8005992:	bd10      	pop	{r4, pc}
 8005994:	0802d71c 	.word	0x0802d71c

08005998 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005998:	b507      	push	{r0, r1, r2, lr}
 800599a:	4b07      	ldr	r3, [pc, #28]	; (80059b8 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 800599c:	6003      	str	r3, [r0, #0]
 800599e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80059a0:	f00e f86c 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80059a4:	9801      	ldr	r0, [sp, #4]
 80059a6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80059aa:	f023 fde0 	bl	802956e <_ZdlPvj>
 80059ae:	9801      	ldr	r0, [sp, #4]
 80059b0:	b003      	add	sp, #12
 80059b2:	f85d fb04 	ldr.w	pc, [sp], #4
 80059b6:	bf00      	nop
 80059b8:	0802d71c 	.word	0x0802d71c

080059bc <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80059bc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80059be:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80059c2:	4299      	cmp	r1, r3
{
 80059c4:	4604      	mov	r4, r0
 80059c6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80059c8:	d103      	bne.n	80059d2 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80059ca:	f00f fd59 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80059ce:	f7fe f853 	bl	8003a78 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80059d2:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80059d6:	429d      	cmp	r5, r3
 80059d8:	d103      	bne.n	80059e2 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80059da:	f00f fd51 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80059de:	f7fe f87b 	bl	8003ad8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80059e2:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80059e6:	42a5      	cmp	r5, r4
 80059e8:	d105      	bne.n	80059f6 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80059ea:	f00f fd49 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 80059ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 80059f2:	f7fe b8a1 	b.w	8003b38 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 80059f6:	bd38      	pop	{r3, r4, r5, pc}

080059f8 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 80059f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80059fc:	ed2d 8b06 	vpush	{d8-d10}
 8005a00:	4604      	mov	r4, r0
 8005a02:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8005a04:	46a3      	mov	fp, r4
 8005a06:	2500      	movs	r5, #0
 8005a08:	f011 f9ba 	bl	8016d80 <_ZN8touchgfx6ScreenC1Ev>
 8005a0c:	4b66      	ldr	r3, [pc, #408]	; (8005ba8 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 8005a0e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005a10:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005a14:	2226      	movs	r2, #38	; 0x26
 8005a16:	4629      	mov	r1, r5
 8005a18:	4658      	mov	r0, fp
 8005a1a:	f024 fdc0 	bl	802a59e <memset>
 8005a1e:	4658      	mov	r0, fp
 8005a20:	f7fc ff44 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 8005a24:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005a28:	26ff      	movs	r6, #255	; 0xff
 8005a2a:	4b60      	ldr	r3, [pc, #384]	; (8005bac <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8005a2c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005a2e:	2226      	movs	r2, #38	; 0x26
 8005a30:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005a34:	4629      	mov	r1, r5
 8005a36:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005a3a:	4650      	mov	r0, sl
 8005a3c:	66a5      	str	r5, [r4, #104]	; 0x68
 8005a3e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005a42:	f024 fdac 	bl	802a59e <memset>
 8005a46:	4650      	mov	r0, sl
 8005a48:	f7fc ff30 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 8005a4c:	4b58      	ldr	r3, [pc, #352]	; (8005bb0 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8005a4e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005a50:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005a54:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005a58:	a90a      	add	r1, sp, #40	; 0x28
 8005a5a:	4650      	mov	r0, sl
 8005a5c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005a60:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005a64:	f00d f803 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005a68:	4648      	mov	r0, r9
 8005a6a:	f7fc ff31 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005a6e:	4b51      	ldr	r3, [pc, #324]	; (8005bb4 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 8005a70:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005a74:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8005a78:	4618      	mov	r0, r3
 8005a7a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005a7e:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8005a82:	ee08 3a90 	vmov	s17, r3
 8005a86:	f7fc ff23 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005a8a:	4638      	mov	r0, r7
 8005a8c:	f00b feb8 	bl	8011800 <_ZN8touchgfx4LineC1Ev>
 8005a90:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005a94:	4618      	mov	r0, r3
 8005a96:	9303      	str	r3, [sp, #12]
 8005a98:	f7fb fad4 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005a9c:	4b46      	ldr	r3, [pc, #280]	; (8005bb8 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 8005a9e:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8005aa2:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8005aa6:	3324      	adds	r3, #36	; 0x24
 8005aa8:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8005aac:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8005ab0:	4640      	mov	r0, r8
 8005ab2:	f7fc ff0d 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005ab6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005aba:	4618      	mov	r0, r3
 8005abc:	ee08 3a10 	vmov	s16, r3
 8005ac0:	f7fc ff06 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005ac4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005ac8:	4618      	mov	r0, r3
 8005aca:	ee09 3a10 	vmov	s18, r3
 8005ace:	f00d f90f 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005ad2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005ad6:	4618      	mov	r0, r3
 8005ad8:	ee09 3a90 	vmov	s19, r3
 8005adc:	f00d f908 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005ae0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005ae4:	4618      	mov	r0, r3
 8005ae6:	ee0a 3a10 	vmov	s20, r3
 8005aea:	f00d f901 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005aee:	4a33      	ldr	r2, [pc, #204]	; (8005bbc <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8005af0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005af4:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005af8:	4a31      	ldr	r2, [pc, #196]	; (8005bc0 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005afa:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005afe:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005b02:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005b06:	f00d ffaf 	bl	8013a68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005b0a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005b0e:	462a      	mov	r2, r5
 8005b10:	4658      	mov	r0, fp
 8005b12:	9300      	str	r3, [sp, #0]
 8005b14:	4629      	mov	r1, r5
 8005b16:	23f0      	movs	r3, #240	; 0xf0
 8005b18:	f7fc feb4 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005b1c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005b1e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005b22:	66a3      	str	r3, [r4, #104]	; 0x68
 8005b24:	4659      	mov	r1, fp
 8005b26:	4630      	mov	r0, r6
 8005b28:	f00a fa12 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005b2c:	462a      	mov	r2, r5
 8005b2e:	4650      	mov	r0, sl
 8005b30:	4629      	mov	r1, r5
 8005b32:	f7fc fe9a 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8005b36:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005b38:	4650      	mov	r0, sl
 8005b3a:	a90a      	add	r1, sp, #40	; 0x28
 8005b3c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005b40:	f00c ff95 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005b44:	4651      	mov	r1, sl
 8005b46:	4630      	mov	r0, r6
 8005b48:	f00a fa02 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005b4c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005b50:	2156      	movs	r1, #86	; 0x56
 8005b52:	4648      	mov	r0, r9
 8005b54:	f7fc fe89 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005b58:	f04f 33ff 	mov.w	r3, #4294967295
 8005b5c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005b60:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005b64:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005b68:	f10d 0b10 	add.w	fp, sp, #16
 8005b6c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005b70:	4649      	mov	r1, r9
 8005b72:	4658      	mov	r0, fp
 8005b74:	4798      	blx	r3
 8005b76:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005b7a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005b7e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005b82:	4b10      	ldr	r3, [pc, #64]	; (8005bc4 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8005b84:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8005b86:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005b8a:	b92b      	cbnz	r3, 8005b98 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8005b8c:	4b0e      	ldr	r3, [pc, #56]	; (8005bc8 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8005b8e:	4a0f      	ldr	r2, [pc, #60]	; (8005bcc <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005b90:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005b92:	480f      	ldr	r0, [pc, #60]	; (8005bd0 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8005b94:	f024 fafe 	bl	802a194 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005b98:	4b0e      	ldr	r3, [pc, #56]	; (8005bd4 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005b9a:	881b      	ldrh	r3, [r3, #0]
 8005b9c:	2b1b      	cmp	r3, #27
 8005b9e:	d81d      	bhi.n	8005bdc <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8005ba0:	4b0d      	ldr	r3, [pc, #52]	; (8005bd8 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8005ba2:	4a0a      	ldr	r2, [pc, #40]	; (8005bcc <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005ba4:	2161      	movs	r1, #97	; 0x61
 8005ba6:	e7f4      	b.n	8005b92 <_ZN19MeasurementViewBaseC1Ev+0x19a>
 8005ba8:	0802d71c 	.word	0x0802d71c
 8005bac:	0802e690 	.word	0x0802e690
 8005bb0:	0802e858 	.word	0x0802e858
 8005bb4:	0802bd48 	.word	0x0802bd48
 8005bb8:	0802e3c4 	.word	0x0802e3c4
 8005bbc:	0802d704 	.word	0x0802d704
 8005bc0:	080059bd 	.word	0x080059bd
 8005bc4:	20012f84 	.word	0x20012f84
 8005bc8:	0802bb88 	.word	0x0802bb88
 8005bcc:	0802bc8a 	.word	0x0802bc8a
 8005bd0:	0802bc05 	.word	0x0802bc05
 8005bd4:	20012f88 	.word	0x20012f88
 8005bd8:	0802bc4c 	.word	0x0802bc4c
        return texts->getText(typedTextId);
 8005bdc:	4b95      	ldr	r3, [pc, #596]	; (8005e34 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 8005bde:	211b      	movs	r1, #27
 8005be0:	6818      	ldr	r0, [r3, #0]
 8005be2:	f002 fb57 	bl	8008294 <_ZNK8touchgfx5Texts7getTextEt>
 8005be6:	4a94      	ldr	r2, [pc, #592]	; (8005e38 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8005be8:	4603      	mov	r3, r0
 8005bea:	2104      	movs	r1, #4
 8005bec:	4650      	mov	r0, sl
 8005bee:	f012 fdb7 	bl	8018760 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8005bf2:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8005bf6:	4648      	mov	r0, r9
 8005bf8:	f00c fb3e 	bl	8012278 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005bfc:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8005e3c <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005c00:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005c04:	231c      	movs	r3, #28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8005c06:	a90a      	add	r1, sp, #40	; 0x28
 8005c08:	4648      	mov	r0, r9
 8005c0a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005c0e:	f00c fb53 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005c12:	4649      	mov	r1, r9
 8005c14:	4630      	mov	r0, r6
 8005c16:	f00a f99b 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8005c1a:	223c      	movs	r2, #60	; 0x3c
 8005c1c:	ee18 0a90 	vmov	r0, s17
 8005c20:	213d      	movs	r1, #61	; 0x3d
 8005c22:	f7fc fe22 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005c26:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8005c2a:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8005c2e:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005c32:	4658      	mov	r0, fp
        linespace = space;
 8005c34:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8005c38:	f00c f8a4 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005c3c:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005c40:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8005c44:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005c48:	2329      	movs	r3, #41	; 0x29
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8005c4a:	ee18 0a90 	vmov	r0, s17
 8005c4e:	a90a      	add	r1, sp, #40	; 0x28
 8005c50:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005c54:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005c58:	f00c fb2e 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005c5c:	ee18 1a90 	vmov	r1, s17
 8005c60:	4630      	mov	r0, r6
 8005c62:	f00a f975 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005c66:	230a      	movs	r3, #10
 8005c68:	9300      	str	r3, [sp, #0]
 8005c6a:	2232      	movs	r2, #50	; 0x32
 8005c6c:	23f0      	movs	r3, #240	; 0xf0
 8005c6e:	4629      	mov	r1, r5
 8005c70:	4638      	mov	r0, r7
 8005c72:	f7fc fe07 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005c76:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005c7a:	22a0      	movs	r2, #160	; 0xa0
 8005c7c:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005c80:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8005c84:	9b03      	ldr	r3, [sp, #12]
 8005c86:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005c8a:	4611      	mov	r1, r2
 8005c8c:	4638      	mov	r0, r7
 8005c8e:	f00b fecd 	bl	8011a2c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005c92:	22a0      	movs	r2, #160	; 0xa0
 8005c94:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005c98:	4638      	mov	r0, r7
 8005c9a:	f00b fed2 	bl	8011a42 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005c9e:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8005ca2:	2b20      	cmp	r3, #32
 8005ca4:	d005      	beq.n	8005cb2 <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8005ca6:	2320      	movs	r3, #32
 8005ca8:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8005cac:	4638      	mov	r0, r7
 8005cae:	f00b fdc7 	bl	8011840 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005cb2:	4638      	mov	r0, r7
 8005cb4:	2101      	movs	r1, #1
 8005cb6:	f00b fecf 	bl	8011a58 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005cba:	4639      	mov	r1, r7
 8005cbc:	4630      	mov	r0, r6
 8005cbe:	f00a f947 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005cc2:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8005cc6:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8005cc8:	2223      	movs	r2, #35	; 0x23
 8005cca:	4640      	mov	r0, r8
        linespace = space;
 8005ccc:	f04f 0a00 	mov.w	sl, #0
 8005cd0:	2145      	movs	r1, #69	; 0x45
 8005cd2:	f7fc fdca 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005cd6:	4641      	mov	r1, r8
 8005cd8:	4638      	mov	r0, r7
        color = newColor;
 8005cda:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8005cde:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005ce2:	f00c f84f 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005ce6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005cea:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005cee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005cf2:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8005e3c <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005cf6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005cfa:	234e      	movs	r3, #78	; 0x4e
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8005cfc:	a90a      	add	r1, sp, #40	; 0x28
 8005cfe:	4640      	mov	r0, r8
 8005d00:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005d04:	f00c fad8 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005d08:	4641      	mov	r1, r8
 8005d0a:	4630      	mov	r0, r6
 8005d0c:	f00a f920 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005d10:	ee18 0a10 	vmov	r0, s16
 8005d14:	220c      	movs	r2, #12
 8005d16:	2136      	movs	r1, #54	; 0x36
 8005d18:	f7fc fda7 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8005d1c:	ee18 1a10 	vmov	r1, s16
 8005d20:	4638      	mov	r0, r7
        color = newColor;
 8005d22:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8005d26:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005d2a:	f00c f82b 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005d2e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005d32:	ee18 3a10 	vmov	r3, s16
 8005d36:	333c      	adds	r3, #60	; 0x3c
 8005d38:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005d3c:	234f      	movs	r3, #79	; 0x4f
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8005d3e:	ee18 0a10 	vmov	r0, s16
 8005d42:	a90a      	add	r1, sp, #40	; 0x28
 8005d44:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005d48:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005d4c:	f00c fab4 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005d50:	ee18 1a10 	vmov	r1, s16
 8005d54:	4630      	mov	r0, r6
 8005d56:	f00a f8fb 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005d5a:	ee19 0a10 	vmov	r0, s18
 8005d5e:	22f0      	movs	r2, #240	; 0xf0
 8005d60:	2121      	movs	r1, #33	; 0x21
 8005d62:	f7fc fd82 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8005d66:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005d6a:	aa0a      	add	r2, sp, #40	; 0x28
 8005d6c:	f04f 0802 	mov.w	r8, #2
 8005d70:	a909      	add	r1, sp, #36	; 0x24
 8005d72:	ee19 0a10 	vmov	r0, s18
 8005d76:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005d7a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005d7e:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005d82:	f00c fc7e 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005d86:	234d      	movs	r3, #77	; 0x4d
 8005d88:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005d8c:	3710      	adds	r7, #16
        updateTextPosition();
 8005d8e:	ee19 0a10 	vmov	r0, s18
 8005d92:	f7fc fdbf 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005d96:	ee19 1a10 	vmov	r1, s18
 8005d9a:	4630      	mov	r0, r6
        colorPressed = col;
 8005d9c:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8005da0:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8005da4:	f00a f8d4 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005da8:	ee19 0a90 	vmov	r0, s19
 8005dac:	22aa      	movs	r2, #170	; 0xaa
 8005dae:	2121      	movs	r1, #33	; 0x21
 8005db0:	f7fc fd5b 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005db4:	aa0a      	add	r2, sp, #40	; 0x28
 8005db6:	a909      	add	r1, sp, #36	; 0x24
 8005db8:	ee19 0a90 	vmov	r0, s19
 8005dbc:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005dc0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005dc4:	f00c fc5d 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005dc8:	234c      	movs	r3, #76	; 0x4c
 8005dca:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005dce:	ee19 0a90 	vmov	r0, s19
 8005dd2:	f7fc fd9f 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005dd6:	ee19 1a90 	vmov	r1, s19
 8005dda:	4630      	mov	r0, r6
        colorPressed = col;
 8005ddc:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8005de0:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8005de4:	f00a f8b4 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005de8:	ee1a 0a10 	vmov	r0, s20
 8005dec:	2264      	movs	r2, #100	; 0x64
 8005dee:	2121      	movs	r1, #33	; 0x21
 8005df0:	f7fc fd3b 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005df4:	aa0a      	add	r2, sp, #40	; 0x28
 8005df6:	a909      	add	r1, sp, #36	; 0x24
 8005df8:	ee1a 0a10 	vmov	r0, s20
 8005dfc:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005e00:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005e04:	f00c fc3d 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005e08:	234b      	movs	r3, #75	; 0x4b
        updateTextPosition();
 8005e0a:	ee1a 0a10 	vmov	r0, s20
 8005e0e:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005e12:	f7fc fd7f 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005e16:	4630      	mov	r0, r6
        colorPressed = col;
 8005e18:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8005e1c:	ee1a 1a10 	vmov	r1, s20
 8005e20:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8005e24:	f00a f894 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005e28:	4620      	mov	r0, r4
 8005e2a:	b00d      	add	sp, #52	; 0x34
 8005e2c:	ecbd 8b06 	vpop	{d8-d10}
 8005e30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005e34:	20012f90 	.word	0x20012f90
 8005e38:	0802bcc2 	.word	0x0802bcc2
 8005e3c:	0802bd38 	.word	0x0802bd38

08005e40 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8005e40:	4770      	bx	lr

08005e42 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005e42:	4770      	bx	lr

08005e44 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005e44:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005e46:	68c2      	ldr	r2, [r0, #12]
 8005e48:	6844      	ldr	r4, [r0, #4]
 8005e4a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005e4c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005e4e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005e52:	07d2      	lsls	r2, r2, #31
 8005e54:	bf48      	it	mi
 8005e56:	5962      	ldrmi	r2, [r4, r5]
 8005e58:	689b      	ldr	r3, [r3, #8]
    }
 8005e5a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005e5c:	bf48      	it	mi
 8005e5e:	58d3      	ldrmi	r3, [r2, r3]
 8005e60:	4718      	bx	r3

08005e62 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005e62:	6843      	ldr	r3, [r0, #4]
 8005e64:	b12b      	cbz	r3, 8005e72 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005e66:	6883      	ldr	r3, [r0, #8]
 8005e68:	b92b      	cbnz	r3, 8005e76 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005e6a:	68c0      	ldr	r0, [r0, #12]
 8005e6c:	f000 0001 	and.w	r0, r0, #1
 8005e70:	4770      	bx	lr
 8005e72:	4618      	mov	r0, r3
 8005e74:	4770      	bx	lr
 8005e76:	2001      	movs	r0, #1
    }
 8005e78:	4770      	bx	lr

08005e7a <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005e7a:	b510      	push	{r4, lr}
 8005e7c:	2110      	movs	r1, #16
 8005e7e:	4604      	mov	r4, r0
 8005e80:	f023 fb75 	bl	802956e <_ZdlPvj>
 8005e84:	4620      	mov	r0, r4
 8005e86:	bd10      	pop	{r4, pc}

08005e88 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005e88:	b510      	push	{r4, lr}
 8005e8a:	4b03      	ldr	r3, [pc, #12]	; (8005e98 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8005e8c:	6003      	str	r3, [r0, #0]
 8005e8e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005e90:	f00d fdf4 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005e94:	4620      	mov	r0, r4
 8005e96:	bd10      	pop	{r4, pc}
 8005e98:	0802d768 	.word	0x0802d768

08005e9c <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005e9c:	b507      	push	{r0, r1, r2, lr}
 8005e9e:	4b07      	ldr	r3, [pc, #28]	; (8005ebc <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8005ea0:	6003      	str	r3, [r0, #0]
 8005ea2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005ea4:	f00d fdea 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005ea8:	9801      	ldr	r0, [sp, #4]
 8005eaa:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005eae:	f023 fb5e 	bl	802956e <_ZdlPvj>
 8005eb2:	9801      	ldr	r0, [sp, #4]
 8005eb4:	b003      	add	sp, #12
 8005eb6:	f85d fb04 	ldr.w	pc, [sp], #4
 8005eba:	bf00      	nop
 8005ebc:	0802d768 	.word	0x0802d768

08005ec0 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005ec0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005ec2:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005ec6:	4299      	cmp	r1, r3
{
 8005ec8:	4604      	mov	r4, r0
 8005eca:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005ecc:	d103      	bne.n	8005ed6 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005ece:	f00f fad7 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8005ed2:	f7fd fdf1 	bl	8003ab8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8005ed6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005eda:	429d      	cmp	r5, r3
 8005edc:	d103      	bne.n	8005ee6 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005ede:	f00f facf 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8005ee2:	f7fd fe59 	bl	8003b98 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8005ee6:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8005eea:	42a5      	cmp	r5, r4
 8005eec:	d105      	bne.n	8005efa <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005eee:	f00f fac7 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8005ef2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8005ef6:	f7fd be3f 	b.w	8003b78 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8005efa:	bd38      	pop	{r3, r4, r5, pc}

08005efc <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8005efc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005f00:	ed2d 8b06 	vpush	{d8-d10}
 8005f04:	4604      	mov	r4, r0
 8005f06:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8005f08:	46a3      	mov	fp, r4
 8005f0a:	2500      	movs	r5, #0
 8005f0c:	f010 ff38 	bl	8016d80 <_ZN8touchgfx6ScreenC1Ev>
 8005f10:	4b66      	ldr	r3, [pc, #408]	; (80060ac <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8005f12:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005f14:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005f18:	2226      	movs	r2, #38	; 0x26
 8005f1a:	4629      	mov	r1, r5
 8005f1c:	4658      	mov	r0, fp
 8005f1e:	f024 fb3e 	bl	802a59e <memset>
 8005f22:	4658      	mov	r0, fp
 8005f24:	f7fc fcc2 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 8005f28:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005f2c:	26ff      	movs	r6, #255	; 0xff
 8005f2e:	4b60      	ldr	r3, [pc, #384]	; (80060b0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8005f30:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005f32:	2226      	movs	r2, #38	; 0x26
 8005f34:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005f38:	4629      	mov	r1, r5
 8005f3a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005f3e:	4650      	mov	r0, sl
 8005f40:	66a5      	str	r5, [r4, #104]	; 0x68
 8005f42:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005f46:	f024 fb2a 	bl	802a59e <memset>
 8005f4a:	4650      	mov	r0, sl
 8005f4c:	f7fc fcae 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 8005f50:	4b58      	ldr	r3, [pc, #352]	; (80060b4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8005f52:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005f54:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005f58:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005f5c:	a90a      	add	r1, sp, #40	; 0x28
 8005f5e:	4650      	mov	r0, sl
 8005f60:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005f64:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005f68:	f00c fd81 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005f6c:	4648      	mov	r0, r9
 8005f6e:	f7fc fcaf 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005f72:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005f76:	4b50      	ldr	r3, [pc, #320]	; (80060b8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8005f78:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005f7c:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005f80:	4638      	mov	r0, r7
 8005f82:	f00b fc3d 	bl	8011800 <_ZN8touchgfx4LineC1Ev>
 8005f86:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005f8a:	4618      	mov	r0, r3
 8005f8c:	9303      	str	r3, [sp, #12]
 8005f8e:	f7fb f859 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005f92:	4b4a      	ldr	r3, [pc, #296]	; (80060bc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8005f94:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005f98:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005f9c:	3324      	adds	r3, #36	; 0x24
 8005f9e:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005fa2:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005fa6:	4640      	mov	r0, r8
 8005fa8:	f7fc fc92 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005fac:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005fb0:	4618      	mov	r0, r3
 8005fb2:	ee08 3a10 	vmov	s16, r3
 8005fb6:	f7fc fc8b 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005fba:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005fbe:	4618      	mov	r0, r3
 8005fc0:	ee08 3a90 	vmov	s17, r3
 8005fc4:	f7fc fc84 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8005fc8:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005fcc:	4618      	mov	r0, r3
 8005fce:	ee09 3a10 	vmov	s18, r3
 8005fd2:	f00c fe8d 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005fd6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005fda:	4618      	mov	r0, r3
 8005fdc:	ee09 3a90 	vmov	s19, r3
 8005fe0:	f00c fe86 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005fe4:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005fe8:	4618      	mov	r0, r3
 8005fea:	ee0a 3a10 	vmov	s20, r3
 8005fee:	f00c fe7f 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005ff2:	4a33      	ldr	r2, [pc, #204]	; (80060c0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8005ff4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005ff8:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005ffc:	4a31      	ldr	r2, [pc, #196]	; (80060c4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005ffe:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006002:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006006:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800600a:	f00d fd2d 	bl	8013a68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800600e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006012:	462a      	mov	r2, r5
 8006014:	4658      	mov	r0, fp
 8006016:	9300      	str	r3, [sp, #0]
 8006018:	4629      	mov	r1, r5
 800601a:	23f0      	movs	r3, #240	; 0xf0
 800601c:	f7fc fc32 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006020:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006022:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006026:	66a3      	str	r3, [r4, #104]	; 0x68
 8006028:	4659      	mov	r1, fp
 800602a:	4630      	mov	r0, r6
 800602c:	f009 ff90 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006030:	462a      	mov	r2, r5
 8006032:	4650      	mov	r0, sl
 8006034:	4629      	mov	r1, r5
 8006036:	f7fc fc18 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 800603a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800603c:	4650      	mov	r0, sl
 800603e:	a90a      	add	r1, sp, #40	; 0x28
 8006040:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006044:	f00c fd13 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006048:	4651      	mov	r1, sl
 800604a:	4630      	mov	r0, r6
 800604c:	f009 ff80 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006050:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006054:	2156      	movs	r1, #86	; 0x56
 8006056:	4648      	mov	r0, r9
 8006058:	f7fc fc07 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 800605c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006060:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006064:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8006068:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 800606c:	4650      	mov	r0, sl
 800606e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006072:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006076:	4649      	mov	r1, r9
 8006078:	4798      	blx	r3
 800607a:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800607e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006082:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006086:	4b10      	ldr	r3, [pc, #64]	; (80060c8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8006088:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 800608a:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800608e:	b92b      	cbnz	r3, 800609c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8006090:	4b0e      	ldr	r3, [pc, #56]	; (80060cc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8006092:	4a0f      	ldr	r2, [pc, #60]	; (80060d0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006094:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006096:	480f      	ldr	r0, [pc, #60]	; (80060d4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8006098:	f024 f87c 	bl	802a194 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800609c:	4b0e      	ldr	r3, [pc, #56]	; (80060d8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800609e:	881b      	ldrh	r3, [r3, #0]
 80060a0:	2b16      	cmp	r3, #22
 80060a2:	d81d      	bhi.n	80060e0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 80060a4:	4b0d      	ldr	r3, [pc, #52]	; (80060dc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 80060a6:	4a0a      	ldr	r2, [pc, #40]	; (80060d0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 80060a8:	2161      	movs	r1, #97	; 0x61
 80060aa:	e7f4      	b.n	8006096 <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 80060ac:	0802d768 	.word	0x0802d768
 80060b0:	0802e690 	.word	0x0802e690
 80060b4:	0802e858 	.word	0x0802e858
 80060b8:	0802bd48 	.word	0x0802bd48
 80060bc:	0802e3c4 	.word	0x0802e3c4
 80060c0:	0802d750 	.word	0x0802d750
 80060c4:	08005ec1 	.word	0x08005ec1
 80060c8:	20012f84 	.word	0x20012f84
 80060cc:	0802bb88 	.word	0x0802bb88
 80060d0:	0802bc8a 	.word	0x0802bc8a
 80060d4:	0802bc05 	.word	0x0802bc05
 80060d8:	20012f88 	.word	0x20012f88
 80060dc:	0802bc4c 	.word	0x0802bc4c
        return texts->getText(typedTextId);
 80060e0:	4b93      	ldr	r3, [pc, #588]	; (8006330 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 80060e2:	2116      	movs	r1, #22
 80060e4:	6818      	ldr	r0, [r3, #0]
 80060e6:	f002 f8d5 	bl	8008294 <_ZNK8touchgfx5Texts7getTextEt>
 80060ea:	4a92      	ldr	r2, [pc, #584]	; (8006334 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 80060ec:	4603      	mov	r3, r0
 80060ee:	2104      	movs	r1, #4
 80060f0:	4650      	mov	r0, sl
 80060f2:	f012 fb35 	bl	8018760 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 80060f6:	4648      	mov	r0, r9
        wc1 = value;
 80060f8:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80060fc:	f00c f8bc 	bl	8012278 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006100:	4b8d      	ldr	r3, [pc, #564]	; (8006338 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8006102:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8006104:	a90a      	add	r1, sp, #40	; 0x28
 8006106:	2317      	movs	r3, #23
 8006108:	4648      	mov	r0, r9
 800610a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800610e:	f00c f8d3 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006112:	4649      	mov	r1, r9
 8006114:	4630      	mov	r0, r6
 8006116:	f009 ff1b 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800611a:	230a      	movs	r3, #10
 800611c:	9300      	str	r3, [sp, #0]
 800611e:	2232      	movs	r2, #50	; 0x32
 8006120:	23f0      	movs	r3, #240	; 0xf0
 8006122:	4629      	mov	r1, r5
 8006124:	4638      	mov	r0, r7
 8006126:	f7fc fbad 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 800612a:	9b03      	ldr	r3, [sp, #12]
 800612c:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006130:	22a0      	movs	r2, #160	; 0xa0
 8006132:	4611      	mov	r1, r2
 8006134:	4638      	mov	r0, r7
 8006136:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 800613a:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800613e:	f00b fc75 	bl	8011a2c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006142:	22a0      	movs	r2, #160	; 0xa0
 8006144:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006148:	4638      	mov	r0, r7
 800614a:	f00b fc7a 	bl	8011a42 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800614e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8006152:	2b20      	cmp	r3, #32
 8006154:	d005      	beq.n	8006162 <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8006156:	2320      	movs	r3, #32
 8006158:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 800615c:	4638      	mov	r0, r7
 800615e:	f00b fb6f 	bl	8011840 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006162:	4638      	mov	r0, r7
 8006164:	2101      	movs	r1, #1
 8006166:	f00b fc77 	bl	8011a58 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800616a:	4639      	mov	r1, r7
 800616c:	4630      	mov	r0, r6
 800616e:	ad04      	add	r5, sp, #16
        color = newColor;
 8006170:	f04f 37ff 	mov.w	r7, #4294967295
 8006174:	f009 feec 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006178:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 800617c:	2223      	movs	r2, #35	; 0x23
 800617e:	4640      	mov	r0, r8
 8006180:	2145      	movs	r1, #69	; 0x45
 8006182:	f7fc fb72 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006186:	4641      	mov	r1, r8
 8006188:	4628      	mov	r0, r5
        color = newColor;
 800618a:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 800618e:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8006192:	f00b fdf7 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006196:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800619a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800619e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80061a2:	f04f 0b3c 	mov.w	fp, #60	; 0x3c
 80061a6:	f8df 9190 	ldr.w	r9, [pc, #400]	; 8006338 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 80061aa:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 80061ae:	a90a      	add	r1, sp, #40	; 0x28
 80061b0:	4640      	mov	r0, r8
 80061b2:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80061b6:	f00c f87f 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80061ba:	4641      	mov	r1, r8
 80061bc:	4630      	mov	r0, r6
 80061be:	f009 fec7 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80061c2:	ee18 0a10 	vmov	r0, s16
 80061c6:	220c      	movs	r2, #12
 80061c8:	2136      	movs	r1, #54	; 0x36
 80061ca:	f7fc fb4e 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 80061ce:	ee18 1a10 	vmov	r1, s16
 80061d2:	4628      	mov	r0, r5
        color = newColor;
 80061d4:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80061d8:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80061dc:	f00b fdd2 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80061e0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80061e4:	ee18 3a10 	vmov	r3, s16
 80061e8:	445b      	add	r3, fp
 80061ea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80061ee:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 80061f0:	ee18 0a10 	vmov	r0, s16
 80061f4:	a90a      	add	r1, sp, #40	; 0x28
 80061f6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80061fa:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80061fe:	f00c f85b 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006202:	ee18 1a10 	vmov	r1, s16
 8006206:	4630      	mov	r0, r6
 8006208:	f009 fea2 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 800620c:	465a      	mov	r2, fp
 800620e:	ee18 0a90 	vmov	r0, s17
 8006212:	2121      	movs	r1, #33	; 0x21
 8006214:	f7fc fb29 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8006218:	ee18 1a90 	vmov	r1, s17
 800621c:	4628      	mov	r0, r5
        color = newColor;
 800621e:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006222:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006226:	f00b fdad 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800622a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800622e:	ee18 3a90 	vmov	r3, s17
 8006232:	445b      	add	r3, fp
 8006234:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006238:	2325      	movs	r3, #37	; 0x25
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 800623a:	ee18 0a90 	vmov	r0, s17
 800623e:	a90a      	add	r1, sp, #40	; 0x28
 8006240:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006244:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006248:	f00c f836 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800624c:	ee18 1a90 	vmov	r1, s17
 8006250:	4630      	mov	r0, r6
 8006252:	f009 fe7d 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006256:	ee19 0a10 	vmov	r0, s18
 800625a:	22f0      	movs	r2, #240	; 0xf0
 800625c:	2121      	movs	r1, #33	; 0x21
 800625e:	f7fc fb04 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8006262:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006266:	aa0a      	add	r2, sp, #40	; 0x28
 8006268:	f04f 0802 	mov.w	r8, #2
 800626c:	a909      	add	r1, sp, #36	; 0x24
 800626e:	ee19 0a10 	vmov	r0, s18
 8006272:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006276:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800627a:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800627e:	f00c fa00 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006282:	233a      	movs	r3, #58	; 0x3a
 8006284:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006288:	3510      	adds	r5, #16
        updateTextPosition();
 800628a:	ee19 0a10 	vmov	r0, s18
 800628e:	f7fc fb41 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006292:	ee19 1a10 	vmov	r1, s18
 8006296:	4630      	mov	r0, r6
        colorPressed = col;
 8006298:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 800629c:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 80062a0:	f009 fe56 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80062a4:	ee19 0a90 	vmov	r0, s19
 80062a8:	22aa      	movs	r2, #170	; 0xaa
 80062aa:	2121      	movs	r1, #33	; 0x21
 80062ac:	f7fc fadd 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80062b0:	aa0a      	add	r2, sp, #40	; 0x28
 80062b2:	a909      	add	r1, sp, #36	; 0x24
 80062b4:	ee19 0a90 	vmov	r0, s19
 80062b8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80062bc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80062c0:	f00c f9df 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80062c4:	2339      	movs	r3, #57	; 0x39
 80062c6:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80062ca:	ee19 0a90 	vmov	r0, s19
 80062ce:	f7fc fb21 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80062d2:	ee19 1a90 	vmov	r1, s19
 80062d6:	4630      	mov	r0, r6
        colorPressed = col;
 80062d8:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80062dc:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80062e0:	f009 fe36 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80062e4:	ee1a 0a10 	vmov	r0, s20
 80062e8:	2264      	movs	r2, #100	; 0x64
 80062ea:	2121      	movs	r1, #33	; 0x21
 80062ec:	f7fc fabd 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80062f0:	aa0a      	add	r2, sp, #40	; 0x28
 80062f2:	a909      	add	r1, sp, #36	; 0x24
 80062f4:	ee1a 0a10 	vmov	r0, s20
 80062f8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80062fc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006300:	f00c f9bf 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006304:	2338      	movs	r3, #56	; 0x38
        updateTextPosition();
 8006306:	ee1a 0a10 	vmov	r0, s20
 800630a:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 800630e:	f7fc fb01 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006312:	4630      	mov	r0, r6
        colorPressed = col;
 8006314:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8006318:	ee1a 1a10 	vmov	r1, s20
 800631c:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8006320:	f009 fe16 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006324:	4620      	mov	r0, r4
 8006326:	b00d      	add	sp, #52	; 0x34
 8006328:	ecbd 8b06 	vpop	{d8-d10}
 800632c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006330:	20012f90 	.word	0x20012f90
 8006334:	0802bcc2 	.word	0x0802bcc2
 8006338:	0802bd38 	.word	0x0802bd38

0800633c <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800633c:	4770      	bx	lr

0800633e <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800633e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006340:	68c2      	ldr	r2, [r0, #12]
 8006342:	6844      	ldr	r4, [r0, #4]
 8006344:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006346:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006348:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800634c:	07d2      	lsls	r2, r2, #31
 800634e:	bf48      	it	mi
 8006350:	5962      	ldrmi	r2, [r4, r5]
 8006352:	689b      	ldr	r3, [r3, #8]
    }
 8006354:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006356:	bf48      	it	mi
 8006358:	58d3      	ldrmi	r3, [r2, r3]
 800635a:	4718      	bx	r3

0800635c <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800635c:	6843      	ldr	r3, [r0, #4]
 800635e:	b12b      	cbz	r3, 800636c <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006360:	6883      	ldr	r3, [r0, #8]
 8006362:	b92b      	cbnz	r3, 8006370 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006364:	68c0      	ldr	r0, [r0, #12]
 8006366:	f000 0001 	and.w	r0, r0, #1
 800636a:	4770      	bx	lr
 800636c:	4618      	mov	r0, r3
 800636e:	4770      	bx	lr
 8006370:	2001      	movs	r0, #1
    }
 8006372:	4770      	bx	lr

08006374 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006374:	b510      	push	{r4, lr}
 8006376:	2110      	movs	r1, #16
 8006378:	4604      	mov	r4, r0
 800637a:	f023 f8f8 	bl	802956e <_ZdlPvj>
 800637e:	4620      	mov	r0, r4
 8006380:	bd10      	pop	{r4, pc}

08006382 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8006382:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8006386:	f002 b8cd 	b.w	8008524 <_ZN17Gauge_with_Values10initializeEv>

0800638a <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800638a:	3098      	adds	r0, #152	; 0x98
 800638c:	4288      	cmp	r0, r1
{
 800638e:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006390:	d105      	bne.n	800639e <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006392:	f00f f875 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006396:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800639a:	f7fd bbdd 	b.w	8003b58 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 800639e:	bd08      	pop	{r3, pc}

080063a0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80063a0:	b510      	push	{r4, lr}
 80063a2:	4b07      	ldr	r3, [pc, #28]	; (80063c0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 80063a4:	6003      	str	r3, [r0, #0]
 80063a6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80063a8:	f00d fb68 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 80063ac:	4b05      	ldr	r3, [pc, #20]	; (80063c4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 80063ae:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 80063b2:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80063b6:	f7fe fe25 	bl	8005004 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80063ba:	4620      	mov	r0, r4
 80063bc:	bd10      	pop	{r4, pc}
 80063be:	bf00      	nop
 80063c0:	0802d7b4 	.word	0x0802d7b4
 80063c4:	0802dd0c 	.word	0x0802dd0c

080063c8 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80063c8:	b510      	push	{r4, lr}
 80063ca:	4604      	mov	r4, r0
}
 80063cc:	f7ff ffe8 	bl	80063a0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80063d0:	4620      	mov	r0, r4
 80063d2:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80063d6:	f023 f8ca 	bl	802956e <_ZdlPvj>
 80063da:	4620      	mov	r0, r4
 80063dc:	bd10      	pop	{r4, pc}
	...

080063e0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 80063e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80063e4:	ed2d 8b04 	vpush	{d8-d9}
 80063e8:	4604      	mov	r4, r0
 80063ea:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 80063ec:	46a1      	mov	r9, r4
 80063ee:	2500      	movs	r5, #0
 80063f0:	f010 fcc6 	bl	8016d80 <_ZN8touchgfx6ScreenC1Ev>
 80063f4:	4bac      	ldr	r3, [pc, #688]	; (80066a8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c8>)
 80063f6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80063f8:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80063fc:	2226      	movs	r2, #38	; 0x26
 80063fe:	4629      	mov	r1, r5
 8006400:	4648      	mov	r0, r9
 8006402:	f024 f8cc 	bl	802a59e <memset>
 8006406:	4648      	mov	r0, r9
 8006408:	f7fc fa50 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 800640c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006410:	26ff      	movs	r6, #255	; 0xff
 8006412:	4ba6      	ldr	r3, [pc, #664]	; (80066ac <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 8006414:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006416:	2226      	movs	r2, #38	; 0x26
 8006418:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800641c:	4629      	mov	r1, r5
 800641e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006422:	4640      	mov	r0, r8
 8006424:	66a5      	str	r5, [r4, #104]	; 0x68
 8006426:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800642a:	f024 f8b8 	bl	802a59e <memset>
 800642e:	4640      	mov	r0, r8
 8006430:	f7fc fa3c 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 8006434:	4b9e      	ldr	r3, [pc, #632]	; (80066b0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 8006436:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006438:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800643c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006440:	a90a      	add	r1, sp, #40	; 0x28
 8006442:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006444:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006448:	f00c fb11 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800644c:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8006450:	4618      	mov	r0, r3
 8006452:	ee08 3a10 	vmov	s16, r3
 8006456:	f00c fc4b 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800645a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800645e:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006462:	4618      	mov	r0, r3
 8006464:	ee08 3a90 	vmov	s17, r3
 8006468:	f7fc fa32 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 800646c:	4638      	mov	r0, r7
 800646e:	f00b f9c7 	bl	8011800 <_ZN8touchgfx4LineC1Ev>
 8006472:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006476:	4618      	mov	r0, r3
 8006478:	9303      	str	r3, [sp, #12]
 800647a:	f7fa fde3 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800647e:	4b8d      	ldr	r3, [pc, #564]	; (80066b4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 8006480:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006484:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8006488:	3324      	adds	r3, #36	; 0x24
 800648a:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800648e:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006492:	4658      	mov	r0, fp
 8006494:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006498:	f7fc fa1a 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 800649c:	4650      	mov	r0, sl
 800649e:	f7fc fa17 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 80064a2:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80064a6:	4618      	mov	r0, r3
 80064a8:	ee09 3a10 	vmov	s18, r3
 80064ac:	f002 f830 	bl	8008510 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80064b0:	4a81      	ldr	r2, [pc, #516]	; (80066b8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 80064b2:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80064b6:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80064ba:	4a80      	ldr	r2, [pc, #512]	; (80066bc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80064bc:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80064c0:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80064c4:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80064c8:	f00d face 	bl	8013a68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80064cc:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80064d0:	462a      	mov	r2, r5
 80064d2:	4648      	mov	r0, r9
 80064d4:	9300      	str	r3, [sp, #0]
 80064d6:	4629      	mov	r1, r5
 80064d8:	23f0      	movs	r3, #240	; 0xf0
 80064da:	f7fc f9d3 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 80064de:	1d26      	adds	r6, r4, #4
        color = newColor;
 80064e0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80064e4:	66a3      	str	r3, [r4, #104]	; 0x68
 80064e6:	4649      	mov	r1, r9
 80064e8:	4630      	mov	r0, r6
 80064ea:	f009 fd31 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80064ee:	462a      	mov	r2, r5
 80064f0:	4640      	mov	r0, r8
 80064f2:	4629      	mov	r1, r5
 80064f4:	f7fc f9b9 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 80064f8:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80064fa:	4640      	mov	r0, r8
 80064fc:	a90a      	add	r1, sp, #40	; 0x28
 80064fe:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006502:	f00c fab4 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006506:	4641      	mov	r1, r8
 8006508:	4630      	mov	r0, r6
 800650a:	f009 fd21 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800650e:	ee18 0a10 	vmov	r0, s16
 8006512:	f240 1201 	movw	r2, #257	; 0x101
 8006516:	2121      	movs	r1, #33	; 0x21
 8006518:	f7fc f9a7 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 800651c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800651e:	aa0a      	add	r2, sp, #40	; 0x28
 8006520:	a909      	add	r1, sp, #36	; 0x24
 8006522:	ee18 0a10 	vmov	r0, s16
 8006526:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800652a:	2302      	movs	r3, #2
 800652c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006530:	f00c f8a7 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006534:	2321      	movs	r3, #33	; 0x21
        updateTextPosition();
 8006536:	ee18 0a10 	vmov	r0, s16
 800653a:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800653e:	f7fc f9e9 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006542:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8006546:	3314      	adds	r3, #20
        color = col;
 8006548:	f04f 39ff 	mov.w	r9, #4294967295
 800654c:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006550:	ee18 1a10 	vmov	r1, s16
 8006554:	4630      	mov	r0, r6
        colorPressed = col;
 8006556:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800655a:	f009 fcf9 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800655e:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006562:	223c      	movs	r2, #60	; 0x3c
 8006564:	ee18 0a90 	vmov	r0, s17
 8006568:	2117      	movs	r1, #23
 800656a:	f7fc f97e 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 800656e:	ee18 1a90 	vmov	r1, s17
 8006572:	4640      	mov	r0, r8
        color = newColor;
 8006574:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006578:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800657c:	f00b fc02 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006580:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006584:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006588:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800658c:	4b4c      	ldr	r3, [pc, #304]	; (80066c0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 800658e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8006590:	ee18 0a90 	vmov	r0, s17
 8006594:	2322      	movs	r3, #34	; 0x22
 8006596:	a90a      	add	r1, sp, #40	; 0x28
 8006598:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800659c:	f00b fe8c 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80065a0:	ee18 1a90 	vmov	r1, s17
 80065a4:	4630      	mov	r0, r6
 80065a6:	f009 fcd3 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80065aa:	230a      	movs	r3, #10
 80065ac:	9300      	str	r3, [sp, #0]
 80065ae:	2232      	movs	r2, #50	; 0x32
 80065b0:	23f0      	movs	r3, #240	; 0xf0
 80065b2:	4629      	mov	r1, r5
 80065b4:	4638      	mov	r0, r7
 80065b6:	f7fc f965 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 80065ba:	9b03      	ldr	r3, [sp, #12]
 80065bc:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80065c0:	22a0      	movs	r2, #160	; 0xa0
 80065c2:	4611      	mov	r1, r2
 80065c4:	4638      	mov	r0, r7
 80065c6:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80065ca:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80065ce:	f00b fa2d 	bl	8011a2c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80065d2:	22a0      	movs	r2, #160	; 0xa0
 80065d4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80065d8:	4638      	mov	r0, r7
 80065da:	f00b fa32 	bl	8011a42 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80065de:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80065e2:	2b20      	cmp	r3, #32
 80065e4:	d005      	beq.n	80065f2 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 80065e6:	2320      	movs	r3, #32
 80065e8:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80065ec:	4638      	mov	r0, r7
 80065ee:	f00b f927 	bl	8011840 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80065f2:	4638      	mov	r0, r7
 80065f4:	2101      	movs	r1, #1
 80065f6:	f00b fa2f 	bl	8011a58 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80065fa:	4639      	mov	r1, r7
 80065fc:	4630      	mov	r0, r6
 80065fe:	f009 fca7 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006602:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8006604:	2223      	movs	r2, #35	; 0x23
 8006606:	4658      	mov	r0, fp
        color = newColor;
 8006608:	f04f 39ff 	mov.w	r9, #4294967295
 800660c:	2145      	movs	r1, #69	; 0x45
 800660e:	f7fc f92c 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006612:	4659      	mov	r1, fp
 8006614:	4640      	mov	r0, r8
        color = newColor;
 8006616:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 800661a:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800661e:	f00b fbb1 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006622:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006626:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 800662a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800662e:	4f24      	ldr	r7, [pc, #144]	; (80066c0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 8006630:	970a      	str	r7, [sp, #40]	; 0x28
 8006632:	2323      	movs	r3, #35	; 0x23
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006634:	a90a      	add	r1, sp, #40	; 0x28
 8006636:	4658      	mov	r0, fp
 8006638:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800663c:	f00b fe3c 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006640:	4659      	mov	r1, fp
 8006642:	4630      	mov	r0, r6
 8006644:	f009 fc84 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006648:	220c      	movs	r2, #12
 800664a:	4650      	mov	r0, sl
 800664c:	2136      	movs	r1, #54	; 0x36
 800664e:	f7fc f90c 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8006652:	4651      	mov	r1, sl
 8006654:	4640      	mov	r0, r8
        color = newColor;
 8006656:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 800665a:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800665e:	f00b fb91 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006662:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006666:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800666a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800666e:	2324      	movs	r3, #36	; 0x24
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8006670:	a90a      	add	r1, sp, #40	; 0x28
 8006672:	4650      	mov	r0, sl
 8006674:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006678:	970a      	str	r7, [sp, #40]	; 0x28
 800667a:	f00b fe1d 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800667e:	4651      	mov	r1, sl
 8006680:	4630      	mov	r0, r6
 8006682:	f009 fc65 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8006686:	ee19 0a10 	vmov	r0, s18
 800668a:	224e      	movs	r2, #78	; 0x4e
 800668c:	4629      	mov	r1, r5
 800668e:	f7fc f8ec 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8006692:	4630      	mov	r0, r6
 8006694:	ee19 1a10 	vmov	r1, s18
 8006698:	f009 fc5a 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800669c:	4620      	mov	r0, r4
 800669e:	b00d      	add	sp, #52	; 0x34
 80066a0:	ecbd 8b04 	vpop	{d8-d9}
 80066a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80066a8:	0802d7b4 	.word	0x0802d7b4
 80066ac:	0802e690 	.word	0x0802e690
 80066b0:	0802e858 	.word	0x0802e858
 80066b4:	0802e3c4 	.word	0x0802e3c4
 80066b8:	0802d79c 	.word	0x0802d79c
 80066bc:	0800638b 	.word	0x0800638b
 80066c0:	0802bd38 	.word	0x0802bd38

080066c4 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80066c4:	4770      	bx	lr

080066c6 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80066c6:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80066c8:	68c2      	ldr	r2, [r0, #12]
 80066ca:	6844      	ldr	r4, [r0, #4]
 80066cc:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80066ce:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80066d0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80066d4:	07d2      	lsls	r2, r2, #31
 80066d6:	bf48      	it	mi
 80066d8:	5962      	ldrmi	r2, [r4, r5]
 80066da:	689b      	ldr	r3, [r3, #8]
    }
 80066dc:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80066de:	bf48      	it	mi
 80066e0:	58d3      	ldrmi	r3, [r2, r3]
 80066e2:	4718      	bx	r3

080066e4 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80066e4:	6843      	ldr	r3, [r0, #4]
 80066e6:	b12b      	cbz	r3, 80066f4 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80066e8:	6883      	ldr	r3, [r0, #8]
 80066ea:	b92b      	cbnz	r3, 80066f8 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80066ec:	68c0      	ldr	r0, [r0, #12]
 80066ee:	f000 0001 	and.w	r0, r0, #1
 80066f2:	4770      	bx	lr
 80066f4:	4618      	mov	r0, r3
 80066f6:	4770      	bx	lr
 80066f8:	2001      	movs	r0, #1
    }
 80066fa:	4770      	bx	lr

080066fc <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80066fc:	b510      	push	{r4, lr}
 80066fe:	2110      	movs	r1, #16
 8006700:	4604      	mov	r4, r0
 8006702:	f022 ff34 	bl	802956e <_ZdlPvj>
 8006706:	4620      	mov	r0, r4
 8006708:	bd10      	pop	{r4, pc}

0800670a <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 800670a:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800670e:	f001 bf09 	b.w	8008524 <_ZN17Gauge_with_Values10initializeEv>

08006712 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006712:	3098      	adds	r0, #152	; 0x98
 8006714:	4288      	cmp	r0, r1
{
 8006716:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006718:	d105      	bne.n	8006726 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800671a:	f00e feb1 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 800671e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006722:	f7fd ba19 	b.w	8003b58 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006726:	bd08      	pop	{r3, pc}

08006728 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006728:	b510      	push	{r4, lr}
 800672a:	4b07      	ldr	r3, [pc, #28]	; (8006748 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 800672c:	6003      	str	r3, [r0, #0]
 800672e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006730:	f00d f9a4 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006734:	4b05      	ldr	r3, [pc, #20]	; (800674c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 8006736:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800673a:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800673e:	f7fe fc61 	bl	8005004 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8006742:	4620      	mov	r0, r4
 8006744:	bd10      	pop	{r4, pc}
 8006746:	bf00      	nop
 8006748:	0802d800 	.word	0x0802d800
 800674c:	0802dd0c 	.word	0x0802dd0c

08006750 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006750:	b510      	push	{r4, lr}
 8006752:	4604      	mov	r4, r0
}
 8006754:	f7ff ffe8 	bl	8006728 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8006758:	4620      	mov	r0, r4
 800675a:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800675e:	f022 ff06 	bl	802956e <_ZdlPvj>
 8006762:	4620      	mov	r0, r4
 8006764:	bd10      	pop	{r4, pc}
	...

08006768 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8006768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800676c:	ed2d 8b04 	vpush	{d8-d9}
 8006770:	4604      	mov	r4, r0
 8006772:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8006774:	46a1      	mov	r9, r4
 8006776:	2500      	movs	r5, #0
 8006778:	f010 fb02 	bl	8016d80 <_ZN8touchgfx6ScreenC1Ev>
 800677c:	4bac      	ldr	r3, [pc, #688]	; (8006a30 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 800677e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006780:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006784:	2226      	movs	r2, #38	; 0x26
 8006786:	4629      	mov	r1, r5
 8006788:	4648      	mov	r0, r9
 800678a:	f023 ff08 	bl	802a59e <memset>
 800678e:	4648      	mov	r0, r9
 8006790:	f7fc f88c 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 8006794:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006798:	26ff      	movs	r6, #255	; 0xff
 800679a:	4ba6      	ldr	r3, [pc, #664]	; (8006a34 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 800679c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800679e:	2226      	movs	r2, #38	; 0x26
 80067a0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80067a4:	4629      	mov	r1, r5
 80067a6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80067aa:	4640      	mov	r0, r8
 80067ac:	66a5      	str	r5, [r4, #104]	; 0x68
 80067ae:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80067b2:	f023 fef4 	bl	802a59e <memset>
 80067b6:	4640      	mov	r0, r8
 80067b8:	f7fc f878 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 80067bc:	4b9e      	ldr	r3, [pc, #632]	; (8006a38 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 80067be:	66e3      	str	r3, [r4, #108]	; 0x6c
 80067c0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80067c4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80067c8:	a90a      	add	r1, sp, #40	; 0x28
 80067ca:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80067cc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80067d0:	f00c f94d 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80067d4:	f104 0398 	add.w	r3, r4, #152	; 0x98
 80067d8:	4618      	mov	r0, r3
 80067da:	ee08 3a10 	vmov	s16, r3
 80067de:	f00c fa87 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80067e2:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80067e6:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80067ea:	4618      	mov	r0, r3
 80067ec:	ee08 3a90 	vmov	s17, r3
 80067f0:	f7fc f86e 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 80067f4:	4638      	mov	r0, r7
 80067f6:	f00b f803 	bl	8011800 <_ZN8touchgfx4LineC1Ev>
 80067fa:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80067fe:	4618      	mov	r0, r3
 8006800:	9303      	str	r3, [sp, #12]
 8006802:	f7fa fc1f 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006806:	4b8d      	ldr	r3, [pc, #564]	; (8006a3c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 8006808:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 800680c:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8006810:	3324      	adds	r3, #36	; 0x24
 8006812:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006816:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 800681a:	4658      	mov	r0, fp
 800681c:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006820:	f7fc f856 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8006824:	4650      	mov	r0, sl
 8006826:	f7fc f853 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 800682a:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800682e:	4618      	mov	r0, r3
 8006830:	ee09 3a10 	vmov	s18, r3
 8006834:	f001 fe6c 	bl	8008510 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006838:	4a81      	ldr	r2, [pc, #516]	; (8006a40 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 800683a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800683e:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8006842:	4a80      	ldr	r2, [pc, #512]	; (8006a44 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006844:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006848:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 800684c:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8006850:	f00d f90a 	bl	8013a68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006854:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006858:	462a      	mov	r2, r5
 800685a:	4648      	mov	r0, r9
 800685c:	9300      	str	r3, [sp, #0]
 800685e:	4629      	mov	r1, r5
 8006860:	23f0      	movs	r3, #240	; 0xf0
 8006862:	f7fc f80f 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006866:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006868:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800686c:	66a3      	str	r3, [r4, #104]	; 0x68
 800686e:	4649      	mov	r1, r9
 8006870:	4630      	mov	r0, r6
 8006872:	f009 fb6d 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006876:	462a      	mov	r2, r5
 8006878:	4640      	mov	r0, r8
 800687a:	4629      	mov	r1, r5
 800687c:	f7fb fff5 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8006880:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006882:	4640      	mov	r0, r8
 8006884:	a90a      	add	r1, sp, #40	; 0x28
 8006886:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800688a:	f00c f8f0 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800688e:	4641      	mov	r1, r8
 8006890:	4630      	mov	r0, r6
 8006892:	f009 fb5d 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006896:	ee18 0a10 	vmov	r0, s16
 800689a:	f240 1201 	movw	r2, #257	; 0x101
 800689e:	2121      	movs	r1, #33	; 0x21
 80068a0:	f7fb ffe3 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 80068a4:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80068a6:	aa0a      	add	r2, sp, #40	; 0x28
 80068a8:	a909      	add	r1, sp, #36	; 0x24
 80068aa:	ee18 0a10 	vmov	r0, s16
 80068ae:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80068b2:	2302      	movs	r3, #2
 80068b4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80068b8:	f00b fee3 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80068bc:	231d      	movs	r3, #29
        updateTextPosition();
 80068be:	ee18 0a10 	vmov	r0, s16
 80068c2:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80068c6:	f7fc f825 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80068ca:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80068ce:	3314      	adds	r3, #20
        color = col;
 80068d0:	f04f 39ff 	mov.w	r9, #4294967295
 80068d4:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80068d8:	ee18 1a10 	vmov	r1, s16
 80068dc:	4630      	mov	r0, r6
        colorPressed = col;
 80068de:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80068e2:	f009 fb35 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80068e6:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80068ea:	223c      	movs	r2, #60	; 0x3c
 80068ec:	ee18 0a90 	vmov	r0, s17
 80068f0:	2117      	movs	r1, #23
 80068f2:	f7fb ffba 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 80068f6:	ee18 1a90 	vmov	r1, s17
 80068fa:	4640      	mov	r0, r8
        color = newColor;
 80068fc:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006900:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006904:	f00b fa3e 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006908:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800690c:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006910:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006914:	4b4c      	ldr	r3, [pc, #304]	; (8006a48 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 8006916:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8006918:	ee18 0a90 	vmov	r0, s17
 800691c:	231e      	movs	r3, #30
 800691e:	a90a      	add	r1, sp, #40	; 0x28
 8006920:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006924:	f00b fcc8 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006928:	ee18 1a90 	vmov	r1, s17
 800692c:	4630      	mov	r0, r6
 800692e:	f009 fb0f 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006932:	230a      	movs	r3, #10
 8006934:	9300      	str	r3, [sp, #0]
 8006936:	2232      	movs	r2, #50	; 0x32
 8006938:	23f0      	movs	r3, #240	; 0xf0
 800693a:	4629      	mov	r1, r5
 800693c:	4638      	mov	r0, r7
 800693e:	f7fb ffa1 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006942:	9b03      	ldr	r3, [sp, #12]
 8006944:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006948:	22a0      	movs	r2, #160	; 0xa0
 800694a:	4611      	mov	r1, r2
 800694c:	4638      	mov	r0, r7
 800694e:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006952:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006956:	f00b f869 	bl	8011a2c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800695a:	22a0      	movs	r2, #160	; 0xa0
 800695c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006960:	4638      	mov	r0, r7
 8006962:	f00b f86e 	bl	8011a42 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006966:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 800696a:	2b20      	cmp	r3, #32
 800696c:	d005      	beq.n	800697a <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 800696e:	2320      	movs	r3, #32
 8006970:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006974:	4638      	mov	r0, r7
 8006976:	f00a ff63 	bl	8011840 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800697a:	4638      	mov	r0, r7
 800697c:	2101      	movs	r1, #1
 800697e:	f00b f86b 	bl	8011a58 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006982:	4639      	mov	r1, r7
 8006984:	4630      	mov	r0, r6
 8006986:	f009 fae3 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800698a:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 800698c:	2223      	movs	r2, #35	; 0x23
 800698e:	4658      	mov	r0, fp
        color = newColor;
 8006990:	f04f 39ff 	mov.w	r9, #4294967295
 8006994:	2145      	movs	r1, #69	; 0x45
 8006996:	f7fb ff68 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800699a:	4659      	mov	r1, fp
 800699c:	4640      	mov	r0, r8
        color = newColor;
 800699e:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 80069a2:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80069a6:	f00b f9ed 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80069aa:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80069ae:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 80069b2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80069b6:	4f24      	ldr	r7, [pc, #144]	; (8006a48 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 80069b8:	970a      	str	r7, [sp, #40]	; 0x28
 80069ba:	231f      	movs	r3, #31
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 80069bc:	a90a      	add	r1, sp, #40	; 0x28
 80069be:	4658      	mov	r0, fp
 80069c0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069c4:	f00b fc78 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069c8:	4659      	mov	r1, fp
 80069ca:	4630      	mov	r0, r6
 80069cc:	f009 fac0 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80069d0:	220c      	movs	r2, #12
 80069d2:	4650      	mov	r0, sl
 80069d4:	2136      	movs	r1, #54	; 0x36
 80069d6:	f7fb ff48 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 80069da:	4651      	mov	r1, sl
 80069dc:	4640      	mov	r0, r8
        color = newColor;
 80069de:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 80069e2:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80069e6:	f00b f9cd 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80069ea:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80069ee:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80069f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80069f6:	2320      	movs	r3, #32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 80069f8:	a90a      	add	r1, sp, #40	; 0x28
 80069fa:	4650      	mov	r0, sl
 80069fc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a00:	970a      	str	r7, [sp, #40]	; 0x28
 8006a02:	f00b fc59 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a06:	4651      	mov	r1, sl
 8006a08:	4630      	mov	r0, r6
 8006a0a:	f009 faa1 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8006a0e:	ee19 0a10 	vmov	r0, s18
 8006a12:	224e      	movs	r2, #78	; 0x4e
 8006a14:	4629      	mov	r1, r5
 8006a16:	f7fb ff28 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8006a1a:	4630      	mov	r0, r6
 8006a1c:	ee19 1a10 	vmov	r1, s18
 8006a20:	f009 fa96 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006a24:	4620      	mov	r0, r4
 8006a26:	b00d      	add	sp, #52	; 0x34
 8006a28:	ecbd 8b04 	vpop	{d8-d9}
 8006a2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006a30:	0802d800 	.word	0x0802d800
 8006a34:	0802e690 	.word	0x0802e690
 8006a38:	0802e858 	.word	0x0802e858
 8006a3c:	0802e3c4 	.word	0x0802e3c4
 8006a40:	0802d7e8 	.word	0x0802d7e8
 8006a44:	08006713 	.word	0x08006713
 8006a48:	0802bd38 	.word	0x0802bd38

08006a4c <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8006a4c:	4770      	bx	lr

08006a4e <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006a4e:	4770      	bx	lr

08006a50 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006a50:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006a52:	68c2      	ldr	r2, [r0, #12]
 8006a54:	6844      	ldr	r4, [r0, #4]
 8006a56:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006a58:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006a5a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006a5e:	07d2      	lsls	r2, r2, #31
 8006a60:	bf48      	it	mi
 8006a62:	5962      	ldrmi	r2, [r4, r5]
 8006a64:	689b      	ldr	r3, [r3, #8]
    }
 8006a66:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006a68:	bf48      	it	mi
 8006a6a:	58d3      	ldrmi	r3, [r2, r3]
 8006a6c:	4718      	bx	r3

08006a6e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006a6e:	6843      	ldr	r3, [r0, #4]
 8006a70:	b12b      	cbz	r3, 8006a7e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006a72:	6883      	ldr	r3, [r0, #8]
 8006a74:	b92b      	cbnz	r3, 8006a82 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006a76:	68c0      	ldr	r0, [r0, #12]
 8006a78:	f000 0001 	and.w	r0, r0, #1
 8006a7c:	4770      	bx	lr
 8006a7e:	4618      	mov	r0, r3
 8006a80:	4770      	bx	lr
 8006a82:	2001      	movs	r0, #1
    }
 8006a84:	4770      	bx	lr

08006a86 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006a86:	b510      	push	{r4, lr}
 8006a88:	2110      	movs	r1, #16
 8006a8a:	4604      	mov	r4, r0
 8006a8c:	f022 fd6f 	bl	802956e <_ZdlPvj>
 8006a90:	4620      	mov	r0, r4
 8006a92:	bd10      	pop	{r4, pc}

08006a94 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006a94:	b510      	push	{r4, lr}
 8006a96:	4b03      	ldr	r3, [pc, #12]	; (8006aa4 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8006a98:	6003      	str	r3, [r0, #0]
 8006a9a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006a9c:	f00c ffee 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006aa0:	4620      	mov	r0, r4
 8006aa2:	bd10      	pop	{r4, pc}
 8006aa4:	0802d84c 	.word	0x0802d84c

08006aa8 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006aa8:	b507      	push	{r0, r1, r2, lr}
 8006aaa:	4b07      	ldr	r3, [pc, #28]	; (8006ac8 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8006aac:	6003      	str	r3, [r0, #0]
 8006aae:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006ab0:	f00c ffe4 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006ab4:	9801      	ldr	r0, [sp, #4]
 8006ab6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8006aba:	f022 fd58 	bl	802956e <_ZdlPvj>
 8006abe:	9801      	ldr	r0, [sp, #4]
 8006ac0:	b003      	add	sp, #12
 8006ac2:	f85d fb04 	ldr.w	pc, [sp], #4
 8006ac6:	bf00      	nop
 8006ac8:	0802d84c 	.word	0x0802d84c

08006acc <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006acc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006ace:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006ad2:	4299      	cmp	r1, r3
{
 8006ad4:	4604      	mov	r4, r0
 8006ad6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8006ad8:	d103      	bne.n	8006ae2 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006ada:	f00e fcd1 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8006ade:	f7fc ffeb 	bl	8003ab8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8006ae2:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006ae6:	429d      	cmp	r5, r3
 8006ae8:	d103      	bne.n	8006af2 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006aea:	f00e fcc9 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8006aee:	f7fd f803 	bl	8003af8 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8006af2:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8006af6:	42a5      	cmp	r5, r4
 8006af8:	d105      	bne.n	8006b06 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006afa:	f00e fcc1 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8006afe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8006b02:	f7fd b809 	b.w	8003b18 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 8006b06:	bd38      	pop	{r3, r4, r5, pc}

08006b08 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8006b08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006b0c:	ed2d 8b06 	vpush	{d8-d10}
 8006b10:	4604      	mov	r4, r0
 8006b12:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8006b14:	46a3      	mov	fp, r4
 8006b16:	2500      	movs	r5, #0
 8006b18:	f010 f932 	bl	8016d80 <_ZN8touchgfx6ScreenC1Ev>
 8006b1c:	4b66      	ldr	r3, [pc, #408]	; (8006cb8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 8006b1e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006b20:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006b24:	2226      	movs	r2, #38	; 0x26
 8006b26:	4629      	mov	r1, r5
 8006b28:	4658      	mov	r0, fp
 8006b2a:	f023 fd38 	bl	802a59e <memset>
 8006b2e:	4658      	mov	r0, fp
 8006b30:	f7fb febc 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 8006b34:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006b38:	26ff      	movs	r6, #255	; 0xff
 8006b3a:	4b60      	ldr	r3, [pc, #384]	; (8006cbc <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8006b3c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006b3e:	2226      	movs	r2, #38	; 0x26
 8006b40:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006b44:	4629      	mov	r1, r5
 8006b46:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006b4a:	4650      	mov	r0, sl
 8006b4c:	66a5      	str	r5, [r4, #104]	; 0x68
 8006b4e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006b52:	f023 fd24 	bl	802a59e <memset>
 8006b56:	4650      	mov	r0, sl
 8006b58:	f7fb fea8 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 8006b5c:	4b58      	ldr	r3, [pc, #352]	; (8006cc0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 8006b5e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006b60:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006b64:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006b68:	a90a      	add	r1, sp, #40	; 0x28
 8006b6a:	4650      	mov	r0, sl
 8006b6c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006b70:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006b74:	f00b ff7b 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006b78:	4648      	mov	r0, r9
 8006b7a:	f7fb fea9 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006b7e:	4b51      	ldr	r3, [pc, #324]	; (8006cc4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8006b80:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006b84:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006b88:	4618      	mov	r0, r3
 8006b8a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006b8e:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8006b92:	ee08 3a90 	vmov	s17, r3
 8006b96:	f7fb fe9b 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8006b9a:	4638      	mov	r0, r7
 8006b9c:	f00a fe30 	bl	8011800 <_ZN8touchgfx4LineC1Ev>
 8006ba0:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006ba4:	4618      	mov	r0, r3
 8006ba6:	9303      	str	r3, [sp, #12]
 8006ba8:	f7fa fa4c 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006bac:	4b46      	ldr	r3, [pc, #280]	; (8006cc8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8006bae:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006bb2:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8006bb6:	3324      	adds	r3, #36	; 0x24
 8006bb8:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8006bbc:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8006bc0:	4640      	mov	r0, r8
 8006bc2:	f7fb fe85 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8006bc6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006bca:	4618      	mov	r0, r3
 8006bcc:	ee08 3a10 	vmov	s16, r3
 8006bd0:	f7fb fe7e 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8006bd4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006bd8:	4618      	mov	r0, r3
 8006bda:	ee09 3a10 	vmov	s18, r3
 8006bde:	f00c f887 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006be2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006be6:	4618      	mov	r0, r3
 8006be8:	ee09 3a90 	vmov	s19, r3
 8006bec:	f00c f880 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006bf0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006bf4:	4618      	mov	r0, r3
 8006bf6:	ee0a 3a10 	vmov	s20, r3
 8006bfa:	f00c f879 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006bfe:	4a33      	ldr	r2, [pc, #204]	; (8006ccc <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8006c00:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006c04:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006c08:	4a31      	ldr	r2, [pc, #196]	; (8006cd0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006c0a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006c0e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006c12:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006c16:	f00c ff27 	bl	8013a68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006c1a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006c1e:	462a      	mov	r2, r5
 8006c20:	4658      	mov	r0, fp
 8006c22:	9300      	str	r3, [sp, #0]
 8006c24:	4629      	mov	r1, r5
 8006c26:	23f0      	movs	r3, #240	; 0xf0
 8006c28:	f7fb fe2c 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006c2c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006c2e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006c32:	66a3      	str	r3, [r4, #104]	; 0x68
 8006c34:	4659      	mov	r1, fp
 8006c36:	4630      	mov	r0, r6
 8006c38:	f009 f98a 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006c3c:	462a      	mov	r2, r5
 8006c3e:	4650      	mov	r0, sl
 8006c40:	4629      	mov	r1, r5
 8006c42:	f7fb fe12 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8006c46:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006c48:	4650      	mov	r0, sl
 8006c4a:	a90a      	add	r1, sp, #40	; 0x28
 8006c4c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006c50:	f00b ff0d 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006c54:	4651      	mov	r1, sl
 8006c56:	4630      	mov	r0, r6
 8006c58:	f009 f97a 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006c5c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006c60:	2156      	movs	r1, #86	; 0x56
 8006c62:	4648      	mov	r0, r9
 8006c64:	f7fb fe01 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006c68:	f04f 33ff 	mov.w	r3, #4294967295
 8006c6c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006c70:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006c74:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006c78:	f10d 0b10 	add.w	fp, sp, #16
 8006c7c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006c80:	4649      	mov	r1, r9
 8006c82:	4658      	mov	r0, fp
 8006c84:	4798      	blx	r3
 8006c86:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006c8a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006c8e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006c92:	4b10      	ldr	r3, [pc, #64]	; (8006cd4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8006c94:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8006c96:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006c9a:	b92b      	cbnz	r3, 8006ca8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8006c9c:	4b0e      	ldr	r3, [pc, #56]	; (8006cd8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8006c9e:	4a0f      	ldr	r2, [pc, #60]	; (8006cdc <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006ca0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006ca2:	480f      	ldr	r0, [pc, #60]	; (8006ce0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8006ca4:	f023 fa76 	bl	802a194 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006ca8:	4b0e      	ldr	r3, [pc, #56]	; (8006ce4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006caa:	881b      	ldrh	r3, [r3, #0]
 8006cac:	2b18      	cmp	r3, #24
 8006cae:	d81d      	bhi.n	8006cec <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8006cb0:	4b0d      	ldr	r3, [pc, #52]	; (8006ce8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8006cb2:	4a0a      	ldr	r2, [pc, #40]	; (8006cdc <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006cb4:	2161      	movs	r1, #97	; 0x61
 8006cb6:	e7f4      	b.n	8006ca2 <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8006cb8:	0802d84c 	.word	0x0802d84c
 8006cbc:	0802e690 	.word	0x0802e690
 8006cc0:	0802e858 	.word	0x0802e858
 8006cc4:	0802bd48 	.word	0x0802bd48
 8006cc8:	0802e3c4 	.word	0x0802e3c4
 8006ccc:	0802d834 	.word	0x0802d834
 8006cd0:	08006acd 	.word	0x08006acd
 8006cd4:	20012f84 	.word	0x20012f84
 8006cd8:	0802bb88 	.word	0x0802bb88
 8006cdc:	0802bc8a 	.word	0x0802bc8a
 8006ce0:	0802bc05 	.word	0x0802bc05
 8006ce4:	20012f88 	.word	0x20012f88
 8006ce8:	0802bc4c 	.word	0x0802bc4c
        return texts->getText(typedTextId);
 8006cec:	4b96      	ldr	r3, [pc, #600]	; (8006f48 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8006cee:	2118      	movs	r1, #24
 8006cf0:	6818      	ldr	r0, [r3, #0]
 8006cf2:	f001 facf 	bl	8008294 <_ZNK8touchgfx5Texts7getTextEt>
 8006cf6:	4a95      	ldr	r2, [pc, #596]	; (8006f4c <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 8006cf8:	4603      	mov	r3, r0
 8006cfa:	2104      	movs	r1, #4
 8006cfc:	4650      	mov	r0, sl
 8006cfe:	f011 fd2f 	bl	8018760 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006d02:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8006d06:	4648      	mov	r0, r9
 8006d08:	f00b fab6 	bl	8012278 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006d0c:	f8df a240 	ldr.w	sl, [pc, #576]	; 8006f50 <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 8006d10:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006d14:	2319      	movs	r3, #25
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8006d16:	a90a      	add	r1, sp, #40	; 0x28
 8006d18:	4648      	mov	r0, r9
 8006d1a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006d1e:	f00b facb 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d22:	4649      	mov	r1, r9
 8006d24:	4630      	mov	r0, r6
 8006d26:	f009 f913 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 8006d2a:	223c      	movs	r2, #60	; 0x3c
 8006d2c:	ee18 0a90 	vmov	r0, s17
 8006d30:	2129      	movs	r1, #41	; 0x29
 8006d32:	f7fb fd9a 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006d36:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006d3a:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006d3e:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006d42:	4658      	mov	r0, fp
        linespace = space;
 8006d44:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006d48:	f00b f81c 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d4c:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006d50:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006d54:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006d58:	2328      	movs	r3, #40	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8006d5a:	eb0d 0103 	add.w	r1, sp, r3
 8006d5e:	ee18 0a90 	vmov	r0, s17
 8006d62:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006d66:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006d6a:	f00b faa5 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d6e:	ee18 1a90 	vmov	r1, s17
 8006d72:	4630      	mov	r0, r6
 8006d74:	f009 f8ec 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006d78:	230a      	movs	r3, #10
 8006d7a:	9300      	str	r3, [sp, #0]
 8006d7c:	2232      	movs	r2, #50	; 0x32
 8006d7e:	23f0      	movs	r3, #240	; 0xf0
 8006d80:	4629      	mov	r1, r5
 8006d82:	4638      	mov	r0, r7
 8006d84:	f7fb fd7e 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006d88:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006d8c:	22a0      	movs	r2, #160	; 0xa0
 8006d8e:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006d92:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006d96:	9b03      	ldr	r3, [sp, #12]
 8006d98:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006d9c:	4611      	mov	r1, r2
 8006d9e:	4638      	mov	r0, r7
 8006da0:	f00a fe44 	bl	8011a2c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006da4:	22a0      	movs	r2, #160	; 0xa0
 8006da6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006daa:	4638      	mov	r0, r7
 8006dac:	f00a fe49 	bl	8011a42 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006db0:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8006db4:	2b20      	cmp	r3, #32
 8006db6:	d005      	beq.n	8006dc4 <_ZN26Measurement_SingleViewBaseC1Ev+0x2bc>
        lineWidthQ5 = widthQ5;
 8006db8:	2320      	movs	r3, #32
 8006dba:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006dbe:	4638      	mov	r0, r7
 8006dc0:	f00a fd3e 	bl	8011840 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006dc4:	4638      	mov	r0, r7
 8006dc6:	2101      	movs	r1, #1
 8006dc8:	f00a fe46 	bl	8011a58 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006dcc:	4639      	mov	r1, r7
 8006dce:	4630      	mov	r0, r6
 8006dd0:	f009 f8be 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006dd4:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8006dd8:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006dda:	2223      	movs	r2, #35	; 0x23
 8006ddc:	4640      	mov	r0, r8
        linespace = space;
 8006dde:	f04f 0a00 	mov.w	sl, #0
 8006de2:	2145      	movs	r1, #69	; 0x45
 8006de4:	f7fb fd41 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006de8:	4641      	mov	r1, r8
 8006dea:	4638      	mov	r0, r7
        color = newColor;
 8006dec:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006df0:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006df4:	f00a ffc6 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006df8:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006dfc:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006e00:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e04:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006f50 <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 8006e08:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006e0c:	2341      	movs	r3, #65	; 0x41
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8006e0e:	a90a      	add	r1, sp, #40	; 0x28
 8006e10:	4640      	mov	r0, r8
 8006e12:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e16:	f00b fa4f 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e1a:	4641      	mov	r1, r8
 8006e1c:	4630      	mov	r0, r6
 8006e1e:	f009 f897 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006e22:	ee18 0a10 	vmov	r0, s16
 8006e26:	220c      	movs	r2, #12
 8006e28:	2136      	movs	r1, #54	; 0x36
 8006e2a:	f7fb fd1e 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8006e2e:	ee18 1a10 	vmov	r1, s16
 8006e32:	4638      	mov	r0, r7
        color = newColor;
 8006e34:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006e38:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006e3c:	f00a ffa2 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e40:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006e44:	ee18 3a10 	vmov	r3, s16
 8006e48:	333c      	adds	r3, #60	; 0x3c
 8006e4a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e4e:	2340      	movs	r3, #64	; 0x40
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8006e50:	ee18 0a10 	vmov	r0, s16
 8006e54:	a90a      	add	r1, sp, #40	; 0x28
 8006e56:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e5a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006e5e:	f00b fa2b 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e62:	ee18 1a10 	vmov	r1, s16
 8006e66:	4630      	mov	r0, r6
 8006e68:	f009 f872 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006e6c:	ee19 0a10 	vmov	r0, s18
 8006e70:	22f0      	movs	r2, #240	; 0xf0
 8006e72:	2121      	movs	r1, #33	; 0x21
 8006e74:	f7fb fcf9 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8006e78:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006e7c:	aa0a      	add	r2, sp, #40	; 0x28
 8006e7e:	f04f 0802 	mov.w	r8, #2
 8006e82:	a909      	add	r1, sp, #36	; 0x24
 8006e84:	ee19 0a10 	vmov	r0, s18
 8006e88:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006e8c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006e90:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006e94:	f00b fbf5 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006e98:	233f      	movs	r3, #63	; 0x3f
 8006e9a:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006e9e:	3710      	adds	r7, #16
        updateTextPosition();
 8006ea0:	ee19 0a10 	vmov	r0, s18
 8006ea4:	f7fb fd36 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006ea8:	ee19 1a10 	vmov	r1, s18
 8006eac:	4630      	mov	r0, r6
        colorPressed = col;
 8006eae:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006eb2:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006eb6:	f009 f84b 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006eba:	ee19 0a90 	vmov	r0, s19
 8006ebe:	22aa      	movs	r2, #170	; 0xaa
 8006ec0:	2121      	movs	r1, #33	; 0x21
 8006ec2:	f7fb fcd2 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006ec6:	aa0a      	add	r2, sp, #40	; 0x28
 8006ec8:	a909      	add	r1, sp, #36	; 0x24
 8006eca:	ee19 0a90 	vmov	r0, s19
 8006ece:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006ed2:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006ed6:	f00b fbd4 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006eda:	233e      	movs	r3, #62	; 0x3e
 8006edc:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006ee0:	ee19 0a90 	vmov	r0, s19
 8006ee4:	f7fb fd16 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006ee8:	ee19 1a90 	vmov	r1, s19
 8006eec:	4630      	mov	r0, r6
        colorPressed = col;
 8006eee:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006ef2:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006ef6:	f009 f82b 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006efa:	ee1a 0a10 	vmov	r0, s20
 8006efe:	2264      	movs	r2, #100	; 0x64
 8006f00:	2121      	movs	r1, #33	; 0x21
 8006f02:	f7fb fcb2 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006f06:	aa0a      	add	r2, sp, #40	; 0x28
 8006f08:	a909      	add	r1, sp, #36	; 0x24
 8006f0a:	ee1a 0a10 	vmov	r0, s20
 8006f0e:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006f12:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006f16:	f00b fbb4 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006f1a:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 8006f1c:	ee1a 0a10 	vmov	r0, s20
 8006f20:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006f24:	f7fb fcf6 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006f28:	4630      	mov	r0, r6
        colorPressed = col;
 8006f2a:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006f2e:	ee1a 1a10 	vmov	r1, s20
 8006f32:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006f36:	f009 f80b 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006f3a:	4620      	mov	r0, r4
 8006f3c:	b00d      	add	sp, #52	; 0x34
 8006f3e:	ecbd 8b06 	vpop	{d8-d10}
 8006f42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006f46:	bf00      	nop
 8006f48:	20012f90 	.word	0x20012f90
 8006f4c:	0802bcc2 	.word	0x0802bcc2
 8006f50:	0802bd38 	.word	0x0802bd38

08006f54 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8006f54:	4770      	bx	lr

08006f56 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8006f56:	4770      	bx	lr

08006f58 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006f58:	4770      	bx	lr

08006f5a <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006f5a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006f5c:	68c2      	ldr	r2, [r0, #12]
 8006f5e:	6844      	ldr	r4, [r0, #4]
 8006f60:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006f62:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006f64:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006f68:	07d2      	lsls	r2, r2, #31
 8006f6a:	bf48      	it	mi
 8006f6c:	5962      	ldrmi	r2, [r4, r5]
 8006f6e:	689b      	ldr	r3, [r3, #8]
    }
 8006f70:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006f72:	bf48      	it	mi
 8006f74:	58d3      	ldrmi	r3, [r2, r3]
 8006f76:	4718      	bx	r3

08006f78 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006f78:	6843      	ldr	r3, [r0, #4]
 8006f7a:	b12b      	cbz	r3, 8006f88 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006f7c:	6883      	ldr	r3, [r0, #8]
 8006f7e:	b92b      	cbnz	r3, 8006f8c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006f80:	68c0      	ldr	r0, [r0, #12]
 8006f82:	f000 0001 	and.w	r0, r0, #1
 8006f86:	4770      	bx	lr
 8006f88:	4618      	mov	r0, r3
 8006f8a:	4770      	bx	lr
 8006f8c:	2001      	movs	r0, #1
    }
 8006f8e:	4770      	bx	lr

08006f90 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006f90:	b510      	push	{r4, lr}
 8006f92:	2110      	movs	r1, #16
 8006f94:	4604      	mov	r4, r0
 8006f96:	f022 faea 	bl	802956e <_ZdlPvj>
 8006f9a:	4620      	mov	r0, r4
 8006f9c:	bd10      	pop	{r4, pc}
	...

08006fa0 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006fa0:	b510      	push	{r4, lr}
 8006fa2:	4b03      	ldr	r3, [pc, #12]	; (8006fb0 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8006fa4:	6003      	str	r3, [r0, #0]
 8006fa6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006fa8:	f00c fd68 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006fac:	4620      	mov	r0, r4
 8006fae:	bd10      	pop	{r4, pc}
 8006fb0:	0802d898 	.word	0x0802d898

08006fb4 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006fb4:	b507      	push	{r0, r1, r2, lr}
 8006fb6:	4b07      	ldr	r3, [pc, #28]	; (8006fd4 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8006fb8:	6003      	str	r3, [r0, #0]
 8006fba:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006fbc:	f00c fd5e 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006fc0:	9801      	ldr	r0, [sp, #4]
 8006fc2:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8006fc6:	f022 fad2 	bl	802956e <_ZdlPvj>
 8006fca:	9801      	ldr	r0, [sp, #4]
 8006fcc:	b003      	add	sp, #12
 8006fce:	f85d fb04 	ldr.w	pc, [sp], #4
 8006fd2:	bf00      	nop
 8006fd4:	0802d898 	.word	0x0802d898

08006fd8 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8006fd8:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8006fda:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8006fde:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 8006fe2:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8006fe4:	2a0a      	cmp	r2, #10
    frameCountInteraction2Interval++;
 8006fe6:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8006fea:	d105      	bne.n	8006ff8 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8006fec:	6803      	ldr	r3, [r0, #0]
 8006fee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006ff0:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8006ff2:	2300      	movs	r3, #0
 8006ff4:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 8006ff8:	bd10      	pop	{r4, pc}

08006ffa <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8006ffa:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 8006ffe:	4288      	cmp	r0, r1
{
 8007000:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007002:	d105      	bne.n	8007010 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007004:	f00e fa3c 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
}
 8007008:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 800700c:	f7fc bd64 	b.w	8003ad8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007010:	bd08      	pop	{r3, pc}
	...

08007014 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8007014:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007018:	ed2d 8b0a 	vpush	{d8-d12}
 800701c:	4604      	mov	r4, r0
 800701e:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8007020:	46a1      	mov	r9, r4
 8007022:	2500      	movs	r5, #0
 8007024:	f00f feac 	bl	8016d80 <_ZN8touchgfx6ScreenC1Ev>
 8007028:	4ba9      	ldr	r3, [pc, #676]	; (80072d0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2bc>)
 800702a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800702c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8007030:	2226      	movs	r2, #38	; 0x26
 8007032:	4629      	mov	r1, r5
 8007034:	4648      	mov	r0, r9
 8007036:	f023 fab2 	bl	802a59e <memset>
 800703a:	4648      	mov	r0, r9
 800703c:	f7fb fc36 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 8007040:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8007044:	26ff      	movs	r6, #255	; 0xff
 8007046:	4ba3      	ldr	r3, [pc, #652]	; (80072d4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 8007048:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800704a:	2226      	movs	r2, #38	; 0x26
 800704c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007050:	4629      	mov	r1, r5
 8007052:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007056:	4640      	mov	r0, r8
 8007058:	66a5      	str	r5, [r4, #104]	; 0x68
 800705a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800705e:	f023 fa9e 	bl	802a59e <memset>
 8007062:	4640      	mov	r0, r8
 8007064:	f7fb fc22 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 8007068:	4b9b      	ldr	r3, [pc, #620]	; (80072d8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 800706a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800706c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007070:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007074:	a90a      	add	r1, sp, #40	; 0x28
 8007076:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 800707a:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 800707c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007080:	f00b fcf5 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007084:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8007088:	4658      	mov	r0, fp
 800708a:	f7fb fc21 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 800708e:	4638      	mov	r0, r7
 8007090:	f00b f9b0 	bl	80123f4 <_ZN8touchgfx5GaugeC1Ev>
 8007094:	f504 7320 	add.w	r3, r4, #640	; 0x280
        : TextArea()
 8007098:	4618      	mov	r0, r3
 800709a:	ee09 3a10 	vmov	s18, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800709e:	4e8f      	ldr	r6, [pc, #572]	; (80072dc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
        : TextArea()
 80070a0:	f7fb fc16 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 80070a4:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextAreaWithWildcardBase(), wc1(0)
 80070a8:	f8c4 6280 	str.w	r6, [r4, #640]	; 0x280
        : TextArea()
 80070ac:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80070ae:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 80070b2:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 80070b6:	f7fb fc0b 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 80070ba:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 80070be:	f8c4 62cc 	str.w	r6, [r4, #716]	; 0x2cc
        : TextArea()
 80070c2:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80070c4:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 80070c8:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 80070cc:	f7fb fc00 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 80070d0:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 80070d4:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 80070d8:	4618      	mov	r0, r3
 80070da:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 80070de:	ee0a 3a90 	vmov	s21, r3
 80070e2:	f7fb fbf5 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 80070e6:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 80070ea:	4618      	mov	r0, r3
 80070ec:	ee0b 3a10 	vmov	s22, r3
 80070f0:	f7fb fbee 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 80070f4:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 80070f8:	4618      	mov	r0, r3
 80070fa:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 80070fe:	ee0b 3a90 	vmov	s23, r3
 8007102:	f7fb fbe5 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8007106:	4650      	mov	r0, sl
 8007108:	f00a fb7a 	bl	8011800 <_ZN8touchgfx4LineC1Ev>
 800710c:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007110:	4618      	mov	r0, r3
 8007112:	9303      	str	r3, [sp, #12]
 8007114:	f7f9 ff96 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007118:	4b71      	ldr	r3, [pc, #452]	; (80072e0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 800711a:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 800711e:	3324      	adds	r3, #36	; 0x24
 8007120:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8007124:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8007128:	4618      	mov	r0, r3
 800712a:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 800712e:	ee08 3a10 	vmov	s16, r3
 8007132:	f7fb fbcd 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8007136:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 800713a:	4618      	mov	r0, r3
 800713c:	ee08 3a90 	vmov	s17, r3
 8007140:	f7fb fbc6 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8007144:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8007148:	4618      	mov	r0, r3
 800714a:	ee0c 3a10 	vmov	s24, r3
 800714e:	f00b fdcf 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007152:	4a64      	ldr	r2, [pc, #400]	; (80072e4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 8007154:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007158:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 800715c:	4a62      	ldr	r2, [pc, #392]	; (80072e8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 800715e:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 8007162:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007166:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800716a:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 800716e:	f00c fc7b 	bl	8013a68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007172:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007176:	462a      	mov	r2, r5
 8007178:	4648      	mov	r0, r9
 800717a:	9300      	str	r3, [sp, #0]
 800717c:	4629      	mov	r1, r5
 800717e:	23f0      	movs	r3, #240	; 0xf0
 8007180:	f7fb fb80 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007184:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007186:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800718a:	66a3      	str	r3, [r4, #104]	; 0x68
 800718c:	4649      	mov	r1, r9
 800718e:	4630      	mov	r0, r6
 8007190:	f008 fede 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007194:	462a      	mov	r2, r5
 8007196:	4640      	mov	r0, r8
 8007198:	4629      	mov	r1, r5
 800719a:	f7fb fb66 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 800719e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80071a0:	4640      	mov	r0, r8
 80071a2:	a90a      	add	r1, sp, #40	; 0x28
 80071a4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80071a8:	f00b fc61 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80071ac:	4641      	mov	r1, r8
 80071ae:	4630      	mov	r0, r6
 80071b0:	f008 fece 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 80071b4:	223c      	movs	r2, #60	; 0x3c
 80071b6:	211f      	movs	r1, #31
 80071b8:	4658      	mov	r0, fp
 80071ba:	f7fb fb56 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 80071be:	f10d 0810 	add.w	r8, sp, #16
        color = newColor;
 80071c2:	f04f 33ff 	mov.w	r3, #4294967295
 80071c6:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80071ca:	4659      	mov	r1, fp
 80071cc:	4640      	mov	r0, r8
        linespace = space;
 80071ce:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80071d2:	f00a fdd7 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80071d6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80071da:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80071de:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80071e2:	4b42      	ldr	r3, [pc, #264]	; (80072ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 80071e4:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 80071e6:	a90a      	add	r1, sp, #40	; 0x28
 80071e8:	2327      	movs	r3, #39	; 0x27
 80071ea:	4658      	mov	r0, fp
 80071ec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80071f0:	f00b f862 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071f4:	4659      	mov	r1, fp
 80071f6:	4630      	mov	r0, r6
 80071f8:	f008 feaa 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80071fc:	f04f 0304 	mov.w	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8007200:	4638      	mov	r0, r7
 8007202:	a90a      	add	r1, sp, #40	; 0x28
 8007204:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007208:	f008 fe34 	bl	800fe74 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 800720c:	236a      	movs	r3, #106	; 0x6a
 800720e:	4638      	mov	r0, r7
 8007210:	9300      	str	r3, [sp, #0]
 8007212:	225e      	movs	r2, #94	; 0x5e
 8007214:	23b8      	movs	r3, #184	; 0xb8
 8007216:	211c      	movs	r1, #28
 8007218:	f7fb fb34 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 800721c:	225c      	movs	r2, #92	; 0x5c
 800721e:	4611      	mov	r1, r2
 8007220:	4638      	mov	r0, r7
 8007222:	f00b f992 	bl	801254a <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 8007226:	4638      	mov	r0, r7
 8007228:	225a      	movs	r2, #90	; 0x5a
 800722a:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800722e:	f00b fa11 	bl	8012654 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 8007232:	462b      	mov	r3, r5
 8007234:	225a      	movs	r2, #90	; 0x5a
 8007236:	4638      	mov	r0, r7
 8007238:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800723c:	9500      	str	r5, [sp, #0]
 800723e:	f008 fcc6 	bl	800fbce <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 8007242:	4638      	mov	r0, r7
 8007244:	4629      	mov	r1, r5
 8007246:	f00b f9af 	bl	80125a8 <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 800724a:	2335      	movs	r3, #53	; 0x35
 800724c:	2208      	movs	r2, #8
 800724e:	4638      	mov	r0, r7
 8007250:	2105      	movs	r1, #5
 8007252:	f00b f965 	bl	8012520 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007256:	4638      	mov	r0, r7
 8007258:	2101      	movs	r1, #1
 800725a:	f00b f903 	bl	8012464 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800725e:	4638      	mov	r0, r7
 8007260:	2101      	movs	r1, #1
 8007262:	f00b f902 	bl	801246a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007266:	4639      	mov	r1, r7
 8007268:	4630      	mov	r0, r6
 800726a:	f008 fe71 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 800726e:	230f      	movs	r3, #15
 8007270:	22e6      	movs	r2, #230	; 0xe6
 8007272:	ee19 0a10 	vmov	r0, s18
 8007276:	9300      	str	r3, [sp, #0]
 8007278:	4629      	mov	r1, r5
 800727a:	23f0      	movs	r3, #240	; 0xf0
 800727c:	f7fb fb02 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8007280:	f04f 33ff 	mov.w	r3, #4294967295
 8007284:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 8007288:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        linespace = space;
 800728c:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 8007290:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007294:	4f16      	ldr	r7, [pc, #88]	; (80072f0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8007296:	ee19 1a10 	vmov	r1, s18
 800729a:	4640      	mov	r0, r8
 800729c:	4798      	blx	r3
 800729e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80072a2:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 80072a6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80072aa:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 80072ac:	f504 69b3 	add.w	r9, r4, #1432	; 0x598
 80072b0:	b92b      	cbnz	r3, 80072be <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2aa>
 80072b2:	4b10      	ldr	r3, [pc, #64]	; (80072f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 80072b4:	4a10      	ldr	r2, [pc, #64]	; (80072f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 80072b6:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80072b8:	4810      	ldr	r0, [pc, #64]	; (80072fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 80072ba:	f022 ff6b 	bl	802a194 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80072be:	f8df b044 	ldr.w	fp, [pc, #68]	; 8007304 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80072c2:	f8bb 3000 	ldrh.w	r3, [fp]
 80072c6:	b9fb      	cbnz	r3, 8007308 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>
 80072c8:	4b0d      	ldr	r3, [pc, #52]	; (8007300 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 80072ca:	4a0b      	ldr	r2, [pc, #44]	; (80072f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 80072cc:	2161      	movs	r1, #97	; 0x61
 80072ce:	e7f3      	b.n	80072b8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
 80072d0:	0802d898 	.word	0x0802d898
 80072d4:	0802e690 	.word	0x0802e690
 80072d8:	0802e858 	.word	0x0802e858
 80072dc:	0802bd48 	.word	0x0802bd48
 80072e0:	0802e3c4 	.word	0x0802e3c4
 80072e4:	0802d880 	.word	0x0802d880
 80072e8:	08006ffb 	.word	0x08006ffb
 80072ec:	0802bd38 	.word	0x0802bd38
 80072f0:	20012f84 	.word	0x20012f84
 80072f4:	0802bb88 	.word	0x0802bb88
 80072f8:	0802bc8a 	.word	0x0802bc8a
 80072fc:	0802bc05 	.word	0x0802bc05
 8007300:	0802bc4c 	.word	0x0802bc4c
 8007304:	20012f88 	.word	0x20012f88
        return texts->getText(typedTextId);
 8007308:	4bdf      	ldr	r3, [pc, #892]	; (8007688 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 800730a:	4629      	mov	r1, r5
 800730c:	6818      	ldr	r0, [r3, #0]
 800730e:	f000 ffc1 	bl	8008294 <_ZNK8touchgfx5Texts7getTextEt>
 8007312:	4ade      	ldr	r2, [pc, #888]	; (800768c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 8007314:	4603      	mov	r3, r0
 8007316:	210a      	movs	r1, #10
 8007318:	4648      	mov	r0, r9
 800731a:	f011 fa21 	bl	8018760 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800731e:	4bdc      	ldr	r3, [pc, #880]	; (8007690 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
        wc1 = value;
 8007320:	f8c4 92c8 	str.w	r9, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 8007324:	ee19 0a10 	vmov	r0, s18
 8007328:	930a      	str	r3, [sp, #40]	; 0x28
 800732a:	a90a      	add	r1, sp, #40	; 0x28
 800732c:	2303      	movs	r3, #3
 800732e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007332:	f00a ffc1 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007336:	ee19 1a10 	vmov	r1, s18
 800733a:	4630      	mov	r0, r6
 800733c:	f008 fe08 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 8007340:	210f      	movs	r1, #15
 8007342:	22d7      	movs	r2, #215	; 0xd7
 8007344:	ee19 0a90 	vmov	r0, s19
 8007348:	9100      	str	r1, [sp, #0]
 800734a:	23f0      	movs	r3, #240	; 0xf0
 800734c:	4629      	mov	r1, r5
 800734e:	f7fb fa99 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007352:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        linespace = space;
 8007356:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        color = newColor;
 800735a:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 800735e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007362:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8007366:	4640      	mov	r0, r8
 8007368:	ee19 1a90 	vmov	r1, s19
 800736c:	4798      	blx	r3
 800736e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007372:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8007376:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800737a:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 800737c:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 8007380:	2b00      	cmp	r3, #0
 8007382:	d096      	beq.n	80072b2 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29e>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007384:	f8bb 3000 	ldrh.w	r3, [fp]
 8007388:	2b01      	cmp	r3, #1
 800738a:	d99d      	bls.n	80072c8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>
        return texts->getText(typedTextId);
 800738c:	4abe      	ldr	r2, [pc, #760]	; (8007688 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 800738e:	2101      	movs	r1, #1
 8007390:	6810      	ldr	r0, [r2, #0]
 8007392:	f000 ff7f 	bl	8008294 <_ZNK8touchgfx5Texts7getTextEt>
 8007396:	4abd      	ldr	r2, [pc, #756]	; (800768c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 8007398:	4603      	mov	r3, r0
 800739a:	210a      	movs	r1, #10
 800739c:	4648      	mov	r0, r9
 800739e:	f011 f9df 	bl	8018760 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80073a2:	f04f 0104 	mov.w	r1, #4
 80073a6:	4bba      	ldr	r3, [pc, #744]	; (8007690 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
 80073a8:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 80073ac:	ee19 0a90 	vmov	r0, s19
 80073b0:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80073b4:	a90a      	add	r1, sp, #40	; 0x28
 80073b6:	930a      	str	r3, [sp, #40]	; 0x28
 80073b8:	f00a ff7e 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80073bc:	ee19 1a90 	vmov	r1, s19
 80073c0:	4630      	mov	r0, r6
 80073c2:	f008 fdc5 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 80073c6:	210f      	movs	r1, #15
 80073c8:	22c8      	movs	r2, #200	; 0xc8
 80073ca:	ee1a 0a10 	vmov	r0, s20
 80073ce:	9100      	str	r1, [sp, #0]
 80073d0:	23f0      	movs	r3, #240	; 0xf0
 80073d2:	4629      	mov	r1, r5
 80073d4:	f7fb fa56 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 80073d8:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        linespace = space;
 80073dc:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        color = newColor;
 80073e0:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 80073e4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80073e8:	f8c4 1348 	str.w	r1, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 80073ec:	4640      	mov	r0, r8
 80073ee:	ee1a 1a10 	vmov	r1, s20
 80073f2:	4798      	blx	r3
 80073f4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80073f8:	f504 7355 	add.w	r3, r4, #852	; 0x354
 80073fc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007400:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 8007402:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 8007406:	2b00      	cmp	r3, #0
 8007408:	f43f af53 	beq.w	80072b2 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29e>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800740c:	f8bb 3000 	ldrh.w	r3, [fp]
 8007410:	2b02      	cmp	r3, #2
 8007412:	f67f af59 	bls.w	80072c8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>
        return texts->getText(typedTextId);
 8007416:	4a9c      	ldr	r2, [pc, #624]	; (8007688 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
        : typedTextId(id)
 8007418:	4f9d      	ldr	r7, [pc, #628]	; (8007690 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
        return texts->getText(typedTextId);
 800741a:	6810      	ldr	r0, [r2, #0]
 800741c:	2102      	movs	r1, #2
 800741e:	f000 ff39 	bl	8008294 <_ZNK8touchgfx5Texts7getTextEt>
 8007422:	4a9a      	ldr	r2, [pc, #616]	; (800768c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 8007424:	4603      	mov	r3, r0
 8007426:	210a      	movs	r1, #10
 8007428:	4648      	mov	r0, r9
 800742a:	f011 f999 	bl	8018760 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800742e:	2305      	movs	r3, #5
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 8007430:	ee1a 0a10 	vmov	r0, s20
 8007434:	a90a      	add	r1, sp, #40	; 0x28
 8007436:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 800743a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800743e:	970a      	str	r7, [sp, #40]	; 0x28
 8007440:	f00a ff3a 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007444:	ee1a 1a10 	vmov	r1, s20
 8007448:	4630      	mov	r0, r6
 800744a:	f008 fd81 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 800744e:	224c      	movs	r2, #76	; 0x4c
 8007450:	ee1a 0a90 	vmov	r0, s21
 8007454:	2171      	movs	r1, #113	; 0x71
 8007456:	f7fb fa08 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800745a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800745e:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 8007462:	f8c4 3394 	str.w	r3, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 8007466:	4640      	mov	r0, r8
        linespace = space;
 8007468:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 800746c:	f00a fc8a 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007470:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007474:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8007478:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800747c:	2306      	movs	r3, #6
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 800747e:	ee1a 0a90 	vmov	r0, s21
 8007482:	a90a      	add	r1, sp, #40	; 0x28
 8007484:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007488:	970a      	str	r7, [sp, #40]	; 0x28
 800748a:	f00a ff15 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800748e:	ee1a 1a90 	vmov	r1, s21
 8007492:	4630      	mov	r0, r6
 8007494:	f008 fd5c 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 8007498:	22b9      	movs	r2, #185	; 0xb9
 800749a:	ee1b 0a10 	vmov	r0, s22
 800749e:	4629      	mov	r1, r5
 80074a0:	f7fb f9e3 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80074a4:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80074a8:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 80074ac:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
        boundingArea = calculateBoundingArea();
 80074b0:	4640      	mov	r0, r8
        linespace = space;
 80074b2:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 80074b6:	f00a fc65 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80074ba:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80074be:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 80074c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80074c6:	2307      	movs	r3, #7
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 80074c8:	ee1b 0a10 	vmov	r0, s22
 80074cc:	a90a      	add	r1, sp, #40	; 0x28
 80074ce:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80074d2:	970a      	str	r7, [sp, #40]	; 0x28
 80074d4:	f00a fef0 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80074d8:	ee1b 1a10 	vmov	r1, s22
 80074dc:	4630      	mov	r0, r6
 80074de:	f008 fd37 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 80074e2:	22b9      	movs	r2, #185	; 0xb9
 80074e4:	ee1b 0a90 	vmov	r0, s23
 80074e8:	21d9      	movs	r1, #217	; 0xd9
 80074ea:	f7fb f9be 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80074ee:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80074f2:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 80074f6:	f8c4 3424 	str.w	r3, [r4, #1060]	; 0x424
        boundingArea = calculateBoundingArea();
 80074fa:	4640      	mov	r0, r8
        linespace = space;
 80074fc:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 8007500:	f00a fc40 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007504:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007508:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 800750c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007510:	2308      	movs	r3, #8
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8007512:	ee1b 0a90 	vmov	r0, s23
 8007516:	a90a      	add	r1, sp, #40	; 0x28
 8007518:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800751c:	970a      	str	r7, [sp, #40]	; 0x28
 800751e:	f00a fecb 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007522:	ee1b 1a90 	vmov	r1, s23
 8007526:	4630      	mov	r0, r6
 8007528:	f008 fd12 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800752c:	230a      	movs	r3, #10
 800752e:	9300      	str	r3, [sp, #0]
 8007530:	2232      	movs	r2, #50	; 0x32
 8007532:	23f0      	movs	r3, #240	; 0xf0
 8007534:	4629      	mov	r1, r5
 8007536:	4650      	mov	r0, sl
 8007538:	f7fb f9a4 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 800753c:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007540:	22a0      	movs	r2, #160	; 0xa0
 8007542:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007546:	f8a4 34bc 	strh.w	r3, [r4, #1212]	; 0x4bc
 800754a:	9b03      	ldr	r3, [sp, #12]
 800754c:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
 8007550:	4611      	mov	r1, r2
 8007552:	4650      	mov	r0, sl
 8007554:	f00a fa6a 	bl	8011a2c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007558:	22a0      	movs	r2, #160	; 0xa0
 800755a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800755e:	4650      	mov	r0, sl
 8007560:	f00a fa6f 	bl	8011a42 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007564:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007568:	2b20      	cmp	r3, #32
 800756a:	d005      	beq.n	8007578 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x564>
        lineWidthQ5 = widthQ5;
 800756c:	2320      	movs	r3, #32
 800756e:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8007572:	4650      	mov	r0, sl
 8007574:	f00a f964 	bl	8011840 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007578:	4650      	mov	r0, sl
 800757a:	2101      	movs	r1, #1
 800757c:	f00a fa6c 	bl	8011a58 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007580:	4651      	mov	r1, sl
 8007582:	4630      	mov	r0, r6
 8007584:	f008 fce4 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007588:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 800758c:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 800758e:	ee18 0a10 	vmov	r0, s16
 8007592:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007594:	f04f 0900 	mov.w	r9, #0
 8007598:	2145      	movs	r1, #69	; 0x45
 800759a:	f7fb f966 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800759e:	ee18 1a10 	vmov	r1, s16
 80075a2:	4628      	mov	r0, r5
        color = newColor;
 80075a4:	f8c4 74f0 	str.w	r7, [r4, #1264]	; 0x4f0
        linespace = space;
 80075a8:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 80075ac:	f00a fbea 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80075b0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80075b4:	ee18 3a10 	vmov	r3, s16
 80075b8:	333c      	adds	r3, #60	; 0x3c
 80075ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80075be:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8007690 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>
 80075c2:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80075c6:	2334      	movs	r3, #52	; 0x34
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 80075c8:	ee18 0a10 	vmov	r0, s16
 80075cc:	a90a      	add	r1, sp, #40	; 0x28
 80075ce:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80075d2:	f00a fe71 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80075d6:	ee18 1a10 	vmov	r1, s16
 80075da:	4630      	mov	r0, r6
 80075dc:	f008 fcb8 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80075e0:	ee18 0a90 	vmov	r0, s17
 80075e4:	220c      	movs	r2, #12
 80075e6:	2136      	movs	r1, #54	; 0x36
 80075e8:	f7fb f93f 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 80075ec:	ee18 1a90 	vmov	r1, s17
 80075f0:	4628      	mov	r0, r5
        color = newColor;
 80075f2:	f8c4 7538 	str.w	r7, [r4, #1336]	; 0x538
        linespace = space;
 80075f6:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 80075fa:	f00a fbc3 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80075fe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007602:	ee18 3a90 	vmov	r3, s17
 8007606:	333c      	adds	r3, #60	; 0x3c
 8007608:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800760c:	2333      	movs	r3, #51	; 0x33
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 800760e:	ee18 0a90 	vmov	r0, s17
 8007612:	a90a      	add	r1, sp, #40	; 0x28
 8007614:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007618:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800761c:	f00a fe4c 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007620:	ee18 1a90 	vmov	r1, s17
 8007624:	4630      	mov	r0, r6
 8007626:	f008 fc93 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 800762a:	ee1c 0a10 	vmov	r0, s24
 800762e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007632:	2121      	movs	r1, #33	; 0x21
 8007634:	f7fb f919 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8007638:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800763a:	aa0a      	add	r2, sp, #40	; 0x28
 800763c:	a909      	add	r1, sp, #36	; 0x24
 800763e:	ee1c 0a10 	vmov	r0, s24
 8007642:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007646:	2302      	movs	r3, #2
 8007648:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800764c:	f00b f819 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007650:	2332      	movs	r3, #50	; 0x32
        updateTextPosition();
 8007652:	ee1c 0a10 	vmov	r0, s24
 8007656:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 800765a:	f7fb f95b 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800765e:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 8007662:	3304      	adds	r3, #4
 8007664:	4630      	mov	r0, r6
 8007666:	ee1c 1a10 	vmov	r1, s24
        color = col;
 800766a:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
        colorPressed = col;
 800766e:	f8c4 7590 	str.w	r7, [r4, #1424]	; 0x590
 8007672:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8007676:	f008 fc6b 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800767a:	4620      	mov	r0, r4
 800767c:	b00d      	add	sp, #52	; 0x34
 800767e:	ecbd 8b0a 	vpop	{d8-d12}
 8007682:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007686:	bf00      	nop
 8007688:	20012f90 	.word	0x20012f90
 800768c:	0802bcc2 	.word	0x0802bcc2
 8007690:	0802bd38 	.word	0x0802bd38

08007694 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007694:	4770      	bx	lr

08007696 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007696:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007698:	68c2      	ldr	r2, [r0, #12]
 800769a:	6844      	ldr	r4, [r0, #4]
 800769c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800769e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80076a0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80076a4:	07d2      	lsls	r2, r2, #31
 80076a6:	bf48      	it	mi
 80076a8:	5962      	ldrmi	r2, [r4, r5]
 80076aa:	689b      	ldr	r3, [r3, #8]
    }
 80076ac:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80076ae:	bf48      	it	mi
 80076b0:	58d3      	ldrmi	r3, [r2, r3]
 80076b2:	4718      	bx	r3

080076b4 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80076b4:	6843      	ldr	r3, [r0, #4]
 80076b6:	b12b      	cbz	r3, 80076c4 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80076b8:	6883      	ldr	r3, [r0, #8]
 80076ba:	b92b      	cbnz	r3, 80076c8 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80076bc:	68c0      	ldr	r0, [r0, #12]
 80076be:	f000 0001 	and.w	r0, r0, #1
 80076c2:	4770      	bx	lr
 80076c4:	4618      	mov	r0, r3
 80076c6:	4770      	bx	lr
 80076c8:	2001      	movs	r0, #1
    }
 80076ca:	4770      	bx	lr

080076cc <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80076cc:	b510      	push	{r4, lr}
 80076ce:	2110      	movs	r1, #16
 80076d0:	4604      	mov	r4, r0
 80076d2:	f021 ff4c 	bl	802956e <_ZdlPvj>
 80076d6:	4620      	mov	r0, r4
 80076d8:	bd10      	pop	{r4, pc}

080076da <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 80076da:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80076de:	f000 bf21 	b.w	8008524 <_ZN17Gauge_with_Values10initializeEv>

080076e2 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80076e2:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 80076e6:	4288      	cmp	r0, r1
{
 80076e8:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80076ea:	d105      	bne.n	80076f8 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80076ec:	f00d fec8 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 80076f0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80076f4:	f7fc b9f0 	b.w	8003ad8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 80076f8:	bd08      	pop	{r3, pc}
	...

080076fc <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80076fc:	b510      	push	{r4, lr}
 80076fe:	4b07      	ldr	r3, [pc, #28]	; (800771c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 8007700:	6003      	str	r3, [r0, #0]
 8007702:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007704:	f00c f9ba 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8007708:	4b05      	ldr	r3, [pc, #20]	; (8007720 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 800770a:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800770e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8007712:	f7fd fc77 	bl	8005004 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8007716:	4620      	mov	r0, r4
 8007718:	bd10      	pop	{r4, pc}
 800771a:	bf00      	nop
 800771c:	0802d8e8 	.word	0x0802d8e8
 8007720:	0802dd0c 	.word	0x0802dd0c

08007724 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007724:	b510      	push	{r4, lr}
 8007726:	4604      	mov	r4, r0
}
 8007728:	f7ff ffe8 	bl	80076fc <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 800772c:	4620      	mov	r0, r4
 800772e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8007732:	f021 ff1c 	bl	802956e <_ZdlPvj>
 8007736:	4620      	mov	r0, r4
 8007738:	bd10      	pop	{r4, pc}
	...

0800773c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 800773c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007740:	ed2d 8b04 	vpush	{d8-d9}
 8007744:	4604      	mov	r4, r0
 8007746:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8007748:	46a3      	mov	fp, r4
 800774a:	2500      	movs	r5, #0
 800774c:	f00f fb18 	bl	8016d80 <_ZN8touchgfx6ScreenC1Ev>
 8007750:	4bae      	ldr	r3, [pc, #696]	; (8007a0c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 8007752:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007754:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007758:	2226      	movs	r2, #38	; 0x26
 800775a:	4629      	mov	r1, r5
 800775c:	4658      	mov	r0, fp
 800775e:	f022 ff1e 	bl	802a59e <memset>
 8007762:	4658      	mov	r0, fp
 8007764:	f7fb f8a2 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 8007768:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800776c:	26ff      	movs	r6, #255	; 0xff
 800776e:	4ba8      	ldr	r3, [pc, #672]	; (8007a10 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 8007770:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007772:	2226      	movs	r2, #38	; 0x26
 8007774:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007778:	4629      	mov	r1, r5
 800777a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800777e:	66a5      	str	r5, [r4, #104]	; 0x68
 8007780:	4650      	mov	r0, sl
 8007782:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007786:	f022 ff0a 	bl	802a59e <memset>
 800778a:	4650      	mov	r0, sl
 800778c:	f7fb f88e 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 8007790:	4ba0      	ldr	r3, [pc, #640]	; (8007a14 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 8007792:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007794:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007798:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800779c:	a90a      	add	r1, sp, #40	; 0x28
 800779e:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80077a2:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80077a6:	4650      	mov	r0, sl
 80077a8:	f00b f961 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80077ac:	4638      	mov	r0, r7
 80077ae:	f00a f827 	bl	8011800 <_ZN8touchgfx4LineC1Ev>
 80077b2:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80077b6:	4618      	mov	r0, r3
 80077b8:	9303      	str	r3, [sp, #12]
 80077ba:	f7f9 fc43 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80077be:	4b96      	ldr	r3, [pc, #600]	; (8007a18 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 80077c0:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80077c4:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 80077c8:	3324      	adds	r3, #36	; 0x24
 80077ca:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80077ce:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 80077d2:	4648      	mov	r0, r9
 80077d4:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 80077d8:	f7fb f87a 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 80077dc:	4640      	mov	r0, r8
 80077de:	f7fb f877 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 80077e2:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80077e6:	4618      	mov	r0, r3
 80077e8:	ee08 3a10 	vmov	s16, r3
 80077ec:	f7fb f870 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 80077f0:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 80077f4:	4618      	mov	r0, r3
 80077f6:	ee08 3a90 	vmov	s17, r3
 80077fa:	f00b fa79 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80077fe:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8007802:	4618      	mov	r0, r3
 8007804:	ee09 3a10 	vmov	s18, r3
 8007808:	f000 fe82 	bl	8008510 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800780c:	4a83      	ldr	r2, [pc, #524]	; (8007a1c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 800780e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007812:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8007816:	4a82      	ldr	r2, [pc, #520]	; (8007a20 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007818:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800781c:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8007820:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8007824:	f00c f920 	bl	8013a68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007828:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800782c:	462a      	mov	r2, r5
 800782e:	9300      	str	r3, [sp, #0]
 8007830:	4629      	mov	r1, r5
 8007832:	23f0      	movs	r3, #240	; 0xf0
 8007834:	4658      	mov	r0, fp
 8007836:	f7fb f825 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 800783a:	1d26      	adds	r6, r4, #4
        color = newColor;
 800783c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007840:	66a3      	str	r3, [r4, #104]	; 0x68
 8007842:	4659      	mov	r1, fp
 8007844:	4630      	mov	r0, r6
 8007846:	f008 fb83 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800784a:	462a      	mov	r2, r5
 800784c:	4629      	mov	r1, r5
 800784e:	4650      	mov	r0, sl
 8007850:	f7fb f80b 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8007854:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007856:	a90a      	add	r1, sp, #40	; 0x28
 8007858:	4650      	mov	r0, sl
 800785a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800785e:	f00b f906 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007862:	4651      	mov	r1, sl
 8007864:	4630      	mov	r0, r6
 8007866:	f008 fb73 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800786a:	230a      	movs	r3, #10
 800786c:	9300      	str	r3, [sp, #0]
 800786e:	2232      	movs	r2, #50	; 0x32
 8007870:	23f0      	movs	r3, #240	; 0xf0
 8007872:	4629      	mov	r1, r5
 8007874:	4638      	mov	r0, r7
 8007876:	f7fb f805 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 800787a:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800787e:	22a0      	movs	r2, #160	; 0xa0
 8007880:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007884:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8007888:	9b03      	ldr	r3, [sp, #12]
 800788a:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800788e:	4611      	mov	r1, r2
 8007890:	4638      	mov	r0, r7
 8007892:	f00a f8cb 	bl	8011a2c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007896:	22a0      	movs	r2, #160	; 0xa0
 8007898:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800789c:	4638      	mov	r0, r7
 800789e:	f00a f8d0 	bl	8011a42 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80078a2:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 80078a6:	2b20      	cmp	r3, #32
 80078a8:	d005      	beq.n	80078b6 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 80078aa:	2320      	movs	r3, #32
 80078ac:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 80078b0:	4638      	mov	r0, r7
 80078b2:	f009 ffc5 	bl	8011840 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80078b6:	4638      	mov	r0, r7
 80078b8:	2101      	movs	r1, #1
 80078ba:	f00a f8cd 	bl	8011a58 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80078be:	4639      	mov	r1, r7
 80078c0:	4630      	mov	r0, r6
 80078c2:	ad04      	add	r5, sp, #16
 80078c4:	f008 fb44 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80078c8:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 80078cc:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 80078d0:	2223      	movs	r2, #35	; 0x23
 80078d2:	4648      	mov	r0, r9
 80078d4:	2145      	movs	r1, #69	; 0x45
 80078d6:	f7fa ffc8 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80078da:	4649      	mov	r1, r9
 80078dc:	4628      	mov	r0, r5
        color = newColor;
 80078de:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 80078e2:	f8a4 a150 	strh.w	sl, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 80078e6:	f00a fa4d 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80078ea:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80078ee:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 80078f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80078f6:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8007a24 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 80078fa:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80078fe:	2337      	movs	r3, #55	; 0x37
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8007900:	a90a      	add	r1, sp, #40	; 0x28
 8007902:	4648      	mov	r0, r9
 8007904:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007908:	f00a fcd6 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800790c:	4649      	mov	r1, r9
 800790e:	4630      	mov	r0, r6
 8007910:	f008 fb1e 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8007914:	223c      	movs	r2, #60	; 0x3c
 8007916:	4640      	mov	r0, r8
 8007918:	211f      	movs	r1, #31
 800791a:	f7fa ffa6 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 800791e:	4641      	mov	r1, r8
 8007920:	4628      	mov	r0, r5
        color = newColor;
 8007922:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 8007926:	f8a4 a198 	strh.w	sl, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 800792a:	f00a fa2b 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800792e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007932:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007936:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800793a:	2326      	movs	r3, #38	; 0x26
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 800793c:	a90a      	add	r1, sp, #40	; 0x28
 800793e:	4640      	mov	r0, r8
 8007940:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007944:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007948:	f00a fcb6 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800794c:	4641      	mov	r1, r8
 800794e:	4630      	mov	r0, r6
 8007950:	f008 fafe 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007954:	ee18 0a10 	vmov	r0, s16
 8007958:	220c      	movs	r2, #12
 800795a:	2136      	movs	r1, #54	; 0x36
 800795c:	f7fa ff85 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8007960:	ee18 1a10 	vmov	r1, s16
 8007964:	4628      	mov	r0, r5
        color = newColor;
 8007966:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 800796a:	f8a4 a1e0 	strh.w	sl, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800796e:	f00a fa09 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007972:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007976:	ee18 3a10 	vmov	r3, s16
 800797a:	333c      	adds	r3, #60	; 0x3c
 800797c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007980:	2336      	movs	r3, #54	; 0x36
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8007982:	ee18 0a10 	vmov	r0, s16
 8007986:	a90a      	add	r1, sp, #40	; 0x28
 8007988:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800798c:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007990:	f00a fc92 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007994:	ee18 1a10 	vmov	r1, s16
 8007998:	4630      	mov	r0, r6
 800799a:	f008 fad9 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800799e:	ee18 0a90 	vmov	r0, s17
 80079a2:	f240 1201 	movw	r2, #257	; 0x101
 80079a6:	2121      	movs	r1, #33	; 0x21
 80079a8:	f7fa ff5f 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 80079ac:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80079ae:	aa0a      	add	r2, sp, #40	; 0x28
 80079b0:	a909      	add	r1, sp, #36	; 0x24
 80079b2:	ee18 0a90 	vmov	r0, s17
 80079b6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80079ba:	2302      	movs	r3, #2
 80079bc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80079c0:	f00a fe5f 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80079c4:	2335      	movs	r3, #53	; 0x35
        updateTextPosition();
 80079c6:	ee18 0a90 	vmov	r0, s17
 80079ca:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 80079ce:	f7fa ffa1 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80079d2:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80079d6:	3314      	adds	r3, #20
 80079d8:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 80079dc:	ee18 1a90 	vmov	r1, s17
 80079e0:	4630      	mov	r0, r6
        colorPressed = col;
 80079e2:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 80079e6:	f008 fab3 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 80079ea:	ee19 0a10 	vmov	r0, s18
 80079ee:	224e      	movs	r2, #78	; 0x4e
 80079f0:	4651      	mov	r1, sl
 80079f2:	f7fa ff3a 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 80079f6:	4630      	mov	r0, r6
 80079f8:	ee19 1a10 	vmov	r1, s18
 80079fc:	f008 faa8 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007a00:	4620      	mov	r0, r4
 8007a02:	b00d      	add	sp, #52	; 0x34
 8007a04:	ecbd 8b04 	vpop	{d8-d9}
 8007a08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007a0c:	0802d8e8 	.word	0x0802d8e8
 8007a10:	0802e690 	.word	0x0802e690
 8007a14:	0802e858 	.word	0x0802e858
 8007a18:	0802e3c4 	.word	0x0802e3c4
 8007a1c:	0802d8d0 	.word	0x0802d8d0
 8007a20:	080076e3 	.word	0x080076e3
 8007a24:	0802bd38 	.word	0x0802bd38

08007a28 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8007a28:	4770      	bx	lr

08007a2a <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007a2a:	4770      	bx	lr

08007a2c <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007a2c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007a2e:	68c2      	ldr	r2, [r0, #12]
 8007a30:	6844      	ldr	r4, [r0, #4]
 8007a32:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007a34:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007a36:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007a3a:	07d2      	lsls	r2, r2, #31
 8007a3c:	bf48      	it	mi
 8007a3e:	5962      	ldrmi	r2, [r4, r5]
 8007a40:	689b      	ldr	r3, [r3, #8]
    }
 8007a42:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007a44:	bf48      	it	mi
 8007a46:	58d3      	ldrmi	r3, [r2, r3]
 8007a48:	4718      	bx	r3

08007a4a <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007a4a:	6843      	ldr	r3, [r0, #4]
 8007a4c:	b12b      	cbz	r3, 8007a5a <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007a4e:	6883      	ldr	r3, [r0, #8]
 8007a50:	b92b      	cbnz	r3, 8007a5e <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007a52:	68c0      	ldr	r0, [r0, #12]
 8007a54:	f000 0001 	and.w	r0, r0, #1
 8007a58:	4770      	bx	lr
 8007a5a:	4618      	mov	r0, r3
 8007a5c:	4770      	bx	lr
 8007a5e:	2001      	movs	r0, #1
    }
 8007a60:	4770      	bx	lr

08007a62 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007a62:	b510      	push	{r4, lr}
 8007a64:	2110      	movs	r1, #16
 8007a66:	4604      	mov	r4, r0
 8007a68:	f021 fd81 	bl	802956e <_ZdlPvj>
 8007a6c:	4620      	mov	r0, r4
 8007a6e:	bd10      	pop	{r4, pc}

08007a70 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007a70:	b510      	push	{r4, lr}
 8007a72:	4b03      	ldr	r3, [pc, #12]	; (8007a80 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8007a74:	6003      	str	r3, [r0, #0]
 8007a76:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007a78:	f00c f800 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007a7c:	4620      	mov	r0, r4
 8007a7e:	bd10      	pop	{r4, pc}
 8007a80:	0802d934 	.word	0x0802d934

08007a84 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007a84:	b507      	push	{r0, r1, r2, lr}
 8007a86:	4b07      	ldr	r3, [pc, #28]	; (8007aa4 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8007a88:	6003      	str	r3, [r0, #0]
 8007a8a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007a8c:	f00b fff6 	bl	8013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007a90:	9801      	ldr	r0, [sp, #4]
 8007a92:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8007a96:	f021 fd6a 	bl	802956e <_ZdlPvj>
 8007a9a:	9801      	ldr	r0, [sp, #4]
 8007a9c:	b003      	add	sp, #12
 8007a9e:	f85d fb04 	ldr.w	pc, [sp], #4
 8007aa2:	bf00      	nop
 8007aa4:	0802d934 	.word	0x0802d934

08007aa8 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007aa8:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8007aac:	4288      	cmp	r0, r1
{
 8007aae:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007ab0:	d105      	bne.n	8007abe <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007ab2:	f00d fce5 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8007ab6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8007aba:	f7fb bfdd 	b.w	8003a78 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8007abe:	bd08      	pop	{r3, pc}

08007ac0 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8007ac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007ac4:	ed2d 8b04 	vpush	{d8-d9}
 8007ac8:	4604      	mov	r4, r0
 8007aca:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8007acc:	46a3      	mov	fp, r4
 8007ace:	2500      	movs	r5, #0
 8007ad0:	f00f f956 	bl	8016d80 <_ZN8touchgfx6ScreenC1Ev>
 8007ad4:	4bd1      	ldr	r3, [pc, #836]	; (8007e1c <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 8007ad6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007ad8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007adc:	2226      	movs	r2, #38	; 0x26
 8007ade:	4629      	mov	r1, r5
 8007ae0:	4658      	mov	r0, fp
 8007ae2:	f022 fd5c 	bl	802a59e <memset>
 8007ae6:	4658      	mov	r0, fp
 8007ae8:	f7fa fee0 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 8007aec:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007af0:	26ff      	movs	r6, #255	; 0xff
 8007af2:	4bcb      	ldr	r3, [pc, #812]	; (8007e20 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8007af4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007af6:	2226      	movs	r2, #38	; 0x26
 8007af8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007afc:	4629      	mov	r1, r5
 8007afe:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007b02:	4650      	mov	r0, sl
 8007b04:	66a5      	str	r5, [r4, #104]	; 0x68
 8007b06:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007b0a:	f022 fd48 	bl	802a59e <memset>
 8007b0e:	4650      	mov	r0, sl
 8007b10:	f7fa fecc 	bl	80028ac <_ZN8touchgfx6WidgetC1Ev>
 8007b14:	4bc3      	ldr	r3, [pc, #780]	; (8007e24 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 8007b16:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007b18:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007b1c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007b20:	a90a      	add	r1, sp, #40	; 0x28
 8007b22:	4650      	mov	r0, sl
 8007b24:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007b28:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007b2c:	f00a ff9f 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007b30:	4648      	mov	r0, r9
 8007b32:	f7fa fecd 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8007b36:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8007b3a:	4bbb      	ldr	r3, [pc, #748]	; (8007e28 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 8007b3c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007b40:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007b44:	4638      	mov	r0, r7
 8007b46:	f009 fe5b 	bl	8011800 <_ZN8touchgfx4LineC1Ev>
 8007b4a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007b4e:	4618      	mov	r0, r3
 8007b50:	9303      	str	r3, [sp, #12]
 8007b52:	f7f9 fa77 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007b56:	4bb5      	ldr	r3, [pc, #724]	; (8007e2c <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 8007b58:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007b5c:	3324      	adds	r3, #36	; 0x24
 8007b5e:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8007b62:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 8007b66:	4618      	mov	r0, r3
 8007b68:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8007b6c:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007b70:	ee09 3a10 	vmov	s18, r3
 8007b74:	f00b f8bc 	bl	8012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007b78:	4640      	mov	r0, r8
 8007b7a:	f7fa fea9 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8007b7e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007b82:	4618      	mov	r0, r3
 8007b84:	ee08 3a10 	vmov	s16, r3
 8007b88:	f7fa fea2 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
 8007b8c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007b90:	4618      	mov	r0, r3
 8007b92:	ee08 3a90 	vmov	s17, r3
 8007b96:	f7fa fe9b 	bl	80028d0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007b9a:	4aa5      	ldr	r2, [pc, #660]	; (8007e30 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8007b9c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007ba0:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8007ba4:	4aa3      	ldr	r2, [pc, #652]	; (8007e34 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007ba6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007baa:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8007bae:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8007bb2:	f00b ff59 	bl	8013a68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007bb6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007bba:	462a      	mov	r2, r5
 8007bbc:	4658      	mov	r0, fp
 8007bbe:	9300      	str	r3, [sp, #0]
 8007bc0:	4629      	mov	r1, r5
 8007bc2:	23f0      	movs	r3, #240	; 0xf0
 8007bc4:	f7fa fe5e 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007bc8:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007bca:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007bce:	66a3      	str	r3, [r4, #104]	; 0x68
 8007bd0:	4659      	mov	r1, fp
 8007bd2:	4630      	mov	r0, r6
 8007bd4:	f008 f9bc 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007bd8:	462a      	mov	r2, r5
 8007bda:	4650      	mov	r0, sl
 8007bdc:	4629      	mov	r1, r5
 8007bde:	f7fa fe44 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8007be2:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007be4:	4650      	mov	r0, sl
 8007be6:	a90a      	add	r1, sp, #40	; 0x28
 8007be8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007bec:	f00a ff3f 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007bf0:	4651      	mov	r1, sl
 8007bf2:	4630      	mov	r0, r6
 8007bf4:	f008 f9ac 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007bf8:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007bfc:	2156      	movs	r1, #86	; 0x56
 8007bfe:	4648      	mov	r0, r9
 8007c00:	f7fa fe33 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8007c04:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007c08:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007c0c:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8007c10:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8007c14:	4650      	mov	r0, sl
 8007c16:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007c1a:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007c1e:	4649      	mov	r1, r9
 8007c20:	4798      	blx	r3
 8007c22:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8007c26:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007c2a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007c2e:	4b82      	ldr	r3, [pc, #520]	; (8007e38 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8007c30:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8007c32:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 8007c36:	b92b      	cbnz	r3, 8007c44 <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8007c38:	4b80      	ldr	r3, [pc, #512]	; (8007e3c <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 8007c3a:	4a81      	ldr	r2, [pc, #516]	; (8007e40 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007c3c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007c3e:	4881      	ldr	r0, [pc, #516]	; (8007e44 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8007c40:	f022 faa8 	bl	802a194 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007c44:	4b80      	ldr	r3, [pc, #512]	; (8007e48 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007c46:	881b      	ldrh	r3, [r3, #0]
 8007c48:	2b12      	cmp	r3, #18
 8007c4a:	d803      	bhi.n	8007c54 <_ZN20Project_InfoViewBaseC1Ev+0x194>
 8007c4c:	4b7f      	ldr	r3, [pc, #508]	; (8007e4c <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 8007c4e:	4a7c      	ldr	r2, [pc, #496]	; (8007e40 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007c50:	2161      	movs	r1, #97	; 0x61
 8007c52:	e7f4      	b.n	8007c3e <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 8007c54:	4b7e      	ldr	r3, [pc, #504]	; (8007e50 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 8007c56:	2112      	movs	r1, #18
 8007c58:	6818      	ldr	r0, [r3, #0]
 8007c5a:	f000 fb1b 	bl	8008294 <_ZNK8touchgfx5Texts7getTextEt>
 8007c5e:	4a7d      	ldr	r2, [pc, #500]	; (8007e54 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8007c60:	4603      	mov	r3, r0
 8007c62:	2104      	movs	r1, #4
 8007c64:	4650      	mov	r0, sl
 8007c66:	f010 fd7b 	bl	8018760 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8007c6a:	4648      	mov	r0, r9
        wc1 = value;
 8007c6c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8007c70:	f00a fb02 	bl	8012278 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007c74:	4b78      	ldr	r3, [pc, #480]	; (8007e58 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 8007c76:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8007c78:	a90a      	add	r1, sp, #40	; 0x28
 8007c7a:	2313      	movs	r3, #19
 8007c7c:	4648      	mov	r0, r9
 8007c7e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c82:	f00a fb19 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c86:	4649      	mov	r1, r9
 8007c88:	4630      	mov	r0, r6
 8007c8a:	f008 f961 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007c8e:	230a      	movs	r3, #10
 8007c90:	9300      	str	r3, [sp, #0]
 8007c92:	2232      	movs	r2, #50	; 0x32
 8007c94:	23f0      	movs	r3, #240	; 0xf0
 8007c96:	4629      	mov	r1, r5
 8007c98:	4638      	mov	r0, r7
 8007c9a:	f7fa fdf3 	bl	8002884 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007c9e:	9b03      	ldr	r3, [sp, #12]
 8007ca0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007ca4:	22a0      	movs	r2, #160	; 0xa0
 8007ca6:	4611      	mov	r1, r2
 8007ca8:	4638      	mov	r0, r7
 8007caa:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007cae:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8007cb2:	f009 febb 	bl	8011a2c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007cb6:	22a0      	movs	r2, #160	; 0xa0
 8007cb8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007cbc:	4638      	mov	r0, r7
 8007cbe:	f009 fec0 	bl	8011a42 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007cc2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8007cc6:	2b20      	cmp	r3, #32
 8007cc8:	d005      	beq.n	8007cd6 <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8007cca:	2320      	movs	r3, #32
 8007ccc:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8007cd0:	4638      	mov	r0, r7
 8007cd2:	f009 fdb5 	bl	8011840 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007cd6:	4638      	mov	r0, r7
 8007cd8:	2101      	movs	r1, #1
 8007cda:	f009 febd 	bl	8011a58 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007cde:	4639      	mov	r1, r7
 8007ce0:	4630      	mov	r0, r6
 8007ce2:	f008 f935 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007ce6:	ee19 0a10 	vmov	r0, s18
 8007cea:	22f0      	movs	r2, #240	; 0xf0
 8007cec:	2121      	movs	r1, #33	; 0x21
 8007cee:	f7fa fdbc 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8007cf2:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007cf4:	aa0a      	add	r2, sp, #40	; 0x28
 8007cf6:	a909      	add	r1, sp, #36	; 0x24
 8007cf8:	ee19 0a10 	vmov	r0, s18
 8007cfc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007d00:	2302      	movs	r3, #2
 8007d02:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007d06:	f00a fcbc 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007d0a:	2342      	movs	r3, #66	; 0x42
        updateTextPosition();
 8007d0c:	ee19 0a10 	vmov	r0, s18
 8007d10:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8007d14:	f7fa fdfe 	bl	8002914 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8007d18:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8007d1c:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8007d20:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8007d24:	ee19 1a10 	vmov	r1, s18
 8007d28:	4630      	mov	r0, r6
        colorPressed = col;
 8007d2a:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 8007d2e:	ad04      	add	r5, sp, #16
 8007d30:	f008 f90e 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8007d34:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8007d38:	225b      	movs	r2, #91	; 0x5b
 8007d3a:	4640      	mov	r0, r8
 8007d3c:	2105      	movs	r1, #5
 8007d3e:	f7fa fd94 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007d42:	4641      	mov	r1, r8
 8007d44:	4628      	mov	r0, r5
        color = newColor;
 8007d46:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8007d4a:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007d4e:	f00a f819 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d52:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007d56:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007d5a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007d5e:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8007e58 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 8007d62:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007d66:	2343      	movs	r3, #67	; 0x43
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8007d68:	a90a      	add	r1, sp, #40	; 0x28
 8007d6a:	4640      	mov	r0, r8
 8007d6c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d70:	f00a faa2 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d74:	4641      	mov	r1, r8
 8007d76:	4630      	mov	r0, r6
 8007d78:	f008 f8ea 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8007d7c:	ee18 0a10 	vmov	r0, s16
 8007d80:	2223      	movs	r2, #35	; 0x23
 8007d82:	2145      	movs	r1, #69	; 0x45
 8007d84:	f7fa fd71 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8007d88:	ee18 1a10 	vmov	r1, s16
 8007d8c:	4628      	mov	r0, r5
        color = newColor;
 8007d8e:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8007d92:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007d96:	f009 fff5 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d9a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007d9e:	ee18 3a10 	vmov	r3, s16
 8007da2:	333c      	adds	r3, #60	; 0x3c
 8007da4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007da8:	2345      	movs	r3, #69	; 0x45
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8007daa:	ee18 0a10 	vmov	r0, s16
 8007dae:	a90a      	add	r1, sp, #40	; 0x28
 8007db0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007db4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007db8:	f00a fa7e 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007dbc:	ee18 1a10 	vmov	r1, s16
 8007dc0:	4630      	mov	r0, r6
 8007dc2:	f008 f8c5 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007dc6:	ee18 0a90 	vmov	r0, s17
 8007dca:	220c      	movs	r2, #12
 8007dcc:	2136      	movs	r1, #54	; 0x36
 8007dce:	f7fa fd4c 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8007dd2:	ee18 1a90 	vmov	r1, s17
 8007dd6:	4628      	mov	r0, r5
        color = newColor;
 8007dd8:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8007ddc:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007de0:	f009 ffd0 	bl	8011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007de4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007de8:	ee18 3a90 	vmov	r3, s17
 8007dec:	333c      	adds	r3, #60	; 0x3c
 8007dee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007df2:	2344      	movs	r3, #68	; 0x44
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8007df4:	ee18 0a90 	vmov	r0, s17
 8007df8:	a90a      	add	r1, sp, #40	; 0x28
 8007dfa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007dfe:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007e02:	f00a fa59 	bl	80122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007e06:	4630      	mov	r0, r6
 8007e08:	ee18 1a90 	vmov	r1, s17
 8007e0c:	f008 f8a0 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007e10:	4620      	mov	r0, r4
 8007e12:	b00d      	add	sp, #52	; 0x34
 8007e14:	ecbd 8b04 	vpop	{d8-d9}
 8007e18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007e1c:	0802d934 	.word	0x0802d934
 8007e20:	0802e690 	.word	0x0802e690
 8007e24:	0802e858 	.word	0x0802e858
 8007e28:	0802bd48 	.word	0x0802bd48
 8007e2c:	0802e3c4 	.word	0x0802e3c4
 8007e30:	0802d91c 	.word	0x0802d91c
 8007e34:	08007aa9 	.word	0x08007aa9
 8007e38:	20012f84 	.word	0x20012f84
 8007e3c:	0802bb88 	.word	0x0802bb88
 8007e40:	0802bc8a 	.word	0x0802bc8a
 8007e44:	0802bc05 	.word	0x0802bc05
 8007e48:	20012f88 	.word	0x20012f88
 8007e4c:	0802bc4c 	.word	0x0802bc4c
 8007e50:	20012f90 	.word	0x20012f90
 8007e54:	0802bcc2 	.word	0x0802bcc2
 8007e58:	0802bd38 	.word	0x0802bd38

08007e5c <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8007e5c:	4770      	bx	lr

08007e5e <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8007e5e:	4770      	bx	lr

08007e60 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007e60:	b510      	push	{r4, lr}
}
 8007e62:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007e64:	4604      	mov	r4, r0
}
 8007e66:	f021 fb82 	bl	802956e <_ZdlPvj>
 8007e6a:	4620      	mov	r0, r4
 8007e6c:	bd10      	pop	{r4, pc}
	...

08007e70 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8007e70:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007e74:	4604      	mov	r4, r0
 8007e76:	4626      	mov	r6, r4
 8007e78:	f00e ff82 	bl	8016d80 <_ZN8touchgfx6ScreenC1Ev>
 8007e7c:	2500      	movs	r5, #0
 8007e7e:	4b2e      	ldr	r3, [pc, #184]	; (8007f38 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8007e80:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007e82:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8007e86:	4b2d      	ldr	r3, [pc, #180]	; (8007f3c <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8007e88:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8007e8a:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8007e8e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007e92:	23ff      	movs	r3, #255	; 0xff
 8007e94:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007e98:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8007e9c:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8007ea0:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8007ea4:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8007ea8:	4a25      	ldr	r2, [pc, #148]	; (8007f40 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8007eaa:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8007eae:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8007eb2:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8007eb4:	a901      	add	r1, sp, #4
 8007eb6:	4638      	mov	r0, r7
 8007eb8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8007ebc:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8007ec0:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8007ec4:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8007ec8:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8007ecc:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8007ed0:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8007ed4:	66a5      	str	r5, [r4, #104]	; 0x68
 8007ed6:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007eda:	f00a fdc8 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8007ede:	462a      	mov	r2, r5
 8007ee0:	4629      	mov	r1, r5
 8007ee2:	4630      	mov	r0, r6
 8007ee4:	f7fa fcc1 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8007ee8:	4630      	mov	r0, r6
 8007eea:	21f0      	movs	r1, #240	; 0xf0
 8007eec:	f7f8 fff6 	bl	8000edc <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8007ef0:	4630      	mov	r0, r6
 8007ef2:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8007ef6:	f7f8 fff3 	bl	8000ee0 <_ZN8touchgfx8Drawable9setHeightEs>
 8007efa:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8007efe:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007f02:	66a3      	str	r3, [r4, #104]	; 0x68
 8007f04:	4631      	mov	r1, r6
 8007f06:	4640      	mov	r0, r8
 8007f08:	f008 f822 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8007f0c:	462a      	mov	r2, r5
 8007f0e:	4638      	mov	r0, r7
 8007f10:	f06f 0102 	mvn.w	r1, #2
 8007f14:	f7fa fca9 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8007f18:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8007f1a:	a901      	add	r1, sp, #4
 8007f1c:	4638      	mov	r0, r7
 8007f1e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007f22:	f00a fda4 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007f26:	4640      	mov	r0, r8
 8007f28:	4639      	mov	r1, r7
 8007f2a:	f008 f811 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007f2e:	4620      	mov	r0, r4
 8007f30:	b002      	add	sp, #8
 8007f32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007f36:	bf00      	nop
 8007f38:	0802d968 	.word	0x0802d968
 8007f3c:	0802e690 	.word	0x0802e690
 8007f40:	0802e858 	.word	0x0802e858

08007f44 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007f44:	4770      	bx	lr
	...

08007f48 <_Z23getFont_verdana_10_4bppv>:
{
 8007f48:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007f4a:	4d17      	ldr	r5, [pc, #92]	; (8007fa8 <_Z23getFont_verdana_10_4bppv+0x60>)
 8007f4c:	682c      	ldr	r4, [r5, #0]
 8007f4e:	f3bf 8f5b 	dmb	ish
 8007f52:	f014 0401 	ands.w	r4, r4, #1
{
 8007f56:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007f58:	d122      	bne.n	8007fa0 <_Z23getFont_verdana_10_4bppv+0x58>
 8007f5a:	4628      	mov	r0, r5
 8007f5c:	f021 fb09 	bl	8029572 <__cxa_guard_acquire>
 8007f60:	b1f0      	cbz	r0, 8007fa0 <_Z23getFont_verdana_10_4bppv+0x58>
 8007f62:	233f      	movs	r3, #63	; 0x3f
 8007f64:	9309      	str	r3, [sp, #36]	; 0x24
 8007f66:	4b11      	ldr	r3, [pc, #68]	; (8007fac <_Z23getFont_verdana_10_4bppv+0x64>)
 8007f68:	9308      	str	r3, [sp, #32]
 8007f6a:	4b11      	ldr	r3, [pc, #68]	; (8007fb0 <_Z23getFont_verdana_10_4bppv+0x68>)
 8007f6c:	9307      	str	r3, [sp, #28]
 8007f6e:	2301      	movs	r3, #1
 8007f70:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007f74:	9304      	str	r3, [sp, #16]
 8007f76:	2304      	movs	r3, #4
 8007f78:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007f7c:	230a      	movs	r3, #10
 8007f7e:	490d      	ldr	r1, [pc, #52]	; (8007fb4 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8007f80:	9300      	str	r3, [sp, #0]
 8007f82:	225f      	movs	r2, #95	; 0x5f
 8007f84:	230c      	movs	r3, #12
 8007f86:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007f8a:	480b      	ldr	r0, [pc, #44]	; (8007fb8 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007f8c:	940a      	str	r4, [sp, #40]	; 0x28
 8007f8e:	9401      	str	r4, [sp, #4]
 8007f90:	f7fd f9ea 	bl	8005368 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007f94:	4809      	ldr	r0, [pc, #36]	; (8007fbc <_Z23getFont_verdana_10_4bppv+0x74>)
 8007f96:	f022 f91b 	bl	802a1d0 <atexit>
 8007f9a:	4628      	mov	r0, r5
 8007f9c:	f021 faf5 	bl	802958a <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8007fa0:	4805      	ldr	r0, [pc, #20]	; (8007fb8 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007fa2:	b00f      	add	sp, #60	; 0x3c
 8007fa4:	bd30      	pop	{r4, r5, pc}
 8007fa6:	bf00      	nop
 8007fa8:	20002048 	.word	0x20002048
 8007fac:	08045524 	.word	0x08045524
 8007fb0:	08045684 	.word	0x08045684
 8007fb4:	0804480c 	.word	0x0804480c
 8007fb8:	2000204c 	.word	0x2000204c
 8007fbc:	08007f45 	.word	0x08007f45

08007fc0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007fc0:	4770      	bx	lr
	...

08007fc4 <_Z23getFont_verdana_12_4bppv>:
{
 8007fc4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007fc6:	4d17      	ldr	r5, [pc, #92]	; (8008024 <_Z23getFont_verdana_12_4bppv+0x60>)
 8007fc8:	682c      	ldr	r4, [r5, #0]
 8007fca:	f3bf 8f5b 	dmb	ish
 8007fce:	f014 0401 	ands.w	r4, r4, #1
{
 8007fd2:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007fd4:	d122      	bne.n	800801c <_Z23getFont_verdana_12_4bppv+0x58>
 8007fd6:	4628      	mov	r0, r5
 8007fd8:	f021 facb 	bl	8029572 <__cxa_guard_acquire>
 8007fdc:	b1f0      	cbz	r0, 800801c <_Z23getFont_verdana_12_4bppv+0x58>
 8007fde:	233f      	movs	r3, #63	; 0x3f
 8007fe0:	9309      	str	r3, [sp, #36]	; 0x24
 8007fe2:	4b11      	ldr	r3, [pc, #68]	; (8008028 <_Z23getFont_verdana_12_4bppv+0x64>)
 8007fe4:	9308      	str	r3, [sp, #32]
 8007fe6:	4b11      	ldr	r3, [pc, #68]	; (800802c <_Z23getFont_verdana_12_4bppv+0x68>)
 8007fe8:	9307      	str	r3, [sp, #28]
 8007fea:	2301      	movs	r3, #1
 8007fec:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007ff0:	9304      	str	r3, [sp, #16]
 8007ff2:	2304      	movs	r3, #4
 8007ff4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007ff8:	230c      	movs	r3, #12
 8007ffa:	490d      	ldr	r1, [pc, #52]	; (8008030 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8007ffc:	9300      	str	r3, [sp, #0]
 8007ffe:	2260      	movs	r2, #96	; 0x60
 8008000:	230f      	movs	r3, #15
 8008002:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008006:	480b      	ldr	r0, [pc, #44]	; (8008034 <_Z23getFont_verdana_12_4bppv+0x70>)
 8008008:	940a      	str	r4, [sp, #40]	; 0x28
 800800a:	9401      	str	r4, [sp, #4]
 800800c:	f7fd f9ac 	bl	8005368 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008010:	4809      	ldr	r0, [pc, #36]	; (8008038 <_Z23getFont_verdana_12_4bppv+0x74>)
 8008012:	f022 f8dd 	bl	802a1d0 <atexit>
 8008016:	4628      	mov	r0, r5
 8008018:	f021 fab7 	bl	802958a <__cxa_guard_release>
    return verdana_12_4bpp;
}
 800801c:	4805      	ldr	r0, [pc, #20]	; (8008034 <_Z23getFont_verdana_12_4bppv+0x70>)
 800801e:	b00f      	add	sp, #60	; 0x3c
 8008020:	bd30      	pop	{r4, r5, pc}
 8008022:	bf00      	nop
 8008024:	20002078 	.word	0x20002078
 8008028:	08045558 	.word	0x08045558
 800802c:	08045688 	.word	0x08045688
 8008030:	08044d40 	.word	0x08044d40
 8008034:	2000207c 	.word	0x2000207c
 8008038:	08007fc1 	.word	0x08007fc1

0800803c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800803c:	4770      	bx	lr
	...

08008040 <_Z23getFont_verdana_19_4bppv>:
{
 8008040:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008042:	4d17      	ldr	r5, [pc, #92]	; (80080a0 <_Z23getFont_verdana_19_4bppv+0x60>)
 8008044:	682c      	ldr	r4, [r5, #0]
 8008046:	f3bf 8f5b 	dmb	ish
 800804a:	f014 0401 	ands.w	r4, r4, #1
{
 800804e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008050:	d122      	bne.n	8008098 <_Z23getFont_verdana_19_4bppv+0x58>
 8008052:	4628      	mov	r0, r5
 8008054:	f021 fa8d 	bl	8029572 <__cxa_guard_acquire>
 8008058:	b1f0      	cbz	r0, 8008098 <_Z23getFont_verdana_19_4bppv+0x58>
 800805a:	233f      	movs	r3, #63	; 0x3f
 800805c:	9309      	str	r3, [sp, #36]	; 0x24
 800805e:	4b11      	ldr	r3, [pc, #68]	; (80080a4 <_Z23getFont_verdana_19_4bppv+0x64>)
 8008060:	9308      	str	r3, [sp, #32]
 8008062:	4b11      	ldr	r3, [pc, #68]	; (80080a8 <_Z23getFont_verdana_19_4bppv+0x68>)
 8008064:	9307      	str	r3, [sp, #28]
 8008066:	2301      	movs	r3, #1
 8008068:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800806c:	9304      	str	r3, [sp, #16]
 800806e:	2304      	movs	r3, #4
 8008070:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008074:	2313      	movs	r3, #19
 8008076:	490d      	ldr	r1, [pc, #52]	; (80080ac <_Z23getFont_verdana_19_4bppv+0x6c>)
 8008078:	9300      	str	r3, [sp, #0]
 800807a:	222f      	movs	r2, #47	; 0x2f
 800807c:	2317      	movs	r3, #23
 800807e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008082:	480b      	ldr	r0, [pc, #44]	; (80080b0 <_Z23getFont_verdana_19_4bppv+0x70>)
 8008084:	940a      	str	r4, [sp, #40]	; 0x28
 8008086:	9401      	str	r4, [sp, #4]
 8008088:	f7fd f96e 	bl	8005368 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800808c:	4809      	ldr	r0, [pc, #36]	; (80080b4 <_Z23getFont_verdana_19_4bppv+0x74>)
 800808e:	f022 f89f 	bl	802a1d0 <atexit>
 8008092:	4628      	mov	r0, r5
 8008094:	f021 fa79 	bl	802958a <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8008098:	4805      	ldr	r0, [pc, #20]	; (80080b0 <_Z23getFont_verdana_19_4bppv+0x70>)
 800809a:	b00f      	add	sp, #60	; 0x3c
 800809c:	bd30      	pop	{r4, r5, pc}
 800809e:	bf00      	nop
 80080a0:	200020a8 	.word	0x200020a8
 80080a4:	080455dc 	.word	0x080455dc
 80080a8:	0804568c 	.word	0x0804568c
 80080ac:	08045280 	.word	0x08045280
 80080b0:	200020ac 	.word	0x200020ac
 80080b4:	0800803d 	.word	0x0800803d

080080b8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80080b8:	4770      	bx	lr
	...

080080bc <_Z23getFont_verdana_40_4bppv>:
{
 80080bc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80080be:	4d16      	ldr	r5, [pc, #88]	; (8008118 <_Z23getFont_verdana_40_4bppv+0x5c>)
 80080c0:	682c      	ldr	r4, [r5, #0]
 80080c2:	f3bf 8f5b 	dmb	ish
 80080c6:	f014 0401 	ands.w	r4, r4, #1
{
 80080ca:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80080cc:	d120      	bne.n	8008110 <_Z23getFont_verdana_40_4bppv+0x54>
 80080ce:	4628      	mov	r0, r5
 80080d0:	f021 fa4f 	bl	8029572 <__cxa_guard_acquire>
 80080d4:	b1e0      	cbz	r0, 8008110 <_Z23getFont_verdana_40_4bppv+0x54>
 80080d6:	233f      	movs	r3, #63	; 0x3f
 80080d8:	9309      	str	r3, [sp, #36]	; 0x24
 80080da:	4b10      	ldr	r3, [pc, #64]	; (800811c <_Z23getFont_verdana_40_4bppv+0x60>)
 80080dc:	9308      	str	r3, [sp, #32]
 80080de:	4b10      	ldr	r3, [pc, #64]	; (8008120 <_Z23getFont_verdana_40_4bppv+0x64>)
 80080e0:	4910      	ldr	r1, [pc, #64]	; (8008124 <_Z23getFont_verdana_40_4bppv+0x68>)
 80080e2:	4811      	ldr	r0, [pc, #68]	; (8008128 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80080e4:	940a      	str	r4, [sp, #40]	; 0x28
 80080e6:	2201      	movs	r2, #1
 80080e8:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80080ec:	2304      	movs	r3, #4
 80080ee:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80080f2:	2328      	movs	r3, #40	; 0x28
 80080f4:	9300      	str	r3, [sp, #0]
 80080f6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80080fa:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80080fe:	9405      	str	r4, [sp, #20]
 8008100:	f7fd f932 	bl	8005368 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008104:	4809      	ldr	r0, [pc, #36]	; (800812c <_Z23getFont_verdana_40_4bppv+0x70>)
 8008106:	f022 f863 	bl	802a1d0 <atexit>
 800810a:	4628      	mov	r0, r5
 800810c:	f021 fa3d 	bl	802958a <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8008110:	4805      	ldr	r0, [pc, #20]	; (8008128 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008112:	b00f      	add	sp, #60	; 0x3c
 8008114:	bd30      	pop	{r4, r5, pc}
 8008116:	bf00      	nop
 8008118:	200020d8 	.word	0x200020d8
 800811c:	08045680 	.word	0x08045680
 8008120:	08045690 	.word	0x08045690
 8008124:	08045514 	.word	0x08045514
 8008128:	200020dc 	.word	0x200020dc
 800812c:	080080b9 	.word	0x080080b9

08008130 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8008130:	2000      	movs	r0, #0
 8008132:	4770      	bx	lr

08008134 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8008134:	2000      	movs	r0, #0
 8008136:	4770      	bx	lr

08008138 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008138:	b40e      	push	{r1, r2, r3}
 800813a:	b503      	push	{r0, r1, lr}
 800813c:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800813e:	2100      	movs	r1, #0
{
 8008140:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8008144:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8008146:	f00e f959 	bl	80163fc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800814a:	b002      	add	sp, #8
 800814c:	f85d eb04 	ldr.w	lr, [sp], #4
 8008150:	b003      	add	sp, #12
 8008152:	4770      	bx	lr

08008154 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008154:	b40c      	push	{r2, r3}
 8008156:	b507      	push	{r0, r1, r2, lr}
 8008158:	ab04      	add	r3, sp, #16
 800815a:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800815e:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8008160:	f00e f94c 	bl	80163fc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008164:	b003      	add	sp, #12
 8008166:	f85d eb04 	ldr.w	lr, [sp], #4
 800816a:	b002      	add	sp, #8
 800816c:	4770      	bx	lr
	...

08008170 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8008170:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8008172:	b510      	push	{r4, lr}
 8008174:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8008176:	b373      	cbz	r3, 80081d6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8008178:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800817a:	b92b      	cbnz	r3, 8008188 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 800817c:	4b18      	ldr	r3, [pc, #96]	; (80081e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800817e:	4a19      	ldr	r2, [pc, #100]	; (80081e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8008180:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8008182:	4819      	ldr	r0, [pc, #100]	; (80081e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8008184:	f022 f806 	bl	802a194 <__assert_func>
            return buffer[pos];
 8008188:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800818a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800818e:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8008190:	b30b      	cbz	r3, 80081d6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8008192:	f00f fd30 	bl	8017bf6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8008196:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8008198:	2b01      	cmp	r3, #1
 800819a:	d803      	bhi.n	80081a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800819c:	4b13      	ldr	r3, [pc, #76]	; (80081ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800819e:	4a14      	ldr	r2, [pc, #80]	; (80081f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80081a0:	21cb      	movs	r1, #203	; 0xcb
 80081a2:	e7ee      	b.n	8008182 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80081a4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80081a6:	1c53      	adds	r3, r2, #1
 80081a8:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80081aa:	2b09      	cmp	r3, #9
 80081ac:	4619      	mov	r1, r3
 80081ae:	bf88      	it	hi
 80081b0:	f1a3 010a 	subhi.w	r1, r3, #10
 80081b4:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80081b8:	f640 103f 	movw	r0, #2367	; 0x93f
 80081bc:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 80081be:	4281      	cmp	r1, r0
 80081c0:	d109      	bne.n	80081d6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80081c2:	2b0a      	cmp	r3, #10
 80081c4:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80081c8:	bf28      	it	cs
 80081ca:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80081cc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80081d0:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 80081d2:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 80081d4:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80081d6:	4620      	mov	r0, r4
}
 80081d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80081dc:	f00f bc0e 	b.w	80179fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 80081e0:	0802d994 	.word	0x0802d994
 80081e4:	0802d99d 	.word	0x0802d99d
 80081e8:	0802da48 	.word	0x0802da48
 80081ec:	0802da92 	.word	0x0802da92
 80081f0:	0802daa0 	.word	0x0802daa0

080081f4 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80081f4:	f00f bbc9 	b.w	801798a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080081f8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80081f8:	b510      	push	{r4, lr}
 80081fa:	b086      	sub	sp, #24
 80081fc:	ac02      	add	r4, sp, #8
 80081fe:	e884 0006 	stmia.w	r4, {r1, r2}
 8008202:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8008204:	ab0a      	add	r3, sp, #40	; 0x28
 8008206:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8008208:	9301      	str	r3, [sp, #4]
 800820a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800820c:	9300      	str	r3, [sp, #0]
 800820e:	4621      	mov	r1, r4
 8008210:	9b08      	ldr	r3, [sp, #32]
 8008212:	f00c fcb7 	bl	8014b84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8008216:	b006      	add	sp, #24
 8008218:	bd10      	pop	{r4, pc}
	...

0800821c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800821c:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800821e:	bb18      	cbnz	r0, 8008268 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8008220:	4b12      	ldr	r3, [pc, #72]	; (800826c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8008222:	4813      	ldr	r0, [pc, #76]	; (8008270 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8008224:	681c      	ldr	r4, [r3, #0]
 8008226:	4913      	ldr	r1, [pc, #76]	; (8008274 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8008228:	b1b4      	cbz	r4, 8008258 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800822a:	6822      	ldr	r2, [r4, #0]
 800822c:	4422      	add	r2, r4
 800822e:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8008230:	6862      	ldr	r2, [r4, #4]
 8008232:	4422      	add	r2, r4
 8008234:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8008236:	68a2      	ldr	r2, [r4, #8]
 8008238:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800823a:	4b0f      	ldr	r3, [pc, #60]	; (8008278 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800823c:	2200      	movs	r2, #0
 800823e:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8008240:	f000 f838 	bl	80082b4 <_ZN17TypedTextDatabase8getFontsEv>
 8008244:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8008246:	f000 f833 	bl	80082b0 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800824a:	4b0c      	ldr	r3, [pc, #48]	; (800827c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800824c:	601c      	str	r4, [r3, #0]
        fonts = f;
 800824e:	4b0c      	ldr	r3, [pc, #48]	; (8008280 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8008250:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8008252:	4b0c      	ldr	r3, [pc, #48]	; (8008284 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8008254:	8018      	strh	r0, [r3, #0]
    }
}
 8008256:	e007      	b.n	8008268 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8008258:	4b0b      	ldr	r3, [pc, #44]	; (8008288 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800825a:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800825c:	4b0b      	ldr	r3, [pc, #44]	; (800828c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800825e:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8008260:	4b0b      	ldr	r3, [pc, #44]	; (8008290 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8008262:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8008264:	2c00      	cmp	r4, #0
 8008266:	d1e8      	bne.n	800823a <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8008268:	bd38      	pop	{r3, r4, r5, pc}
 800826a:	bf00      	nop
 800826c:	20002108 	.word	0x20002108
 8008270:	2000210c 	.word	0x2000210c
 8008274:	20002110 	.word	0x20002110
 8008278:	20002114 	.word	0x20002114
 800827c:	20012f84 	.word	0x20012f84
 8008280:	20012f8c 	.word	0x20012f8c
 8008284:	20012f88 	.word	0x20012f88
 8008288:	080457e8 	.word	0x080457e8
 800828c:	08045694 	.word	0x08045694
 8008290:	08045d04 	.word	0x08045d04

08008294 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8008294:	4b04      	ldr	r3, [pc, #16]	; (80082a8 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8008296:	681b      	ldr	r3, [r3, #0]
 8008298:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800829c:	4b03      	ldr	r3, [pc, #12]	; (80082ac <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800829e:	681b      	ldr	r3, [r3, #0]
}
 80082a0:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80082a4:	4770      	bx	lr
 80082a6:	bf00      	nop
 80082a8:	20002110 	.word	0x20002110
 80082ac:	2000210c 	.word	0x2000210c

080082b0 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80082b0:	2055      	movs	r0, #85	; 0x55
 80082b2:	4770      	bx	lr

080082b4 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80082b4:	4800      	ldr	r0, [pc, #0]	; (80082b8 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80082b6:	4770      	bx	lr
 80082b8:	20002118 	.word	0x20002118

080082bc <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80082bc:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 80082be:	f7ff febf 	bl	8008040 <_Z23getFont_verdana_19_4bppv>
};
 80082c2:	4c06      	ldr	r4, [pc, #24]	; (80082dc <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 80082c4:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80082c6:	f7ff fef9 	bl	80080bc <_Z23getFont_verdana_40_4bppv>
};
 80082ca:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 80082cc:	f7ff fe3c 	bl	8007f48 <_Z23getFont_verdana_10_4bppv>
};
 80082d0:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 80082d2:	f7ff fe77 	bl	8007fc4 <_Z23getFont_verdana_12_4bppv>
};
 80082d6:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 80082d8:	bd10      	pop	{r4, pc}
 80082da:	bf00      	nop
 80082dc:	20002118 	.word	0x20002118

080082e0 <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 80082e0:	4770      	bx	lr

080082e2 <_ZThn4_N20CalibrationPresenterD1Ev>:
 80082e2:	3804      	subs	r0, #4
 80082e4:	4770      	bx	lr

080082e6 <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 80082e6:	4770      	bx	lr

080082e8 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80082e8:	68c0      	ldr	r0, [r0, #12]
 80082ea:	6803      	ldr	r3, [r0, #0]
 80082ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80082ee:	4718      	bx	r3

080082f0 <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80082f0:	f1a0 0004 	sub.w	r0, r0, #4
 80082f4:	f7ff bff8 	b.w	80082e8 <_ZN20CalibrationPresenter15setTimeoutValueEi>

080082f8 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 80082f8:	b510      	push	{r4, lr}
 80082fa:	2110      	movs	r1, #16
 80082fc:	4604      	mov	r4, r0
 80082fe:	f021 f936 	bl	802956e <_ZdlPvj>
 8008302:	4620      	mov	r0, r4
 8008304:	bd10      	pop	{r4, pc}

08008306 <_ZThn4_N20CalibrationPresenterD0Ev>:
 8008306:	f1a0 0004 	sub.w	r0, r0, #4
 800830a:	e7f5      	b.n	80082f8 <_ZN20CalibrationPresenterD0Ev>

0800830c <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 800830c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800830e:	2200      	movs	r2, #0
 8008310:	6082      	str	r2, [r0, #8]
    : view(v)
 8008312:	4a04      	ldr	r2, [pc, #16]	; (8008324 <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 8008314:	60c1      	str	r1, [r0, #12]
 8008316:	f102 0408 	add.w	r4, r2, #8
 800831a:	3224      	adds	r2, #36	; 0x24
 800831c:	6004      	str	r4, [r0, #0]
 800831e:	6042      	str	r2, [r0, #4]
}
 8008320:	bd10      	pop	{r4, pc}
 8008322:	bf00      	nop
 8008324:	0802db74 	.word	0x0802db74

08008328 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 8008328:	4770      	bx	lr
	...

0800832c <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 800832c:	b510      	push	{r4, lr}
 800832e:	4b03      	ldr	r3, [pc, #12]	; (800833c <_ZN15CalibrationViewD1Ev+0x10>)
 8008330:	6003      	str	r3, [r0, #0]
 8008332:	4604      	mov	r4, r0
 8008334:	f7fa fa1e 	bl	8002774 <_ZN19CalibrationViewBaseD1Ev>
 8008338:	4620      	mov	r0, r4
 800833a:	bd10      	pop	{r4, pc}
 800833c:	0802dbb0 	.word	0x0802dbb0

08008340 <_ZN15CalibrationViewD0Ev>:
 8008340:	b510      	push	{r4, lr}
 8008342:	4604      	mov	r4, r0
 8008344:	f7ff fff2 	bl	800832c <_ZN15CalibrationViewD1Ev>
 8008348:	4620      	mov	r0, r4
 800834a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800834e:	f021 f90e 	bl	802956e <_ZdlPvj>
 8008352:	4620      	mov	r0, r4
 8008354:	bd10      	pop	{r4, pc}
	...

08008358 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 8008358:	b510      	push	{r4, lr}
 800835a:	4604      	mov	r4, r0
 800835c:	f7fa fb1e 	bl	800299c <_ZN19CalibrationViewBaseC1Ev>
 8008360:	4b01      	ldr	r3, [pc, #4]	; (8008368 <_ZN15CalibrationViewC1Ev+0x10>)
 8008362:	6023      	str	r3, [r4, #0]
}
 8008364:	4620      	mov	r0, r4
 8008366:	bd10      	pop	{r4, pc}
 8008368:	0802dbb0 	.word	0x0802dbb0

0800836c <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 800836c:	f7fa b9cf 	b.w	800270e <_ZN19CalibrationViewBase11setupScreenEv>

08008370 <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 8008370:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008372:	4a0a      	ldr	r2, [pc, #40]	; (800839c <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 8008374:	4605      	mov	r5, r0
 8008376:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008378:	460b      	mov	r3, r1
 800837a:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800837e:	2104      	movs	r1, #4
 8008380:	f010 f9ee 	bl	8018760 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008384:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008388:	f00e f962 	bl	8016650 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800838c:	b92c      	cbnz	r4, 800839a <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 800838e:	f00d f877 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008392:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008396:	f7fb bc5f 	b.w	8003c58 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800839a:	bd38      	pop	{r3, r4, r5, pc}
 800839c:	0802dba4 	.word	0x0802dba4

080083a0 <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 80083a0:	4770      	bx	lr

080083a2 <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 80083a2:	3804      	subs	r0, #4
 80083a4:	4770      	bx	lr

080083a6 <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 80083a6:	4770      	bx	lr

080083a8 <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 80083a8:	4770      	bx	lr

080083aa <_ZN25Calibration_HallPresenterD0Ev>:
 80083aa:	b510      	push	{r4, lr}
 80083ac:	2110      	movs	r1, #16
 80083ae:	4604      	mov	r4, r0
 80083b0:	f021 f8dd 	bl	802956e <_ZdlPvj>
 80083b4:	4620      	mov	r0, r4
 80083b6:	bd10      	pop	{r4, pc}

080083b8 <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 80083b8:	f1a0 0004 	sub.w	r0, r0, #4
 80083bc:	e7f5      	b.n	80083aa <_ZN25Calibration_HallPresenterD0Ev>

080083be <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 80083be:	4770      	bx	lr

080083c0 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 80083c0:	b510      	push	{r4, lr}
 80083c2:	2200      	movs	r2, #0
 80083c4:	6082      	str	r2, [r0, #8]
    : view(v)
 80083c6:	4a04      	ldr	r2, [pc, #16]	; (80083d8 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 80083c8:	60c1      	str	r1, [r0, #12]
 80083ca:	f102 0408 	add.w	r4, r2, #8
 80083ce:	3224      	adds	r2, #36	; 0x24
 80083d0:	6004      	str	r4, [r0, #0]
 80083d2:	6042      	str	r2, [r0, #4]
}
 80083d4:	bd10      	pop	{r4, pc}
 80083d6:	bf00      	nop
 80083d8:	0802dbe0 	.word	0x0802dbe0

080083dc <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 80083dc:	4770      	bx	lr

080083de <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 80083de:	4770      	bx	lr

080083e0 <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 80083e0:	b510      	push	{r4, lr}
 80083e2:	4b03      	ldr	r3, [pc, #12]	; (80083f0 <_ZN20Calibration_HallViewD1Ev+0x10>)
 80083e4:	6003      	str	r3, [r0, #0]
 80083e6:	4604      	mov	r4, r0
 80083e8:	f7fa fd1c 	bl	8002e24 <_ZN24Calibration_HallViewBaseD1Ev>
 80083ec:	4620      	mov	r0, r4
 80083ee:	bd10      	pop	{r4, pc}
 80083f0:	0802dc18 	.word	0x0802dc18

080083f4 <_ZN20Calibration_HallViewD0Ev>:
 80083f4:	b510      	push	{r4, lr}
 80083f6:	4604      	mov	r4, r0
 80083f8:	f7ff fff2 	bl	80083e0 <_ZN20Calibration_HallViewD1Ev>
 80083fc:	4620      	mov	r0, r4
 80083fe:	f241 015c 	movw	r1, #4188	; 0x105c
 8008402:	f021 f8b4 	bl	802956e <_ZdlPvj>
 8008406:	4620      	mov	r0, r4
 8008408:	bd10      	pop	{r4, pc}
	...

0800840c <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 800840c:	b510      	push	{r4, lr}
 800840e:	4604      	mov	r4, r0
 8008410:	f7fa fd30 	bl	8002e74 <_ZN24Calibration_HallViewBaseC1Ev>
 8008414:	4b01      	ldr	r3, [pc, #4]	; (800841c <_ZN20Calibration_HallViewC1Ev+0x10>)
 8008416:	6023      	str	r3, [r4, #0]
}
 8008418:	4620      	mov	r0, r4
 800841a:	bd10      	pop	{r4, pc}
 800841c:	0802dc18 	.word	0x0802dc18

08008420 <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 8008420:	f7fa bcdc 	b.w	8002ddc <_ZN24Calibration_HallViewBase11setupScreenEv>

08008424 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8008424:	4770      	bx	lr

08008426 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8008426:	3804      	subs	r0, #4
 8008428:	4770      	bx	lr

0800842a <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 800842a:	4770      	bx	lr

0800842c <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 800842c:	4770      	bx	lr

0800842e <_ZN24Calibration_PadPresenterD0Ev>:
 800842e:	b510      	push	{r4, lr}
 8008430:	2110      	movs	r1, #16
 8008432:	4604      	mov	r4, r0
 8008434:	f021 f89b 	bl	802956e <_ZdlPvj>
 8008438:	4620      	mov	r0, r4
 800843a:	bd10      	pop	{r4, pc}

0800843c <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 800843c:	f1a0 0004 	sub.w	r0, r0, #4
 8008440:	e7f5      	b.n	800842e <_ZN24Calibration_PadPresenterD0Ev>

08008442 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 8008442:	4770      	bx	lr

08008444 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 8008444:	b510      	push	{r4, lr}
 8008446:	2200      	movs	r2, #0
 8008448:	6082      	str	r2, [r0, #8]
    : view(v)
 800844a:	4a04      	ldr	r2, [pc, #16]	; (800845c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 800844c:	60c1      	str	r1, [r0, #12]
 800844e:	f102 0408 	add.w	r4, r2, #8
 8008452:	3224      	adds	r2, #36	; 0x24
 8008454:	6004      	str	r4, [r0, #0]
 8008456:	6042      	str	r2, [r0, #4]
}
 8008458:	bd10      	pop	{r4, pc}
 800845a:	bf00      	nop
 800845c:	0802dc48 	.word	0x0802dc48

08008460 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 8008460:	4770      	bx	lr

08008462 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 8008462:	4770      	bx	lr

08008464 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8008464:	b510      	push	{r4, lr}
 8008466:	4b03      	ldr	r3, [pc, #12]	; (8008474 <_ZN19Calibration_PadViewD1Ev+0x10>)
 8008468:	6003      	str	r3, [r0, #0]
 800846a:	4604      	mov	r4, r0
 800846c:	f7fa fe8a 	bl	8003184 <_ZN23Calibration_PadViewBaseD1Ev>
 8008470:	4620      	mov	r0, r4
 8008472:	bd10      	pop	{r4, pc}
 8008474:	0802dc80 	.word	0x0802dc80

08008478 <_ZN19Calibration_PadViewD0Ev>:
 8008478:	b510      	push	{r4, lr}
 800847a:	4604      	mov	r4, r0
 800847c:	f7ff fff2 	bl	8008464 <_ZN19Calibration_PadViewD1Ev>
 8008480:	4620      	mov	r0, r4
 8008482:	f241 015c 	movw	r1, #4188	; 0x105c
 8008486:	f021 f872 	bl	802956e <_ZdlPvj>
 800848a:	4620      	mov	r0, r4
 800848c:	bd10      	pop	{r4, pc}
	...

08008490 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 8008490:	b510      	push	{r4, lr}
 8008492:	4604      	mov	r4, r0
 8008494:	f7fa fe9e 	bl	80031d4 <_ZN23Calibration_PadViewBaseC1Ev>
 8008498:	4b01      	ldr	r3, [pc, #4]	; (80084a0 <_ZN19Calibration_PadViewC1Ev+0x10>)
 800849a:	6023      	str	r3, [r4, #0]
}
 800849c:	4620      	mov	r0, r4
 800849e:	bd10      	pop	{r4, pc}
 80084a0:	0802dc80 	.word	0x0802dc80

080084a4 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 80084a4:	f7fa be4a 	b.w	800313c <_ZN23Calibration_PadViewBase11setupScreenEv>

080084a8 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80084a8:	4770      	bx	lr

080084aa <_ZN19FrontendApplicationD0Ev>:
 80084aa:	b510      	push	{r4, lr}
 80084ac:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80084b0:	4604      	mov	r4, r0
 80084b2:	f021 f85c 	bl	802956e <_ZdlPvj>
 80084b6:	4620      	mov	r0, r4
 80084b8:	bd10      	pop	{r4, pc}

080084ba <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80084ba:	b510      	push	{r4, lr}
 80084bc:	4604      	mov	r4, r0
    {
        model.tick();
 80084be:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 80084c2:	f000 fb1f 	bl	8008b04 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80084c6:	4620      	mov	r0, r4
    }
 80084c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80084cc:	f00d b89c 	b.w	8015608 <_ZN8touchgfx11Application15handleTickEventEv>

080084d0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80084d0:	b510      	push	{r4, lr}
 80084d2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80084d4:	f7fb fa90 	bl	80039f8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80084d8:	4b01      	ldr	r3, [pc, #4]	; (80084e0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80084da:	6023      	str	r3, [r4, #0]
{

}
 80084dc:	4620      	mov	r0, r4
 80084de:	bd10      	pop	{r4, pc}
 80084e0:	0802dcb8 	.word	0x0802dcb8

080084e4 <_ZN17Gauge_with_ValuesD1Ev>:
 80084e4:	b510      	push	{r4, lr}
 80084e6:	4b03      	ldr	r3, [pc, #12]	; (80084f4 <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 80084e8:	6003      	str	r3, [r0, #0]
 80084ea:	4604      	mov	r4, r0
 80084ec:	f7fc fd8a 	bl	8005004 <_ZN21Gauge_with_ValuesBaseD1Ev>
 80084f0:	4620      	mov	r0, r4
 80084f2:	bd10      	pop	{r4, pc}
 80084f4:	0802dd0c 	.word	0x0802dd0c

080084f8 <_ZN17Gauge_with_ValuesD0Ev>:
 80084f8:	b510      	push	{r4, lr}
 80084fa:	4604      	mov	r4, r0
 80084fc:	f7ff fff2 	bl	80084e4 <_ZN17Gauge_with_ValuesD1Ev>
 8008500:	4620      	mov	r0, r4
 8008502:	f44f 7162 	mov.w	r1, #904	; 0x388
 8008506:	f021 f832 	bl	802956e <_ZdlPvj>
 800850a:	4620      	mov	r0, r4
 800850c:	bd10      	pop	{r4, pc}
	...

08008510 <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 8008510:	b510      	push	{r4, lr}
 8008512:	4604      	mov	r4, r0
 8008514:	f7fc fd80 	bl	8005018 <_ZN21Gauge_with_ValuesBaseC1Ev>
 8008518:	4b01      	ldr	r3, [pc, #4]	; (8008520 <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 800851a:	6023      	str	r3, [r4, #0]
{

}
 800851c:	4620      	mov	r0, r4
 800851e:	bd10      	pop	{r4, pc}
 8008520:	0802dd0c 	.word	0x0802dd0c

08008524 <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 8008524:	f7fc bd6f 	b.w	8005006 <_ZN21Gauge_with_ValuesBase10initializeEv>

08008528 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8008528:	4770      	bx	lr

0800852a <_ZThn4_N18Main_MenuPresenterD1Ev>:
 800852a:	3804      	subs	r0, #4
 800852c:	4770      	bx	lr

0800852e <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 800852e:	4770      	bx	lr

08008530 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008530:	68c0      	ldr	r0, [r0, #12]
 8008532:	6803      	ldr	r3, [r0, #0]
 8008534:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008536:	4718      	bx	r3

08008538 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008538:	f1a0 0004 	sub.w	r0, r0, #4
 800853c:	f7ff bff8 	b.w	8008530 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08008540 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8008540:	b510      	push	{r4, lr}
 8008542:	2110      	movs	r1, #16
 8008544:	4604      	mov	r4, r0
 8008546:	f021 f812 	bl	802956e <_ZdlPvj>
 800854a:	4620      	mov	r0, r4
 800854c:	bd10      	pop	{r4, pc}

0800854e <_ZThn4_N18Main_MenuPresenterD0Ev>:
 800854e:	f1a0 0004 	sub.w	r0, r0, #4
 8008552:	e7f5      	b.n	8008540 <_ZN18Main_MenuPresenterD0Ev>

08008554 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8008554:	b510      	push	{r4, lr}
 8008556:	2200      	movs	r2, #0
 8008558:	6082      	str	r2, [r0, #8]
    : view(v)
 800855a:	4a04      	ldr	r2, [pc, #16]	; (800856c <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 800855c:	60c1      	str	r1, [r0, #12]
 800855e:	f102 0408 	add.w	r4, r2, #8
 8008562:	3224      	adds	r2, #36	; 0x24
 8008564:	6004      	str	r4, [r0, #0]
 8008566:	6042      	str	r2, [r0, #4]
}
 8008568:	bd10      	pop	{r4, pc}
 800856a:	bf00      	nop
 800856c:	0802dd98 	.word	0x0802dd98

08008570 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8008570:	4770      	bx	lr
	...

08008574 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8008574:	b510      	push	{r4, lr}
 8008576:	4b03      	ldr	r3, [pc, #12]	; (8008584 <_ZN13Main_MenuViewD1Ev+0x10>)
 8008578:	6003      	str	r3, [r0, #0]
 800857a:	4604      	mov	r4, r0
 800857c:	f7fc ff48 	bl	8005410 <_ZN17Main_MenuViewBaseD1Ev>
 8008580:	4620      	mov	r0, r4
 8008582:	bd10      	pop	{r4, pc}
 8008584:	0802ddd0 	.word	0x0802ddd0

08008588 <_ZN13Main_MenuViewD0Ev>:
 8008588:	b510      	push	{r4, lr}
 800858a:	4604      	mov	r4, r0
 800858c:	f7ff fff2 	bl	8008574 <_ZN13Main_MenuViewD1Ev>
 8008590:	4620      	mov	r0, r4
 8008592:	f241 117c 	movw	r1, #4476	; 0x117c
 8008596:	f020 ffea 	bl	802956e <_ZdlPvj>
 800859a:	4620      	mov	r0, r4
 800859c:	bd10      	pop	{r4, pc}
	...

080085a0 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 80085a0:	b510      	push	{r4, lr}
 80085a2:	4604      	mov	r4, r0
 80085a4:	f7fc ff7e 	bl	80054a4 <_ZN17Main_MenuViewBaseC1Ev>
 80085a8:	4b01      	ldr	r3, [pc, #4]	; (80085b0 <_ZN13Main_MenuViewC1Ev+0x10>)
 80085aa:	6023      	str	r3, [r4, #0]
}
 80085ac:	4620      	mov	r0, r4
 80085ae:	bd10      	pop	{r4, pc}
 80085b0:	0802ddd0 	.word	0x0802ddd0

080085b4 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 80085b4:	f7fc bf08 	b.w	80053c8 <_ZN17Main_MenuViewBase11setupScreenEv>

080085b8 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 80085b8:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80085ba:	4a0a      	ldr	r2, [pc, #40]	; (80085e4 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 80085bc:	4605      	mov	r5, r0
 80085be:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80085c0:	460b      	mov	r3, r1
 80085c2:	f500 7055 	add.w	r0, r0, #852	; 0x354
 80085c6:	2104      	movs	r1, #4
 80085c8:	f010 f8ca 	bl	8018760 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 80085cc:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80085d0:	f00e f83e 	bl	8016650 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80085d4:	b92c      	cbnz	r4, 80085e2 <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 80085d6:	f00c ff53 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80085da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80085de:	f7fb bb3b 	b.w	8003c58 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80085e2:	bd38      	pop	{r3, r4, r5, pc}
 80085e4:	0802dba4 	.word	0x0802dba4

080085e8 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 80085e8:	4770      	bx	lr

080085ea <_ZThn4_N20MeasurementPresenterD1Ev>:
 80085ea:	3804      	subs	r0, #4
 80085ec:	4770      	bx	lr

080085ee <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 80085ee:	4770      	bx	lr

080085f0 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80085f0:	68c0      	ldr	r0, [r0, #12]
 80085f2:	6803      	ldr	r3, [r0, #0]
 80085f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80085f6:	4718      	bx	r3

080085f8 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80085f8:	f1a0 0004 	sub.w	r0, r0, #4
 80085fc:	f7ff bff8 	b.w	80085f0 <_ZN20MeasurementPresenter15setTimeoutValueEi>

08008600 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8008600:	b510      	push	{r4, lr}
 8008602:	2110      	movs	r1, #16
 8008604:	4604      	mov	r4, r0
 8008606:	f020 ffb2 	bl	802956e <_ZdlPvj>
 800860a:	4620      	mov	r0, r4
 800860c:	bd10      	pop	{r4, pc}

0800860e <_ZThn4_N20MeasurementPresenterD0Ev>:
 800860e:	f1a0 0004 	sub.w	r0, r0, #4
 8008612:	e7f5      	b.n	8008600 <_ZN20MeasurementPresenterD0Ev>

08008614 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8008614:	b510      	push	{r4, lr}
 8008616:	2200      	movs	r2, #0
 8008618:	6082      	str	r2, [r0, #8]
    : view(v)
 800861a:	4a04      	ldr	r2, [pc, #16]	; (800862c <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 800861c:	60c1      	str	r1, [r0, #12]
 800861e:	f102 0408 	add.w	r4, r2, #8
 8008622:	3224      	adds	r2, #36	; 0x24
 8008624:	6004      	str	r4, [r0, #0]
 8008626:	6042      	str	r2, [r0, #4]
}
 8008628:	bd10      	pop	{r4, pc}
 800862a:	bf00      	nop
 800862c:	0802de00 	.word	0x0802de00

08008630 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8008630:	4770      	bx	lr
	...

08008634 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8008634:	b510      	push	{r4, lr}
 8008636:	4b03      	ldr	r3, [pc, #12]	; (8008644 <_ZN15MeasurementViewD1Ev+0x10>)
 8008638:	6003      	str	r3, [r0, #0]
 800863a:	4604      	mov	r4, r0
 800863c:	f7fd f9a2 	bl	8005984 <_ZN19MeasurementViewBaseD1Ev>
 8008640:	4620      	mov	r0, r4
 8008642:	bd10      	pop	{r4, pc}
 8008644:	0802de38 	.word	0x0802de38

08008648 <_ZN15MeasurementViewD0Ev>:
 8008648:	b510      	push	{r4, lr}
 800864a:	4604      	mov	r4, r0
 800864c:	f7ff fff2 	bl	8008634 <_ZN15MeasurementViewD1Ev>
 8008650:	4620      	mov	r0, r4
 8008652:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008656:	f020 ff8a 	bl	802956e <_ZdlPvj>
 800865a:	4620      	mov	r0, r4
 800865c:	bd10      	pop	{r4, pc}
	...

08008660 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8008660:	b510      	push	{r4, lr}
 8008662:	4604      	mov	r4, r0
 8008664:	f7fd f9c8 	bl	80059f8 <_ZN19MeasurementViewBaseC1Ev>
 8008668:	4b01      	ldr	r3, [pc, #4]	; (8008670 <_ZN15MeasurementViewC1Ev+0x10>)
 800866a:	6023      	str	r3, [r4, #0]
}
 800866c:	4620      	mov	r0, r4
 800866e:	bd10      	pop	{r4, pc}
 8008670:	0802de38 	.word	0x0802de38

08008674 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8008674:	f7fd b962 	b.w	800593c <_ZN19MeasurementViewBase11setupScreenEv>

08008678 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8008678:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800867a:	4a0a      	ldr	r2, [pc, #40]	; (80086a4 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 800867c:	4605      	mov	r5, r0
 800867e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008680:	460b      	mov	r3, r1
 8008682:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008686:	2104      	movs	r1, #4
 8008688:	f010 f86a 	bl	8018760 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 800868c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008690:	f00d ffde 	bl	8016650 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008694:	b92c      	cbnz	r4, 80086a2 <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 8008696:	f00c fef3 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800869a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800869e:	f7fb badb 	b.w	8003c58 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80086a2:	bd38      	pop	{r3, r4, r5, pc}
 80086a4:	0802dba4 	.word	0x0802dba4

080086a8 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 80086a8:	4770      	bx	lr

080086aa <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 80086aa:	3804      	subs	r0, #4
 80086ac:	4770      	bx	lr

080086ae <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 80086ae:	4770      	bx	lr

080086b0 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80086b0:	68c0      	ldr	r0, [r0, #12]
 80086b2:	6803      	ldr	r3, [r0, #0]
 80086b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80086b6:	4718      	bx	r3

080086b8 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80086b8:	f1a0 0004 	sub.w	r0, r0, #4
 80086bc:	f7ff bff8 	b.w	80086b0 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

080086c0 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 80086c0:	b510      	push	{r4, lr}
 80086c2:	2110      	movs	r1, #16
 80086c4:	4604      	mov	r4, r0
 80086c6:	f020 ff52 	bl	802956e <_ZdlPvj>
 80086ca:	4620      	mov	r0, r4
 80086cc:	bd10      	pop	{r4, pc}

080086ce <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 80086ce:	f1a0 0004 	sub.w	r0, r0, #4
 80086d2:	e7f5      	b.n	80086c0 <_ZN29Measurement_AccuratePresenterD0Ev>

080086d4 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 80086d4:	b510      	push	{r4, lr}
 80086d6:	2200      	movs	r2, #0
 80086d8:	6082      	str	r2, [r0, #8]
    : view(v)
 80086da:	4a04      	ldr	r2, [pc, #16]	; (80086ec <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 80086dc:	60c1      	str	r1, [r0, #12]
 80086de:	f102 0408 	add.w	r4, r2, #8
 80086e2:	3224      	adds	r2, #36	; 0x24
 80086e4:	6004      	str	r4, [r0, #0]
 80086e6:	6042      	str	r2, [r0, #4]
}
 80086e8:	bd10      	pop	{r4, pc}
 80086ea:	bf00      	nop
 80086ec:	0802de68 	.word	0x0802de68

080086f0 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 80086f0:	4770      	bx	lr
	...

080086f4 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 80086f4:	b510      	push	{r4, lr}
 80086f6:	4b03      	ldr	r3, [pc, #12]	; (8008704 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 80086f8:	6003      	str	r3, [r0, #0]
 80086fa:	4604      	mov	r4, r0
 80086fc:	f7fd fbc4 	bl	8005e88 <_ZN28Measurement_AccurateViewBaseD1Ev>
 8008700:	4620      	mov	r0, r4
 8008702:	bd10      	pop	{r4, pc}
 8008704:	0802dea0 	.word	0x0802dea0

08008708 <_ZN24Measurement_AccurateViewD0Ev>:
 8008708:	b510      	push	{r4, lr}
 800870a:	4604      	mov	r4, r0
 800870c:	f7ff fff2 	bl	80086f4 <_ZN24Measurement_AccurateViewD1Ev>
 8008710:	4620      	mov	r0, r4
 8008712:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008716:	f020 ff2a 	bl	802956e <_ZdlPvj>
 800871a:	4620      	mov	r0, r4
 800871c:	bd10      	pop	{r4, pc}
	...

08008720 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8008720:	b510      	push	{r4, lr}
 8008722:	4604      	mov	r4, r0
 8008724:	f7fd fbea 	bl	8005efc <_ZN28Measurement_AccurateViewBaseC1Ev>
 8008728:	4b01      	ldr	r3, [pc, #4]	; (8008730 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 800872a:	6023      	str	r3, [r4, #0]
}
 800872c:	4620      	mov	r0, r4
 800872e:	bd10      	pop	{r4, pc}
 8008730:	0802dea0 	.word	0x0802dea0

08008734 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8008734:	f7fd bb84 	b.w	8005e40 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08008738 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8008738:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800873a:	4a0a      	ldr	r2, [pc, #40]	; (8008764 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 800873c:	4605      	mov	r5, r0
 800873e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008740:	460b      	mov	r3, r1
 8008742:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008746:	2104      	movs	r1, #4
 8008748:	f010 f80a 	bl	8018760 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 800874c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008750:	f00d ff7e 	bl	8016650 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008754:	b92c      	cbnz	r4, 8008762 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8008756:	f00c fe93 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800875a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800875e:	f7fb ba7b 	b.w	8003c58 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008762:	bd38      	pop	{r3, r4, r5, pc}
 8008764:	0802dba4 	.word	0x0802dba4

08008768 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8008768:	4770      	bx	lr

0800876a <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 800876a:	3804      	subs	r0, #4
 800876c:	4770      	bx	lr

0800876e <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 800876e:	4770      	bx	lr

08008770 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8008770:	4770      	bx	lr

08008772 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008772:	b510      	push	{r4, lr}
 8008774:	2110      	movs	r1, #16
 8008776:	4604      	mov	r4, r0
 8008778:	f020 fef9 	bl	802956e <_ZdlPvj>
 800877c:	4620      	mov	r0, r4
 800877e:	bd10      	pop	{r4, pc}

08008780 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008780:	f1a0 0004 	sub.w	r0, r0, #4
 8008784:	e7f5      	b.n	8008772 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08008786 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8008786:	4770      	bx	lr

08008788 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8008788:	b510      	push	{r4, lr}
 800878a:	2200      	movs	r2, #0
 800878c:	6082      	str	r2, [r0, #8]
    : view(v)
 800878e:	4a04      	ldr	r2, [pc, #16]	; (80087a0 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8008790:	60c1      	str	r1, [r0, #12]
 8008792:	f102 0408 	add.w	r4, r2, #8
 8008796:	3224      	adds	r2, #36	; 0x24
 8008798:	6004      	str	r4, [r0, #0]
 800879a:	6042      	str	r2, [r0, #4]
}
 800879c:	bd10      	pop	{r4, pc}
 800879e:	bf00      	nop
 80087a0:	0802ded0 	.word	0x0802ded0

080087a4 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 80087a4:	4770      	bx	lr
	...

080087a8 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 80087a8:	b510      	push	{r4, lr}
 80087aa:	4b03      	ldr	r3, [pc, #12]	; (80087b8 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 80087ac:	6003      	str	r3, [r0, #0]
 80087ae:	4604      	mov	r4, r0
 80087b0:	f7fd fdf6 	bl	80063a0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80087b4:	4620      	mov	r0, r4
 80087b6:	bd10      	pop	{r4, pc}
 80087b8:	0802df08 	.word	0x0802df08

080087bc <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 80087bc:	b510      	push	{r4, lr}
 80087be:	4604      	mov	r4, r0
 80087c0:	f7ff fff2 	bl	80087a8 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 80087c4:	4620      	mov	r0, r4
 80087c6:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80087ca:	f020 fed0 	bl	802956e <_ZdlPvj>
 80087ce:	4620      	mov	r0, r4
 80087d0:	bd10      	pop	{r4, pc}
	...

080087d4 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 80087d4:	b510      	push	{r4, lr}
 80087d6:	4604      	mov	r4, r0
 80087d8:	f7fd fe02 	bl	80063e0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 80087dc:	4b01      	ldr	r3, [pc, #4]	; (80087e4 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 80087de:	6023      	str	r3, [r4, #0]
}
 80087e0:	4620      	mov	r0, r4
 80087e2:	bd10      	pop	{r4, pc}
 80087e4:	0802df08 	.word	0x0802df08

080087e8 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 80087e8:	f7fd bdcb 	b.w	8006382 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

080087ec <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 80087ec:	4770      	bx	lr

080087ee <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 80087ee:	3804      	subs	r0, #4
 80087f0:	4770      	bx	lr

080087f2 <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 80087f2:	4770      	bx	lr

080087f4 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 80087f4:	4770      	bx	lr

080087f6 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 80087f6:	b510      	push	{r4, lr}
 80087f8:	2110      	movs	r1, #16
 80087fa:	4604      	mov	r4, r0
 80087fc:	f020 feb7 	bl	802956e <_ZdlPvj>
 8008800:	4620      	mov	r0, r4
 8008802:	bd10      	pop	{r4, pc}

08008804 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008804:	f1a0 0004 	sub.w	r0, r0, #4
 8008808:	e7f5      	b.n	80087f6 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

0800880a <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 800880a:	4770      	bx	lr

0800880c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 800880c:	b510      	push	{r4, lr}
 800880e:	2200      	movs	r2, #0
 8008810:	6082      	str	r2, [r0, #8]
    : view(v)
 8008812:	4a04      	ldr	r2, [pc, #16]	; (8008824 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8008814:	60c1      	str	r1, [r0, #12]
 8008816:	f102 0408 	add.w	r4, r2, #8
 800881a:	3224      	adds	r2, #36	; 0x24
 800881c:	6004      	str	r4, [r0, #0]
 800881e:	6042      	str	r2, [r0, #4]
}
 8008820:	bd10      	pop	{r4, pc}
 8008822:	bf00      	nop
 8008824:	0802df34 	.word	0x0802df34

08008828 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8008828:	4770      	bx	lr
	...

0800882c <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 800882c:	b510      	push	{r4, lr}
 800882e:	4b03      	ldr	r3, [pc, #12]	; (800883c <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8008830:	6003      	str	r3, [r0, #0]
 8008832:	4604      	mov	r4, r0
 8008834:	f7fd ff78 	bl	8006728 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8008838:	4620      	mov	r0, r4
 800883a:	bd10      	pop	{r4, pc}
 800883c:	0802df6c 	.word	0x0802df6c

08008840 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 8008840:	b510      	push	{r4, lr}
 8008842:	4604      	mov	r4, r0
 8008844:	f7ff fff2 	bl	800882c <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8008848:	4620      	mov	r0, r4
 800884a:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800884e:	f020 fe8e 	bl	802956e <_ZdlPvj>
 8008852:	4620      	mov	r0, r4
 8008854:	bd10      	pop	{r4, pc}
	...

08008858 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8008858:	b510      	push	{r4, lr}
 800885a:	4604      	mov	r4, r0
 800885c:	f7fd ff84 	bl	8006768 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8008860:	4b01      	ldr	r3, [pc, #4]	; (8008868 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8008862:	6023      	str	r3, [r4, #0]
}
 8008864:	4620      	mov	r0, r4
 8008866:	bd10      	pop	{r4, pc}
 8008868:	0802df6c 	.word	0x0802df6c

0800886c <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 800886c:	f7fd bf4d 	b.w	800670a <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08008870 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8008870:	4770      	bx	lr

08008872 <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 8008872:	3804      	subs	r0, #4
 8008874:	4770      	bx	lr

08008876 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8008876:	4770      	bx	lr

08008878 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008878:	68c0      	ldr	r0, [r0, #12]
 800887a:	6803      	ldr	r3, [r0, #0]
 800887c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800887e:	4718      	bx	r3

08008880 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008880:	f1a0 0004 	sub.w	r0, r0, #4
 8008884:	f7ff bff8 	b.w	8008878 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08008888 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8008888:	b510      	push	{r4, lr}
 800888a:	2110      	movs	r1, #16
 800888c:	4604      	mov	r4, r0
 800888e:	f020 fe6e 	bl	802956e <_ZdlPvj>
 8008892:	4620      	mov	r0, r4
 8008894:	bd10      	pop	{r4, pc}

08008896 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 8008896:	f1a0 0004 	sub.w	r0, r0, #4
 800889a:	e7f5      	b.n	8008888 <_ZN27Measurement_SinglePresenterD0Ev>

0800889c <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 800889c:	b510      	push	{r4, lr}
 800889e:	2200      	movs	r2, #0
 80088a0:	6082      	str	r2, [r0, #8]
    : view(v)
 80088a2:	4a04      	ldr	r2, [pc, #16]	; (80088b4 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 80088a4:	60c1      	str	r1, [r0, #12]
 80088a6:	f102 0408 	add.w	r4, r2, #8
 80088aa:	3224      	adds	r2, #36	; 0x24
 80088ac:	6004      	str	r4, [r0, #0]
 80088ae:	6042      	str	r2, [r0, #4]
}
 80088b0:	bd10      	pop	{r4, pc}
 80088b2:	bf00      	nop
 80088b4:	0802df98 	.word	0x0802df98

080088b8 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 80088b8:	4770      	bx	lr
	...

080088bc <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 80088bc:	b510      	push	{r4, lr}
 80088be:	4b03      	ldr	r3, [pc, #12]	; (80088cc <_ZN22Measurement_SingleViewD1Ev+0x10>)
 80088c0:	6003      	str	r3, [r0, #0]
 80088c2:	4604      	mov	r4, r0
 80088c4:	f7fe f8e6 	bl	8006a94 <_ZN26Measurement_SingleViewBaseD1Ev>
 80088c8:	4620      	mov	r0, r4
 80088ca:	bd10      	pop	{r4, pc}
 80088cc:	0802dfd0 	.word	0x0802dfd0

080088d0 <_ZN22Measurement_SingleViewD0Ev>:
 80088d0:	b510      	push	{r4, lr}
 80088d2:	4604      	mov	r4, r0
 80088d4:	f7ff fff2 	bl	80088bc <_ZN22Measurement_SingleViewD1Ev>
 80088d8:	4620      	mov	r0, r4
 80088da:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80088de:	f020 fe46 	bl	802956e <_ZdlPvj>
 80088e2:	4620      	mov	r0, r4
 80088e4:	bd10      	pop	{r4, pc}
	...

080088e8 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 80088e8:	b510      	push	{r4, lr}
 80088ea:	4604      	mov	r4, r0
 80088ec:	f7fe f90c 	bl	8006b08 <_ZN26Measurement_SingleViewBaseC1Ev>
 80088f0:	4b01      	ldr	r3, [pc, #4]	; (80088f8 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 80088f2:	6023      	str	r3, [r4, #0]
}
 80088f4:	4620      	mov	r0, r4
 80088f6:	bd10      	pop	{r4, pc}
 80088f8:	0802dfd0 	.word	0x0802dfd0

080088fc <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 80088fc:	f7fe b8a6 	b.w	8006a4c <_ZN26Measurement_SingleViewBase11setupScreenEv>

08008900 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 8008900:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008902:	4a0a      	ldr	r2, [pc, #40]	; (800892c <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 8008904:	4605      	mov	r5, r0
 8008906:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008908:	460b      	mov	r3, r1
 800890a:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800890e:	2104      	movs	r1, #4
 8008910:	f00f ff26 	bl	8018760 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008914:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008918:	f00d fe9a 	bl	8016650 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800891c:	b92c      	cbnz	r4, 800892a <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 800891e:	f00c fdaf 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008922:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008926:	f7fb b997 	b.w	8003c58 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800892a:	bd38      	pop	{r3, r4, r5, pc}
 800892c:	0802dba4 	.word	0x0802dba4

08008930 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 8008930:	4770      	bx	lr

08008932 <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 8008932:	3804      	subs	r0, #4
 8008934:	4770      	bx	lr

08008936 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 8008936:	4770      	bx	lr

08008938 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 8008938:	4770      	bx	lr

0800893a <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 800893a:	b510      	push	{r4, lr}
 800893c:	2110      	movs	r1, #16
 800893e:	4604      	mov	r4, r0
 8008940:	f020 fe15 	bl	802956e <_ZdlPvj>
 8008944:	4620      	mov	r0, r4
 8008946:	bd10      	pop	{r4, pc}

08008948 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 8008948:	f1a0 0004 	sub.w	r0, r0, #4
 800894c:	e7f5      	b.n	800893a <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

0800894e <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 800894e:	4770      	bx	lr

08008950 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 8008950:	b510      	push	{r4, lr}
 8008952:	2200      	movs	r2, #0
 8008954:	6082      	str	r2, [r0, #8]
    : view(v)
 8008956:	4a04      	ldr	r2, [pc, #16]	; (8008968 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 8008958:	60c1      	str	r1, [r0, #12]
 800895a:	f102 0408 	add.w	r4, r2, #8
 800895e:	3224      	adds	r2, #36	; 0x24
 8008960:	6004      	str	r4, [r0, #0]
 8008962:	6042      	str	r2, [r0, #4]
}
 8008964:	bd10      	pop	{r4, pc}
 8008966:	bf00      	nop
 8008968:	0802e000 	.word	0x0802e000

0800896c <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 800896c:	4770      	bx	lr
	...

08008970 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 8008970:	b510      	push	{r4, lr}
 8008972:	4b03      	ldr	r3, [pc, #12]	; (8008980 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8008974:	6003      	str	r3, [r0, #0]
 8008976:	4604      	mov	r4, r0
 8008978:	f7fe fb12 	bl	8006fa0 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 800897c:	4620      	mov	r0, r4
 800897e:	bd10      	pop	{r4, pc}
 8008980:	0802e040 	.word	0x0802e040

08008984 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8008984:	b510      	push	{r4, lr}
 8008986:	4604      	mov	r4, r0
 8008988:	f7ff fff2 	bl	8008970 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 800898c:	4620      	mov	r0, r4
 800898e:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8008992:	f020 fdec 	bl	802956e <_ZdlPvj>
 8008996:	4620      	mov	r0, r4
 8008998:	bd10      	pop	{r4, pc}
	...

0800899c <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 800899c:	b510      	push	{r4, lr}
 800899e:	4604      	mov	r4, r0
 80089a0:	f7fe fb38 	bl	8007014 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 80089a4:	4b01      	ldr	r3, [pc, #4]	; (80089ac <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 80089a6:	6023      	str	r3, [r4, #0]
}
 80089a8:	4620      	mov	r0, r4
 80089aa:	bd10      	pop	{r4, pc}
 80089ac:	0802e040 	.word	0x0802e040

080089b0 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 80089b0:	f7fe bad1 	b.w	8006f56 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

080089b4 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 80089b4:	b5f0      	push	{r4, r5, r6, r7, lr}
#ifndef SIMULATOR
	int test = 	0;

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 80089b6:	4e2b      	ldr	r6, [pc, #172]	; (8008a64 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb0>)
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4, GPIO_PIN_SET);
 80089b8:	4f2b      	ldr	r7, [pc, #172]	; (8008a68 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb4>)
{
 80089ba:	b087      	sub	sp, #28
 80089bc:	4604      	mov	r4, r0
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 80089be:	2201      	movs	r2, #1
 80089c0:	4630      	mov	r0, r6
 80089c2:	2180      	movs	r1, #128	; 0x80
 80089c4:	f000 ffe2 	bl	800998c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4, GPIO_PIN_SET);
 80089c8:	2201      	movs	r2, #1
 80089ca:	2110      	movs	r1, #16
 80089cc:	4638      	mov	r0, r7
 80089ce:	f000 ffdd 	bl	800998c <HAL_GPIO_WritePin>

	test = updateGUI_test();
 80089d2:	f7f8 fc91 	bl	80012f8 <updateGUI_test>
 80089d6:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 80089d8:	f7f9 fa1c 	bl	8001e14 <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80089dc:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 80089de:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80089e0:	2001      	movs	r0, #1
 80089e2:	f7f8 fbd5 	bl	8001190 <calculate_freq_and_signalstrength>
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4, GPIO_PIN_RESET);
 80089e6:	2200      	movs	r2, #0
 80089e8:	4638      	mov	r0, r7
 80089ea:	2110      	movs	r1, #16
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80089ec:	ed8d 0a04 	vstr	s0, [sp, #16]
 80089f0:	edcd 0a05 	vstr	s1, [sp, #20]
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4, GPIO_PIN_RESET);
 80089f4:	f000 ffca 	bl	800998c <HAL_GPIO_WritePin>
	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 80089f8:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 80089fc:	4629      	mov	r1, r5
 80089fe:	9001      	str	r0, [sp, #4]
 8008a00:	f009 fdd2 	bl	80125a8 <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 8008a04:	9801      	ldr	r0, [sp, #4]
 8008a06:	f00d fe23 	bl	8016650 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 8008a0a:	462b      	mov	r3, r5
 8008a0c:	4a17      	ldr	r2, [pc, #92]	; (8008a6c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 8008a0e:	210a      	movs	r1, #10
 8008a10:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 8008a14:	f00f fea4 	bl	8018760 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 8008a18:	f504 7020 	add.w	r0, r4, #640	; 0x280
 8008a1c:	f00d fe18 	bl	8016650 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 8008a20:	9b04      	ldr	r3, [sp, #16]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8008a22:	4a13      	ldr	r2, [pc, #76]	; (8008a70 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xbc>)
 8008a24:	9303      	str	r3, [sp, #12]
 8008a26:	210a      	movs	r1, #10
 8008a28:	ab03      	add	r3, sp, #12
 8008a2a:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 8008a2e:	f010 f883 	bl	8018b38 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 8008a32:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 8008a36:	f00d fe0b 	bl	8016650 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", fft.signal_strength);
 8008a3a:	9b05      	ldr	r3, [sp, #20]
 8008a3c:	4a0c      	ldr	r2, [pc, #48]	; (8008a70 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xbc>)
 8008a3e:	9303      	str	r3, [sp, #12]
 8008a40:	210a      	movs	r1, #10
 8008a42:	ab03      	add	r3, sp, #12
 8008a44:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 8008a48:	f010 f876 	bl	8018b38 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 8008a4c:	f504 7046 	add.w	r0, r4, #792	; 0x318
 8008a50:	f00d fdfe 	bl	8016650 <_ZNK8touchgfx8Drawable10invalidateEv>

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 8008a54:	2200      	movs	r2, #0
 8008a56:	2180      	movs	r1, #128	; 0x80
 8008a58:	4630      	mov	r0, r6

#endif
}
 8008a5a:	b007      	add	sp, #28
 8008a5c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 8008a60:	f000 bf94 	b.w	800998c <HAL_GPIO_WritePin>
 8008a64:	40020000 	.word	0x40020000
 8008a68:	40020800 	.word	0x40020800
 8008a6c:	0802dba4 	.word	0x0802dba4
 8008a70:	0802e030 	.word	0x0802e030

08008a74 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8008a74:	4770      	bx	lr

08008a76 <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 8008a76:	3804      	subs	r0, #4
 8008a78:	4770      	bx	lr

08008a7a <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 8008a7a:	4770      	bx	lr

08008a7c <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8008a7c:	4770      	bx	lr

08008a7e <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 8008a7e:	b510      	push	{r4, lr}
 8008a80:	2110      	movs	r1, #16
 8008a82:	4604      	mov	r4, r0
 8008a84:	f020 fd73 	bl	802956e <_ZdlPvj>
 8008a88:	4620      	mov	r0, r4
 8008a8a:	bd10      	pop	{r4, pc}

08008a8c <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8008a8c:	f1a0 0004 	sub.w	r0, r0, #4
 8008a90:	e7f5      	b.n	8008a7e <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

08008a92 <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 8008a92:	4770      	bx	lr

08008a94 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8008a94:	b510      	push	{r4, lr}
 8008a96:	2200      	movs	r2, #0
 8008a98:	6082      	str	r2, [r0, #8]
    : view(v)
 8008a9a:	4a04      	ldr	r2, [pc, #16]	; (8008aac <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8008a9c:	60c1      	str	r1, [r0, #12]
 8008a9e:	f102 0408 	add.w	r4, r2, #8
 8008aa2:	3224      	adds	r2, #36	; 0x24
 8008aa4:	6004      	str	r4, [r0, #0]
 8008aa6:	6042      	str	r2, [r0, #4]
}
 8008aa8:	bd10      	pop	{r4, pc}
 8008aaa:	bf00      	nop
 8008aac:	0802e070 	.word	0x0802e070

08008ab0 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8008ab0:	4770      	bx	lr
	...

08008ab4 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8008ab4:	b510      	push	{r4, lr}
 8008ab6:	4b03      	ldr	r3, [pc, #12]	; (8008ac4 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8008ab8:	6003      	str	r3, [r0, #0]
 8008aba:	4604      	mov	r4, r0
 8008abc:	f7fe fe1e 	bl	80076fc <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8008ac0:	4620      	mov	r0, r4
 8008ac2:	bd10      	pop	{r4, pc}
 8008ac4:	0802e0a8 	.word	0x0802e0a8

08008ac8 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8008ac8:	b510      	push	{r4, lr}
 8008aca:	4604      	mov	r4, r0
 8008acc:	f7ff fff2 	bl	8008ab4 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8008ad0:	4620      	mov	r0, r4
 8008ad2:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8008ad6:	f020 fd4a 	bl	802956e <_ZdlPvj>
 8008ada:	4620      	mov	r0, r4
 8008adc:	bd10      	pop	{r4, pc}
	...

08008ae0 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8008ae0:	b510      	push	{r4, lr}
 8008ae2:	4604      	mov	r4, r0
 8008ae4:	f7fe fe2a 	bl	800773c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8008ae8:	4b01      	ldr	r3, [pc, #4]	; (8008af0 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8008aea:	6023      	str	r3, [r4, #0]
}
 8008aec:	4620      	mov	r0, r4
 8008aee:	bd10      	pop	{r4, pc}
 8008af0:	0802e0a8 	.word	0x0802e0a8

08008af4 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8008af4:	f7fe bdf1 	b.w	80076da <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08008af8 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8008af8:	2100      	movs	r1, #0
 8008afa:	223c      	movs	r2, #60	; 0x3c
 8008afc:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8008b00:	4770      	bx	lr
	...

08008b04 <_ZN5Model4tickEv>:

void Model::tick()
{
 8008b04:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008b06:	4d0a      	ldr	r5, [pc, #40]	; (8008b30 <_ZN5Model4tickEv+0x2c>)
{
 8008b08:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008b0a:	6828      	ldr	r0, [r5, #0]
 8008b0c:	f004 fc1a 	bl	800d344 <osMessageQueueGetCount>
 8008b10:	b168      	cbz	r0, 8008b2e <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 8008b12:	2300      	movs	r3, #0
 8008b14:	6828      	ldr	r0, [r5, #0]
 8008b16:	461a      	mov	r2, r3
 8008b18:	1d21      	adds	r1, r4, #4
 8008b1a:	f004 fbdf 	bl	800d2dc <osMessageQueueGet>
 8008b1e:	b930      	cbnz	r0, 8008b2e <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 8008b20:	6820      	ldr	r0, [r4, #0]
 8008b22:	6861      	ldr	r1, [r4, #4]
 8008b24:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 8008b26:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 8008b2a:	689b      	ldr	r3, [r3, #8]
 8008b2c:	4718      	bx	r3
}
 8008b2e:	bd70      	pop	{r4, r5, r6, pc}
 8008b30:	200018d8 	.word	0x200018d8

08008b34 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8008b34:	4770      	bx	lr

08008b36 <_ZThn4_N21Project_InfoPresenterD1Ev>:
 8008b36:	3804      	subs	r0, #4
 8008b38:	4770      	bx	lr

08008b3a <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 8008b3a:	4770      	bx	lr

08008b3c <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008b3c:	68c0      	ldr	r0, [r0, #12]
 8008b3e:	6803      	ldr	r3, [r0, #0]
 8008b40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008b42:	4718      	bx	r3

08008b44 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008b44:	f1a0 0004 	sub.w	r0, r0, #4
 8008b48:	f7ff bff8 	b.w	8008b3c <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08008b4c <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8008b4c:	b510      	push	{r4, lr}
 8008b4e:	2110      	movs	r1, #16
 8008b50:	4604      	mov	r4, r0
 8008b52:	f020 fd0c 	bl	802956e <_ZdlPvj>
 8008b56:	4620      	mov	r0, r4
 8008b58:	bd10      	pop	{r4, pc}

08008b5a <_ZThn4_N21Project_InfoPresenterD0Ev>:
 8008b5a:	f1a0 0004 	sub.w	r0, r0, #4
 8008b5e:	e7f5      	b.n	8008b4c <_ZN21Project_InfoPresenterD0Ev>

08008b60 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8008b60:	b510      	push	{r4, lr}
 8008b62:	2200      	movs	r2, #0
 8008b64:	6082      	str	r2, [r0, #8]
    : view(v)
 8008b66:	4a04      	ldr	r2, [pc, #16]	; (8008b78 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8008b68:	60c1      	str	r1, [r0, #12]
 8008b6a:	f102 0408 	add.w	r4, r2, #8
 8008b6e:	3224      	adds	r2, #36	; 0x24
 8008b70:	6004      	str	r4, [r0, #0]
 8008b72:	6042      	str	r2, [r0, #4]
}
 8008b74:	bd10      	pop	{r4, pc}
 8008b76:	bf00      	nop
 8008b78:	0802e0d4 	.word	0x0802e0d4

08008b7c <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8008b7c:	4770      	bx	lr
	...

08008b80 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8008b80:	b510      	push	{r4, lr}
 8008b82:	4b03      	ldr	r3, [pc, #12]	; (8008b90 <_ZN16Project_InfoViewD1Ev+0x10>)
 8008b84:	6003      	str	r3, [r0, #0]
 8008b86:	4604      	mov	r4, r0
 8008b88:	f7fe ff72 	bl	8007a70 <_ZN20Project_InfoViewBaseD1Ev>
 8008b8c:	4620      	mov	r0, r4
 8008b8e:	bd10      	pop	{r4, pc}
 8008b90:	0802e10c 	.word	0x0802e10c

08008b94 <_ZN16Project_InfoViewD0Ev>:
 8008b94:	b510      	push	{r4, lr}
 8008b96:	4604      	mov	r4, r0
 8008b98:	f7ff fff2 	bl	8008b80 <_ZN16Project_InfoViewD1Ev>
 8008b9c:	4620      	mov	r0, r4
 8008b9e:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8008ba2:	f020 fce4 	bl	802956e <_ZdlPvj>
 8008ba6:	4620      	mov	r0, r4
 8008ba8:	bd10      	pop	{r4, pc}
	...

08008bac <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8008bac:	b510      	push	{r4, lr}
 8008bae:	4604      	mov	r4, r0
 8008bb0:	f7fe ff86 	bl	8007ac0 <_ZN20Project_InfoViewBaseC1Ev>
 8008bb4:	4b01      	ldr	r3, [pc, #4]	; (8008bbc <_ZN16Project_InfoViewC1Ev+0x10>)
 8008bb6:	6023      	str	r3, [r4, #0]
}
 8008bb8:	4620      	mov	r0, r4
 8008bba:	bd10      	pop	{r4, pc}
 8008bbc:	0802e10c 	.word	0x0802e10c

08008bc0 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8008bc0:	f7fe bf32 	b.w	8007a28 <_ZN20Project_InfoViewBase11setupScreenEv>

08008bc4 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8008bc4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008bc6:	4a0a      	ldr	r2, [pc, #40]	; (8008bf0 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8008bc8:	4605      	mov	r5, r0
 8008bca:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008bcc:	460b      	mov	r3, r1
 8008bce:	f500 7022 	add.w	r0, r0, #648	; 0x288
 8008bd2:	2104      	movs	r1, #4
 8008bd4:	f00f fdc4 	bl	8018760 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008bd8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008bdc:	f00d fd38 	bl	8016650 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8008be0:	b92c      	cbnz	r4, 8008bee <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 8008be2:	f00c fc4d 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008be6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008bea:	f7fb b835 	b.w	8003c58 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008bee:	bd38      	pop	{r3, r4, r5, pc}
 8008bf0:	0802dba4 	.word	0x0802dba4

08008bf4 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8008bf4:	4770      	bx	lr

08008bf6 <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 8008bf6:	3804      	subs	r0, #4
 8008bf8:	4770      	bx	lr

08008bfa <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8008bfa:	4770      	bx	lr

08008bfc <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8008bfc:	4770      	bx	lr

08008bfe <_ZN21Shutting_OffPresenterD0Ev>:
 8008bfe:	b510      	push	{r4, lr}
 8008c00:	2110      	movs	r1, #16
 8008c02:	4604      	mov	r4, r0
 8008c04:	f020 fcb3 	bl	802956e <_ZdlPvj>
 8008c08:	4620      	mov	r0, r4
 8008c0a:	bd10      	pop	{r4, pc}

08008c0c <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8008c0c:	f1a0 0004 	sub.w	r0, r0, #4
 8008c10:	e7f5      	b.n	8008bfe <_ZN21Shutting_OffPresenterD0Ev>

08008c12 <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 8008c12:	4770      	bx	lr

08008c14 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 8008c14:	b510      	push	{r4, lr}
 8008c16:	2200      	movs	r2, #0
 8008c18:	6082      	str	r2, [r0, #8]
    : view(v)
 8008c1a:	4a04      	ldr	r2, [pc, #16]	; (8008c2c <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8008c1c:	60c1      	str	r1, [r0, #12]
 8008c1e:	f102 0408 	add.w	r4, r2, #8
 8008c22:	3224      	adds	r2, #36	; 0x24
 8008c24:	6004      	str	r4, [r0, #0]
 8008c26:	6042      	str	r2, [r0, #4]
}
 8008c28:	bd10      	pop	{r4, pc}
 8008c2a:	bf00      	nop
 8008c2c:	0802e13c 	.word	0x0802e13c

08008c30 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 8008c30:	4770      	bx	lr
	...

08008c34 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 8008c34:	b510      	push	{r4, lr}
 8008c36:	4b03      	ldr	r3, [pc, #12]	; (8008c44 <_ZN16Shutting_OffViewD1Ev+0x10>)
 8008c38:	6003      	str	r3, [r0, #0]
 8008c3a:	4604      	mov	r4, r0
 8008c3c:	f7ff f90e 	bl	8007e5c <_ZN20Shutting_OffViewBaseD1Ev>
 8008c40:	4620      	mov	r0, r4
 8008c42:	bd10      	pop	{r4, pc}
 8008c44:	0802e174 	.word	0x0802e174

08008c48 <_ZN16Shutting_OffViewD0Ev>:
 8008c48:	b510      	push	{r4, lr}
 8008c4a:	4604      	mov	r4, r0
 8008c4c:	f7ff fff2 	bl	8008c34 <_ZN16Shutting_OffViewD1Ev>
 8008c50:	4620      	mov	r0, r4
 8008c52:	2198      	movs	r1, #152	; 0x98
 8008c54:	f020 fc8b 	bl	802956e <_ZdlPvj>
 8008c58:	4620      	mov	r0, r4
 8008c5a:	bd10      	pop	{r4, pc}

08008c5c <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8008c5c:	b510      	push	{r4, lr}
 8008c5e:	4604      	mov	r4, r0
 8008c60:	f7ff f906 	bl	8007e70 <_ZN20Shutting_OffViewBaseC1Ev>
 8008c64:	4b01      	ldr	r3, [pc, #4]	; (8008c6c <_ZN16Shutting_OffViewC1Ev+0x10>)
 8008c66:	6023      	str	r3, [r4, #0]
}
 8008c68:	4620      	mov	r0, r4
 8008c6a:	bd10      	pop	{r4, pc}
 8008c6c:	0802e174 	.word	0x0802e174

08008c70 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8008c70:	f7ff b8f5 	b.w	8007e5e <_ZN20Shutting_OffViewBase11setupScreenEv>

08008c74 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8008c74:	20f0      	movs	r0, #240	; 0xf0
 8008c76:	4770      	bx	lr

08008c78 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8008c78:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8008c7c:	4770      	bx	lr
 8008c7e:	bf00      	nop

08008c80 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8008c80:	2029      	movs	r0, #41	; 0x29
 8008c82:	f7f8 bf2f 	b.w	8001ae4 <LCD_IO_WriteReg>
 8008c86:	bf00      	nop

08008c88 <ili9341_DisplayOff>:
 8008c88:	2028      	movs	r0, #40	; 0x28
 8008c8a:	f7f8 bf2b 	b.w	8001ae4 <LCD_IO_WriteReg>
 8008c8e:	bf00      	nop

08008c90 <ili9341_Init>:
{
 8008c90:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008c92:	f7f8 feed 	bl	8001a70 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8008c96:	20ca      	movs	r0, #202	; 0xca
 8008c98:	f7f8 ff24 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c9c:	20c3      	movs	r0, #195	; 0xc3
 8008c9e:	f7f8 fef7 	bl	8001a90 <LCD_IO_WriteData>
 8008ca2:	2008      	movs	r0, #8
 8008ca4:	f7f8 fef4 	bl	8001a90 <LCD_IO_WriteData>
 8008ca8:	2050      	movs	r0, #80	; 0x50
 8008caa:	f7f8 fef1 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cae:	20cf      	movs	r0, #207	; 0xcf
 8008cb0:	f7f8 ff18 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008cb4:	2000      	movs	r0, #0
 8008cb6:	f7f8 feeb 	bl	8001a90 <LCD_IO_WriteData>
 8008cba:	20c1      	movs	r0, #193	; 0xc1
 8008cbc:	f7f8 fee8 	bl	8001a90 <LCD_IO_WriteData>
 8008cc0:	2030      	movs	r0, #48	; 0x30
 8008cc2:	f7f8 fee5 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cc6:	20ed      	movs	r0, #237	; 0xed
 8008cc8:	f7f8 ff0c 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008ccc:	2064      	movs	r0, #100	; 0x64
 8008cce:	f7f8 fedf 	bl	8001a90 <LCD_IO_WriteData>
 8008cd2:	2003      	movs	r0, #3
 8008cd4:	f7f8 fedc 	bl	8001a90 <LCD_IO_WriteData>
 8008cd8:	2012      	movs	r0, #18
 8008cda:	f7f8 fed9 	bl	8001a90 <LCD_IO_WriteData>
 8008cde:	2081      	movs	r0, #129	; 0x81
 8008ce0:	f7f8 fed6 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008ce4:	20e8      	movs	r0, #232	; 0xe8
 8008ce6:	f7f8 fefd 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008cea:	2085      	movs	r0, #133	; 0x85
 8008cec:	f7f8 fed0 	bl	8001a90 <LCD_IO_WriteData>
 8008cf0:	2000      	movs	r0, #0
 8008cf2:	f7f8 fecd 	bl	8001a90 <LCD_IO_WriteData>
 8008cf6:	2078      	movs	r0, #120	; 0x78
 8008cf8:	f7f8 feca 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cfc:	20cb      	movs	r0, #203	; 0xcb
 8008cfe:	f7f8 fef1 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d02:	2039      	movs	r0, #57	; 0x39
 8008d04:	f7f8 fec4 	bl	8001a90 <LCD_IO_WriteData>
 8008d08:	202c      	movs	r0, #44	; 0x2c
 8008d0a:	f7f8 fec1 	bl	8001a90 <LCD_IO_WriteData>
 8008d0e:	2000      	movs	r0, #0
 8008d10:	f7f8 febe 	bl	8001a90 <LCD_IO_WriteData>
 8008d14:	2034      	movs	r0, #52	; 0x34
 8008d16:	f7f8 febb 	bl	8001a90 <LCD_IO_WriteData>
 8008d1a:	2002      	movs	r0, #2
 8008d1c:	f7f8 feb8 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d20:	20f7      	movs	r0, #247	; 0xf7
 8008d22:	f7f8 fedf 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d26:	2020      	movs	r0, #32
 8008d28:	f7f8 feb2 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d2c:	20ea      	movs	r0, #234	; 0xea
 8008d2e:	f7f8 fed9 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d32:	2000      	movs	r0, #0
 8008d34:	f7f8 feac 	bl	8001a90 <LCD_IO_WriteData>
 8008d38:	2000      	movs	r0, #0
 8008d3a:	f7f8 fea9 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d3e:	20b1      	movs	r0, #177	; 0xb1
 8008d40:	f7f8 fed0 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d44:	2000      	movs	r0, #0
 8008d46:	f7f8 fea3 	bl	8001a90 <LCD_IO_WriteData>
 8008d4a:	201b      	movs	r0, #27
 8008d4c:	f7f8 fea0 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d50:	20b6      	movs	r0, #182	; 0xb6
 8008d52:	f7f8 fec7 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d56:	200a      	movs	r0, #10
 8008d58:	f7f8 fe9a 	bl	8001a90 <LCD_IO_WriteData>
 8008d5c:	20a2      	movs	r0, #162	; 0xa2
 8008d5e:	f7f8 fe97 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d62:	20c0      	movs	r0, #192	; 0xc0
 8008d64:	f7f8 febe 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d68:	2010      	movs	r0, #16
 8008d6a:	f7f8 fe91 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d6e:	20c1      	movs	r0, #193	; 0xc1
 8008d70:	f7f8 feb8 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d74:	2010      	movs	r0, #16
 8008d76:	f7f8 fe8b 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d7a:	20c5      	movs	r0, #197	; 0xc5
 8008d7c:	f7f8 feb2 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d80:	2045      	movs	r0, #69	; 0x45
 8008d82:	f7f8 fe85 	bl	8001a90 <LCD_IO_WriteData>
 8008d86:	2015      	movs	r0, #21
 8008d88:	f7f8 fe82 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d8c:	20c7      	movs	r0, #199	; 0xc7
 8008d8e:	f7f8 fea9 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d92:	2090      	movs	r0, #144	; 0x90
 8008d94:	f7f8 fe7c 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d98:	2036      	movs	r0, #54	; 0x36
 8008d9a:	f7f8 fea3 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d9e:	20c8      	movs	r0, #200	; 0xc8
 8008da0:	f7f8 fe76 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008da4:	20f2      	movs	r0, #242	; 0xf2
 8008da6:	f7f8 fe9d 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008daa:	2000      	movs	r0, #0
 8008dac:	f7f8 fe70 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008db0:	20b0      	movs	r0, #176	; 0xb0
 8008db2:	f7f8 fe97 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008db6:	20c2      	movs	r0, #194	; 0xc2
 8008db8:	f7f8 fe6a 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008dbc:	20b6      	movs	r0, #182	; 0xb6
 8008dbe:	f7f8 fe91 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008dc2:	200a      	movs	r0, #10
 8008dc4:	f7f8 fe64 	bl	8001a90 <LCD_IO_WriteData>
 8008dc8:	20a7      	movs	r0, #167	; 0xa7
 8008dca:	f7f8 fe61 	bl	8001a90 <LCD_IO_WriteData>
 8008dce:	2027      	movs	r0, #39	; 0x27
 8008dd0:	f7f8 fe5e 	bl	8001a90 <LCD_IO_WriteData>
 8008dd4:	2004      	movs	r0, #4
 8008dd6:	f7f8 fe5b 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008dda:	202a      	movs	r0, #42	; 0x2a
 8008ddc:	f7f8 fe82 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008de0:	2000      	movs	r0, #0
 8008de2:	f7f8 fe55 	bl	8001a90 <LCD_IO_WriteData>
 8008de6:	2000      	movs	r0, #0
 8008de8:	f7f8 fe52 	bl	8001a90 <LCD_IO_WriteData>
 8008dec:	2000      	movs	r0, #0
 8008dee:	f7f8 fe4f 	bl	8001a90 <LCD_IO_WriteData>
 8008df2:	20ef      	movs	r0, #239	; 0xef
 8008df4:	f7f8 fe4c 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008df8:	202b      	movs	r0, #43	; 0x2b
 8008dfa:	f7f8 fe73 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008dfe:	2000      	movs	r0, #0
 8008e00:	f7f8 fe46 	bl	8001a90 <LCD_IO_WriteData>
 8008e04:	2000      	movs	r0, #0
 8008e06:	f7f8 fe43 	bl	8001a90 <LCD_IO_WriteData>
 8008e0a:	2001      	movs	r0, #1
 8008e0c:	f7f8 fe40 	bl	8001a90 <LCD_IO_WriteData>
 8008e10:	203f      	movs	r0, #63	; 0x3f
 8008e12:	f7f8 fe3d 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008e16:	20f6      	movs	r0, #246	; 0xf6
 8008e18:	f7f8 fe64 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008e1c:	2001      	movs	r0, #1
 8008e1e:	f7f8 fe37 	bl	8001a90 <LCD_IO_WriteData>
 8008e22:	2000      	movs	r0, #0
 8008e24:	f7f8 fe34 	bl	8001a90 <LCD_IO_WriteData>
 8008e28:	2006      	movs	r0, #6
 8008e2a:	f7f8 fe31 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008e2e:	202c      	movs	r0, #44	; 0x2c
 8008e30:	f7f8 fe58 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008e34:	20c8      	movs	r0, #200	; 0xc8
 8008e36:	f7f8 febd 	bl	8001bb4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008e3a:	2026      	movs	r0, #38	; 0x26
 8008e3c:	f7f8 fe52 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008e40:	2001      	movs	r0, #1
 8008e42:	f7f8 fe25 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008e46:	20e0      	movs	r0, #224	; 0xe0
 8008e48:	f7f8 fe4c 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008e4c:	200f      	movs	r0, #15
 8008e4e:	f7f8 fe1f 	bl	8001a90 <LCD_IO_WriteData>
 8008e52:	2029      	movs	r0, #41	; 0x29
 8008e54:	f7f8 fe1c 	bl	8001a90 <LCD_IO_WriteData>
 8008e58:	2024      	movs	r0, #36	; 0x24
 8008e5a:	f7f8 fe19 	bl	8001a90 <LCD_IO_WriteData>
 8008e5e:	200c      	movs	r0, #12
 8008e60:	f7f8 fe16 	bl	8001a90 <LCD_IO_WriteData>
 8008e64:	200e      	movs	r0, #14
 8008e66:	f7f8 fe13 	bl	8001a90 <LCD_IO_WriteData>
 8008e6a:	2009      	movs	r0, #9
 8008e6c:	f7f8 fe10 	bl	8001a90 <LCD_IO_WriteData>
 8008e70:	204e      	movs	r0, #78	; 0x4e
 8008e72:	f7f8 fe0d 	bl	8001a90 <LCD_IO_WriteData>
 8008e76:	2078      	movs	r0, #120	; 0x78
 8008e78:	f7f8 fe0a 	bl	8001a90 <LCD_IO_WriteData>
 8008e7c:	203c      	movs	r0, #60	; 0x3c
 8008e7e:	f7f8 fe07 	bl	8001a90 <LCD_IO_WriteData>
 8008e82:	2009      	movs	r0, #9
 8008e84:	f7f8 fe04 	bl	8001a90 <LCD_IO_WriteData>
 8008e88:	2013      	movs	r0, #19
 8008e8a:	f7f8 fe01 	bl	8001a90 <LCD_IO_WriteData>
 8008e8e:	2005      	movs	r0, #5
 8008e90:	f7f8 fdfe 	bl	8001a90 <LCD_IO_WriteData>
 8008e94:	2017      	movs	r0, #23
 8008e96:	f7f8 fdfb 	bl	8001a90 <LCD_IO_WriteData>
 8008e9a:	2011      	movs	r0, #17
 8008e9c:	f7f8 fdf8 	bl	8001a90 <LCD_IO_WriteData>
 8008ea0:	2000      	movs	r0, #0
 8008ea2:	f7f8 fdf5 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008ea6:	20e1      	movs	r0, #225	; 0xe1
 8008ea8:	f7f8 fe1c 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008eac:	2000      	movs	r0, #0
 8008eae:	f7f8 fdef 	bl	8001a90 <LCD_IO_WriteData>
 8008eb2:	2016      	movs	r0, #22
 8008eb4:	f7f8 fdec 	bl	8001a90 <LCD_IO_WriteData>
 8008eb8:	201b      	movs	r0, #27
 8008eba:	f7f8 fde9 	bl	8001a90 <LCD_IO_WriteData>
 8008ebe:	2004      	movs	r0, #4
 8008ec0:	f7f8 fde6 	bl	8001a90 <LCD_IO_WriteData>
 8008ec4:	2011      	movs	r0, #17
 8008ec6:	f7f8 fde3 	bl	8001a90 <LCD_IO_WriteData>
 8008eca:	2007      	movs	r0, #7
 8008ecc:	f7f8 fde0 	bl	8001a90 <LCD_IO_WriteData>
 8008ed0:	2031      	movs	r0, #49	; 0x31
 8008ed2:	f7f8 fddd 	bl	8001a90 <LCD_IO_WriteData>
 8008ed6:	2033      	movs	r0, #51	; 0x33
 8008ed8:	f7f8 fdda 	bl	8001a90 <LCD_IO_WriteData>
 8008edc:	2042      	movs	r0, #66	; 0x42
 8008ede:	f7f8 fdd7 	bl	8001a90 <LCD_IO_WriteData>
 8008ee2:	2005      	movs	r0, #5
 8008ee4:	f7f8 fdd4 	bl	8001a90 <LCD_IO_WriteData>
 8008ee8:	200c      	movs	r0, #12
 8008eea:	f7f8 fdd1 	bl	8001a90 <LCD_IO_WriteData>
 8008eee:	200a      	movs	r0, #10
 8008ef0:	f7f8 fdce 	bl	8001a90 <LCD_IO_WriteData>
 8008ef4:	2028      	movs	r0, #40	; 0x28
 8008ef6:	f7f8 fdcb 	bl	8001a90 <LCD_IO_WriteData>
 8008efa:	202f      	movs	r0, #47	; 0x2f
 8008efc:	f7f8 fdc8 	bl	8001a90 <LCD_IO_WriteData>
 8008f00:	200f      	movs	r0, #15
 8008f02:	f7f8 fdc5 	bl	8001a90 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008f06:	2011      	movs	r0, #17
 8008f08:	f7f8 fdec 	bl	8001ae4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008f0c:	20c8      	movs	r0, #200	; 0xc8
 8008f0e:	f7f8 fe51 	bl	8001bb4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008f12:	2029      	movs	r0, #41	; 0x29
 8008f14:	f7f8 fde6 	bl	8001ae4 <LCD_IO_WriteReg>
}
 8008f18:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8008f1c:	202c      	movs	r0, #44	; 0x2c
 8008f1e:	f7f8 bde1 	b.w	8001ae4 <LCD_IO_WriteReg>
 8008f22:	bf00      	nop

08008f24 <ili9341_ReadID>:
{
 8008f24:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008f26:	f7f8 fda3 	bl	8001a70 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8008f2a:	2103      	movs	r1, #3
 8008f2c:	20d3      	movs	r0, #211	; 0xd3
 8008f2e:	f7f8 fe03 	bl	8001b38 <LCD_IO_ReadData>
}
 8008f32:	b280      	uxth	r0, r0
 8008f34:	bd08      	pop	{r3, pc}
 8008f36:	bf00      	nop

08008f38 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8008f38:	221f      	movs	r2, #31
 8008f3a:	210b      	movs	r1, #11
 8008f3c:	b2c0      	uxtb	r0, r0
 8008f3e:	f7f8 bd49 	b.w	80019d4 <IOE_Write>
 8008f42:	bf00      	nop

08008f44 <stmpe811_Reset>:
{
 8008f44:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008f46:	b2c4      	uxtb	r4, r0
 8008f48:	2202      	movs	r2, #2
 8008f4a:	2103      	movs	r1, #3
 8008f4c:	4620      	mov	r0, r4
 8008f4e:	f7f8 fd41 	bl	80019d4 <IOE_Write>
  IOE_Delay(10); 
 8008f52:	200a      	movs	r0, #10
 8008f54:	f7f8 fd8a 	bl	8001a6c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008f58:	4620      	mov	r0, r4
 8008f5a:	2200      	movs	r2, #0
 8008f5c:	2103      	movs	r1, #3
 8008f5e:	f7f8 fd39 	bl	80019d4 <IOE_Write>
}
 8008f62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008f66:	2002      	movs	r0, #2
 8008f68:	f7f8 bd80 	b.w	8001a6c <IOE_Delay>

08008f6c <stmpe811_ReadID>:
{
 8008f6c:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008f6e:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8008f70:	f7f8 fd2c 	bl	80019cc <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008f74:	2100      	movs	r1, #0
 8008f76:	4620      	mov	r0, r4
 8008f78:	f7f8 fd44 	bl	8001a04 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008f7c:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008f7e:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008f80:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008f82:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008f84:	f7f8 fd3e 	bl	8001a04 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008f88:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8008f8c:	b280      	uxth	r0, r0
 8008f8e:	bd10      	pop	{r4, pc}

08008f90 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8008f90:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8008f92:	b2c4      	uxtb	r4, r0
 8008f94:	2140      	movs	r1, #64	; 0x40
 8008f96:	4620      	mov	r0, r4
 8008f98:	f7f8 fd34 	bl	8001a04 <IOE_Read>
  
  if(state > 0)
 8008f9c:	0603      	lsls	r3, r0, #24
 8008f9e:	d40b      	bmi.n	8008fb8 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008fa0:	4620      	mov	r0, r4
 8008fa2:	2201      	movs	r2, #1
 8008fa4:	214b      	movs	r1, #75	; 0x4b
 8008fa6:	f7f8 fd15 	bl	80019d4 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008faa:	4620      	mov	r0, r4
 8008fac:	2200      	movs	r2, #0
 8008fae:	214b      	movs	r1, #75	; 0x4b
 8008fb0:	f7f8 fd10 	bl	80019d4 <IOE_Write>
  uint8_t ret = 0;
 8008fb4:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8008fb6:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8008fb8:	214c      	movs	r1, #76	; 0x4c
 8008fba:	4620      	mov	r0, r4
 8008fbc:	f7f8 fd22 	bl	8001a04 <IOE_Read>
      ret = 1;
 8008fc0:	3800      	subs	r0, #0
 8008fc2:	bf18      	it	ne
 8008fc4:	2001      	movne	r0, #1
}
 8008fc6:	bd10      	pop	{r4, pc}

08008fc8 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8008fc8:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8008fca:	210b      	movs	r1, #11
 8008fcc:	b2c0      	uxtb	r0, r0
 8008fce:	f7f8 fd19 	bl	8001a04 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8008fd2:	f000 001f 	and.w	r0, r0, #31
 8008fd6:	bd08      	pop	{r3, pc}

08008fd8 <stmpe811_TS_GetXY>:
{
 8008fd8:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008fda:	2304      	movs	r3, #4
{
 8008fdc:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008fde:	b2c4      	uxtb	r4, r0
{
 8008fe0:	4615      	mov	r5, r2
 8008fe2:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008fe4:	eb0d 0203 	add.w	r2, sp, r3
 8008fe8:	21d7      	movs	r1, #215	; 0xd7
 8008fea:	4620      	mov	r0, r4
 8008fec:	f7f8 fd26 	bl	8001a3c <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8008ff0:	9b01      	ldr	r3, [sp, #4]
 8008ff2:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008ff4:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008ff6:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008ffa:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008ffc:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008ffe:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009000:	2201      	movs	r2, #1
 8009002:	214b      	movs	r1, #75	; 0x4b
 8009004:	f7f8 fce6 	bl	80019d4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009008:	2200      	movs	r2, #0
 800900a:	214b      	movs	r1, #75	; 0x4b
 800900c:	4620      	mov	r0, r4
 800900e:	f7f8 fce1 	bl	80019d4 <IOE_Write>
}
 8009012:	b002      	add	sp, #8
 8009014:	bd70      	pop	{r4, r5, r6, pc}
 8009016:	bf00      	nop

08009018 <stmpe811_TS_Start>:
{
 8009018:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800901a:	b2c4      	uxtb	r4, r0
 800901c:	2104      	movs	r1, #4
 800901e:	4620      	mov	r0, r4
 8009020:	f7f8 fcf0 	bl	8001a04 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009024:	2104      	movs	r1, #4
 8009026:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800902a:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800902c:	4620      	mov	r0, r4
 800902e:	f7f8 fcd1 	bl	80019d4 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8009032:	2117      	movs	r1, #23
 8009034:	4620      	mov	r0, r4
 8009036:	f7f8 fce5 	bl	8001a04 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800903a:	2117      	movs	r1, #23
 800903c:	f000 020f 	and.w	r2, r0, #15
 8009040:	4620      	mov	r0, r4
 8009042:	f7f8 fcc7 	bl	80019d4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009046:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 800904a:	4620      	mov	r0, r4
 800904c:	2104      	movs	r1, #4
 800904e:	f7f8 fcc1 	bl	80019d4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8009052:	2249      	movs	r2, #73	; 0x49
 8009054:	2120      	movs	r1, #32
 8009056:	4620      	mov	r0, r4
 8009058:	f7f8 fcbc 	bl	80019d4 <IOE_Write>
  IOE_Delay(2); 
 800905c:	2002      	movs	r0, #2
 800905e:	f7f8 fd05 	bl	8001a6c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8009062:	4620      	mov	r0, r4
 8009064:	2201      	movs	r2, #1
 8009066:	2121      	movs	r1, #33	; 0x21
 8009068:	f7f8 fcb4 	bl	80019d4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800906c:	4620      	mov	r0, r4
 800906e:	229a      	movs	r2, #154	; 0x9a
 8009070:	2141      	movs	r1, #65	; 0x41
 8009072:	f7f8 fcaf 	bl	80019d4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8009076:	4620      	mov	r0, r4
 8009078:	2201      	movs	r2, #1
 800907a:	214a      	movs	r1, #74	; 0x4a
 800907c:	f7f8 fcaa 	bl	80019d4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009080:	4620      	mov	r0, r4
 8009082:	2201      	movs	r2, #1
 8009084:	214b      	movs	r1, #75	; 0x4b
 8009086:	f7f8 fca5 	bl	80019d4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800908a:	4620      	mov	r0, r4
 800908c:	2200      	movs	r2, #0
 800908e:	214b      	movs	r1, #75	; 0x4b
 8009090:	f7f8 fca0 	bl	80019d4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8009094:	4620      	mov	r0, r4
 8009096:	2201      	movs	r2, #1
 8009098:	2156      	movs	r1, #86	; 0x56
 800909a:	f7f8 fc9b 	bl	80019d4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800909e:	4620      	mov	r0, r4
 80090a0:	2201      	movs	r2, #1
 80090a2:	2158      	movs	r1, #88	; 0x58
 80090a4:	f7f8 fc96 	bl	80019d4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 80090a8:	4620      	mov	r0, r4
 80090aa:	2201      	movs	r2, #1
 80090ac:	2140      	movs	r1, #64	; 0x40
 80090ae:	f7f8 fc91 	bl	80019d4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 80090b2:	4620      	mov	r0, r4
 80090b4:	22ff      	movs	r2, #255	; 0xff
 80090b6:	210b      	movs	r1, #11
 80090b8:	f7f8 fc8c 	bl	80019d4 <IOE_Write>
}
 80090bc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 80090c0:	2002      	movs	r0, #2
 80090c2:	f7f8 bcd3 	b.w	8001a6c <IOE_Delay>
 80090c6:	bf00      	nop

080090c8 <stmpe811_TS_DisableIT>:
{
 80090c8:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80090ca:	b2c4      	uxtb	r4, r0
 80090cc:	2109      	movs	r1, #9
 80090ce:	4620      	mov	r0, r4
 80090d0:	f7f8 fc98 	bl	8001a04 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80090d4:	2109      	movs	r1, #9
 80090d6:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 80090da:	4620      	mov	r0, r4
 80090dc:	f7f8 fc7a 	bl	80019d4 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80090e0:	210a      	movs	r1, #10
 80090e2:	4620      	mov	r0, r4
 80090e4:	f7f8 fc8e 	bl	8001a04 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80090e8:	210a      	movs	r1, #10
 80090ea:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 80090ee:	4620      	mov	r0, r4
}
 80090f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80090f4:	f7f8 bc6e 	b.w	80019d4 <IOE_Write>

080090f8 <stmpe811_TS_EnableIT>:
{
 80090f8:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80090fa:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 80090fc:	f7f8 fc68 	bl	80019d0 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009100:	210a      	movs	r1, #10
 8009102:	4620      	mov	r0, r4
 8009104:	f7f8 fc7e 	bl	8001a04 <IOE_Read>
  tmp |= Source; 
 8009108:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800910c:	b2c2      	uxtb	r2, r0
 800910e:	210a      	movs	r1, #10
 8009110:	4620      	mov	r0, r4
 8009112:	f7f8 fc5f 	bl	80019d4 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8009116:	2109      	movs	r1, #9
 8009118:	4620      	mov	r0, r4
 800911a:	f7f8 fc73 	bl	8001a04 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800911e:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8009122:	b2c2      	uxtb	r2, r0
 8009124:	2109      	movs	r1, #9
 8009126:	4620      	mov	r0, r4
}
 8009128:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800912c:	f7f8 bc52 	b.w	80019d4 <IOE_Write>

08009130 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8009130:	4a10      	ldr	r2, [pc, #64]	; (8009174 <stmpe811_Init+0x44>)
 8009132:	7813      	ldrb	r3, [r2, #0]
 8009134:	4298      	cmp	r0, r3
 8009136:	d004      	beq.n	8009142 <stmpe811_Init+0x12>
 8009138:	7851      	ldrb	r1, [r2, #1]
 800913a:	4288      	cmp	r0, r1
 800913c:	d001      	beq.n	8009142 <stmpe811_Init+0x12>
 800913e:	b113      	cbz	r3, 8009146 <stmpe811_Init+0x16>
 8009140:	b101      	cbz	r1, 8009144 <stmpe811_Init+0x14>
 8009142:	4770      	bx	lr
 8009144:	2301      	movs	r3, #1
{
 8009146:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 8009148:	b2c4      	uxtb	r4, r0
 800914a:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800914c:	f7f8 fc3e 	bl	80019cc <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8009150:	2202      	movs	r2, #2
 8009152:	2103      	movs	r1, #3
 8009154:	4620      	mov	r0, r4
 8009156:	f7f8 fc3d 	bl	80019d4 <IOE_Write>
  IOE_Delay(10); 
 800915a:	200a      	movs	r0, #10
 800915c:	f7f8 fc86 	bl	8001a6c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009160:	4620      	mov	r0, r4
 8009162:	2200      	movs	r2, #0
 8009164:	2103      	movs	r1, #3
 8009166:	f7f8 fc35 	bl	80019d4 <IOE_Write>
}
 800916a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800916e:	2002      	movs	r0, #2
 8009170:	f7f8 bc7c 	b.w	8001a6c <IOE_Delay>
 8009174:	20002128 	.word	0x20002128

08009178 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009178:	4b05      	ldr	r3, [pc, #20]	; (8009190 <SystemInit+0x18>)
 800917a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800917e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009182:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8009186:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800918a:	6099      	str	r1, [r3, #8]
#endif
}
 800918c:	4770      	bx	lr
 800918e:	bf00      	nop
 8009190:	e000ed00 	.word	0xe000ed00

08009194 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8009194:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009196:	4b0b      	ldr	r3, [pc, #44]	; (80091c4 <HAL_Init+0x30>)
 8009198:	681a      	ldr	r2, [r3, #0]
 800919a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800919e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80091a0:	681a      	ldr	r2, [r3, #0]
 80091a2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80091a6:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80091a8:	681a      	ldr	r2, [r3, #0]
 80091aa:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80091ae:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80091b0:	2003      	movs	r0, #3
 80091b2:	f000 f82d 	bl	8009210 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80091b6:	2000      	movs	r0, #0
 80091b8:	f7f9 f930 	bl	800241c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80091bc:	f7f8 fe72 	bl	8001ea4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 80091c0:	2000      	movs	r0, #0
 80091c2:	bd08      	pop	{r3, pc}
 80091c4:	40023c00 	.word	0x40023c00

080091c8 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80091c8:	4a03      	ldr	r2, [pc, #12]	; (80091d8 <HAL_IncTick+0x10>)
 80091ca:	4b04      	ldr	r3, [pc, #16]	; (80091dc <HAL_IncTick+0x14>)
 80091cc:	6811      	ldr	r1, [r2, #0]
 80091ce:	781b      	ldrb	r3, [r3, #0]
 80091d0:	440b      	add	r3, r1
 80091d2:	6013      	str	r3, [r2, #0]
}
 80091d4:	4770      	bx	lr
 80091d6:	bf00      	nop
 80091d8:	2000212c 	.word	0x2000212c
 80091dc:	2000007c 	.word	0x2000007c

080091e0 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80091e0:	4b01      	ldr	r3, [pc, #4]	; (80091e8 <HAL_GetTick+0x8>)
 80091e2:	6818      	ldr	r0, [r3, #0]
}
 80091e4:	4770      	bx	lr
 80091e6:	bf00      	nop
 80091e8:	2000212c 	.word	0x2000212c

080091ec <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80091ec:	b538      	push	{r3, r4, r5, lr}
 80091ee:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80091f0:	f7ff fff6 	bl	80091e0 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80091f4:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 80091f6:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 80091f8:	d002      	beq.n	8009200 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 80091fa:	4b04      	ldr	r3, [pc, #16]	; (800920c <HAL_Delay+0x20>)
 80091fc:	781b      	ldrb	r3, [r3, #0]
 80091fe:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8009200:	f7ff ffee 	bl	80091e0 <HAL_GetTick>
 8009204:	1b43      	subs	r3, r0, r5
 8009206:	42a3      	cmp	r3, r4
 8009208:	d3fa      	bcc.n	8009200 <HAL_Delay+0x14>
  {
  }
}
 800920a:	bd38      	pop	{r3, r4, r5, pc}
 800920c:	2000007c 	.word	0x2000007c

08009210 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8009210:	4907      	ldr	r1, [pc, #28]	; (8009230 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8009212:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009214:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009216:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800921a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800921e:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8009220:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8009222:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8009226:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800922a:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800922c:	4770      	bx	lr
 800922e:	bf00      	nop
 8009230:	e000ed00 	.word	0xe000ed00

08009234 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8009234:	4b1c      	ldr	r3, [pc, #112]	; (80092a8 <HAL_NVIC_SetPriority+0x74>)
 8009236:	68db      	ldr	r3, [r3, #12]
 8009238:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800923c:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800923e:	f1c3 0e07 	rsb	lr, r3, #7
 8009242:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009246:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800924a:	bf28      	it	cs
 800924c:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009250:	f1bc 0f06 	cmp.w	ip, #6
 8009254:	d91b      	bls.n	800928e <HAL_NVIC_SetPriority+0x5a>
 8009256:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8009258:	f04f 3cff 	mov.w	ip, #4294967295
 800925c:	fa0c fc03 	lsl.w	ip, ip, r3
 8009260:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009264:	f04f 3cff 	mov.w	ip, #4294967295
 8009268:	fa0c fc0e 	lsl.w	ip, ip, lr
 800926c:	ea21 010c 	bic.w	r1, r1, ip
 8009270:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8009272:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009274:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8009278:	db0c      	blt.n	8009294 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800927a:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800927e:	0109      	lsls	r1, r1, #4
 8009280:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8009284:	b2c9      	uxtb	r1, r1
 8009286:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800928a:	f85d fb04 	ldr.w	pc, [sp], #4
 800928e:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009290:	4613      	mov	r3, r2
 8009292:	e7e7      	b.n	8009264 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009294:	4b05      	ldr	r3, [pc, #20]	; (80092ac <HAL_NVIC_SetPriority+0x78>)
 8009296:	f000 000f 	and.w	r0, r0, #15
 800929a:	0109      	lsls	r1, r1, #4
 800929c:	4403      	add	r3, r0
 800929e:	b2c9      	uxtb	r1, r1
 80092a0:	7619      	strb	r1, [r3, #24]
 80092a2:	f85d fb04 	ldr.w	pc, [sp], #4
 80092a6:	bf00      	nop
 80092a8:	e000ed00 	.word	0xe000ed00
 80092ac:	e000ecfc 	.word	0xe000ecfc

080092b0 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80092b0:	2800      	cmp	r0, #0
 80092b2:	db07      	blt.n	80092c4 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80092b4:	0941      	lsrs	r1, r0, #5
 80092b6:	4a04      	ldr	r2, [pc, #16]	; (80092c8 <HAL_NVIC_EnableIRQ+0x18>)
 80092b8:	f000 001f 	and.w	r0, r0, #31
 80092bc:	2301      	movs	r3, #1
 80092be:	4083      	lsls	r3, r0
 80092c0:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80092c4:	4770      	bx	lr
 80092c6:	bf00      	nop
 80092c8:	e000e100 	.word	0xe000e100

080092cc <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80092cc:	b180      	cbz	r0, 80092f0 <HAL_CRC_Init+0x24>
{
 80092ce:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80092d0:	7943      	ldrb	r3, [r0, #5]
 80092d2:	4604      	mov	r4, r0
 80092d4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80092d8:	b11b      	cbz	r3, 80092e2 <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80092da:	2301      	movs	r3, #1
 80092dc:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 80092de:	2000      	movs	r0, #0
}
 80092e0:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 80092e2:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 80092e4:	f7f8 fdfe 	bl	8001ee4 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 80092e8:	2301      	movs	r3, #1
 80092ea:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 80092ec:	2000      	movs	r0, #0
}
 80092ee:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80092f0:	2001      	movs	r0, #1
}
 80092f2:	4770      	bx	lr

080092f4 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 80092f4:	b538      	push	{r3, r4, r5, lr}
 80092f6:	4604      	mov	r4, r0
  uint32_t tmp = 0U;
  uint32_t tickstart = HAL_GetTick();
 80092f8:	f7ff ff72 	bl	80091e0 <HAL_GetTick>
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 80092fc:	2c00      	cmp	r4, #0
 80092fe:	d052      	beq.n	80093a6 <HAL_DMA_Init+0xb2>

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 8009300:	6823      	ldr	r3, [r4, #0]
  __HAL_UNLOCK(hdma);
 8009302:	2200      	movs	r2, #0
  hdma->State = HAL_DMA_STATE_BUSY;
 8009304:	2102      	movs	r1, #2
 8009306:	f884 1035 	strb.w	r1, [r4, #53]	; 0x35
  __HAL_UNLOCK(hdma);
 800930a:	f884 2034 	strb.w	r2, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 800930e:	681a      	ldr	r2, [r3, #0]
 8009310:	f022 0201 	bic.w	r2, r2, #1
 8009314:	4605      	mov	r5, r0
 8009316:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8009318:	e005      	b.n	8009326 <HAL_DMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800931a:	f7ff ff61 	bl	80091e0 <HAL_GetTick>
 800931e:	1b43      	subs	r3, r0, r5
 8009320:	2b05      	cmp	r3, #5
 8009322:	d839      	bhi.n	8009398 <HAL_DMA_Init+0xa4>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8009324:	6823      	ldr	r3, [r4, #0]
 8009326:	681a      	ldr	r2, [r3, #0]
 8009328:	07d1      	lsls	r1, r2, #31
 800932a:	d4f6      	bmi.n	800931a <HAL_DMA_Init+0x26>
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800932c:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8009330:	68e1      	ldr	r1, [r4, #12]
 8009332:	4302      	orrs	r2, r0
 8009334:	430a      	orrs	r2, r1
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8009336:	e9d4 5104 	ldrd	r5, r1, [r4, #16]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800933a:	69a0      	ldr	r0, [r4, #24]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800933c:	432a      	orrs	r2, r5
 800933e:	430a      	orrs	r2, r1
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8009340:	69e1      	ldr	r1, [r4, #28]
  tmp = hdma->Instance->CR;
 8009342:	681d      	ldr	r5, [r3, #0]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8009344:	4302      	orrs	r2, r0
 8009346:	430a      	orrs	r2, r1
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8009348:	4933      	ldr	r1, [pc, #204]	; (8009418 <HAL_DMA_Init+0x124>)
 800934a:	4029      	ands	r1, r5
          hdma->Init.Mode                | hdma->Init.Priority;
 800934c:	6a25      	ldr	r5, [r4, #32]
 800934e:	432a      	orrs	r2, r5
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8009350:	430a      	orrs	r2, r1

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8009352:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8009354:	2904      	cmp	r1, #4
 8009356:	d028      	beq.n	80093aa <HAL_DMA_Init+0xb6>
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 8009358:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 800935a:	695a      	ldr	r2, [r3, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 800935c:	f022 0207 	bic.w	r2, r2, #7

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 8009360:	4311      	orrs	r1, r2
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8009362:	b2d8      	uxtb	r0, r3
 8009364:	4a2d      	ldr	r2, [pc, #180]	; (800941c <HAL_DMA_Init+0x128>)
  hdma->Instance->FCR = tmp;
 8009366:	6159      	str	r1, [r3, #20]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8009368:	3810      	subs	r0, #16
 800936a:	fba2 5200 	umull	r5, r2, r2, r0
 800936e:	0912      	lsrs	r2, r2, #4
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8009370:	492b      	ldr	r1, [pc, #172]	; (8009420 <HAL_DMA_Init+0x12c>)
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8009372:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8009376:	5c89      	ldrb	r1, [r1, r2]
 8009378:	65e1      	str	r1, [r4, #92]	; 0x5c
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 800937a:	f023 0303 	bic.w	r3, r3, #3
  if (stream_number > 3U)
 800937e:	285f      	cmp	r0, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8009380:	bf88      	it	hi
 8009382:	3304      	addhi	r3, #4
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8009384:	223f      	movs	r2, #63	; 0x3f
 8009386:	408a      	lsls	r2, r1
 8009388:	65a3      	str	r3, [r4, #88]	; 0x58
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800938a:	2000      	movs	r0, #0
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800938c:	609a      	str	r2, [r3, #8]
  hdma->State = HAL_DMA_STATE_READY;
 800938e:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8009390:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8009392:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
}
 8009396:	bd38      	pop	{r3, r4, r5, pc}
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8009398:	2303      	movs	r3, #3
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800939a:	2220      	movs	r2, #32
 800939c:	6562      	str	r2, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800939e:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
      return HAL_TIMEOUT;
 80093a2:	4618      	mov	r0, r3
}
 80093a4:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80093a6:	2001      	movs	r0, #1
}
 80093a8:	bd38      	pop	{r3, r4, r5, pc}
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 80093aa:	e9d4 510b 	ldrd	r5, r1, [r4, #44]	; 0x2c
 80093ae:	4329      	orrs	r1, r5
 80093b0:	4311      	orrs	r1, r2
  hdma->Instance->CR = tmp;  
 80093b2:	6019      	str	r1, [r3, #0]
  tmp = hdma->Instance->FCR;
 80093b4:	6959      	ldr	r1, [r3, #20]
    tmp |= hdma->Init.FIFOThreshold;
 80093b6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 80093b8:	f021 0107 	bic.w	r1, r1, #7
 80093bc:	4311      	orrs	r1, r2
    tmp |= hdma->Init.FIFOThreshold;
 80093be:	f041 0104 	orr.w	r1, r1, #4
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 80093c2:	2d00      	cmp	r5, #0
 80093c4:	d0cd      	beq.n	8009362 <HAL_DMA_Init+0x6e>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 80093c6:	b178      	cbz	r0, 80093e8 <HAL_DMA_Init+0xf4>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 80093c8:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 80093cc:	d016      	beq.n	80093fc <HAL_DMA_Init+0x108>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 80093ce:	2a02      	cmp	r2, #2
 80093d0:	d903      	bls.n	80093da <HAL_DMA_Init+0xe6>
 80093d2:	2a03      	cmp	r2, #3
 80093d4:	d1c5      	bne.n	8009362 <HAL_DMA_Init+0x6e>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 80093d6:	01ea      	lsls	r2, r5, #7
 80093d8:	d5c3      	bpl.n	8009362 <HAL_DMA_Init+0x6e>
        hdma->State = HAL_DMA_STATE_READY;
 80093da:	2301      	movs	r3, #1
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 80093dc:	2240      	movs	r2, #64	; 0x40
 80093de:	6562      	str	r2, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 80093e0:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
        return HAL_ERROR; 
 80093e4:	4618      	mov	r0, r3
}
 80093e6:	bd38      	pop	{r3, r4, r5, pc}
    switch (tmp)
 80093e8:	2a01      	cmp	r2, #1
 80093ea:	d003      	beq.n	80093f4 <HAL_DMA_Init+0x100>
 80093ec:	f032 0202 	bics.w	r2, r2, #2
 80093f0:	d1b7      	bne.n	8009362 <HAL_DMA_Init+0x6e>
 80093f2:	e7f0      	b.n	80093d6 <HAL_DMA_Init+0xe2>
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 80093f4:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 80093f8:	d1b3      	bne.n	8009362 <HAL_DMA_Init+0x6e>
 80093fa:	e7ee      	b.n	80093da <HAL_DMA_Init+0xe6>
    switch (tmp)
 80093fc:	2a03      	cmp	r2, #3
 80093fe:	d8b0      	bhi.n	8009362 <HAL_DMA_Init+0x6e>
 8009400:	a001      	add	r0, pc, #4	; (adr r0, 8009408 <HAL_DMA_Init+0x114>)
 8009402:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8009406:	bf00      	nop
 8009408:	080093db 	.word	0x080093db
 800940c:	080093d7 	.word	0x080093d7
 8009410:	080093db 	.word	0x080093db
 8009414:	080093f5 	.word	0x080093f5
 8009418:	f010803f 	.word	0xf010803f
 800941c:	aaaaaaab 	.word	0xaaaaaaab
 8009420:	0802e1b8 	.word	0x0802e1b8

08009424 <HAL_DMA_Abort_IT>:
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8009424:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8009428:	2b02      	cmp	r3, #2
 800942a:	d003      	beq.n	8009434 <HAL_DMA_Abort_IT+0x10>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800942c:	2380      	movs	r3, #128	; 0x80
 800942e:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8009430:	2001      	movs	r0, #1
 8009432:	4770      	bx	lr
    __HAL_DMA_DISABLE(hdma);
 8009434:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8009436:	2305      	movs	r3, #5
 8009438:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 800943c:	6813      	ldr	r3, [r2, #0]
 800943e:	f023 0301 	bic.w	r3, r3, #1
  return HAL_OK;
 8009442:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8009444:	6013      	str	r3, [r2, #0]
}
 8009446:	4770      	bx	lr

08009448 <HAL_DMA_IRQHandler>:
{
 8009448:	b5f0      	push	{r4, r5, r6, r7, lr}
 800944a:	b083      	sub	sp, #12
  uint32_t timeout = SystemCoreClock / 9600U;
 800944c:	4a67      	ldr	r2, [pc, #412]	; (80095ec <HAL_DMA_IRQHandler+0x1a4>)
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800944e:	6d87      	ldr	r7, [r0, #88]	; 0x58
  uint32_t timeout = SystemCoreClock / 9600U;
 8009450:	6816      	ldr	r6, [r2, #0]
  __IO uint32_t count = 0U;
 8009452:	2300      	movs	r3, #0
 8009454:	9301      	str	r3, [sp, #4]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8009456:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
  tmpisr = regs->ISR;
 8009458:	683d      	ldr	r5, [r7, #0]
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 800945a:	2208      	movs	r2, #8
 800945c:	409a      	lsls	r2, r3
 800945e:	422a      	tst	r2, r5
{
 8009460:	4604      	mov	r4, r0
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8009462:	d003      	beq.n	800946c <HAL_DMA_IRQHandler+0x24>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 8009464:	6801      	ldr	r1, [r0, #0]
 8009466:	6808      	ldr	r0, [r1, #0]
 8009468:	0740      	lsls	r0, r0, #29
 800946a:	d478      	bmi.n	800955e <HAL_DMA_IRQHandler+0x116>
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 800946c:	2201      	movs	r2, #1
 800946e:	409a      	lsls	r2, r3
 8009470:	422a      	tst	r2, r5
 8009472:	d003      	beq.n	800947c <HAL_DMA_IRQHandler+0x34>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 8009474:	6821      	ldr	r1, [r4, #0]
 8009476:	6949      	ldr	r1, [r1, #20]
 8009478:	0608      	lsls	r0, r1, #24
 800947a:	d46a      	bmi.n	8009552 <HAL_DMA_IRQHandler+0x10a>
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 800947c:	2204      	movs	r2, #4
 800947e:	409a      	lsls	r2, r3
 8009480:	422a      	tst	r2, r5
 8009482:	d003      	beq.n	800948c <HAL_DMA_IRQHandler+0x44>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 8009484:	6821      	ldr	r1, [r4, #0]
 8009486:	6809      	ldr	r1, [r1, #0]
 8009488:	0789      	lsls	r1, r1, #30
 800948a:	d45c      	bmi.n	8009546 <HAL_DMA_IRQHandler+0xfe>
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 800948c:	2210      	movs	r2, #16
 800948e:	409a      	lsls	r2, r3
 8009490:	422a      	tst	r2, r5
 8009492:	d003      	beq.n	800949c <HAL_DMA_IRQHandler+0x54>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 8009494:	6821      	ldr	r1, [r4, #0]
 8009496:	6808      	ldr	r0, [r1, #0]
 8009498:	0700      	lsls	r0, r0, #28
 800949a:	d441      	bmi.n	8009520 <HAL_DMA_IRQHandler+0xd8>
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 800949c:	2220      	movs	r2, #32
 800949e:	409a      	lsls	r2, r3
 80094a0:	422a      	tst	r2, r5
 80094a2:	d014      	beq.n	80094ce <HAL_DMA_IRQHandler+0x86>
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 80094a4:	6821      	ldr	r1, [r4, #0]
 80094a6:	6808      	ldr	r0, [r1, #0]
 80094a8:	06c0      	lsls	r0, r0, #27
 80094aa:	d510      	bpl.n	80094ce <HAL_DMA_IRQHandler+0x86>
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 80094ac:	60ba      	str	r2, [r7, #8]
      if(HAL_DMA_STATE_ABORT == hdma->State)
 80094ae:	f894 2035 	ldrb.w	r2, [r4, #53]	; 0x35
 80094b2:	2a05      	cmp	r2, #5
 80094b4:	d063      	beq.n	800957e <HAL_DMA_IRQHandler+0x136>
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 80094b6:	680b      	ldr	r3, [r1, #0]
 80094b8:	f413 2f80 	tst.w	r3, #262144	; 0x40000
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 80094bc:	680b      	ldr	r3, [r1, #0]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 80094be:	d07e      	beq.n	80095be <HAL_DMA_IRQHandler+0x176>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 80094c0:	0319      	lsls	r1, r3, #12
 80094c2:	f140 8089 	bpl.w	80095d8 <HAL_DMA_IRQHandler+0x190>
        if(hdma->XferCpltCallback != NULL)
 80094c6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80094c8:	b10b      	cbz	r3, 80094ce <HAL_DMA_IRQHandler+0x86>
          hdma->XferCpltCallback(hdma);
 80094ca:	4620      	mov	r0, r4
 80094cc:	4798      	blx	r3
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 80094ce:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80094d0:	b323      	cbz	r3, 800951c <HAL_DMA_IRQHandler+0xd4>
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 80094d2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80094d4:	07da      	lsls	r2, r3, #31
 80094d6:	d51a      	bpl.n	800950e <HAL_DMA_IRQHandler+0xc6>
      __HAL_DMA_DISABLE(hdma);
 80094d8:	6822      	ldr	r2, [r4, #0]
  uint32_t timeout = SystemCoreClock / 9600U;
 80094da:	4945      	ldr	r1, [pc, #276]	; (80095f0 <HAL_DMA_IRQHandler+0x1a8>)
      hdma->State = HAL_DMA_STATE_ABORT;
 80094dc:	2305      	movs	r3, #5
 80094de:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
      __HAL_DMA_DISABLE(hdma);
 80094e2:	6813      	ldr	r3, [r2, #0]
  uint32_t timeout = SystemCoreClock / 9600U;
 80094e4:	fba1 1606 	umull	r1, r6, r1, r6
      __HAL_DMA_DISABLE(hdma);
 80094e8:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
 80094ec:	0ab6      	lsrs	r6, r6, #10
      __HAL_DMA_DISABLE(hdma);
 80094ee:	6013      	str	r3, [r2, #0]
 80094f0:	e002      	b.n	80094f8 <HAL_DMA_IRQHandler+0xb0>
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 80094f2:	6813      	ldr	r3, [r2, #0]
 80094f4:	07db      	lsls	r3, r3, #31
 80094f6:	d504      	bpl.n	8009502 <HAL_DMA_IRQHandler+0xba>
        if (++count > timeout)
 80094f8:	9b01      	ldr	r3, [sp, #4]
 80094fa:	3301      	adds	r3, #1
 80094fc:	42b3      	cmp	r3, r6
 80094fe:	9301      	str	r3, [sp, #4]
 8009500:	d9f7      	bls.n	80094f2 <HAL_DMA_IRQHandler+0xaa>
      hdma->State = HAL_DMA_STATE_READY;
 8009502:	2201      	movs	r2, #1
      __HAL_UNLOCK(hdma);
 8009504:	2300      	movs	r3, #0
      hdma->State = HAL_DMA_STATE_READY;
 8009506:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
      __HAL_UNLOCK(hdma);
 800950a:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    if(hdma->XferErrorCallback != NULL)
 800950e:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8009510:	b123      	cbz	r3, 800951c <HAL_DMA_IRQHandler+0xd4>
      hdma->XferErrorCallback(hdma);
 8009512:	4620      	mov	r0, r4
}
 8009514:	b003      	add	sp, #12
 8009516:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
      hdma->XferErrorCallback(hdma);
 800951a:	4718      	bx	r3
}
 800951c:	b003      	add	sp, #12
 800951e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 8009520:	60ba      	str	r2, [r7, #8]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8009522:	680a      	ldr	r2, [r1, #0]
 8009524:	f412 2f80 	tst.w	r2, #262144	; 0x40000
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8009528:	680a      	ldr	r2, [r1, #0]
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 800952a:	d122      	bne.n	8009572 <HAL_DMA_IRQHandler+0x12a>
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 800952c:	05d2      	lsls	r2, r2, #23
 800952e:	d403      	bmi.n	8009538 <HAL_DMA_IRQHandler+0xf0>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8009530:	680a      	ldr	r2, [r1, #0]
 8009532:	f022 0208 	bic.w	r2, r2, #8
 8009536:	600a      	str	r2, [r1, #0]
        if(hdma->XferHalfCpltCallback != NULL)
 8009538:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800953a:	2a00      	cmp	r2, #0
 800953c:	d0ae      	beq.n	800949c <HAL_DMA_IRQHandler+0x54>
          hdma->XferHalfCpltCallback(hdma);
 800953e:	4620      	mov	r0, r4
 8009540:	4790      	blx	r2
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8009542:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 8009544:	e7aa      	b.n	800949c <HAL_DMA_IRQHandler+0x54>
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 8009546:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8009548:	6d62      	ldr	r2, [r4, #84]	; 0x54
 800954a:	f042 0204 	orr.w	r2, r2, #4
 800954e:	6562      	str	r2, [r4, #84]	; 0x54
 8009550:	e79c      	b.n	800948c <HAL_DMA_IRQHandler+0x44>
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 8009552:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 8009554:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8009556:	f042 0202 	orr.w	r2, r2, #2
 800955a:	6562      	str	r2, [r4, #84]	; 0x54
 800955c:	e78e      	b.n	800947c <HAL_DMA_IRQHandler+0x34>
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 800955e:	6808      	ldr	r0, [r1, #0]
 8009560:	f020 0004 	bic.w	r0, r0, #4
 8009564:	6008      	str	r0, [r1, #0]
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 8009566:	60ba      	str	r2, [r7, #8]
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8009568:	6d62      	ldr	r2, [r4, #84]	; 0x54
 800956a:	f042 0201 	orr.w	r2, r2, #1
 800956e:	6562      	str	r2, [r4, #84]	; 0x54
 8009570:	e77c      	b.n	800946c <HAL_DMA_IRQHandler+0x24>
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8009572:	0311      	lsls	r1, r2, #12
 8009574:	d5e0      	bpl.n	8009538 <HAL_DMA_IRQHandler+0xf0>
          if(hdma->XferM1HalfCpltCallback != NULL)
 8009576:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8009578:	2a00      	cmp	r2, #0
 800957a:	d1e0      	bne.n	800953e <HAL_DMA_IRQHandler+0xf6>
 800957c:	e78e      	b.n	800949c <HAL_DMA_IRQHandler+0x54>
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 800957e:	680a      	ldr	r2, [r1, #0]
 8009580:	f022 0216 	bic.w	r2, r2, #22
 8009584:	600a      	str	r2, [r1, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 8009586:	694a      	ldr	r2, [r1, #20]
 8009588:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800958c:	614a      	str	r2, [r1, #20]
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800958e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009590:	b33a      	cbz	r2, 80095e2 <HAL_DMA_IRQHandler+0x19a>
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8009592:	680a      	ldr	r2, [r1, #0]
 8009594:	f022 0208 	bic.w	r2, r2, #8
 8009598:	600a      	str	r2, [r1, #0]
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 800959a:	223f      	movs	r2, #63	; 0x3f
 800959c:	fa02 f303 	lsl.w	r3, r2, r3
        if(hdma->XferAbortCallback != NULL)
 80095a0:	6d21      	ldr	r1, [r4, #80]	; 0x50
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 80095a2:	60bb      	str	r3, [r7, #8]
        hdma->State = HAL_DMA_STATE_READY;
 80095a4:	2201      	movs	r2, #1
        __HAL_UNLOCK(hdma);
 80095a6:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_READY;
 80095a8:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 80095ac:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        if(hdma->XferAbortCallback != NULL)
 80095b0:	2900      	cmp	r1, #0
 80095b2:	d0b3      	beq.n	800951c <HAL_DMA_IRQHandler+0xd4>
          hdma->XferAbortCallback(hdma);
 80095b4:	4620      	mov	r0, r4
}
 80095b6:	b003      	add	sp, #12
 80095b8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
          hdma->XferAbortCallback(hdma);
 80095bc:	4708      	bx	r1
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 80095be:	f413 7380 	ands.w	r3, r3, #256	; 0x100
 80095c2:	d180      	bne.n	80094c6 <HAL_DMA_IRQHandler+0x7e>
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 80095c4:	680a      	ldr	r2, [r1, #0]
 80095c6:	f022 0210 	bic.w	r2, r2, #16
 80095ca:	600a      	str	r2, [r1, #0]
          hdma->State = HAL_DMA_STATE_READY;
 80095cc:	2201      	movs	r2, #1
 80095ce:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
          __HAL_UNLOCK(hdma);
 80095d2:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 80095d6:	e776      	b.n	80094c6 <HAL_DMA_IRQHandler+0x7e>
          if(hdma->XferM1CpltCallback != NULL)
 80095d8:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80095da:	2b00      	cmp	r3, #0
 80095dc:	f47f af75 	bne.w	80094ca <HAL_DMA_IRQHandler+0x82>
 80095e0:	e775      	b.n	80094ce <HAL_DMA_IRQHandler+0x86>
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80095e2:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80095e4:	2a00      	cmp	r2, #0
 80095e6:	d1d4      	bne.n	8009592 <HAL_DMA_IRQHandler+0x14a>
 80095e8:	e7d7      	b.n	800959a <HAL_DMA_IRQHandler+0x152>
 80095ea:	bf00      	nop
 80095ec:	20000078 	.word	0x20000078
 80095f0:	1b4e81b5 	.word	0x1b4e81b5

080095f4 <HAL_DMA_GetState>:
  return hdma->State;
 80095f4:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 80095f8:	4770      	bx	lr
 80095fa:	bf00      	nop

080095fc <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 80095fc:	b348      	cbz	r0, 8009652 <HAL_DMA2D_Init+0x56>
{
 80095fe:	b510      	push	{r4, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8009600:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8009604:	4604      	mov	r4, r0
 8009606:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800960a:	b1eb      	cbz	r3, 8009648 <HAL_DMA2D_Init+0x4c>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800960c:	6822      	ldr	r2, [r4, #0]
 800960e:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8009610:	2302      	movs	r3, #2
 8009612:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8009616:	6813      	ldr	r3, [r2, #0]
 8009618:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800961c:	430b      	orrs	r3, r1
 800961e:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8009620:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8009622:	68a1      	ldr	r1, [r4, #8]
 8009624:	f023 0307 	bic.w	r3, r3, #7
 8009628:	430b      	orrs	r3, r1
 800962a:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800962c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800962e:	68e1      	ldr	r1, [r4, #12]
 8009630:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8009634:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8009638:	430b      	orrs	r3, r1
 800963a:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800963c:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800963e:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8009640:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8009642:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8009646:	bd10      	pop	{r4, pc}
    hdma2d->Lock = HAL_UNLOCKED;
 8009648:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 800964c:	f7f8 fc64 	bl	8001f18 <HAL_DMA2D_MspInit>
 8009650:	e7dc      	b.n	800960c <HAL_DMA2D_Init+0x10>
    return HAL_ERROR;
 8009652:	2001      	movs	r0, #1
}
 8009654:	4770      	bx	lr
 8009656:	bf00      	nop

08009658 <HAL_DMA2D_ConfigLayer>:
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8009658:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800965c:	2b01      	cmp	r3, #1
 800965e:	d04d      	beq.n	80096fc <HAL_DMA2D_ConfigLayer+0xa4>
 8009660:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8009662:	2302      	movs	r3, #2
{
 8009664:	b470      	push	{r4, r5, r6}

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8009666:	eb00 1c01 	add.w	ip, r0, r1, lsl #4
  __HAL_LOCK(hdma2d);
 800966a:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800966e:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8009672:	e9dc 2307 	ldrd	r2, r3, [ip, #28]
 8009676:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800967a:	3a09      	subs	r2, #9
 800967c:	2a01      	cmp	r2, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800967e:	f8dc 2024 	ldr.w	r2, [ip, #36]	; 0x24
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8009682:	d91d      	bls.n	80096c0 <HAL_DMA2D_ConfigLayer+0x68>
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8009684:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8009688:	b189      	cbz	r1, 80096ae <HAL_DMA2D_ConfigLayer+0x56>
  else
  {


    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800968a:	6801      	ldr	r1, [r0, #0]
 800968c:	4a1c      	ldr	r2, [pc, #112]	; (8009700 <HAL_DMA2D_ConfigLayer+0xa8>)
 800968e:	69cd      	ldr	r5, [r1, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8009690:	f8dc 4018 	ldr.w	r4, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8009694:	402a      	ands	r2, r5
 8009696:	431a      	orrs	r2, r3
 8009698:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800969a:	610c      	str	r4, [r1, #16]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800969c:	2300      	movs	r3, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800969e:	2201      	movs	r2, #1
 80096a0:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 80096a4:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

  return HAL_OK;
}
 80096a8:	bc70      	pop	{r4, r5, r6}
  return HAL_OK;
 80096aa:	4618      	mov	r0, r3
}
 80096ac:	4770      	bx	lr
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80096ae:	6801      	ldr	r1, [r0, #0]
 80096b0:	4a13      	ldr	r2, [pc, #76]	; (8009700 <HAL_DMA2D_ConfigLayer+0xa8>)
 80096b2:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 80096b4:	4022      	ands	r2, r4
 80096b6:	431a      	orrs	r2, r3
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80096b8:	6984      	ldr	r4, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80096ba:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80096bc:	618c      	str	r4, [r1, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80096be:	e7ed      	b.n	800969c <HAL_DMA2D_ConfigLayer+0x44>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80096c0:	f002 447f 	and.w	r4, r2, #4278190080	; 0xff000000
 80096c4:	4323      	orrs	r3, r4
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 80096c6:	b961      	cbnz	r1, 80096e2 <HAL_DMA2D_ConfigLayer+0x8a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80096c8:	6801      	ldr	r1, [r0, #0]
 80096ca:	4a0d      	ldr	r2, [pc, #52]	; (8009700 <HAL_DMA2D_ConfigLayer+0xa8>)
 80096cc:	6a4c      	ldr	r4, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80096ce:	6985      	ldr	r5, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80096d0:	4022      	ands	r2, r4
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80096d2:	6a44      	ldr	r4, [r0, #36]	; 0x24
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80096d4:	431a      	orrs	r2, r3
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80096d6:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80096da:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80096dc:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80096de:	628c      	str	r4, [r1, #40]	; 0x28
 80096e0:	e7dc      	b.n	800969c <HAL_DMA2D_ConfigLayer+0x44>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80096e2:	6804      	ldr	r4, [r0, #0]
 80096e4:	4906      	ldr	r1, [pc, #24]	; (8009700 <HAL_DMA2D_ConfigLayer+0xa8>)
 80096e6:	69e6      	ldr	r6, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80096e8:	f8dc 5018 	ldr.w	r5, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80096ec:	4031      	ands	r1, r6
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 80096ee:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80096f2:	4319      	orrs	r1, r3
 80096f4:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80096f6:	6125      	str	r5, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 80096f8:	6222      	str	r2, [r4, #32]
 80096fa:	e7cf      	b.n	800969c <HAL_DMA2D_ConfigLayer+0x44>
  __HAL_LOCK(hdma2d);
 80096fc:	2002      	movs	r0, #2
}
 80096fe:	4770      	bx	lr
 8009700:	00fcfff0 	.word	0x00fcfff0

08009704 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8009704:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009708:	2200      	movs	r2, #0
 800970a:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800970c:	f8df a260 	ldr.w	sl, [pc, #608]	; 8009970 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8009710:	4e90      	ldr	r6, [pc, #576]	; (8009954 <HAL_GPIO_Init+0x250>)
{
 8009712:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009714:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009716:	4689      	mov	r9, r1
 8009718:	e005      	b.n	8009726 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800971a:	3301      	adds	r3, #1
 800971c:	2b10      	cmp	r3, #16
 800971e:	f102 0202 	add.w	r2, r2, #2
 8009722:	f000 8095 	beq.w	8009850 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 8009726:	2101      	movs	r1, #1
 8009728:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800972a:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 800972e:	43a1      	bics	r1, r4
 8009730:	d1f3      	bne.n	800971a <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8009732:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8009736:	f00c 0103 	and.w	r1, ip, #3
 800973a:	1e4d      	subs	r5, r1, #1
 800973c:	2d01      	cmp	r5, #1
 800973e:	f240 808a 	bls.w	8009856 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8009742:	2903      	cmp	r1, #3
 8009744:	f040 80ca 	bne.w	80098dc <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009748:	4091      	lsls	r1, r2
 800974a:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 800974c:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800974e:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8009750:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009752:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8009756:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009758:	d0df      	beq.n	800971a <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800975a:	2100      	movs	r1, #0
 800975c:	9103      	str	r1, [sp, #12]
 800975e:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009762:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8009766:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800976a:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800976e:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8009772:	9103      	str	r1, [sp, #12]
 8009774:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8009776:	f023 0103 	bic.w	r1, r3, #3
 800977a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800977e:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009782:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8009786:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009788:	00bf      	lsls	r7, r7, #2
 800978a:	f04f 0e0f 	mov.w	lr, #15
 800978e:	fa0e fe07 	lsl.w	lr, lr, r7
 8009792:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009796:	4d70      	ldr	r5, [pc, #448]	; (8009958 <HAL_GPIO_Init+0x254>)
 8009798:	42a8      	cmp	r0, r5
 800979a:	d02e      	beq.n	80097fa <HAL_GPIO_Init+0xf6>
 800979c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80097a0:	42a8      	cmp	r0, r5
 80097a2:	f000 809f 	beq.w	80098e4 <HAL_GPIO_Init+0x1e0>
 80097a6:	4d6d      	ldr	r5, [pc, #436]	; (800995c <HAL_GPIO_Init+0x258>)
 80097a8:	42a8      	cmp	r0, r5
 80097aa:	f000 80a2 	beq.w	80098f2 <HAL_GPIO_Init+0x1ee>
 80097ae:	4d6c      	ldr	r5, [pc, #432]	; (8009960 <HAL_GPIO_Init+0x25c>)
 80097b0:	42a8      	cmp	r0, r5
 80097b2:	f000 80a5 	beq.w	8009900 <HAL_GPIO_Init+0x1fc>
 80097b6:	4d6b      	ldr	r5, [pc, #428]	; (8009964 <HAL_GPIO_Init+0x260>)
 80097b8:	42a8      	cmp	r0, r5
 80097ba:	f000 80a8 	beq.w	800990e <HAL_GPIO_Init+0x20a>
 80097be:	4d6a      	ldr	r5, [pc, #424]	; (8009968 <HAL_GPIO_Init+0x264>)
 80097c0:	42a8      	cmp	r0, r5
 80097c2:	f000 80b2 	beq.w	800992a <HAL_GPIO_Init+0x226>
 80097c6:	4d69      	ldr	r5, [pc, #420]	; (800996c <HAL_GPIO_Init+0x268>)
 80097c8:	42a8      	cmp	r0, r5
 80097ca:	f000 80b5 	beq.w	8009938 <HAL_GPIO_Init+0x234>
 80097ce:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 8009974 <HAL_GPIO_Init+0x270>
 80097d2:	4570      	cmp	r0, lr
 80097d4:	f000 80a2 	beq.w	800991c <HAL_GPIO_Init+0x218>
 80097d8:	f8df e19c 	ldr.w	lr, [pc, #412]	; 8009978 <HAL_GPIO_Init+0x274>
 80097dc:	4570      	cmp	r0, lr
 80097de:	f000 80b2 	beq.w	8009946 <HAL_GPIO_Init+0x242>
 80097e2:	f8df e198 	ldr.w	lr, [pc, #408]	; 800997c <HAL_GPIO_Init+0x278>
 80097e6:	4570      	cmp	r0, lr
 80097e8:	bf0c      	ite	eq
 80097ea:	f04f 0e09 	moveq.w	lr, #9
 80097ee:	f04f 0e0a 	movne.w	lr, #10
 80097f2:	fa0e f707 	lsl.w	r7, lr, r7
 80097f6:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 80097fa:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 80097fe:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8009800:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8009804:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8009808:	bf0c      	ite	eq
 800980a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800980c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 8009810:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 8009812:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8009814:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 8009818:	bf0c      	ite	eq
 800981a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800981c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 8009820:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 8009822:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8009824:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8009828:	bf0c      	ite	eq
 800982a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800982c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 8009830:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8009832:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8009834:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009838:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 800983c:	bf0c      	ite	eq
 800983e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009840:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009844:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 8009846:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009848:	f102 0202 	add.w	r2, r2, #2
 800984c:	f47f af6b 	bne.w	8009726 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 8009850:	b005      	add	sp, #20
 8009852:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009856:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800985a:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800985e:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009862:	2503      	movs	r5, #3
 8009864:	fa05 f802 	lsl.w	r8, r5, r2
 8009868:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800986c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8009870:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8009872:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8009874:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8009878:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800987c:	409f      	lsls	r7, r3
 800987e:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009882:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 8009886:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8009888:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800988a:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800988e:	f8d9 7008 	ldr.w	r7, [r9, #8]
 8009892:	4097      	lsls	r7, r2
 8009894:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009898:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800989a:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800989c:	fa01 f102 	lsl.w	r1, r1, r2
 80098a0:	f47f af54 	bne.w	800974c <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 80098a4:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 80098a8:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80098ac:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80098b0:	f8de 7020 	ldr.w	r7, [lr, #32]
 80098b4:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80098b6:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80098ba:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80098be:	fa07 f708 	lsl.w	r7, r7, r8
 80098c2:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80098c4:	270f      	movs	r7, #15
 80098c6:	fa07 f808 	lsl.w	r8, r7, r8
 80098ca:	9f00      	ldr	r7, [sp, #0]
 80098cc:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80098d0:	9f01      	ldr	r7, [sp, #4]
 80098d2:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 80098d6:	f8ce 7020 	str.w	r7, [lr, #32]
 80098da:	e737      	b.n	800974c <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80098dc:	2503      	movs	r5, #3
 80098de:	4095      	lsls	r5, r2
 80098e0:	43ed      	mvns	r5, r5
 80098e2:	e7d1      	b.n	8009888 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80098e4:	f04f 0e01 	mov.w	lr, #1
 80098e8:	fa0e f707 	lsl.w	r7, lr, r7
 80098ec:	ea48 0807 	orr.w	r8, r8, r7
 80098f0:	e783      	b.n	80097fa <HAL_GPIO_Init+0xf6>
 80098f2:	f04f 0e02 	mov.w	lr, #2
 80098f6:	fa0e f707 	lsl.w	r7, lr, r7
 80098fa:	ea48 0807 	orr.w	r8, r8, r7
 80098fe:	e77c      	b.n	80097fa <HAL_GPIO_Init+0xf6>
 8009900:	f04f 0e03 	mov.w	lr, #3
 8009904:	fa0e f707 	lsl.w	r7, lr, r7
 8009908:	ea48 0807 	orr.w	r8, r8, r7
 800990c:	e775      	b.n	80097fa <HAL_GPIO_Init+0xf6>
 800990e:	f04f 0e04 	mov.w	lr, #4
 8009912:	fa0e f707 	lsl.w	r7, lr, r7
 8009916:	ea48 0807 	orr.w	r8, r8, r7
 800991a:	e76e      	b.n	80097fa <HAL_GPIO_Init+0xf6>
 800991c:	f04f 0e07 	mov.w	lr, #7
 8009920:	fa0e f707 	lsl.w	r7, lr, r7
 8009924:	ea48 0807 	orr.w	r8, r8, r7
 8009928:	e767      	b.n	80097fa <HAL_GPIO_Init+0xf6>
 800992a:	f04f 0e05 	mov.w	lr, #5
 800992e:	fa0e f707 	lsl.w	r7, lr, r7
 8009932:	ea48 0807 	orr.w	r8, r8, r7
 8009936:	e760      	b.n	80097fa <HAL_GPIO_Init+0xf6>
 8009938:	f04f 0e06 	mov.w	lr, #6
 800993c:	fa0e f707 	lsl.w	r7, lr, r7
 8009940:	ea48 0807 	orr.w	r8, r8, r7
 8009944:	e759      	b.n	80097fa <HAL_GPIO_Init+0xf6>
 8009946:	f04f 0e08 	mov.w	lr, #8
 800994a:	fa0e f707 	lsl.w	r7, lr, r7
 800994e:	ea48 0807 	orr.w	r8, r8, r7
 8009952:	e752      	b.n	80097fa <HAL_GPIO_Init+0xf6>
 8009954:	40013c00 	.word	0x40013c00
 8009958:	40020000 	.word	0x40020000
 800995c:	40020800 	.word	0x40020800
 8009960:	40020c00 	.word	0x40020c00
 8009964:	40021000 	.word	0x40021000
 8009968:	40021400 	.word	0x40021400
 800996c:	40021800 	.word	0x40021800
 8009970:	40023800 	.word	0x40023800
 8009974:	40021c00 	.word	0x40021c00
 8009978:	40022000 	.word	0x40022000
 800997c:	40022400 	.word	0x40022400

08009980 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8009980:	6903      	ldr	r3, [r0, #16]
 8009982:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8009984:	bf14      	ite	ne
 8009986:	2001      	movne	r0, #1
 8009988:	2000      	moveq	r0, #0
 800998a:	4770      	bx	lr

0800998c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800998c:	b902      	cbnz	r2, 8009990 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800998e:	0409      	lsls	r1, r1, #16
 8009990:	6181      	str	r1, [r0, #24]
  }
}
 8009992:	4770      	bx	lr

08009994 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8009994:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8009996:	ea01 0203 	and.w	r2, r1, r3
 800999a:	ea21 0103 	bic.w	r1, r1, r3
 800999e:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80099a2:	6181      	str	r1, [r0, #24]
}
 80099a4:	4770      	bx	lr
 80099a6:	bf00      	nop

080099a8 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 80099a8:	4770      	bx	lr
 80099aa:	bf00      	nop

080099ac <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 80099ac:	4a04      	ldr	r2, [pc, #16]	; (80099c0 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 80099ae:	6951      	ldr	r1, [r2, #20]
 80099b0:	4201      	tst	r1, r0
 80099b2:	d100      	bne.n	80099b6 <HAL_GPIO_EXTI_IRQHandler+0xa>
 80099b4:	4770      	bx	lr
{
 80099b6:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 80099b8:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 80099ba:	f7ff fff5 	bl	80099a8 <HAL_GPIO_EXTI_Callback>
}
 80099be:	bd08      	pop	{r3, pc}
 80099c0:	40013c00 	.word	0x40013c00

080099c4 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 80099c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80099c8:	6804      	ldr	r4, [r0, #0]
{
 80099ca:	b083      	sub	sp, #12
 80099cc:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80099ce:	6823      	ldr	r3, [r4, #0]
{
 80099d0:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80099d4:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80099d8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 80099dc:	4606      	mov	r6, r0
 80099de:	468a      	mov	sl, r1
 80099e0:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80099e2:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 80099e4:	f1b9 3fff 	cmp.w	r9, #4294967295
 80099e8:	d136      	bne.n	8009a58 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80099ea:	6965      	ldr	r5, [r4, #20]
 80099ec:	07e8      	lsls	r0, r5, #31
 80099ee:	d5fc      	bpl.n	80099ea <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80099f0:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 80099f4:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 80099f6:	f1b9 3fff 	cmp.w	r9, #4294967295
 80099fa:	d003      	beq.n	8009a04 <I2C_RequestMemoryWrite+0x40>
 80099fc:	e04f      	b.n	8009a9e <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80099fe:	6961      	ldr	r1, [r4, #20]
 8009a00:	054d      	lsls	r5, r1, #21
 8009a02:	d45d      	bmi.n	8009ac0 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009a04:	6961      	ldr	r1, [r4, #20]
 8009a06:	078b      	lsls	r3, r1, #30
 8009a08:	d5f9      	bpl.n	80099fe <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009a0a:	2300      	movs	r3, #0
 8009a0c:	9301      	str	r3, [sp, #4]
 8009a0e:	6963      	ldr	r3, [r4, #20]
 8009a10:	9301      	str	r3, [sp, #4]
 8009a12:	69a3      	ldr	r3, [r4, #24]
 8009a14:	9301      	str	r3, [sp, #4]
 8009a16:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009a18:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009a1c:	f040 8088 	bne.w	8009b30 <I2C_RequestMemoryWrite+0x16c>
 8009a20:	6963      	ldr	r3, [r4, #20]
 8009a22:	061a      	lsls	r2, r3, #24
 8009a24:	d464      	bmi.n	8009af0 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009a26:	6963      	ldr	r3, [r4, #20]
 8009a28:	055b      	lsls	r3, r3, #21
 8009a2a:	d5f9      	bpl.n	8009a20 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 8009a2c:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009a2e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009a32:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009a34:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009a36:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009a38:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009a3c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009a40:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009a42:	f043 0304 	orr.w	r3, r3, #4
 8009a46:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009a48:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8009a4a:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009a4c:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009a4e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009a52:	d066      	beq.n	8009b22 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 8009a54:	2001      	movs	r0, #1
 8009a56:	e01f      	b.n	8009a98 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009a58:	6963      	ldr	r3, [r4, #20]
 8009a5a:	07d9      	lsls	r1, r3, #31
 8009a5c:	d4c8      	bmi.n	80099f0 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009a5e:	f7ff fbbf 	bl	80091e0 <HAL_GetTick>
 8009a62:	eba0 000b 	sub.w	r0, r0, fp
 8009a66:	4581      	cmp	r9, r0
 8009a68:	d304      	bcc.n	8009a74 <I2C_RequestMemoryWrite+0xb0>
 8009a6a:	f1b9 0f00 	cmp.w	r9, #0
 8009a6e:	d001      	beq.n	8009a74 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009a70:	6834      	ldr	r4, [r6, #0]
 8009a72:	e7b7      	b.n	80099e4 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009a74:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009a76:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009a78:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009a7a:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009a7e:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009a82:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009a84:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8009a86:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009a8a:	f042 0220 	orr.w	r2, r2, #32
 8009a8e:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009a90:	680b      	ldr	r3, [r1, #0]
 8009a92:	05dc      	lsls	r4, r3, #23
 8009a94:	d435      	bmi.n	8009b02 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 8009a96:	2003      	movs	r0, #3
}
 8009a98:	b003      	add	sp, #12
 8009a9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009a9e:	6963      	ldr	r3, [r4, #20]
 8009aa0:	0798      	lsls	r0, r3, #30
 8009aa2:	d4b2      	bmi.n	8009a0a <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009aa4:	6963      	ldr	r3, [r4, #20]
 8009aa6:	055a      	lsls	r2, r3, #21
 8009aa8:	d40a      	bmi.n	8009ac0 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009aaa:	f7ff fb99 	bl	80091e0 <HAL_GetTick>
 8009aae:	eba0 000b 	sub.w	r0, r0, fp
 8009ab2:	4581      	cmp	r9, r0
 8009ab4:	d34e      	bcc.n	8009b54 <I2C_RequestMemoryWrite+0x190>
 8009ab6:	f1b9 0f00 	cmp.w	r9, #0
 8009aba:	d04b      	beq.n	8009b54 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009abc:	6834      	ldr	r4, [r6, #0]
 8009abe:	e79a      	b.n	80099f6 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009ac0:	6823      	ldr	r3, [r4, #0]
 8009ac2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009ac6:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009ac8:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009aca:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8009ace:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009ad0:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009ad2:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009ad4:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009ad8:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009adc:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009ade:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009ae2:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8009ae6:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009ae8:	6433      	str	r3, [r6, #64]	; 0x40
}
 8009aea:	b003      	add	sp, #12
 8009aec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009af0:	f1b8 0f01 	cmp.w	r8, #1
 8009af4:	d109      	bne.n	8009b0a <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009af6:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 8009af8:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009afa:	6127      	str	r7, [r4, #16]
}
 8009afc:	b003      	add	sp, #12
 8009afe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8009b02:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009b06:	6433      	str	r3, [r6, #64]	; 0x40
 8009b08:	e7c5      	b.n	8009a96 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8009b0a:	0a3b      	lsrs	r3, r7, #8
 8009b0c:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009b0e:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009b12:	d12e      	bne.n	8009b72 <I2C_RequestMemoryWrite+0x1ae>
 8009b14:	6963      	ldr	r3, [r4, #20]
 8009b16:	0619      	lsls	r1, r3, #24
 8009b18:	d4ed      	bmi.n	8009af6 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b1a:	6963      	ldr	r3, [r4, #20]
 8009b1c:	055a      	lsls	r2, r3, #21
 8009b1e:	d5f9      	bpl.n	8009b14 <I2C_RequestMemoryWrite+0x150>
 8009b20:	e784      	b.n	8009a2c <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009b22:	6832      	ldr	r2, [r6, #0]
 8009b24:	6813      	ldr	r3, [r2, #0]
 8009b26:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009b2a:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009b2c:	6013      	str	r3, [r2, #0]
 8009b2e:	e7b3      	b.n	8009a98 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009b30:	6963      	ldr	r3, [r4, #20]
 8009b32:	061d      	lsls	r5, r3, #24
 8009b34:	d4dc      	bmi.n	8009af0 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b36:	6963      	ldr	r3, [r4, #20]
 8009b38:	0559      	lsls	r1, r3, #21
 8009b3a:	f53f af77 	bmi.w	8009a2c <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009b3e:	f7ff fb4f 	bl	80091e0 <HAL_GetTick>
 8009b42:	eba0 000b 	sub.w	r0, r0, fp
 8009b46:	4581      	cmp	r9, r0
 8009b48:	d325      	bcc.n	8009b96 <I2C_RequestMemoryWrite+0x1d2>
 8009b4a:	f1b9 0f00 	cmp.w	r9, #0
 8009b4e:	d022      	beq.n	8009b96 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009b50:	6834      	ldr	r4, [r6, #0]
 8009b52:	e761      	b.n	8009a18 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009b54:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8009b56:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009b58:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009b5a:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009b5e:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009b62:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009b64:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009b68:	f043 0320 	orr.w	r3, r3, #32
 8009b6c:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 8009b6e:	2001      	movs	r0, #1
 8009b70:	e792      	b.n	8009a98 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009b72:	6963      	ldr	r3, [r4, #20]
 8009b74:	061b      	lsls	r3, r3, #24
 8009b76:	d4be      	bmi.n	8009af6 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b78:	6963      	ldr	r3, [r4, #20]
 8009b7a:	0558      	lsls	r0, r3, #21
 8009b7c:	f53f af56 	bmi.w	8009a2c <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009b80:	f7ff fb2e 	bl	80091e0 <HAL_GetTick>
 8009b84:	eba0 000b 	sub.w	r0, r0, fp
 8009b88:	4581      	cmp	r9, r0
 8009b8a:	d304      	bcc.n	8009b96 <I2C_RequestMemoryWrite+0x1d2>
 8009b8c:	f1b9 0f00 	cmp.w	r9, #0
 8009b90:	d001      	beq.n	8009b96 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009b92:	6834      	ldr	r4, [r6, #0]
 8009b94:	e7bb      	b.n	8009b0e <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009b96:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009b98:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009b9a:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009b9c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009ba0:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009ba4:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009ba6:	4313      	orrs	r3, r2
 8009ba8:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009baa:	e74d      	b.n	8009a48 <I2C_RequestMemoryWrite+0x84>

08009bac <I2C_RequestMemoryRead>:
{
 8009bac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009bb0:	6804      	ldr	r4, [r0, #0]
{
 8009bb2:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009bb4:	6823      	ldr	r3, [r4, #0]
 8009bb6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8009bba:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009bbc:	6823      	ldr	r3, [r4, #0]
{
 8009bbe:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009bc0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8009bc4:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8009bc8:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009bcc:	6023      	str	r3, [r4, #0]
{
 8009bce:	4606      	mov	r6, r0
 8009bd0:	468b      	mov	fp, r1
 8009bd2:	4617      	mov	r7, r2
 8009bd4:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009bd8:	d13a      	bne.n	8009c50 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009bda:	6965      	ldr	r5, [r4, #20]
 8009bdc:	07eb      	lsls	r3, r5, #31
 8009bde:	d5fc      	bpl.n	8009bda <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8009be0:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 8009be4:	6123      	str	r3, [r4, #16]
 8009be6:	fa5f fb8b 	uxtb.w	fp, fp
 8009bea:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009bee:	d003      	beq.n	8009bf8 <I2C_RequestMemoryRead+0x4c>
 8009bf0:	e069      	b.n	8009cc6 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009bf2:	6965      	ldr	r5, [r4, #20]
 8009bf4:	056a      	lsls	r2, r5, #21
 8009bf6:	d44e      	bmi.n	8009c96 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009bf8:	6965      	ldr	r5, [r4, #20]
 8009bfa:	07a9      	lsls	r1, r5, #30
 8009bfc:	d5f9      	bpl.n	8009bf2 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009bfe:	2300      	movs	r3, #0
 8009c00:	9301      	str	r3, [sp, #4]
 8009c02:	6963      	ldr	r3, [r4, #20]
 8009c04:	9301      	str	r3, [sp, #4]
 8009c06:	69a3      	ldr	r3, [r4, #24]
 8009c08:	9301      	str	r3, [sp, #4]
 8009c0a:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009c0c:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009c10:	f040 80bd 	bne.w	8009d8e <I2C_RequestMemoryRead+0x1e2>
 8009c14:	6963      	ldr	r3, [r4, #20]
 8009c16:	0618      	lsls	r0, r3, #24
 8009c18:	d468      	bmi.n	8009cec <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009c1a:	6963      	ldr	r3, [r4, #20]
 8009c1c:	0559      	lsls	r1, r3, #21
 8009c1e:	d5f9      	bpl.n	8009c14 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009c20:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009c22:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009c26:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009c28:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009c2a:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009c2c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009c30:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009c34:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009c36:	f043 0304 	orr.w	r3, r3, #4
 8009c3a:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009c3c:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009c3e:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009c40:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009c42:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009c46:	d070      	beq.n	8009d2a <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 8009c48:	2001      	movs	r0, #1
}
 8009c4a:	b003      	add	sp, #12
 8009c4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009c50:	6963      	ldr	r3, [r4, #20]
 8009c52:	07dd      	lsls	r5, r3, #31
 8009c54:	d4c4      	bmi.n	8009be0 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009c56:	f7ff fac3 	bl	80091e0 <HAL_GetTick>
 8009c5a:	eba0 0009 	sub.w	r0, r0, r9
 8009c5e:	4582      	cmp	sl, r0
 8009c60:	d304      	bcc.n	8009c6c <I2C_RequestMemoryRead+0xc0>
 8009c62:	f1ba 0f00 	cmp.w	sl, #0
 8009c66:	d001      	beq.n	8009c6c <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009c68:	6834      	ldr	r4, [r6, #0]
 8009c6a:	e7b3      	b.n	8009bd4 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009c6c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009c6e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009c70:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009c72:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009c76:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009c7a:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009c7c:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8009c7e:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009c82:	f042 0220 	orr.w	r2, r2, #32
 8009c86:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009c88:	680b      	ldr	r3, [r1, #0]
 8009c8a:	05dc      	lsls	r4, r3, #23
 8009c8c:	d43d      	bmi.n	8009d0a <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 8009c8e:	2003      	movs	r0, #3
}
 8009c90:	b003      	add	sp, #12
 8009c92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009c96:	6823      	ldr	r3, [r4, #0]
 8009c98:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009c9c:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009c9e:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009ca0:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8009ca4:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009ca6:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009ca8:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009caa:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009cae:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009cb2:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009cb4:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009cb8:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8009cbc:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009cbe:	6433      	str	r3, [r6, #64]	; 0x40
}
 8009cc0:	b003      	add	sp, #12
 8009cc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009cc6:	6963      	ldr	r3, [r4, #20]
 8009cc8:	079b      	lsls	r3, r3, #30
 8009cca:	d498      	bmi.n	8009bfe <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009ccc:	6963      	ldr	r3, [r4, #20]
 8009cce:	0558      	lsls	r0, r3, #21
 8009cd0:	d4e1      	bmi.n	8009c96 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009cd2:	f7ff fa85 	bl	80091e0 <HAL_GetTick>
 8009cd6:	eba0 0009 	sub.w	r0, r0, r9
 8009cda:	4582      	cmp	sl, r0
 8009cdc:	f0c0 808f 	bcc.w	8009dfe <I2C_RequestMemoryRead+0x252>
 8009ce0:	f1ba 0f00 	cmp.w	sl, #0
 8009ce4:	f000 808b 	beq.w	8009dfe <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009ce8:	6834      	ldr	r4, [r6, #0]
 8009cea:	e77e      	b.n	8009bea <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009cec:	f1b8 0f01 	cmp.w	r8, #1
 8009cf0:	d10f      	bne.n	8009d12 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009cf2:	b2ff      	uxtb	r7, r7
 8009cf4:	6127      	str	r7, [r4, #16]
 8009cf6:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009cfa:	d16e      	bne.n	8009dda <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009cfc:	6963      	ldr	r3, [r4, #20]
 8009cfe:	061b      	lsls	r3, r3, #24
 8009d00:	d41a      	bmi.n	8009d38 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009d02:	6963      	ldr	r3, [r4, #20]
 8009d04:	055f      	lsls	r7, r3, #21
 8009d06:	d5f9      	bpl.n	8009cfc <I2C_RequestMemoryRead+0x150>
 8009d08:	e78a      	b.n	8009c20 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8009d0a:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009d0e:	6433      	str	r3, [r6, #64]	; 0x40
 8009d10:	e7bd      	b.n	8009c8e <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8009d12:	0a3b      	lsrs	r3, r7, #8
 8009d14:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009d16:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009d1a:	d17e      	bne.n	8009e1a <I2C_RequestMemoryRead+0x26e>
 8009d1c:	6963      	ldr	r3, [r4, #20]
 8009d1e:	061d      	lsls	r5, r3, #24
 8009d20:	d4e7      	bmi.n	8009cf2 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009d22:	6963      	ldr	r3, [r4, #20]
 8009d24:	0558      	lsls	r0, r3, #21
 8009d26:	d5f9      	bpl.n	8009d1c <I2C_RequestMemoryRead+0x170>
 8009d28:	e77a      	b.n	8009c20 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009d2a:	6832      	ldr	r2, [r6, #0]
 8009d2c:	6813      	ldr	r3, [r2, #0]
 8009d2e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 8009d32:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009d34:	6013      	str	r3, [r2, #0]
 8009d36:	e7ab      	b.n	8009c90 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009d38:	6823      	ldr	r3, [r4, #0]
 8009d3a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009d3e:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009d40:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009d44:	d113      	bne.n	8009d6e <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009d46:	6963      	ldr	r3, [r4, #20]
 8009d48:	07d8      	lsls	r0, r3, #31
 8009d4a:	d5fc      	bpl.n	8009d46 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8009d4c:	f04b 0301 	orr.w	r3, fp, #1
 8009d50:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8009d52:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009d56:	d003      	beq.n	8009d60 <I2C_RequestMemoryRead+0x1b4>
 8009d58:	e02b      	b.n	8009db2 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009d5a:	6963      	ldr	r3, [r4, #20]
 8009d5c:	055b      	lsls	r3, r3, #21
 8009d5e:	d49a      	bmi.n	8009c96 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009d60:	6963      	ldr	r3, [r4, #20]
 8009d62:	43db      	mvns	r3, r3
 8009d64:	f013 0302 	ands.w	r3, r3, #2
 8009d68:	d1f7      	bne.n	8009d5a <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 8009d6a:	4618      	mov	r0, r3
 8009d6c:	e790      	b.n	8009c90 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009d6e:	6963      	ldr	r3, [r4, #20]
 8009d70:	07d9      	lsls	r1, r3, #31
 8009d72:	d4eb      	bmi.n	8009d4c <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009d74:	f7ff fa34 	bl	80091e0 <HAL_GetTick>
 8009d78:	eba0 0009 	sub.w	r0, r0, r9
 8009d7c:	4582      	cmp	sl, r0
 8009d7e:	f4ff af75 	bcc.w	8009c6c <I2C_RequestMemoryRead+0xc0>
 8009d82:	f1ba 0f00 	cmp.w	sl, #0
 8009d86:	f43f af71 	beq.w	8009c6c <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009d8a:	6834      	ldr	r4, [r6, #0]
 8009d8c:	e7d8      	b.n	8009d40 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009d8e:	6963      	ldr	r3, [r4, #20]
 8009d90:	061a      	lsls	r2, r3, #24
 8009d92:	d4ab      	bmi.n	8009cec <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009d94:	6963      	ldr	r3, [r4, #20]
 8009d96:	055d      	lsls	r5, r3, #21
 8009d98:	f53f af42 	bmi.w	8009c20 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009d9c:	f7ff fa20 	bl	80091e0 <HAL_GetTick>
 8009da0:	eba0 0009 	sub.w	r0, r0, r9
 8009da4:	4582      	cmp	sl, r0
 8009da6:	d34b      	bcc.n	8009e40 <I2C_RequestMemoryRead+0x294>
 8009da8:	f1ba 0f00 	cmp.w	sl, #0
 8009dac:	d048      	beq.n	8009e40 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009dae:	6834      	ldr	r4, [r6, #0]
 8009db0:	e72c      	b.n	8009c0c <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009db2:	6963      	ldr	r3, [r4, #20]
 8009db4:	43db      	mvns	r3, r3
 8009db6:	f013 0302 	ands.w	r3, r3, #2
 8009dba:	d0d6      	beq.n	8009d6a <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009dbc:	6963      	ldr	r3, [r4, #20]
 8009dbe:	055a      	lsls	r2, r3, #21
 8009dc0:	f53f af69 	bmi.w	8009c96 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009dc4:	f7ff fa0c 	bl	80091e0 <HAL_GetTick>
 8009dc8:	eba0 0009 	sub.w	r0, r0, r9
 8009dcc:	4582      	cmp	sl, r0
 8009dce:	d316      	bcc.n	8009dfe <I2C_RequestMemoryRead+0x252>
 8009dd0:	f1ba 0f00 	cmp.w	sl, #0
 8009dd4:	d013      	beq.n	8009dfe <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009dd6:	6834      	ldr	r4, [r6, #0]
 8009dd8:	e7bb      	b.n	8009d52 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009dda:	6963      	ldr	r3, [r4, #20]
 8009ddc:	061d      	lsls	r5, r3, #24
 8009dde:	d4ab      	bmi.n	8009d38 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009de0:	6963      	ldr	r3, [r4, #20]
 8009de2:	055a      	lsls	r2, r3, #21
 8009de4:	f53f af1c 	bmi.w	8009c20 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009de8:	f7ff f9fa 	bl	80091e0 <HAL_GetTick>
 8009dec:	eba0 0009 	sub.w	r0, r0, r9
 8009df0:	4582      	cmp	sl, r0
 8009df2:	d325      	bcc.n	8009e40 <I2C_RequestMemoryRead+0x294>
 8009df4:	f1ba 0f00 	cmp.w	sl, #0
 8009df8:	d022      	beq.n	8009e40 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009dfa:	6834      	ldr	r4, [r6, #0]
 8009dfc:	e77b      	b.n	8009cf6 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009dfe:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8009e00:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009e02:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009e04:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009e08:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009e0c:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009e0e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009e12:	f043 0320 	orr.w	r3, r3, #32
 8009e16:	6433      	str	r3, [r6, #64]	; 0x40
 8009e18:	e716      	b.n	8009c48 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009e1a:	6963      	ldr	r3, [r4, #20]
 8009e1c:	0619      	lsls	r1, r3, #24
 8009e1e:	f53f af68 	bmi.w	8009cf2 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009e22:	6963      	ldr	r3, [r4, #20]
 8009e24:	055b      	lsls	r3, r3, #21
 8009e26:	f53f aefb 	bmi.w	8009c20 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009e2a:	f7ff f9d9 	bl	80091e0 <HAL_GetTick>
 8009e2e:	eba0 0009 	sub.w	r0, r0, r9
 8009e32:	4582      	cmp	sl, r0
 8009e34:	d304      	bcc.n	8009e40 <I2C_RequestMemoryRead+0x294>
 8009e36:	f1ba 0f00 	cmp.w	sl, #0
 8009e3a:	d001      	beq.n	8009e40 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009e3c:	6834      	ldr	r4, [r6, #0]
 8009e3e:	e76a      	b.n	8009d16 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009e40:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009e42:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009e44:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009e46:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009e4a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009e4e:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009e50:	4313      	orrs	r3, r2
 8009e52:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009e54:	e6f2      	b.n	8009c3c <I2C_RequestMemoryRead+0x90>
 8009e56:	bf00      	nop

08009e58 <HAL_I2C_Init>:
  if (hi2c == NULL)
 8009e58:	2800      	cmp	r0, #0
 8009e5a:	f000 80b9 	beq.w	8009fd0 <HAL_I2C_Init+0x178>
{
 8009e5e:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8009e60:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009e64:	4604      	mov	r4, r0
 8009e66:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009e6a:	2b00      	cmp	r3, #0
 8009e6c:	f000 8098 	beq.w	8009fa0 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 8009e70:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8009e72:	2224      	movs	r2, #36	; 0x24
 8009e74:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8009e78:	681a      	ldr	r2, [r3, #0]
 8009e7a:	f022 0201 	bic.w	r2, r2, #1
 8009e7e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8009e80:	681a      	ldr	r2, [r3, #0]
 8009e82:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009e86:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8009e88:	681a      	ldr	r2, [r3, #0]
 8009e8a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8009e8e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8009e90:	f001 fe70 	bl	800bb74 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009e94:	6865      	ldr	r5, [r4, #4]
 8009e96:	4b4f      	ldr	r3, [pc, #316]	; (8009fd4 <HAL_I2C_Init+0x17c>)
 8009e98:	429d      	cmp	r5, r3
 8009e9a:	d84f      	bhi.n	8009f3c <HAL_I2C_Init+0xe4>
 8009e9c:	4b4e      	ldr	r3, [pc, #312]	; (8009fd8 <HAL_I2C_Init+0x180>)
 8009e9e:	4298      	cmp	r0, r3
 8009ea0:	d97c      	bls.n	8009f9c <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 8009ea2:	4b4e      	ldr	r3, [pc, #312]	; (8009fdc <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009ea4:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 8009ea6:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009eaa:	1e43      	subs	r3, r0, #1
 8009eac:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009eb0:	6822      	ldr	r2, [r4, #0]
 8009eb2:	6851      	ldr	r1, [r2, #4]
 8009eb4:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009eb8:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 8009ebc:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009ebe:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 8009ec0:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009ec4:	f10c 0c01 	add.w	ip, ip, #1
 8009ec8:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009ecc:	ea41 010c 	orr.w	r1, r1, ip
 8009ed0:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009ed2:	69d1      	ldr	r1, [r2, #28]
 8009ed4:	f640 70fc 	movw	r0, #4092	; 0xffc
 8009ed8:	3301      	adds	r3, #1
 8009eda:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009ede:	4203      	tst	r3, r0
 8009ee0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009ee4:	d161      	bne.n	8009faa <HAL_I2C_Init+0x152>
 8009ee6:	2304      	movs	r3, #4
 8009ee8:	430b      	orrs	r3, r1
 8009eea:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8009eec:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8009ef0:	6811      	ldr	r1, [r2, #0]
 8009ef2:	4303      	orrs	r3, r0
 8009ef4:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8009ef8:	430b      	orrs	r3, r1
 8009efa:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8009efc:	6891      	ldr	r1, [r2, #8]
 8009efe:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8009f02:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8009f06:	4303      	orrs	r3, r0
 8009f08:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009f0c:	430b      	orrs	r3, r1
 8009f0e:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8009f10:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8009f14:	68d1      	ldr	r1, [r2, #12]
 8009f16:	4303      	orrs	r3, r0
 8009f18:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009f1c:	430b      	orrs	r3, r1
 8009f1e:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8009f20:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009f22:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 8009f24:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 8009f28:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 8009f2a:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009f2c:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8009f2e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8009f32:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8009f34:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 8009f38:	4618      	mov	r0, r3
}
 8009f3a:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009f3c:	4b28      	ldr	r3, [pc, #160]	; (8009fe0 <HAL_I2C_Init+0x188>)
 8009f3e:	4298      	cmp	r0, r3
 8009f40:	d92c      	bls.n	8009f9c <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009f42:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8009f44:	4b25      	ldr	r3, [pc, #148]	; (8009fdc <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009f46:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009f48:	4e26      	ldr	r6, [pc, #152]	; (8009fe4 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 8009f4a:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009f4e:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009f52:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 8009f56:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8009f58:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009f5c:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8009f60:	fb01 f303 	mul.w	r3, r1, r3
 8009f64:	fba6 6303 	umull	r6, r3, r6, r3
 8009f68:	6a11      	ldr	r1, [r2, #32]
 8009f6a:	099b      	lsrs	r3, r3, #6
 8009f6c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009f70:	3301      	adds	r3, #1
 8009f72:	430b      	orrs	r3, r1
 8009f74:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009f76:	69d1      	ldr	r1, [r2, #28]
 8009f78:	68a3      	ldr	r3, [r4, #8]
 8009f7a:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009f7e:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009f82:	b9ab      	cbnz	r3, 8009fb0 <HAL_I2C_Init+0x158>
 8009f84:	1e43      	subs	r3, r0, #1
 8009f86:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8009f8a:	fbb3 f3f5 	udiv	r3, r3, r5
 8009f8e:	3301      	adds	r3, #1
 8009f90:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009f94:	b1d3      	cbz	r3, 8009fcc <HAL_I2C_Init+0x174>
 8009f96:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009f9a:	e7a5      	b.n	8009ee8 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009f9c:	2001      	movs	r0, #1
}
 8009f9e:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 8009fa0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8009fa4:	f7f7 ffd0 	bl	8001f48 <HAL_I2C_MspInit>
 8009fa8:	e762      	b.n	8009e70 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009faa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009fae:	e79b      	b.n	8009ee8 <HAL_I2C_Init+0x90>
 8009fb0:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009fb4:	1e43      	subs	r3, r0, #1
 8009fb6:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009fba:	fbb3 f3f5 	udiv	r3, r3, r5
 8009fbe:	3301      	adds	r3, #1
 8009fc0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009fc4:	b113      	cbz	r3, 8009fcc <HAL_I2C_Init+0x174>
 8009fc6:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009fca:	e78d      	b.n	8009ee8 <HAL_I2C_Init+0x90>
 8009fcc:	2301      	movs	r3, #1
 8009fce:	e78b      	b.n	8009ee8 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009fd0:	2001      	movs	r0, #1
}
 8009fd2:	4770      	bx	lr
 8009fd4:	000186a0 	.word	0x000186a0
 8009fd8:	001e847f 	.word	0x001e847f
 8009fdc:	431bde83 	.word	0x431bde83
 8009fe0:	003d08ff 	.word	0x003d08ff
 8009fe4:	10624dd3 	.word	0x10624dd3

08009fe8 <HAL_I2C_Mem_Write>:
{
 8009fe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009fec:	4604      	mov	r4, r0
 8009fee:	b083      	sub	sp, #12
 8009ff0:	4699      	mov	r9, r3
 8009ff2:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8009ff6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8009ff8:	460f      	mov	r7, r1
 8009ffa:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009ffc:	f7ff f8f0 	bl	80091e0 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a000:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a004:	2b20      	cmp	r3, #32
 800a006:	d004      	beq.n	800a012 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800a008:	2702      	movs	r7, #2
}
 800a00a:	4638      	mov	r0, r7
 800a00c:	b003      	add	sp, #12
 800a00e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a012:	4605      	mov	r5, r0
 800a014:	e005      	b.n	800a022 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a016:	f7ff f8e3 	bl	80091e0 <HAL_GetTick>
 800a01a:	1b40      	subs	r0, r0, r5
 800a01c:	2819      	cmp	r0, #25
 800a01e:	f200 80a8 	bhi.w	800a172 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a022:	6820      	ldr	r0, [r4, #0]
 800a024:	6983      	ldr	r3, [r0, #24]
 800a026:	ea6f 0c03 	mvn.w	ip, r3
 800a02a:	f01c 0b02 	ands.w	fp, ip, #2
 800a02e:	d0f2      	beq.n	800a016 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800a030:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a034:	2b01      	cmp	r3, #1
 800a036:	d0e7      	beq.n	800a008 <HAL_I2C_Mem_Write+0x20>
 800a038:	2301      	movs	r3, #1
 800a03a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a03e:	6803      	ldr	r3, [r0, #0]
 800a040:	07db      	lsls	r3, r3, #31
 800a042:	d572      	bpl.n	800a12a <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a044:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a046:	6807      	ldr	r7, [r0, #0]
 800a048:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800a04c:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800a04e:	980c      	ldr	r0, [sp, #48]	; 0x30
 800a050:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a052:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a054:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a058:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a05c:	2040      	movs	r0, #64	; 0x40
 800a05e:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a062:	2000      	movs	r0, #0
 800a064:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a066:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a06a:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a06c:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a06e:	4856      	ldr	r0, [pc, #344]	; (800a1c8 <HAL_I2C_Mem_Write+0x1e0>)
 800a070:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a072:	464b      	mov	r3, r9
 800a074:	4642      	mov	r2, r8
 800a076:	4620      	mov	r0, r4
 800a078:	f7ff fca4 	bl	80099c4 <I2C_RequestMemoryWrite>
 800a07c:	4607      	mov	r7, r0
 800a07e:	bb00      	cbnz	r0, 800a0c2 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800a080:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800a082:	2b00      	cmp	r3, #0
 800a084:	f000 809e 	beq.w	800a1c4 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a088:	6823      	ldr	r3, [r4, #0]
 800a08a:	1c72      	adds	r2, r6, #1
 800a08c:	d159      	bne.n	800a142 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a08e:	695a      	ldr	r2, [r3, #20]
 800a090:	0610      	lsls	r0, r2, #24
 800a092:	d41b      	bmi.n	800a0cc <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a094:	695a      	ldr	r2, [r3, #20]
 800a096:	0551      	lsls	r1, r2, #21
 800a098:	d5f9      	bpl.n	800a08e <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a09a:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a09c:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a0a0:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a0a2:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a0a4:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a0a6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a0aa:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a0ae:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a0b0:	f043 0304 	orr.w	r3, r3, #4
 800a0b4:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a0b6:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a0b8:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a0ba:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a0bc:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a0c0:	d038      	beq.n	800a134 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800a0c2:	2701      	movs	r7, #1
}
 800a0c4:	4638      	mov	r0, r7
 800a0c6:	b003      	add	sp, #12
 800a0c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a0cc:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800a0d0:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a0d4:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800a0d6:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a0da:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a0de:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800a0e0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a0e2:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a0e4:	3a01      	subs	r2, #1
 800a0e6:	b292      	uxth	r2, r2
 800a0e8:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800a0ea:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a0ec:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800a0ee:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a0f0:	0740      	lsls	r0, r0, #29
 800a0f2:	d517      	bpl.n	800a124 <HAL_I2C_Mem_Write+0x13c>
 800a0f4:	b942      	cbnz	r2, 800a108 <HAL_I2C_Mem_Write+0x120>
 800a0f6:	1c72      	adds	r2, r6, #1
 800a0f8:	d156      	bne.n	800a1a8 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a0fa:	695a      	ldr	r2, [r3, #20]
 800a0fc:	0750      	lsls	r0, r2, #29
 800a0fe:	d446      	bmi.n	800a18e <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a100:	695a      	ldr	r2, [r3, #20]
 800a102:	0551      	lsls	r1, r2, #21
 800a104:	d5f9      	bpl.n	800a0fa <HAL_I2C_Mem_Write+0x112>
 800a106:	e7c8      	b.n	800a09a <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a108:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800a10c:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800a10e:	f10c 0102 	add.w	r1, ip, #2
 800a112:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a114:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800a116:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800a11a:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800a11c:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800a11e:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800a120:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800a122:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800a124:	2a00      	cmp	r2, #0
 800a126:	d1b0      	bne.n	800a08a <HAL_I2C_Mem_Write+0xa2>
 800a128:	e7e5      	b.n	800a0f6 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800a12a:	6803      	ldr	r3, [r0, #0]
 800a12c:	f043 0301 	orr.w	r3, r3, #1
 800a130:	6003      	str	r3, [r0, #0]
 800a132:	e787      	b.n	800a044 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a134:	6822      	ldr	r2, [r4, #0]
 800a136:	6813      	ldr	r3, [r2, #0]
 800a138:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a13c:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a13e:	6013      	str	r3, [r2, #0]
 800a140:	e763      	b.n	800a00a <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a142:	695a      	ldr	r2, [r3, #20]
 800a144:	0612      	lsls	r2, r2, #24
 800a146:	d4c1      	bmi.n	800a0cc <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a148:	695a      	ldr	r2, [r3, #20]
 800a14a:	0551      	lsls	r1, r2, #21
 800a14c:	d4a5      	bmi.n	800a09a <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a14e:	f7ff f847 	bl	80091e0 <HAL_GetTick>
 800a152:	1b40      	subs	r0, r0, r5
 800a154:	4286      	cmp	r6, r0
 800a156:	d301      	bcc.n	800a15c <HAL_I2C_Mem_Write+0x174>
 800a158:	2e00      	cmp	r6, #0
 800a15a:	d195      	bne.n	800a088 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a15c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a15e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a160:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a162:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a166:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a16a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a16c:	4313      	orrs	r3, r2
 800a16e:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800a170:	e7a1      	b.n	800a0b6 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a172:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a174:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a178:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a17c:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a180:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a182:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a186:	f043 0320 	orr.w	r3, r3, #32
 800a18a:	6423      	str	r3, [r4, #64]	; 0x40
 800a18c:	e73c      	b.n	800a008 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a18e:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a190:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a192:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800a196:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a198:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800a19a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a19e:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a1a2:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800a1a6:	e730      	b.n	800a00a <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a1a8:	695a      	ldr	r2, [r3, #20]
 800a1aa:	0752      	lsls	r2, r2, #29
 800a1ac:	d4ef      	bmi.n	800a18e <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a1ae:	695a      	ldr	r2, [r3, #20]
 800a1b0:	0551      	lsls	r1, r2, #21
 800a1b2:	f53f af72 	bmi.w	800a09a <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a1b6:	f7ff f813 	bl	80091e0 <HAL_GetTick>
 800a1ba:	1b40      	subs	r0, r0, r5
 800a1bc:	4286      	cmp	r6, r0
 800a1be:	d3cd      	bcc.n	800a15c <HAL_I2C_Mem_Write+0x174>
 800a1c0:	2e00      	cmp	r6, #0
 800a1c2:	d0cb      	beq.n	800a15c <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a1c4:	6823      	ldr	r3, [r4, #0]
 800a1c6:	e796      	b.n	800a0f6 <HAL_I2C_Mem_Write+0x10e>
 800a1c8:	ffff0000 	.word	0xffff0000

0800a1cc <HAL_I2C_Mem_Read>:
{
 800a1cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1d0:	4604      	mov	r4, r0
 800a1d2:	b087      	sub	sp, #28
 800a1d4:	4699      	mov	r9, r3
 800a1d6:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800a1da:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800a1dc:	460f      	mov	r7, r1
 800a1de:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a1e0:	f7fe fffe 	bl	80091e0 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a1e4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a1e8:	2b20      	cmp	r3, #32
 800a1ea:	d004      	beq.n	800a1f6 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800a1ec:	2702      	movs	r7, #2
}
 800a1ee:	4638      	mov	r0, r7
 800a1f0:	b007      	add	sp, #28
 800a1f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a1f6:	4606      	mov	r6, r0
 800a1f8:	e005      	b.n	800a206 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a1fa:	f7fe fff1 	bl	80091e0 <HAL_GetTick>
 800a1fe:	1b80      	subs	r0, r0, r6
 800a200:	2819      	cmp	r0, #25
 800a202:	f200 80d2 	bhi.w	800a3aa <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a206:	f8d4 c000 	ldr.w	ip, [r4]
 800a20a:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800a20e:	43c0      	mvns	r0, r0
 800a210:	f010 0b02 	ands.w	fp, r0, #2
 800a214:	d0f1      	beq.n	800a1fa <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800a216:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a21a:	2b01      	cmp	r3, #1
 800a21c:	d0e6      	beq.n	800a1ec <HAL_I2C_Mem_Read+0x20>
 800a21e:	2301      	movs	r3, #1
 800a220:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a224:	f8dc 3000 	ldr.w	r3, [ip]
 800a228:	07d9      	lsls	r1, r3, #31
 800a22a:	d537      	bpl.n	800a29c <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a22c:	f8dc 0000 	ldr.w	r0, [ip]
 800a230:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800a234:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800a238:	9810      	ldr	r0, [sp, #64]	; 0x40
 800a23a:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a23c:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a23e:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a242:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a246:	2040      	movs	r0, #64	; 0x40
 800a248:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a24c:	2000      	movs	r0, #0
 800a24e:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a250:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a254:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a256:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a258:	4893      	ldr	r0, [pc, #588]	; (800a4a8 <HAL_I2C_Mem_Read+0x2dc>)
 800a25a:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a25c:	4639      	mov	r1, r7
 800a25e:	464b      	mov	r3, r9
 800a260:	4642      	mov	r2, r8
 800a262:	4620      	mov	r0, r4
 800a264:	f7ff fca2 	bl	8009bac <I2C_RequestMemoryRead>
 800a268:	4607      	mov	r7, r0
 800a26a:	2800      	cmp	r0, #0
 800a26c:	f040 80ab 	bne.w	800a3c6 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800a270:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800a272:	b9d2      	cbnz	r2, 800a2aa <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a274:	6823      	ldr	r3, [r4, #0]
 800a276:	9002      	str	r0, [sp, #8]
 800a278:	695a      	ldr	r2, [r3, #20]
 800a27a:	9202      	str	r2, [sp, #8]
 800a27c:	699a      	ldr	r2, [r3, #24]
 800a27e:	9202      	str	r2, [sp, #8]
 800a280:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a282:	681a      	ldr	r2, [r3, #0]
 800a284:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a288:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a28a:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800a28c:	2220      	movs	r2, #32
 800a28e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a292:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a296:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800a29a:	e7a8      	b.n	800a1ee <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800a29c:	f8dc 3000 	ldr.w	r3, [ip]
 800a2a0:	f043 0301 	orr.w	r3, r3, #1
 800a2a4:	f8cc 3000 	str.w	r3, [ip]
 800a2a8:	e7c0      	b.n	800a22c <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800a2aa:	2a01      	cmp	r2, #1
 800a2ac:	f000 812c 	beq.w	800a508 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800a2b0:	2a02      	cmp	r2, #2
 800a2b2:	f000 80bd 	beq.w	800a430 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a2b6:	6823      	ldr	r3, [r4, #0]
 800a2b8:	9005      	str	r0, [sp, #20]
 800a2ba:	6959      	ldr	r1, [r3, #20]
 800a2bc:	9105      	str	r1, [sp, #20]
 800a2be:	6999      	ldr	r1, [r3, #24]
 800a2c0:	9105      	str	r1, [sp, #20]
 800a2c2:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800a2c4:	2a03      	cmp	r2, #3
 800a2c6:	d849      	bhi.n	800a35c <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800a2c8:	2a01      	cmp	r2, #1
 800a2ca:	f000 80eb 	beq.w	800a4a4 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800a2ce:	2a02      	cmp	r2, #2
 800a2d0:	f000 8089 	beq.w	800a3e6 <HAL_I2C_Mem_Read+0x21a>
 800a2d4:	1c69      	adds	r1, r5, #1
 800a2d6:	f040 80bb 	bne.w	800a450 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a2da:	695a      	ldr	r2, [r3, #20]
 800a2dc:	0752      	lsls	r2, r2, #29
 800a2de:	d5fc      	bpl.n	800a2da <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a2e0:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a2e2:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a2e4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a2e8:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a2ea:	691b      	ldr	r3, [r3, #16]
 800a2ec:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800a2ee:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a2f0:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a2f2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a2f4:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800a2f6:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800a2f8:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a2fa:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800a2fc:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a2fe:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a300:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a302:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a304:	6822      	ldr	r2, [r4, #0]
 800a306:	f040 80af 	bne.w	800a468 <HAL_I2C_Mem_Read+0x29c>
 800a30a:	6953      	ldr	r3, [r2, #20]
 800a30c:	075b      	lsls	r3, r3, #29
 800a30e:	d5fc      	bpl.n	800a30a <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a310:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a312:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a314:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a318:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a31a:	6913      	ldr	r3, [r2, #16]
 800a31c:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800a31e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a320:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a322:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a324:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800a326:	3b01      	subs	r3, #1
 800a328:	b29b      	uxth	r3, r3
 800a32a:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a32c:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800a32e:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800a330:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800a334:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a336:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a33a:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800a33c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a33e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a340:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a342:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a344:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800a346:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800a348:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800a34a:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800a34c:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a34e:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a350:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800a352:	2a00      	cmp	r2, #0
 800a354:	d099      	beq.n	800a28a <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800a356:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a358:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800a35a:	d9b5      	bls.n	800a2c8 <HAL_I2C_Mem_Read+0xfc>
 800a35c:	b95d      	cbnz	r5, 800a376 <HAL_I2C_Mem_Read+0x1aa>
 800a35e:	e0c5      	b.n	800a4ec <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a360:	695a      	ldr	r2, [r3, #20]
 800a362:	06d0      	lsls	r0, r2, #27
 800a364:	f100 80b2 	bmi.w	800a4cc <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a368:	f7fe ff3a 	bl	80091e0 <HAL_GetTick>
 800a36c:	1b80      	subs	r0, r0, r6
 800a36e:	4285      	cmp	r5, r0
 800a370:	f0c0 8086 	bcc.w	800a480 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a374:	6823      	ldr	r3, [r4, #0]
 800a376:	695a      	ldr	r2, [r3, #20]
 800a378:	0652      	lsls	r2, r2, #25
 800a37a:	d5f1      	bpl.n	800a360 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a37c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a37e:	691b      	ldr	r3, [r3, #16]
 800a380:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800a382:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a384:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800a386:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800a388:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a38a:	3b01      	subs	r3, #1
 800a38c:	b29b      	uxth	r3, r3
 800a38e:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a390:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800a392:	3a01      	subs	r2, #1
 800a394:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800a396:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a39a:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800a39c:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800a39e:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a3a2:	d5d6      	bpl.n	800a352 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a3a4:	6903      	ldr	r3, [r0, #16]
 800a3a6:	704b      	strb	r3, [r1, #1]
 800a3a8:	e036      	b.n	800a418 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a3aa:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a3ac:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a3b0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a3b4:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a3b8:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a3ba:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a3be:	f043 0320 	orr.w	r3, r3, #32
 800a3c2:	6423      	str	r3, [r4, #64]	; 0x40
 800a3c4:	e712      	b.n	800a1ec <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800a3c6:	2701      	movs	r7, #1
}
 800a3c8:	4638      	mov	r0, r7
 800a3ca:	b007      	add	sp, #28
 800a3cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a3d0:	695a      	ldr	r2, [r3, #20]
 800a3d2:	0750      	lsls	r0, r2, #29
 800a3d4:	d40c      	bmi.n	800a3f0 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a3d6:	f7fe ff03 	bl	80091e0 <HAL_GetTick>
 800a3da:	1b80      	subs	r0, r0, r6
 800a3dc:	4285      	cmp	r5, r0
 800a3de:	d34f      	bcc.n	800a480 <HAL_I2C_Mem_Read+0x2b4>
 800a3e0:	2d00      	cmp	r5, #0
 800a3e2:	d04d      	beq.n	800a480 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a3e4:	6823      	ldr	r3, [r4, #0]
 800a3e6:	1c69      	adds	r1, r5, #1
 800a3e8:	d1f2      	bne.n	800a3d0 <HAL_I2C_Mem_Read+0x204>
 800a3ea:	695a      	ldr	r2, [r3, #20]
 800a3ec:	0752      	lsls	r2, r2, #29
 800a3ee:	d5fc      	bpl.n	800a3ea <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a3f0:	681a      	ldr	r2, [r3, #0]
 800a3f2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a3f6:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a3f8:	691a      	ldr	r2, [r3, #16]
 800a3fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a3fc:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800a3fe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a400:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800a402:	3b01      	subs	r3, #1
 800a404:	b29b      	uxth	r3, r3
 800a406:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a408:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800a40a:	3b01      	subs	r3, #1
 800a40c:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a40e:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a410:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a412:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800a414:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a416:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800a418:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a41a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a41c:	3301      	adds	r3, #1
 800a41e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800a420:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a422:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a424:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800a426:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800a428:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800a42a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a42c:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a42e:	e790      	b.n	800a352 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a430:	6823      	ldr	r3, [r4, #0]
 800a432:	6819      	ldr	r1, [r3, #0]
 800a434:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a438:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a43a:	6819      	ldr	r1, [r3, #0]
 800a43c:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800a440:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a442:	9004      	str	r0, [sp, #16]
 800a444:	6959      	ldr	r1, [r3, #20]
 800a446:	9104      	str	r1, [sp, #16]
 800a448:	6999      	ldr	r1, [r3, #24]
 800a44a:	9104      	str	r1, [sp, #16]
 800a44c:	9904      	ldr	r1, [sp, #16]
 800a44e:	e739      	b.n	800a2c4 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a450:	695a      	ldr	r2, [r3, #20]
 800a452:	0750      	lsls	r0, r2, #29
 800a454:	f53f af44 	bmi.w	800a2e0 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a458:	f7fe fec2 	bl	80091e0 <HAL_GetTick>
 800a45c:	1b80      	subs	r0, r0, r6
 800a45e:	4285      	cmp	r5, r0
 800a460:	d30e      	bcc.n	800a480 <HAL_I2C_Mem_Read+0x2b4>
 800a462:	b16d      	cbz	r5, 800a480 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a464:	6823      	ldr	r3, [r4, #0]
 800a466:	e735      	b.n	800a2d4 <HAL_I2C_Mem_Read+0x108>
 800a468:	6953      	ldr	r3, [r2, #20]
 800a46a:	0758      	lsls	r0, r3, #29
 800a46c:	f53f af50 	bmi.w	800a310 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a470:	f7fe feb6 	bl	80091e0 <HAL_GetTick>
 800a474:	1b80      	subs	r0, r0, r6
 800a476:	4285      	cmp	r5, r0
 800a478:	d302      	bcc.n	800a480 <HAL_I2C_Mem_Read+0x2b4>
 800a47a:	2d00      	cmp	r5, #0
 800a47c:	f47f af41 	bne.w	800a302 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a480:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a482:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a484:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a486:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a48a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a48e:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a490:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a494:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a496:	f043 0320 	orr.w	r3, r3, #32
}
 800a49a:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a49c:	6423      	str	r3, [r4, #64]	; 0x40
}
 800a49e:	b007      	add	sp, #28
 800a4a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a4a4:	b95d      	cbnz	r5, 800a4be <HAL_I2C_Mem_Read+0x2f2>
 800a4a6:	e02b      	b.n	800a500 <HAL_I2C_Mem_Read+0x334>
 800a4a8:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a4ac:	695a      	ldr	r2, [r3, #20]
 800a4ae:	06d2      	lsls	r2, r2, #27
 800a4b0:	d40c      	bmi.n	800a4cc <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a4b2:	f7fe fe95 	bl	80091e0 <HAL_GetTick>
 800a4b6:	1b80      	subs	r0, r0, r6
 800a4b8:	4285      	cmp	r5, r0
 800a4ba:	d3e1      	bcc.n	800a480 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a4bc:	6823      	ldr	r3, [r4, #0]
 800a4be:	695a      	ldr	r2, [r3, #20]
 800a4c0:	0651      	lsls	r1, r2, #25
 800a4c2:	d5f3      	bpl.n	800a4ac <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a4c4:	691a      	ldr	r2, [r3, #16]
 800a4c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a4c8:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800a4ca:	e7a5      	b.n	800a418 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a4cc:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a4ce:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800a4d2:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a4d4:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a4d6:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a4d8:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a4dc:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800a4e0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a4e2:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a4e4:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a4e8:	2701      	movs	r7, #1
 800a4ea:	e680      	b.n	800a1ee <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a4ec:	695a      	ldr	r2, [r3, #20]
 800a4ee:	0652      	lsls	r2, r2, #25
 800a4f0:	f53f af44 	bmi.w	800a37c <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a4f4:	695a      	ldr	r2, [r3, #20]
 800a4f6:	06d1      	lsls	r1, r2, #27
 800a4f8:	d4e8      	bmi.n	800a4cc <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a4fa:	f7fe fe71 	bl	80091e0 <HAL_GetTick>
 800a4fe:	e7bf      	b.n	800a480 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a500:	695a      	ldr	r2, [r3, #20]
 800a502:	0650      	lsls	r0, r2, #25
 800a504:	d5f6      	bpl.n	800a4f4 <HAL_I2C_Mem_Read+0x328>
 800a506:	e7dd      	b.n	800a4c4 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a508:	6823      	ldr	r3, [r4, #0]
 800a50a:	6819      	ldr	r1, [r3, #0]
 800a50c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a510:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a512:	9003      	str	r0, [sp, #12]
 800a514:	6959      	ldr	r1, [r3, #20]
 800a516:	9103      	str	r1, [sp, #12]
 800a518:	6999      	ldr	r1, [r3, #24]
 800a51a:	9103      	str	r1, [sp, #12]
 800a51c:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a51e:	6819      	ldr	r1, [r3, #0]
 800a520:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800a524:	6019      	str	r1, [r3, #0]
 800a526:	e6cd      	b.n	800a2c4 <HAL_I2C_Mem_Read+0xf8>

0800a528 <HAL_I2C_MasterTxCpltCallback>:
 800a528:	4770      	bx	lr
 800a52a:	bf00      	nop

0800a52c <HAL_I2C_MasterRxCpltCallback>:
 800a52c:	4770      	bx	lr
 800a52e:	bf00      	nop

0800a530 <HAL_I2C_SlaveTxCpltCallback>:
 800a530:	4770      	bx	lr
 800a532:	bf00      	nop

0800a534 <HAL_I2C_SlaveRxCpltCallback>:
 800a534:	4770      	bx	lr
 800a536:	bf00      	nop

0800a538 <HAL_I2C_AddrCallback>:
}
 800a538:	4770      	bx	lr
 800a53a:	bf00      	nop

0800a53c <HAL_I2C_ListenCpltCallback>:
 800a53c:	4770      	bx	lr
 800a53e:	bf00      	nop

0800a540 <HAL_I2C_MemTxCpltCallback>:
 800a540:	4770      	bx	lr
 800a542:	bf00      	nop

0800a544 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a544:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800a548:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800a54a:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800a54c:	b959      	cbnz	r1, 800a566 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a54e:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a550:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a552:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a554:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a556:	d00d      	beq.n	800a574 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800a558:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800a55c:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800a55e:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a560:	3201      	adds	r2, #1
 800a562:	6502      	str	r2, [r0, #80]	; 0x50
 800a564:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800a566:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a568:	2901      	cmp	r1, #1
 800a56a:	d009      	beq.n	800a580 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800a56c:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a56e:	2902      	cmp	r1, #2
 800a570:	d00e      	beq.n	800a590 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800a572:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a574:	b2d2      	uxtb	r2, r2
 800a576:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800a578:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a57a:	3202      	adds	r2, #2
 800a57c:	6502      	str	r2, [r0, #80]	; 0x50
 800a57e:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a580:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800a582:	6801      	ldr	r1, [r0, #0]
 800a584:	b2d2      	uxtb	r2, r2
 800a586:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800a588:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a58a:	3201      	adds	r2, #1
 800a58c:	6502      	str	r2, [r0, #80]	; 0x50
 800a58e:	4770      	bx	lr
 800a590:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800a592:	2a22      	cmp	r2, #34	; 0x22
 800a594:	d01f      	beq.n	800a5d6 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a596:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a598:	b289      	uxth	r1, r1
 800a59a:	b9c1      	cbnz	r1, 800a5ce <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a59c:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a59e:	b289      	uxth	r1, r1
 800a5a0:	2900      	cmp	r1, #0
 800a5a2:	d1e6      	bne.n	800a572 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800a5a4:	2a21      	cmp	r2, #33	; 0x21
 800a5a6:	d1e4      	bne.n	800a572 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a5a8:	6802      	ldr	r2, [r0, #0]
{
 800a5aa:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a5ac:	6854      	ldr	r4, [r2, #4]
 800a5ae:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800a5b2:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a5b4:	6814      	ldr	r4, [r2, #0]
 800a5b6:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800a5ba:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800a5bc:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a5be:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800a5c0:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a5c4:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800a5c8:	f7ff ffba 	bl	800a540 <HAL_I2C_MemTxCpltCallback>
}
 800a5cc:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a5ce:	2a21      	cmp	r2, #33	; 0x21
 800a5d0:	d00a      	beq.n	800a5e8 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a5d2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800a5d4:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800a5d6:	6801      	ldr	r1, [r0, #0]
 800a5d8:	680a      	ldr	r2, [r1, #0]
 800a5da:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a5de:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800a5e0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a5e2:	3201      	adds	r2, #1
 800a5e4:	6502      	str	r2, [r0, #80]	; 0x50
 800a5e6:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a5e8:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800a5ea:	6802      	ldr	r2, [r0, #0]
 800a5ec:	f811 0b01 	ldrb.w	r0, [r1], #1
 800a5f0:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800a5f2:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a5f4:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800a5f6:	3a01      	subs	r2, #1
 800a5f8:	b292      	uxth	r2, r2
 800a5fa:	855a      	strh	r2, [r3, #42]	; 0x2a
 800a5fc:	4770      	bx	lr
 800a5fe:	bf00      	nop

0800a600 <HAL_I2C_MemRxCpltCallback>:
 800a600:	4770      	bx	lr
 800a602:	bf00      	nop

0800a604 <HAL_I2C_ErrorCallback>:
 800a604:	4770      	bx	lr
 800a606:	bf00      	nop

0800a608 <HAL_I2C_AbortCpltCallback>:
 800a608:	4770      	bx	lr
 800a60a:	bf00      	nop

0800a60c <I2C_DMAAbort>:
{
 800a60c:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a60e:	4b3a      	ldr	r3, [pc, #232]	; (800a6f8 <I2C_DMAAbort+0xec>)
 800a610:	4a3a      	ldr	r2, [pc, #232]	; (800a6fc <I2C_DMAAbort+0xf0>)
 800a612:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800a614:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800a616:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a618:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800a61a:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a61c:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800a620:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a622:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a624:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a628:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a62a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a62e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a632:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a634:	9301      	str	r3, [sp, #4]
 800a636:	e005      	b.n	800a644 <I2C_DMAAbort+0x38>
    count--;
 800a638:	9b01      	ldr	r3, [sp, #4]
 800a63a:	3b01      	subs	r3, #1
 800a63c:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a63e:	6813      	ldr	r3, [r2, #0]
 800a640:	059b      	lsls	r3, r3, #22
 800a642:	d506      	bpl.n	800a652 <I2C_DMAAbort+0x46>
    if (count == 0U)
 800a644:	9b01      	ldr	r3, [sp, #4]
 800a646:	2b00      	cmp	r3, #0
 800a648:	d1f6      	bne.n	800a638 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800a64a:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a64c:	f043 0320 	orr.w	r3, r3, #32
 800a650:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800a652:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800a654:	b34c      	cbz	r4, 800a6aa <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800a656:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800a658:	2500      	movs	r5, #0
 800a65a:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800a65c:	b1f3      	cbz	r3, 800a69c <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a65e:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a660:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a662:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800a666:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800a668:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a66a:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800a66c:	2400      	movs	r4, #0
 800a66e:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800a670:	6813      	ldr	r3, [r2, #0]
 800a672:	f023 0301 	bic.w	r3, r3, #1
 800a676:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a678:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a67c:	2b60      	cmp	r3, #96	; 0x60
 800a67e:	d02a      	beq.n	800a6d6 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a680:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800a684:	2928      	cmp	r1, #40	; 0x28
 800a686:	d019      	beq.n	800a6bc <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800a688:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a68a:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a68c:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a690:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800a694:	f7ff ffb6 	bl	800a604 <HAL_I2C_ErrorCallback>
}
 800a698:	b002      	add	sp, #8
 800a69a:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a69c:	6815      	ldr	r5, [r2, #0]
 800a69e:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a6a2:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a6a4:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a6a6:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800a6a8:	e7e2      	b.n	800a670 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800a6aa:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800a6ac:	b1f3      	cbz	r3, 800a6ec <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a6ae:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a6b0:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a6b2:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a6b6:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a6b8:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a6ba:	e7d7      	b.n	800a66c <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800a6bc:	6813      	ldr	r3, [r2, #0]
 800a6be:	f043 0301 	orr.w	r3, r3, #1
 800a6c2:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a6c4:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a6c6:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a6c8:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a6cc:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a6ce:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a6d0:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800a6d4:	e7de      	b.n	800a694 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a6d6:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800a6d8:	2220      	movs	r2, #32
 800a6da:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a6de:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800a6e2:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800a6e4:	f7ff ff90 	bl	800a608 <HAL_I2C_AbortCpltCallback>
}
 800a6e8:	b002      	add	sp, #8
 800a6ea:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a6ec:	6814      	ldr	r4, [r2, #0]
 800a6ee:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800a6f2:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800a6f4:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a6f6:	e7bb      	b.n	800a670 <I2C_DMAAbort+0x64>
 800a6f8:	20000078 	.word	0x20000078
 800a6fc:	14f8b589 	.word	0x14f8b589

0800a700 <I2C_ITError>:
{
 800a700:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a702:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800a706:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a70a:	2b10      	cmp	r3, #16
{
 800a70c:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a70e:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a710:	d039      	beq.n	800a786 <I2C_ITError+0x86>
 800a712:	b2d9      	uxtb	r1, r3
 800a714:	2940      	cmp	r1, #64	; 0x40
 800a716:	d036      	beq.n	800a786 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a718:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800a71c:	2928      	cmp	r1, #40	; 0x28
 800a71e:	d03d      	beq.n	800a79c <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a720:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a722:	6859      	ldr	r1, [r3, #4]
 800a724:	0508      	lsls	r0, r1, #20
 800a726:	d407      	bmi.n	800a738 <I2C_ITError+0x38>
 800a728:	2a60      	cmp	r2, #96	; 0x60
 800a72a:	d005      	beq.n	800a738 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800a72c:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a72e:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a730:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a734:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800a738:	2200      	movs	r2, #0
 800a73a:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a73c:	685a      	ldr	r2, [r3, #4]
 800a73e:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a742:	d134      	bne.n	800a7ae <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a744:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a748:	2960      	cmp	r1, #96	; 0x60
 800a74a:	d075      	beq.n	800a838 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a74c:	695a      	ldr	r2, [r3, #20]
 800a74e:	0650      	lsls	r0, r2, #25
 800a750:	d505      	bpl.n	800a75e <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a752:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a754:	691b      	ldr	r3, [r3, #16]
 800a756:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a758:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a75a:	3301      	adds	r3, #1
 800a75c:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800a75e:	4620      	mov	r0, r4
 800a760:	f7ff ff50 	bl	800a604 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800a764:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800a766:	0719      	lsls	r1, r3, #28
 800a768:	d004      	beq.n	800a774 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a76a:	6822      	ldr	r2, [r4, #0]
 800a76c:	6853      	ldr	r3, [r2, #4]
 800a76e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800a772:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800a774:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a778:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a77a:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800a77c:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a77e:	d501      	bpl.n	800a784 <I2C_ITError+0x84>
 800a780:	2b28      	cmp	r3, #40	; 0x28
 800a782:	d02f      	beq.n	800a7e4 <I2C_ITError+0xe4>
}
 800a784:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a786:	2a22      	cmp	r2, #34	; 0x22
 800a788:	d1c6      	bne.n	800a718 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a78a:	6823      	ldr	r3, [r4, #0]
 800a78c:	681a      	ldr	r2, [r3, #0]
 800a78e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a792:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a794:	685a      	ldr	r2, [r3, #4]
 800a796:	0512      	lsls	r2, r2, #20
 800a798:	d5c8      	bpl.n	800a72c <I2C_ITError+0x2c>
 800a79a:	e7cd      	b.n	800a738 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a79c:	2300      	movs	r3, #0
 800a79e:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a7a0:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800a7a2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a7a6:	685a      	ldr	r2, [r3, #4]
 800a7a8:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a7ac:	d0ca      	beq.n	800a744 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a7ae:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a7b0:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a7b2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a7b6:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a7b8:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a7bc:	2b01      	cmp	r3, #1
 800a7be:	d01e      	beq.n	800a7fe <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a7c0:	4b28      	ldr	r3, [pc, #160]	; (800a864 <I2C_ITError+0x164>)
 800a7c2:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a7c4:	f7fe fe2e 	bl	8009424 <HAL_DMA_Abort_IT>
 800a7c8:	2800      	cmp	r0, #0
 800a7ca:	d0cb      	beq.n	800a764 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800a7cc:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a7ce:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800a7d0:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a7d2:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a7d4:	f023 0301 	bic.w	r3, r3, #1
 800a7d8:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a7da:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a7de:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a7e0:	4798      	blx	r3
 800a7e2:	e7bf      	b.n	800a764 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a7e4:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800a7e6:	4920      	ldr	r1, [pc, #128]	; (800a868 <I2C_ITError+0x168>)
 800a7e8:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800a7ea:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800a7ec:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800a7ee:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800a7f0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a7f4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800a7f8:	f7ff fea0 	bl	800a53c <HAL_I2C_ListenCpltCallback>
}
 800a7fc:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a7fe:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a800:	4b18      	ldr	r3, [pc, #96]	; (800a864 <I2C_ITError+0x164>)
 800a802:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a804:	f7fe fe0e 	bl	8009424 <HAL_DMA_Abort_IT>
 800a808:	2800      	cmp	r0, #0
 800a80a:	d0ab      	beq.n	800a764 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a80c:	6823      	ldr	r3, [r4, #0]
 800a80e:	695a      	ldr	r2, [r3, #20]
 800a810:	0651      	lsls	r1, r2, #25
 800a812:	d506      	bpl.n	800a822 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a814:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a816:	691b      	ldr	r3, [r3, #16]
 800a818:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800a81a:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a81c:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a81e:	3201      	adds	r2, #1
 800a820:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a822:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a824:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800a826:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800a82a:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a82c:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a82e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a832:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a834:	4798      	blx	r3
 800a836:	e795      	b.n	800a764 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800a838:	2120      	movs	r1, #32
 800a83a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a83e:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a840:	695a      	ldr	r2, [r3, #20]
 800a842:	0652      	lsls	r2, r2, #25
 800a844:	d506      	bpl.n	800a854 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a846:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a848:	691b      	ldr	r3, [r3, #16]
 800a84a:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a84c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a84e:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a850:	3201      	adds	r2, #1
 800a852:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a854:	681a      	ldr	r2, [r3, #0]
 800a856:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800a85a:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800a85c:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800a85e:	f7ff fed3 	bl	800a608 <HAL_I2C_AbortCpltCallback>
 800a862:	e77f      	b.n	800a764 <I2C_ITError+0x64>
 800a864:	0800a60d 	.word	0x0800a60d
 800a868:	ffff0000 	.word	0xffff0000

0800a86c <HAL_I2C_EV_IRQHandler>:
{
 800a86c:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a86e:	6803      	ldr	r3, [r0, #0]
{
 800a870:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a872:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a874:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a876:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a87a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a87e:	2910      	cmp	r1, #16
{
 800a880:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a882:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a884:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a888:	d022      	beq.n	800a8d0 <HAL_I2C_EV_IRQHandler+0x64>
 800a88a:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a88e:	d01f      	beq.n	800a8d0 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a890:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800a892:	2900      	cmp	r1, #0
 800a894:	f000 8094 	beq.w	800a9c0 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a898:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800a89a:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a89c:	f011 0602 	ands.w	r6, r1, #2
 800a8a0:	d059      	beq.n	800a956 <HAL_I2C_EV_IRQHandler+0xea>
 800a8a2:	0586      	lsls	r6, r0, #22
 800a8a4:	d559      	bpl.n	800a95a <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a8a6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a8a8:	b102      	cbz	r2, 800a8ac <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a8aa:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a8ac:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a8b0:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800a8b4:	2a28      	cmp	r2, #40	; 0x28
 800a8b6:	f000 821e 	beq.w	800acf6 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a8ba:	2200      	movs	r2, #0
 800a8bc:	920c      	str	r2, [sp, #48]	; 0x30
 800a8be:	6959      	ldr	r1, [r3, #20]
 800a8c0:	910c      	str	r1, [sp, #48]	; 0x30
 800a8c2:	699b      	ldr	r3, [r3, #24]
 800a8c4:	930c      	str	r3, [sp, #48]	; 0x30
 800a8c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800a8c8:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800a8cc:	b00e      	add	sp, #56	; 0x38
 800a8ce:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a8d0:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a8d2:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800a8d4:	f011 0f01 	tst.w	r1, #1
 800a8d8:	d11a      	bne.n	800a910 <HAL_I2C_EV_IRQHandler+0xa4>
 800a8da:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800a8de:	d0f5      	beq.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
 800a8e0:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800a8e4:	d0f2      	beq.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a8e6:	070d      	lsls	r5, r1, #28
 800a8e8:	d56d      	bpl.n	800a9c6 <HAL_I2C_EV_IRQHandler+0x15a>
 800a8ea:	0585      	lsls	r5, r0, #22
 800a8ec:	f140 8083 	bpl.w	800a9f6 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a8f0:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a8f2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800a8f4:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a8f6:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a8f8:	2900      	cmp	r1, #0
 800a8fa:	f000 81e3 	beq.w	800acc4 <HAL_I2C_EV_IRQHandler+0x458>
 800a8fe:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800a900:	2a00      	cmp	r2, #0
 800a902:	f000 81df 	beq.w	800acc4 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a906:	685a      	ldr	r2, [r3, #4]
 800a908:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a90c:	605a      	str	r2, [r3, #4]
 800a90e:	e7dd      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a910:	0585      	lsls	r5, r0, #22
 800a912:	d56e      	bpl.n	800a9f2 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800a914:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a916:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800a91a:	f000 81e9 	beq.w	800acf0 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800a91e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a920:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800a924:	bf04      	itt	eq
 800a926:	2208      	moveq	r2, #8
 800a928:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a92a:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a92e:	2a40      	cmp	r2, #64	; 0x40
 800a930:	f000 81d7 	beq.w	800ace2 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800a934:	6922      	ldr	r2, [r4, #16]
 800a936:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800a93a:	f000 81b2 	beq.w	800aca2 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800a93e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a940:	2a00      	cmp	r2, #0
 800a942:	f040 81ef 	bne.w	800ad24 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800a946:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a948:	11d2      	asrs	r2, r2, #7
 800a94a:	f002 0206 	and.w	r2, r2, #6
 800a94e:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800a952:	611a      	str	r2, [r3, #16]
 800a954:	e7ba      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a956:	06cd      	lsls	r5, r1, #27
 800a958:	d47c      	bmi.n	800aa54 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a95a:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800a95e:	2a21      	cmp	r2, #33	; 0x21
 800a960:	f000 80f5 	beq.w	800ab4e <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a964:	064e      	lsls	r6, r1, #25
 800a966:	f140 8132 	bpl.w	800abce <HAL_I2C_EV_IRQHandler+0x362>
 800a96a:	0545      	lsls	r5, r0, #21
 800a96c:	f140 812f 	bpl.w	800abce <HAL_I2C_EV_IRQHandler+0x362>
 800a970:	0749      	lsls	r1, r1, #29
 800a972:	f100 812f 	bmi.w	800abd4 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a976:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a97a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a97c:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a97e:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800a980:	2a00      	cmp	r2, #0
 800a982:	d0a3      	beq.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a984:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a986:	691b      	ldr	r3, [r3, #16]
 800a988:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a98a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a98c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a98e:	3b01      	subs	r3, #1
 800a990:	b29b      	uxth	r3, r3
 800a992:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a994:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a996:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a998:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a99a:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a99c:	2b00      	cmp	r3, #0
 800a99e:	d195      	bne.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
 800a9a0:	292a      	cmp	r1, #42	; 0x2a
 800a9a2:	d193      	bne.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a9a4:	6822      	ldr	r2, [r4, #0]
 800a9a6:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a9a8:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a9aa:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a9ac:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a9b0:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a9b2:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a9b4:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a9b6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a9ba:	f7ff fdbb 	bl	800a534 <HAL_I2C_SlaveRxCpltCallback>
 800a9be:	e785      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a9c0:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a9c2:	6959      	ldr	r1, [r3, #20]
 800a9c4:	e76a      	b.n	800a89c <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a9c6:	078d      	lsls	r5, r1, #30
 800a9c8:	d515      	bpl.n	800a9f6 <HAL_I2C_EV_IRQHandler+0x18a>
 800a9ca:	0585      	lsls	r5, r0, #22
 800a9cc:	d513      	bpl.n	800a9f6 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a9ce:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800a9d2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800a9d4:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a9d6:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a9da:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a9dc:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a9de:	f000 81b3 	beq.w	800ad48 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a9e2:	2200      	movs	r2, #0
 800a9e4:	920a      	str	r2, [sp, #40]	; 0x28
 800a9e6:	695a      	ldr	r2, [r3, #20]
 800a9e8:	920a      	str	r2, [sp, #40]	; 0x28
 800a9ea:	699b      	ldr	r3, [r3, #24]
 800a9ec:	930a      	str	r3, [sp, #40]	; 0x28
 800a9ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a9f0:	e76c      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a9f2:	070d      	lsls	r5, r1, #28
 800a9f4:	d5e7      	bpl.n	800a9c6 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800a9f6:	0776      	lsls	r6, r6, #29
 800a9f8:	f140 80f5 	bpl.w	800abe6 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a9fc:	685d      	ldr	r5, [r3, #4]
 800a9fe:	052d      	lsls	r5, r5, #20
 800aa00:	f53f af64 	bmi.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800aa04:	060e      	lsls	r6, r1, #24
 800aa06:	f140 8115 	bpl.w	800ac34 <HAL_I2C_EV_IRQHandler+0x3c8>
 800aa0a:	0545      	lsls	r5, r0, #21
 800aa0c:	f140 8112 	bpl.w	800ac34 <HAL_I2C_EV_IRQHandler+0x3c8>
 800aa10:	074e      	lsls	r6, r1, #29
 800aa12:	f100 8112 	bmi.w	800ac3a <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aa16:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800aa1a:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800aa1c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800aa20:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aa22:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800aa24:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800aa26:	2800      	cmp	r0, #0
 800aa28:	f040 8235 	bne.w	800ae96 <HAL_I2C_EV_IRQHandler+0x62a>
 800aa2c:	2a21      	cmp	r2, #33	; 0x21
 800aa2e:	f000 8347 	beq.w	800b0c0 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800aa32:	2940      	cmp	r1, #64	; 0x40
 800aa34:	f47f af4a 	bne.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800aa38:	2a22      	cmp	r2, #34	; 0x22
 800aa3a:	f47f af47 	bne.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800aa3e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aa40:	b292      	uxth	r2, r2
 800aa42:	2a00      	cmp	r2, #0
 800aa44:	f000 8268 	beq.w	800af18 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aa48:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800aa4c:	2a40      	cmp	r2, #64	; 0x40
 800aa4e:	f040 80b4 	bne.w	800abba <HAL_I2C_EV_IRQHandler+0x34e>
 800aa52:	e0fc      	b.n	800ac4e <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800aa54:	0585      	lsls	r5, r0, #22
 800aa56:	d580      	bpl.n	800a95a <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aa58:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aa5c:	685a      	ldr	r2, [r3, #4]
 800aa5e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800aa62:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800aa64:	960d      	str	r6, [sp, #52]	; 0x34
 800aa66:	695a      	ldr	r2, [r3, #20]
 800aa68:	920d      	str	r2, [sp, #52]	; 0x34
 800aa6a:	681a      	ldr	r2, [r3, #0]
 800aa6c:	f042 0201 	orr.w	r2, r2, #1
 800aa70:	601a      	str	r2, [r3, #0]
 800aa72:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa74:	681a      	ldr	r2, [r3, #0]
 800aa76:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aa7a:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800aa7c:	685a      	ldr	r2, [r3, #4]
 800aa7e:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aa80:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800aa82:	d521      	bpl.n	800aac8 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800aa84:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800aa88:	2a22      	cmp	r2, #34	; 0x22
 800aa8a:	f000 817a 	beq.w	800ad82 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800aa8e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800aa90:	6802      	ldr	r2, [r0, #0]
 800aa92:	6852      	ldr	r2, [r2, #4]
 800aa94:	b292      	uxth	r2, r2
 800aa96:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800aa98:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aa9a:	b292      	uxth	r2, r2
 800aa9c:	b11a      	cbz	r2, 800aaa6 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800aa9e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800aaa0:	f042 0204 	orr.w	r2, r2, #4
 800aaa4:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800aaa6:	685a      	ldr	r2, [r3, #4]
 800aaa8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800aaac:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800aaae:	f7fe fda1 	bl	80095f4 <HAL_DMA_GetState>
 800aab2:	2801      	cmp	r0, #1
 800aab4:	d008      	beq.n	800aac8 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800aab6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800aab8:	4b99      	ldr	r3, [pc, #612]	; (800ad20 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800aaba:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800aabc:	f7fe fcb2 	bl	8009424 <HAL_DMA_Abort_IT>
 800aac0:	b110      	cbz	r0, 800aac8 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800aac2:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800aac4:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800aac6:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800aac8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800aaca:	b29b      	uxth	r3, r3
 800aacc:	b313      	cbz	r3, 800ab14 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800aace:	6823      	ldr	r3, [r4, #0]
 800aad0:	695a      	ldr	r2, [r3, #20]
 800aad2:	0752      	lsls	r2, r2, #29
 800aad4:	d50a      	bpl.n	800aaec <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aad6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aad8:	691b      	ldr	r3, [r3, #16]
 800aada:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800aadc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800aade:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800aae0:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800aae2:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800aae4:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800aae6:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800aae8:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800aaea:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800aaec:	695a      	ldr	r2, [r3, #20]
 800aaee:	0656      	lsls	r6, r2, #25
 800aaf0:	d509      	bpl.n	800ab06 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aaf2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aaf4:	691b      	ldr	r3, [r3, #16]
 800aaf6:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800aaf8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800aafa:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800aafc:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800aafe:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800ab00:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800ab02:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800ab04:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800ab06:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ab08:	b29b      	uxth	r3, r3
 800ab0a:	b11b      	cbz	r3, 800ab14 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800ab0c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ab0e:	f043 0304 	orr.w	r3, r3, #4
 800ab12:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800ab14:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ab16:	2b00      	cmp	r3, #0
 800ab18:	f040 80dd 	bne.w	800acd6 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800ab1c:	2d2a      	cmp	r5, #42	; 0x2a
 800ab1e:	f000 8151 	beq.w	800adc4 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800ab22:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800ab26:	2b28      	cmp	r3, #40	; 0x28
 800ab28:	f000 8154 	beq.w	800add4 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800ab2c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ab2e:	2b22      	cmp	r3, #34	; 0x22
 800ab30:	d002      	beq.n	800ab38 <HAL_I2C_EV_IRQHandler+0x2cc>
 800ab32:	2d22      	cmp	r5, #34	; 0x22
 800ab34:	f47f aeca 	bne.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800ab38:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800ab3a:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800ab3c:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800ab3e:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800ab40:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab44:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800ab48:	f7ff fcf4 	bl	800a534 <HAL_I2C_SlaveRxCpltCallback>
 800ab4c:	e6be      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800ab4e:	060d      	lsls	r5, r1, #24
 800ab50:	d528      	bpl.n	800aba4 <HAL_I2C_EV_IRQHandler+0x338>
 800ab52:	0546      	lsls	r6, r0, #21
 800ab54:	d526      	bpl.n	800aba4 <HAL_I2C_EV_IRQHandler+0x338>
 800ab56:	074d      	lsls	r5, r1, #29
 800ab58:	d427      	bmi.n	800abaa <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ab5a:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800ab5e:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800ab60:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ab62:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800ab64:	2900      	cmp	r1, #0
 800ab66:	f43f aeb1 	beq.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ab6a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800ab6c:	f811 5b01 	ldrb.w	r5, [r1], #1
 800ab70:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800ab72:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800ab74:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800ab76:	3901      	subs	r1, #1
 800ab78:	b289      	uxth	r1, r1
 800ab7a:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800ab7c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800ab7e:	b289      	uxth	r1, r1
 800ab80:	2900      	cmp	r1, #0
 800ab82:	f47f aea3 	bne.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
 800ab86:	2829      	cmp	r0, #41	; 0x29
 800ab88:	f47f aea0 	bne.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ab8c:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800ab8e:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ab90:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800ab94:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800ab96:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800ab98:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800ab9a:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800ab9e:	f7ff fcc7 	bl	800a530 <HAL_I2C_SlaveTxCpltCallback>
 800aba2:	e693      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800aba4:	0749      	lsls	r1, r1, #29
 800aba6:	f57f ae91 	bpl.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
 800abaa:	0582      	lsls	r2, r0, #22
 800abac:	f57f ae8e 	bpl.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800abb0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800abb2:	b292      	uxth	r2, r2
 800abb4:	2a00      	cmp	r2, #0
 800abb6:	f43f ae89 	beq.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800abba:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800abbc:	f812 1b01 	ldrb.w	r1, [r2], #1
 800abc0:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800abc2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800abc4:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800abc6:	3b01      	subs	r3, #1
 800abc8:	b29b      	uxth	r3, r3
 800abca:	8563      	strh	r3, [r4, #42]	; 0x2a
 800abcc:	e67e      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800abce:	074a      	lsls	r2, r1, #29
 800abd0:	f57f ae7c 	bpl.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
 800abd4:	0586      	lsls	r6, r0, #22
 800abd6:	f57f ae79 	bpl.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800abda:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800abdc:	b292      	uxth	r2, r2
 800abde:	2a00      	cmp	r2, #0
 800abe0:	f43f ae74 	beq.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
 800abe4:	e01b      	b.n	800ac1e <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800abe6:	685a      	ldr	r2, [r3, #4]
 800abe8:	0512      	lsls	r2, r2, #20
 800abea:	f53f ae6f 	bmi.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800abee:	064e      	lsls	r6, r1, #25
 800abf0:	d433      	bmi.n	800ac5a <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800abf2:	0749      	lsls	r1, r1, #29
 800abf4:	f57f ae6a 	bpl.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
 800abf8:	0582      	lsls	r2, r0, #22
 800abfa:	f57f ae67 	bpl.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800abfe:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800ac00:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ac02:	b292      	uxth	r2, r2
 800ac04:	2a04      	cmp	r2, #4
 800ac06:	f000 8113 	beq.w	800ae30 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800ac0a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ac0c:	b292      	uxth	r2, r2
 800ac0e:	2a03      	cmp	r2, #3
 800ac10:	f000 8153 	beq.w	800aeba <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800ac14:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ac16:	b292      	uxth	r2, r2
 800ac18:	2a02      	cmp	r2, #2
 800ac1a:	f000 8182 	beq.w	800af22 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac1e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ac20:	691b      	ldr	r3, [r3, #16]
 800ac22:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800ac24:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800ac26:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800ac28:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800ac2a:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800ac2c:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800ac2e:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800ac30:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800ac32:	e64b      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ac34:	074d      	lsls	r5, r1, #29
 800ac36:	f57f ae49 	bpl.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
 800ac3a:	0581      	lsls	r1, r0, #22
 800ac3c:	f57f ae46 	bpl.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800ac40:	2a21      	cmp	r2, #33	; 0x21
 800ac42:	f000 80fd 	beq.w	800ae40 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800ac46:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800ac4a:	f47f ae3f 	bne.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800ac4e:	4620      	mov	r0, r4
}
 800ac50:	b00e      	add	sp, #56	; 0x38
 800ac52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800ac56:	f7ff bc75 	b.w	800a544 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800ac5a:	0545      	lsls	r5, r0, #21
 800ac5c:	d5c9      	bpl.n	800abf2 <HAL_I2C_EV_IRQHandler+0x386>
 800ac5e:	f011 0104 	ands.w	r1, r1, #4
 800ac62:	d1c9      	bne.n	800abf8 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800ac64:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800ac68:	2a22      	cmp	r2, #34	; 0x22
 800ac6a:	f47f ae2f 	bne.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800ac6e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ac70:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800ac72:	2a03      	cmp	r2, #3
 800ac74:	f240 81ec 	bls.w	800b050 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac78:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ac7a:	691b      	ldr	r3, [r3, #16]
 800ac7c:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800ac7e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800ac80:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800ac82:	3b01      	subs	r3, #1
 800ac84:	b29b      	uxth	r3, r3
 800ac86:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800ac88:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ac8a:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800ac8c:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800ac8e:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800ac90:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800ac92:	f47f ae1b 	bne.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ac96:	6822      	ldr	r2, [r4, #0]
 800ac98:	6853      	ldr	r3, [r2, #4]
 800ac9a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800ac9e:	6053      	str	r3, [r2, #4]
 800aca0:	e614      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800aca2:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800aca6:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800aca8:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800acaa:	bf16      	itet	ne
 800acac:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800acb0:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800acb4:	b2d2      	uxtbne	r2, r2
 800acb6:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800acb8:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800acba:	b11a      	cbz	r2, 800acc4 <HAL_I2C_EV_IRQHandler+0x458>
 800acbc:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800acbe:	2a00      	cmp	r2, #0
 800acc0:	f47f ae21 	bne.w	800a906 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800acc4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800acc6:	2a00      	cmp	r2, #0
 800acc8:	f43f ae00 	beq.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
 800accc:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800acce:	2a00      	cmp	r2, #0
 800acd0:	f47f ae19 	bne.w	800a906 <HAL_I2C_EV_IRQHandler+0x9a>
 800acd4:	e5fa      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800acd6:	4620      	mov	r0, r4
}
 800acd8:	b00e      	add	sp, #56	; 0x38
 800acda:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800acde:	f7ff bd0f 	b.w	800a700 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800ace2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800ace4:	bb52      	cbnz	r2, 800ad3c <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800ace6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800ace8:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800acec:	611a      	str	r2, [r3, #16]
 800acee:	e5ed      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800acf0:	2201      	movs	r2, #1
 800acf2:	62e2      	str	r2, [r4, #44]	; 0x2c
 800acf4:	e619      	b.n	800a92a <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800acf6:	685a      	ldr	r2, [r3, #4]
 800acf8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800acfc:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800acfe:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800ad00:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800ad04:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800ad08:	bf54      	ite	pl
 800ad0a:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800ad0c:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800ad0e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800ad12:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800ad16:	4620      	mov	r0, r4
 800ad18:	f7ff fc0e 	bl	800a538 <HAL_I2C_AddrCallback>
 800ad1c:	e5d6      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
 800ad1e:	bf00      	nop
 800ad20:	0800a60d 	.word	0x0800a60d
      else if (hi2c->EventCount == 1U)
 800ad24:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800ad26:	2a01      	cmp	r2, #1
 800ad28:	f47f add0 	bne.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800ad2c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800ad2e:	11d2      	asrs	r2, r2, #7
 800ad30:	f002 0206 	and.w	r2, r2, #6
 800ad34:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800ad38:	611a      	str	r2, [r3, #16]
 800ad3a:	e5c7      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800ad3c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800ad3e:	f042 0201 	orr.w	r2, r2, #1
 800ad42:	b2d2      	uxtb	r2, r2
 800ad44:	611a      	str	r2, [r3, #16]
 800ad46:	e5c1      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800ad48:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800ad4a:	b911      	cbnz	r1, 800ad52 <HAL_I2C_EV_IRQHandler+0x4e6>
 800ad4c:	2a40      	cmp	r2, #64	; 0x40
 800ad4e:	f000 809b 	beq.w	800ae88 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800ad52:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800ad54:	b922      	cbnz	r2, 800ad60 <HAL_I2C_EV_IRQHandler+0x4f4>
 800ad56:	6921      	ldr	r1, [r4, #16]
 800ad58:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800ad5c:	f000 809f 	beq.w	800ae9e <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800ad60:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ad62:	b292      	uxth	r2, r2
 800ad64:	2a00      	cmp	r2, #0
 800ad66:	d142      	bne.n	800adee <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ad68:	9203      	str	r2, [sp, #12]
 800ad6a:	695a      	ldr	r2, [r3, #20]
 800ad6c:	9203      	str	r2, [sp, #12]
 800ad6e:	699a      	ldr	r2, [r3, #24]
 800ad70:	9203      	str	r2, [sp, #12]
 800ad72:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad74:	681a      	ldr	r2, [r3, #0]
 800ad76:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ad7a:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800ad7c:	2300      	movs	r3, #0
 800ad7e:	6523      	str	r3, [r4, #80]	; 0x50
 800ad80:	e5a4      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800ad82:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800ad84:	6802      	ldr	r2, [r0, #0]
 800ad86:	6852      	ldr	r2, [r2, #4]
 800ad88:	b292      	uxth	r2, r2
 800ad8a:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800ad8c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ad8e:	b292      	uxth	r2, r2
 800ad90:	b11a      	cbz	r2, 800ad9a <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800ad92:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ad94:	f042 0204 	orr.w	r2, r2, #4
 800ad98:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800ad9a:	685a      	ldr	r2, [r3, #4]
 800ad9c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800ada0:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800ada2:	f7fe fc27 	bl	80095f4 <HAL_DMA_GetState>
 800ada6:	2801      	cmp	r0, #1
 800ada8:	f43f ae8e 	beq.w	800aac8 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800adac:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800adae:	4b98      	ldr	r3, [pc, #608]	; (800b010 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800adb0:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800adb2:	f7fe fb37 	bl	8009424 <HAL_DMA_Abort_IT>
 800adb6:	2800      	cmp	r0, #0
 800adb8:	f43f ae86 	beq.w	800aac8 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800adbc:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800adbe:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800adc0:	4798      	blx	r3
 800adc2:	e681      	b.n	800aac8 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800adc4:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800adc6:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800adc8:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800adca:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800adce:	f7ff fbb1 	bl	800a534 <HAL_I2C_SlaveRxCpltCallback>
 800add2:	e6a6      	b.n	800ab22 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800add4:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800add6:	498f      	ldr	r1, [pc, #572]	; (800b014 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800add8:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800adda:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800addc:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800adde:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800ade0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ade4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800ade8:	f7ff fba8 	bl	800a53c <HAL_I2C_ListenCpltCallback>
 800adec:	e56e      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800adee:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800adf0:	b292      	uxth	r2, r2
 800adf2:	2a01      	cmp	r2, #1
 800adf4:	d070      	beq.n	800aed8 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800adf6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800adf8:	b292      	uxth	r2, r2
 800adfa:	2a02      	cmp	r2, #2
 800adfc:	f000 80d6 	beq.w	800afac <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae00:	681a      	ldr	r2, [r3, #0]
 800ae02:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ae06:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800ae08:	685a      	ldr	r2, [r3, #4]
 800ae0a:	0511      	lsls	r1, r2, #20
 800ae0c:	d508      	bpl.n	800ae20 <HAL_I2C_EV_IRQHandler+0x5b4>
 800ae0e:	2820      	cmp	r0, #32
 800ae10:	f200 80f8 	bhi.w	800b004 <HAL_I2C_EV_IRQHandler+0x798>
 800ae14:	2807      	cmp	r0, #7
 800ae16:	f200 80ea 	bhi.w	800afee <HAL_I2C_EV_IRQHandler+0x782>
 800ae1a:	2801      	cmp	r0, #1
 800ae1c:	f000 80ed 	beq.w	800affa <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ae20:	2200      	movs	r2, #0
 800ae22:	9209      	str	r2, [sp, #36]	; 0x24
 800ae24:	695a      	ldr	r2, [r3, #20]
 800ae26:	9209      	str	r2, [sp, #36]	; 0x24
 800ae28:	699b      	ldr	r3, [r3, #24]
 800ae2a:	9309      	str	r3, [sp, #36]	; 0x24
 800ae2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ae2e:	e7a5      	b.n	800ad7c <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ae30:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae32:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ae34:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ae38:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae3a:	691b      	ldr	r3, [r3, #16]
 800ae3c:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800ae3e:	e6f1      	b.n	800ac24 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800ae40:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800ae42:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800ae46:	2a21      	cmp	r2, #33	; 0x21
 800ae48:	f47f ad40 	bne.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800ae4c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ae4e:	b292      	uxth	r2, r2
 800ae50:	2a00      	cmp	r2, #0
 800ae52:	f47f aeb2 	bne.w	800abba <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800ae56:	2908      	cmp	r1, #8
 800ae58:	f000 80e2 	beq.w	800b020 <HAL_I2C_EV_IRQHandler+0x7b4>
 800ae5c:	2920      	cmp	r1, #32
 800ae5e:	f000 80df 	beq.w	800b020 <HAL_I2C_EV_IRQHandler+0x7b4>
 800ae62:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800ae66:	f000 80db 	beq.w	800b020 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ae6a:	6859      	ldr	r1, [r3, #4]
 800ae6c:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800ae70:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ae72:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800ae74:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ae76:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae78:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800ae7c:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800ae7e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800ae82:	f7ff fb51 	bl	800a528 <HAL_I2C_MasterTxCpltCallback>
 800ae86:	e521      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ae88:	9101      	str	r1, [sp, #4]
 800ae8a:	695a      	ldr	r2, [r3, #20]
 800ae8c:	9201      	str	r2, [sp, #4]
 800ae8e:	699b      	ldr	r3, [r3, #24]
 800ae90:	9301      	str	r3, [sp, #4]
 800ae92:	9b01      	ldr	r3, [sp, #4]
 800ae94:	e51a      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800ae96:	2a21      	cmp	r2, #33	; 0x21
 800ae98:	f43f add1 	beq.w	800aa3e <HAL_I2C_EV_IRQHandler+0x1d2>
 800ae9c:	e5c9      	b.n	800aa32 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ae9e:	9202      	str	r2, [sp, #8]
 800aea0:	695a      	ldr	r2, [r3, #20]
 800aea2:	9202      	str	r2, [sp, #8]
 800aea4:	699a      	ldr	r2, [r3, #24]
 800aea6:	9202      	str	r2, [sp, #8]
 800aea8:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800aeaa:	681a      	ldr	r2, [r3, #0]
 800aeac:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800aeb0:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800aeb2:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800aeb4:	3301      	adds	r3, #1
 800aeb6:	6523      	str	r3, [r4, #80]	; 0x50
 800aeb8:	e508      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aeba:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800aebc:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aebe:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aec2:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800aec4:	f43f aeab 	beq.w	800ac1e <HAL_I2C_EV_IRQHandler+0x3b2>
 800aec8:	2902      	cmp	r1, #2
 800aeca:	f43f aea8 	beq.w	800ac1e <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aece:	681a      	ldr	r2, [r3, #0]
 800aed0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aed4:	601a      	str	r2, [r3, #0]
 800aed6:	e6a2      	b.n	800ac1e <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800aed8:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800aedc:	f000 811b 	beq.w	800b116 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800aee0:	2808      	cmp	r0, #8
 800aee2:	f000 8108 	beq.w	800b0f6 <HAL_I2C_EV_IRQHandler+0x88a>
 800aee6:	2820      	cmp	r0, #32
 800aee8:	f000 8105 	beq.w	800b0f6 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800aeec:	2d12      	cmp	r5, #18
 800aeee:	f000 80ff 	beq.w	800b0f0 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800aef2:	2810      	cmp	r0, #16
 800aef4:	d804      	bhi.n	800af00 <HAL_I2C_EV_IRQHandler+0x694>
 800aef6:	4a48      	ldr	r2, [pc, #288]	; (800b018 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800aef8:	40c2      	lsrs	r2, r0
 800aefa:	07d1      	lsls	r1, r2, #31
 800aefc:	f100 814c 	bmi.w	800b198 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af00:	681a      	ldr	r2, [r3, #0]
 800af02:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800af06:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800af08:	2200      	movs	r2, #0
 800af0a:	9206      	str	r2, [sp, #24]
 800af0c:	695a      	ldr	r2, [r3, #20]
 800af0e:	9206      	str	r2, [sp, #24]
 800af10:	699b      	ldr	r3, [r3, #24]
 800af12:	9306      	str	r3, [sp, #24]
 800af14:	9b06      	ldr	r3, [sp, #24]
 800af16:	e731      	b.n	800ad7c <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800af18:	685a      	ldr	r2, [r3, #4]
 800af1a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800af1e:	605a      	str	r2, [r3, #4]
 800af20:	e4d4      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800af22:	3901      	subs	r1, #1
 800af24:	290f      	cmp	r1, #15
 800af26:	d809      	bhi.n	800af3c <HAL_I2C_EV_IRQHandler+0x6d0>
 800af28:	e8df f001 	tbb	[pc, r1]
 800af2c:	3608363b 	.word	0x3608363b
 800af30:	08080808 	.word	0x08080808
 800af34:	08080808 	.word	0x08080808
 800af38:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800af3c:	681a      	ldr	r2, [r3, #0]
 800af3e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800af42:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af44:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800af46:	691b      	ldr	r3, [r3, #16]
 800af48:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800af4a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800af4c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af4e:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800af50:	3b01      	subs	r3, #1
 800af52:	b29b      	uxth	r3, r3
 800af54:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af56:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800af58:	1c51      	adds	r1, r2, #1
 800af5a:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af5c:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800af5e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800af60:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800af62:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800af64:	3b01      	subs	r3, #1
 800af66:	b29b      	uxth	r3, r3
 800af68:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800af6a:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800af6c:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800af6e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800af72:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800af74:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800af76:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800af78:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800af7c:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800af80:	2b40      	cmp	r3, #64	; 0x40
 800af82:	f000 80f5 	beq.w	800b170 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800af86:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800af88:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800af8a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800af8e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800af90:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800af92:	f7ff facb 	bl	800a52c <HAL_I2C_MasterRxCpltCallback>
 800af96:	e499      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af98:	681a      	ldr	r2, [r3, #0]
 800af9a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800af9e:	601a      	str	r2, [r3, #0]
 800afa0:	e7d0      	b.n	800af44 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800afa2:	681a      	ldr	r2, [r3, #0]
 800afa4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800afa8:	601a      	str	r2, [r3, #0]
 800afaa:	e7cb      	b.n	800af44 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800afac:	2810      	cmp	r0, #16
 800afae:	d804      	bhi.n	800afba <HAL_I2C_EV_IRQHandler+0x74e>
 800afb0:	4a19      	ldr	r2, [pc, #100]	; (800b018 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800afb2:	40c2      	lsrs	r2, r0
 800afb4:	07d2      	lsls	r2, r2, #31
 800afb6:	f100 80c2 	bmi.w	800b13e <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800afba:	681a      	ldr	r2, [r3, #0]
 800afbc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800afc0:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800afc2:	681a      	ldr	r2, [r3, #0]
 800afc4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800afc8:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800afca:	685a      	ldr	r2, [r3, #4]
 800afcc:	0516      	lsls	r6, r2, #20
 800afce:	d506      	bpl.n	800afde <HAL_I2C_EV_IRQHandler+0x772>
 800afd0:	2820      	cmp	r0, #32
 800afd2:	f240 80bc 	bls.w	800b14e <HAL_I2C_EV_IRQHandler+0x8e2>
 800afd6:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800afda:	f000 80bd 	beq.w	800b158 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800afde:	2200      	movs	r2, #0
 800afe0:	9208      	str	r2, [sp, #32]
 800afe2:	695a      	ldr	r2, [r3, #20]
 800afe4:	9208      	str	r2, [sp, #32]
 800afe6:	699b      	ldr	r3, [r3, #24]
 800afe8:	9308      	str	r3, [sp, #32]
 800afea:	9b08      	ldr	r3, [sp, #32]
 800afec:	e6c6      	b.n	800ad7c <HAL_I2C_EV_IRQHandler+0x510>
 800afee:	4a0b      	ldr	r2, [pc, #44]	; (800b01c <HAL_I2C_EV_IRQHandler+0x7b0>)
 800aff0:	3808      	subs	r0, #8
 800aff2:	40c2      	lsrs	r2, r0
 800aff4:	07d2      	lsls	r2, r2, #31
 800aff6:	f57f af13 	bpl.w	800ae20 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800affa:	685a      	ldr	r2, [r3, #4]
 800affc:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b000:	605a      	str	r2, [r3, #4]
 800b002:	e70d      	b.n	800ae20 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b004:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b008:	f47f af0a 	bne.w	800ae20 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b00c:	e7f5      	b.n	800affa <HAL_I2C_EV_IRQHandler+0x78e>
 800b00e:	bf00      	nop
 800b010:	0800a60d 	.word	0x0800a60d
 800b014:	ffff0000 	.word	0xffff0000
 800b018:	00010014 	.word	0x00010014
 800b01c:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b020:	6859      	ldr	r1, [r3, #4]
 800b022:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b026:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b028:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b02a:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b02c:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b02e:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800b032:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b034:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800b036:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b03a:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b03e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b042:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b044:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b046:	f47f af1c 	bne.w	800ae82 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b04a:	f7ff fa79 	bl	800a540 <HAL_I2C_MemTxCpltCallback>
 800b04e:	e43d      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800b050:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800b052:	2802      	cmp	r0, #2
 800b054:	f43f af60 	beq.w	800af18 <HAL_I2C_EV_IRQHandler+0x6ac>
 800b058:	2a01      	cmp	r2, #1
 800b05a:	f63f af5d 	bhi.w	800af18 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b05e:	4a62      	ldr	r2, [pc, #392]	; (800b1e8 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800b060:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b062:	6812      	ldr	r2, [r2, #0]
 800b064:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800b068:	fbb2 f2f0 	udiv	r2, r2, r0
 800b06c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800b070:	920b      	str	r2, [sp, #44]	; 0x2c
 800b072:	e004      	b.n	800b07e <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b074:	681a      	ldr	r2, [r3, #0]
 800b076:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800b07a:	f000 8092 	beq.w	800b1a2 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800b07e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b080:	3a01      	subs	r2, #1
 800b082:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800b084:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b086:	2900      	cmp	r1, #0
 800b088:	d1f4      	bne.n	800b074 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b08a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b08c:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b08e:	f042 0220 	orr.w	r2, r2, #32
 800b092:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b094:	685a      	ldr	r2, [r3, #4]
 800b096:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b09a:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b09c:	691b      	ldr	r3, [r3, #16]
 800b09e:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b0a0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b0a2:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800b0a4:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800b0a6:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800b0a8:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800b0aa:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800b0ac:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b0ae:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800b0b0:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800b0b4:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b0b6:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800b0ba:	f7ff faa3 	bl	800a604 <HAL_I2C_ErrorCallback>
 800b0be:	e405      	b.n	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b0c0:	2d08      	cmp	r5, #8
 800b0c2:	d0ad      	beq.n	800b020 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b0c4:	2d20      	cmp	r5, #32
 800b0c6:	d0ab      	beq.n	800b020 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b0c8:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800b0cc:	d0a8      	beq.n	800b020 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b0ce:	685a      	ldr	r2, [r3, #4]
 800b0d0:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b0d4:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b0d6:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b0d8:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b0da:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b0dc:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b0de:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b0e2:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b0e4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b0e8:	f7ff fa1e 	bl	800a528 <HAL_I2C_MasterTxCpltCallback>
 800b0ec:	f7ff bbee 	b.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b0f0:	2801      	cmp	r0, #1
 800b0f2:	f43f af05 	beq.w	800af00 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b0f6:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b0f8:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b0fa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b0fe:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b100:	9107      	str	r1, [sp, #28]
 800b102:	695a      	ldr	r2, [r3, #20]
 800b104:	9207      	str	r2, [sp, #28]
 800b106:	699a      	ldr	r2, [r3, #24]
 800b108:	9207      	str	r2, [sp, #28]
 800b10a:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b10c:	681a      	ldr	r2, [r3, #0]
 800b10e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b112:	601a      	str	r2, [r3, #0]
 800b114:	e632      	b.n	800ad7c <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b116:	681a      	ldr	r2, [r3, #0]
 800b118:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b11c:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b11e:	685a      	ldr	r2, [r3, #4]
 800b120:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b124:	d02d      	beq.n	800b182 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b126:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b128:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b12a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b12e:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b130:	9104      	str	r1, [sp, #16]
 800b132:	695a      	ldr	r2, [r3, #20]
 800b134:	9204      	str	r2, [sp, #16]
 800b136:	699b      	ldr	r3, [r3, #24]
 800b138:	9304      	str	r3, [sp, #16]
 800b13a:	9b04      	ldr	r3, [sp, #16]
 800b13c:	e61e      	b.n	800ad7c <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b13e:	681a      	ldr	r2, [r3, #0]
 800b140:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b144:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b146:	685a      	ldr	r2, [r3, #4]
 800b148:	0515      	lsls	r5, r2, #20
 800b14a:	f57f af48 	bpl.w	800afde <HAL_I2C_EV_IRQHandler+0x772>
 800b14e:	2807      	cmp	r0, #7
 800b150:	d807      	bhi.n	800b162 <HAL_I2C_EV_IRQHandler+0x8f6>
 800b152:	2801      	cmp	r0, #1
 800b154:	f47f af43 	bne.w	800afde <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b158:	685a      	ldr	r2, [r3, #4]
 800b15a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b15e:	605a      	str	r2, [r3, #4]
 800b160:	e73d      	b.n	800afde <HAL_I2C_EV_IRQHandler+0x772>
 800b162:	4a22      	ldr	r2, [pc, #136]	; (800b1ec <HAL_I2C_EV_IRQHandler+0x980>)
 800b164:	3808      	subs	r0, #8
 800b166:	40c2      	lsrs	r2, r0
 800b168:	07d0      	lsls	r0, r2, #31
 800b16a:	f57f af38 	bpl.w	800afde <HAL_I2C_EV_IRQHandler+0x772>
 800b16e:	e7f3      	b.n	800b158 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b170:	2300      	movs	r3, #0
 800b172:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b176:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800b178:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b17a:	f7ff fa41 	bl	800a600 <HAL_I2C_MemRxCpltCallback>
 800b17e:	f7ff bba5 	b.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b182:	9205      	str	r2, [sp, #20]
 800b184:	695a      	ldr	r2, [r3, #20]
 800b186:	9205      	str	r2, [sp, #20]
 800b188:	699a      	ldr	r2, [r3, #24]
 800b18a:	9205      	str	r2, [sp, #20]
 800b18c:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b18e:	681a      	ldr	r2, [r3, #0]
 800b190:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b194:	601a      	str	r2, [r3, #0]
 800b196:	e5f1      	b.n	800ad7c <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b198:	681a      	ldr	r2, [r3, #0]
 800b19a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b19e:	601a      	str	r2, [r3, #0]
 800b1a0:	e6b2      	b.n	800af08 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b1a2:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b1a4:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b1a6:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b1aa:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b1ac:	6859      	ldr	r1, [r3, #4]
 800b1ae:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b1b2:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b1b4:	691b      	ldr	r3, [r3, #16]
 800b1b6:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b1b8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b1ba:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800b1bc:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800b1be:	b29b      	uxth	r3, r3
 800b1c0:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800b1c2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800b1c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b1c8:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800b1cc:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b1ce:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800b1d0:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b1d2:	f47f aed9 	bne.w	800af88 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b1d6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b1da:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800b1dc:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b1de:	f7ff fa0f 	bl	800a600 <HAL_I2C_MemRxCpltCallback>
 800b1e2:	f7ff bb73 	b.w	800a8cc <HAL_I2C_EV_IRQHandler+0x60>
 800b1e6:	bf00      	nop
 800b1e8:	20000078 	.word	0x20000078
 800b1ec:	01000101 	.word	0x01000101

0800b1f0 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b1f0:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b1f4:	2a20      	cmp	r2, #32
{
 800b1f6:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b1f8:	fa5f fc82 	uxtb.w	ip, r2
 800b1fc:	d001      	beq.n	800b202 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b1fe:	2002      	movs	r0, #2
  }
}
 800b200:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800b202:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b204:	2024      	movs	r0, #36	; 0x24
 800b206:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b20a:	6810      	ldr	r0, [r2, #0]
 800b20c:	f020 0001 	bic.w	r0, r0, #1
 800b210:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800b212:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b214:	f020 0010 	bic.w	r0, r0, #16
 800b218:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800b21a:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b21c:	4301      	orrs	r1, r0
 800b21e:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b220:	6811      	ldr	r1, [r2, #0]
 800b222:	f041 0101 	orr.w	r1, r1, #1
 800b226:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800b228:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800b22a:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b22e:	4770      	bx	lr

0800b230 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b230:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b234:	2a20      	cmp	r2, #32
 800b236:	d001      	beq.n	800b23c <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b238:	2002      	movs	r0, #2
  }
}
 800b23a:	4770      	bx	lr
{
 800b23c:	b410      	push	{r4}
 800b23e:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800b242:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b244:	2224      	movs	r2, #36	; 0x24
 800b246:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b24a:	6822      	ldr	r2, [r4, #0]
 800b24c:	f022 0201 	bic.w	r2, r2, #1
 800b250:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800b252:	4603      	mov	r3, r0
 800b254:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800b256:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800b25a:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800b25c:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800b25e:	b289      	uxth	r1, r1
 800b260:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b262:	6822      	ldr	r2, [r4, #0]
 800b264:	f042 0201 	orr.w	r2, r2, #1
 800b268:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800b26a:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b26e:	2000      	movs	r0, #0
}
 800b270:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b274:	4770      	bx	lr
 800b276:	bf00      	nop

0800b278 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800b278:	2800      	cmp	r0, #0
 800b27a:	d069      	beq.n	800b350 <HAL_LTDC_Init+0xd8>
{
 800b27c:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800b27e:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800b282:	4604      	mov	r4, r0
 800b284:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b288:	2b00      	cmp	r3, #0
 800b28a:	d05c      	beq.n	800b346 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b28c:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b28e:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b290:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b294:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b298:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b29a:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b29c:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b2a0:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800b2a4:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b2a6:	6999      	ldr	r1, [r3, #24]
 800b2a8:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b2aa:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b2ac:	430a      	orrs	r2, r1
 800b2ae:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b2b0:	689a      	ldr	r2, [r3, #8]
 800b2b2:	4928      	ldr	r1, [pc, #160]	; (800b354 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800b2b4:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b2b6:	400a      	ands	r2, r1
 800b2b8:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800b2ba:	689a      	ldr	r2, [r3, #8]
 800b2bc:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b2c0:	69a0      	ldr	r0, [r4, #24]
 800b2c2:	4302      	orrs	r2, r0
 800b2c4:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b2c6:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800b2c8:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b2ca:	400a      	ands	r2, r1
 800b2cc:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800b2ce:	68da      	ldr	r2, [r3, #12]
 800b2d0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b2d4:	6a20      	ldr	r0, [r4, #32]
 800b2d6:	4302      	orrs	r2, r0
 800b2d8:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b2da:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800b2dc:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b2de:	400a      	ands	r2, r1
 800b2e0:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800b2e2:	691a      	ldr	r2, [r3, #16]
 800b2e4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b2e8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b2ea:	4302      	orrs	r2, r0
 800b2ec:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b2ee:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800b2f0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b2f2:	400a      	ands	r2, r1
 800b2f4:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800b2f6:	695a      	ldr	r2, [r3, #20]
 800b2f8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b2fa:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b2fe:	430a      	orrs	r2, r1
 800b300:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b302:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800b304:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800b308:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b30c:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800b310:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800b312:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800b314:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800b318:	432a      	orrs	r2, r5
 800b31a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800b31e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800b322:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800b324:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b326:	f042 0206 	orr.w	r2, r2, #6
 800b32a:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800b32c:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800b32e:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b332:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800b334:	ea42 020c 	orr.w	r2, r2, ip
 800b338:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b33a:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800b33e:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800b342:	4608      	mov	r0, r1
}
 800b344:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800b346:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800b34a:	f7f6 fe65 	bl	8002018 <HAL_LTDC_MspInit>
 800b34e:	e79d      	b.n	800b28c <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800b350:	2001      	movs	r0, #1
}
 800b352:	4770      	bx	lr
 800b354:	f000f800 	.word	0xf000f800

0800b358 <HAL_LTDC_ErrorCallback>:
 800b358:	4770      	bx	lr
 800b35a:	bf00      	nop

0800b35c <HAL_LTDC_ReloadEventCallback>:
 800b35c:	4770      	bx	lr
 800b35e:	bf00      	nop

0800b360 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b360:	6803      	ldr	r3, [r0, #0]
{
 800b362:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b364:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800b366:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b368:	076a      	lsls	r2, r5, #29
{
 800b36a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b36c:	d501      	bpl.n	800b372 <HAL_LTDC_IRQHandler+0x12>
 800b36e:	0771      	lsls	r1, r6, #29
 800b370:	d41d      	bmi.n	800b3ae <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800b372:	07aa      	lsls	r2, r5, #30
 800b374:	d501      	bpl.n	800b37a <HAL_LTDC_IRQHandler+0x1a>
 800b376:	07b3      	lsls	r3, r6, #30
 800b378:	d42d      	bmi.n	800b3d6 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800b37a:	07e8      	lsls	r0, r5, #31
 800b37c:	d501      	bpl.n	800b382 <HAL_LTDC_IRQHandler+0x22>
 800b37e:	07f1      	lsls	r1, r6, #31
 800b380:	d440      	bmi.n	800b404 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800b382:	072a      	lsls	r2, r5, #28
 800b384:	d501      	bpl.n	800b38a <HAL_LTDC_IRQHandler+0x2a>
 800b386:	0733      	lsls	r3, r6, #28
 800b388:	d400      	bmi.n	800b38c <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800b38a:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b38c:	6823      	ldr	r3, [r4, #0]
 800b38e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b390:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b392:	f022 0208 	bic.w	r2, r2, #8
 800b396:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800b398:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b39a:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b39c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b39e:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b3a2:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800b3a6:	4620      	mov	r0, r4
 800b3a8:	f7ff ffd8 	bl	800b35c <HAL_LTDC_ReloadEventCallback>
}
 800b3ac:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800b3ae:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b3b0:	f022 0204 	bic.w	r2, r2, #4
 800b3b4:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800b3b6:	2204      	movs	r2, #4
 800b3b8:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800b3ba:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800b3be:	f043 0301 	orr.w	r3, r3, #1
 800b3c2:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800b3c6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b3c8:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b3cc:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b3d0:	f7ff ffc2 	bl	800b358 <HAL_LTDC_ErrorCallback>
 800b3d4:	e7cd      	b.n	800b372 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800b3d6:	6823      	ldr	r3, [r4, #0]
 800b3d8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b3da:	f022 0202 	bic.w	r2, r2, #2
 800b3de:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800b3e0:	2202      	movs	r2, #2
 800b3e2:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800b3e4:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800b3e8:	f043 0302 	orr.w	r3, r3, #2
 800b3ec:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b3f0:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800b3f2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b3f4:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b3f8:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b3fc:	4620      	mov	r0, r4
 800b3fe:	f7ff ffab 	bl	800b358 <HAL_LTDC_ErrorCallback>
 800b402:	e7ba      	b.n	800b37a <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b404:	6823      	ldr	r3, [r4, #0]
 800b406:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b408:	f022 0201 	bic.w	r2, r2, #1
 800b40c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800b40e:	2201      	movs	r2, #1
 800b410:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b412:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b414:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b418:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800b41c:	4620      	mov	r0, r4
 800b41e:	f7f5 fe85 	bl	800112c <HAL_LTDC_LineEventCallback>
 800b422:	e7ae      	b.n	800b382 <HAL_LTDC_IRQHandler+0x22>

0800b424 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800b424:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b428:	2b01      	cmp	r3, #1
 800b42a:	f000 80c2 	beq.w	800b5b2 <HAL_LTDC_ConfigLayer+0x18e>
{
 800b42e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b432:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b436:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b43a:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b43e:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b440:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b442:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b446:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800b44a:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b44e:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800b452:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b456:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800b45a:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b45c:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b460:	460c      	mov	r4, r1
 800b462:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b464:	9301      	str	r3, [sp, #4]
 800b466:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b468:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b46a:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800b46e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b472:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b474:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b476:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b47a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b47c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b480:	6823      	ldr	r3, [r4, #0]
 800b482:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b486:	9b01      	ldr	r3, [sp, #4]
 800b488:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b48c:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b490:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b492:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800b494:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b498:	1c51      	adds	r1, r2, #1
 800b49a:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800b49e:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b4a0:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b4a2:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b4a6:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b4aa:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800b4ae:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800b4b2:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800b4b6:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b4ba:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b4be:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b4c0:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b4c2:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800b4c6:	3301      	adds	r3, #1
 800b4c8:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800b4cc:	4403      	add	r3, r0
 800b4ce:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800b4d2:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b4d6:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b4da:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b4dc:	f023 0307 	bic.w	r3, r3, #7
 800b4e0:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b4e4:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b4e8:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b4ec:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800b4f0:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800b4f4:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b4f8:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800b4fc:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800b500:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800b504:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800b508:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800b50c:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800b510:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800b514:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800b518:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800b51c:	696b      	ldr	r3, [r5, #20]
 800b51e:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800b522:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800b526:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800b52a:	f023 0307 	bic.w	r3, r3, #7
 800b52e:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800b532:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800b536:	4303      	orrs	r3, r0
 800b538:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b53c:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b540:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b542:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b546:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b54a:	bb69      	cbnz	r1, 800b5a8 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800b54c:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b54e:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b550:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b552:	fb03 f707 	mul.w	r7, r3, r7
 800b556:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b558:	fb02 f303 	mul.w	r3, r2, r3
 800b55c:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b560:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b564:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b566:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800b56a:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b56e:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800b572:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800b576:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800b57a:	f023 0307 	bic.w	r3, r3, #7
 800b57e:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b582:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b586:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b58a:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b58c:	4313      	orrs	r3, r2
 800b58e:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800b592:	2300      	movs	r3, #0
  return HAL_OK;
 800b594:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b596:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800b59a:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b59e:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800b5a2:	b003      	add	sp, #12
 800b5a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800b5a8:	3901      	subs	r1, #1
 800b5aa:	2906      	cmp	r1, #6
 800b5ac:	d903      	bls.n	800b5b6 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b5ae:	2301      	movs	r3, #1
 800b5b0:	e7cd      	b.n	800b54e <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800b5b2:	2002      	movs	r0, #2
}
 800b5b4:	4770      	bx	lr
 800b5b6:	4b02      	ldr	r3, [pc, #8]	; (800b5c0 <HAL_LTDC_ConfigLayer+0x19c>)
 800b5b8:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800b5bc:	e7c7      	b.n	800b54e <HAL_LTDC_ConfigLayer+0x12a>
 800b5be:	bf00      	nop
 800b5c0:	0802e1c0 	.word	0x0802e1c0

0800b5c4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800b5c4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b5c8:	2b01      	cmp	r3, #1
 800b5ca:	d019      	beq.n	800b600 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b5cc:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b5ce:	2302      	movs	r3, #2
{
 800b5d0:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b5d2:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b5d6:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b5d8:	4c0a      	ldr	r4, [pc, #40]	; (800b604 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b5da:	f023 0301 	bic.w	r3, r3, #1
 800b5de:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b5e0:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b5e2:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800b5e4:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b5e6:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800b5ea:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b5ee:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800b5f0:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b5f4:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800b5f8:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800b5fc:	4618      	mov	r0, r3
}
 800b5fe:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800b600:	2002      	movs	r0, #2
}
 800b602:	4770      	bx	lr
 800b604:	40016800 	.word	0x40016800

0800b608 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800b608:	2800      	cmp	r0, #0
 800b60a:	f000 81a2 	beq.w	800b952 <HAL_RCC_OscConfig+0x34a>
{
 800b60e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b612:	6803      	ldr	r3, [r0, #0]
 800b614:	07dd      	lsls	r5, r3, #31
{
 800b616:	b082      	sub	sp, #8
 800b618:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b61a:	d52f      	bpl.n	800b67c <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b61c:	499e      	ldr	r1, [pc, #632]	; (800b898 <HAL_RCC_OscConfig+0x290>)
 800b61e:	688a      	ldr	r2, [r1, #8]
 800b620:	f002 020c 	and.w	r2, r2, #12
 800b624:	2a04      	cmp	r2, #4
 800b626:	f000 80ed 	beq.w	800b804 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b62a:	688a      	ldr	r2, [r1, #8]
 800b62c:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b630:	2a08      	cmp	r2, #8
 800b632:	f000 80e3 	beq.w	800b7fc <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b636:	6863      	ldr	r3, [r4, #4]
 800b638:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b63c:	f000 80ec 	beq.w	800b818 <HAL_RCC_OscConfig+0x210>
 800b640:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800b644:	f000 8175 	beq.w	800b932 <HAL_RCC_OscConfig+0x32a>
 800b648:	4d93      	ldr	r5, [pc, #588]	; (800b898 <HAL_RCC_OscConfig+0x290>)
 800b64a:	682a      	ldr	r2, [r5, #0]
 800b64c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800b650:	602a      	str	r2, [r5, #0]
 800b652:	682a      	ldr	r2, [r5, #0]
 800b654:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800b658:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b65a:	2b00      	cmp	r3, #0
 800b65c:	f040 80e1 	bne.w	800b822 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b660:	f7fd fdbe 	bl	80091e0 <HAL_GetTick>
 800b664:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b666:	e005      	b.n	800b674 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b668:	f7fd fdba 	bl	80091e0 <HAL_GetTick>
 800b66c:	1b80      	subs	r0, r0, r6
 800b66e:	2864      	cmp	r0, #100	; 0x64
 800b670:	f200 8101 	bhi.w	800b876 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b674:	682b      	ldr	r3, [r5, #0]
 800b676:	039b      	lsls	r3, r3, #14
 800b678:	d4f6      	bmi.n	800b668 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800b67a:	6823      	ldr	r3, [r4, #0]
 800b67c:	079f      	lsls	r7, r3, #30
 800b67e:	d528      	bpl.n	800b6d2 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b680:	4a85      	ldr	r2, [pc, #532]	; (800b898 <HAL_RCC_OscConfig+0x290>)
 800b682:	6891      	ldr	r1, [r2, #8]
 800b684:	f011 0f0c 	tst.w	r1, #12
 800b688:	f000 8090 	beq.w	800b7ac <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b68c:	6891      	ldr	r1, [r2, #8]
 800b68e:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b692:	2908      	cmp	r1, #8
 800b694:	f000 8086 	beq.w	800b7a4 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800b698:	68e3      	ldr	r3, [r4, #12]
 800b69a:	2b00      	cmp	r3, #0
 800b69c:	f000 810e 	beq.w	800b8bc <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800b6a0:	4b7e      	ldr	r3, [pc, #504]	; (800b89c <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b6a2:	4e7d      	ldr	r6, [pc, #500]	; (800b898 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800b6a4:	2201      	movs	r2, #1
 800b6a6:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800b6a8:	f7fd fd9a 	bl	80091e0 <HAL_GetTick>
 800b6ac:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b6ae:	e005      	b.n	800b6bc <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b6b0:	f7fd fd96 	bl	80091e0 <HAL_GetTick>
 800b6b4:	1b40      	subs	r0, r0, r5
 800b6b6:	2802      	cmp	r0, #2
 800b6b8:	f200 80dd 	bhi.w	800b876 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b6bc:	6833      	ldr	r3, [r6, #0]
 800b6be:	0798      	lsls	r0, r3, #30
 800b6c0:	d5f6      	bpl.n	800b6b0 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b6c2:	6833      	ldr	r3, [r6, #0]
 800b6c4:	6922      	ldr	r2, [r4, #16]
 800b6c6:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800b6ca:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800b6ce:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b6d0:	6823      	ldr	r3, [r4, #0]
 800b6d2:	071a      	lsls	r2, r3, #28
 800b6d4:	d451      	bmi.n	800b77a <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b6d6:	0758      	lsls	r0, r3, #29
 800b6d8:	d52f      	bpl.n	800b73a <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800b6da:	4a6f      	ldr	r2, [pc, #444]	; (800b898 <HAL_RCC_OscConfig+0x290>)
 800b6dc:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b6de:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800b6e2:	d07f      	beq.n	800b7e4 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800b6e4:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b6e6:	4e6e      	ldr	r6, [pc, #440]	; (800b8a0 <HAL_RCC_OscConfig+0x298>)
 800b6e8:	6833      	ldr	r3, [r6, #0]
 800b6ea:	05d9      	lsls	r1, r3, #23
 800b6ec:	f140 80b3 	bpl.w	800b856 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b6f0:	68a3      	ldr	r3, [r4, #8]
 800b6f2:	2b01      	cmp	r3, #1
 800b6f4:	f000 80c3 	beq.w	800b87e <HAL_RCC_OscConfig+0x276>
 800b6f8:	2b05      	cmp	r3, #5
 800b6fa:	f000 812c 	beq.w	800b956 <HAL_RCC_OscConfig+0x34e>
 800b6fe:	4e66      	ldr	r6, [pc, #408]	; (800b898 <HAL_RCC_OscConfig+0x290>)
 800b700:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b702:	f022 0201 	bic.w	r2, r2, #1
 800b706:	6732      	str	r2, [r6, #112]	; 0x70
 800b708:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b70a:	f022 0204 	bic.w	r2, r2, #4
 800b70e:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b710:	2b00      	cmp	r3, #0
 800b712:	f040 80b9 	bne.w	800b888 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800b716:	f7fd fd63 	bl	80091e0 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b71a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800b71e:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b720:	e005      	b.n	800b72e <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b722:	f7fd fd5d 	bl	80091e0 <HAL_GetTick>
 800b726:	1bc0      	subs	r0, r0, r7
 800b728:	4540      	cmp	r0, r8
 800b72a:	f200 80a4 	bhi.w	800b876 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b72e:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800b730:	0798      	lsls	r0, r3, #30
 800b732:	d4f6      	bmi.n	800b722 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800b734:	2d00      	cmp	r5, #0
 800b736:	f040 8106 	bne.w	800b946 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800b73a:	69a0      	ldr	r0, [r4, #24]
 800b73c:	b1c8      	cbz	r0, 800b772 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800b73e:	4d56      	ldr	r5, [pc, #344]	; (800b898 <HAL_RCC_OscConfig+0x290>)
 800b740:	68ab      	ldr	r3, [r5, #8]
 800b742:	f003 030c 	and.w	r3, r3, #12
 800b746:	2b08      	cmp	r3, #8
 800b748:	f000 80c9 	beq.w	800b8de <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800b74c:	4b53      	ldr	r3, [pc, #332]	; (800b89c <HAL_RCC_OscConfig+0x294>)
 800b74e:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b750:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800b752:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b754:	f000 8109 	beq.w	800b96a <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b758:	f7fd fd42 	bl	80091e0 <HAL_GetTick>
 800b75c:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b75e:	e005      	b.n	800b76c <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b760:	f7fd fd3e 	bl	80091e0 <HAL_GetTick>
 800b764:	1b00      	subs	r0, r0, r4
 800b766:	2802      	cmp	r0, #2
 800b768:	f200 8085 	bhi.w	800b876 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b76c:	682b      	ldr	r3, [r5, #0]
 800b76e:	019b      	lsls	r3, r3, #6
 800b770:	d4f6      	bmi.n	800b760 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800b772:	2000      	movs	r0, #0
}
 800b774:	b002      	add	sp, #8
 800b776:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800b77a:	6963      	ldr	r3, [r4, #20]
 800b77c:	b30b      	cbz	r3, 800b7c2 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800b77e:	4b47      	ldr	r3, [pc, #284]	; (800b89c <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b780:	4e45      	ldr	r6, [pc, #276]	; (800b898 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800b782:	2201      	movs	r2, #1
 800b784:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b788:	f7fd fd2a 	bl	80091e0 <HAL_GetTick>
 800b78c:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b78e:	e004      	b.n	800b79a <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b790:	f7fd fd26 	bl	80091e0 <HAL_GetTick>
 800b794:	1b40      	subs	r0, r0, r5
 800b796:	2802      	cmp	r0, #2
 800b798:	d86d      	bhi.n	800b876 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b79a:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b79c:	079b      	lsls	r3, r3, #30
 800b79e:	d5f7      	bpl.n	800b790 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b7a0:	6823      	ldr	r3, [r4, #0]
 800b7a2:	e798      	b.n	800b6d6 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b7a4:	6852      	ldr	r2, [r2, #4]
 800b7a6:	0256      	lsls	r6, r2, #9
 800b7a8:	f53f af76 	bmi.w	800b698 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800b7ac:	4a3a      	ldr	r2, [pc, #232]	; (800b898 <HAL_RCC_OscConfig+0x290>)
 800b7ae:	6812      	ldr	r2, [r2, #0]
 800b7b0:	0795      	lsls	r5, r2, #30
 800b7b2:	d544      	bpl.n	800b83e <HAL_RCC_OscConfig+0x236>
 800b7b4:	68e2      	ldr	r2, [r4, #12]
 800b7b6:	2a01      	cmp	r2, #1
 800b7b8:	d041      	beq.n	800b83e <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800b7ba:	2001      	movs	r0, #1
}
 800b7bc:	b002      	add	sp, #8
 800b7be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800b7c2:	4a36      	ldr	r2, [pc, #216]	; (800b89c <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b7c4:	4e34      	ldr	r6, [pc, #208]	; (800b898 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800b7c6:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b7ca:	f7fd fd09 	bl	80091e0 <HAL_GetTick>
 800b7ce:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b7d0:	e004      	b.n	800b7dc <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b7d2:	f7fd fd05 	bl	80091e0 <HAL_GetTick>
 800b7d6:	1b40      	subs	r0, r0, r5
 800b7d8:	2802      	cmp	r0, #2
 800b7da:	d84c      	bhi.n	800b876 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b7dc:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b7de:	079f      	lsls	r7, r3, #30
 800b7e0:	d4f7      	bmi.n	800b7d2 <HAL_RCC_OscConfig+0x1ca>
 800b7e2:	e7dd      	b.n	800b7a0 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800b7e4:	9301      	str	r3, [sp, #4]
 800b7e6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b7e8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800b7ec:	6413      	str	r3, [r2, #64]	; 0x40
 800b7ee:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b7f0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b7f4:	9301      	str	r3, [sp, #4]
 800b7f6:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800b7f8:	2501      	movs	r5, #1
 800b7fa:	e774      	b.n	800b6e6 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b7fc:	684a      	ldr	r2, [r1, #4]
 800b7fe:	0250      	lsls	r0, r2, #9
 800b800:	f57f af19 	bpl.w	800b636 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800b804:	4a24      	ldr	r2, [pc, #144]	; (800b898 <HAL_RCC_OscConfig+0x290>)
 800b806:	6812      	ldr	r2, [r2, #0]
 800b808:	0391      	lsls	r1, r2, #14
 800b80a:	f57f af37 	bpl.w	800b67c <HAL_RCC_OscConfig+0x74>
 800b80e:	6862      	ldr	r2, [r4, #4]
 800b810:	2a00      	cmp	r2, #0
 800b812:	f47f af33 	bne.w	800b67c <HAL_RCC_OscConfig+0x74>
 800b816:	e7d0      	b.n	800b7ba <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b818:	4a1f      	ldr	r2, [pc, #124]	; (800b898 <HAL_RCC_OscConfig+0x290>)
 800b81a:	6813      	ldr	r3, [r2, #0]
 800b81c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b820:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b822:	f7fd fcdd 	bl	80091e0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b826:	4e1c      	ldr	r6, [pc, #112]	; (800b898 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800b828:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b82a:	e004      	b.n	800b836 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b82c:	f7fd fcd8 	bl	80091e0 <HAL_GetTick>
 800b830:	1b40      	subs	r0, r0, r5
 800b832:	2864      	cmp	r0, #100	; 0x64
 800b834:	d81f      	bhi.n	800b876 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b836:	6833      	ldr	r3, [r6, #0]
 800b838:	039a      	lsls	r2, r3, #14
 800b83a:	d5f7      	bpl.n	800b82c <HAL_RCC_OscConfig+0x224>
 800b83c:	e71d      	b.n	800b67a <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b83e:	4916      	ldr	r1, [pc, #88]	; (800b898 <HAL_RCC_OscConfig+0x290>)
 800b840:	6920      	ldr	r0, [r4, #16]
 800b842:	680a      	ldr	r2, [r1, #0]
 800b844:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800b848:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800b84c:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b84e:	071a      	lsls	r2, r3, #28
 800b850:	f57f af41 	bpl.w	800b6d6 <HAL_RCC_OscConfig+0xce>
 800b854:	e791      	b.n	800b77a <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800b856:	6833      	ldr	r3, [r6, #0]
 800b858:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b85c:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800b85e:	f7fd fcbf 	bl	80091e0 <HAL_GetTick>
 800b862:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b864:	6833      	ldr	r3, [r6, #0]
 800b866:	05da      	lsls	r2, r3, #23
 800b868:	f53f af42 	bmi.w	800b6f0 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800b86c:	f7fd fcb8 	bl	80091e0 <HAL_GetTick>
 800b870:	1bc0      	subs	r0, r0, r7
 800b872:	2802      	cmp	r0, #2
 800b874:	d9f6      	bls.n	800b864 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800b876:	2003      	movs	r0, #3
}
 800b878:	b002      	add	sp, #8
 800b87a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b87e:	4a06      	ldr	r2, [pc, #24]	; (800b898 <HAL_RCC_OscConfig+0x290>)
 800b880:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800b882:	f043 0301 	orr.w	r3, r3, #1
 800b886:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800b888:	f7fd fcaa 	bl	80091e0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b88c:	4f02      	ldr	r7, [pc, #8]	; (800b898 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800b88e:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b890:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b894:	e00b      	b.n	800b8ae <HAL_RCC_OscConfig+0x2a6>
 800b896:	bf00      	nop
 800b898:	40023800 	.word	0x40023800
 800b89c:	42470000 	.word	0x42470000
 800b8a0:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b8a4:	f7fd fc9c 	bl	80091e0 <HAL_GetTick>
 800b8a8:	1b80      	subs	r0, r0, r6
 800b8aa:	4540      	cmp	r0, r8
 800b8ac:	d8e3      	bhi.n	800b876 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b8ae:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800b8b0:	079b      	lsls	r3, r3, #30
 800b8b2:	d5f7      	bpl.n	800b8a4 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800b8b4:	2d00      	cmp	r5, #0
 800b8b6:	f43f af40 	beq.w	800b73a <HAL_RCC_OscConfig+0x132>
 800b8ba:	e044      	b.n	800b946 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800b8bc:	4a42      	ldr	r2, [pc, #264]	; (800b9c8 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b8be:	4e43      	ldr	r6, [pc, #268]	; (800b9cc <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800b8c0:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b8c2:	f7fd fc8d 	bl	80091e0 <HAL_GetTick>
 800b8c6:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b8c8:	e004      	b.n	800b8d4 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b8ca:	f7fd fc89 	bl	80091e0 <HAL_GetTick>
 800b8ce:	1b40      	subs	r0, r0, r5
 800b8d0:	2802      	cmp	r0, #2
 800b8d2:	d8d0      	bhi.n	800b876 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b8d4:	6833      	ldr	r3, [r6, #0]
 800b8d6:	0799      	lsls	r1, r3, #30
 800b8d8:	d4f7      	bmi.n	800b8ca <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b8da:	6823      	ldr	r3, [r4, #0]
 800b8dc:	e6f9      	b.n	800b6d2 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800b8de:	2801      	cmp	r0, #1
 800b8e0:	f43f af48 	beq.w	800b774 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800b8e4:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b8e6:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b8e8:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b8ec:	4291      	cmp	r1, r2
 800b8ee:	f47f af64 	bne.w	800b7ba <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b8f2:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b8f4:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b8f8:	4291      	cmp	r1, r2
 800b8fa:	f47f af5e 	bne.w	800b7ba <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b8fe:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b900:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800b904:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b906:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800b90a:	f47f af56 	bne.w	800b7ba <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b90e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800b910:	0852      	lsrs	r2, r2, #1
 800b912:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800b916:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b918:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800b91c:	f47f af4d 	bne.w	800b7ba <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800b920:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b922:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b926:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800b92a:	bf14      	ite	ne
 800b92c:	2001      	movne	r0, #1
 800b92e:	2000      	moveq	r0, #0
 800b930:	e720      	b.n	800b774 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b932:	4b26      	ldr	r3, [pc, #152]	; (800b9cc <HAL_RCC_OscConfig+0x3c4>)
 800b934:	681a      	ldr	r2, [r3, #0]
 800b936:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800b93a:	601a      	str	r2, [r3, #0]
 800b93c:	681a      	ldr	r2, [r3, #0]
 800b93e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800b942:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b944:	e76d      	b.n	800b822 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800b946:	4a21      	ldr	r2, [pc, #132]	; (800b9cc <HAL_RCC_OscConfig+0x3c4>)
 800b948:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b94a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800b94e:	6413      	str	r3, [r2, #64]	; 0x40
 800b950:	e6f3      	b.n	800b73a <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800b952:	2001      	movs	r0, #1
}
 800b954:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b956:	4b1d      	ldr	r3, [pc, #116]	; (800b9cc <HAL_RCC_OscConfig+0x3c4>)
 800b958:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b95a:	f042 0204 	orr.w	r2, r2, #4
 800b95e:	671a      	str	r2, [r3, #112]	; 0x70
 800b960:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b962:	f042 0201 	orr.w	r2, r2, #1
 800b966:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b968:	e78e      	b.n	800b888 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800b96a:	f7fd fc39 	bl	80091e0 <HAL_GetTick>
 800b96e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b970:	e005      	b.n	800b97e <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b972:	f7fd fc35 	bl	80091e0 <HAL_GetTick>
 800b976:	1b80      	subs	r0, r0, r6
 800b978:	2802      	cmp	r0, #2
 800b97a:	f63f af7c 	bhi.w	800b876 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b97e:	682b      	ldr	r3, [r5, #0]
 800b980:	0199      	lsls	r1, r3, #6
 800b982:	d4f6      	bmi.n	800b972 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b984:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800b988:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b98a:	430b      	orrs	r3, r1
 800b98c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800b990:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800b994:	0852      	lsrs	r2, r2, #1
 800b996:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800b99a:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800b99c:	490a      	ldr	r1, [pc, #40]	; (800b9c8 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b99e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800b9a2:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b9a4:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800b9a6:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800b9a8:	f7fd fc1a 	bl	80091e0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b9ac:	4d07      	ldr	r5, [pc, #28]	; (800b9cc <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800b9ae:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b9b0:	e005      	b.n	800b9be <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b9b2:	f7fd fc15 	bl	80091e0 <HAL_GetTick>
 800b9b6:	1b00      	subs	r0, r0, r4
 800b9b8:	2802      	cmp	r0, #2
 800b9ba:	f63f af5c 	bhi.w	800b876 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b9be:	682b      	ldr	r3, [r5, #0]
 800b9c0:	019a      	lsls	r2, r3, #6
 800b9c2:	d5f6      	bpl.n	800b9b2 <HAL_RCC_OscConfig+0x3aa>
 800b9c4:	e6d5      	b.n	800b772 <HAL_RCC_OscConfig+0x16a>
 800b9c6:	bf00      	nop
 800b9c8:	42470000 	.word	0x42470000
 800b9cc:	40023800 	.word	0x40023800

0800b9d0 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b9d0:	4916      	ldr	r1, [pc, #88]	; (800ba2c <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800b9d2:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b9d4:	688b      	ldr	r3, [r1, #8]
 800b9d6:	f003 030c 	and.w	r3, r3, #12
 800b9da:	2b04      	cmp	r3, #4
 800b9dc:	d01b      	beq.n	800ba16 <HAL_RCC_GetSysClockFreq+0x46>
 800b9de:	2b08      	cmp	r3, #8
 800b9e0:	d117      	bne.n	800ba12 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b9e2:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b9e4:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b9e6:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b9e8:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b9ec:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b9f0:	d113      	bne.n	800ba1a <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b9f2:	480f      	ldr	r0, [pc, #60]	; (800ba30 <HAL_RCC_GetSysClockFreq+0x60>)
 800b9f4:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b9f8:	fba1 0100 	umull	r0, r1, r1, r0
 800b9fc:	f7f4 fca8 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800ba00:	4b0a      	ldr	r3, [pc, #40]	; (800ba2c <HAL_RCC_GetSysClockFreq+0x5c>)
 800ba02:	685b      	ldr	r3, [r3, #4]
 800ba04:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800ba08:	3301      	adds	r3, #1
 800ba0a:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800ba0c:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800ba10:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800ba12:	4807      	ldr	r0, [pc, #28]	; (800ba30 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800ba14:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800ba16:	4807      	ldr	r0, [pc, #28]	; (800ba34 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800ba18:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800ba1a:	4806      	ldr	r0, [pc, #24]	; (800ba34 <HAL_RCC_GetSysClockFreq+0x64>)
 800ba1c:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800ba20:	2300      	movs	r3, #0
 800ba22:	fba1 0100 	umull	r0, r1, r1, r0
 800ba26:	f7f4 fc93 	bl	8000350 <__aeabi_uldivmod>
 800ba2a:	e7e9      	b.n	800ba00 <HAL_RCC_GetSysClockFreq+0x30>
 800ba2c:	40023800 	.word	0x40023800
 800ba30:	00f42400 	.word	0x00f42400
 800ba34:	007a1200 	.word	0x007a1200

0800ba38 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800ba38:	2800      	cmp	r0, #0
 800ba3a:	f000 8087 	beq.w	800bb4c <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800ba3e:	4a48      	ldr	r2, [pc, #288]	; (800bb60 <HAL_RCC_ClockConfig+0x128>)
 800ba40:	6813      	ldr	r3, [r2, #0]
 800ba42:	f003 030f 	and.w	r3, r3, #15
 800ba46:	428b      	cmp	r3, r1
{
 800ba48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ba4c:	460d      	mov	r5, r1
 800ba4e:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800ba50:	d209      	bcs.n	800ba66 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800ba52:	b2cb      	uxtb	r3, r1
 800ba54:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800ba56:	6813      	ldr	r3, [r2, #0]
 800ba58:	f003 030f 	and.w	r3, r3, #15
 800ba5c:	428b      	cmp	r3, r1
 800ba5e:	d002      	beq.n	800ba66 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800ba60:	2001      	movs	r0, #1
}
 800ba62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800ba66:	6823      	ldr	r3, [r4, #0]
 800ba68:	0798      	lsls	r0, r3, #30
 800ba6a:	d514      	bpl.n	800ba96 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800ba6c:	0759      	lsls	r1, r3, #29
 800ba6e:	d504      	bpl.n	800ba7a <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800ba70:	493c      	ldr	r1, [pc, #240]	; (800bb64 <HAL_RCC_ClockConfig+0x12c>)
 800ba72:	688a      	ldr	r2, [r1, #8]
 800ba74:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800ba78:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800ba7a:	071a      	lsls	r2, r3, #28
 800ba7c:	d504      	bpl.n	800ba88 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800ba7e:	4939      	ldr	r1, [pc, #228]	; (800bb64 <HAL_RCC_ClockConfig+0x12c>)
 800ba80:	688a      	ldr	r2, [r1, #8]
 800ba82:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800ba86:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800ba88:	4936      	ldr	r1, [pc, #216]	; (800bb64 <HAL_RCC_ClockConfig+0x12c>)
 800ba8a:	68a0      	ldr	r0, [r4, #8]
 800ba8c:	688a      	ldr	r2, [r1, #8]
 800ba8e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800ba92:	4302      	orrs	r2, r0
 800ba94:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800ba96:	07df      	lsls	r7, r3, #31
 800ba98:	d521      	bpl.n	800bade <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800ba9a:	6862      	ldr	r2, [r4, #4]
 800ba9c:	2a01      	cmp	r2, #1
 800ba9e:	d057      	beq.n	800bb50 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800baa0:	1e93      	subs	r3, r2, #2
 800baa2:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800baa4:	4b2f      	ldr	r3, [pc, #188]	; (800bb64 <HAL_RCC_ClockConfig+0x12c>)
 800baa6:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800baa8:	d94d      	bls.n	800bb46 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800baaa:	0799      	lsls	r1, r3, #30
 800baac:	d5d8      	bpl.n	800ba60 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800baae:	4e2d      	ldr	r6, [pc, #180]	; (800bb64 <HAL_RCC_ClockConfig+0x12c>)
 800bab0:	68b3      	ldr	r3, [r6, #8]
 800bab2:	f023 0303 	bic.w	r3, r3, #3
 800bab6:	4313      	orrs	r3, r2
 800bab8:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800baba:	f7fd fb91 	bl	80091e0 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800babe:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800bac2:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800bac4:	e004      	b.n	800bad0 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800bac6:	f7fd fb8b 	bl	80091e0 <HAL_GetTick>
 800baca:	1bc0      	subs	r0, r0, r7
 800bacc:	4540      	cmp	r0, r8
 800bace:	d844      	bhi.n	800bb5a <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800bad0:	68b3      	ldr	r3, [r6, #8]
 800bad2:	6862      	ldr	r2, [r4, #4]
 800bad4:	f003 030c 	and.w	r3, r3, #12
 800bad8:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800badc:	d1f3      	bne.n	800bac6 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800bade:	4a20      	ldr	r2, [pc, #128]	; (800bb60 <HAL_RCC_ClockConfig+0x128>)
 800bae0:	6813      	ldr	r3, [r2, #0]
 800bae2:	f003 030f 	and.w	r3, r3, #15
 800bae6:	42ab      	cmp	r3, r5
 800bae8:	d906      	bls.n	800baf8 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800baea:	b2eb      	uxtb	r3, r5
 800baec:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800baee:	6813      	ldr	r3, [r2, #0]
 800baf0:	f003 030f 	and.w	r3, r3, #15
 800baf4:	42ab      	cmp	r3, r5
 800baf6:	d1b3      	bne.n	800ba60 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800baf8:	6823      	ldr	r3, [r4, #0]
 800bafa:	075a      	lsls	r2, r3, #29
 800bafc:	d506      	bpl.n	800bb0c <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800bafe:	4919      	ldr	r1, [pc, #100]	; (800bb64 <HAL_RCC_ClockConfig+0x12c>)
 800bb00:	68e0      	ldr	r0, [r4, #12]
 800bb02:	688a      	ldr	r2, [r1, #8]
 800bb04:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800bb08:	4302      	orrs	r2, r0
 800bb0a:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800bb0c:	071b      	lsls	r3, r3, #28
 800bb0e:	d507      	bpl.n	800bb20 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800bb10:	4a14      	ldr	r2, [pc, #80]	; (800bb64 <HAL_RCC_ClockConfig+0x12c>)
 800bb12:	6921      	ldr	r1, [r4, #16]
 800bb14:	6893      	ldr	r3, [r2, #8]
 800bb16:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800bb1a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800bb1e:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800bb20:	f7ff ff56 	bl	800b9d0 <HAL_RCC_GetSysClockFreq>
 800bb24:	4a0f      	ldr	r2, [pc, #60]	; (800bb64 <HAL_RCC_ClockConfig+0x12c>)
 800bb26:	4c10      	ldr	r4, [pc, #64]	; (800bb68 <HAL_RCC_ClockConfig+0x130>)
 800bb28:	6892      	ldr	r2, [r2, #8]
 800bb2a:	4910      	ldr	r1, [pc, #64]	; (800bb6c <HAL_RCC_ClockConfig+0x134>)
 800bb2c:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800bb30:	4603      	mov	r3, r0
 800bb32:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800bb34:	480e      	ldr	r0, [pc, #56]	; (800bb70 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800bb36:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800bb38:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800bb3a:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800bb3c:	f7f6 fc6e 	bl	800241c <HAL_InitTick>
  return HAL_OK;
 800bb40:	2000      	movs	r0, #0
}
 800bb42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800bb46:	0198      	lsls	r0, r3, #6
 800bb48:	d4b1      	bmi.n	800baae <HAL_RCC_ClockConfig+0x76>
 800bb4a:	e789      	b.n	800ba60 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800bb4c:	2001      	movs	r0, #1
}
 800bb4e:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bb50:	4b04      	ldr	r3, [pc, #16]	; (800bb64 <HAL_RCC_ClockConfig+0x12c>)
 800bb52:	681b      	ldr	r3, [r3, #0]
 800bb54:	039e      	lsls	r6, r3, #14
 800bb56:	d4aa      	bmi.n	800baae <HAL_RCC_ClockConfig+0x76>
 800bb58:	e782      	b.n	800ba60 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800bb5a:	2003      	movs	r0, #3
 800bb5c:	e781      	b.n	800ba62 <HAL_RCC_ClockConfig+0x2a>
 800bb5e:	bf00      	nop
 800bb60:	40023c00 	.word	0x40023c00
 800bb64:	40023800 	.word	0x40023800
 800bb68:	0802e1a0 	.word	0x0802e1a0
 800bb6c:	20000078 	.word	0x20000078
 800bb70:	20000080 	.word	0x20000080

0800bb74 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800bb74:	4b04      	ldr	r3, [pc, #16]	; (800bb88 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800bb76:	4905      	ldr	r1, [pc, #20]	; (800bb8c <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800bb78:	689b      	ldr	r3, [r3, #8]
 800bb7a:	4a05      	ldr	r2, [pc, #20]	; (800bb90 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800bb7c:	6808      	ldr	r0, [r1, #0]
 800bb7e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800bb82:	5cd3      	ldrb	r3, [r2, r3]
}
 800bb84:	40d8      	lsrs	r0, r3
 800bb86:	4770      	bx	lr
 800bb88:	40023800 	.word	0x40023800
 800bb8c:	20000078 	.word	0x20000078
 800bb90:	0802e1b0 	.word	0x0802e1b0

0800bb94 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800bb94:	4b0e      	ldr	r3, [pc, #56]	; (800bbd0 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800bb96:	220f      	movs	r2, #15
 800bb98:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800bb9a:	689a      	ldr	r2, [r3, #8]
 800bb9c:	f002 0203 	and.w	r2, r2, #3
 800bba0:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800bba2:	689a      	ldr	r2, [r3, #8]
 800bba4:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800bba8:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800bbaa:	689a      	ldr	r2, [r3, #8]
 800bbac:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800bbb0:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800bbb2:	689b      	ldr	r3, [r3, #8]
 800bbb4:	08db      	lsrs	r3, r3, #3
{
 800bbb6:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800bbb8:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800bbbc:	4c05      	ldr	r4, [pc, #20]	; (800bbd4 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800bbbe:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800bbc0:	6823      	ldr	r3, [r4, #0]
}
 800bbc2:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800bbc6:	f003 030f 	and.w	r3, r3, #15
 800bbca:	600b      	str	r3, [r1, #0]
}
 800bbcc:	4770      	bx	lr
 800bbce:	bf00      	nop
 800bbd0:	40023800 	.word	0x40023800
 800bbd4:	40023c00 	.word	0x40023c00

0800bbd8 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800bbd8:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800bbda:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800bbdc:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800bbe0:	b083      	sub	sp, #12
 800bbe2:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800bbe4:	d111      	bne.n	800bc0a <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800bbe6:	f013 0f0c 	tst.w	r3, #12
 800bbea:	d16f      	bne.n	800bccc <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800bbec:	0698      	lsls	r0, r3, #26
 800bbee:	f100 80c2 	bmi.w	800bd76 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800bbf2:	f013 0310 	ands.w	r3, r3, #16
 800bbf6:	f000 80bb 	beq.w	800bd70 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800bbfa:	4b89      	ldr	r3, [pc, #548]	; (800be20 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800bbfc:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800bc00:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800bc04:	2000      	movs	r0, #0
}
 800bc06:	b003      	add	sp, #12
 800bc08:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800bc0a:	4b86      	ldr	r3, [pc, #536]	; (800be24 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800bc0c:	4e86      	ldr	r6, [pc, #536]	; (800be28 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800bc0e:	2200      	movs	r2, #0
 800bc10:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800bc12:	f7fd fae5 	bl	80091e0 <HAL_GetTick>
 800bc16:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800bc18:	e004      	b.n	800bc24 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800bc1a:	f7fd fae1 	bl	80091e0 <HAL_GetTick>
 800bc1e:	1b43      	subs	r3, r0, r5
 800bc20:	2b02      	cmp	r3, #2
 800bc22:	d850      	bhi.n	800bcc6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800bc24:	6833      	ldr	r3, [r6, #0]
 800bc26:	0118      	lsls	r0, r3, #4
 800bc28:	d4f7      	bmi.n	800bc1a <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800bc2a:	6823      	ldr	r3, [r4, #0]
 800bc2c:	07d9      	lsls	r1, r3, #31
 800bc2e:	d506      	bpl.n	800bc3e <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800bc30:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800bc34:	0712      	lsls	r2, r2, #28
 800bc36:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800bc3a:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800bc3e:	079a      	lsls	r2, r3, #30
 800bc40:	d515      	bpl.n	800bc6e <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800bc42:	4979      	ldr	r1, [pc, #484]	; (800be28 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800bc44:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800bc46:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800bc4a:	6865      	ldr	r5, [r4, #4]
 800bc4c:	0612      	lsls	r2, r2, #24
 800bc4e:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800bc52:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800bc56:	4302      	orrs	r2, r0
 800bc58:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800bc5c:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800bc60:	69e2      	ldr	r2, [r4, #28]
 800bc62:	f020 001f 	bic.w	r0, r0, #31
 800bc66:	3a01      	subs	r2, #1
 800bc68:	4302      	orrs	r2, r0
 800bc6a:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800bc6e:	065b      	lsls	r3, r3, #25
 800bc70:	d509      	bpl.n	800bc86 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800bc72:	1d20      	adds	r0, r4, #4
 800bc74:	c80b      	ldmia	r0, {r0, r1, r3}
 800bc76:	061b      	lsls	r3, r3, #24
 800bc78:	4a6b      	ldr	r2, [pc, #428]	; (800be28 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bc7a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800bc7e:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800bc82:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800bc86:	4b67      	ldr	r3, [pc, #412]	; (800be24 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800bc88:	4e67      	ldr	r6, [pc, #412]	; (800be28 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800bc8a:	2201      	movs	r2, #1
 800bc8c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800bc8e:	f7fd faa7 	bl	80091e0 <HAL_GetTick>
 800bc92:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800bc94:	e004      	b.n	800bca0 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800bc96:	f7fd faa3 	bl	80091e0 <HAL_GetTick>
 800bc9a:	1b40      	subs	r0, r0, r5
 800bc9c:	2802      	cmp	r0, #2
 800bc9e:	d812      	bhi.n	800bcc6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800bca0:	6833      	ldr	r3, [r6, #0]
 800bca2:	011f      	lsls	r7, r3, #4
 800bca4:	d5f7      	bpl.n	800bc96 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800bca6:	6823      	ldr	r3, [r4, #0]
 800bca8:	e79d      	b.n	800bbe6 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800bcaa:	f7fd fa99 	bl	80091e0 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bcae:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800bcb2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800bcb4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800bcb6:	079b      	lsls	r3, r3, #30
 800bcb8:	f100 80a5 	bmi.w	800be06 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bcbc:	f7fd fa90 	bl	80091e0 <HAL_GetTick>
 800bcc0:	1b80      	subs	r0, r0, r6
 800bcc2:	42b8      	cmp	r0, r7
 800bcc4:	d9f6      	bls.n	800bcb4 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800bcc6:	2003      	movs	r0, #3
}
 800bcc8:	b003      	add	sp, #12
 800bcca:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800bccc:	4b55      	ldr	r3, [pc, #340]	; (800be24 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800bcce:	4e56      	ldr	r6, [pc, #344]	; (800be28 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800bcd0:	2200      	movs	r2, #0
 800bcd2:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800bcd4:	f7fd fa84 	bl	80091e0 <HAL_GetTick>
 800bcd8:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800bcda:	e004      	b.n	800bce6 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800bcdc:	f7fd fa80 	bl	80091e0 <HAL_GetTick>
 800bce0:	1b43      	subs	r3, r0, r5
 800bce2:	2b02      	cmp	r3, #2
 800bce4:	d8ef      	bhi.n	800bcc6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800bce6:	6833      	ldr	r3, [r6, #0]
 800bce8:	0098      	lsls	r0, r3, #2
 800bcea:	d4f7      	bmi.n	800bcdc <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800bcec:	6822      	ldr	r2, [r4, #0]
 800bcee:	0751      	lsls	r1, r2, #29
 800bcf0:	d515      	bpl.n	800bd1e <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800bcf2:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800bcf4:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800bcf8:	6920      	ldr	r0, [r4, #16]
 800bcfa:	061b      	lsls	r3, r3, #24
 800bcfc:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800bd00:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800bd04:	430b      	orrs	r3, r1
 800bd06:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800bd0a:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800bd0e:	6a21      	ldr	r1, [r4, #32]
 800bd10:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800bd14:	3901      	subs	r1, #1
 800bd16:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800bd1a:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800bd1e:	0713      	lsls	r3, r2, #28
 800bd20:	d514      	bpl.n	800bd4c <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800bd22:	4a41      	ldr	r2, [pc, #260]	; (800be28 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800bd24:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800bd26:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800bd2a:	6920      	ldr	r0, [r4, #16]
 800bd2c:	071b      	lsls	r3, r3, #28
 800bd2e:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800bd32:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800bd36:	430b      	orrs	r3, r1
 800bd38:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800bd3c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800bd40:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800bd42:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800bd46:	430b      	orrs	r3, r1
 800bd48:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800bd4c:	4b35      	ldr	r3, [pc, #212]	; (800be24 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800bd4e:	4e36      	ldr	r6, [pc, #216]	; (800be28 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800bd50:	2201      	movs	r2, #1
 800bd52:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800bd54:	f7fd fa44 	bl	80091e0 <HAL_GetTick>
 800bd58:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800bd5a:	e004      	b.n	800bd66 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800bd5c:	f7fd fa40 	bl	80091e0 <HAL_GetTick>
 800bd60:	1b40      	subs	r0, r0, r5
 800bd62:	2802      	cmp	r0, #2
 800bd64:	d8af      	bhi.n	800bcc6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800bd66:	6833      	ldr	r3, [r6, #0]
 800bd68:	009f      	lsls	r7, r3, #2
 800bd6a:	d5f7      	bpl.n	800bd5c <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800bd6c:	6823      	ldr	r3, [r4, #0]
 800bd6e:	e73d      	b.n	800bbec <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800bd70:	4618      	mov	r0, r3
}
 800bd72:	b003      	add	sp, #12
 800bd74:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800bd76:	4b2c      	ldr	r3, [pc, #176]	; (800be28 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800bd78:	4d2c      	ldr	r5, [pc, #176]	; (800be2c <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800bd7a:	2200      	movs	r2, #0
 800bd7c:	9201      	str	r2, [sp, #4]
 800bd7e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800bd80:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800bd84:	641a      	str	r2, [r3, #64]	; 0x40
 800bd86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bd88:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800bd8c:	9301      	str	r3, [sp, #4]
 800bd8e:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800bd90:	682b      	ldr	r3, [r5, #0]
 800bd92:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800bd96:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800bd98:	f7fd fa22 	bl	80091e0 <HAL_GetTick>
 800bd9c:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800bd9e:	e004      	b.n	800bdaa <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800bda0:	f7fd fa1e 	bl	80091e0 <HAL_GetTick>
 800bda4:	1b83      	subs	r3, r0, r6
 800bda6:	2b02      	cmp	r3, #2
 800bda8:	d88d      	bhi.n	800bcc6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800bdaa:	682b      	ldr	r3, [r5, #0]
 800bdac:	05d9      	lsls	r1, r3, #23
 800bdae:	d5f7      	bpl.n	800bda0 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800bdb0:	4d1d      	ldr	r5, [pc, #116]	; (800be28 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800bdb2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800bdb4:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800bdb6:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800bdba:	d111      	bne.n	800bde0 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800bdbc:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800bdc0:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800bdc4:	d021      	beq.n	800be0a <HAL_RCCEx_PeriphCLKConfig+0x232>
 800bdc6:	4918      	ldr	r1, [pc, #96]	; (800be28 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bdc8:	688a      	ldr	r2, [r1, #8]
 800bdca:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800bdce:	608a      	str	r2, [r1, #8]
 800bdd0:	4a15      	ldr	r2, [pc, #84]	; (800be28 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bdd2:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800bdd4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800bdd8:	430b      	orrs	r3, r1
 800bdda:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800bddc:	6823      	ldr	r3, [r4, #0]
 800bdde:	e708      	b.n	800bbf2 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800bde0:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800bde4:	4291      	cmp	r1, r2
 800bde6:	d0eb      	beq.n	800bdc0 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800bde8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800bdea:	4a0e      	ldr	r2, [pc, #56]	; (800be24 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800bdec:	2101      	movs	r1, #1
 800bdee:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800bdf2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800bdf6:	2100      	movs	r1, #0
 800bdf8:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800bdfc:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800bdfe:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800be00:	07da      	lsls	r2, r3, #31
 800be02:	f53f af52 	bmi.w	800bcaa <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800be06:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800be08:	e7d8      	b.n	800bdbc <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800be0a:	4807      	ldr	r0, [pc, #28]	; (800be28 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800be0c:	6882      	ldr	r2, [r0, #8]
 800be0e:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800be12:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800be16:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800be1a:	430a      	orrs	r2, r1
 800be1c:	6082      	str	r2, [r0, #8]
 800be1e:	e7d7      	b.n	800bdd0 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800be20:	42471000 	.word	0x42471000
 800be24:	42470000 	.word	0x42470000
 800be28:	40023800 	.word	0x40023800
 800be2c:	40007000 	.word	0x40007000

0800be30 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800be30:	b1f0      	cbz	r0, 800be70 <HAL_SDRAM_Init+0x40>
{
 800be32:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800be34:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800be38:	460d      	mov	r5, r1
 800be3a:	4604      	mov	r4, r0
 800be3c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800be40:	b18b      	cbz	r3, 800be66 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800be42:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800be44:	2302      	movs	r3, #2
 800be46:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800be4a:	f851 0b04 	ldr.w	r0, [r1], #4
 800be4e:	f000 ffcd 	bl	800cdec <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800be52:	e9d4 0200 	ldrd	r0, r2, [r4]
 800be56:	4629      	mov	r1, r5
 800be58:	f001 f806 	bl	800ce68 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800be5c:	2301      	movs	r3, #1
 800be5e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800be62:	2000      	movs	r0, #0
}
 800be64:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800be66:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800be6a:	f7f6 fa6f 	bl	800234c <HAL_SDRAM_MspInit>
 800be6e:	e7e8      	b.n	800be42 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800be70:	2001      	movs	r0, #1
}
 800be72:	4770      	bx	lr

0800be74 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800be74:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800be76:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800be7a:	2b02      	cmp	r3, #2
{
 800be7c:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800be7e:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800be80:	d004      	beq.n	800be8c <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800be82:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800be86:	2c01      	cmp	r4, #1
 800be88:	d001      	beq.n	800be8e <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800be8a:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800be8c:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800be8e:	460e      	mov	r6, r1
 800be90:	2302      	movs	r3, #2
 800be92:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800be96:	6828      	ldr	r0, [r5, #0]
 800be98:	f001 f832 	bl	800cf00 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800be9c:	6833      	ldr	r3, [r6, #0]
 800be9e:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800bea0:	bf06      	itte	eq
 800bea2:	2305      	moveq	r3, #5
 800bea4:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800bea8:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800beac:	2000      	movs	r0, #0
}
 800beae:	bd70      	pop	{r4, r5, r6, pc}

0800beb0 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800beb0:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800beb2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800beb6:	2b02      	cmp	r3, #2
{
 800beb8:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800beba:	b2d8      	uxtb	r0, r3
 800bebc:	d005      	beq.n	800beca <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800bebe:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800bec2:	2b01      	cmp	r3, #1
 800bec4:	b2dd      	uxtb	r5, r3
 800bec6:	d001      	beq.n	800becc <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800bec8:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800beca:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800becc:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800bece:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800bed0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800bed4:	f001 f83e 	bl	800cf54 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800bed8:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800bedc:	2000      	movs	r0, #0
}
 800bede:	bd38      	pop	{r3, r4, r5, pc}

0800bee0 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800bee0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bee4:	b082      	sub	sp, #8
 800bee6:	461d      	mov	r5, r3
 800bee8:	4616      	mov	r6, r2
 800beea:	460c      	mov	r4, r1
 800beec:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800beee:	f7fd f977 	bl	80091e0 <HAL_GetTick>
 800bef2:	4435      	add	r5, r6
 800bef4:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800bef6:	f7fd f973 	bl	80091e0 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800befa:	4b27      	ldr	r3, [pc, #156]	; (800bf98 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800befc:	681b      	ldr	r3, [r3, #0]
 800befe:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800bf02:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800bf06:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800bf08:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800bf0a:	1c73      	adds	r3, r6, #1
 800bf0c:	6839      	ldr	r1, [r7, #0]
 800bf0e:	d107      	bne.n	800bf20 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800bf10:	688b      	ldr	r3, [r1, #8]
 800bf12:	ea34 0303 	bics.w	r3, r4, r3
 800bf16:	d0fb      	beq.n	800bf10 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800bf18:	2000      	movs	r0, #0
}
 800bf1a:	b002      	add	sp, #8
 800bf1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800bf20:	688b      	ldr	r3, [r1, #8]
 800bf22:	ea34 0303 	bics.w	r3, r4, r3
 800bf26:	d1f7      	bne.n	800bf18 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800bf28:	f7fd f95a 	bl	80091e0 <HAL_GetTick>
 800bf2c:	eba0 0008 	sub.w	r0, r0, r8
 800bf30:	42a8      	cmp	r0, r5
 800bf32:	d208      	bcs.n	800bf46 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800bf34:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800bf36:	2b00      	cmp	r3, #0
      count--;
 800bf38:	9b01      	ldr	r3, [sp, #4]
 800bf3a:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800bf3e:	bf08      	it	eq
 800bf40:	2500      	moveq	r5, #0
      count--;
 800bf42:	9301      	str	r3, [sp, #4]
 800bf44:	e7e1      	b.n	800bf0a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bf46:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800bf4a:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bf4c:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800bf50:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800bf54:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bf56:	d013      	beq.n	800bf80 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800bf58:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800bf5a:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800bf5e:	d107      	bne.n	800bf70 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800bf60:	681a      	ldr	r2, [r3, #0]
 800bf62:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800bf66:	601a      	str	r2, [r3, #0]
 800bf68:	681a      	ldr	r2, [r3, #0]
 800bf6a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800bf6e:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800bf70:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800bf72:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800bf74:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800bf78:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800bf7c:	2003      	movs	r0, #3
 800bf7e:	e7cc      	b.n	800bf1a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bf80:	68ba      	ldr	r2, [r7, #8]
 800bf82:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800bf86:	d002      	beq.n	800bf8e <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800bf88:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800bf8c:	d1e4      	bne.n	800bf58 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800bf8e:	681a      	ldr	r2, [r3, #0]
 800bf90:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800bf94:	601a      	str	r2, [r3, #0]
 800bf96:	e7df      	b.n	800bf58 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800bf98:	20000078 	.word	0x20000078

0800bf9c <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800bf9c:	b538      	push	{r3, r4, r5, lr}
 800bf9e:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bfa0:	6842      	ldr	r2, [r0, #4]
 800bfa2:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800bfa6:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bfa8:	d006      	beq.n	800bfb8 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bfaa:	460a      	mov	r2, r1
 800bfac:	2101      	movs	r1, #1
 800bfae:	f7ff ff97 	bl	800bee0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bfb2:	b978      	cbnz	r0, 800bfd4 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800bfb4:	2000      	movs	r0, #0
}
 800bfb6:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bfb8:	6882      	ldr	r2, [r0, #8]
 800bfba:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800bfbe:	d01c      	beq.n	800bffa <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800bfc0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800bfc4:	d00c      	beq.n	800bfe0 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bfc6:	460a      	mov	r2, r1
 800bfc8:	4620      	mov	r0, r4
 800bfca:	2180      	movs	r1, #128	; 0x80
 800bfcc:	f7ff ff88 	bl	800bee0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bfd0:	2800      	cmp	r0, #0
 800bfd2:	d0ef      	beq.n	800bfb4 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bfd4:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800bfd6:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800bfda:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bfdc:	6563      	str	r3, [r4, #84]	; 0x54
}
 800bfde:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800bfe0:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bfe2:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800bfe4:	6829      	ldr	r1, [r5, #0]
 800bfe6:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800bfea:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bfec:	2101      	movs	r1, #1
 800bfee:	f7ff ff77 	bl	800bee0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bff2:	2800      	cmp	r0, #0
 800bff4:	d1ee      	bne.n	800bfd4 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800bff6:	2000      	movs	r0, #0
 800bff8:	e7dd      	b.n	800bfb6 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800bffa:	6800      	ldr	r0, [r0, #0]
 800bffc:	6802      	ldr	r2, [r0, #0]
 800bffe:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c002:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c004:	460a      	mov	r2, r1
 800c006:	4620      	mov	r0, r4
 800c008:	2180      	movs	r1, #128	; 0x80
 800c00a:	f7ff ff69 	bl	800bee0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c00e:	2800      	cmp	r0, #0
 800c010:	d0d0      	beq.n	800bfb4 <SPI_EndRxTransaction+0x18>
 800c012:	e7df      	b.n	800bfd4 <SPI_EndRxTransaction+0x38>

0800c014 <HAL_SPI_Init>:
  if (hspi == NULL)
 800c014:	2800      	cmp	r0, #0
 800c016:	d05c      	beq.n	800c0d2 <HAL_SPI_Init+0xbe>
{
 800c018:	b570      	push	{r4, r5, r6, lr}
 800c01a:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800c01c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800c01e:	2800      	cmp	r0, #0
 800c020:	d047      	beq.n	800c0b2 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800c022:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800c024:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c028:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800c02c:	2200      	movs	r2, #0
 800c02e:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c030:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800c034:	2b00      	cmp	r3, #0
 800c036:	d042      	beq.n	800c0be <HAL_SPI_Init+0xaa>
 800c038:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800c03a:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c03c:	68a5      	ldr	r5, [r4, #8]
 800c03e:	69a2      	ldr	r2, [r4, #24]
 800c040:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800c042:	2302      	movs	r3, #2
 800c044:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800c048:	680b      	ldr	r3, [r1, #0]
 800c04a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c04e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c050:	6863      	ldr	r3, [r4, #4]
 800c052:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800c056:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800c05a:	432b      	orrs	r3, r5
 800c05c:	68e5      	ldr	r5, [r4, #12]
 800c05e:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800c062:	432b      	orrs	r3, r5
 800c064:	6925      	ldr	r5, [r4, #16]
 800c066:	f005 0502 	and.w	r5, r5, #2
 800c06a:	432b      	orrs	r3, r5
 800c06c:	6965      	ldr	r5, [r4, #20]
 800c06e:	f005 0501 	and.w	r5, r5, #1
 800c072:	432b      	orrs	r3, r5
 800c074:	69e5      	ldr	r5, [r4, #28]
 800c076:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800c07a:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800c07e:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800c082:	4333      	orrs	r3, r6
 800c084:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c086:	0c12      	lsrs	r2, r2, #16
 800c088:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c08c:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c090:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c094:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c098:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c09a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c09c:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c09e:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c0a0:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c0a2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800c0a6:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c0a8:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c0aa:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800c0ac:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800c0b0:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c0b2:	6863      	ldr	r3, [r4, #4]
 800c0b4:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800c0b8:	d0b6      	beq.n	800c028 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800c0ba:	61e0      	str	r0, [r4, #28]
 800c0bc:	e7b4      	b.n	800c028 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800c0be:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800c0c0:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800c0c4:	f7f6 f898 	bl	80021f8 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c0c8:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c0cc:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800c0d0:	e7b3      	b.n	800c03a <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800c0d2:	2001      	movs	r0, #1
}
 800c0d4:	4770      	bx	lr
 800c0d6:	bf00      	nop

0800c0d8 <HAL_SPI_Transmit>:
{
 800c0d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c0dc:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c0de:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c0e2:	2801      	cmp	r0, #1
{
 800c0e4:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c0e6:	f000 8085 	beq.w	800c1f4 <HAL_SPI_Transmit+0x11c>
 800c0ea:	461d      	mov	r5, r3
 800c0ec:	2301      	movs	r3, #1
 800c0ee:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c0f2:	4688      	mov	r8, r1
 800c0f4:	4617      	mov	r7, r2
 800c0f6:	f7fd f873 	bl	80091e0 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c0fa:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800c0fe:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800c100:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c102:	b2d8      	uxtb	r0, r3
 800c104:	d009      	beq.n	800c11a <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800c106:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c108:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c10a:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c10c:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c110:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c114:	b002      	add	sp, #8
 800c116:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c11a:	f1b8 0f00 	cmp.w	r8, #0
 800c11e:	d0f3      	beq.n	800c108 <HAL_SPI_Transmit+0x30>
 800c120:	2f00      	cmp	r7, #0
 800c122:	d0f1      	beq.n	800c108 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c124:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800c126:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800c128:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c12c:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c12e:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c130:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c134:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800c138:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c13c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800c13e:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800c140:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800c142:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800c144:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800c146:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c148:	f000 8085 	beq.w	800c256 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c14c:	6803      	ldr	r3, [r0, #0]
 800c14e:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800c150:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c152:	d403      	bmi.n	800c15c <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800c154:	6803      	ldr	r3, [r0, #0]
 800c156:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c15a:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c15c:	68e3      	ldr	r3, [r4, #12]
 800c15e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800c162:	d04b      	beq.n	800c1fc <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c164:	6863      	ldr	r3, [r4, #4]
 800c166:	2b00      	cmp	r3, #0
 800c168:	f000 8097 	beq.w	800c29a <HAL_SPI_Transmit+0x1c2>
 800c16c:	2f01      	cmp	r7, #1
 800c16e:	f000 8094 	beq.w	800c29a <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800c172:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c174:	b29b      	uxth	r3, r3
 800c176:	b1ab      	cbz	r3, 800c1a4 <HAL_SPI_Transmit+0xcc>
 800c178:	1c68      	adds	r0, r5, #1
 800c17a:	f040 8083 	bne.w	800c284 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c17e:	6823      	ldr	r3, [r4, #0]
 800c180:	689a      	ldr	r2, [r3, #8]
 800c182:	0791      	lsls	r1, r2, #30
 800c184:	f140 8094 	bpl.w	800c2b0 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c188:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c18a:	7812      	ldrb	r2, [r2, #0]
 800c18c:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c18e:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c190:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c192:	3901      	subs	r1, #1
 800c194:	b289      	uxth	r1, r1
 800c196:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c198:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c19a:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800c19c:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c19e:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800c1a0:	2900      	cmp	r1, #0
 800c1a2:	d1ec      	bne.n	800c17e <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c1a4:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c1a6:	4b5b      	ldr	r3, [pc, #364]	; (800c314 <HAL_SPI_Transmit+0x23c>)
 800c1a8:	4a5b      	ldr	r2, [pc, #364]	; (800c318 <HAL_SPI_Transmit+0x240>)
 800c1aa:	681b      	ldr	r3, [r3, #0]
 800c1ac:	fba2 2303 	umull	r2, r3, r2, r3
 800c1b0:	0d5b      	lsrs	r3, r3, #21
 800c1b2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800c1b6:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c1ba:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c1be:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c1c0:	d107      	bne.n	800c1d2 <HAL_SPI_Transmit+0xfa>
 800c1c2:	e098      	b.n	800c2f6 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800c1c4:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c1c6:	6822      	ldr	r2, [r4, #0]
      count--;
 800c1c8:	3b01      	subs	r3, #1
 800c1ca:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c1cc:	6893      	ldr	r3, [r2, #8]
 800c1ce:	061b      	lsls	r3, r3, #24
 800c1d0:	d502      	bpl.n	800c1d8 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800c1d2:	9b01      	ldr	r3, [sp, #4]
 800c1d4:	2b00      	cmp	r3, #0
 800c1d6:	d1f5      	bne.n	800c1c4 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c1d8:	68a3      	ldr	r3, [r4, #8]
 800c1da:	b933      	cbnz	r3, 800c1ea <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c1dc:	6822      	ldr	r2, [r4, #0]
 800c1de:	9300      	str	r3, [sp, #0]
 800c1e0:	68d3      	ldr	r3, [r2, #12]
 800c1e2:	9300      	str	r3, [sp, #0]
 800c1e4:	6893      	ldr	r3, [r2, #8]
 800c1e6:	9300      	str	r3, [sp, #0]
 800c1e8:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c1ea:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c1ec:	3800      	subs	r0, #0
 800c1ee:	bf18      	it	ne
 800c1f0:	2001      	movne	r0, #1
error:
 800c1f2:	e789      	b.n	800c108 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800c1f4:	2002      	movs	r0, #2
}
 800c1f6:	b002      	add	sp, #8
 800c1f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c1fc:	6861      	ldr	r1, [r4, #4]
 800c1fe:	2900      	cmp	r1, #0
 800c200:	d176      	bne.n	800c2f0 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c202:	4643      	mov	r3, r8
 800c204:	f833 7b02 	ldrh.w	r7, [r3], #2
 800c208:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c20a:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c20c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c20e:	3b01      	subs	r3, #1
 800c210:	b29b      	uxth	r3, r3
 800c212:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c214:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c216:	b29b      	uxth	r3, r3
 800c218:	2b00      	cmp	r3, #0
 800c21a:	d0c4      	beq.n	800c1a6 <HAL_SPI_Transmit+0xce>
 800c21c:	1c6b      	adds	r3, r5, #1
 800c21e:	d15e      	bne.n	800c2de <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c220:	6883      	ldr	r3, [r0, #8]
 800c222:	079f      	lsls	r7, r3, #30
 800c224:	d50f      	bpl.n	800c246 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c226:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c228:	f832 3b02 	ldrh.w	r3, [r2], #2
 800c22c:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800c22e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c230:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c232:	3b01      	subs	r3, #1
 800c234:	b29b      	uxth	r3, r3
 800c236:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c238:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c23a:	b29b      	uxth	r3, r3
 800c23c:	2b00      	cmp	r3, #0
 800c23e:	d0b1      	beq.n	800c1a4 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c240:	6883      	ldr	r3, [r0, #8]
 800c242:	079f      	lsls	r7, r3, #30
 800c244:	d4ef      	bmi.n	800c226 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c246:	f7fc ffcb 	bl	80091e0 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c24a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c24c:	b29b      	uxth	r3, r3
 800c24e:	2b00      	cmp	r3, #0
 800c250:	d0a8      	beq.n	800c1a4 <HAL_SPI_Transmit+0xcc>
 800c252:	6820      	ldr	r0, [r4, #0]
 800c254:	e7e4      	b.n	800c220 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800c256:	6803      	ldr	r3, [r0, #0]
 800c258:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c25c:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800c25e:	6803      	ldr	r3, [r0, #0]
 800c260:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800c264:	6003      	str	r3, [r0, #0]
 800c266:	e771      	b.n	800c14c <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c268:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c26a:	7812      	ldrb	r2, [r2, #0]
 800c26c:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c26e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c270:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c272:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c274:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c276:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c278:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c27a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c27c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c27e:	b29b      	uxth	r3, r3
 800c280:	2b00      	cmp	r3, #0
 800c282:	d08f      	beq.n	800c1a4 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c284:	6823      	ldr	r3, [r4, #0]
 800c286:	689a      	ldr	r2, [r3, #8]
 800c288:	0792      	lsls	r2, r2, #30
 800c28a:	d4ed      	bmi.n	800c268 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c28c:	f7fc ffa8 	bl	80091e0 <HAL_GetTick>
 800c290:	1b80      	subs	r0, r0, r6
 800c292:	42a8      	cmp	r0, r5
 800c294:	d3f2      	bcc.n	800c27c <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800c296:	2003      	movs	r0, #3
 800c298:	e736      	b.n	800c108 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c29a:	f898 3000 	ldrb.w	r3, [r8]
 800c29e:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800c2a0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c2a2:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c2a4:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c2a6:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800c2a8:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c2aa:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c2ac:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c2ae:	e760      	b.n	800c172 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c2b0:	f7fc ff96 	bl	80091e0 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c2b4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c2b6:	b29b      	uxth	r3, r3
 800c2b8:	2b00      	cmp	r3, #0
 800c2ba:	f47f af60 	bne.w	800c17e <HAL_SPI_Transmit+0xa6>
 800c2be:	e771      	b.n	800c1a4 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c2c0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c2c2:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c2c6:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c2c8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c2ca:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c2cc:	3b01      	subs	r3, #1
 800c2ce:	b29b      	uxth	r3, r3
 800c2d0:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c2d2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c2d4:	b29b      	uxth	r3, r3
 800c2d6:	2b00      	cmp	r3, #0
 800c2d8:	f43f af64 	beq.w	800c1a4 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c2dc:	6822      	ldr	r2, [r4, #0]
 800c2de:	6893      	ldr	r3, [r2, #8]
 800c2e0:	0799      	lsls	r1, r3, #30
 800c2e2:	d4ed      	bmi.n	800c2c0 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c2e4:	f7fc ff7c 	bl	80091e0 <HAL_GetTick>
 800c2e8:	1b80      	subs	r0, r0, r6
 800c2ea:	42a8      	cmp	r0, r5
 800c2ec:	d3f1      	bcc.n	800c2d2 <HAL_SPI_Transmit+0x1fa>
 800c2ee:	e7d2      	b.n	800c296 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c2f0:	2f01      	cmp	r7, #1
 800c2f2:	d18f      	bne.n	800c214 <HAL_SPI_Transmit+0x13c>
 800c2f4:	e785      	b.n	800c202 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c2f6:	4633      	mov	r3, r6
 800c2f8:	462a      	mov	r2, r5
 800c2fa:	2180      	movs	r1, #128	; 0x80
 800c2fc:	4620      	mov	r0, r4
 800c2fe:	f7ff fdef 	bl	800bee0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c302:	2800      	cmp	r0, #0
 800c304:	f43f af68 	beq.w	800c1d8 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c308:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c30a:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c30c:	4313      	orrs	r3, r2
 800c30e:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c310:	6562      	str	r2, [r4, #84]	; 0x54
 800c312:	e761      	b.n	800c1d8 <HAL_SPI_Transmit+0x100>
 800c314:	20000078 	.word	0x20000078
 800c318:	165e9f81 	.word	0x165e9f81

0800c31c <HAL_SPI_TransmitReceive>:
{
 800c31c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c320:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c322:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c326:	2801      	cmp	r0, #1
{
 800c328:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c32a:	f000 80ac 	beq.w	800c486 <HAL_SPI_TransmitReceive+0x16a>
 800c32e:	461e      	mov	r6, r3
 800c330:	2301      	movs	r3, #1
 800c332:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c336:	4690      	mov	r8, r2
 800c338:	460f      	mov	r7, r1
 800c33a:	f7fc ff51 	bl	80091e0 <HAL_GetTick>
 800c33e:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800c340:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800c344:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800c346:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800c348:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800c34a:	d011      	beq.n	800c370 <HAL_SPI_TransmitReceive+0x54>
 800c34c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800c350:	d009      	beq.n	800c366 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800c352:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c354:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c356:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c358:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c35c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c360:	b002      	add	sp, #8
 800c362:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800c366:	68a1      	ldr	r1, [r4, #8]
 800c368:	2900      	cmp	r1, #0
 800c36a:	d1f2      	bne.n	800c352 <HAL_SPI_TransmitReceive+0x36>
 800c36c:	2a04      	cmp	r2, #4
 800c36e:	d1f0      	bne.n	800c352 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800c370:	2f00      	cmp	r7, #0
 800c372:	f000 808c 	beq.w	800c48e <HAL_SPI_TransmitReceive+0x172>
 800c376:	f1b8 0f00 	cmp.w	r8, #0
 800c37a:	f000 8088 	beq.w	800c48e <HAL_SPI_TransmitReceive+0x172>
 800c37e:	2e00      	cmp	r6, #0
 800c380:	f000 8085 	beq.w	800c48e <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800c384:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800c388:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800c38c:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800c38e:	bf1c      	itt	ne
 800c390:	2205      	movne	r2, #5
 800c392:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c396:	2200      	movs	r2, #0
 800c398:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800c39a:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c39e:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800c3a0:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800c3a2:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c3a4:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800c3a6:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c3a8:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800c3aa:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800c3ac:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c3ae:	d403      	bmi.n	800c3b8 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800c3b0:	6811      	ldr	r1, [r2, #0]
 800c3b2:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c3b6:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c3b8:	68e1      	ldr	r1, [r4, #12]
 800c3ba:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800c3be:	f000 809e 	beq.w	800c4fe <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c3c2:	2b00      	cmp	r3, #0
 800c3c4:	f000 8091 	beq.w	800c4ea <HAL_SPI_TransmitReceive+0x1ce>
 800c3c8:	2e01      	cmp	r6, #1
 800c3ca:	f000 808e 	beq.w	800c4ea <HAL_SPI_TransmitReceive+0x1ce>
 800c3ce:	9b08      	ldr	r3, [sp, #32]
 800c3d0:	3301      	adds	r3, #1
        txallowed = 1U;
 800c3d2:	f04f 0601 	mov.w	r6, #1
 800c3d6:	d028      	beq.n	800c42a <HAL_SPI_TransmitReceive+0x10e>
 800c3d8:	e05b      	b.n	800c492 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c3da:	6821      	ldr	r1, [r4, #0]
 800c3dc:	688b      	ldr	r3, [r1, #8]
 800c3de:	0798      	lsls	r0, r3, #30
 800c3e0:	d50f      	bpl.n	800c402 <HAL_SPI_TransmitReceive+0xe6>
 800c3e2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c3e4:	b29b      	uxth	r3, r3
 800c3e6:	b163      	cbz	r3, 800c402 <HAL_SPI_TransmitReceive+0xe6>
 800c3e8:	b15e      	cbz	r6, 800c402 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800c3ea:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c3ec:	781b      	ldrb	r3, [r3, #0]
 800c3ee:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800c3f0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c3f2:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c3f4:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800c3f6:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800c3f8:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c3fa:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800c3fc:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800c3fe:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c400:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c402:	688a      	ldr	r2, [r1, #8]
 800c404:	f012 0201 	ands.w	r2, r2, #1
 800c408:	d00d      	beq.n	800c426 <HAL_SPI_TransmitReceive+0x10a>
 800c40a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c40c:	b29b      	uxth	r3, r3
 800c40e:	b153      	cbz	r3, 800c426 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c410:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c412:	68c9      	ldr	r1, [r1, #12]
 800c414:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800c416:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c418:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c41a:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800c41c:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c41e:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800c420:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c422:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c424:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c426:	f7fc fedb 	bl	80091e0 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c42a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c42c:	b292      	uxth	r2, r2
 800c42e:	2a00      	cmp	r2, #0
 800c430:	d1d3      	bne.n	800c3da <HAL_SPI_TransmitReceive+0xbe>
 800c432:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c434:	b29b      	uxth	r3, r3
 800c436:	2b00      	cmp	r3, #0
 800c438:	d1cf      	bne.n	800c3da <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c43a:	4b79      	ldr	r3, [pc, #484]	; (800c620 <HAL_SPI_TransmitReceive+0x304>)
 800c43c:	4a79      	ldr	r2, [pc, #484]	; (800c624 <HAL_SPI_TransmitReceive+0x308>)
 800c43e:	681b      	ldr	r3, [r3, #0]
 800c440:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c444:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c446:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800c44a:	0d5b      	lsrs	r3, r3, #21
 800c44c:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c450:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c454:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c456:	d107      	bne.n	800c468 <HAL_SPI_TransmitReceive+0x14c>
 800c458:	e0d2      	b.n	800c600 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800c45a:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c45c:	6822      	ldr	r2, [r4, #0]
      count--;
 800c45e:	3b01      	subs	r3, #1
 800c460:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c462:	6893      	ldr	r3, [r2, #8]
 800c464:	061b      	lsls	r3, r3, #24
 800c466:	d502      	bpl.n	800c46e <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800c468:	9b01      	ldr	r3, [sp, #4]
 800c46a:	2b00      	cmp	r3, #0
 800c46c:	d1f5      	bne.n	800c45a <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c46e:	68a0      	ldr	r0, [r4, #8]
 800c470:	2800      	cmp	r0, #0
 800c472:	f040 8082 	bne.w	800c57a <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c476:	6823      	ldr	r3, [r4, #0]
 800c478:	9000      	str	r0, [sp, #0]
 800c47a:	68da      	ldr	r2, [r3, #12]
 800c47c:	9200      	str	r2, [sp, #0]
 800c47e:	689b      	ldr	r3, [r3, #8]
 800c480:	9300      	str	r3, [sp, #0]
 800c482:	9b00      	ldr	r3, [sp, #0]
 800c484:	e766      	b.n	800c354 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800c486:	2002      	movs	r0, #2
}
 800c488:	b002      	add	sp, #8
 800c48a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800c48e:	2001      	movs	r0, #1
 800c490:	e760      	b.n	800c354 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c492:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c494:	b29b      	uxth	r3, r3
 800c496:	b91b      	cbnz	r3, 800c4a0 <HAL_SPI_TransmitReceive+0x184>
 800c498:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c49a:	b29b      	uxth	r3, r3
 800c49c:	2b00      	cmp	r3, #0
 800c49e:	d0cc      	beq.n	800c43a <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c4a0:	6822      	ldr	r2, [r4, #0]
 800c4a2:	6893      	ldr	r3, [r2, #8]
 800c4a4:	0799      	lsls	r1, r3, #30
 800c4a6:	d50f      	bpl.n	800c4c8 <HAL_SPI_TransmitReceive+0x1ac>
 800c4a8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c4aa:	b29b      	uxth	r3, r3
 800c4ac:	b163      	cbz	r3, 800c4c8 <HAL_SPI_TransmitReceive+0x1ac>
 800c4ae:	b15e      	cbz	r6, 800c4c8 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800c4b0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c4b2:	781b      	ldrb	r3, [r3, #0]
 800c4b4:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800c4b6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c4b8:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c4ba:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800c4bc:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c4be:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800c4c0:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c4c2:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800c4c4:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c4c6:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c4c8:	6893      	ldr	r3, [r2, #8]
 800c4ca:	f013 0301 	ands.w	r3, r3, #1
 800c4ce:	d004      	beq.n	800c4da <HAL_SPI_TransmitReceive+0x1be>
 800c4d0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c4d2:	b289      	uxth	r1, r1
 800c4d4:	2900      	cmp	r1, #0
 800c4d6:	f040 8087 	bne.w	800c5e8 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c4da:	f7fc fe81 	bl	80091e0 <HAL_GetTick>
 800c4de:	9b08      	ldr	r3, [sp, #32]
 800c4e0:	1b40      	subs	r0, r0, r5
 800c4e2:	4298      	cmp	r0, r3
 800c4e4:	d3d5      	bcc.n	800c492 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800c4e6:	2003      	movs	r0, #3
 800c4e8:	e734      	b.n	800c354 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c4ea:	783b      	ldrb	r3, [r7, #0]
 800c4ec:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800c4ee:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c4f0:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c4f2:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c4f4:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800c4f6:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c4f8:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c4fa:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c4fc:	e767      	b.n	800c3ce <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c4fe:	2b00      	cmp	r3, #0
 800c500:	d13d      	bne.n	800c57e <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c502:	f837 3b02 	ldrh.w	r3, [r7], #2
 800c506:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800c508:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c50a:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c50c:	3b01      	subs	r3, #1
 800c50e:	b29b      	uxth	r3, r3
 800c510:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c512:	9b08      	ldr	r3, [sp, #32]
 800c514:	3301      	adds	r3, #1
{
 800c516:	f04f 0601 	mov.w	r6, #1
 800c51a:	d025      	beq.n	800c568 <HAL_SPI_TransmitReceive+0x24c>
 800c51c:	e032      	b.n	800c584 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c51e:	6823      	ldr	r3, [r4, #0]
 800c520:	689a      	ldr	r2, [r3, #8]
 800c522:	0792      	lsls	r2, r2, #30
 800c524:	d50d      	bpl.n	800c542 <HAL_SPI_TransmitReceive+0x226>
 800c526:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c528:	b292      	uxth	r2, r2
 800c52a:	b152      	cbz	r2, 800c542 <HAL_SPI_TransmitReceive+0x226>
 800c52c:	b14e      	cbz	r6, 800c542 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c52e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c530:	f831 2b02 	ldrh.w	r2, [r1], #2
 800c534:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800c536:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c538:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c53a:	3a01      	subs	r2, #1
 800c53c:	b292      	uxth	r2, r2
        txallowed = 0U;
 800c53e:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800c540:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c542:	689a      	ldr	r2, [r3, #8]
 800c544:	f012 0201 	ands.w	r2, r2, #1
 800c548:	d00c      	beq.n	800c564 <HAL_SPI_TransmitReceive+0x248>
 800c54a:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c54c:	b289      	uxth	r1, r1
 800c54e:	b149      	cbz	r1, 800c564 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c550:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c552:	68db      	ldr	r3, [r3, #12]
 800c554:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800c558:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c55a:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c55c:	3b01      	subs	r3, #1
 800c55e:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800c560:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800c562:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c564:	f7fc fe3c 	bl	80091e0 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c568:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c56a:	b29b      	uxth	r3, r3
 800c56c:	2b00      	cmp	r3, #0
 800c56e:	d1d6      	bne.n	800c51e <HAL_SPI_TransmitReceive+0x202>
 800c570:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c572:	b29b      	uxth	r3, r3
 800c574:	2b00      	cmp	r3, #0
 800c576:	d1d2      	bne.n	800c51e <HAL_SPI_TransmitReceive+0x202>
 800c578:	e75f      	b.n	800c43a <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800c57a:	2000      	movs	r0, #0
 800c57c:	e6ea      	b.n	800c354 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c57e:	2e01      	cmp	r6, #1
 800c580:	d1c7      	bne.n	800c512 <HAL_SPI_TransmitReceive+0x1f6>
 800c582:	e7be      	b.n	800c502 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c584:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c586:	b29b      	uxth	r3, r3
 800c588:	b923      	cbnz	r3, 800c594 <HAL_SPI_TransmitReceive+0x278>
 800c58a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c58c:	b29b      	uxth	r3, r3
 800c58e:	2b00      	cmp	r3, #0
 800c590:	f43f af53 	beq.w	800c43a <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c594:	6822      	ldr	r2, [r4, #0]
 800c596:	6893      	ldr	r3, [r2, #8]
 800c598:	079f      	lsls	r7, r3, #30
 800c59a:	d50d      	bpl.n	800c5b8 <HAL_SPI_TransmitReceive+0x29c>
 800c59c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c59e:	b29b      	uxth	r3, r3
 800c5a0:	b153      	cbz	r3, 800c5b8 <HAL_SPI_TransmitReceive+0x29c>
 800c5a2:	b14e      	cbz	r6, 800c5b8 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c5a4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c5a6:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c5aa:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c5ac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c5ae:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c5b0:	3b01      	subs	r3, #1
 800c5b2:	b29b      	uxth	r3, r3
 800c5b4:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c5b6:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c5b8:	6893      	ldr	r3, [r2, #8]
 800c5ba:	f013 0301 	ands.w	r3, r3, #1
 800c5be:	d00c      	beq.n	800c5da <HAL_SPI_TransmitReceive+0x2be>
 800c5c0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c5c2:	b289      	uxth	r1, r1
 800c5c4:	b149      	cbz	r1, 800c5da <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c5c6:	68d1      	ldr	r1, [r2, #12]
 800c5c8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c5ca:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800c5ce:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800c5d0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c5d2:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c5d4:	3b01      	subs	r3, #1
 800c5d6:	b29b      	uxth	r3, r3
 800c5d8:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c5da:	f7fc fe01 	bl	80091e0 <HAL_GetTick>
 800c5de:	9b08      	ldr	r3, [sp, #32]
 800c5e0:	1b40      	subs	r0, r0, r5
 800c5e2:	4298      	cmp	r0, r3
 800c5e4:	d3ce      	bcc.n	800c584 <HAL_SPI_TransmitReceive+0x268>
 800c5e6:	e77e      	b.n	800c4e6 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c5e8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c5ea:	68d2      	ldr	r2, [r2, #12]
 800c5ec:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800c5ee:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c5f0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c5f2:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800c5f4:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c5f6:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800c5f8:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c5fa:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c5fc:	461e      	mov	r6, r3
 800c5fe:	e76c      	b.n	800c4da <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c600:	9a08      	ldr	r2, [sp, #32]
 800c602:	462b      	mov	r3, r5
 800c604:	2180      	movs	r1, #128	; 0x80
 800c606:	4620      	mov	r0, r4
 800c608:	f7ff fc6a 	bl	800bee0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c60c:	2800      	cmp	r0, #0
 800c60e:	f43f af2e 	beq.w	800c46e <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c612:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c614:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c616:	4313      	orrs	r3, r2
 800c618:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800c61a:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c61c:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800c61e:	e699      	b.n	800c354 <HAL_SPI_TransmitReceive+0x38>
 800c620:	20000078 	.word	0x20000078
 800c624:	165e9f81 	.word	0x165e9f81

0800c628 <HAL_SPI_Receive>:
{
 800c628:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c62c:	6846      	ldr	r6, [r0, #4]
 800c62e:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800c632:	b082      	sub	sp, #8
 800c634:	4604      	mov	r4, r0
 800c636:	4690      	mov	r8, r2
 800c638:	461d      	mov	r5, r3
 800c63a:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c63c:	d06e      	beq.n	800c71c <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800c63e:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800c642:	2b01      	cmp	r3, #1
 800c644:	d076      	beq.n	800c734 <HAL_SPI_Receive+0x10c>
 800c646:	2301      	movs	r3, #1
 800c648:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c64c:	f7fc fdc8 	bl	80091e0 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c650:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800c654:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800c658:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c65a:	fa5f f08c 	uxtb.w	r0, ip
 800c65e:	d009      	beq.n	800c674 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800c660:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c662:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c664:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c666:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c66a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c66e:	b002      	add	sp, #8
 800c670:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c674:	2f00      	cmp	r7, #0
 800c676:	d0f4      	beq.n	800c662 <HAL_SPI_Receive+0x3a>
 800c678:	f1b8 0f00 	cmp.w	r8, #0
 800c67c:	d0f1      	beq.n	800c662 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c67e:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800c680:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c682:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800c686:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800c688:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c68c:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800c690:	f04f 0104 	mov.w	r1, #4
 800c694:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800c698:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c69c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800c69e:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800c6a0:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800c6a2:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800c6a6:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800c6a8:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c6aa:	d107      	bne.n	800c6bc <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800c6ac:	6811      	ldr	r1, [r2, #0]
 800c6ae:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c6b2:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800c6b4:	6811      	ldr	r1, [r2, #0]
 800c6b6:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800c6ba:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c6bc:	6811      	ldr	r1, [r2, #0]
 800c6be:	0648      	lsls	r0, r1, #25
 800c6c0:	d403      	bmi.n	800c6ca <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800c6c2:	6811      	ldr	r1, [r2, #0]
 800c6c4:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c6c8:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800c6ca:	68e1      	ldr	r1, [r4, #12]
 800c6cc:	2900      	cmp	r1, #0
 800c6ce:	d054      	beq.n	800c77a <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800c6d0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c6d2:	b289      	uxth	r1, r1
 800c6d4:	b1a9      	cbz	r1, 800c702 <HAL_SPI_Receive+0xda>
 800c6d6:	1c69      	adds	r1, r5, #1
 800c6d8:	d13e      	bne.n	800c758 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c6da:	6893      	ldr	r3, [r2, #8]
 800c6dc:	07db      	lsls	r3, r3, #31
 800c6de:	d544      	bpl.n	800c76a <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c6e0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c6e2:	68d1      	ldr	r1, [r2, #12]
 800c6e4:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800c6e8:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c6ec:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c6ee:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c6f2:	fa1f fc8c 	uxth.w	ip, ip
 800c6f6:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c6fa:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c6fc:	b29b      	uxth	r3, r3
 800c6fe:	2b00      	cmp	r3, #0
 800c700:	d1eb      	bne.n	800c6da <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800c702:	4632      	mov	r2, r6
 800c704:	4629      	mov	r1, r5
 800c706:	4620      	mov	r0, r4
 800c708:	f7ff fc48 	bl	800bf9c <SPI_EndRxTransaction>
 800c70c:	b108      	cbz	r0, 800c712 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c70e:	2320      	movs	r3, #32
 800c710:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c712:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c714:	3800      	subs	r0, #0
 800c716:	bf18      	it	ne
 800c718:	2001      	movne	r0, #1
error :
 800c71a:	e7a2      	b.n	800c662 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c71c:	6883      	ldr	r3, [r0, #8]
 800c71e:	2b00      	cmp	r3, #0
 800c720:	d18d      	bne.n	800c63e <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c722:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c724:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c726:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c728:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c72c:	460a      	mov	r2, r1
 800c72e:	f7ff fdf5 	bl	800c31c <HAL_SPI_TransmitReceive>
 800c732:	e79c      	b.n	800c66e <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800c734:	2002      	movs	r0, #2
}
 800c736:	b002      	add	sp, #8
 800c738:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c73c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c73e:	68db      	ldr	r3, [r3, #12]
 800c740:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800c744:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c746:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c748:	3b01      	subs	r3, #1
 800c74a:	b29b      	uxth	r3, r3
 800c74c:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c74e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c750:	b29b      	uxth	r3, r3
 800c752:	2b00      	cmp	r3, #0
 800c754:	d0d5      	beq.n	800c702 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c756:	6823      	ldr	r3, [r4, #0]
 800c758:	689a      	ldr	r2, [r3, #8]
 800c75a:	07d2      	lsls	r2, r2, #31
 800c75c:	d4ee      	bmi.n	800c73c <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c75e:	f7fc fd3f 	bl	80091e0 <HAL_GetTick>
 800c762:	1b80      	subs	r0, r0, r6
 800c764:	42a8      	cmp	r0, r5
 800c766:	d243      	bcs.n	800c7f0 <HAL_SPI_Receive+0x1c8>
 800c768:	e7f1      	b.n	800c74e <HAL_SPI_Receive+0x126>
 800c76a:	f7fc fd39 	bl	80091e0 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c76e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c770:	b29b      	uxth	r3, r3
 800c772:	2b00      	cmp	r3, #0
 800c774:	d0c5      	beq.n	800c702 <HAL_SPI_Receive+0xda>
 800c776:	6822      	ldr	r2, [r4, #0]
 800c778:	e7af      	b.n	800c6da <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800c77a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800c77c:	b292      	uxth	r2, r2
 800c77e:	2a00      	cmp	r2, #0
 800c780:	d0bf      	beq.n	800c702 <HAL_SPI_Receive+0xda>
 800c782:	1c6f      	adds	r7, r5, #1
 800c784:	d013      	beq.n	800c7ae <HAL_SPI_Receive+0x186>
 800c786:	e02b      	b.n	800c7e0 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c788:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c78a:	7b1b      	ldrb	r3, [r3, #12]
 800c78c:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c78e:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c792:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c794:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c798:	fa1f fc8c 	uxth.w	ip, ip
 800c79c:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c7a0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c7a2:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800c7a4:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c7a6:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800c7a8:	2b00      	cmp	r3, #0
 800c7aa:	d0aa      	beq.n	800c702 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c7ac:	6823      	ldr	r3, [r4, #0]
 800c7ae:	689a      	ldr	r2, [r3, #8]
 800c7b0:	07d0      	lsls	r0, r2, #31
 800c7b2:	d4e9      	bmi.n	800c788 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c7b4:	f7fc fd14 	bl	80091e0 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c7b8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c7ba:	b29b      	uxth	r3, r3
 800c7bc:	2b00      	cmp	r3, #0
 800c7be:	d1f5      	bne.n	800c7ac <HAL_SPI_Receive+0x184>
 800c7c0:	e79f      	b.n	800c702 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c7c2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c7c4:	7b1b      	ldrb	r3, [r3, #12]
 800c7c6:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c7c8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c7ca:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c7cc:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c7ce:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800c7d0:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c7d2:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c7d4:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c7d6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c7d8:	b29b      	uxth	r3, r3
 800c7da:	2b00      	cmp	r3, #0
 800c7dc:	d091      	beq.n	800c702 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c7de:	6823      	ldr	r3, [r4, #0]
 800c7e0:	689a      	ldr	r2, [r3, #8]
 800c7e2:	07d1      	lsls	r1, r2, #31
 800c7e4:	d4ed      	bmi.n	800c7c2 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c7e6:	f7fc fcfb 	bl	80091e0 <HAL_GetTick>
 800c7ea:	1b80      	subs	r0, r0, r6
 800c7ec:	42a8      	cmp	r0, r5
 800c7ee:	d3f2      	bcc.n	800c7d6 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800c7f0:	2003      	movs	r0, #3
 800c7f2:	e736      	b.n	800c662 <HAL_SPI_Receive+0x3a>

0800c7f4 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800c7f4:	2800      	cmp	r0, #0
 800c7f6:	f000 8087 	beq.w	800c908 <HAL_TIM_Base_Init+0x114>
{
 800c7fa:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800c7fc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c800:	4604      	mov	r4, r0
 800c802:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c806:	2b00      	cmp	r3, #0
 800c808:	d079      	beq.n	800c8fe <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800c80a:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c80c:	493f      	ldr	r1, [pc, #252]	; (800c90c <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c80e:	2302      	movs	r3, #2
 800c810:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c814:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800c816:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c818:	d05d      	beq.n	800c8d6 <HAL_TIM_Base_Init+0xe2>
 800c81a:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800c81e:	d031      	beq.n	800c884 <HAL_TIM_Base_Init+0x90>
 800c820:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800c824:	428a      	cmp	r2, r1
 800c826:	d02d      	beq.n	800c884 <HAL_TIM_Base_Init+0x90>
 800c828:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c82c:	428a      	cmp	r2, r1
 800c82e:	d029      	beq.n	800c884 <HAL_TIM_Base_Init+0x90>
 800c830:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c834:	428a      	cmp	r2, r1
 800c836:	d025      	beq.n	800c884 <HAL_TIM_Base_Init+0x90>
 800c838:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800c83c:	428a      	cmp	r2, r1
 800c83e:	d04a      	beq.n	800c8d6 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800c840:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800c844:	428a      	cmp	r2, r1
 800c846:	d021      	beq.n	800c88c <HAL_TIM_Base_Init+0x98>
 800c848:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c84c:	428a      	cmp	r2, r1
 800c84e:	d01d      	beq.n	800c88c <HAL_TIM_Base_Init+0x98>
 800c850:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c854:	428a      	cmp	r2, r1
 800c856:	d019      	beq.n	800c88c <HAL_TIM_Base_Init+0x98>
 800c858:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800c85c:	428a      	cmp	r2, r1
 800c85e:	d015      	beq.n	800c88c <HAL_TIM_Base_Init+0x98>
 800c860:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c864:	428a      	cmp	r2, r1
 800c866:	d011      	beq.n	800c88c <HAL_TIM_Base_Init+0x98>
 800c868:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c86c:	428a      	cmp	r2, r1
 800c86e:	d00d      	beq.n	800c88c <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c870:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c872:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c874:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c878:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800c87a:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800c87c:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c87e:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c880:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800c882:	e010      	b.n	800c8a6 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800c884:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c886:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c88a:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c88c:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c88e:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800c890:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c894:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c896:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c89a:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c89c:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800c89e:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800c8a0:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c8a2:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c8a4:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800c8a6:	2301      	movs	r3, #1
 800c8a8:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800c8aa:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c8ae:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800c8b2:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800c8b6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c8ba:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c8be:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800c8c2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c8c6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c8ca:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800c8ce:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800c8d2:	2000      	movs	r0, #0
}
 800c8d4:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800c8d6:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c8d8:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c8da:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c8de:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800c8e0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c8e4:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c8e6:	69a1      	ldr	r1, [r4, #24]
 800c8e8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c8ec:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800c8ee:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c8f0:	68e3      	ldr	r3, [r4, #12]
 800c8f2:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c8f4:	6863      	ldr	r3, [r4, #4]
 800c8f6:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800c8f8:	6963      	ldr	r3, [r4, #20]
 800c8fa:	6313      	str	r3, [r2, #48]	; 0x30
 800c8fc:	e7d3      	b.n	800c8a6 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800c8fe:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800c902:	f7f5 fcb5 	bl	8002270 <HAL_TIM_Base_MspInit>
 800c906:	e780      	b.n	800c80a <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800c908:	2001      	movs	r0, #1
}
 800c90a:	4770      	bx	lr
 800c90c:	40010000 	.word	0x40010000

0800c910 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800c910:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c914:	2b01      	cmp	r3, #1
 800c916:	d12f      	bne.n	800c978 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c918:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c91a:	4919      	ldr	r1, [pc, #100]	; (800c980 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c91c:	2202      	movs	r2, #2
 800c91e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c922:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c924:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c926:	f042 0201 	orr.w	r2, r2, #1
 800c92a:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c92c:	d019      	beq.n	800c962 <HAL_TIM_Base_Start_IT+0x52>
 800c92e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c932:	d016      	beq.n	800c962 <HAL_TIM_Base_Start_IT+0x52>
 800c934:	4a13      	ldr	r2, [pc, #76]	; (800c984 <HAL_TIM_Base_Start_IT+0x74>)
 800c936:	4293      	cmp	r3, r2
 800c938:	d013      	beq.n	800c962 <HAL_TIM_Base_Start_IT+0x52>
 800c93a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c93e:	4293      	cmp	r3, r2
 800c940:	d00f      	beq.n	800c962 <HAL_TIM_Base_Start_IT+0x52>
 800c942:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c946:	4293      	cmp	r3, r2
 800c948:	d00b      	beq.n	800c962 <HAL_TIM_Base_Start_IT+0x52>
 800c94a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c94e:	4293      	cmp	r3, r2
 800c950:	d007      	beq.n	800c962 <HAL_TIM_Base_Start_IT+0x52>
 800c952:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c956:	4293      	cmp	r3, r2
 800c958:	d003      	beq.n	800c962 <HAL_TIM_Base_Start_IT+0x52>
 800c95a:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c95e:	4293      	cmp	r3, r2
 800c960:	d104      	bne.n	800c96c <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800c962:	689a      	ldr	r2, [r3, #8]
 800c964:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800c968:	2a06      	cmp	r2, #6
 800c96a:	d007      	beq.n	800c97c <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800c96c:	681a      	ldr	r2, [r3, #0]
 800c96e:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800c972:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800c974:	601a      	str	r2, [r3, #0]
 800c976:	4770      	bx	lr
    return HAL_ERROR;
 800c978:	2001      	movs	r0, #1
 800c97a:	4770      	bx	lr
  return HAL_OK;
 800c97c:	2000      	movs	r0, #0
}
 800c97e:	4770      	bx	lr
 800c980:	40010000 	.word	0x40010000
 800c984:	40000400 	.word	0x40000400

0800c988 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800c988:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800c98c:	2b01      	cmp	r3, #1
 800c98e:	d075      	beq.n	800ca7c <HAL_TIM_ConfigClockSource+0xf4>
 800c990:	4602      	mov	r2, r0
{
 800c992:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c994:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800c996:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c998:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c99c:	2001      	movs	r0, #1
 800c99e:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c9a2:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c9a4:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800c9a8:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800c9ac:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800c9ae:	680b      	ldr	r3, [r1, #0]
 800c9b0:	2b60      	cmp	r3, #96	; 0x60
 800c9b2:	d065      	beq.n	800ca80 <HAL_TIM_ConfigClockSource+0xf8>
 800c9b4:	d824      	bhi.n	800ca00 <HAL_TIM_ConfigClockSource+0x78>
 800c9b6:	2b40      	cmp	r3, #64	; 0x40
 800c9b8:	d07c      	beq.n	800cab4 <HAL_TIM_ConfigClockSource+0x12c>
 800c9ba:	d94b      	bls.n	800ca54 <HAL_TIM_ConfigClockSource+0xcc>
 800c9bc:	2b50      	cmp	r3, #80	; 0x50
 800c9be:	d117      	bne.n	800c9f0 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c9c0:	684b      	ldr	r3, [r1, #4]
 800c9c2:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800c9c4:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c9c6:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c9ca:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c9cc:	6a23      	ldr	r3, [r4, #32]
 800c9ce:	f023 0301 	bic.w	r3, r3, #1
 800c9d2:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c9d4:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c9d6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c9da:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800c9de:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c9e0:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800c9e2:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800c9e4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c9e8:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800c9ec:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c9ee:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800c9f0:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800c9f2:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c9f4:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c9f8:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800c9fc:	bc30      	pop	{r4, r5}
 800c9fe:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800ca00:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800ca04:	d038      	beq.n	800ca78 <HAL_TIM_ConfigClockSource+0xf0>
 800ca06:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800ca0a:	d110      	bne.n	800ca2e <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800ca0c:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800ca10:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800ca12:	432b      	orrs	r3, r5
 800ca14:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800ca16:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800ca1a:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800ca1e:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800ca20:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800ca22:	68a3      	ldr	r3, [r4, #8]
 800ca24:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800ca28:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800ca2a:	60a3      	str	r3, [r4, #8]
      break;
 800ca2c:	e7e0      	b.n	800c9f0 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800ca2e:	2b70      	cmp	r3, #112	; 0x70
 800ca30:	d1de      	bne.n	800c9f0 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800ca32:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800ca36:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800ca38:	432b      	orrs	r3, r5
 800ca3a:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800ca3c:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800ca40:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800ca44:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800ca46:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800ca48:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800ca4a:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800ca4e:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800ca50:	60a3      	str	r3, [r4, #8]
      break;
 800ca52:	e7cd      	b.n	800c9f0 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800ca54:	2b20      	cmp	r3, #32
 800ca56:	d002      	beq.n	800ca5e <HAL_TIM_ConfigClockSource+0xd6>
 800ca58:	d90a      	bls.n	800ca70 <HAL_TIM_ConfigClockSource+0xe8>
 800ca5a:	2b30      	cmp	r3, #48	; 0x30
 800ca5c:	d1c8      	bne.n	800c9f0 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800ca5e:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800ca60:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800ca64:	430b      	orrs	r3, r1
 800ca66:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800ca6a:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800ca6c:	60a3      	str	r3, [r4, #8]
}
 800ca6e:	e7bf      	b.n	800c9f0 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800ca70:	f033 0110 	bics.w	r1, r3, #16
 800ca74:	d1bc      	bne.n	800c9f0 <HAL_TIM_ConfigClockSource+0x68>
 800ca76:	e7f2      	b.n	800ca5e <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800ca78:	2000      	movs	r0, #0
 800ca7a:	e7b9      	b.n	800c9f0 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800ca7c:	2002      	movs	r0, #2
}
 800ca7e:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800ca80:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800ca82:	6848      	ldr	r0, [r1, #4]
 800ca84:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800ca86:	f023 0310 	bic.w	r3, r3, #16
 800ca8a:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800ca8c:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800ca8e:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800ca90:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800ca94:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800ca98:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800ca9c:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800caa0:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800caa2:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800caa4:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800caa6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800caaa:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800caae:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800cab0:	60a3      	str	r3, [r4, #8]
}
 800cab2:	e79d      	b.n	800c9f0 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800cab4:	684b      	ldr	r3, [r1, #4]
 800cab6:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800cab8:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800caba:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800cabe:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800cac0:	6a23      	ldr	r3, [r4, #32]
 800cac2:	f023 0301 	bic.w	r3, r3, #1
 800cac6:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800cac8:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800caca:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800cace:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800cad2:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800cad4:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800cad6:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800cad8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800cadc:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800cae0:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800cae2:	60a3      	str	r3, [r4, #8]
}
 800cae4:	e784      	b.n	800c9f0 <HAL_TIM_ConfigClockSource+0x68>
 800cae6:	bf00      	nop

0800cae8 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800cae8:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800caec:	2a01      	cmp	r2, #1
 800caee:	d050      	beq.n	800cb92 <HAL_TIM_SlaveConfigSynchro+0xaa>
 800caf0:	4603      	mov	r3, r0
{
 800caf2:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800caf4:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800caf6:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800caf8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800cafc:	2001      	movs	r0, #1
 800cafe:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800cb02:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800cb04:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800cb06:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800cb08:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800cb0c:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800cb0e:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800cb12:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800cb14:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800cb16:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800cb18:	d060      	beq.n	800cbdc <HAL_TIM_SlaveConfigSynchro+0xf4>
 800cb1a:	d90f      	bls.n	800cb3c <HAL_TIM_SlaveConfigSynchro+0x54>
 800cb1c:	2860      	cmp	r0, #96	; 0x60
 800cb1e:	d03a      	beq.n	800cb96 <HAL_TIM_SlaveConfigSynchro+0xae>
 800cb20:	2870      	cmp	r0, #112	; 0x70
 800cb22:	d10e      	bne.n	800cb42 <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800cb24:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800cb28:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800cb2a:	432a      	orrs	r2, r5
 800cb2c:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800cb2e:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800cb32:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800cb36:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800cb38:	60a2      	str	r2, [r4, #8]
 800cb3a:	e00f      	b.n	800cb5c <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800cb3c:	2840      	cmp	r0, #64	; 0x40
 800cb3e:	d03d      	beq.n	800cbbc <HAL_TIM_SlaveConfigSynchro+0xd4>
 800cb40:	d907      	bls.n	800cb52 <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800cb42:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800cb44:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800cb46:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800cb4a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800cb4e:	bc30      	pop	{r4, r5}
 800cb50:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800cb52:	2820      	cmp	r0, #32
 800cb54:	d002      	beq.n	800cb5c <HAL_TIM_SlaveConfigSynchro+0x74>
 800cb56:	d912      	bls.n	800cb7e <HAL_TIM_SlaveConfigSynchro+0x96>
 800cb58:	2830      	cmp	r0, #48	; 0x30
 800cb5a:	d1f2      	bne.n	800cb42 <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800cb5c:	68e2      	ldr	r2, [r4, #12]
 800cb5e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800cb62:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800cb64:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800cb66:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800cb68:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800cb6a:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800cb6e:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800cb70:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800cb74:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800cb78:	4608      	mov	r0, r1
}
 800cb7a:	bc30      	pop	{r4, r5}
 800cb7c:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800cb7e:	f030 0210 	bics.w	r2, r0, #16
 800cb82:	d0eb      	beq.n	800cb5c <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800cb84:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800cb86:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800cb88:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800cb8c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800cb90:	e7dd      	b.n	800cb4e <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800cb92:	2002      	movs	r0, #2
}
 800cb94:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800cb96:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800cb98:	6888      	ldr	r0, [r1, #8]
 800cb9a:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800cb9c:	f022 0210 	bic.w	r2, r2, #16
 800cba0:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800cba2:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800cba4:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800cba6:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800cbaa:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800cbae:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800cbb2:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800cbb6:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800cbb8:	6222      	str	r2, [r4, #32]
 800cbba:	e7cf      	b.n	800cb5c <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800cbbc:	2d05      	cmp	r5, #5
 800cbbe:	d0c0      	beq.n	800cb42 <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800cbc0:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800cbc2:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800cbc4:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800cbc6:	f022 0201 	bic.w	r2, r2, #1
 800cbca:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800cbcc:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800cbce:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800cbd2:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800cbd6:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800cbd8:	6220      	str	r0, [r4, #32]
      break;
 800cbda:	e7bf      	b.n	800cb5c <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800cbdc:	688a      	ldr	r2, [r1, #8]
 800cbde:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800cbe0:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800cbe2:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800cbe6:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800cbe8:	6a22      	ldr	r2, [r4, #32]
 800cbea:	f022 0201 	bic.w	r2, r2, #1
 800cbee:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800cbf0:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800cbf2:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800cbf6:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800cbfa:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800cbfc:	6221      	str	r1, [r4, #32]
 800cbfe:	e7ad      	b.n	800cb5c <HAL_TIM_SlaveConfigSynchro+0x74>

0800cc00 <HAL_TIM_OC_DelayElapsedCallback>:
 800cc00:	4770      	bx	lr
 800cc02:	bf00      	nop

0800cc04 <HAL_TIM_IC_CaptureCallback>:
 800cc04:	4770      	bx	lr
 800cc06:	bf00      	nop

0800cc08 <HAL_TIM_PWM_PulseFinishedCallback>:
 800cc08:	4770      	bx	lr
 800cc0a:	bf00      	nop

0800cc0c <HAL_TIM_TriggerCallback>:
 800cc0c:	4770      	bx	lr
 800cc0e:	bf00      	nop

0800cc10 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800cc10:	6803      	ldr	r3, [r0, #0]
 800cc12:	691a      	ldr	r2, [r3, #16]
 800cc14:	0791      	lsls	r1, r2, #30
{
 800cc16:	b510      	push	{r4, lr}
 800cc18:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800cc1a:	d502      	bpl.n	800cc22 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800cc1c:	68da      	ldr	r2, [r3, #12]
 800cc1e:	0792      	lsls	r2, r2, #30
 800cc20:	d45f      	bmi.n	800cce2 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800cc22:	691a      	ldr	r2, [r3, #16]
 800cc24:	0750      	lsls	r0, r2, #29
 800cc26:	d502      	bpl.n	800cc2e <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800cc28:	68da      	ldr	r2, [r3, #12]
 800cc2a:	0751      	lsls	r1, r2, #29
 800cc2c:	d446      	bmi.n	800ccbc <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800cc2e:	691a      	ldr	r2, [r3, #16]
 800cc30:	0712      	lsls	r2, r2, #28
 800cc32:	d502      	bpl.n	800cc3a <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800cc34:	68da      	ldr	r2, [r3, #12]
 800cc36:	0710      	lsls	r0, r2, #28
 800cc38:	d42e      	bmi.n	800cc98 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800cc3a:	691a      	ldr	r2, [r3, #16]
 800cc3c:	06d2      	lsls	r2, r2, #27
 800cc3e:	d502      	bpl.n	800cc46 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800cc40:	68da      	ldr	r2, [r3, #12]
 800cc42:	06d0      	lsls	r0, r2, #27
 800cc44:	d418      	bmi.n	800cc78 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800cc46:	691a      	ldr	r2, [r3, #16]
 800cc48:	07d1      	lsls	r1, r2, #31
 800cc4a:	d502      	bpl.n	800cc52 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800cc4c:	68da      	ldr	r2, [r3, #12]
 800cc4e:	07d2      	lsls	r2, r2, #31
 800cc50:	d45d      	bmi.n	800cd0e <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800cc52:	691a      	ldr	r2, [r3, #16]
 800cc54:	0610      	lsls	r0, r2, #24
 800cc56:	d502      	bpl.n	800cc5e <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800cc58:	68da      	ldr	r2, [r3, #12]
 800cc5a:	0611      	lsls	r1, r2, #24
 800cc5c:	d45f      	bmi.n	800cd1e <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800cc5e:	691a      	ldr	r2, [r3, #16]
 800cc60:	0652      	lsls	r2, r2, #25
 800cc62:	d502      	bpl.n	800cc6a <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800cc64:	68da      	ldr	r2, [r3, #12]
 800cc66:	0650      	lsls	r0, r2, #25
 800cc68:	d461      	bmi.n	800cd2e <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800cc6a:	691a      	ldr	r2, [r3, #16]
 800cc6c:	0691      	lsls	r1, r2, #26
 800cc6e:	d502      	bpl.n	800cc76 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800cc70:	68da      	ldr	r2, [r3, #12]
 800cc72:	0692      	lsls	r2, r2, #26
 800cc74:	d443      	bmi.n	800ccfe <HAL_TIM_IRQHandler+0xee>
}
 800cc76:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800cc78:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800cc7c:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800cc7e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800cc80:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800cc82:	69db      	ldr	r3, [r3, #28]
 800cc84:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800cc88:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800cc8a:	d064      	beq.n	800cd56 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800cc8c:	f7ff ffba 	bl	800cc04 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cc90:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800cc92:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cc94:	7722      	strb	r2, [r4, #28]
 800cc96:	e7d6      	b.n	800cc46 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800cc98:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800cc9c:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800cc9e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800cca0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800cca2:	69db      	ldr	r3, [r3, #28]
 800cca4:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800cca6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800cca8:	d152      	bne.n	800cd50 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800ccaa:	f7ff ffa9 	bl	800cc00 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800ccae:	4620      	mov	r0, r4
 800ccb0:	f7ff ffaa 	bl	800cc08 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ccb4:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800ccb6:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ccb8:	7722      	strb	r2, [r4, #28]
 800ccba:	e7be      	b.n	800cc3a <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800ccbc:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800ccc0:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800ccc2:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800ccc4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800ccc6:	699b      	ldr	r3, [r3, #24]
 800ccc8:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800cccc:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800ccce:	d13c      	bne.n	800cd4a <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800ccd0:	f7ff ff96 	bl	800cc00 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800ccd4:	4620      	mov	r0, r4
 800ccd6:	f7ff ff97 	bl	800cc08 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ccda:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800ccdc:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ccde:	7722      	strb	r2, [r4, #28]
 800cce0:	e7a5      	b.n	800cc2e <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800cce2:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800cce6:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800cce8:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800ccea:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800ccec:	699b      	ldr	r3, [r3, #24]
 800ccee:	079b      	lsls	r3, r3, #30
 800ccf0:	d025      	beq.n	800cd3e <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800ccf2:	f7ff ff87 	bl	800cc04 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ccf6:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800ccf8:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ccfa:	7722      	strb	r2, [r4, #28]
 800ccfc:	e791      	b.n	800cc22 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800ccfe:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800cd02:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800cd04:	611a      	str	r2, [r3, #16]
}
 800cd06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800cd0a:	f000 b86b 	b.w	800cde4 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800cd0e:	f06f 0201 	mvn.w	r2, #1
 800cd12:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800cd14:	4620      	mov	r0, r4
 800cd16:	f7f4 ff4f 	bl	8001bb8 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800cd1a:	6823      	ldr	r3, [r4, #0]
 800cd1c:	e799      	b.n	800cc52 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800cd1e:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800cd22:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800cd24:	4620      	mov	r0, r4
 800cd26:	f000 f85f 	bl	800cde8 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800cd2a:	6823      	ldr	r3, [r4, #0]
 800cd2c:	e797      	b.n	800cc5e <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800cd2e:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800cd32:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800cd34:	4620      	mov	r0, r4
 800cd36:	f7ff ff69 	bl	800cc0c <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800cd3a:	6823      	ldr	r3, [r4, #0]
 800cd3c:	e795      	b.n	800cc6a <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800cd3e:	f7ff ff5f 	bl	800cc00 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cd42:	4620      	mov	r0, r4
 800cd44:	f7ff ff60 	bl	800cc08 <HAL_TIM_PWM_PulseFinishedCallback>
 800cd48:	e7d5      	b.n	800ccf6 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800cd4a:	f7ff ff5b 	bl	800cc04 <HAL_TIM_IC_CaptureCallback>
 800cd4e:	e7c4      	b.n	800ccda <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800cd50:	f7ff ff58 	bl	800cc04 <HAL_TIM_IC_CaptureCallback>
 800cd54:	e7ae      	b.n	800ccb4 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800cd56:	f7ff ff53 	bl	800cc00 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cd5a:	4620      	mov	r0, r4
 800cd5c:	f7ff ff54 	bl	800cc08 <HAL_TIM_PWM_PulseFinishedCallback>
 800cd60:	e796      	b.n	800cc90 <HAL_TIM_IRQHandler+0x80>
 800cd62:	bf00      	nop

0800cd64 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800cd64:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800cd68:	2b01      	cmp	r3, #1
 800cd6a:	d037      	beq.n	800cddc <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800cd6c:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800cd6e:	2202      	movs	r2, #2
{
 800cd70:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800cd72:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800cd76:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800cd78:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800cd7a:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800cd7c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800cd80:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800cd82:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800cd84:	4a16      	ldr	r2, [pc, #88]	; (800cde0 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800cd86:	4293      	cmp	r3, r2
 800cd88:	d01a      	beq.n	800cdc0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cd8a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800cd8e:	d017      	beq.n	800cdc0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cd90:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800cd94:	4293      	cmp	r3, r2
 800cd96:	d013      	beq.n	800cdc0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cd98:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cd9c:	4293      	cmp	r3, r2
 800cd9e:	d00f      	beq.n	800cdc0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cda0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cda4:	4293      	cmp	r3, r2
 800cda6:	d00b      	beq.n	800cdc0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cda8:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800cdac:	4293      	cmp	r3, r2
 800cdae:	d007      	beq.n	800cdc0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cdb0:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800cdb4:	4293      	cmp	r3, r2
 800cdb6:	d003      	beq.n	800cdc0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cdb8:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800cdbc:	4293      	cmp	r3, r2
 800cdbe:	d104      	bne.n	800cdca <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800cdc0:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800cdc2:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800cdc6:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800cdc8:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800cdca:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800cdcc:	2201      	movs	r2, #1
 800cdce:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800cdd2:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800cdd6:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800cdd8:	4618      	mov	r0, r3
}
 800cdda:	4770      	bx	lr
  __HAL_LOCK(htim);
 800cddc:	2002      	movs	r0, #2
}
 800cdde:	4770      	bx	lr
 800cde0:	40010000 	.word	0x40010000

0800cde4 <HAL_TIMEx_CommutCallback>:
 800cde4:	4770      	bx	lr
 800cde6:	bf00      	nop

0800cde8 <HAL_TIMEx_BreakCallback>:
 800cde8:	4770      	bx	lr
 800cdea:	bf00      	nop

0800cdec <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800cdec:	680b      	ldr	r3, [r1, #0]
{
 800cdee:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800cdf0:	b9d3      	cbnz	r3, 800ce28 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cdf2:	6803      	ldr	r3, [r0, #0]
 800cdf4:	684c      	ldr	r4, [r1, #4]
 800cdf6:	688a      	ldr	r2, [r1, #8]
 800cdf8:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800cdfc:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800ce00:	4323      	orrs	r3, r4
 800ce02:	4313      	orrs	r3, r2
 800ce04:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800ce08:	4323      	orrs	r3, r4
 800ce0a:	4313      	orrs	r3, r2
 800ce0c:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800ce10:	4323      	orrs	r3, r4
 800ce12:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800ce16:	4313      	orrs	r3, r2
 800ce18:	432b      	orrs	r3, r5
 800ce1a:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800ce1c:	4323      	orrs	r3, r4
 800ce1e:	4313      	orrs	r3, r2
 800ce20:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800ce22:	bc30      	pop	{r4, r5}
 800ce24:	2000      	movs	r0, #0
 800ce26:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800ce28:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800ce2c:	6803      	ldr	r3, [r0, #0]
 800ce2e:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800ce32:	4323      	orrs	r3, r4
 800ce34:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800ce36:	4313      	orrs	r3, r2
 800ce38:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800ce3a:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800ce3c:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800ce3e:	6843      	ldr	r3, [r0, #4]
 800ce40:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800ce44:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800ce48:	4313      	orrs	r3, r2
 800ce4a:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800ce4e:	4323      	orrs	r3, r4
 800ce50:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800ce54:	4313      	orrs	r3, r2
 800ce56:	432b      	orrs	r3, r5
 800ce58:	698a      	ldr	r2, [r1, #24]
 800ce5a:	4323      	orrs	r3, r4
 800ce5c:	4313      	orrs	r3, r2
 800ce5e:	6043      	str	r3, [r0, #4]
}
 800ce60:	bc30      	pop	{r4, r5}
 800ce62:	2000      	movs	r0, #0
 800ce64:	4770      	bx	lr
 800ce66:	bf00      	nop

0800ce68 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800ce68:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ce6a:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800ce6c:	bb02      	cbnz	r2, 800ceb0 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ce6e:	e9d1 2400 	ldrd	r2, r4, [r1]
 800ce72:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800ce76:	3c01      	subs	r4, #1
 800ce78:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800ce7c:	3a01      	subs	r2, #1
 800ce7e:	4313      	orrs	r3, r2
 800ce80:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800ce84:	3c01      	subs	r4, #1
 800ce86:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800ce8a:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800ce8e:	3a01      	subs	r2, #1
 800ce90:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800ce94:	698a      	ldr	r2, [r1, #24]
 800ce96:	1e69      	subs	r1, r5, #1
 800ce98:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800ce9c:	1e61      	subs	r1, r4, #1
 800ce9e:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800cea2:	3a01      	subs	r2, #1
 800cea4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800cea8:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800ceaa:	bc30      	pop	{r4, r5}
 800ceac:	2000      	movs	r0, #0
 800ceae:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ceb0:	68cc      	ldr	r4, [r1, #12]
 800ceb2:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800ceb4:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ceb6:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800ceba:	3c01      	subs	r4, #1
 800cebc:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800cec0:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800cec4:	3a01      	subs	r2, #1
 800cec6:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800ceca:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800cecc:	e9d1 2400 	ldrd	r2, r4, [r1]
 800ced0:	68c3      	ldr	r3, [r0, #12]
 800ced2:	3c01      	subs	r4, #1
 800ced4:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800ced8:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800cedc:	3a01      	subs	r2, #1
 800cede:	690c      	ldr	r4, [r1, #16]
 800cee0:	4313      	orrs	r3, r2
 800cee2:	698a      	ldr	r2, [r1, #24]
 800cee4:	1e69      	subs	r1, r5, #1
 800cee6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800ceea:	1e61      	subs	r1, r4, #1
 800ceec:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800cef0:	3a01      	subs	r2, #1
 800cef2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800cef6:	60c3      	str	r3, [r0, #12]
}
 800cef8:	bc30      	pop	{r4, r5}
 800cefa:	2000      	movs	r0, #0
 800cefc:	4770      	bx	lr
 800cefe:	bf00      	nop

0800cf00 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800cf00:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cf02:	680b      	ldr	r3, [r1, #0]
{
 800cf04:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cf06:	684a      	ldr	r2, [r1, #4]
{
 800cf08:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cf0a:	4313      	orrs	r3, r2
 800cf0c:	6900      	ldr	r0, [r0, #16]
 800cf0e:	68ca      	ldr	r2, [r1, #12]
 800cf10:	0d80      	lsrs	r0, r0, #22
 800cf12:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800cf16:	688a      	ldr	r2, [r1, #8]
 800cf18:	0580      	lsls	r0, r0, #22
 800cf1a:	4303      	orrs	r3, r0
 800cf1c:	3a01      	subs	r2, #1
 800cf1e:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800cf22:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800cf24:	f7fc f95c 	bl	80091e0 <HAL_GetTick>
 800cf28:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800cf2a:	1c6b      	adds	r3, r5, #1
 800cf2c:	d105      	bne.n	800cf3a <FMC_SDRAM_SendCommand+0x3a>
 800cf2e:	69a3      	ldr	r3, [r4, #24]
 800cf30:	f013 0320 	ands.w	r3, r3, #32
 800cf34:	d1fb      	bne.n	800cf2e <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800cf36:	4618      	mov	r0, r3
}
 800cf38:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800cf3a:	69a3      	ldr	r3, [r4, #24]
 800cf3c:	f013 0320 	ands.w	r3, r3, #32
 800cf40:	d0f9      	beq.n	800cf36 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800cf42:	b125      	cbz	r5, 800cf4e <FMC_SDRAM_SendCommand+0x4e>
 800cf44:	f7fc f94c 	bl	80091e0 <HAL_GetTick>
 800cf48:	1b80      	subs	r0, r0, r6
 800cf4a:	42a8      	cmp	r0, r5
 800cf4c:	d9ed      	bls.n	800cf2a <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800cf4e:	2003      	movs	r0, #3
}
 800cf50:	bd70      	pop	{r4, r5, r6, pc}
 800cf52:	bf00      	nop

0800cf54 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cf54:	6943      	ldr	r3, [r0, #20]
 800cf56:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800cf5a:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cf5c:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800cf60:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800cf64:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cf66:	6151      	str	r1, [r2, #20]
}
 800cf68:	4770      	bx	lr
 800cf6a:	bf00      	nop

0800cf6c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800cf6c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800cf6e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cf72:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800cf74:	f002 fafe 	bl	800f574 <xTaskGetSchedulerState>
 800cf78:	2801      	cmp	r0, #1
 800cf7a:	d100      	bne.n	800cf7e <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800cf7c:	bd08      	pop	{r3, pc}
 800cf7e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800cf82:	f000 bc3f 	b.w	800d804 <xPortSysTickHandler>
 800cf86:	bf00      	nop

0800cf88 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800cf88:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800cf8c:	b92b      	cbnz	r3, 800cf9a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800cf8e:	4b06      	ldr	r3, [pc, #24]	; (800cfa8 <osKernelInitialize+0x20>)
 800cf90:	6818      	ldr	r0, [r3, #0]
 800cf92:	b928      	cbnz	r0, 800cfa0 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800cf94:	2201      	movs	r2, #1
 800cf96:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800cf98:	4770      	bx	lr
    stat = osErrorISR;
 800cf9a:	f06f 0005 	mvn.w	r0, #5
 800cf9e:	4770      	bx	lr
    } else {
      stat = osError;
 800cfa0:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800cfa4:	4770      	bx	lr
 800cfa6:	bf00      	nop
 800cfa8:	200023dc 	.word	0x200023dc

0800cfac <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800cfac:	b510      	push	{r4, lr}
 800cfae:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cfb2:	b974      	cbnz	r4, 800cfd2 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800cfb4:	4b08      	ldr	r3, [pc, #32]	; (800cfd8 <osKernelStart+0x2c>)
 800cfb6:	681a      	ldr	r2, [r3, #0]
 800cfb8:	2a01      	cmp	r2, #1
 800cfba:	d107      	bne.n	800cfcc <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800cfbc:	4907      	ldr	r1, [pc, #28]	; (800cfdc <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800cfbe:	2202      	movs	r2, #2
 800cfc0:	77cc      	strb	r4, [r1, #31]
 800cfc2:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800cfc4:	f002 f8b0 	bl	800f128 <vTaskStartScheduler>
      stat = osOK;
 800cfc8:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800cfca:	bd10      	pop	{r4, pc}
      stat = osError;
 800cfcc:	f04f 30ff 	mov.w	r0, #4294967295
}
 800cfd0:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cfd2:	f06f 0005 	mvn.w	r0, #5
}
 800cfd6:	bd10      	pop	{r4, pc}
 800cfd8:	200023dc 	.word	0x200023dc
 800cfdc:	e000ed00 	.word	0xe000ed00

0800cfe0 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cfe0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cfe2:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800cfe4:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cfe6:	4615      	mov	r5, r2
  hTask = NULL;
 800cfe8:	9405      	str	r4, [sp, #20]
 800cfea:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800cfee:	b9ea      	cbnz	r2, 800d02c <osThreadNew+0x4c>
 800cff0:	b350      	cbz	r0, 800d048 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800cff2:	b1f5      	cbz	r5, 800d032 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800cff4:	69ab      	ldr	r3, [r5, #24]
 800cff6:	bb5b      	cbnz	r3, 800d050 <osThreadNew+0x70>
 800cff8:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cffa:	686a      	ldr	r2, [r5, #4]
 800cffc:	07d2      	lsls	r2, r2, #31
 800cffe:	d423      	bmi.n	800d048 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800d000:	696e      	ldr	r6, [r5, #20]
 800d002:	b34e      	cbz	r6, 800d058 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800d004:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d008:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800d00a:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d00c:	b34c      	cbz	r4, 800d062 <osThreadNew+0x82>
 800d00e:	68ea      	ldr	r2, [r5, #12]
 800d010:	2aab      	cmp	r2, #171	; 0xab
 800d012:	d919      	bls.n	800d048 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d014:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d016:	b1bd      	cbz	r5, 800d048 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d018:	b1b6      	cbz	r6, 800d048 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800d01a:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800d01e:	9300      	str	r3, [sp, #0]
 800d020:	4662      	mov	r2, ip
 800d022:	460b      	mov	r3, r1
 800d024:	4639      	mov	r1, r7
 800d026:	f001 ffbd 	bl	800efa4 <xTaskCreateStatic>
 800d02a:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800d02c:	4620      	mov	r0, r4
 800d02e:	b007      	add	sp, #28
 800d030:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d032:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800d034:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d036:	ac05      	add	r4, sp, #20
 800d038:	9300      	str	r3, [sp, #0]
 800d03a:	9401      	str	r4, [sp, #4]
 800d03c:	460b      	mov	r3, r1
 800d03e:	4629      	mov	r1, r5
 800d040:	f001 ffea 	bl	800f018 <xTaskCreate>
 800d044:	2801      	cmp	r0, #1
 800d046:	d00a      	beq.n	800d05e <osThreadNew+0x7e>
        return (NULL);
 800d048:	2400      	movs	r4, #0
}
 800d04a:	4620      	mov	r0, r4
 800d04c:	b007      	add	sp, #28
 800d04e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d050:	1e5c      	subs	r4, r3, #1
 800d052:	2c37      	cmp	r4, #55	; 0x37
 800d054:	d9d1      	bls.n	800cffa <osThreadNew+0x1a>
 800d056:	e7f7      	b.n	800d048 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800d058:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800d05c:	e7d4      	b.n	800d008 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800d05e:	9c05      	ldr	r4, [sp, #20]
 800d060:	e7e4      	b.n	800d02c <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800d062:	68ee      	ldr	r6, [r5, #12]
 800d064:	2e00      	cmp	r6, #0
 800d066:	d1e1      	bne.n	800d02c <osThreadNew+0x4c>
 800d068:	692d      	ldr	r5, [r5, #16]
 800d06a:	2d00      	cmp	r5, #0
 800d06c:	d1de      	bne.n	800d02c <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d06e:	fa1f f28c 	uxth.w	r2, ip
 800d072:	463d      	mov	r5, r7
 800d074:	e7df      	b.n	800d036 <osThreadNew+0x56>
 800d076:	bf00      	nop

0800d078 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800d078:	b510      	push	{r4, lr}
 800d07a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d07e:	b92c      	cbnz	r4, 800d08c <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800d080:	b900      	cbnz	r0, 800d084 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800d082:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800d084:	f001 fffa 	bl	800f07c <vTaskDelay>
    stat = osOK;
 800d088:	4620      	mov	r0, r4
}
 800d08a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d08c:	f06f 0005 	mvn.w	r0, #5
}
 800d090:	bd10      	pop	{r4, pc}
 800d092:	bf00      	nop

0800d094 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800d094:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d096:	b083      	sub	sp, #12
 800d098:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800d09c:	b9fe      	cbnz	r6, 800d0de <osSemaphoreNew+0x4a>
 800d09e:	b1f0      	cbz	r0, 800d0de <osSemaphoreNew+0x4a>
 800d0a0:	4288      	cmp	r0, r1
 800d0a2:	460f      	mov	r7, r1
 800d0a4:	d31b      	bcc.n	800d0de <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800d0a6:	4615      	mov	r5, r2
 800d0a8:	b192      	cbz	r2, 800d0d0 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800d0aa:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800d0ae:	b1d2      	cbz	r2, 800d0e6 <osSemaphoreNew+0x52>
 800d0b0:	2b4f      	cmp	r3, #79	; 0x4f
 800d0b2:	d914      	bls.n	800d0de <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800d0b4:	2801      	cmp	r0, #1
 800d0b6:	d038      	beq.n	800d12a <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800d0b8:	f000 fd8a 	bl	800dbd0 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800d0bc:	4604      	mov	r4, r0
 800d0be:	b170      	cbz	r0, 800d0de <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800d0c0:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800d0c2:	4620      	mov	r0, r4
 800d0c4:	4629      	mov	r1, r5
 800d0c6:	f001 fc35 	bl	800e934 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800d0ca:	4620      	mov	r0, r4
 800d0cc:	b003      	add	sp, #12
 800d0ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800d0d0:	2801      	cmp	r0, #1
 800d0d2:	d012      	beq.n	800d0fa <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d0d4:	f000 fddc 	bl	800dc90 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d0d8:	4604      	mov	r4, r0
 800d0da:	2800      	cmp	r0, #0
 800d0dc:	d1f1      	bne.n	800d0c2 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800d0de:	2400      	movs	r4, #0
}
 800d0e0:	4620      	mov	r0, r4
 800d0e2:	b003      	add	sp, #12
 800d0e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800d0e6:	2b00      	cmp	r3, #0
 800d0e8:	d1f9      	bne.n	800d0de <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800d0ea:	2801      	cmp	r0, #1
 800d0ec:	d005      	beq.n	800d0fa <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d0ee:	f000 fdcf 	bl	800dc90 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d0f2:	4604      	mov	r4, r0
 800d0f4:	2800      	cmp	r0, #0
 800d0f6:	d1e3      	bne.n	800d0c0 <osSemaphoreNew+0x2c>
 800d0f8:	e7f1      	b.n	800d0de <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800d0fa:	2203      	movs	r2, #3
 800d0fc:	2100      	movs	r1, #0
 800d0fe:	2001      	movs	r0, #1
 800d100:	f000 fd24 	bl	800db4c <xQueueGenericCreate>
 800d104:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800d106:	2c00      	cmp	r4, #0
 800d108:	d0e9      	beq.n	800d0de <osSemaphoreNew+0x4a>
 800d10a:	b917      	cbnz	r7, 800d112 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800d10c:	2d00      	cmp	r5, #0
 800d10e:	d1d7      	bne.n	800d0c0 <osSemaphoreNew+0x2c>
 800d110:	e7d7      	b.n	800d0c2 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d112:	2300      	movs	r3, #0
 800d114:	461a      	mov	r2, r3
 800d116:	4619      	mov	r1, r3
 800d118:	4620      	mov	r0, r4
 800d11a:	f000 fdff 	bl	800dd1c <xQueueGenericSend>
 800d11e:	2801      	cmp	r0, #1
 800d120:	d0f4      	beq.n	800d10c <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800d122:	4620      	mov	r0, r4
 800d124:	f001 fbc0 	bl	800e8a8 <vQueueDelete>
 800d128:	e7d9      	b.n	800d0de <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800d12a:	4613      	mov	r3, r2
 800d12c:	2203      	movs	r2, #3
 800d12e:	9200      	str	r2, [sp, #0]
 800d130:	4631      	mov	r1, r6
 800d132:	4632      	mov	r2, r6
 800d134:	f000 fc9c 	bl	800da70 <xQueueGenericCreateStatic>
 800d138:	4604      	mov	r4, r0
 800d13a:	e7e4      	b.n	800d106 <osSemaphoreNew+0x72>

0800d13c <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d13c:	b370      	cbz	r0, 800d19c <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800d13e:	b510      	push	{r4, lr}
 800d140:	460c      	mov	r4, r1
 800d142:	b082      	sub	sp, #8
 800d144:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d148:	b1c3      	cbz	r3, 800d17c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800d14a:	bb21      	cbnz	r1, 800d196 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d14c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d14e:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d150:	f001 fb28 	bl	800e7a4 <xQueueReceiveFromISR>
 800d154:	2801      	cmp	r0, #1
 800d156:	d11a      	bne.n	800d18e <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d158:	9b01      	ldr	r3, [sp, #4]
 800d15a:	b913      	cbnz	r3, 800d162 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800d15c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d15e:	b002      	add	sp, #8
 800d160:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800d162:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d166:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d16a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d16e:	f3bf 8f4f 	dsb	sy
 800d172:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d176:	4620      	mov	r0, r4
}
 800d178:	b002      	add	sp, #8
 800d17a:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800d17c:	f001 f988 	bl	800e490 <xQueueSemaphoreTake>
 800d180:	2801      	cmp	r0, #1
 800d182:	d0eb      	beq.n	800d15c <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800d184:	b11c      	cbz	r4, 800d18e <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800d186:	f06f 0001 	mvn.w	r0, #1
}
 800d18a:	b002      	add	sp, #8
 800d18c:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800d18e:	f06f 0002 	mvn.w	r0, #2
}
 800d192:	b002      	add	sp, #8
 800d194:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800d196:	f06f 0003 	mvn.w	r0, #3
 800d19a:	e7e0      	b.n	800d15e <osSemaphoreAcquire+0x22>
 800d19c:	f06f 0003 	mvn.w	r0, #3
}
 800d1a0:	4770      	bx	lr
 800d1a2:	bf00      	nop

0800d1a4 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d1a4:	b330      	cbz	r0, 800d1f4 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800d1a6:	b510      	push	{r4, lr}
 800d1a8:	b082      	sub	sp, #8
 800d1aa:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d1ae:	b1ab      	cbz	r3, 800d1dc <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800d1b0:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d1b2:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800d1b4:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d1b6:	f000 ff95 	bl	800e0e4 <xQueueGiveFromISR>
 800d1ba:	2801      	cmp	r0, #1
 800d1bc:	d117      	bne.n	800d1ee <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800d1be:	9b01      	ldr	r3, [sp, #4]
 800d1c0:	b193      	cbz	r3, 800d1e8 <osSemaphoreRelease+0x44>
 800d1c2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d1c6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d1ca:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d1ce:	f3bf 8f4f 	dsb	sy
 800d1d2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d1d6:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800d1d8:	b002      	add	sp, #8
 800d1da:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d1dc:	461a      	mov	r2, r3
 800d1de:	4619      	mov	r1, r3
 800d1e0:	f000 fd9c 	bl	800dd1c <xQueueGenericSend>
 800d1e4:	2801      	cmp	r0, #1
 800d1e6:	d102      	bne.n	800d1ee <osSemaphoreRelease+0x4a>
  stat = osOK;
 800d1e8:	2000      	movs	r0, #0
}
 800d1ea:	b002      	add	sp, #8
 800d1ec:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800d1ee:	f06f 0002 	mvn.w	r0, #2
 800d1f2:	e7fa      	b.n	800d1ea <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800d1f4:	f06f 0003 	mvn.w	r0, #3
}
 800d1f8:	4770      	bx	lr
 800d1fa:	bf00      	nop

0800d1fc <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800d1fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d1fe:	b085      	sub	sp, #20
 800d200:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800d204:	b987      	cbnz	r7, 800d228 <osMessageQueueNew+0x2c>
 800d206:	4605      	mov	r5, r0
 800d208:	b170      	cbz	r0, 800d228 <osMessageQueueNew+0x2c>
 800d20a:	b169      	cbz	r1, 800d228 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800d20c:	4614      	mov	r4, r2
 800d20e:	b1ea      	cbz	r2, 800d24c <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d210:	6893      	ldr	r3, [r2, #8]
 800d212:	b163      	cbz	r3, 800d22e <osMessageQueueNew+0x32>
 800d214:	68d2      	ldr	r2, [r2, #12]
 800d216:	2a4f      	cmp	r2, #79	; 0x4f
 800d218:	d906      	bls.n	800d228 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d21a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d21c:	b122      	cbz	r2, 800d228 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d21e:	6966      	ldr	r6, [r4, #20]
 800d220:	fb01 f505 	mul.w	r5, r1, r5
 800d224:	42ae      	cmp	r6, r5
 800d226:	d21c      	bcs.n	800d262 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800d228:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800d22a:	b005      	add	sp, #20
 800d22c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800d22e:	68d3      	ldr	r3, [r2, #12]
 800d230:	2b00      	cmp	r3, #0
 800d232:	d1f9      	bne.n	800d228 <osMessageQueueNew+0x2c>
 800d234:	6913      	ldr	r3, [r2, #16]
 800d236:	2b00      	cmp	r3, #0
 800d238:	d1f6      	bne.n	800d228 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800d23a:	6952      	ldr	r2, [r2, #20]
 800d23c:	2a00      	cmp	r2, #0
 800d23e:	d1f3      	bne.n	800d228 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d240:	f000 fc84 	bl	800db4c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d244:	2800      	cmp	r0, #0
 800d246:	d0ef      	beq.n	800d228 <osMessageQueueNew+0x2c>
        name = attr->name;
 800d248:	6824      	ldr	r4, [r4, #0]
 800d24a:	e003      	b.n	800d254 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d24c:	f000 fc7e 	bl	800db4c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d250:	2800      	cmp	r0, #0
 800d252:	d0e9      	beq.n	800d228 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800d254:	4621      	mov	r1, r4
 800d256:	9003      	str	r0, [sp, #12]
 800d258:	f001 fb6c 	bl	800e934 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800d25c:	9803      	ldr	r0, [sp, #12]
}
 800d25e:	b005      	add	sp, #20
 800d260:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800d262:	9700      	str	r7, [sp, #0]
 800d264:	f000 fc04 	bl	800da70 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800d268:	2800      	cmp	r0, #0
 800d26a:	d1ed      	bne.n	800d248 <osMessageQueueNew+0x4c>
 800d26c:	e7dc      	b.n	800d228 <osMessageQueueNew+0x2c>
 800d26e:	bf00      	nop

0800d270 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800d270:	b570      	push	{r4, r5, r6, lr}
 800d272:	461c      	mov	r4, r3
 800d274:	b082      	sub	sp, #8
 800d276:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d27a:	b1be      	cbz	r6, 800d2ac <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d27c:	b350      	cbz	r0, 800d2d4 <osMessageQueuePut+0x64>
 800d27e:	b349      	cbz	r1, 800d2d4 <osMessageQueuePut+0x64>
 800d280:	bb43      	cbnz	r3, 800d2d4 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d282:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d284:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d286:	f000 fec7 	bl	800e018 <xQueueGenericSendFromISR>
 800d28a:	2801      	cmp	r0, #1
 800d28c:	d11e      	bne.n	800d2cc <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d28e:	9b01      	ldr	r3, [sp, #4]
 800d290:	b1cb      	cbz	r3, 800d2c6 <osMessageQueuePut+0x56>
 800d292:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d296:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d29a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d29e:	f3bf 8f4f 	dsb	sy
 800d2a2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d2a6:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800d2a8:	b002      	add	sp, #8
 800d2aa:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d2ac:	b190      	cbz	r0, 800d2d4 <osMessageQueuePut+0x64>
 800d2ae:	b189      	cbz	r1, 800d2d4 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d2b0:	4633      	mov	r3, r6
 800d2b2:	4622      	mov	r2, r4
 800d2b4:	f000 fd32 	bl	800dd1c <xQueueGenericSend>
 800d2b8:	2801      	cmp	r0, #1
 800d2ba:	d004      	beq.n	800d2c6 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800d2bc:	b134      	cbz	r4, 800d2cc <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800d2be:	f06f 0001 	mvn.w	r0, #1
}
 800d2c2:	b002      	add	sp, #8
 800d2c4:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800d2c6:	2000      	movs	r0, #0
}
 800d2c8:	b002      	add	sp, #8
 800d2ca:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800d2cc:	f06f 0002 	mvn.w	r0, #2
}
 800d2d0:	b002      	add	sp, #8
 800d2d2:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800d2d4:	f06f 0003 	mvn.w	r0, #3
 800d2d8:	e7e6      	b.n	800d2a8 <osMessageQueuePut+0x38>
 800d2da:	bf00      	nop

0800d2dc <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800d2dc:	b530      	push	{r4, r5, lr}
 800d2de:	461c      	mov	r4, r3
 800d2e0:	b083      	sub	sp, #12
 800d2e2:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d2e6:	b1bb      	cbz	r3, 800d318 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d2e8:	b348      	cbz	r0, 800d33e <osMessageQueueGet+0x62>
 800d2ea:	b341      	cbz	r1, 800d33e <osMessageQueueGet+0x62>
 800d2ec:	bb3c      	cbnz	r4, 800d33e <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d2ee:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d2f0:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d2f2:	f001 fa57 	bl	800e7a4 <xQueueReceiveFromISR>
 800d2f6:	2801      	cmp	r0, #1
 800d2f8:	d11d      	bne.n	800d336 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d2fa:	9b01      	ldr	r3, [sp, #4]
 800d2fc:	b1c3      	cbz	r3, 800d330 <osMessageQueueGet+0x54>
 800d2fe:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d302:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d306:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d30a:	f3bf 8f4f 	dsb	sy
 800d30e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d312:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800d314:	b003      	add	sp, #12
 800d316:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d318:	b188      	cbz	r0, 800d33e <osMessageQueueGet+0x62>
 800d31a:	b181      	cbz	r1, 800d33e <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d31c:	4622      	mov	r2, r4
 800d31e:	f000 ff39 	bl	800e194 <xQueueReceive>
 800d322:	2801      	cmp	r0, #1
 800d324:	d004      	beq.n	800d330 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800d326:	b134      	cbz	r4, 800d336 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800d328:	f06f 0001 	mvn.w	r0, #1
}
 800d32c:	b003      	add	sp, #12
 800d32e:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800d330:	2000      	movs	r0, #0
}
 800d332:	b003      	add	sp, #12
 800d334:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800d336:	f06f 0002 	mvn.w	r0, #2
}
 800d33a:	b003      	add	sp, #12
 800d33c:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800d33e:	f06f 0003 	mvn.w	r0, #3
 800d342:	e7e7      	b.n	800d314 <osMessageQueueGet+0x38>

0800d344 <osMessageQueueGetCount>:
 800d344:	b130      	cbz	r0, 800d354 <osMessageQueueGetCount+0x10>
 800d346:	f3ef 8305 	mrs	r3, IPSR
 800d34a:	b10b      	cbz	r3, 800d350 <osMessageQueueGetCount+0xc>
 800d34c:	f001 ba9e 	b.w	800e88c <uxQueueMessagesWaitingFromISR>
 800d350:	f001 ba86 	b.w	800e860 <uxQueueMessagesWaiting>
 800d354:	4770      	bx	lr
 800d356:	bf00      	nop

0800d358 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800d358:	4b04      	ldr	r3, [pc, #16]	; (800d36c <vApplicationGetIdleTaskMemory+0x14>)
 800d35a:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800d35c:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d35e:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800d360:	4c03      	ldr	r4, [pc, #12]	; (800d370 <vApplicationGetIdleTaskMemory+0x18>)
 800d362:	600c      	str	r4, [r1, #0]
}
 800d364:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d368:	6013      	str	r3, [r2, #0]
}
 800d36a:	4770      	bx	lr
 800d36c:	20002330 	.word	0x20002330
 800d370:	20002130 	.word	0x20002130

0800d374 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800d374:	4b05      	ldr	r3, [pc, #20]	; (800d38c <vApplicationGetTimerTaskMemory+0x18>)
 800d376:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800d378:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d37a:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800d37e:	4c04      	ldr	r4, [pc, #16]	; (800d390 <vApplicationGetTimerTaskMemory+0x1c>)
 800d380:	600c      	str	r4, [r1, #0]
}
 800d382:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d386:	6013      	str	r3, [r2, #0]
}
 800d388:	4770      	bx	lr
 800d38a:	bf00      	nop
 800d38c:	200027e0 	.word	0x200027e0
 800d390:	200023e0 	.word	0x200023e0

0800d394 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800d394:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d398:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800d39a:	f001 ff41 	bl	800f220 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800d39e:	4a54      	ldr	r2, [pc, #336]	; (800d4f0 <pvPortMalloc+0x15c>)
 800d3a0:	6816      	ldr	r6, [r2, #0]
 800d3a2:	2e00      	cmp	r6, #0
 800d3a4:	d06e      	beq.n	800d484 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800d3a6:	4b53      	ldr	r3, [pc, #332]	; (800d4f4 <pvPortMalloc+0x160>)
 800d3a8:	681f      	ldr	r7, [r3, #0]
 800d3aa:	423d      	tst	r5, r7
 800d3ac:	d12e      	bne.n	800d40c <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800d3ae:	b36d      	cbz	r5, 800d40c <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800d3b0:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800d3b4:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800d3b6:	bf1c      	itt	ne
 800d3b8:	f024 0407 	bicne.w	r4, r4, #7
 800d3bc:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800d3be:	b32c      	cbz	r4, 800d40c <pvPortMalloc+0x78>
 800d3c0:	f8df c144 	ldr.w	ip, [pc, #324]	; 800d508 <pvPortMalloc+0x174>
 800d3c4:	f8dc 5000 	ldr.w	r5, [ip]
 800d3c8:	42a5      	cmp	r5, r4
 800d3ca:	d31f      	bcc.n	800d40c <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800d3cc:	484a      	ldr	r0, [pc, #296]	; (800d4f8 <pvPortMalloc+0x164>)
 800d3ce:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800d3d0:	e003      	b.n	800d3da <pvPortMalloc+0x46>
 800d3d2:	681a      	ldr	r2, [r3, #0]
 800d3d4:	b122      	cbz	r2, 800d3e0 <pvPortMalloc+0x4c>
 800d3d6:	4618      	mov	r0, r3
 800d3d8:	4613      	mov	r3, r2
 800d3da:	6859      	ldr	r1, [r3, #4]
 800d3dc:	42a1      	cmp	r1, r4
 800d3de:	d3f8      	bcc.n	800d3d2 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800d3e0:	42b3      	cmp	r3, r6
 800d3e2:	d013      	beq.n	800d40c <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d3e4:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d3e6:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d3e8:	f858 eb08 	ldr.w	lr, [r8], #8
 800d3ec:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d3f0:	2a10      	cmp	r2, #16
 800d3f2:	d929      	bls.n	800d448 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800d3f4:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800d3f6:	0748      	lsls	r0, r1, #29
 800d3f8:	d00f      	beq.n	800d41a <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800d3fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3fe:	f383 8811 	msr	BASEPRI, r3
 800d402:	f3bf 8f6f 	isb	sy
 800d406:	f3bf 8f4f 	dsb	sy
 800d40a:	e7fe      	b.n	800d40a <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800d40c:	f001 ff10 	bl	800f230 <xTaskResumeAll>
 800d410:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800d414:	4640      	mov	r0, r8
 800d416:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800d41a:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d41c:	4a36      	ldr	r2, [pc, #216]	; (800d4f8 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800d41e:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d420:	4614      	mov	r4, r2
 800d422:	6812      	ldr	r2, [r2, #0]
 800d424:	4291      	cmp	r1, r2
 800d426:	d8fb      	bhi.n	800d420 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d428:	6860      	ldr	r0, [r4, #4]
 800d42a:	eb04 0e00 	add.w	lr, r4, r0
 800d42e:	4571      	cmp	r1, lr
 800d430:	d04b      	beq.n	800d4ca <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d432:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d436:	eb01 000e 	add.w	r0, r1, lr
 800d43a:	4282      	cmp	r2, r0
 800d43c:	d051      	beq.n	800d4e2 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800d43e:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d440:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d442:	bf18      	it	ne
 800d444:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d446:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d448:	4a2c      	ldr	r2, [pc, #176]	; (800d4fc <pvPortMalloc+0x168>)
 800d44a:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d44c:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d44e:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800d450:	bf38      	it	cc
 800d452:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800d454:	4a2a      	ldr	r2, [pc, #168]	; (800d500 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d456:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d45a:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800d45c:	2000      	movs	r0, #0
 800d45e:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800d462:	6813      	ldr	r3, [r2, #0]
 800d464:	3301      	adds	r3, #1
 800d466:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800d468:	f001 fee2 	bl	800f230 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800d46c:	f018 0f07 	tst.w	r8, #7
 800d470:	d0d0      	beq.n	800d414 <pvPortMalloc+0x80>
 800d472:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d476:	f383 8811 	msr	BASEPRI, r3
 800d47a:	f3bf 8f6f 	isb	sy
 800d47e:	f3bf 8f4f 	dsb	sy
 800d482:	e7fe      	b.n	800d482 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800d484:	4b1f      	ldr	r3, [pc, #124]	; (800d504 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800d486:	075e      	lsls	r6, r3, #29
 800d488:	d118      	bne.n	800d4bc <pvPortMalloc+0x128>
 800d48a:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800d48e:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800d490:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d492:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800d496:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d498:	4a18      	ldr	r2, [pc, #96]	; (800d4fc <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d49a:	4817      	ldr	r0, [pc, #92]	; (800d4f8 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d49c:	4c15      	ldr	r4, [pc, #84]	; (800d4f4 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d49e:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800d4a0:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d4a2:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d4a4:	4a18      	ldr	r2, [pc, #96]	; (800d508 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d4a6:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d4aa:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800d4ac:	2200      	movs	r2, #0
 800d4ae:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d4b0:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800d4b2:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800d4b6:	e9c1 6300 	strd	r6, r3, [r1]
}
 800d4ba:	e776      	b.n	800d3aa <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800d4bc:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800d4be:	f021 0107 	bic.w	r1, r1, #7
 800d4c2:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d4c6:	460b      	mov	r3, r1
 800d4c8:	e7e2      	b.n	800d490 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d4ca:	6849      	ldr	r1, [r1, #4]
 800d4cc:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d4d0:	eb04 010e 	add.w	r1, r4, lr
 800d4d4:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d4d6:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d4da:	d001      	beq.n	800d4e0 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d4dc:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800d4de:	e7b2      	b.n	800d446 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d4e0:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d4e2:	42b2      	cmp	r2, r6
 800d4e4:	d0ab      	beq.n	800d43e <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d4e6:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d4e8:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d4ea:	4470      	add	r0, lr
 800d4ec:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d4ee:	e7a6      	b.n	800d43e <pvPortMalloc+0xaa>
 800d4f0:	2000288c 	.word	0x2000288c
 800d4f4:	20012890 	.word	0x20012890
 800d4f8:	200128a4 	.word	0x200128a4
 800d4fc:	20012898 	.word	0x20012898
 800d500:	2001289c 	.word	0x2001289c
 800d504:	20002890 	.word	0x20002890
 800d508:	20012894 	.word	0x20012894

0800d50c <vPortFree>:
	if( pv != NULL )
 800d50c:	b1d0      	cbz	r0, 800d544 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d50e:	4a2c      	ldr	r2, [pc, #176]	; (800d5c0 <vPortFree+0xb4>)
 800d510:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d514:	6812      	ldr	r2, [r2, #0]
 800d516:	4213      	tst	r3, r2
 800d518:	d00b      	beq.n	800d532 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800d51a:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800d51e:	b191      	cbz	r1, 800d546 <vPortFree+0x3a>
 800d520:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d524:	f383 8811 	msr	BASEPRI, r3
 800d528:	f3bf 8f6f 	isb	sy
 800d52c:	f3bf 8f4f 	dsb	sy
 800d530:	e7fe      	b.n	800d530 <vPortFree+0x24>
 800d532:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d536:	f383 8811 	msr	BASEPRI, r3
 800d53a:	f3bf 8f6f 	isb	sy
 800d53e:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d542:	e7fe      	b.n	800d542 <vPortFree+0x36>
 800d544:	4770      	bx	lr
{
 800d546:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d548:	ea23 0302 	bic.w	r3, r3, r2
{
 800d54c:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d54e:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d552:	4c1c      	ldr	r4, [pc, #112]	; (800d5c4 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d554:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800d556:	f001 fe63 	bl	800f220 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d55a:	9801      	ldr	r0, [sp, #4]
 800d55c:	6822      	ldr	r2, [r4, #0]
 800d55e:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d562:	4b19      	ldr	r3, [pc, #100]	; (800d5c8 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d564:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800d566:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d568:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d56a:	461a      	mov	r2, r3
 800d56c:	681b      	ldr	r3, [r3, #0]
 800d56e:	4298      	cmp	r0, r3
 800d570:	d8fb      	bhi.n	800d56a <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d572:	6854      	ldr	r4, [r2, #4]
 800d574:	eb02 0e04 	add.w	lr, r2, r4
 800d578:	4570      	cmp	r0, lr
 800d57a:	d010      	beq.n	800d59e <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d57c:	eb00 0c01 	add.w	ip, r0, r1
 800d580:	4563      	cmp	r3, ip
 800d582:	d014      	beq.n	800d5ae <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800d584:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d586:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d588:	bf18      	it	ne
 800d58a:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800d58c:	4a0f      	ldr	r2, [pc, #60]	; (800d5cc <vPortFree+0xc0>)
 800d58e:	6813      	ldr	r3, [r2, #0]
 800d590:	3301      	adds	r3, #1
 800d592:	6013      	str	r3, [r2, #0]
}
 800d594:	b002      	add	sp, #8
 800d596:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800d59a:	f001 be49 	b.w	800f230 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d59e:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d5a0:	1850      	adds	r0, r2, r1
 800d5a2:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d5a4:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d5a6:	d001      	beq.n	800d5ac <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d5a8:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800d5aa:	e7ef      	b.n	800d58c <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d5ac:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d5ae:	4c08      	ldr	r4, [pc, #32]	; (800d5d0 <vPortFree+0xc4>)
 800d5b0:	6824      	ldr	r4, [r4, #0]
 800d5b2:	42a3      	cmp	r3, r4
 800d5b4:	d0e6      	beq.n	800d584 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d5b6:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d5ba:	4421      	add	r1, r4
 800d5bc:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d5be:	e7e1      	b.n	800d584 <vPortFree+0x78>
 800d5c0:	20012890 	.word	0x20012890
 800d5c4:	20012894 	.word	0x20012894
 800d5c8:	200128a4 	.word	0x200128a4
 800d5cc:	200128a0 	.word	0x200128a0
 800d5d0:	2000288c 	.word	0x2000288c

0800d5d4 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d5d4:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d5d8:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d5dc:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d5de:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d5e2:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d5e6:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800d5e8:	4770      	bx	lr
 800d5ea:	bf00      	nop

0800d5ec <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800d5ec:	2300      	movs	r3, #0
 800d5ee:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800d5f0:	4770      	bx	lr
 800d5f2:	bf00      	nop

0800d5f4 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800d5f4:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800d5f6:	689a      	ldr	r2, [r3, #8]
 800d5f8:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d5fa:	6802      	ldr	r2, [r0, #0]
{
 800d5fc:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d5fe:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800d600:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d602:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d604:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800d606:	6099      	str	r1, [r3, #8]
}
 800d608:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800d60c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d60e:	6002      	str	r2, [r0, #0]
}
 800d610:	4770      	bx	lr
 800d612:	bf00      	nop

0800d614 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800d614:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800d616:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800d618:	1c6b      	adds	r3, r5, #1
 800d61a:	d010      	beq.n	800d63e <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800d61c:	f100 0308 	add.w	r3, r0, #8
 800d620:	461c      	mov	r4, r3
 800d622:	685b      	ldr	r3, [r3, #4]
 800d624:	681a      	ldr	r2, [r3, #0]
 800d626:	42aa      	cmp	r2, r5
 800d628:	d9fa      	bls.n	800d620 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d62a:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d62c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d62e:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800d630:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800d632:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800d634:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800d636:	6108      	str	r0, [r1, #16]
}
 800d638:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800d63a:	6002      	str	r2, [r0, #0]
}
 800d63c:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800d63e:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d640:	6863      	ldr	r3, [r4, #4]
 800d642:	e7f2      	b.n	800d62a <vListInsert+0x16>

0800d644 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800d644:	6903      	ldr	r3, [r0, #16]
{
 800d646:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d648:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800d64c:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d64e:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800d650:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800d652:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800d654:	bf08      	it	eq
 800d656:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800d658:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800d65a:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800d65e:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800d660:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800d662:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800d664:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800d666:	6818      	ldr	r0, [r3, #0]
}
 800d668:	4770      	bx	lr
 800d66a:	bf00      	nop

0800d66c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800d66c:	4808      	ldr	r0, [pc, #32]	; (800d690 <prvPortStartFirstTask+0x24>)
 800d66e:	6800      	ldr	r0, [r0, #0]
 800d670:	6800      	ldr	r0, [r0, #0]
 800d672:	f380 8808 	msr	MSP, r0
 800d676:	f04f 0000 	mov.w	r0, #0
 800d67a:	f380 8814 	msr	CONTROL, r0
 800d67e:	b662      	cpsie	i
 800d680:	b661      	cpsie	f
 800d682:	f3bf 8f4f 	dsb	sy
 800d686:	f3bf 8f6f 	isb	sy
 800d68a:	df00      	svc	0
 800d68c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800d68e:	0000      	.short	0x0000
 800d690:	e000ed08 	.word	0xe000ed08

0800d694 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800d694:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800d6a4 <vPortEnableVFP+0x10>
 800d698:	6801      	ldr	r1, [r0, #0]
 800d69a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800d69e:	6001      	str	r1, [r0, #0]
 800d6a0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800d6a2:	0000      	.short	0x0000
 800d6a4:	e000ed88 	.word	0xe000ed88

0800d6a8 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800d6a8:	4b0e      	ldr	r3, [pc, #56]	; (800d6e4 <prvTaskExitError+0x3c>)
 800d6aa:	681b      	ldr	r3, [r3, #0]
{
 800d6ac:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800d6ae:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800d6b0:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800d6b2:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800d6b4:	d008      	beq.n	800d6c8 <prvTaskExitError+0x20>
 800d6b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6ba:	f383 8811 	msr	BASEPRI, r3
 800d6be:	f3bf 8f6f 	isb	sy
 800d6c2:	f3bf 8f4f 	dsb	sy
 800d6c6:	e7fe      	b.n	800d6c6 <prvTaskExitError+0x1e>
 800d6c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6cc:	f383 8811 	msr	BASEPRI, r3
 800d6d0:	f3bf 8f6f 	isb	sy
 800d6d4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d6d8:	9b01      	ldr	r3, [sp, #4]
 800d6da:	2b00      	cmp	r3, #0
 800d6dc:	d0fc      	beq.n	800d6d8 <prvTaskExitError+0x30>
}
 800d6de:	b002      	add	sp, #8
 800d6e0:	4770      	bx	lr
 800d6e2:	bf00      	nop
 800d6e4:	20000084 	.word	0x20000084

0800d6e8 <pxPortInitialiseStack>:
{
 800d6e8:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d6ea:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d6ee:	4c07      	ldr	r4, [pc, #28]	; (800d70c <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d6f0:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d6f4:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d6f8:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d6fc:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d700:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800d704:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d708:	3844      	subs	r0, #68	; 0x44
 800d70a:	4770      	bx	lr
 800d70c:	0800d6a9 	.word	0x0800d6a9

0800d710 <SVC_Handler>:
	__asm volatile (
 800d710:	4b07      	ldr	r3, [pc, #28]	; (800d730 <pxCurrentTCBConst2>)
 800d712:	6819      	ldr	r1, [r3, #0]
 800d714:	6808      	ldr	r0, [r1, #0]
 800d716:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d71a:	f380 8809 	msr	PSP, r0
 800d71e:	f3bf 8f6f 	isb	sy
 800d722:	f04f 0000 	mov.w	r0, #0
 800d726:	f380 8811 	msr	BASEPRI, r0
 800d72a:	4770      	bx	lr
 800d72c:	f3af 8000 	nop.w

0800d730 <pxCurrentTCBConst2>:
 800d730:	200128f8 	.word	0x200128f8

0800d734 <vPortEnterCritical>:
 800d734:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d738:	f383 8811 	msr	BASEPRI, r3
 800d73c:	f3bf 8f6f 	isb	sy
 800d740:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800d744:	4a0b      	ldr	r2, [pc, #44]	; (800d774 <vPortEnterCritical+0x40>)
 800d746:	6813      	ldr	r3, [r2, #0]
 800d748:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800d74a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800d74c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800d74e:	d000      	beq.n	800d752 <vPortEnterCritical+0x1e>
}
 800d750:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800d752:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d756:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800d75a:	b2db      	uxtb	r3, r3
 800d75c:	2b00      	cmp	r3, #0
 800d75e:	d0f7      	beq.n	800d750 <vPortEnterCritical+0x1c>
 800d760:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d764:	f383 8811 	msr	BASEPRI, r3
 800d768:	f3bf 8f6f 	isb	sy
 800d76c:	f3bf 8f4f 	dsb	sy
 800d770:	e7fe      	b.n	800d770 <vPortEnterCritical+0x3c>
 800d772:	bf00      	nop
 800d774:	20000084 	.word	0x20000084

0800d778 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800d778:	4a08      	ldr	r2, [pc, #32]	; (800d79c <vPortExitCritical+0x24>)
 800d77a:	6813      	ldr	r3, [r2, #0]
 800d77c:	b943      	cbnz	r3, 800d790 <vPortExitCritical+0x18>
 800d77e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d782:	f383 8811 	msr	BASEPRI, r3
 800d786:	f3bf 8f6f 	isb	sy
 800d78a:	f3bf 8f4f 	dsb	sy
 800d78e:	e7fe      	b.n	800d78e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800d790:	3b01      	subs	r3, #1
 800d792:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800d794:	b90b      	cbnz	r3, 800d79a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800d796:	f383 8811 	msr	BASEPRI, r3
}
 800d79a:	4770      	bx	lr
 800d79c:	20000084 	.word	0x20000084

0800d7a0 <PendSV_Handler>:
	__asm volatile
 800d7a0:	f3ef 8009 	mrs	r0, PSP
 800d7a4:	f3bf 8f6f 	isb	sy
 800d7a8:	4b15      	ldr	r3, [pc, #84]	; (800d800 <pxCurrentTCBConst>)
 800d7aa:	681a      	ldr	r2, [r3, #0]
 800d7ac:	f01e 0f10 	tst.w	lr, #16
 800d7b0:	bf08      	it	eq
 800d7b2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800d7b6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d7ba:	6010      	str	r0, [r2, #0]
 800d7bc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800d7c0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800d7c4:	f380 8811 	msr	BASEPRI, r0
 800d7c8:	f3bf 8f4f 	dsb	sy
 800d7cc:	f3bf 8f6f 	isb	sy
 800d7d0:	f001 fd54 	bl	800f27c <vTaskSwitchContext>
 800d7d4:	f04f 0000 	mov.w	r0, #0
 800d7d8:	f380 8811 	msr	BASEPRI, r0
 800d7dc:	bc09      	pop	{r0, r3}
 800d7de:	6819      	ldr	r1, [r3, #0]
 800d7e0:	6808      	ldr	r0, [r1, #0]
 800d7e2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d7e6:	f01e 0f10 	tst.w	lr, #16
 800d7ea:	bf08      	it	eq
 800d7ec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800d7f0:	f380 8809 	msr	PSP, r0
 800d7f4:	f3bf 8f6f 	isb	sy
 800d7f8:	4770      	bx	lr
 800d7fa:	bf00      	nop
 800d7fc:	f3af 8000 	nop.w

0800d800 <pxCurrentTCBConst>:
 800d800:	200128f8 	.word	0x200128f8

0800d804 <xPortSysTickHandler>:
{
 800d804:	b508      	push	{r3, lr}
	__asm volatile
 800d806:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d80a:	f383 8811 	msr	BASEPRI, r3
 800d80e:	f3bf 8f6f 	isb	sy
 800d812:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800d816:	f001 fd21 	bl	800f25c <xTaskIncrementTick>
 800d81a:	b128      	cbz	r0, 800d828 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800d81c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d820:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d824:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800d828:	2300      	movs	r3, #0
 800d82a:	f383 8811 	msr	BASEPRI, r3
}
 800d82e:	bd08      	pop	{r3, pc}

0800d830 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d830:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800d834:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d836:	4906      	ldr	r1, [pc, #24]	; (800d850 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d838:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d83a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d83c:	680b      	ldr	r3, [r1, #0]
 800d83e:	4905      	ldr	r1, [pc, #20]	; (800d854 <vPortSetupTimerInterrupt+0x24>)
 800d840:	fba1 1303 	umull	r1, r3, r1, r3
 800d844:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d846:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d848:	3b01      	subs	r3, #1
 800d84a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d84c:	6110      	str	r0, [r2, #16]
}
 800d84e:	4770      	bx	lr
 800d850:	20000078 	.word	0x20000078
 800d854:	10624dd3 	.word	0x10624dd3

0800d858 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d858:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d85c:	4a49      	ldr	r2, [pc, #292]	; (800d984 <xPortStartScheduler+0x12c>)
 800d85e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800d862:	4291      	cmp	r1, r2
 800d864:	d043      	beq.n	800d8ee <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d866:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800d86a:	4b47      	ldr	r3, [pc, #284]	; (800d988 <xPortStartScheduler+0x130>)
 800d86c:	429a      	cmp	r2, r3
 800d86e:	d035      	beq.n	800d8dc <xPortStartScheduler+0x84>
{
 800d870:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d872:	4b46      	ldr	r3, [pc, #280]	; (800d98c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d874:	4846      	ldr	r0, [pc, #280]	; (800d990 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d876:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d878:	4c46      	ldr	r4, [pc, #280]	; (800d994 <xPortStartScheduler+0x13c>)
{
 800d87a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d87c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d87e:	b2d2      	uxtb	r2, r2
 800d880:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d882:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d884:	781b      	ldrb	r3, [r3, #0]
 800d886:	b2db      	uxtb	r3, r3
 800d888:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d88c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d890:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d894:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d898:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d89a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d89c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d89e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d8a0:	bf48      	it	mi
 800d8a2:	2206      	movmi	r2, #6
 800d8a4:	d511      	bpl.n	800d8ca <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800d8a6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800d8aa:	005b      	lsls	r3, r3, #1
 800d8ac:	b2db      	uxtb	r3, r3
 800d8ae:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d8b2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d8b6:	0609      	lsls	r1, r1, #24
 800d8b8:	4610      	mov	r0, r2
 800d8ba:	f102 32ff 	add.w	r2, r2, #4294967295
 800d8be:	d4f2      	bmi.n	800d8a6 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800d8c0:	2803      	cmp	r0, #3
 800d8c2:	6020      	str	r0, [r4, #0]
 800d8c4:	f88d 3007 	strb.w	r3, [sp, #7]
 800d8c8:	d01a      	beq.n	800d900 <xPortStartScheduler+0xa8>
	__asm volatile
 800d8ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8ce:	f383 8811 	msr	BASEPRI, r3
 800d8d2:	f3bf 8f6f 	isb	sy
 800d8d6:	f3bf 8f4f 	dsb	sy
 800d8da:	e7fe      	b.n	800d8da <xPortStartScheduler+0x82>
 800d8dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8e0:	f383 8811 	msr	BASEPRI, r3
 800d8e4:	f3bf 8f6f 	isb	sy
 800d8e8:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d8ec:	e7fe      	b.n	800d8ec <xPortStartScheduler+0x94>
 800d8ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8f2:	f383 8811 	msr	BASEPRI, r3
 800d8f6:	f3bf 8f6f 	isb	sy
 800d8fa:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d8fe:	e7fe      	b.n	800d8fe <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d900:	9b02      	ldr	r3, [sp, #8]
 800d902:	4a22      	ldr	r2, [pc, #136]	; (800d98c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d904:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d908:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d90c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d90e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d910:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d912:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d916:	4c20      	ldr	r4, [pc, #128]	; (800d998 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d918:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800d91c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800d920:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800d924:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800d928:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d92c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800d92e:	f7ff ff7f 	bl	800d830 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800d932:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800d934:	f7ff feae 	bl	800d694 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800d938:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800d93c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800d940:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800d944:	f7ff fe92 	bl	800d66c <prvPortStartFirstTask>
	vTaskSwitchContext();
 800d948:	f001 fc98 	bl	800f27c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800d94c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800d94e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800d950:	3301      	adds	r3, #1
 800d952:	d008      	beq.n	800d966 <xPortStartScheduler+0x10e>
 800d954:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d958:	f383 8811 	msr	BASEPRI, r3
 800d95c:	f3bf 8f6f 	isb	sy
 800d960:	f3bf 8f4f 	dsb	sy
 800d964:	e7fe      	b.n	800d964 <xPortStartScheduler+0x10c>
 800d966:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d96a:	f383 8811 	msr	BASEPRI, r3
 800d96e:	f3bf 8f6f 	isb	sy
 800d972:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d976:	9b03      	ldr	r3, [sp, #12]
 800d978:	2b00      	cmp	r3, #0
 800d97a:	d0fc      	beq.n	800d976 <xPortStartScheduler+0x11e>
}
 800d97c:	2000      	movs	r0, #0
 800d97e:	b004      	add	sp, #16
 800d980:	bd70      	pop	{r4, r5, r6, pc}
 800d982:	bf00      	nop
 800d984:	410fc271 	.word	0x410fc271
 800d988:	410fc270 	.word	0x410fc270
 800d98c:	e000e400 	.word	0xe000e400
 800d990:	200128ac 	.word	0x200128ac
 800d994:	200128b0 	.word	0x200128b0
 800d998:	20000084 	.word	0x20000084

0800d99c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800d99c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800d9a0:	2b0f      	cmp	r3, #15
 800d9a2:	d90e      	bls.n	800d9c2 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d9a4:	4911      	ldr	r1, [pc, #68]	; (800d9ec <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d9a6:	4a12      	ldr	r2, [pc, #72]	; (800d9f0 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d9a8:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d9aa:	7812      	ldrb	r2, [r2, #0]
 800d9ac:	429a      	cmp	r2, r3
 800d9ae:	d908      	bls.n	800d9c2 <vPortValidateInterruptPriority+0x26>
 800d9b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9b4:	f383 8811 	msr	BASEPRI, r3
 800d9b8:	f3bf 8f6f 	isb	sy
 800d9bc:	f3bf 8f4f 	dsb	sy
 800d9c0:	e7fe      	b.n	800d9c0 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d9c2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d9c6:	4a0b      	ldr	r2, [pc, #44]	; (800d9f4 <vPortValidateInterruptPriority+0x58>)
 800d9c8:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800d9cc:	6812      	ldr	r2, [r2, #0]
 800d9ce:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d9d2:	4293      	cmp	r3, r2
 800d9d4:	d908      	bls.n	800d9e8 <vPortValidateInterruptPriority+0x4c>
 800d9d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9da:	f383 8811 	msr	BASEPRI, r3
 800d9de:	f3bf 8f6f 	isb	sy
 800d9e2:	f3bf 8f4f 	dsb	sy
 800d9e6:	e7fe      	b.n	800d9e6 <vPortValidateInterruptPriority+0x4a>
	}
 800d9e8:	4770      	bx	lr
 800d9ea:	bf00      	nop
 800d9ec:	e000e3f0 	.word	0xe000e3f0
 800d9f0:	200128ac 	.word	0x200128ac
 800d9f4:	200128b0 	.word	0x200128b0

0800d9f8 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800d9f8:	b570      	push	{r4, r5, r6, lr}
 800d9fa:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d9fc:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d9fe:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800da00:	b920      	cbnz	r0, 800da0c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800da02:	6825      	ldr	r5, [r4, #0]
 800da04:	b34d      	cbz	r5, 800da5a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800da06:	3601      	adds	r6, #1
 800da08:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800da0a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800da0c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800da0e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800da10:	b97d      	cbnz	r5, 800da32 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800da12:	6860      	ldr	r0, [r4, #4]
 800da14:	f01c fee9 	bl	802a7ea <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800da18:	6863      	ldr	r3, [r4, #4]
 800da1a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800da1c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800da1e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800da20:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800da22:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800da24:	bf24      	itt	cs
 800da26:	6823      	ldrcs	r3, [r4, #0]
 800da28:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800da2a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800da2c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800da2e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800da30:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800da32:	68e0      	ldr	r0, [r4, #12]
 800da34:	f01c fed9 	bl	802a7ea <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800da38:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800da3a:	68e3      	ldr	r3, [r4, #12]
 800da3c:	4251      	negs	r1, r2
 800da3e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800da40:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800da42:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800da44:	4293      	cmp	r3, r2
 800da46:	d202      	bcs.n	800da4e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800da48:	68a3      	ldr	r3, [r4, #8]
 800da4a:	440b      	add	r3, r1
 800da4c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800da4e:	2d02      	cmp	r5, #2
 800da50:	d008      	beq.n	800da64 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800da52:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800da54:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800da56:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800da58:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800da5a:	68a0      	ldr	r0, [r4, #8]
 800da5c:	f001 fde0 	bl	800f620 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800da60:	60a5      	str	r5, [r4, #8]
 800da62:	e7d0      	b.n	800da06 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800da64:	2e01      	cmp	r6, #1
 800da66:	bf38      	it	cc
 800da68:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800da6a:	2000      	movs	r0, #0
 800da6c:	e7cc      	b.n	800da08 <prvCopyDataToQueue+0x10>
 800da6e:	bf00      	nop

0800da70 <xQueueGenericCreateStatic>:
	{
 800da70:	b530      	push	{r4, r5, lr}
 800da72:	b083      	sub	sp, #12
 800da74:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800da78:	b940      	cbnz	r0, 800da8c <xQueueGenericCreateStatic+0x1c>
 800da7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da7e:	f383 8811 	msr	BASEPRI, r3
 800da82:	f3bf 8f6f 	isb	sy
 800da86:	f3bf 8f4f 	dsb	sy
 800da8a:	e7fe      	b.n	800da8a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800da8c:	461d      	mov	r5, r3
 800da8e:	b17b      	cbz	r3, 800dab0 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800da90:	b302      	cbz	r2, 800dad4 <xQueueGenericCreateStatic+0x64>
 800da92:	b1b1      	cbz	r1, 800dac2 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800da94:	2350      	movs	r3, #80	; 0x50
 800da96:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800da98:	9b01      	ldr	r3, [sp, #4]
 800da9a:	2b50      	cmp	r3, #80	; 0x50
 800da9c:	d023      	beq.n	800dae6 <xQueueGenericCreateStatic+0x76>
 800da9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800daa2:	f383 8811 	msr	BASEPRI, r3
 800daa6:	f3bf 8f6f 	isb	sy
 800daaa:	f3bf 8f4f 	dsb	sy
 800daae:	e7fe      	b.n	800daae <xQueueGenericCreateStatic+0x3e>
 800dab0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dab4:	f383 8811 	msr	BASEPRI, r3
 800dab8:	f3bf 8f6f 	isb	sy
 800dabc:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800dac0:	e7fe      	b.n	800dac0 <xQueueGenericCreateStatic+0x50>
 800dac2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dac6:	f383 8811 	msr	BASEPRI, r3
 800daca:	f3bf 8f6f 	isb	sy
 800dace:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800dad2:	e7fe      	b.n	800dad2 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800dad4:	bb89      	cbnz	r1, 800db3a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800dad6:	2250      	movs	r2, #80	; 0x50
 800dad8:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800dada:	9a01      	ldr	r2, [sp, #4]
 800dadc:	2a50      	cmp	r2, #80	; 0x50
 800dade:	d1de      	bne.n	800da9e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800dae0:	9a01      	ldr	r2, [sp, #4]
 800dae2:	462a      	mov	r2, r5
 800dae4:	e000      	b.n	800dae8 <xQueueGenericCreateStatic+0x78>
 800dae6:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800dae8:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800daea:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800daec:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800daf0:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800daf4:	f7ff fe1e 	bl	800d734 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800daf8:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800dafc:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800dafe:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db00:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db04:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db06:	4401      	add	r1, r0
 800db08:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800db0a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db0c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800db0e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800db10:	21ff      	movs	r1, #255	; 0xff
 800db12:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db16:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800db18:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800db1c:	f105 0010 	add.w	r0, r5, #16
 800db20:	f7ff fd58 	bl	800d5d4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800db24:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800db28:	f7ff fd54 	bl	800d5d4 <vListInitialise>
	taskEXIT_CRITICAL();
 800db2c:	f7ff fe24 	bl	800d778 <vPortExitCritical>
	}
 800db30:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800db32:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800db36:	b003      	add	sp, #12
 800db38:	bd30      	pop	{r4, r5, pc}
 800db3a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db3e:	f383 8811 	msr	BASEPRI, r3
 800db42:	f3bf 8f6f 	isb	sy
 800db46:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800db4a:	e7fe      	b.n	800db4a <xQueueGenericCreateStatic+0xda>

0800db4c <xQueueGenericCreate>:
	{
 800db4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800db4e:	b940      	cbnz	r0, 800db62 <xQueueGenericCreate+0x16>
 800db50:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db54:	f383 8811 	msr	BASEPRI, r3
 800db58:	f3bf 8f6f 	isb	sy
 800db5c:	f3bf 8f4f 	dsb	sy
 800db60:	e7fe      	b.n	800db60 <xQueueGenericCreate+0x14>
 800db62:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800db64:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800db68:	3050      	adds	r0, #80	; 0x50
 800db6a:	460e      	mov	r6, r1
 800db6c:	4617      	mov	r7, r2
 800db6e:	f7ff fc11 	bl	800d394 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800db72:	4604      	mov	r4, r0
 800db74:	b340      	cbz	r0, 800dbc8 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800db76:	2300      	movs	r3, #0
 800db78:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800db7c:	b336      	cbz	r6, 800dbcc <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db7e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800db82:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800db84:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800db88:	f7ff fdd4 	bl	800d734 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db8c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800db90:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800db92:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db94:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db98:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db9a:	440a      	add	r2, r1
 800db9c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800db9e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dba0:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800dba2:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800dba4:	22ff      	movs	r2, #255	; 0xff
 800dba6:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dbaa:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800dbac:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800dbb0:	f104 0010 	add.w	r0, r4, #16
 800dbb4:	f7ff fd0e 	bl	800d5d4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800dbb8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dbbc:	f7ff fd0a 	bl	800d5d4 <vListInitialise>
	taskEXIT_CRITICAL();
 800dbc0:	f7ff fdda 	bl	800d778 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800dbc4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800dbc8:	4620      	mov	r0, r4
 800dbca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dbcc:	4603      	mov	r3, r0
 800dbce:	e7d8      	b.n	800db82 <xQueueGenericCreate+0x36>

0800dbd0 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800dbd0:	b940      	cbnz	r0, 800dbe4 <xQueueCreateCountingSemaphoreStatic+0x14>
 800dbd2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbd6:	f383 8811 	msr	BASEPRI, r3
 800dbda:	f3bf 8f6f 	isb	sy
 800dbde:	f3bf 8f4f 	dsb	sy
 800dbe2:	e7fe      	b.n	800dbe2 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800dbe4:	4288      	cmp	r0, r1
 800dbe6:	d208      	bcs.n	800dbfa <xQueueCreateCountingSemaphoreStatic+0x2a>
 800dbe8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbec:	f383 8811 	msr	BASEPRI, r3
 800dbf0:	f3bf 8f6f 	isb	sy
 800dbf4:	f3bf 8f4f 	dsb	sy
 800dbf8:	e7fe      	b.n	800dbf8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800dbfa:	b530      	push	{r4, r5, lr}
 800dbfc:	4615      	mov	r5, r2
 800dbfe:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800dc00:	2a00      	cmp	r2, #0
 800dc02:	d03c      	beq.n	800dc7e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800dc04:	2350      	movs	r3, #80	; 0x50
 800dc06:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800dc08:	9b03      	ldr	r3, [sp, #12]
 800dc0a:	2b50      	cmp	r3, #80	; 0x50
 800dc0c:	d008      	beq.n	800dc20 <xQueueCreateCountingSemaphoreStatic+0x50>
 800dc0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc12:	f383 8811 	msr	BASEPRI, r3
 800dc16:	f3bf 8f6f 	isb	sy
 800dc1a:	f3bf 8f4f 	dsb	sy
 800dc1e:	e7fe      	b.n	800dc1e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800dc20:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800dc22:	2301      	movs	r3, #1
 800dc24:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800dc28:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800dc2a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800dc2e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800dc30:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800dc32:	f7ff fd7f 	bl	800d734 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dc36:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800dc3a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800dc3c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dc3e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dc42:	1ac3      	subs	r3, r0, r3
 800dc44:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dc46:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800dc48:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800dc4c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dc50:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800dc52:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800dc54:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dc58:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800dc5a:	f105 0010 	add.w	r0, r5, #16
 800dc5e:	f7ff fcb9 	bl	800d5d4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800dc62:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800dc66:	f7ff fcb5 	bl	800d5d4 <vListInitialise>
	taskEXIT_CRITICAL();
 800dc6a:	f7ff fd85 	bl	800d778 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800dc6e:	9901      	ldr	r1, [sp, #4]
 800dc70:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800dc72:	2302      	movs	r3, #2
	}
 800dc74:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800dc76:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800dc7a:	b005      	add	sp, #20
 800dc7c:	bd30      	pop	{r4, r5, pc}
 800dc7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc82:	f383 8811 	msr	BASEPRI, r3
 800dc86:	f3bf 8f6f 	isb	sy
 800dc8a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800dc8e:	e7fe      	b.n	800dc8e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800dc90 <xQueueCreateCountingSemaphore>:
	{
 800dc90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800dc92:	b940      	cbnz	r0, 800dca6 <xQueueCreateCountingSemaphore+0x16>
 800dc94:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc98:	f383 8811 	msr	BASEPRI, r3
 800dc9c:	f3bf 8f6f 	isb	sy
 800dca0:	f3bf 8f4f 	dsb	sy
 800dca4:	e7fe      	b.n	800dca4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800dca6:	4288      	cmp	r0, r1
 800dca8:	460e      	mov	r6, r1
 800dcaa:	4604      	mov	r4, r0
 800dcac:	d208      	bcs.n	800dcc0 <xQueueCreateCountingSemaphore+0x30>
 800dcae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dcb2:	f383 8811 	msr	BASEPRI, r3
 800dcb6:	f3bf 8f6f 	isb	sy
 800dcba:	f3bf 8f4f 	dsb	sy
 800dcbe:	e7fe      	b.n	800dcbe <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800dcc0:	2050      	movs	r0, #80	; 0x50
 800dcc2:	f7ff fb67 	bl	800d394 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800dcc6:	4605      	mov	r5, r0
 800dcc8:	b330      	cbz	r0, 800dd18 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800dcca:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800dccc:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800dcd0:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800dcd4:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800dcd6:	f7ff fd2d 	bl	800d734 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dcda:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800dcde:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800dce0:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dce2:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dce6:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dce8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dcea:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dcec:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800dcee:	22ff      	movs	r2, #255	; 0xff
 800dcf0:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dcf4:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800dcf6:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800dcf8:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800dcfc:	f105 0010 	add.w	r0, r5, #16
 800dd00:	f7ff fc68 	bl	800d5d4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800dd04:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800dd08:	f7ff fc64 	bl	800d5d4 <vListInitialise>
	taskEXIT_CRITICAL();
 800dd0c:	f7ff fd34 	bl	800d778 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800dd10:	2302      	movs	r3, #2
 800dd12:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800dd16:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800dd18:	4628      	mov	r0, r5
 800dd1a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800dd1c <xQueueGenericSend>:
{
 800dd1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dd20:	b085      	sub	sp, #20
 800dd22:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800dd24:	2800      	cmp	r0, #0
 800dd26:	f000 80a4 	beq.w	800de72 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dd2a:	4688      	mov	r8, r1
 800dd2c:	461f      	mov	r7, r3
 800dd2e:	4604      	mov	r4, r0
 800dd30:	2900      	cmp	r1, #0
 800dd32:	f000 8091 	beq.w	800de58 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800dd36:	2f02      	cmp	r7, #2
 800dd38:	d10b      	bne.n	800dd52 <xQueueGenericSend+0x36>
 800dd3a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dd3c:	2b01      	cmp	r3, #1
 800dd3e:	d008      	beq.n	800dd52 <xQueueGenericSend+0x36>
 800dd40:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd44:	f383 8811 	msr	BASEPRI, r3
 800dd48:	f3bf 8f6f 	isb	sy
 800dd4c:	f3bf 8f4f 	dsb	sy
 800dd50:	e7fe      	b.n	800dd50 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dd52:	f001 fc0f 	bl	800f574 <xTaskGetSchedulerState>
 800dd56:	4605      	mov	r5, r0
 800dd58:	2800      	cmp	r0, #0
 800dd5a:	f000 8093 	beq.w	800de84 <xQueueGenericSend+0x168>
 800dd5e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd60:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800dd64:	f7ff fce6 	bl	800d734 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800dd68:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dd6a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dd6c:	429a      	cmp	r2, r3
 800dd6e:	f0c0 80ef 	bcc.w	800df50 <xQueueGenericSend+0x234>
 800dd72:	2f02      	cmp	r7, #2
 800dd74:	f000 80ec 	beq.w	800df50 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dd78:	9801      	ldr	r0, [sp, #4]
 800dd7a:	2800      	cmp	r0, #0
 800dd7c:	f000 8101 	beq.w	800df82 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800dd80:	2d00      	cmp	r5, #0
 800dd82:	f000 80e1 	beq.w	800df48 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800dd86:	f7ff fcf7 	bl	800d778 <vPortExitCritical>
		vTaskSuspendAll();
 800dd8a:	f001 fa49 	bl	800f220 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800dd8e:	f7ff fcd1 	bl	800d734 <vPortEnterCritical>
 800dd92:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dd96:	2bff      	cmp	r3, #255	; 0xff
 800dd98:	bf04      	itt	eq
 800dd9a:	2300      	moveq	r3, #0
 800dd9c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800dda0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dda4:	2bff      	cmp	r3, #255	; 0xff
 800dda6:	bf04      	itt	eq
 800dda8:	2300      	moveq	r3, #0
 800ddaa:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800ddae:	f7ff fce3 	bl	800d778 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ddb2:	a901      	add	r1, sp, #4
 800ddb4:	a802      	add	r0, sp, #8
 800ddb6:	f001 fb8f 	bl	800f4d8 <xTaskCheckForTimeOut>
 800ddba:	2800      	cmp	r0, #0
 800ddbc:	f040 80e6 	bne.w	800df8c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800ddc0:	f7ff fcb8 	bl	800d734 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800ddc4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ddc6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ddc8:	429a      	cmp	r2, r3
 800ddca:	d068      	beq.n	800de9e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800ddcc:	f7ff fcd4 	bl	800d778 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ddd0:	f7ff fcb0 	bl	800d734 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ddd4:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800ddd8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ddda:	2d00      	cmp	r5, #0
 800dddc:	dc04      	bgt.n	800dde8 <xQueueGenericSend+0xcc>
 800ddde:	e011      	b.n	800de04 <xQueueGenericSend+0xe8>
			--cTxLock;
 800dde0:	1e6a      	subs	r2, r5, #1
 800dde2:	b2d3      	uxtb	r3, r2
 800dde4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dde6:	b16b      	cbz	r3, 800de04 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dde8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ddea:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ddec:	b153      	cbz	r3, 800de04 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ddee:	f001 fb1f 	bl	800f430 <xTaskRemoveFromEventList>
 800ddf2:	2800      	cmp	r0, #0
 800ddf4:	d0f4      	beq.n	800dde0 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800ddf6:	f001 fbb7 	bl	800f568 <vTaskMissedYield>
			--cTxLock;
 800ddfa:	1e6a      	subs	r2, r5, #1
 800ddfc:	b2d3      	uxtb	r3, r2
 800ddfe:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de00:	2b00      	cmp	r3, #0
 800de02:	d1f1      	bne.n	800dde8 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800de04:	23ff      	movs	r3, #255	; 0xff
 800de06:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800de0a:	f7ff fcb5 	bl	800d778 <vPortExitCritical>
	taskENTER_CRITICAL();
 800de0e:	f7ff fc91 	bl	800d734 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800de12:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800de16:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de18:	2d00      	cmp	r5, #0
 800de1a:	dd14      	ble.n	800de46 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de1c:	f104 0910 	add.w	r9, r4, #16
 800de20:	e003      	b.n	800de2a <xQueueGenericSend+0x10e>
				--cRxLock;
 800de22:	1e6a      	subs	r2, r5, #1
 800de24:	b2d3      	uxtb	r3, r2
 800de26:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de28:	b16b      	cbz	r3, 800de46 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de2a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de2c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de2e:	b153      	cbz	r3, 800de46 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de30:	f001 fafe 	bl	800f430 <xTaskRemoveFromEventList>
 800de34:	2800      	cmp	r0, #0
 800de36:	d0f4      	beq.n	800de22 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800de38:	f001 fb96 	bl	800f568 <vTaskMissedYield>
				--cRxLock;
 800de3c:	1e6a      	subs	r2, r5, #1
 800de3e:	b2d3      	uxtb	r3, r2
 800de40:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de42:	2b00      	cmp	r3, #0
 800de44:	d1f1      	bne.n	800de2a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800de46:	23ff      	movs	r3, #255	; 0xff
 800de48:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800de4c:	f7ff fc94 	bl	800d778 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800de50:	f001 f9ee 	bl	800f230 <xTaskResumeAll>
 800de54:	2501      	movs	r5, #1
 800de56:	e785      	b.n	800dd64 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800de58:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800de5a:	2b00      	cmp	r3, #0
 800de5c:	f43f af6b 	beq.w	800dd36 <xQueueGenericSend+0x1a>
 800de60:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de64:	f383 8811 	msr	BASEPRI, r3
 800de68:	f3bf 8f6f 	isb	sy
 800de6c:	f3bf 8f4f 	dsb	sy
 800de70:	e7fe      	b.n	800de70 <xQueueGenericSend+0x154>
 800de72:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de76:	f383 8811 	msr	BASEPRI, r3
 800de7a:	f3bf 8f6f 	isb	sy
 800de7e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800de82:	e7fe      	b.n	800de82 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800de84:	9b01      	ldr	r3, [sp, #4]
 800de86:	2b00      	cmp	r3, #0
 800de88:	f43f af6a 	beq.w	800dd60 <xQueueGenericSend+0x44>
 800de8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de90:	f383 8811 	msr	BASEPRI, r3
 800de94:	f3bf 8f6f 	isb	sy
 800de98:	f3bf 8f4f 	dsb	sy
 800de9c:	e7fe      	b.n	800de9c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800de9e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800dea2:	f7ff fc69 	bl	800d778 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800dea6:	9901      	ldr	r1, [sp, #4]
 800dea8:	4648      	mov	r0, r9
 800deaa:	f001 fa33 	bl	800f314 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800deae:	f7ff fc41 	bl	800d734 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800deb2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800deb6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800deb8:	2d00      	cmp	r5, #0
 800deba:	dc04      	bgt.n	800dec6 <xQueueGenericSend+0x1aa>
 800debc:	e011      	b.n	800dee2 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800debe:	1e6b      	subs	r3, r5, #1
 800dec0:	b2da      	uxtb	r2, r3
 800dec2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dec4:	b16a      	cbz	r2, 800dee2 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dec6:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dec8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800deca:	b153      	cbz	r3, 800dee2 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800decc:	f001 fab0 	bl	800f430 <xTaskRemoveFromEventList>
 800ded0:	2800      	cmp	r0, #0
 800ded2:	d0f4      	beq.n	800debe <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800ded4:	f001 fb48 	bl	800f568 <vTaskMissedYield>
			--cTxLock;
 800ded8:	1e6b      	subs	r3, r5, #1
 800deda:	b2da      	uxtb	r2, r3
 800dedc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dede:	2a00      	cmp	r2, #0
 800dee0:	d1f1      	bne.n	800dec6 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800dee2:	23ff      	movs	r3, #255	; 0xff
 800dee4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dee8:	f7ff fc46 	bl	800d778 <vPortExitCritical>
	taskENTER_CRITICAL();
 800deec:	f7ff fc22 	bl	800d734 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800def0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800def4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800def6:	2d00      	cmp	r5, #0
 800def8:	dc04      	bgt.n	800df04 <xQueueGenericSend+0x1e8>
 800defa:	e011      	b.n	800df20 <xQueueGenericSend+0x204>
				--cRxLock;
 800defc:	1e6b      	subs	r3, r5, #1
 800defe:	b2da      	uxtb	r2, r3
 800df00:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800df02:	b16a      	cbz	r2, 800df20 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800df04:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df06:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800df08:	b153      	cbz	r3, 800df20 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df0a:	f001 fa91 	bl	800f430 <xTaskRemoveFromEventList>
 800df0e:	2800      	cmp	r0, #0
 800df10:	d0f4      	beq.n	800defc <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800df12:	f001 fb29 	bl	800f568 <vTaskMissedYield>
				--cRxLock;
 800df16:	1e6b      	subs	r3, r5, #1
 800df18:	b2da      	uxtb	r2, r3
 800df1a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800df1c:	2a00      	cmp	r2, #0
 800df1e:	d1f1      	bne.n	800df04 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800df20:	23ff      	movs	r3, #255	; 0xff
 800df22:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800df26:	f7ff fc27 	bl	800d778 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800df2a:	f001 f981 	bl	800f230 <xTaskResumeAll>
 800df2e:	2800      	cmp	r0, #0
 800df30:	d190      	bne.n	800de54 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800df32:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800df36:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800df3a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800df3e:	f3bf 8f4f 	dsb	sy
 800df42:	f3bf 8f6f 	isb	sy
 800df46:	e785      	b.n	800de54 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800df48:	a802      	add	r0, sp, #8
 800df4a:	f001 fab9 	bl	800f4c0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800df4e:	e71a      	b.n	800dd86 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800df50:	463a      	mov	r2, r7
 800df52:	4641      	mov	r1, r8
 800df54:	4620      	mov	r0, r4
 800df56:	f7ff fd4f 	bl	800d9f8 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800df5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800df5c:	2b00      	cmp	r3, #0
 800df5e:	d153      	bne.n	800e008 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800df60:	b148      	cbz	r0, 800df76 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800df62:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800df66:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800df6a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800df6e:	f3bf 8f4f 	dsb	sy
 800df72:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800df76:	f7ff fbff 	bl	800d778 <vPortExitCritical>
				return pdPASS;
 800df7a:	2001      	movs	r0, #1
}
 800df7c:	b005      	add	sp, #20
 800df7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800df82:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800df84:	f7ff fbf8 	bl	800d778 <vPortExitCritical>
					return errQUEUE_FULL;
 800df88:	9800      	ldr	r0, [sp, #0]
 800df8a:	e7f7      	b.n	800df7c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800df8c:	f7ff fbd2 	bl	800d734 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800df90:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800df94:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800df96:	2d00      	cmp	r5, #0
 800df98:	dd10      	ble.n	800dfbc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800df9a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800df9e:	e003      	b.n	800dfa8 <xQueueGenericSend+0x28c>
			--cTxLock;
 800dfa0:	1e6b      	subs	r3, r5, #1
 800dfa2:	b2da      	uxtb	r2, r3
 800dfa4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dfa6:	b14a      	cbz	r2, 800dfbc <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dfa8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dfaa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dfac:	b133      	cbz	r3, 800dfbc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dfae:	f001 fa3f 	bl	800f430 <xTaskRemoveFromEventList>
 800dfb2:	2800      	cmp	r0, #0
 800dfb4:	d0f4      	beq.n	800dfa0 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800dfb6:	f001 fad7 	bl	800f568 <vTaskMissedYield>
 800dfba:	e7f1      	b.n	800dfa0 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800dfbc:	23ff      	movs	r3, #255	; 0xff
 800dfbe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dfc2:	f7ff fbd9 	bl	800d778 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dfc6:	f7ff fbb5 	bl	800d734 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dfca:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dfce:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dfd0:	2d00      	cmp	r5, #0
 800dfd2:	dd10      	ble.n	800dff6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dfd4:	f104 0610 	add.w	r6, r4, #16
 800dfd8:	e003      	b.n	800dfe2 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800dfda:	1e6b      	subs	r3, r5, #1
 800dfdc:	b2da      	uxtb	r2, r3
 800dfde:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dfe0:	b14a      	cbz	r2, 800dff6 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dfe2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dfe4:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dfe6:	b133      	cbz	r3, 800dff6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dfe8:	f001 fa22 	bl	800f430 <xTaskRemoveFromEventList>
 800dfec:	2800      	cmp	r0, #0
 800dfee:	d0f4      	beq.n	800dfda <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800dff0:	f001 faba 	bl	800f568 <vTaskMissedYield>
 800dff4:	e7f1      	b.n	800dfda <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800dff6:	23ff      	movs	r3, #255	; 0xff
 800dff8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dffc:	f7ff fbbc 	bl	800d778 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e000:	f001 f916 	bl	800f230 <xTaskResumeAll>
			return errQUEUE_FULL;
 800e004:	2000      	movs	r0, #0
 800e006:	e7b9      	b.n	800df7c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e008:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e00c:	f001 fa10 	bl	800f430 <xTaskRemoveFromEventList>
 800e010:	2800      	cmp	r0, #0
 800e012:	d0b0      	beq.n	800df76 <xQueueGenericSend+0x25a>
 800e014:	e7a5      	b.n	800df62 <xQueueGenericSend+0x246>
 800e016:	bf00      	nop

0800e018 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800e018:	2800      	cmp	r0, #0
 800e01a:	d04b      	beq.n	800e0b4 <xQueueGenericSendFromISR+0x9c>
{
 800e01c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e020:	460e      	mov	r6, r1
 800e022:	4617      	mov	r7, r2
 800e024:	461d      	mov	r5, r3
 800e026:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e028:	b321      	cbz	r1, 800e074 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e02a:	2d02      	cmp	r5, #2
 800e02c:	d10b      	bne.n	800e046 <xQueueGenericSendFromISR+0x2e>
 800e02e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e030:	2b01      	cmp	r3, #1
 800e032:	d008      	beq.n	800e046 <xQueueGenericSendFromISR+0x2e>
 800e034:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e038:	f383 8811 	msr	BASEPRI, r3
 800e03c:	f3bf 8f6f 	isb	sy
 800e040:	f3bf 8f4f 	dsb	sy
 800e044:	e7fe      	b.n	800e044 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e046:	f7ff fca9 	bl	800d99c <vPortValidateInterruptPriority>
	__asm volatile
 800e04a:	f3ef 8811 	mrs	r8, BASEPRI
 800e04e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e052:	f383 8811 	msr	BASEPRI, r3
 800e056:	f3bf 8f6f 	isb	sy
 800e05a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e05e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e060:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e062:	429a      	cmp	r2, r3
 800e064:	d312      	bcc.n	800e08c <xQueueGenericSendFromISR+0x74>
 800e066:	2d02      	cmp	r5, #2
 800e068:	d010      	beq.n	800e08c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800e06a:	2000      	movs	r0, #0
	__asm volatile
 800e06c:	f388 8811 	msr	BASEPRI, r8
}
 800e070:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e074:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e076:	2b00      	cmp	r3, #0
 800e078:	d0d7      	beq.n	800e02a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800e07a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e07e:	f383 8811 	msr	BASEPRI, r3
 800e082:	f3bf 8f6f 	isb	sy
 800e086:	f3bf 8f4f 	dsb	sy
 800e08a:	e7fe      	b.n	800e08a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e08c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800e08e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e092:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e094:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800e096:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e098:	4620      	mov	r0, r4
 800e09a:	f7ff fcad 	bl	800d9f8 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800e09e:	1c6b      	adds	r3, r5, #1
 800e0a0:	d011      	beq.n	800e0c6 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e0a2:	1c6b      	adds	r3, r5, #1
 800e0a4:	b25b      	sxtb	r3, r3
 800e0a6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800e0aa:	2001      	movs	r0, #1
	__asm volatile
 800e0ac:	f388 8811 	msr	BASEPRI, r8
}
 800e0b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800e0b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0b8:	f383 8811 	msr	BASEPRI, r3
 800e0bc:	f3bf 8f6f 	isb	sy
 800e0c0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e0c4:	e7fe      	b.n	800e0c4 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e0c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e0c8:	2b00      	cmp	r3, #0
 800e0ca:	d0ee      	beq.n	800e0aa <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e0cc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e0d0:	f001 f9ae 	bl	800f430 <xTaskRemoveFromEventList>
 800e0d4:	2800      	cmp	r0, #0
 800e0d6:	d0e8      	beq.n	800e0aa <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800e0d8:	2f00      	cmp	r7, #0
 800e0da:	d0e6      	beq.n	800e0aa <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e0dc:	2001      	movs	r0, #1
 800e0de:	6038      	str	r0, [r7, #0]
 800e0e0:	e7c4      	b.n	800e06c <xQueueGenericSendFromISR+0x54>
 800e0e2:	bf00      	nop

0800e0e4 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800e0e4:	b370      	cbz	r0, 800e144 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e0e6:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800e0e8:	b570      	push	{r4, r5, r6, lr}
 800e0ea:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800e0ec:	b143      	cbz	r3, 800e100 <xQueueGiveFromISR+0x1c>
 800e0ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0f2:	f383 8811 	msr	BASEPRI, r3
 800e0f6:	f3bf 8f6f 	isb	sy
 800e0fa:	f3bf 8f4f 	dsb	sy
 800e0fe:	e7fe      	b.n	800e0fe <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e100:	6803      	ldr	r3, [r0, #0]
 800e102:	460c      	mov	r4, r1
 800e104:	b33b      	cbz	r3, 800e156 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e106:	f7ff fc49 	bl	800d99c <vPortValidateInterruptPriority>
	__asm volatile
 800e10a:	f3ef 8511 	mrs	r5, BASEPRI
 800e10e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e112:	f383 8811 	msr	BASEPRI, r3
 800e116:	f3bf 8f6f 	isb	sy
 800e11a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e11e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800e120:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800e122:	429a      	cmp	r2, r3
 800e124:	d923      	bls.n	800e16e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800e126:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e12a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800e12c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e12e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800e130:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800e132:	d020      	beq.n	800e176 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e134:	3301      	adds	r3, #1
 800e136:	b25b      	sxtb	r3, r3
 800e138:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800e13c:	2001      	movs	r0, #1
	__asm volatile
 800e13e:	f385 8811 	msr	BASEPRI, r5
}
 800e142:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800e144:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e148:	f383 8811 	msr	BASEPRI, r3
 800e14c:	f3bf 8f6f 	isb	sy
 800e150:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e154:	e7fe      	b.n	800e154 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e156:	6883      	ldr	r3, [r0, #8]
 800e158:	2b00      	cmp	r3, #0
 800e15a:	d0d4      	beq.n	800e106 <xQueueGiveFromISR+0x22>
 800e15c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e160:	f383 8811 	msr	BASEPRI, r3
 800e164:	f3bf 8f6f 	isb	sy
 800e168:	f3bf 8f4f 	dsb	sy
 800e16c:	e7fe      	b.n	800e16c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800e16e:	2000      	movs	r0, #0
	__asm volatile
 800e170:	f385 8811 	msr	BASEPRI, r5
}
 800e174:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e176:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800e178:	2b00      	cmp	r3, #0
 800e17a:	d0df      	beq.n	800e13c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e17c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800e180:	f001 f956 	bl	800f430 <xTaskRemoveFromEventList>
 800e184:	2800      	cmp	r0, #0
 800e186:	d0d9      	beq.n	800e13c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800e188:	2c00      	cmp	r4, #0
 800e18a:	d0d7      	beq.n	800e13c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e18c:	2001      	movs	r0, #1
 800e18e:	6020      	str	r0, [r4, #0]
 800e190:	e7ee      	b.n	800e170 <xQueueGiveFromISR+0x8c>
 800e192:	bf00      	nop

0800e194 <xQueueReceive>:
{
 800e194:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e198:	b085      	sub	sp, #20
 800e19a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e19c:	2800      	cmp	r0, #0
 800e19e:	f000 815c 	beq.w	800e45a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e1a2:	460f      	mov	r7, r1
 800e1a4:	4604      	mov	r4, r0
 800e1a6:	2900      	cmp	r1, #0
 800e1a8:	d079      	beq.n	800e29e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e1aa:	f001 f9e3 	bl	800f574 <xTaskGetSchedulerState>
 800e1ae:	2800      	cmp	r0, #0
 800e1b0:	f000 8081 	beq.w	800e2b6 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800e1b4:	f7ff fabe 	bl	800d734 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e1b8:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e1ba:	2d00      	cmp	r5, #0
 800e1bc:	f040 8138 	bne.w	800e430 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e1c0:	9b01      	ldr	r3, [sp, #4]
 800e1c2:	2b00      	cmp	r3, #0
 800e1c4:	f000 80d5 	beq.w	800e372 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e1c8:	a802      	add	r0, sp, #8
 800e1ca:	f001 f979 	bl	800f4c0 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800e1ce:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e1d0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800e1d4:	f7ff fad0 	bl	800d778 <vPortExitCritical>
		vTaskSuspendAll();
 800e1d8:	f001 f822 	bl	800f220 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e1dc:	f7ff faaa 	bl	800d734 <vPortEnterCritical>
 800e1e0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e1e4:	2bff      	cmp	r3, #255	; 0xff
 800e1e6:	bf08      	it	eq
 800e1e8:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800e1ec:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e1f0:	2bff      	cmp	r3, #255	; 0xff
 800e1f2:	bf08      	it	eq
 800e1f4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800e1f8:	f7ff fabe 	bl	800d778 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e1fc:	a901      	add	r1, sp, #4
 800e1fe:	a802      	add	r0, sp, #8
 800e200:	f001 f96a 	bl	800f4d8 <xTaskCheckForTimeOut>
 800e204:	2800      	cmp	r0, #0
 800e206:	d163      	bne.n	800e2d0 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800e208:	f7ff fa94 	bl	800d734 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e20c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e20e:	2b00      	cmp	r3, #0
 800e210:	f000 80b5 	beq.w	800e37e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800e214:	f7ff fab0 	bl	800d778 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e218:	f7ff fa8c 	bl	800d734 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e21c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e220:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e222:	2d00      	cmp	r5, #0
 800e224:	dc04      	bgt.n	800e230 <xQueueReceive+0x9c>
 800e226:	e011      	b.n	800e24c <xQueueReceive+0xb8>
			--cTxLock;
 800e228:	1e6b      	subs	r3, r5, #1
 800e22a:	b2da      	uxtb	r2, r3
 800e22c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e22e:	b16a      	cbz	r2, 800e24c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e230:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e232:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e234:	b153      	cbz	r3, 800e24c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e236:	f001 f8fb 	bl	800f430 <xTaskRemoveFromEventList>
 800e23a:	2800      	cmp	r0, #0
 800e23c:	d0f4      	beq.n	800e228 <xQueueReceive+0x94>
						vTaskMissedYield();
 800e23e:	f001 f993 	bl	800f568 <vTaskMissedYield>
			--cTxLock;
 800e242:	1e6b      	subs	r3, r5, #1
 800e244:	b2da      	uxtb	r2, r3
 800e246:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e248:	2a00      	cmp	r2, #0
 800e24a:	d1f1      	bne.n	800e230 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800e24c:	23ff      	movs	r3, #255	; 0xff
 800e24e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e252:	f7ff fa91 	bl	800d778 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e256:	f7ff fa6d 	bl	800d734 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e25a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e25e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e260:	2d00      	cmp	r5, #0
 800e262:	dd14      	ble.n	800e28e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e264:	f104 0910 	add.w	r9, r4, #16
 800e268:	e003      	b.n	800e272 <xQueueReceive+0xde>
				--cRxLock;
 800e26a:	1e6b      	subs	r3, r5, #1
 800e26c:	b2da      	uxtb	r2, r3
 800e26e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e270:	b16a      	cbz	r2, 800e28e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e272:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e274:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e276:	b153      	cbz	r3, 800e28e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e278:	f001 f8da 	bl	800f430 <xTaskRemoveFromEventList>
 800e27c:	2800      	cmp	r0, #0
 800e27e:	d0f4      	beq.n	800e26a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800e280:	f001 f972 	bl	800f568 <vTaskMissedYield>
				--cRxLock;
 800e284:	1e6b      	subs	r3, r5, #1
 800e286:	b2da      	uxtb	r2, r3
 800e288:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e28a:	2a00      	cmp	r2, #0
 800e28c:	d1f1      	bne.n	800e272 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800e28e:	23ff      	movs	r3, #255	; 0xff
 800e290:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e294:	f7ff fa70 	bl	800d778 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e298:	f000 ffca 	bl	800f230 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800e29c:	e060      	b.n	800e360 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e29e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e2a0:	2b00      	cmp	r3, #0
 800e2a2:	d082      	beq.n	800e1aa <xQueueReceive+0x16>
	__asm volatile
 800e2a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2a8:	f383 8811 	msr	BASEPRI, r3
 800e2ac:	f3bf 8f6f 	isb	sy
 800e2b0:	f3bf 8f4f 	dsb	sy
 800e2b4:	e7fe      	b.n	800e2b4 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e2b6:	9b01      	ldr	r3, [sp, #4]
 800e2b8:	2b00      	cmp	r3, #0
 800e2ba:	f43f af7b 	beq.w	800e1b4 <xQueueReceive+0x20>
 800e2be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2c2:	f383 8811 	msr	BASEPRI, r3
 800e2c6:	f3bf 8f6f 	isb	sy
 800e2ca:	f3bf 8f4f 	dsb	sy
 800e2ce:	e7fe      	b.n	800e2ce <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800e2d0:	f7ff fa30 	bl	800d734 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e2d4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e2d8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e2da:	2d00      	cmp	r5, #0
 800e2dc:	dc04      	bgt.n	800e2e8 <xQueueReceive+0x154>
 800e2de:	e011      	b.n	800e304 <xQueueReceive+0x170>
			--cTxLock;
 800e2e0:	1e6b      	subs	r3, r5, #1
 800e2e2:	b2da      	uxtb	r2, r3
 800e2e4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e2e6:	b16a      	cbz	r2, 800e304 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e2e8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e2ea:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e2ec:	b153      	cbz	r3, 800e304 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e2ee:	f001 f89f 	bl	800f430 <xTaskRemoveFromEventList>
 800e2f2:	2800      	cmp	r0, #0
 800e2f4:	d0f4      	beq.n	800e2e0 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800e2f6:	f001 f937 	bl	800f568 <vTaskMissedYield>
			--cTxLock;
 800e2fa:	1e6b      	subs	r3, r5, #1
 800e2fc:	b2da      	uxtb	r2, r3
 800e2fe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e300:	2a00      	cmp	r2, #0
 800e302:	d1f1      	bne.n	800e2e8 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800e304:	23ff      	movs	r3, #255	; 0xff
 800e306:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e30a:	f7ff fa35 	bl	800d778 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e30e:	f7ff fa11 	bl	800d734 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e312:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e316:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e318:	2d00      	cmp	r5, #0
 800e31a:	dd14      	ble.n	800e346 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e31c:	f104 0910 	add.w	r9, r4, #16
 800e320:	e003      	b.n	800e32a <xQueueReceive+0x196>
				--cRxLock;
 800e322:	1e6b      	subs	r3, r5, #1
 800e324:	b2da      	uxtb	r2, r3
 800e326:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e328:	b16a      	cbz	r2, 800e346 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e32a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e32c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e32e:	b153      	cbz	r3, 800e346 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e330:	f001 f87e 	bl	800f430 <xTaskRemoveFromEventList>
 800e334:	2800      	cmp	r0, #0
 800e336:	d0f4      	beq.n	800e322 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800e338:	f001 f916 	bl	800f568 <vTaskMissedYield>
				--cRxLock;
 800e33c:	1e6b      	subs	r3, r5, #1
 800e33e:	b2da      	uxtb	r2, r3
 800e340:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e342:	2a00      	cmp	r2, #0
 800e344:	d1f1      	bne.n	800e32a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800e346:	23ff      	movs	r3, #255	; 0xff
 800e348:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e34c:	f7ff fa14 	bl	800d778 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e350:	f000 ff6e 	bl	800f230 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e354:	f7ff f9ee 	bl	800d734 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e358:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e35a:	b153      	cbz	r3, 800e372 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800e35c:	f7ff fa0c 	bl	800d778 <vPortExitCritical>
		taskENTER_CRITICAL();
 800e360:	f7ff f9e8 	bl	800d734 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e364:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e366:	2d00      	cmp	r5, #0
 800e368:	d162      	bne.n	800e430 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e36a:	9b01      	ldr	r3, [sp, #4]
 800e36c:	2b00      	cmp	r3, #0
 800e36e:	f47f af31 	bne.w	800e1d4 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800e372:	f7ff fa01 	bl	800d778 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e376:	2000      	movs	r0, #0
}
 800e378:	b005      	add	sp, #20
 800e37a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800e37e:	f7ff f9fb 	bl	800d778 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e382:	9901      	ldr	r1, [sp, #4]
 800e384:	4630      	mov	r0, r6
 800e386:	f000 ffc5 	bl	800f314 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e38a:	f7ff f9d3 	bl	800d734 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e38e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e392:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e394:	2d00      	cmp	r5, #0
 800e396:	dc04      	bgt.n	800e3a2 <xQueueReceive+0x20e>
 800e398:	e011      	b.n	800e3be <xQueueReceive+0x22a>
			--cTxLock;
 800e39a:	1e6b      	subs	r3, r5, #1
 800e39c:	b2da      	uxtb	r2, r3
 800e39e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e3a0:	b16a      	cbz	r2, 800e3be <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e3a2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e3a4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e3a6:	b153      	cbz	r3, 800e3be <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e3a8:	f001 f842 	bl	800f430 <xTaskRemoveFromEventList>
 800e3ac:	2800      	cmp	r0, #0
 800e3ae:	d0f4      	beq.n	800e39a <xQueueReceive+0x206>
						vTaskMissedYield();
 800e3b0:	f001 f8da 	bl	800f568 <vTaskMissedYield>
			--cTxLock;
 800e3b4:	1e6b      	subs	r3, r5, #1
 800e3b6:	b2da      	uxtb	r2, r3
 800e3b8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e3ba:	2a00      	cmp	r2, #0
 800e3bc:	d1f1      	bne.n	800e3a2 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e3be:	23ff      	movs	r3, #255	; 0xff
 800e3c0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e3c4:	f7ff f9d8 	bl	800d778 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e3c8:	f7ff f9b4 	bl	800d734 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e3cc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e3d0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e3d2:	2d00      	cmp	r5, #0
 800e3d4:	dd14      	ble.n	800e400 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e3d6:	f104 0910 	add.w	r9, r4, #16
 800e3da:	e003      	b.n	800e3e4 <xQueueReceive+0x250>
				--cRxLock;
 800e3dc:	1e6b      	subs	r3, r5, #1
 800e3de:	b2da      	uxtb	r2, r3
 800e3e0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e3e2:	b16a      	cbz	r2, 800e400 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e3e4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e3e6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e3e8:	b153      	cbz	r3, 800e400 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e3ea:	f001 f821 	bl	800f430 <xTaskRemoveFromEventList>
 800e3ee:	2800      	cmp	r0, #0
 800e3f0:	d0f4      	beq.n	800e3dc <xQueueReceive+0x248>
					vTaskMissedYield();
 800e3f2:	f001 f8b9 	bl	800f568 <vTaskMissedYield>
				--cRxLock;
 800e3f6:	1e6b      	subs	r3, r5, #1
 800e3f8:	b2da      	uxtb	r2, r3
 800e3fa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e3fc:	2a00      	cmp	r2, #0
 800e3fe:	d1f1      	bne.n	800e3e4 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800e400:	23ff      	movs	r3, #255	; 0xff
 800e402:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e406:	f7ff f9b7 	bl	800d778 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e40a:	f000 ff11 	bl	800f230 <xTaskResumeAll>
 800e40e:	2800      	cmp	r0, #0
 800e410:	d1a6      	bne.n	800e360 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800e412:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e416:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e41a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e41e:	f3bf 8f4f 	dsb	sy
 800e422:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800e426:	f7ff f985 	bl	800d734 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e42a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e42c:	2d00      	cmp	r5, #0
 800e42e:	d09c      	beq.n	800e36a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e430:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e432:	b152      	cbz	r2, 800e44a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e434:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e436:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e438:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e43a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e43c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e43e:	bf24      	itt	cs
 800e440:	6821      	ldrcs	r1, [r4, #0]
 800e442:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e444:	4638      	mov	r0, r7
 800e446:	f01c f9d0 	bl	802a7ea <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e44a:	3d01      	subs	r5, #1
 800e44c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e44e:	6923      	ldr	r3, [r4, #16]
 800e450:	b963      	cbnz	r3, 800e46c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800e452:	f7ff f991 	bl	800d778 <vPortExitCritical>
				return pdPASS;
 800e456:	2001      	movs	r0, #1
 800e458:	e78e      	b.n	800e378 <xQueueReceive+0x1e4>
 800e45a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e45e:	f383 8811 	msr	BASEPRI, r3
 800e462:	f3bf 8f6f 	isb	sy
 800e466:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e46a:	e7fe      	b.n	800e46a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e46c:	f104 0010 	add.w	r0, r4, #16
 800e470:	f000 ffde 	bl	800f430 <xTaskRemoveFromEventList>
 800e474:	2800      	cmp	r0, #0
 800e476:	d0ec      	beq.n	800e452 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800e478:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e47c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e480:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e484:	f3bf 8f4f 	dsb	sy
 800e488:	f3bf 8f6f 	isb	sy
 800e48c:	e7e1      	b.n	800e452 <xQueueReceive+0x2be>
 800e48e:	bf00      	nop

0800e490 <xQueueSemaphoreTake>:
{
 800e490:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e494:	b084      	sub	sp, #16
 800e496:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e498:	2800      	cmp	r0, #0
 800e49a:	d05c      	beq.n	800e556 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e49c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800e49e:	4604      	mov	r4, r0
 800e4a0:	b147      	cbz	r7, 800e4b4 <xQueueSemaphoreTake+0x24>
 800e4a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4a6:	f383 8811 	msr	BASEPRI, r3
 800e4aa:	f3bf 8f6f 	isb	sy
 800e4ae:	f3bf 8f4f 	dsb	sy
 800e4b2:	e7fe      	b.n	800e4b2 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e4b4:	f001 f85e 	bl	800f574 <xTaskGetSchedulerState>
 800e4b8:	4605      	mov	r5, r0
 800e4ba:	2800      	cmp	r0, #0
 800e4bc:	d054      	beq.n	800e568 <xQueueSemaphoreTake+0xd8>
 800e4be:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e4c0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e4c4:	f7ff f936 	bl	800d734 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800e4c8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800e4ca:	2b00      	cmp	r3, #0
 800e4cc:	f040 8148 	bne.w	800e760 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e4d0:	9b01      	ldr	r3, [sp, #4]
 800e4d2:	2b00      	cmp	r3, #0
 800e4d4:	f000 813a 	beq.w	800e74c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800e4d8:	2d00      	cmp	r5, #0
 800e4da:	f000 809d 	beq.w	800e618 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800e4de:	f7ff f94b 	bl	800d778 <vPortExitCritical>
		vTaskSuspendAll();
 800e4e2:	f000 fe9d 	bl	800f220 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e4e6:	f7ff f925 	bl	800d734 <vPortEnterCritical>
 800e4ea:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e4ee:	2bff      	cmp	r3, #255	; 0xff
 800e4f0:	bf04      	itt	eq
 800e4f2:	2300      	moveq	r3, #0
 800e4f4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e4f8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e4fc:	2bff      	cmp	r3, #255	; 0xff
 800e4fe:	bf04      	itt	eq
 800e500:	2300      	moveq	r3, #0
 800e502:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e506:	f7ff f937 	bl	800d778 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e50a:	a901      	add	r1, sp, #4
 800e50c:	a802      	add	r0, sp, #8
 800e50e:	f000 ffe3 	bl	800f4d8 <xTaskCheckForTimeOut>
 800e512:	2800      	cmp	r0, #0
 800e514:	d135      	bne.n	800e582 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800e516:	f7ff f90d 	bl	800d734 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e51a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e51c:	2b00      	cmp	r3, #0
 800e51e:	f000 80a4 	beq.w	800e66a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800e522:	f7ff f929 	bl	800d778 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e526:	f7ff f905 	bl	800d734 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e52a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e52e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e530:	2d00      	cmp	r5, #0
 800e532:	dc05      	bgt.n	800e540 <xQueueSemaphoreTake+0xb0>
 800e534:	e074      	b.n	800e620 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800e536:	1e6b      	subs	r3, r5, #1
 800e538:	b2da      	uxtb	r2, r3
 800e53a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e53c:	2a00      	cmp	r2, #0
 800e53e:	d06f      	beq.n	800e620 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e540:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e542:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e544:	2b00      	cmp	r3, #0
 800e546:	d06b      	beq.n	800e620 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e548:	f000 ff72 	bl	800f430 <xTaskRemoveFromEventList>
 800e54c:	2800      	cmp	r0, #0
 800e54e:	d0f2      	beq.n	800e536 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800e550:	f001 f80a 	bl	800f568 <vTaskMissedYield>
 800e554:	e7ef      	b.n	800e536 <xQueueSemaphoreTake+0xa6>
 800e556:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e55a:	f383 8811 	msr	BASEPRI, r3
 800e55e:	f3bf 8f6f 	isb	sy
 800e562:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e566:	e7fe      	b.n	800e566 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e568:	9b01      	ldr	r3, [sp, #4]
 800e56a:	2b00      	cmp	r3, #0
 800e56c:	f000 80d4 	beq.w	800e718 <xQueueSemaphoreTake+0x288>
 800e570:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e574:	f383 8811 	msr	BASEPRI, r3
 800e578:	f3bf 8f6f 	isb	sy
 800e57c:	f3bf 8f4f 	dsb	sy
 800e580:	e7fe      	b.n	800e580 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800e582:	f7ff f8d7 	bl	800d734 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e586:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e58a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e58c:	2d00      	cmp	r5, #0
 800e58e:	dc04      	bgt.n	800e59a <xQueueSemaphoreTake+0x10a>
 800e590:	e011      	b.n	800e5b6 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800e592:	1e6b      	subs	r3, r5, #1
 800e594:	b2da      	uxtb	r2, r3
 800e596:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e598:	b16a      	cbz	r2, 800e5b6 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e59a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e59c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e59e:	b153      	cbz	r3, 800e5b6 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e5a0:	f000 ff46 	bl	800f430 <xTaskRemoveFromEventList>
 800e5a4:	2800      	cmp	r0, #0
 800e5a6:	d0f4      	beq.n	800e592 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800e5a8:	f000 ffde 	bl	800f568 <vTaskMissedYield>
			--cTxLock;
 800e5ac:	1e6b      	subs	r3, r5, #1
 800e5ae:	b2da      	uxtb	r2, r3
 800e5b0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e5b2:	2a00      	cmp	r2, #0
 800e5b4:	d1f1      	bne.n	800e59a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800e5b6:	23ff      	movs	r3, #255	; 0xff
 800e5b8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e5bc:	f7ff f8dc 	bl	800d778 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e5c0:	f7ff f8b8 	bl	800d734 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e5c4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e5c8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5ca:	2d00      	cmp	r5, #0
 800e5cc:	dd14      	ble.n	800e5f8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e5ce:	f104 0810 	add.w	r8, r4, #16
 800e5d2:	e003      	b.n	800e5dc <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800e5d4:	1e6b      	subs	r3, r5, #1
 800e5d6:	b2da      	uxtb	r2, r3
 800e5d8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5da:	b16a      	cbz	r2, 800e5f8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e5dc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e5de:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e5e0:	b153      	cbz	r3, 800e5f8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e5e2:	f000 ff25 	bl	800f430 <xTaskRemoveFromEventList>
 800e5e6:	2800      	cmp	r0, #0
 800e5e8:	d0f4      	beq.n	800e5d4 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800e5ea:	f000 ffbd 	bl	800f568 <vTaskMissedYield>
				--cRxLock;
 800e5ee:	1e6b      	subs	r3, r5, #1
 800e5f0:	b2da      	uxtb	r2, r3
 800e5f2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5f4:	2a00      	cmp	r2, #0
 800e5f6:	d1f1      	bne.n	800e5dc <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800e5f8:	23ff      	movs	r3, #255	; 0xff
 800e5fa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e5fe:	f7ff f8bb 	bl	800d778 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e602:	f000 fe15 	bl	800f230 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e606:	f7ff f895 	bl	800d734 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e60a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e60c:	2b00      	cmp	r3, #0
 800e60e:	d07c      	beq.n	800e70a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800e610:	f7ff f8b2 	bl	800d778 <vPortExitCritical>
	return xReturn;
 800e614:	2501      	movs	r5, #1
 800e616:	e755      	b.n	800e4c4 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e618:	a802      	add	r0, sp, #8
 800e61a:	f000 ff51 	bl	800f4c0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e61e:	e75e      	b.n	800e4de <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e620:	23ff      	movs	r3, #255	; 0xff
 800e622:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e626:	f7ff f8a7 	bl	800d778 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e62a:	f7ff f883 	bl	800d734 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e62e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e632:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e634:	2d00      	cmp	r5, #0
 800e636:	dd10      	ble.n	800e65a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e638:	f104 0810 	add.w	r8, r4, #16
 800e63c:	e003      	b.n	800e646 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800e63e:	1e6b      	subs	r3, r5, #1
 800e640:	b2da      	uxtb	r2, r3
 800e642:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e644:	b14a      	cbz	r2, 800e65a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e646:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e648:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e64a:	b133      	cbz	r3, 800e65a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e64c:	f000 fef0 	bl	800f430 <xTaskRemoveFromEventList>
 800e650:	2800      	cmp	r0, #0
 800e652:	d0f4      	beq.n	800e63e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800e654:	f000 ff88 	bl	800f568 <vTaskMissedYield>
 800e658:	e7f1      	b.n	800e63e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800e65a:	23ff      	movs	r3, #255	; 0xff
 800e65c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e660:	f7ff f88a 	bl	800d778 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e664:	f000 fde4 	bl	800f230 <xTaskResumeAll>
 800e668:	e7d4      	b.n	800e614 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e66a:	f7ff f885 	bl	800d778 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e66e:	6823      	ldr	r3, [r4, #0]
 800e670:	2b00      	cmp	r3, #0
 800e672:	d062      	beq.n	800e73a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e674:	9901      	ldr	r1, [sp, #4]
 800e676:	4630      	mov	r0, r6
 800e678:	f000 fe4c 	bl	800f314 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e67c:	f7ff f85a 	bl	800d734 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e680:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e684:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e686:	2d00      	cmp	r5, #0
 800e688:	dc04      	bgt.n	800e694 <xQueueSemaphoreTake+0x204>
 800e68a:	e00d      	b.n	800e6a8 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800e68c:	1e6b      	subs	r3, r5, #1
 800e68e:	b2da      	uxtb	r2, r3
 800e690:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e692:	b14a      	cbz	r2, 800e6a8 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e694:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e696:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e698:	b133      	cbz	r3, 800e6a8 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e69a:	f000 fec9 	bl	800f430 <xTaskRemoveFromEventList>
 800e69e:	2800      	cmp	r0, #0
 800e6a0:	d0f4      	beq.n	800e68c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800e6a2:	f000 ff61 	bl	800f568 <vTaskMissedYield>
 800e6a6:	e7f1      	b.n	800e68c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e6a8:	23ff      	movs	r3, #255	; 0xff
 800e6aa:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e6ae:	f7ff f863 	bl	800d778 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e6b2:	f7ff f83f 	bl	800d734 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e6b6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e6ba:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e6bc:	2d00      	cmp	r5, #0
 800e6be:	dd10      	ble.n	800e6e2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e6c0:	f104 0810 	add.w	r8, r4, #16
 800e6c4:	e003      	b.n	800e6ce <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800e6c6:	1e6b      	subs	r3, r5, #1
 800e6c8:	b2da      	uxtb	r2, r3
 800e6ca:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e6cc:	b14a      	cbz	r2, 800e6e2 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e6ce:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e6d0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e6d2:	b133      	cbz	r3, 800e6e2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e6d4:	f000 feac 	bl	800f430 <xTaskRemoveFromEventList>
 800e6d8:	2800      	cmp	r0, #0
 800e6da:	d0f4      	beq.n	800e6c6 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800e6dc:	f000 ff44 	bl	800f568 <vTaskMissedYield>
 800e6e0:	e7f1      	b.n	800e6c6 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800e6e2:	23ff      	movs	r3, #255	; 0xff
 800e6e4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e6e8:	f7ff f846 	bl	800d778 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e6ec:	f000 fda0 	bl	800f230 <xTaskResumeAll>
 800e6f0:	2800      	cmp	r0, #0
 800e6f2:	d18f      	bne.n	800e614 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800e6f4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e6f8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e6fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e700:	f3bf 8f4f 	dsb	sy
 800e704:	f3bf 8f6f 	isb	sy
 800e708:	e784      	b.n	800e614 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e70a:	f7ff f835 	bl	800d778 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800e70e:	b92f      	cbnz	r7, 800e71c <xQueueSemaphoreTake+0x28c>
}
 800e710:	4638      	mov	r0, r7
 800e712:	b004      	add	sp, #16
 800e714:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e718:	4607      	mov	r7, r0
 800e71a:	e6d1      	b.n	800e4c0 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800e71c:	f7ff f80a 	bl	800d734 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800e720:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e722:	b119      	cbz	r1, 800e72c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800e724:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e726:	6819      	ldr	r1, [r3, #0]
 800e728:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800e72c:	68a0      	ldr	r0, [r4, #8]
 800e72e:	f000 ffbd 	bl	800f6ac <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800e732:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800e734:	f7ff f820 	bl	800d778 <vPortExitCritical>
 800e738:	e7ea      	b.n	800e710 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800e73a:	f7fe fffb 	bl	800d734 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e73e:	68a0      	ldr	r0, [r4, #8]
 800e740:	f000 ff28 	bl	800f594 <xTaskPriorityInherit>
 800e744:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800e746:	f7ff f817 	bl	800d778 <vPortExitCritical>
 800e74a:	e793      	b.n	800e674 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800e74c:	b197      	cbz	r7, 800e774 <xQueueSemaphoreTake+0x2e4>
 800e74e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e752:	f383 8811 	msr	BASEPRI, r3
 800e756:	f3bf 8f6f 	isb	sy
 800e75a:	f3bf 8f4f 	dsb	sy
 800e75e:	e7fe      	b.n	800e75e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e760:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800e762:	3b01      	subs	r3, #1
 800e764:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e766:	b1ca      	cbz	r2, 800e79c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e768:	6923      	ldr	r3, [r4, #16]
 800e76a:	b933      	cbnz	r3, 800e77a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800e76c:	f7ff f804 	bl	800d778 <vPortExitCritical>
				return pdPASS;
 800e770:	2701      	movs	r7, #1
 800e772:	e7cd      	b.n	800e710 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800e774:	f7ff f800 	bl	800d778 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e778:	e7ca      	b.n	800e710 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e77a:	f104 0010 	add.w	r0, r4, #16
 800e77e:	f000 fe57 	bl	800f430 <xTaskRemoveFromEventList>
 800e782:	2800      	cmp	r0, #0
 800e784:	d0f2      	beq.n	800e76c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800e786:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e78a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e78e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e792:	f3bf 8f4f 	dsb	sy
 800e796:	f3bf 8f6f 	isb	sy
 800e79a:	e7e7      	b.n	800e76c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800e79c:	f000 ffda 	bl	800f754 <pvTaskIncrementMutexHeldCount>
 800e7a0:	60a0      	str	r0, [r4, #8]
 800e7a2:	e7e1      	b.n	800e768 <xQueueSemaphoreTake+0x2d8>

0800e7a4 <xQueueReceiveFromISR>:
{
 800e7a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800e7a8:	b310      	cbz	r0, 800e7f0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e7aa:	460e      	mov	r6, r1
 800e7ac:	4617      	mov	r7, r2
 800e7ae:	4604      	mov	r4, r0
 800e7b0:	b191      	cbz	r1, 800e7d8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e7b2:	f7ff f8f3 	bl	800d99c <vPortValidateInterruptPriority>
	__asm volatile
 800e7b6:	f3ef 8911 	mrs	r9, BASEPRI
 800e7ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7be:	f383 8811 	msr	BASEPRI, r3
 800e7c2:	f3bf 8f6f 	isb	sy
 800e7c6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e7ca:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e7cc:	b9cd      	cbnz	r5, 800e802 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800e7ce:	4628      	mov	r0, r5
	__asm volatile
 800e7d0:	f389 8811 	msr	BASEPRI, r9
}
 800e7d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e7d8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e7da:	2b00      	cmp	r3, #0
 800e7dc:	d0e9      	beq.n	800e7b2 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800e7de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7e2:	f383 8811 	msr	BASEPRI, r3
 800e7e6:	f3bf 8f6f 	isb	sy
 800e7ea:	f3bf 8f4f 	dsb	sy
 800e7ee:	e7fe      	b.n	800e7ee <xQueueReceiveFromISR+0x4a>
 800e7f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7f4:	f383 8811 	msr	BASEPRI, r3
 800e7f8:	f3bf 8f6f 	isb	sy
 800e7fc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e800:	e7fe      	b.n	800e800 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800e802:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e806:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800e808:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e80c:	b152      	cbz	r2, 800e824 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e80e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e810:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e812:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e814:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e816:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e818:	bf24      	itt	cs
 800e81a:	6821      	ldrcs	r1, [r4, #0]
 800e81c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e81e:	4630      	mov	r0, r6
 800e820:	f01b ffe3 	bl	802a7ea <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e824:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800e826:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e82a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800e82c:	d009      	beq.n	800e842 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800e82e:	f108 0301 	add.w	r3, r8, #1
 800e832:	b25b      	sxtb	r3, r3
 800e834:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800e838:	2001      	movs	r0, #1
	__asm volatile
 800e83a:	f389 8811 	msr	BASEPRI, r9
}
 800e83e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e842:	6923      	ldr	r3, [r4, #16]
 800e844:	2b00      	cmp	r3, #0
 800e846:	d0f7      	beq.n	800e838 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e848:	f104 0010 	add.w	r0, r4, #16
 800e84c:	f000 fdf0 	bl	800f430 <xTaskRemoveFromEventList>
 800e850:	2800      	cmp	r0, #0
 800e852:	d0f1      	beq.n	800e838 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800e854:	2f00      	cmp	r7, #0
 800e856:	d0ef      	beq.n	800e838 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800e858:	2001      	movs	r0, #1
 800e85a:	6038      	str	r0, [r7, #0]
 800e85c:	e7b8      	b.n	800e7d0 <xQueueReceiveFromISR+0x2c>
 800e85e:	bf00      	nop

0800e860 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800e860:	b158      	cbz	r0, 800e87a <uxQueueMessagesWaiting+0x1a>
{
 800e862:	b510      	push	{r4, lr}
 800e864:	4604      	mov	r4, r0
 800e866:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800e868:	f7fe ff64 	bl	800d734 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800e86c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800e86e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e870:	f7fe ff82 	bl	800d778 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e874:	9801      	ldr	r0, [sp, #4]
 800e876:	b002      	add	sp, #8
 800e878:	bd10      	pop	{r4, pc}
	__asm volatile
 800e87a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e87e:	f383 8811 	msr	BASEPRI, r3
 800e882:	f3bf 8f6f 	isb	sy
 800e886:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800e88a:	e7fe      	b.n	800e88a <uxQueueMessagesWaiting+0x2a>

0800e88c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800e88c:	b108      	cbz	r0, 800e892 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800e88e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e890:	4770      	bx	lr
 800e892:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e896:	f383 8811 	msr	BASEPRI, r3
 800e89a:	f3bf 8f6f 	isb	sy
 800e89e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e8a2:	e7fe      	b.n	800e8a2 <uxQueueMessagesWaitingFromISR+0x16>
 800e8a4:	0000      	movs	r0, r0
	...

0800e8a8 <vQueueDelete>:
	configASSERT( pxQueue );
 800e8a8:	b1f0      	cbz	r0, 800e8e8 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e8aa:	4b21      	ldr	r3, [pc, #132]	; (800e930 <vQueueDelete+0x88>)
 800e8ac:	685a      	ldr	r2, [r3, #4]
 800e8ae:	4290      	cmp	r0, r2
 800e8b0:	d025      	beq.n	800e8fe <vQueueDelete+0x56>
 800e8b2:	68da      	ldr	r2, [r3, #12]
 800e8b4:	4290      	cmp	r0, r2
 800e8b6:	d02c      	beq.n	800e912 <vQueueDelete+0x6a>
 800e8b8:	695a      	ldr	r2, [r3, #20]
 800e8ba:	4290      	cmp	r0, r2
 800e8bc:	d02b      	beq.n	800e916 <vQueueDelete+0x6e>
 800e8be:	69da      	ldr	r2, [r3, #28]
 800e8c0:	4290      	cmp	r0, r2
 800e8c2:	d02a      	beq.n	800e91a <vQueueDelete+0x72>
 800e8c4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800e8c6:	4290      	cmp	r0, r2
 800e8c8:	d029      	beq.n	800e91e <vQueueDelete+0x76>
 800e8ca:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e8cc:	4290      	cmp	r0, r2
 800e8ce:	d01e      	beq.n	800e90e <vQueueDelete+0x66>
 800e8d0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800e8d2:	4290      	cmp	r0, r2
 800e8d4:	d025      	beq.n	800e922 <vQueueDelete+0x7a>
 800e8d6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800e8d8:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e8da:	bf08      	it	eq
 800e8dc:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e8de:	d00f      	beq.n	800e900 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800e8e0:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800e8e4:	b14b      	cbz	r3, 800e8fa <vQueueDelete+0x52>
}
 800e8e6:	4770      	bx	lr
 800e8e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e8ec:	f383 8811 	msr	BASEPRI, r3
 800e8f0:	f3bf 8f6f 	isb	sy
 800e8f4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e8f8:	e7fe      	b.n	800e8f8 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800e8fa:	f7fe be07 	b.w	800d50c <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e8fe:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800e900:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800e928 <vQueueDelete+0x80>
 800e904:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e908:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800e90c:	e7e8      	b.n	800e8e0 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e90e:	2205      	movs	r2, #5
 800e910:	e7f6      	b.n	800e900 <vQueueDelete+0x58>
 800e912:	2201      	movs	r2, #1
 800e914:	e7f4      	b.n	800e900 <vQueueDelete+0x58>
 800e916:	2202      	movs	r2, #2
 800e918:	e7f2      	b.n	800e900 <vQueueDelete+0x58>
 800e91a:	2203      	movs	r2, #3
 800e91c:	e7f0      	b.n	800e900 <vQueueDelete+0x58>
 800e91e:	2204      	movs	r2, #4
 800e920:	e7ee      	b.n	800e900 <vQueueDelete+0x58>
 800e922:	2206      	movs	r2, #6
 800e924:	e7ec      	b.n	800e900 <vQueueDelete+0x58>
 800e926:	bf00      	nop
	...
 800e930:	200128b8 	.word	0x200128b8

0800e934 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e934:	4b12      	ldr	r3, [pc, #72]	; (800e980 <vQueueAddToRegistry+0x4c>)
 800e936:	681a      	ldr	r2, [r3, #0]
 800e938:	b17a      	cbz	r2, 800e95a <vQueueAddToRegistry+0x26>
 800e93a:	689a      	ldr	r2, [r3, #8]
 800e93c:	b162      	cbz	r2, 800e958 <vQueueAddToRegistry+0x24>
 800e93e:	691a      	ldr	r2, [r3, #16]
 800e940:	b192      	cbz	r2, 800e968 <vQueueAddToRegistry+0x34>
 800e942:	699a      	ldr	r2, [r3, #24]
 800e944:	b192      	cbz	r2, 800e96c <vQueueAddToRegistry+0x38>
 800e946:	6a1a      	ldr	r2, [r3, #32]
 800e948:	b192      	cbz	r2, 800e970 <vQueueAddToRegistry+0x3c>
 800e94a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800e94c:	b192      	cbz	r2, 800e974 <vQueueAddToRegistry+0x40>
 800e94e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e950:	b192      	cbz	r2, 800e978 <vQueueAddToRegistry+0x44>
 800e952:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e954:	b192      	cbz	r2, 800e97c <vQueueAddToRegistry+0x48>
	}
 800e956:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e958:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e95a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800e95e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e962:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800e966:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e968:	2202      	movs	r2, #2
 800e96a:	e7f6      	b.n	800e95a <vQueueAddToRegistry+0x26>
 800e96c:	2203      	movs	r2, #3
 800e96e:	e7f4      	b.n	800e95a <vQueueAddToRegistry+0x26>
 800e970:	2204      	movs	r2, #4
 800e972:	e7f2      	b.n	800e95a <vQueueAddToRegistry+0x26>
 800e974:	2205      	movs	r2, #5
 800e976:	e7f0      	b.n	800e95a <vQueueAddToRegistry+0x26>
 800e978:	2206      	movs	r2, #6
 800e97a:	e7ee      	b.n	800e95a <vQueueAddToRegistry+0x26>
 800e97c:	2207      	movs	r2, #7
 800e97e:	e7ec      	b.n	800e95a <vQueueAddToRegistry+0x26>
 800e980:	200128b8 	.word	0x200128b8

0800e984 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800e984:	b570      	push	{r4, r5, r6, lr}
 800e986:	4605      	mov	r5, r0
 800e988:	460e      	mov	r6, r1
 800e98a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800e98c:	f7fe fed2 	bl	800d734 <vPortEnterCritical>
 800e990:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e994:	2bff      	cmp	r3, #255	; 0xff
 800e996:	bf04      	itt	eq
 800e998:	2300      	moveq	r3, #0
 800e99a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800e99e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e9a2:	2bff      	cmp	r3, #255	; 0xff
 800e9a4:	bf04      	itt	eq
 800e9a6:	2300      	moveq	r3, #0
 800e9a8:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800e9ac:	f7fe fee4 	bl	800d778 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800e9b0:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800e9b2:	2b00      	cmp	r3, #0
 800e9b4:	d043      	beq.n	800ea3e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800e9b6:	f7fe febd 	bl	800d734 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e9ba:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e9be:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9c0:	2c00      	cmp	r4, #0
 800e9c2:	dd14      	ble.n	800e9ee <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9c4:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800e9c8:	e003      	b.n	800e9d2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800e9ca:	1e63      	subs	r3, r4, #1
 800e9cc:	b2da      	uxtb	r2, r3
 800e9ce:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9d0:	b16a      	cbz	r2, 800e9ee <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e9d2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9d4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e9d6:	b153      	cbz	r3, 800e9ee <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9d8:	f000 fd2a 	bl	800f430 <xTaskRemoveFromEventList>
 800e9dc:	2800      	cmp	r0, #0
 800e9de:	d0f4      	beq.n	800e9ca <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800e9e0:	f000 fdc2 	bl	800f568 <vTaskMissedYield>
			--cTxLock;
 800e9e4:	1e63      	subs	r3, r4, #1
 800e9e6:	b2da      	uxtb	r2, r3
 800e9e8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9ea:	2a00      	cmp	r2, #0
 800e9ec:	d1f1      	bne.n	800e9d2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e9ee:	23ff      	movs	r3, #255	; 0xff
 800e9f0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e9f4:	f7fe fec0 	bl	800d778 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e9f8:	f7fe fe9c 	bl	800d734 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e9fc:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800ea00:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea02:	2c00      	cmp	r4, #0
 800ea04:	dd14      	ble.n	800ea30 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea06:	f105 0610 	add.w	r6, r5, #16
 800ea0a:	e003      	b.n	800ea14 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800ea0c:	1e63      	subs	r3, r4, #1
 800ea0e:	b2da      	uxtb	r2, r3
 800ea10:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea12:	b16a      	cbz	r2, 800ea30 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ea14:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea16:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ea18:	b153      	cbz	r3, 800ea30 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea1a:	f000 fd09 	bl	800f430 <xTaskRemoveFromEventList>
 800ea1e:	2800      	cmp	r0, #0
 800ea20:	d0f4      	beq.n	800ea0c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800ea22:	f000 fda1 	bl	800f568 <vTaskMissedYield>
				--cRxLock;
 800ea26:	1e63      	subs	r3, r4, #1
 800ea28:	b2da      	uxtb	r2, r3
 800ea2a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea2c:	2a00      	cmp	r2, #0
 800ea2e:	d1f1      	bne.n	800ea14 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800ea30:	23ff      	movs	r3, #255	; 0xff
 800ea32:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800ea36:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800ea3a:	f7fe be9d 	b.w	800d778 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800ea3e:	4622      	mov	r2, r4
 800ea40:	4631      	mov	r1, r6
 800ea42:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800ea46:	f000 fca9 	bl	800f39c <vTaskPlaceOnEventListRestricted>
 800ea4a:	e7b4      	b.n	800e9b6 <vQueueWaitForMessageRestricted+0x32>

0800ea4c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800ea4c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ea50:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800ea52:	f7fe fe6f 	bl	800d734 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800ea56:	4a34      	ldr	r2, [pc, #208]	; (800eb28 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800ea58:	4e34      	ldr	r6, [pc, #208]	; (800eb2c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800ea5a:	6813      	ldr	r3, [r2, #0]
 800ea5c:	3301      	adds	r3, #1
 800ea5e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800ea60:	6833      	ldr	r3, [r6, #0]
 800ea62:	2b00      	cmp	r3, #0
 800ea64:	d032      	beq.n	800eacc <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800ea66:	4c32      	ldr	r4, [pc, #200]	; (800eb30 <prvAddNewTaskToReadyList+0xe4>)
 800ea68:	6823      	ldr	r3, [r4, #0]
 800ea6a:	b33b      	cbz	r3, 800eabc <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800ea6c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800ea6e:	4f31      	ldr	r7, [pc, #196]	; (800eb34 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800ea70:	4a31      	ldr	r2, [pc, #196]	; (800eb38 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800ea72:	4932      	ldr	r1, [pc, #200]	; (800eb3c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800ea74:	6813      	ldr	r3, [r2, #0]
 800ea76:	3301      	adds	r3, #1
 800ea78:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800ea7a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800ea7c:	680b      	ldr	r3, [r1, #0]
 800ea7e:	4283      	cmp	r3, r0
 800ea80:	bf38      	it	cc
 800ea82:	6008      	strcc	r0, [r1, #0]
 800ea84:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800ea88:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800ea8c:	1d29      	adds	r1, r5, #4
 800ea8e:	f7fe fdb1 	bl	800d5f4 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800ea92:	f7fe fe71 	bl	800d778 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800ea96:	6823      	ldr	r3, [r4, #0]
 800ea98:	b173      	cbz	r3, 800eab8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800ea9a:	6832      	ldr	r2, [r6, #0]
 800ea9c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800ea9e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800eaa0:	429a      	cmp	r2, r3
 800eaa2:	d209      	bcs.n	800eab8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800eaa4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eaa8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eaac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eab0:	f3bf 8f4f 	dsb	sy
 800eab4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800eab8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800eabc:	6833      	ldr	r3, [r6, #0]
 800eabe:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800eac0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eac2:	4f1c      	ldr	r7, [pc, #112]	; (800eb34 <prvAddNewTaskToReadyList+0xe8>)
 800eac4:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800eac6:	bf98      	it	ls
 800eac8:	6035      	strls	r5, [r6, #0]
 800eaca:	e7d1      	b.n	800ea70 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800eacc:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800eace:	6813      	ldr	r3, [r2, #0]
 800ead0:	2b01      	cmp	r3, #1
 800ead2:	d003      	beq.n	800eadc <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800ead4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800ead6:	4f17      	ldr	r7, [pc, #92]	; (800eb34 <prvAddNewTaskToReadyList+0xe8>)
 800ead8:	4c15      	ldr	r4, [pc, #84]	; (800eb30 <prvAddNewTaskToReadyList+0xe4>)
 800eada:	e7c9      	b.n	800ea70 <prvAddNewTaskToReadyList+0x24>
 800eadc:	4f15      	ldr	r7, [pc, #84]	; (800eb34 <prvAddNewTaskToReadyList+0xe8>)
 800eade:	463c      	mov	r4, r7
 800eae0:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800eae4:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800eae6:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800eae8:	f7fe fd74 	bl	800d5d4 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800eaec:	45a0      	cmp	r8, r4
 800eaee:	d1f9      	bne.n	800eae4 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800eaf0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800eb54 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800eaf4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800eb58 <prvAddNewTaskToReadyList+0x10c>
 800eaf8:	4c0d      	ldr	r4, [pc, #52]	; (800eb30 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800eafa:	4648      	mov	r0, r9
 800eafc:	f7fe fd6a 	bl	800d5d4 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800eb00:	4640      	mov	r0, r8
 800eb02:	f7fe fd67 	bl	800d5d4 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800eb06:	480e      	ldr	r0, [pc, #56]	; (800eb40 <prvAddNewTaskToReadyList+0xf4>)
 800eb08:	f7fe fd64 	bl	800d5d4 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800eb0c:	480d      	ldr	r0, [pc, #52]	; (800eb44 <prvAddNewTaskToReadyList+0xf8>)
 800eb0e:	f7fe fd61 	bl	800d5d4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800eb12:	480d      	ldr	r0, [pc, #52]	; (800eb48 <prvAddNewTaskToReadyList+0xfc>)
 800eb14:	f7fe fd5e 	bl	800d5d4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800eb18:	4b0c      	ldr	r3, [pc, #48]	; (800eb4c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800eb1a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800eb1c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800eb20:	4b0b      	ldr	r3, [pc, #44]	; (800eb50 <prvAddNewTaskToReadyList+0x104>)
 800eb22:	f8c3 8000 	str.w	r8, [r3]
}
 800eb26:	e7a3      	b.n	800ea70 <prvAddNewTaskToReadyList+0x24>
 800eb28:	20012d64 	.word	0x20012d64
 800eb2c:	200128f8 	.word	0x200128f8
 800eb30:	20012dc0 	.word	0x20012dc0
 800eb34:	20012904 	.word	0x20012904
 800eb38:	20012d70 	.word	0x20012d70
 800eb3c:	20012d74 	.word	0x20012d74
 800eb40:	20012dac 	.word	0x20012dac
 800eb44:	20012dd8 	.word	0x20012dd8
 800eb48:	20012dc4 	.word	0x20012dc4
 800eb4c:	200128fc 	.word	0x200128fc
 800eb50:	20012900 	.word	0x20012900
 800eb54:	20012d78 	.word	0x20012d78
 800eb58:	20012d8c 	.word	0x20012d8c

0800eb5c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800eb5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800eb60:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800eb62:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800eb66:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800eb6a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800eb6c:	4606      	mov	r6, r0
 800eb6e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800eb70:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800eb72:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800eb74:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800eb76:	f01b fd12 	bl	802a59e <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800eb7a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800eb7c:	f1a9 0904 	sub.w	r9, r9, #4
 800eb80:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800eb82:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800eb86:	2d00      	cmp	r5, #0
 800eb88:	d079      	beq.n	800ec7e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eb8a:	782b      	ldrb	r3, [r5, #0]
 800eb8c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800eb90:	2b00      	cmp	r3, #0
 800eb92:	d03b      	beq.n	800ec0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eb94:	786b      	ldrb	r3, [r5, #1]
 800eb96:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800eb9a:	2b00      	cmp	r3, #0
 800eb9c:	d036      	beq.n	800ec0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eb9e:	78ab      	ldrb	r3, [r5, #2]
 800eba0:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800eba4:	b393      	cbz	r3, 800ec0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800eba6:	78eb      	ldrb	r3, [r5, #3]
 800eba8:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800ebac:	b373      	cbz	r3, 800ec0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ebae:	792b      	ldrb	r3, [r5, #4]
 800ebb0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800ebb4:	b353      	cbz	r3, 800ec0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ebb6:	796b      	ldrb	r3, [r5, #5]
 800ebb8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800ebbc:	b333      	cbz	r3, 800ec0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ebbe:	79ab      	ldrb	r3, [r5, #6]
 800ebc0:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800ebc4:	b313      	cbz	r3, 800ec0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ebc6:	79eb      	ldrb	r3, [r5, #7]
 800ebc8:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800ebcc:	b1f3      	cbz	r3, 800ec0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ebce:	7a2b      	ldrb	r3, [r5, #8]
 800ebd0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800ebd4:	b1d3      	cbz	r3, 800ec0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ebd6:	7a6b      	ldrb	r3, [r5, #9]
 800ebd8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800ebdc:	b1b3      	cbz	r3, 800ec0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ebde:	7aab      	ldrb	r3, [r5, #10]
 800ebe0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800ebe4:	b193      	cbz	r3, 800ec0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ebe6:	7aeb      	ldrb	r3, [r5, #11]
 800ebe8:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800ebec:	b173      	cbz	r3, 800ec0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ebee:	7b2b      	ldrb	r3, [r5, #12]
 800ebf0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800ebf4:	b153      	cbz	r3, 800ec0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ebf6:	7b6b      	ldrb	r3, [r5, #13]
 800ebf8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800ebfc:	b133      	cbz	r3, 800ec0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ebfe:	7bab      	ldrb	r3, [r5, #14]
 800ec00:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800ec04:	b113      	cbz	r3, 800ec0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ec06:	7beb      	ldrb	r3, [r5, #15]
 800ec08:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800ec0c:	2300      	movs	r3, #0
 800ec0e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800ec12:	9d08      	ldr	r5, [sp, #32]
 800ec14:	2d37      	cmp	r5, #55	; 0x37
 800ec16:	bf28      	it	cs
 800ec18:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800ec1a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800ec1e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800ec20:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800ec22:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800ec24:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800ec28:	f7fe fce0 	bl	800d5ec <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ec2c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800ec30:	f104 0018 	add.w	r0, r4, #24
 800ec34:	f7fe fcda 	bl	800d5ec <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ec38:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800ec3a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800ec3e:	4651      	mov	r1, sl
 800ec40:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800ec42:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800ec44:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800ec46:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800ec4a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800ec4e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800ec52:	f01b fca4 	bl	802a59e <memset>
 800ec56:	4b0b      	ldr	r3, [pc, #44]	; (800ec84 <prvInitialiseNewTask.constprop.0+0x128>)
 800ec58:	65e3      	str	r3, [r4, #92]	; 0x5c
 800ec5a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800ec5e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800ec60:	463a      	mov	r2, r7
 800ec62:	4631      	mov	r1, r6
 800ec64:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800ec66:	6625      	str	r5, [r4, #96]	; 0x60
 800ec68:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800ec6a:	f7fe fd3d 	bl	800d6e8 <pxPortInitialiseStack>
 800ec6e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800ec70:	f1b8 0f00 	cmp.w	r8, #0
 800ec74:	d001      	beq.n	800ec7a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800ec76:	f8c8 4000 	str.w	r4, [r8]
}
 800ec7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800ec7e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800ec82:	e7c6      	b.n	800ec12 <prvInitialiseNewTask.constprop.0+0xb6>
 800ec84:	20013888 	.word	0x20013888

0800ec88 <prvIdleTask>:
{
 800ec88:	b580      	push	{r7, lr}
 800ec8a:	4d23      	ldr	r5, [pc, #140]	; (800ed18 <prvIdleTask+0x90>)
 800ec8c:	4f23      	ldr	r7, [pc, #140]	; (800ed1c <prvIdleTask+0x94>)
 800ec8e:	4e24      	ldr	r6, [pc, #144]	; (800ed20 <prvIdleTask+0x98>)
 800ec90:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800ed24 <prvIdleTask+0x9c>
				taskYIELD();
 800ec94:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800ec98:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800ec9c:	682b      	ldr	r3, [r5, #0]
 800ec9e:	b35b      	cbz	r3, 800ecf8 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800eca0:	f7fe fd48 	bl	800d734 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eca4:	68fb      	ldr	r3, [r7, #12]
 800eca6:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800eca8:	1d20      	adds	r0, r4, #4
 800ecaa:	f7fe fccb 	bl	800d644 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800ecae:	6833      	ldr	r3, [r6, #0]
 800ecb0:	3b01      	subs	r3, #1
 800ecb2:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800ecb4:	682b      	ldr	r3, [r5, #0]
 800ecb6:	3b01      	subs	r3, #1
 800ecb8:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800ecba:	f7fe fd5d 	bl	800d778 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800ecbe:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800ecc2:	f01b fcb5 	bl	802a630 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800ecc6:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800ecca:	b163      	cbz	r3, 800ece6 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800eccc:	2b01      	cmp	r3, #1
 800ecce:	d01e      	beq.n	800ed0e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800ecd0:	2b02      	cmp	r3, #2
 800ecd2:	d0e3      	beq.n	800ec9c <prvIdleTask+0x14>
 800ecd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecd8:	f383 8811 	msr	BASEPRI, r3
 800ecdc:	f3bf 8f6f 	isb	sy
 800ece0:	f3bf 8f4f 	dsb	sy
 800ece4:	e7fe      	b.n	800ece4 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800ece6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800ece8:	f7fe fc10 	bl	800d50c <vPortFree>
				vPortFree( pxTCB );
 800ecec:	4620      	mov	r0, r4
 800ecee:	f7fe fc0d 	bl	800d50c <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800ecf2:	682b      	ldr	r3, [r5, #0]
 800ecf4:	2b00      	cmp	r3, #0
 800ecf6:	d1d3      	bne.n	800eca0 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800ecf8:	f8d8 3000 	ldr.w	r3, [r8]
 800ecfc:	2b01      	cmp	r3, #1
 800ecfe:	d9cd      	bls.n	800ec9c <prvIdleTask+0x14>
				taskYIELD();
 800ed00:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800ed04:	f3bf 8f4f 	dsb	sy
 800ed08:	f3bf 8f6f 	isb	sy
 800ed0c:	e7c6      	b.n	800ec9c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800ed0e:	4620      	mov	r0, r4
 800ed10:	f7fe fbfc 	bl	800d50c <vPortFree>
 800ed14:	e7c2      	b.n	800ec9c <prvIdleTask+0x14>
 800ed16:	bf00      	nop
 800ed18:	20012d68 	.word	0x20012d68
 800ed1c:	20012dd8 	.word	0x20012dd8
 800ed20:	20012d64 	.word	0x20012d64
 800ed24:	20012904 	.word	0x20012904

0800ed28 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800ed28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800ed2c:	4b47      	ldr	r3, [pc, #284]	; (800ee4c <xTaskIncrementTick.part.0+0x124>)
 800ed2e:	681e      	ldr	r6, [r3, #0]
 800ed30:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800ed32:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800ed34:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800ed36:	2e00      	cmp	r6, #0
 800ed38:	d040      	beq.n	800edbc <xTaskIncrementTick.part.0+0x94>
 800ed3a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800ee60 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800ed3e:	f8db 3000 	ldr.w	r3, [fp]
 800ed42:	429e      	cmp	r6, r3
 800ed44:	d347      	bcc.n	800edd6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ed46:	4f42      	ldr	r7, [pc, #264]	; (800ee50 <xTaskIncrementTick.part.0+0x128>)
 800ed48:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800ee64 <xTaskIncrementTick.part.0+0x13c>
 800ed4c:	683b      	ldr	r3, [r7, #0]
 800ed4e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800ee68 <xTaskIncrementTick.part.0+0x140>
 800ed52:	681d      	ldr	r5, [r3, #0]
 800ed54:	2d00      	cmp	r5, #0
 800ed56:	d073      	beq.n	800ee40 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800ed58:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800ee6c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800ed5c:	2500      	movs	r5, #0
 800ed5e:	e022      	b.n	800eda6 <xTaskIncrementTick.part.0+0x7e>
 800ed60:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ed62:	f7fe fc6f 	bl	800d644 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800ed66:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800ed68:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800ed6a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800ed6e:	b113      	cbz	r3, 800ed76 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800ed70:	f7fe fc68 	bl	800d644 <uxListRemove>
 800ed74:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800ed76:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ed78:	f8d8 2000 	ldr.w	r2, [r8]
 800ed7c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800ed80:	4293      	cmp	r3, r2
 800ed82:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800ed86:	bf88      	it	hi
 800ed88:	f8c8 3000 	strhi.w	r3, [r8]
 800ed8c:	f7fe fc32 	bl	800d5f4 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800ed90:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ed94:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800ed96:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ed98:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ed9a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800ed9c:	4291      	cmp	r1, r2
 800ed9e:	bf28      	it	cs
 800eda0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800eda2:	2b00      	cmp	r3, #0
 800eda4:	d04c      	beq.n	800ee40 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eda6:	683b      	ldr	r3, [r7, #0]
 800eda8:	68db      	ldr	r3, [r3, #12]
 800edaa:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800edac:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800edae:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800edb0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800edb2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800edb4:	d2d4      	bcs.n	800ed60 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800edb6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800edba:	e011      	b.n	800ede0 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800edbc:	4b24      	ldr	r3, [pc, #144]	; (800ee50 <xTaskIncrementTick.part.0+0x128>)
 800edbe:	681a      	ldr	r2, [r3, #0]
 800edc0:	6812      	ldr	r2, [r2, #0]
 800edc2:	b30a      	cbz	r2, 800ee08 <xTaskIncrementTick.part.0+0xe0>
 800edc4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edc8:	f383 8811 	msr	BASEPRI, r3
 800edcc:	f3bf 8f6f 	isb	sy
 800edd0:	f3bf 8f4f 	dsb	sy
 800edd4:	e7fe      	b.n	800edd4 <xTaskIncrementTick.part.0+0xac>
 800edd6:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800ee64 <xTaskIncrementTick.part.0+0x13c>
 800edda:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800ee68 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800edde:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800ede0:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800ede4:	491b      	ldr	r1, [pc, #108]	; (800ee54 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800ede6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ede8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800edec:	009b      	lsls	r3, r3, #2
 800edee:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800edf2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800edf4:	2a02      	cmp	r2, #2
 800edf6:	bf28      	it	cs
 800edf8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800edfa:	2b00      	cmp	r3, #0
}
 800edfc:	bf0c      	ite	eq
 800edfe:	4628      	moveq	r0, r5
 800ee00:	2001      	movne	r0, #1
 800ee02:	b003      	add	sp, #12
 800ee04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800ee08:	4a13      	ldr	r2, [pc, #76]	; (800ee58 <xTaskIncrementTick.part.0+0x130>)
 800ee0a:	6818      	ldr	r0, [r3, #0]
 800ee0c:	6811      	ldr	r1, [r2, #0]
 800ee0e:	6019      	str	r1, [r3, #0]
 800ee10:	4912      	ldr	r1, [pc, #72]	; (800ee5c <xTaskIncrementTick.part.0+0x134>)
 800ee12:	6010      	str	r0, [r2, #0]
 800ee14:	680a      	ldr	r2, [r1, #0]
 800ee16:	3201      	adds	r2, #1
 800ee18:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ee1a:	681a      	ldr	r2, [r3, #0]
 800ee1c:	6812      	ldr	r2, [r2, #0]
 800ee1e:	b932      	cbnz	r2, 800ee2e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800ee20:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800ee60 <xTaskIncrementTick.part.0+0x138>
 800ee24:	f04f 33ff 	mov.w	r3, #4294967295
 800ee28:	f8cb 3000 	str.w	r3, [fp]
 800ee2c:	e787      	b.n	800ed3e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ee2e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ee30:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800ee60 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ee34:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ee36:	68db      	ldr	r3, [r3, #12]
 800ee38:	685b      	ldr	r3, [r3, #4]
 800ee3a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800ee3e:	e77e      	b.n	800ed3e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ee40:	f04f 33ff 	mov.w	r3, #4294967295
 800ee44:	f8cb 3000 	str.w	r3, [fp]
					break;
 800ee48:	e7ca      	b.n	800ede0 <xTaskIncrementTick.part.0+0xb8>
 800ee4a:	bf00      	nop
 800ee4c:	20012dec 	.word	0x20012dec
 800ee50:	200128fc 	.word	0x200128fc
 800ee54:	20012df0 	.word	0x20012df0
 800ee58:	20012900 	.word	0x20012900
 800ee5c:	20012da4 	.word	0x20012da4
 800ee60:	20012da0 	.word	0x20012da0
 800ee64:	20012904 	.word	0x20012904
 800ee68:	200128f8 	.word	0x200128f8
 800ee6c:	20012d74 	.word	0x20012d74

0800ee70 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800ee70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800ee74:	4d41      	ldr	r5, [pc, #260]	; (800ef7c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800ee76:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800ee78:	f7fe fc5c 	bl	800d734 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800ee7c:	682b      	ldr	r3, [r5, #0]
 800ee7e:	3b01      	subs	r3, #1
 800ee80:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ee82:	682b      	ldr	r3, [r5, #0]
 800ee84:	2b00      	cmp	r3, #0
 800ee86:	d161      	bne.n	800ef4c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800ee88:	4b3d      	ldr	r3, [pc, #244]	; (800ef80 <xTaskResumeAll.part.0+0x110>)
 800ee8a:	681b      	ldr	r3, [r3, #0]
 800ee8c:	2b00      	cmp	r3, #0
 800ee8e:	d05d      	beq.n	800ef4c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ee90:	4e3c      	ldr	r6, [pc, #240]	; (800ef84 <xTaskResumeAll.part.0+0x114>)
 800ee92:	6833      	ldr	r3, [r6, #0]
 800ee94:	2b00      	cmp	r3, #0
 800ee96:	d06e      	beq.n	800ef76 <xTaskResumeAll.part.0+0x106>
 800ee98:	4f3b      	ldr	r7, [pc, #236]	; (800ef88 <xTaskResumeAll.part.0+0x118>)
 800ee9a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800ef98 <xTaskResumeAll.part.0+0x128>
 800ee9e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800ef9c <xTaskResumeAll.part.0+0x12c>
 800eea2:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800efa0 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eea6:	68f3      	ldr	r3, [r6, #12]
 800eea8:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800eeaa:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800eeae:	f104 0018 	add.w	r0, r4, #24
 800eeb2:	f7fe fbc7 	bl	800d644 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800eeb6:	4658      	mov	r0, fp
 800eeb8:	f7fe fbc4 	bl	800d644 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800eebc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800eebe:	683a      	ldr	r2, [r7, #0]
 800eec0:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800eec4:	4293      	cmp	r3, r2
 800eec6:	4659      	mov	r1, fp
 800eec8:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800eecc:	bf88      	it	hi
 800eece:	603b      	strhi	r3, [r7, #0]
 800eed0:	f7fe fb90 	bl	800d5f4 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800eed4:	f8d8 3000 	ldr.w	r3, [r8]
 800eed8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800eeda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eedc:	429a      	cmp	r2, r3
 800eede:	d33d      	bcc.n	800ef5c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800eee0:	2301      	movs	r3, #1
 800eee2:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800eee6:	6833      	ldr	r3, [r6, #0]
 800eee8:	2b00      	cmp	r3, #0
 800eeea:	d1dc      	bne.n	800eea6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800eeec:	4b27      	ldr	r3, [pc, #156]	; (800ef8c <xTaskResumeAll.part.0+0x11c>)
 800eeee:	681a      	ldr	r2, [r3, #0]
 800eef0:	6812      	ldr	r2, [r2, #0]
 800eef2:	2a00      	cmp	r2, #0
 800eef4:	d03a      	beq.n	800ef6c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eef6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800eef8:	4b25      	ldr	r3, [pc, #148]	; (800ef90 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eefa:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800eefc:	68d2      	ldr	r2, [r2, #12]
 800eefe:	6852      	ldr	r2, [r2, #4]
 800ef00:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800ef02:	4e24      	ldr	r6, [pc, #144]	; (800ef94 <xTaskResumeAll.part.0+0x124>)
 800ef04:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800ef06:	b194      	cbz	r4, 800ef2e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800ef08:	2701      	movs	r7, #1
 800ef0a:	e006      	b.n	800ef1a <xTaskResumeAll.part.0+0xaa>
 800ef0c:	f7ff ff0c 	bl	800ed28 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800ef10:	b108      	cbz	r0, 800ef16 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800ef12:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800ef16:	3c01      	subs	r4, #1
 800ef18:	d008      	beq.n	800ef2c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ef1a:	682b      	ldr	r3, [r5, #0]
 800ef1c:	2b00      	cmp	r3, #0
 800ef1e:	d0f5      	beq.n	800ef0c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800ef20:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800ef22:	3c01      	subs	r4, #1
		++xPendedTicks;
 800ef24:	f103 0301 	add.w	r3, r3, #1
 800ef28:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800ef2a:	d1f6      	bne.n	800ef1a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800ef2c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800ef2e:	f8da 3000 	ldr.w	r3, [sl]
 800ef32:	b15b      	cbz	r3, 800ef4c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800ef34:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ef38:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ef3c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ef40:	f3bf 8f4f 	dsb	sy
 800ef44:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800ef48:	2001      	movs	r0, #1
 800ef4a:	e000      	b.n	800ef4e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800ef4c:	2000      	movs	r0, #0
 800ef4e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800ef50:	f7fe fc12 	bl	800d778 <vPortExitCritical>
}
 800ef54:	9801      	ldr	r0, [sp, #4]
 800ef56:	b003      	add	sp, #12
 800ef58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ef5c:	6833      	ldr	r3, [r6, #0]
 800ef5e:	2b00      	cmp	r3, #0
 800ef60:	d1a1      	bne.n	800eea6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ef62:	4b0a      	ldr	r3, [pc, #40]	; (800ef8c <xTaskResumeAll.part.0+0x11c>)
 800ef64:	681a      	ldr	r2, [r3, #0]
 800ef66:	6812      	ldr	r2, [r2, #0]
 800ef68:	2a00      	cmp	r2, #0
 800ef6a:	d1c4      	bne.n	800eef6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800ef6c:	4b08      	ldr	r3, [pc, #32]	; (800ef90 <xTaskResumeAll.part.0+0x120>)
 800ef6e:	f04f 32ff 	mov.w	r2, #4294967295
 800ef72:	601a      	str	r2, [r3, #0]
 800ef74:	e7c5      	b.n	800ef02 <xTaskResumeAll.part.0+0x92>
 800ef76:	f8df a028 	ldr.w	sl, [pc, #40]	; 800efa0 <xTaskResumeAll.part.0+0x130>
 800ef7a:	e7c2      	b.n	800ef02 <xTaskResumeAll.part.0+0x92>
 800ef7c:	20012d6c 	.word	0x20012d6c
 800ef80:	20012d64 	.word	0x20012d64
 800ef84:	20012dac 	.word	0x20012dac
 800ef88:	20012d74 	.word	0x20012d74
 800ef8c:	200128fc 	.word	0x200128fc
 800ef90:	20012da0 	.word	0x20012da0
 800ef94:	20012da8 	.word	0x20012da8
 800ef98:	20012904 	.word	0x20012904
 800ef9c:	200128f8 	.word	0x200128f8
 800efa0:	20012df0 	.word	0x20012df0

0800efa4 <xTaskCreateStatic>:
	{
 800efa4:	b530      	push	{r4, r5, lr}
 800efa6:	b087      	sub	sp, #28
 800efa8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800efaa:	b1c4      	cbz	r4, 800efde <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800efac:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800efae:	b16d      	cbz	r5, 800efcc <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800efb0:	25ac      	movs	r5, #172	; 0xac
 800efb2:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800efb4:	9d05      	ldr	r5, [sp, #20]
 800efb6:	2dac      	cmp	r5, #172	; 0xac
 800efb8:	d01a      	beq.n	800eff0 <xTaskCreateStatic+0x4c>
 800efba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efbe:	f383 8811 	msr	BASEPRI, r3
 800efc2:	f3bf 8f6f 	isb	sy
 800efc6:	f3bf 8f4f 	dsb	sy
 800efca:	e7fe      	b.n	800efca <xTaskCreateStatic+0x26>
 800efcc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efd0:	f383 8811 	msr	BASEPRI, r3
 800efd4:	f3bf 8f6f 	isb	sy
 800efd8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800efdc:	e7fe      	b.n	800efdc <xTaskCreateStatic+0x38>
 800efde:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efe2:	f383 8811 	msr	BASEPRI, r3
 800efe6:	f3bf 8f6f 	isb	sy
 800efea:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800efee:	e7fe      	b.n	800efee <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800eff0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800eff2:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800eff4:	2402      	movs	r4, #2
 800eff6:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800effa:	ac04      	add	r4, sp, #16
 800effc:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800f000:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f002:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f004:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f006:	f7ff fda9 	bl	800eb5c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f00a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800f00c:	f7ff fd1e 	bl	800ea4c <prvAddNewTaskToReadyList>
	}
 800f010:	9804      	ldr	r0, [sp, #16]
 800f012:	b007      	add	sp, #28
 800f014:	bd30      	pop	{r4, r5, pc}
 800f016:	bf00      	nop

0800f018 <xTaskCreate>:
	{
 800f018:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f01c:	4607      	mov	r7, r0
 800f01e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f020:	0090      	lsls	r0, r2, #2
	{
 800f022:	4615      	mov	r5, r2
 800f024:	4688      	mov	r8, r1
 800f026:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f028:	f7fe f9b4 	bl	800d394 <pvPortMalloc>
			if( pxStack != NULL )
 800f02c:	b1d8      	cbz	r0, 800f066 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800f02e:	4604      	mov	r4, r0
 800f030:	20ac      	movs	r0, #172	; 0xac
 800f032:	f7fe f9af 	bl	800d394 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800f036:	4606      	mov	r6, r0
 800f038:	b1d0      	cbz	r0, 800f070 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800f03a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800f03c:	2400      	movs	r4, #0
 800f03e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800f042:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800f044:	9401      	str	r4, [sp, #4]
 800f046:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800f048:	9602      	str	r6, [sp, #8]
 800f04a:	464b      	mov	r3, r9
 800f04c:	462a      	mov	r2, r5
 800f04e:	4641      	mov	r1, r8
 800f050:	4638      	mov	r0, r7
 800f052:	9400      	str	r4, [sp, #0]
 800f054:	f7ff fd82 	bl	800eb5c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f058:	4630      	mov	r0, r6
 800f05a:	f7ff fcf7 	bl	800ea4c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800f05e:	2001      	movs	r0, #1
	}
 800f060:	b005      	add	sp, #20
 800f062:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f066:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800f06a:	b005      	add	sp, #20
 800f06c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800f070:	4620      	mov	r0, r4
 800f072:	f7fe fa4b 	bl	800d50c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f076:	f04f 30ff 	mov.w	r0, #4294967295
 800f07a:	e7f1      	b.n	800f060 <xTaskCreate+0x48>

0800f07c <vTaskDelay>:
	{
 800f07c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800f07e:	b950      	cbnz	r0, 800f096 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800f080:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f084:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f088:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f08c:	f3bf 8f4f 	dsb	sy
 800f090:	f3bf 8f6f 	isb	sy
	}
 800f094:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800f096:	4d1e      	ldr	r5, [pc, #120]	; (800f110 <vTaskDelay+0x94>)
 800f098:	682b      	ldr	r3, [r5, #0]
 800f09a:	b143      	cbz	r3, 800f0ae <vTaskDelay+0x32>
 800f09c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0a0:	f383 8811 	msr	BASEPRI, r3
 800f0a4:	f3bf 8f6f 	isb	sy
 800f0a8:	f3bf 8f4f 	dsb	sy
 800f0ac:	e7fe      	b.n	800f0ac <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800f0ae:	682b      	ldr	r3, [r5, #0]
 800f0b0:	3301      	adds	r3, #1
 800f0b2:	4604      	mov	r4, r0
 800f0b4:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800f0b6:	4b17      	ldr	r3, [pc, #92]	; (800f114 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f0b8:	4e17      	ldr	r6, [pc, #92]	; (800f118 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800f0ba:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f0bc:	6830      	ldr	r0, [r6, #0]
 800f0be:	3004      	adds	r0, #4
 800f0c0:	f7fe fac0 	bl	800d644 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f0c4:	6833      	ldr	r3, [r6, #0]
 800f0c6:	19e4      	adds	r4, r4, r7
 800f0c8:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800f0ca:	d310      	bcc.n	800f0ee <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f0cc:	4b13      	ldr	r3, [pc, #76]	; (800f11c <vTaskDelay+0xa0>)
 800f0ce:	6818      	ldr	r0, [r3, #0]
 800f0d0:	6831      	ldr	r1, [r6, #0]
 800f0d2:	3104      	adds	r1, #4
 800f0d4:	f7fe fa9e 	bl	800d614 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800f0d8:	682b      	ldr	r3, [r5, #0]
 800f0da:	b9a3      	cbnz	r3, 800f106 <vTaskDelay+0x8a>
 800f0dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0e0:	f383 8811 	msr	BASEPRI, r3
 800f0e4:	f3bf 8f6f 	isb	sy
 800f0e8:	f3bf 8f4f 	dsb	sy
 800f0ec:	e7fe      	b.n	800f0ec <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f0ee:	4b0c      	ldr	r3, [pc, #48]	; (800f120 <vTaskDelay+0xa4>)
 800f0f0:	6818      	ldr	r0, [r3, #0]
 800f0f2:	6831      	ldr	r1, [r6, #0]
 800f0f4:	3104      	adds	r1, #4
 800f0f6:	f7fe fa8d 	bl	800d614 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800f0fa:	4b0a      	ldr	r3, [pc, #40]	; (800f124 <vTaskDelay+0xa8>)
 800f0fc:	681a      	ldr	r2, [r3, #0]
 800f0fe:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800f100:	bf38      	it	cc
 800f102:	601c      	strcc	r4, [r3, #0]
 800f104:	e7e8      	b.n	800f0d8 <vTaskDelay+0x5c>
 800f106:	f7ff feb3 	bl	800ee70 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800f10a:	2800      	cmp	r0, #0
 800f10c:	d0b8      	beq.n	800f080 <vTaskDelay+0x4>
	}
 800f10e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f110:	20012d6c 	.word	0x20012d6c
 800f114:	20012dec 	.word	0x20012dec
 800f118:	200128f8 	.word	0x200128f8
 800f11c:	20012900 	.word	0x20012900
 800f120:	200128fc 	.word	0x200128fc
 800f124:	20012da0 	.word	0x20012da0

0800f128 <vTaskStartScheduler>:
{
 800f128:	b530      	push	{r4, r5, lr}
 800f12a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f12c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800f12e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f130:	a906      	add	r1, sp, #24
 800f132:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800f134:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f138:	f7fe f90e 	bl	800d358 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800f13c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800f140:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800f142:	b1bb      	cbz	r3, 800f174 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800f144:	b16d      	cbz	r5, 800f162 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f146:	21ac      	movs	r1, #172	; 0xac
 800f148:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800f14a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800f14c:	29ac      	cmp	r1, #172	; 0xac
 800f14e:	d01a      	beq.n	800f186 <vTaskStartScheduler+0x5e>
 800f150:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f154:	f383 8811 	msr	BASEPRI, r3
 800f158:	f3bf 8f6f 	isb	sy
 800f15c:	f3bf 8f4f 	dsb	sy
 800f160:	e7fe      	b.n	800f160 <vTaskStartScheduler+0x38>
 800f162:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f166:	f383 8811 	msr	BASEPRI, r3
 800f16a:	f3bf 8f6f 	isb	sy
 800f16e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f172:	e7fe      	b.n	800f172 <vTaskStartScheduler+0x4a>
 800f174:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f178:	f383 8811 	msr	BASEPRI, r3
 800f17c:	f3bf 8f6f 	isb	sy
 800f180:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f184:	e7fe      	b.n	800f184 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f186:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f188:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f18a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f18c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f190:	4623      	mov	r3, r4
 800f192:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800f196:	491b      	ldr	r1, [pc, #108]	; (800f204 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f198:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f19a:	9400      	str	r4, [sp, #0]
 800f19c:	481a      	ldr	r0, [pc, #104]	; (800f208 <vTaskStartScheduler+0xe0>)
 800f19e:	f7ff fcdd 	bl	800eb5c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f1a2:	4628      	mov	r0, r5
 800f1a4:	f7ff fc52 	bl	800ea4c <prvAddNewTaskToReadyList>
		return xReturn;
 800f1a8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800f1aa:	b1eb      	cbz	r3, 800f1e8 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800f1ac:	f000 fc6e 	bl	800fa8c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800f1b0:	2801      	cmp	r0, #1
 800f1b2:	d11b      	bne.n	800f1ec <vTaskStartScheduler+0xc4>
 800f1b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1b8:	f383 8811 	msr	BASEPRI, r3
 800f1bc:	f3bf 8f6f 	isb	sy
 800f1c0:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f1c4:	4b11      	ldr	r3, [pc, #68]	; (800f20c <vTaskStartScheduler+0xe4>)
 800f1c6:	4a12      	ldr	r2, [pc, #72]	; (800f210 <vTaskStartScheduler+0xe8>)
 800f1c8:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800f1ca:	4912      	ldr	r1, [pc, #72]	; (800f214 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f1cc:	3358      	adds	r3, #88	; 0x58
 800f1ce:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800f1d0:	4a11      	ldr	r2, [pc, #68]	; (800f218 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f1d2:	4b12      	ldr	r3, [pc, #72]	; (800f21c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800f1d4:	f04f 35ff 	mov.w	r5, #4294967295
 800f1d8:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800f1da:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f1dc:	601c      	str	r4, [r3, #0]
}
 800f1de:	b00b      	add	sp, #44	; 0x2c
 800f1e0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800f1e4:	f7fe bb38 	b.w	800d858 <xPortStartScheduler>
}
 800f1e8:	b00b      	add	sp, #44	; 0x2c
 800f1ea:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800f1ec:	3001      	adds	r0, #1
 800f1ee:	d1fb      	bne.n	800f1e8 <vTaskStartScheduler+0xc0>
 800f1f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1f4:	f383 8811 	msr	BASEPRI, r3
 800f1f8:	f3bf 8f6f 	isb	sy
 800f1fc:	f3bf 8f4f 	dsb	sy
 800f200:	e7fe      	b.n	800f200 <vTaskStartScheduler+0xd8>
 800f202:	bf00      	nop
 800f204:	0802e1dc 	.word	0x0802e1dc
 800f208:	0800ec89 	.word	0x0800ec89
 800f20c:	200128f8 	.word	0x200128f8
 800f210:	20000160 	.word	0x20000160
 800f214:	20012da0 	.word	0x20012da0
 800f218:	20012dc0 	.word	0x20012dc0
 800f21c:	20012dec 	.word	0x20012dec

0800f220 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800f220:	4a02      	ldr	r2, [pc, #8]	; (800f22c <vTaskSuspendAll+0xc>)
 800f222:	6813      	ldr	r3, [r2, #0]
 800f224:	3301      	adds	r3, #1
 800f226:	6013      	str	r3, [r2, #0]
}
 800f228:	4770      	bx	lr
 800f22a:	bf00      	nop
 800f22c:	20012d6c 	.word	0x20012d6c

0800f230 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800f230:	4b06      	ldr	r3, [pc, #24]	; (800f24c <xTaskResumeAll+0x1c>)
 800f232:	681b      	ldr	r3, [r3, #0]
 800f234:	b943      	cbnz	r3, 800f248 <xTaskResumeAll+0x18>
 800f236:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f23a:	f383 8811 	msr	BASEPRI, r3
 800f23e:	f3bf 8f6f 	isb	sy
 800f242:	f3bf 8f4f 	dsb	sy
 800f246:	e7fe      	b.n	800f246 <xTaskResumeAll+0x16>
 800f248:	f7ff be12 	b.w	800ee70 <xTaskResumeAll.part.0>
 800f24c:	20012d6c 	.word	0x20012d6c

0800f250 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800f250:	4b01      	ldr	r3, [pc, #4]	; (800f258 <xTaskGetTickCount+0x8>)
 800f252:	6818      	ldr	r0, [r3, #0]
}
 800f254:	4770      	bx	lr
 800f256:	bf00      	nop
 800f258:	20012dec 	.word	0x20012dec

0800f25c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f25c:	4b05      	ldr	r3, [pc, #20]	; (800f274 <xTaskIncrementTick+0x18>)
 800f25e:	681b      	ldr	r3, [r3, #0]
 800f260:	b90b      	cbnz	r3, 800f266 <xTaskIncrementTick+0xa>
 800f262:	f7ff bd61 	b.w	800ed28 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800f266:	4a04      	ldr	r2, [pc, #16]	; (800f278 <xTaskIncrementTick+0x1c>)
 800f268:	6813      	ldr	r3, [r2, #0]
 800f26a:	3301      	adds	r3, #1
}
 800f26c:	2000      	movs	r0, #0
		++xPendedTicks;
 800f26e:	6013      	str	r3, [r2, #0]
}
 800f270:	4770      	bx	lr
 800f272:	bf00      	nop
 800f274:	20012d6c 	.word	0x20012d6c
 800f278:	20012da8 	.word	0x20012da8

0800f27c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800f27c:	4b1f      	ldr	r3, [pc, #124]	; (800f2fc <vTaskSwitchContext+0x80>)
 800f27e:	681b      	ldr	r3, [r3, #0]
 800f280:	b11b      	cbz	r3, 800f28a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800f282:	4b1f      	ldr	r3, [pc, #124]	; (800f300 <vTaskSwitchContext+0x84>)
 800f284:	2201      	movs	r2, #1
 800f286:	601a      	str	r2, [r3, #0]
 800f288:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800f28a:	4a1d      	ldr	r2, [pc, #116]	; (800f300 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f28c:	491d      	ldr	r1, [pc, #116]	; (800f304 <vTaskSwitchContext+0x88>)
{
 800f28e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f290:	4c1d      	ldr	r4, [pc, #116]	; (800f308 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800f292:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f294:	6823      	ldr	r3, [r4, #0]
 800f296:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800f29a:	0092      	lsls	r2, r2, #2
 800f29c:	0098      	lsls	r0, r3, #2
 800f29e:	588a      	ldr	r2, [r1, r2]
 800f2a0:	b942      	cbnz	r2, 800f2b4 <vTaskSwitchContext+0x38>
 800f2a2:	b313      	cbz	r3, 800f2ea <vTaskSwitchContext+0x6e>
 800f2a4:	3b01      	subs	r3, #1
 800f2a6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800f2aa:	0098      	lsls	r0, r3, #2
 800f2ac:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800f2b0:	2a00      	cmp	r2, #0
 800f2b2:	d0f6      	beq.n	800f2a2 <vTaskSwitchContext+0x26>
 800f2b4:	4418      	add	r0, r3
 800f2b6:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800f2ba:	4662      	mov	r2, ip
 800f2bc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800f2c0:	6849      	ldr	r1, [r1, #4]
 800f2c2:	f8cc 1004 	str.w	r1, [ip, #4]
 800f2c6:	3208      	adds	r2, #8
 800f2c8:	4291      	cmp	r1, r2
 800f2ca:	bf08      	it	eq
 800f2cc:	6849      	ldreq	r1, [r1, #4]
 800f2ce:	4a0f      	ldr	r2, [pc, #60]	; (800f30c <vTaskSwitchContext+0x90>)
 800f2d0:	bf08      	it	eq
 800f2d2:	f8cc 1004 	streq.w	r1, [ip, #4]
 800f2d6:	68c9      	ldr	r1, [r1, #12]
 800f2d8:	6011      	str	r1, [r2, #0]
 800f2da:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f2dc:	6813      	ldr	r3, [r2, #0]
 800f2de:	4a0c      	ldr	r2, [pc, #48]	; (800f310 <vTaskSwitchContext+0x94>)
}
 800f2e0:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f2e4:	3358      	adds	r3, #88	; 0x58
 800f2e6:	6013      	str	r3, [r2, #0]
}
 800f2e8:	4770      	bx	lr
 800f2ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f2ee:	f383 8811 	msr	BASEPRI, r3
 800f2f2:	f3bf 8f6f 	isb	sy
 800f2f6:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f2fa:	e7fe      	b.n	800f2fa <vTaskSwitchContext+0x7e>
 800f2fc:	20012d6c 	.word	0x20012d6c
 800f300:	20012df0 	.word	0x20012df0
 800f304:	20012904 	.word	0x20012904
 800f308:	20012d74 	.word	0x20012d74
 800f30c:	200128f8 	.word	0x200128f8
 800f310:	20000160 	.word	0x20000160

0800f314 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800f314:	b1d0      	cbz	r0, 800f34c <vTaskPlaceOnEventList+0x38>
{
 800f316:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f318:	4d1a      	ldr	r5, [pc, #104]	; (800f384 <vTaskPlaceOnEventList+0x70>)
 800f31a:	460c      	mov	r4, r1
 800f31c:	6829      	ldr	r1, [r5, #0]
 800f31e:	3118      	adds	r1, #24
 800f320:	f7fe f978 	bl	800d614 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f324:	4b18      	ldr	r3, [pc, #96]	; (800f388 <vTaskPlaceOnEventList+0x74>)
 800f326:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f328:	6828      	ldr	r0, [r5, #0]
 800f32a:	3004      	adds	r0, #4
 800f32c:	f7fe f98a 	bl	800d644 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800f330:	1c63      	adds	r3, r4, #1
 800f332:	d014      	beq.n	800f35e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f334:	682b      	ldr	r3, [r5, #0]
 800f336:	19a4      	adds	r4, r4, r6
 800f338:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f33a:	d317      	bcc.n	800f36c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f33c:	4b13      	ldr	r3, [pc, #76]	; (800f38c <vTaskPlaceOnEventList+0x78>)
 800f33e:	6818      	ldr	r0, [r3, #0]
 800f340:	6829      	ldr	r1, [r5, #0]
}
 800f342:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f346:	3104      	adds	r1, #4
 800f348:	f7fe b964 	b.w	800d614 <vListInsert>
 800f34c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f350:	f383 8811 	msr	BASEPRI, r3
 800f354:	f3bf 8f6f 	isb	sy
 800f358:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800f35c:	e7fe      	b.n	800f35c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f35e:	6829      	ldr	r1, [r5, #0]
 800f360:	480b      	ldr	r0, [pc, #44]	; (800f390 <vTaskPlaceOnEventList+0x7c>)
}
 800f362:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f366:	3104      	adds	r1, #4
 800f368:	f7fe b944 	b.w	800d5f4 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f36c:	4b09      	ldr	r3, [pc, #36]	; (800f394 <vTaskPlaceOnEventList+0x80>)
 800f36e:	6818      	ldr	r0, [r3, #0]
 800f370:	6829      	ldr	r1, [r5, #0]
 800f372:	3104      	adds	r1, #4
 800f374:	f7fe f94e 	bl	800d614 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f378:	4b07      	ldr	r3, [pc, #28]	; (800f398 <vTaskPlaceOnEventList+0x84>)
 800f37a:	681a      	ldr	r2, [r3, #0]
 800f37c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800f37e:	bf38      	it	cc
 800f380:	601c      	strcc	r4, [r3, #0]
}
 800f382:	bd70      	pop	{r4, r5, r6, pc}
 800f384:	200128f8 	.word	0x200128f8
 800f388:	20012dec 	.word	0x20012dec
 800f38c:	20012900 	.word	0x20012900
 800f390:	20012dc4 	.word	0x20012dc4
 800f394:	200128fc 	.word	0x200128fc
 800f398:	20012da0 	.word	0x20012da0

0800f39c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800f39c:	b330      	cbz	r0, 800f3ec <vTaskPlaceOnEventListRestricted+0x50>
	{
 800f39e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f3a0:	4e1d      	ldr	r6, [pc, #116]	; (800f418 <vTaskPlaceOnEventListRestricted+0x7c>)
 800f3a2:	460c      	mov	r4, r1
 800f3a4:	6831      	ldr	r1, [r6, #0]
 800f3a6:	4615      	mov	r5, r2
 800f3a8:	3118      	adds	r1, #24
 800f3aa:	f7fe f923 	bl	800d5f4 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800f3ae:	4b1b      	ldr	r3, [pc, #108]	; (800f41c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800f3b0:	b985      	cbnz	r5, 800f3d4 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800f3b2:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f3b4:	6830      	ldr	r0, [r6, #0]
 800f3b6:	3004      	adds	r0, #4
 800f3b8:	f7fe f944 	bl	800d644 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f3bc:	6833      	ldr	r3, [r6, #0]
 800f3be:	1964      	adds	r4, r4, r5
 800f3c0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f3c2:	d31c      	bcc.n	800f3fe <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f3c4:	4b16      	ldr	r3, [pc, #88]	; (800f420 <vTaskPlaceOnEventListRestricted+0x84>)
 800f3c6:	6818      	ldr	r0, [r3, #0]
 800f3c8:	6831      	ldr	r1, [r6, #0]
	}
 800f3ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f3ce:	3104      	adds	r1, #4
 800f3d0:	f7fe b920 	b.w	800d614 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f3d4:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f3d6:	6830      	ldr	r0, [r6, #0]
 800f3d8:	3004      	adds	r0, #4
 800f3da:	f7fe f933 	bl	800d644 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f3de:	6831      	ldr	r1, [r6, #0]
 800f3e0:	4810      	ldr	r0, [pc, #64]	; (800f424 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800f3e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f3e6:	3104      	adds	r1, #4
 800f3e8:	f7fe b904 	b.w	800d5f4 <vListInsertEnd>
 800f3ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3f0:	f383 8811 	msr	BASEPRI, r3
 800f3f4:	f3bf 8f6f 	isb	sy
 800f3f8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800f3fc:	e7fe      	b.n	800f3fc <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f3fe:	4b0a      	ldr	r3, [pc, #40]	; (800f428 <vTaskPlaceOnEventListRestricted+0x8c>)
 800f400:	6818      	ldr	r0, [r3, #0]
 800f402:	6831      	ldr	r1, [r6, #0]
 800f404:	3104      	adds	r1, #4
 800f406:	f7fe f905 	bl	800d614 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f40a:	4b08      	ldr	r3, [pc, #32]	; (800f42c <vTaskPlaceOnEventListRestricted+0x90>)
 800f40c:	681a      	ldr	r2, [r3, #0]
 800f40e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800f410:	bf38      	it	cc
 800f412:	601c      	strcc	r4, [r3, #0]
	}
 800f414:	bd70      	pop	{r4, r5, r6, pc}
 800f416:	bf00      	nop
 800f418:	200128f8 	.word	0x200128f8
 800f41c:	20012dec 	.word	0x20012dec
 800f420:	20012900 	.word	0x20012900
 800f424:	20012dc4 	.word	0x20012dc4
 800f428:	200128fc 	.word	0x200128fc
 800f42c:	20012da0 	.word	0x20012da0

0800f430 <xTaskRemoveFromEventList>:
{
 800f430:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f432:	68c3      	ldr	r3, [r0, #12]
 800f434:	68dc      	ldr	r4, [r3, #12]
{
 800f436:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800f438:	2c00      	cmp	r4, #0
 800f43a:	d02b      	beq.n	800f494 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800f43c:	f104 0518 	add.w	r5, r4, #24
 800f440:	4628      	mov	r0, r5
 800f442:	f7fe f8ff 	bl	800d644 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f446:	4b18      	ldr	r3, [pc, #96]	; (800f4a8 <xTaskRemoveFromEventList+0x78>)
 800f448:	681b      	ldr	r3, [r3, #0]
 800f44a:	b17b      	cbz	r3, 800f46c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800f44c:	4817      	ldr	r0, [pc, #92]	; (800f4ac <xTaskRemoveFromEventList+0x7c>)
 800f44e:	4629      	mov	r1, r5
 800f450:	f7fe f8d0 	bl	800d5f4 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800f454:	4b16      	ldr	r3, [pc, #88]	; (800f4b0 <xTaskRemoveFromEventList+0x80>)
 800f456:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f458:	681b      	ldr	r3, [r3, #0]
 800f45a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f45c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800f45e:	bf85      	ittet	hi
 800f460:	4b14      	ldrhi	r3, [pc, #80]	; (800f4b4 <xTaskRemoveFromEventList+0x84>)
 800f462:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800f464:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800f466:	6018      	strhi	r0, [r3, #0]
}
 800f468:	b003      	add	sp, #12
 800f46a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800f46c:	1d21      	adds	r1, r4, #4
 800f46e:	4608      	mov	r0, r1
 800f470:	9101      	str	r1, [sp, #4]
 800f472:	f7fe f8e7 	bl	800d644 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800f476:	4a10      	ldr	r2, [pc, #64]	; (800f4b8 <xTaskRemoveFromEventList+0x88>)
 800f478:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f47a:	6810      	ldr	r0, [r2, #0]
 800f47c:	9901      	ldr	r1, [sp, #4]
 800f47e:	4283      	cmp	r3, r0
 800f480:	480e      	ldr	r0, [pc, #56]	; (800f4bc <xTaskRemoveFromEventList+0x8c>)
 800f482:	bf88      	it	hi
 800f484:	6013      	strhi	r3, [r2, #0]
 800f486:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f48a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f48e:	f7fe f8b1 	bl	800d5f4 <vListInsertEnd>
 800f492:	e7df      	b.n	800f454 <xTaskRemoveFromEventList+0x24>
 800f494:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f498:	f383 8811 	msr	BASEPRI, r3
 800f49c:	f3bf 8f6f 	isb	sy
 800f4a0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800f4a4:	e7fe      	b.n	800f4a4 <xTaskRemoveFromEventList+0x74>
 800f4a6:	bf00      	nop
 800f4a8:	20012d6c 	.word	0x20012d6c
 800f4ac:	20012dac 	.word	0x20012dac
 800f4b0:	200128f8 	.word	0x200128f8
 800f4b4:	20012df0 	.word	0x20012df0
 800f4b8:	20012d74 	.word	0x20012d74
 800f4bc:	20012904 	.word	0x20012904

0800f4c0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f4c0:	4a03      	ldr	r2, [pc, #12]	; (800f4d0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f4c2:	4b04      	ldr	r3, [pc, #16]	; (800f4d4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f4c4:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f4c6:	681b      	ldr	r3, [r3, #0]
 800f4c8:	e9c0 2300 	strd	r2, r3, [r0]
}
 800f4cc:	4770      	bx	lr
 800f4ce:	bf00      	nop
 800f4d0:	20012da4 	.word	0x20012da4
 800f4d4:	20012dec 	.word	0x20012dec

0800f4d8 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800f4d8:	b328      	cbz	r0, 800f526 <xTaskCheckForTimeOut+0x4e>
{
 800f4da:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f4dc:	460d      	mov	r5, r1
 800f4de:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800f4e0:	b1c1      	cbz	r1, 800f514 <xTaskCheckForTimeOut+0x3c>
 800f4e2:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800f4e4:	f7fe f926 	bl	800d734 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800f4e8:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800f4ea:	4a1d      	ldr	r2, [pc, #116]	; (800f560 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800f4ec:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800f4ee:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800f4f0:	d030      	beq.n	800f554 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800f4f2:	f8df c070 	ldr.w	ip, [pc, #112]	; 800f564 <xTaskCheckForTimeOut+0x8c>
 800f4f6:	e9d4 6000 	ldrd	r6, r0, [r4]
 800f4fa:	f8dc 7000 	ldr.w	r7, [ip]
 800f4fe:	42be      	cmp	r6, r7
 800f500:	d01a      	beq.n	800f538 <xTaskCheckForTimeOut+0x60>
 800f502:	4288      	cmp	r0, r1
 800f504:	d818      	bhi.n	800f538 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800f506:	2001      	movs	r0, #1
 800f508:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f50a:	f7fe f935 	bl	800d778 <vPortExitCritical>
}
 800f50e:	9801      	ldr	r0, [sp, #4]
 800f510:	b003      	add	sp, #12
 800f512:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f514:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f518:	f383 8811 	msr	BASEPRI, r3
 800f51c:	f3bf 8f6f 	isb	sy
 800f520:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800f524:	e7fe      	b.n	800f524 <xTaskCheckForTimeOut+0x4c>
 800f526:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f52a:	f383 8811 	msr	BASEPRI, r3
 800f52e:	f3bf 8f6f 	isb	sy
 800f532:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800f536:	e7fe      	b.n	800f536 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800f538:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800f53c:	4573      	cmp	r3, lr
 800f53e:	d90b      	bls.n	800f558 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800f540:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f542:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f546:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800f548:	4403      	add	r3, r0
 800f54a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800f54c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f54e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800f552:	e7d9      	b.n	800f508 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800f554:	2000      	movs	r0, #0
 800f556:	e7d7      	b.n	800f508 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800f558:	2300      	movs	r3, #0
 800f55a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800f55c:	2001      	movs	r0, #1
 800f55e:	e7d3      	b.n	800f508 <xTaskCheckForTimeOut+0x30>
 800f560:	20012dec 	.word	0x20012dec
 800f564:	20012da4 	.word	0x20012da4

0800f568 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800f568:	4b01      	ldr	r3, [pc, #4]	; (800f570 <vTaskMissedYield+0x8>)
 800f56a:	2201      	movs	r2, #1
 800f56c:	601a      	str	r2, [r3, #0]
}
 800f56e:	4770      	bx	lr
 800f570:	20012df0 	.word	0x20012df0

0800f574 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800f574:	4b05      	ldr	r3, [pc, #20]	; (800f58c <xTaskGetSchedulerState+0x18>)
 800f576:	681b      	ldr	r3, [r3, #0]
 800f578:	b133      	cbz	r3, 800f588 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f57a:	4b05      	ldr	r3, [pc, #20]	; (800f590 <xTaskGetSchedulerState+0x1c>)
 800f57c:	6818      	ldr	r0, [r3, #0]
 800f57e:	fab0 f080 	clz	r0, r0
 800f582:	0940      	lsrs	r0, r0, #5
 800f584:	0040      	lsls	r0, r0, #1
 800f586:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800f588:	2001      	movs	r0, #1
	}
 800f58a:	4770      	bx	lr
 800f58c:	20012dc0 	.word	0x20012dc0
 800f590:	20012d6c 	.word	0x20012d6c

0800f594 <xTaskPriorityInherit>:
	{
 800f594:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800f596:	4604      	mov	r4, r0
	{
 800f598:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800f59a:	b1c8      	cbz	r0, 800f5d0 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800f59c:	4d1d      	ldr	r5, [pc, #116]	; (800f614 <xTaskPriorityInherit+0x80>)
 800f59e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f5a0:	682a      	ldr	r2, [r5, #0]
 800f5a2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f5a4:	4293      	cmp	r3, r2
 800f5a6:	d215      	bcs.n	800f5d4 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f5a8:	6982      	ldr	r2, [r0, #24]
 800f5aa:	2a00      	cmp	r2, #0
 800f5ac:	db04      	blt.n	800f5b8 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f5ae:	682a      	ldr	r2, [r5, #0]
 800f5b0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f5b2:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800f5b6:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800f5b8:	4e17      	ldr	r6, [pc, #92]	; (800f618 <xTaskPriorityInherit+0x84>)
 800f5ba:	6962      	ldr	r2, [r4, #20]
 800f5bc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f5c0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800f5c4:	429a      	cmp	r2, r3
 800f5c6:	d00e      	beq.n	800f5e6 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f5c8:	682b      	ldr	r3, [r5, #0]
 800f5ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f5cc:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800f5ce:	2001      	movs	r0, #1
	}
 800f5d0:	b002      	add	sp, #8
 800f5d2:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800f5d4:	682b      	ldr	r3, [r5, #0]
 800f5d6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800f5d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f5da:	4298      	cmp	r0, r3
 800f5dc:	bf2c      	ite	cs
 800f5de:	2000      	movcs	r0, #0
 800f5e0:	2001      	movcc	r0, #1
	}
 800f5e2:	b002      	add	sp, #8
 800f5e4:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f5e6:	1d21      	adds	r1, r4, #4
 800f5e8:	4608      	mov	r0, r1
 800f5ea:	9101      	str	r1, [sp, #4]
 800f5ec:	f7fe f82a 	bl	800d644 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f5f0:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f5f2:	4b0a      	ldr	r3, [pc, #40]	; (800f61c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f5f4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f5f6:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f5f8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f5fa:	4290      	cmp	r0, r2
 800f5fc:	bf88      	it	hi
 800f5fe:	6018      	strhi	r0, [r3, #0]
 800f600:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f604:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800f608:	9901      	ldr	r1, [sp, #4]
 800f60a:	f7fd fff3 	bl	800d5f4 <vListInsertEnd>
				xReturn = pdTRUE;
 800f60e:	2001      	movs	r0, #1
 800f610:	e7de      	b.n	800f5d0 <xTaskPriorityInherit+0x3c>
 800f612:	bf00      	nop
 800f614:	200128f8 	.word	0x200128f8
 800f618:	20012904 	.word	0x20012904
 800f61c:	20012d74 	.word	0x20012d74

0800f620 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800f620:	b318      	cbz	r0, 800f66a <xTaskPriorityDisinherit+0x4a>
	{
 800f622:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800f624:	4b1e      	ldr	r3, [pc, #120]	; (800f6a0 <xTaskPriorityDisinherit+0x80>)
 800f626:	681c      	ldr	r4, [r3, #0]
 800f628:	4284      	cmp	r4, r0
	{
 800f62a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800f62c:	d008      	beq.n	800f640 <xTaskPriorityDisinherit+0x20>
 800f62e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f632:	f383 8811 	msr	BASEPRI, r3
 800f636:	f3bf 8f6f 	isb	sy
 800f63a:	f3bf 8f4f 	dsb	sy
 800f63e:	e7fe      	b.n	800f63e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800f640:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f642:	b14b      	cbz	r3, 800f658 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f644:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f646:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800f648:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f64a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800f64c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f64e:	d000      	beq.n	800f652 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800f650:	b16b      	cbz	r3, 800f66e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800f652:	2000      	movs	r0, #0
	}
 800f654:	b002      	add	sp, #8
 800f656:	bd10      	pop	{r4, pc}
 800f658:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f65c:	f383 8811 	msr	BASEPRI, r3
 800f660:	f3bf 8f6f 	isb	sy
 800f664:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f668:	e7fe      	b.n	800f668 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800f66a:	2000      	movs	r0, #0
	}
 800f66c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f66e:	1d21      	adds	r1, r4, #4
 800f670:	4608      	mov	r0, r1
 800f672:	9101      	str	r1, [sp, #4]
 800f674:	f7fd ffe6 	bl	800d644 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f678:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800f67a:	4a0a      	ldr	r2, [pc, #40]	; (800f6a4 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f67c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f67e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800f682:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800f684:	6810      	ldr	r0, [r2, #0]
 800f686:	9901      	ldr	r1, [sp, #4]
 800f688:	4283      	cmp	r3, r0
 800f68a:	4807      	ldr	r0, [pc, #28]	; (800f6a8 <xTaskPriorityDisinherit+0x88>)
 800f68c:	bf88      	it	hi
 800f68e:	6013      	strhi	r3, [r2, #0]
 800f690:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f694:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f698:	f7fd ffac 	bl	800d5f4 <vListInsertEnd>
					xReturn = pdTRUE;
 800f69c:	2001      	movs	r0, #1
		return xReturn;
 800f69e:	e7d9      	b.n	800f654 <xTaskPriorityDisinherit+0x34>
 800f6a0:	200128f8 	.word	0x200128f8
 800f6a4:	20012d74 	.word	0x20012d74
 800f6a8:	20012904 	.word	0x20012904

0800f6ac <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800f6ac:	2800      	cmp	r0, #0
 800f6ae:	d041      	beq.n	800f734 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800f6b0:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800f6b2:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800f6b4:	b083      	sub	sp, #12
 800f6b6:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800f6b8:	b153      	cbz	r3, 800f6d0 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800f6ba:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800f6bc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f6be:	4281      	cmp	r1, r0
 800f6c0:	bf38      	it	cc
 800f6c2:	4601      	movcc	r1, r0
 800f6c4:	428a      	cmp	r2, r1
 800f6c6:	d001      	beq.n	800f6cc <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800f6c8:	2b01      	cmp	r3, #1
 800f6ca:	d00a      	beq.n	800f6e2 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800f6cc:	b003      	add	sp, #12
 800f6ce:	bd30      	pop	{r4, r5, pc}
 800f6d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f6d4:	f383 8811 	msr	BASEPRI, r3
 800f6d8:	f3bf 8f6f 	isb	sy
 800f6dc:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f6e0:	e7fe      	b.n	800f6e0 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800f6e2:	4b19      	ldr	r3, [pc, #100]	; (800f748 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800f6e4:	681b      	ldr	r3, [r3, #0]
 800f6e6:	42a3      	cmp	r3, r4
 800f6e8:	d025      	beq.n	800f736 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f6ea:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800f6ec:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f6ee:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f6f0:	bfa8      	it	ge
 800f6f2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f6f6:	4d15      	ldr	r5, [pc, #84]	; (800f74c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f6f8:	bfa8      	it	ge
 800f6fa:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f6fc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800f700:	6961      	ldr	r1, [r4, #20]
 800f702:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800f706:	4299      	cmp	r1, r3
 800f708:	d1e0      	bne.n	800f6cc <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f70a:	1d21      	adds	r1, r4, #4
 800f70c:	4608      	mov	r0, r1
 800f70e:	9101      	str	r1, [sp, #4]
 800f710:	f7fd ff98 	bl	800d644 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800f714:	4b0e      	ldr	r3, [pc, #56]	; (800f750 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800f716:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800f718:	681a      	ldr	r2, [r3, #0]
 800f71a:	9901      	ldr	r1, [sp, #4]
 800f71c:	4290      	cmp	r0, r2
 800f71e:	bf88      	it	hi
 800f720:	6018      	strhi	r0, [r3, #0]
 800f722:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f726:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800f72a:	b003      	add	sp, #12
 800f72c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800f730:	f7fd bf60 	b.w	800d5f4 <vListInsertEnd>
 800f734:	4770      	bx	lr
 800f736:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f73a:	f383 8811 	msr	BASEPRI, r3
 800f73e:	f3bf 8f6f 	isb	sy
 800f742:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800f746:	e7fe      	b.n	800f746 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800f748:	200128f8 	.word	0x200128f8
 800f74c:	20012904 	.word	0x20012904
 800f750:	20012d74 	.word	0x20012d74

0800f754 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800f754:	4b04      	ldr	r3, [pc, #16]	; (800f768 <pvTaskIncrementMutexHeldCount+0x14>)
 800f756:	681a      	ldr	r2, [r3, #0]
 800f758:	b11a      	cbz	r2, 800f762 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800f75a:	6819      	ldr	r1, [r3, #0]
 800f75c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800f75e:	3201      	adds	r2, #1
 800f760:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800f762:	6818      	ldr	r0, [r3, #0]
	}
 800f764:	4770      	bx	lr
 800f766:	bf00      	nop
 800f768:	200128f8 	.word	0x200128f8

0800f76c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800f76c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f770:	4e22      	ldr	r6, [pc, #136]	; (800f7fc <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800f772:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800f804 <prvSwitchTimerLists+0x98>
{
 800f776:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800f778:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f77c:	e00d      	b.n	800f79a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f77e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f780:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f782:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f784:	1d25      	adds	r5, r4, #4
 800f786:	4628      	mov	r0, r5
 800f788:	f7fd ff5c 	bl	800d644 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f78c:	6a23      	ldr	r3, [r4, #32]
 800f78e:	4620      	mov	r0, r4
 800f790:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f792:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f796:	075b      	lsls	r3, r3, #29
 800f798:	d40a      	bmi.n	800f7b0 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f79a:	6833      	ldr	r3, [r6, #0]
 800f79c:	681a      	ldr	r2, [r3, #0]
 800f79e:	2a00      	cmp	r2, #0
 800f7a0:	d1ed      	bne.n	800f77e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800f7a2:	4a17      	ldr	r2, [pc, #92]	; (800f800 <prvSwitchTimerLists+0x94>)
 800f7a4:	6811      	ldr	r1, [r2, #0]
 800f7a6:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800f7a8:	6013      	str	r3, [r2, #0]
}
 800f7aa:	b005      	add	sp, #20
 800f7ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800f7b0:	69a3      	ldr	r3, [r4, #24]
 800f7b2:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800f7b4:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f7b6:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800f7b8:	d205      	bcs.n	800f7c6 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f7ba:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800f7bc:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f7be:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f7c0:	f7fd ff28 	bl	800d614 <vListInsert>
 800f7c4:	e7e9      	b.n	800f79a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800f7c6:	f8d9 3000 	ldr.w	r3, [r9]
 800f7ca:	b16b      	cbz	r3, 800f7e8 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f7cc:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f7d0:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f7d2:	f7ff fecf 	bl	800f574 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f7d6:	2300      	movs	r3, #0
 800f7d8:	f8d9 0000 	ldr.w	r0, [r9]
 800f7dc:	461a      	mov	r2, r3
 800f7de:	4669      	mov	r1, sp
 800f7e0:	f7fe fa9c 	bl	800dd1c <xQueueGenericSend>
				configASSERT( xResult );
 800f7e4:	2800      	cmp	r0, #0
 800f7e6:	d1d8      	bne.n	800f79a <prvSwitchTimerLists+0x2e>
 800f7e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f7ec:	f383 8811 	msr	BASEPRI, r3
 800f7f0:	f3bf 8f6f 	isb	sy
 800f7f4:	f3bf 8f4f 	dsb	sy
 800f7f8:	e7fe      	b.n	800f7f8 <prvSwitchTimerLists+0x8c>
 800f7fa:	bf00      	nop
 800f7fc:	20012df4 	.word	0x20012df4
 800f800:	20012df8 	.word	0x20012df8
 800f804:	20012f18 	.word	0x20012f18

0800f808 <prvTimerTask>:
{
 800f808:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f80c:	4e9b      	ldr	r6, [pc, #620]	; (800fa7c <prvTimerTask+0x274>)
 800f80e:	4d9c      	ldr	r5, [pc, #624]	; (800fa80 <prvTimerTask+0x278>)
 800f810:	4c9c      	ldr	r4, [pc, #624]	; (800fa84 <prvTimerTask+0x27c>)
 800f812:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800f814:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800f818:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800f81c:	6833      	ldr	r3, [r6, #0]
 800f81e:	681f      	ldr	r7, [r3, #0]
 800f820:	2f00      	cmp	r7, #0
 800f822:	f000 80a8 	beq.w	800f976 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f826:	68db      	ldr	r3, [r3, #12]
 800f828:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800f82a:	f7ff fcf9 	bl	800f220 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f82e:	f7ff fd0f 	bl	800f250 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f832:	682a      	ldr	r2, [r5, #0]
 800f834:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800f836:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f838:	f0c0 80ae 	bcc.w	800f998 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f83c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800f83e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f840:	f240 80b4 	bls.w	800f9ac <prvTimerTask+0x1a4>
 800f844:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800f846:	6820      	ldr	r0, [r4, #0]
 800f848:	eba7 010a 	sub.w	r1, r7, sl
 800f84c:	f7ff f89a 	bl	800e984 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800f850:	f7ff fcee 	bl	800f230 <xTaskResumeAll>
 800f854:	b928      	cbnz	r0, 800f862 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800f856:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800f85a:	f3bf 8f4f 	dsb	sy
 800f85e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800f862:	6820      	ldr	r0, [r4, #0]
 800f864:	2200      	movs	r2, #0
 800f866:	a902      	add	r1, sp, #8
 800f868:	f7fe fc94 	bl	800e194 <xQueueReceive>
 800f86c:	2800      	cmp	r0, #0
 800f86e:	d0d5      	beq.n	800f81c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800f870:	9b02      	ldr	r3, [sp, #8]
 800f872:	2b00      	cmp	r3, #0
 800f874:	db76      	blt.n	800f964 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800f876:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800f878:	697b      	ldr	r3, [r7, #20]
 800f87a:	b113      	cbz	r3, 800f882 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f87c:	1d38      	adds	r0, r7, #4
 800f87e:	f7fd fee1 	bl	800d644 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800f882:	f7ff fce5 	bl	800f250 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f886:	682b      	ldr	r3, [r5, #0]
 800f888:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800f88a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f88c:	f0c0 808b 	bcc.w	800f9a6 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800f890:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800f892:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800f896:	2b09      	cmp	r3, #9
 800f898:	d8e3      	bhi.n	800f862 <prvTimerTask+0x5a>
 800f89a:	e8df f003 	tbb	[pc, r3]
 800f89e:	0505      	.short	0x0505
 800f8a0:	5a3d5305 	.word	0x5a3d5305
 800f8a4:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f8a8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f8ac:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f8ae:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f8b0:	f043 0301 	orr.w	r3, r3, #1
 800f8b4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f8b8:	9b03      	ldr	r3, [sp, #12]
 800f8ba:	1899      	adds	r1, r3, r2
 800f8bc:	bf2c      	ite	cs
 800f8be:	2001      	movcs	r0, #1
 800f8c0:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800f8c2:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f8c4:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f8c6:	f200 808c 	bhi.w	800f9e2 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f8ca:	ebaa 0303 	sub.w	r3, sl, r3
 800f8ce:	429a      	cmp	r2, r3
 800f8d0:	d832      	bhi.n	800f938 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f8d2:	6a3b      	ldr	r3, [r7, #32]
 800f8d4:	4638      	mov	r0, r7
 800f8d6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f8d8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f8dc:	075b      	lsls	r3, r3, #29
 800f8de:	d5c0      	bpl.n	800f862 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800f8e0:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f8e2:	9903      	ldr	r1, [sp, #12]
 800f8e4:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800f8e6:	b172      	cbz	r2, 800f906 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f8e8:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f8ea:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800f8ee:	2300      	movs	r3, #0
 800f8f0:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f8f2:	f7ff fe3f 	bl	800f574 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f8f6:	2300      	movs	r3, #0
 800f8f8:	6820      	ldr	r0, [r4, #0]
 800f8fa:	461a      	mov	r2, r3
 800f8fc:	a906      	add	r1, sp, #24
 800f8fe:	f7fe fa0d 	bl	800dd1c <xQueueGenericSend>
							configASSERT( xResult );
 800f902:	2800      	cmp	r0, #0
 800f904:	d1ad      	bne.n	800f862 <prvTimerTask+0x5a>
 800f906:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f90a:	f383 8811 	msr	BASEPRI, r3
 800f90e:	f3bf 8f6f 	isb	sy
 800f912:	f3bf 8f4f 	dsb	sy
 800f916:	e7fe      	b.n	800f916 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f918:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f91c:	f043 0301 	orr.w	r3, r3, #1
 800f920:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800f924:	9b03      	ldr	r3, [sp, #12]
 800f926:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f928:	2b00      	cmp	r3, #0
 800f92a:	f000 809d 	beq.w	800fa68 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800f92e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800f930:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f932:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f934:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800f936:	d85e      	bhi.n	800f9f6 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f938:	4b53      	ldr	r3, [pc, #332]	; (800fa88 <prvTimerTask+0x280>)
 800f93a:	1d39      	adds	r1, r7, #4
 800f93c:	6818      	ldr	r0, [r3, #0]
 800f93e:	f7fd fe69 	bl	800d614 <vListInsert>
	return xProcessTimerNow;
 800f942:	e78e      	b.n	800f862 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f944:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f948:	f023 0301 	bic.w	r3, r3, #1
 800f94c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800f950:	e787      	b.n	800f862 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800f952:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f956:	079a      	lsls	r2, r3, #30
 800f958:	d552      	bpl.n	800fa00 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f95a:	f023 0301 	bic.w	r3, r3, #1
 800f95e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800f962:	e77e      	b.n	800f862 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800f964:	9b03      	ldr	r3, [sp, #12]
 800f966:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800f96a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800f96c:	9b02      	ldr	r3, [sp, #8]
 800f96e:	2b00      	cmp	r3, #0
 800f970:	f6ff af77 	blt.w	800f862 <prvTimerTask+0x5a>
 800f974:	e77f      	b.n	800f876 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800f976:	f7ff fc53 	bl	800f220 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f97a:	f7ff fc69 	bl	800f250 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f97e:	682a      	ldr	r2, [r5, #0]
 800f980:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800f982:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f984:	d808      	bhi.n	800f998 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f986:	4b40      	ldr	r3, [pc, #256]	; (800fa88 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800f988:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f98c:	681a      	ldr	r2, [r3, #0]
 800f98e:	6812      	ldr	r2, [r2, #0]
 800f990:	fab2 f282 	clz	r2, r2
 800f994:	0952      	lsrs	r2, r2, #5
 800f996:	e756      	b.n	800f846 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800f998:	f7ff fee8 	bl	800f76c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800f99c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800f9a0:	f7ff fc46 	bl	800f230 <xTaskResumeAll>
 800f9a4:	e75d      	b.n	800f862 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800f9a6:	f7ff fee1 	bl	800f76c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800f9aa:	e771      	b.n	800f890 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800f9ac:	f7ff fc40 	bl	800f230 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f9b0:	6832      	ldr	r2, [r6, #0]
 800f9b2:	68d2      	ldr	r2, [r2, #12]
 800f9b4:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f9b8:	f10b 0104 	add.w	r1, fp, #4
 800f9bc:	4608      	mov	r0, r1
 800f9be:	9101      	str	r1, [sp, #4]
 800f9c0:	f7fd fe40 	bl	800d644 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f9c4:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800f9c8:	9901      	ldr	r1, [sp, #4]
 800f9ca:	f010 0f04 	tst.w	r0, #4
 800f9ce:	d11b      	bne.n	800fa08 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f9d0:	f020 0001 	bic.w	r0, r0, #1
 800f9d4:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f9d8:	f8db 3020 	ldr.w	r3, [fp, #32]
 800f9dc:	4658      	mov	r0, fp
 800f9de:	4798      	blx	r3
}
 800f9e0:	e73f      	b.n	800f862 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800f9e2:	4553      	cmp	r3, sl
 800f9e4:	d902      	bls.n	800f9ec <prvTimerTask+0x1e4>
 800f9e6:	2800      	cmp	r0, #0
 800f9e8:	f43f af73 	beq.w	800f8d2 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f9ec:	6830      	ldr	r0, [r6, #0]
 800f9ee:	1d39      	adds	r1, r7, #4
 800f9f0:	f7fd fe10 	bl	800d614 <vListInsert>
	return xProcessTimerNow;
 800f9f4:	e735      	b.n	800f862 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f9f6:	6830      	ldr	r0, [r6, #0]
 800f9f8:	1d39      	adds	r1, r7, #4
 800f9fa:	f7fd fe0b 	bl	800d614 <vListInsert>
 800f9fe:	e730      	b.n	800f862 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800fa00:	4638      	mov	r0, r7
 800fa02:	f7fd fd83 	bl	800d50c <vPortFree>
 800fa06:	e72c      	b.n	800f862 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800fa08:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800fa0c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800fa10:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800fa12:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800fa14:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800fa18:	d903      	bls.n	800fa22 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fa1a:	6830      	ldr	r0, [r6, #0]
 800fa1c:	f7fd fdfa 	bl	800d614 <vListInsert>
	return xProcessTimerNow;
 800fa20:	e7da      	b.n	800f9d8 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fa22:	ebaa 0307 	sub.w	r3, sl, r7
 800fa26:	429a      	cmp	r2, r3
 800fa28:	d819      	bhi.n	800fa5e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800fa2a:	6823      	ldr	r3, [r4, #0]
 800fa2c:	b173      	cbz	r3, 800fa4c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800fa2e:	2300      	movs	r3, #0
 800fa30:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800fa32:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800fa34:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800fa38:	f7ff fd9c 	bl	800f574 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800fa3c:	2300      	movs	r3, #0
 800fa3e:	6820      	ldr	r0, [r4, #0]
 800fa40:	461a      	mov	r2, r3
 800fa42:	a906      	add	r1, sp, #24
 800fa44:	f7fe f96a 	bl	800dd1c <xQueueGenericSend>
			configASSERT( xResult );
 800fa48:	2800      	cmp	r0, #0
 800fa4a:	d1c5      	bne.n	800f9d8 <prvTimerTask+0x1d0>
 800fa4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa50:	f383 8811 	msr	BASEPRI, r3
 800fa54:	f3bf 8f6f 	isb	sy
 800fa58:	f3bf 8f4f 	dsb	sy
 800fa5c:	e7fe      	b.n	800fa5c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800fa5e:	4b0a      	ldr	r3, [pc, #40]	; (800fa88 <prvTimerTask+0x280>)
 800fa60:	6818      	ldr	r0, [r3, #0]
 800fa62:	f7fd fdd7 	bl	800d614 <vListInsert>
	return xProcessTimerNow;
 800fa66:	e7b7      	b.n	800f9d8 <prvTimerTask+0x1d0>
 800fa68:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa6c:	f383 8811 	msr	BASEPRI, r3
 800fa70:	f3bf 8f6f 	isb	sy
 800fa74:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800fa78:	e7fe      	b.n	800fa78 <prvTimerTask+0x270>
 800fa7a:	bf00      	nop
 800fa7c:	20012df4 	.word	0x20012df4
 800fa80:	20012ec4 	.word	0x20012ec4
 800fa84:	20012f18 	.word	0x20012f18
 800fa88:	20012df8 	.word	0x20012df8

0800fa8c <xTimerCreateTimerTask>:
{
 800fa8c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800fa8e:	4c23      	ldr	r4, [pc, #140]	; (800fb1c <xTimerCreateTimerTask+0x90>)
{
 800fa90:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800fa92:	f7fd fe4f 	bl	800d734 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800fa96:	6825      	ldr	r5, [r4, #0]
 800fa98:	b335      	cbz	r5, 800fae8 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800fa9a:	f7fd fe6d 	bl	800d778 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800fa9e:	6823      	ldr	r3, [r4, #0]
 800faa0:	b1cb      	cbz	r3, 800fad6 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800faa2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800faa4:	aa07      	add	r2, sp, #28
 800faa6:	a906      	add	r1, sp, #24
 800faa8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800faaa:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800faae:	f7fd fc61 	bl	800d374 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800fab2:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800fab6:	2302      	movs	r3, #2
 800fab8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800fabc:	9300      	str	r3, [sp, #0]
 800fabe:	9a07      	ldr	r2, [sp, #28]
 800fac0:	4917      	ldr	r1, [pc, #92]	; (800fb20 <xTimerCreateTimerTask+0x94>)
 800fac2:	4818      	ldr	r0, [pc, #96]	; (800fb24 <xTimerCreateTimerTask+0x98>)
 800fac4:	4623      	mov	r3, r4
 800fac6:	f7ff fa6d 	bl	800efa4 <xTaskCreateStatic>
 800faca:	4b17      	ldr	r3, [pc, #92]	; (800fb28 <xTimerCreateTimerTask+0x9c>)
 800facc:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800face:	b110      	cbz	r0, 800fad6 <xTimerCreateTimerTask+0x4a>
}
 800fad0:	2001      	movs	r0, #1
 800fad2:	b009      	add	sp, #36	; 0x24
 800fad4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fad6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fada:	f383 8811 	msr	BASEPRI, r3
 800fade:	f3bf 8f6f 	isb	sy
 800fae2:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800fae6:	e7fe      	b.n	800fae6 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800fae8:	4f10      	ldr	r7, [pc, #64]	; (800fb2c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800faea:	4e11      	ldr	r6, [pc, #68]	; (800fb30 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800faec:	4638      	mov	r0, r7
 800faee:	f7fd fd71 	bl	800d5d4 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800faf2:	4630      	mov	r0, r6
 800faf4:	f7fd fd6e 	bl	800d5d4 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800faf8:	4a0e      	ldr	r2, [pc, #56]	; (800fb34 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800fafa:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800fafc:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800fafe:	4a0e      	ldr	r2, [pc, #56]	; (800fb38 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800fb00:	4b0e      	ldr	r3, [pc, #56]	; (800fb3c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800fb02:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800fb04:	2110      	movs	r1, #16
 800fb06:	4a0e      	ldr	r2, [pc, #56]	; (800fb40 <xTimerCreateTimerTask+0xb4>)
 800fb08:	200a      	movs	r0, #10
 800fb0a:	f7fd ffb1 	bl	800da70 <xQueueGenericCreateStatic>
 800fb0e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800fb10:	2800      	cmp	r0, #0
 800fb12:	d0c2      	beq.n	800fa9a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800fb14:	490b      	ldr	r1, [pc, #44]	; (800fb44 <xTimerCreateTimerTask+0xb8>)
 800fb16:	f7fe ff0d 	bl	800e934 <vQueueAddToRegistry>
 800fb1a:	e7be      	b.n	800fa9a <xTimerCreateTimerTask+0xe>
 800fb1c:	20012f18 	.word	0x20012f18
 800fb20:	0802e1ec 	.word	0x0802e1ec
 800fb24:	0800f809 	.word	0x0800f809
 800fb28:	20012f1c 	.word	0x20012f1c
 800fb2c:	20012e9c 	.word	0x20012e9c
 800fb30:	20012eb0 	.word	0x20012eb0
 800fb34:	20012df4 	.word	0x20012df4
 800fb38:	20012df8 	.word	0x20012df8
 800fb3c:	20012ec8 	.word	0x20012ec8
 800fb40:	20012dfc 	.word	0x20012dfc
 800fb44:	0802e1e4 	.word	0x0802e1e4

0800fb48 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800fb48:	8880      	ldrh	r0, [r0, #4]
 800fb4a:	4770      	bx	lr

0800fb4c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800fb4c:	b570      	push	{r4, r5, r6, lr}
 800fb4e:	6803      	ldr	r3, [r0, #0]
 800fb50:	4605      	mov	r5, r0
 800fb52:	460c      	mov	r4, r1
 800fb54:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fb56:	2100      	movs	r1, #0
 800fb58:	4798      	blx	r3
 800fb5a:	682b      	ldr	r3, [r5, #0]
 800fb5c:	4606      	mov	r6, r0
 800fb5e:	6a1b      	ldr	r3, [r3, #32]
 800fb60:	4628      	mov	r0, r5
 800fb62:	4798      	blx	r3
 800fb64:	1ba4      	subs	r4, r4, r6
 800fb66:	b2a4      	uxth	r4, r4
 800fb68:	fbb4 f0f0 	udiv	r0, r4, r0
 800fb6c:	bd70      	pop	{r4, r5, r6, pc}

0800fb6e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800fb6e:	2300      	movs	r3, #0
 800fb70:	8083      	strh	r3, [r0, #4]
 800fb72:	4770      	bx	lr

0800fb74 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800fb74:	b510      	push	{r4, lr}
 800fb76:	6803      	ldr	r3, [r0, #0]
 800fb78:	8881      	ldrh	r1, [r0, #4]
 800fb7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fb7c:	4604      	mov	r4, r0
 800fb7e:	4798      	blx	r3
 800fb80:	88a3      	ldrh	r3, [r4, #4]
 800fb82:	3301      	adds	r3, #1
 800fb84:	80a3      	strh	r3, [r4, #4]
 800fb86:	bd10      	pop	{r4, pc}

0800fb88 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800fb88:	6803      	ldr	r3, [r0, #0]
 800fb8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fb8c:	4718      	bx	r3

0800fb8e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800fb8e:	4770      	bx	lr

0800fb90 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800fb90:	4a02      	ldr	r2, [pc, #8]	; (800fb9c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800fb92:	6002      	str	r2, [r0, #0]
 800fb94:	2200      	movs	r2, #0
 800fb96:	8082      	strh	r2, [r0, #4]
 800fb98:	4770      	bx	lr
 800fb9a:	bf00      	nop
 800fb9c:	0802e1fc 	.word	0x0802e1fc

0800fba0 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800fba0:	b510      	push	{r4, lr}
 800fba2:	6803      	ldr	r3, [r0, #0]
 800fba4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800fba8:	4604      	mov	r4, r0
 800fbaa:	4798      	blx	r3
 800fbac:	b110      	cbz	r0, 800fbb4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800fbae:	4620      	mov	r0, r4
 800fbb0:	f7f1 fa34 	bl	800101c <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800fbb4:	bd10      	pop	{r4, pc}

0800fbb6 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800fbb6:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800fbba:	4770      	bx	lr

0800fbbc <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800fbbc:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800fbc0:	4770      	bx	lr

0800fbc2 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800fbc2:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800fbc6:	4770      	bx	lr

0800fbc8 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800fbc8:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800fbcc:	4770      	bx	lr

0800fbce <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800fbce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fbd0:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800fbd4:	461e      	mov	r6, r3
 800fbd6:	6803      	ldr	r3, [r0, #0]
 800fbd8:	460f      	mov	r7, r1
 800fbda:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fbde:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800fbe2:	4604      	mov	r4, r0
 800fbe4:	4615      	mov	r5, r2
 800fbe6:	4798      	blx	r3
 800fbe8:	b93e      	cbnz	r6, 800fbfa <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800fbea:	1bed      	subs	r5, r5, r7
 800fbec:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800fbf0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800fbf4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800fbf8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fbfa:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800fbfe:	e7f7      	b.n	800fbf0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800fc00 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800fc00:	b510      	push	{r4, lr}
 800fc02:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800fc06:	600c      	str	r4, [r1, #0]
 800fc08:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800fc0c:	6011      	str	r1, [r2, #0]
 800fc0e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800fc12:	801a      	strh	r2, [r3, #0]
 800fc14:	9b02      	ldr	r3, [sp, #8]
 800fc16:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800fc1a:	801a      	strh	r2, [r3, #0]
 800fc1c:	bd10      	pop	{r4, pc}

0800fc1e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800fc1e:	b510      	push	{r4, lr}
 800fc20:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800fc24:	600c      	str	r4, [r1, #0]
 800fc26:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800fc2a:	6011      	str	r1, [r2, #0]
 800fc2c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800fc30:	801a      	strh	r2, [r3, #0]
 800fc32:	bd10      	pop	{r4, pc}

0800fc34 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800fc34:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800fc38:	600b      	str	r3, [r1, #0]
 800fc3a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800fc3e:	6013      	str	r3, [r2, #0]
 800fc40:	4770      	bx	lr

0800fc42 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800fc42:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800fc46:	4770      	bx	lr

0800fc48 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800fc48:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800fc4c:	4770      	bx	lr

0800fc4e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800fc4e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800fc52:	4770      	bx	lr

0800fc54 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800fc54:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800fc58:	4770      	bx	lr

0800fc5a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800fc5a:	4770      	bx	lr

0800fc5c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800fc5c:	b510      	push	{r4, lr}
 800fc5e:	21b4      	movs	r1, #180	; 0xb4
 800fc60:	4604      	mov	r4, r0
 800fc62:	f019 fc84 	bl	802956e <_ZdlPvj>
 800fc66:	4620      	mov	r0, r4
 800fc68:	bd10      	pop	{r4, pc}

0800fc6a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800fc6a:	b570      	push	{r4, r5, r6, lr}
 800fc6c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800fc70:	428d      	cmp	r5, r1
 800fc72:	bfb8      	it	lt
 800fc74:	460d      	movlt	r5, r1
 800fc76:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800fc7a:	428d      	cmp	r5, r1
 800fc7c:	4604      	mov	r4, r0
 800fc7e:	bfa8      	it	ge
 800fc80:	460d      	movge	r5, r1
 800fc82:	4616      	mov	r6, r2
 800fc84:	b99a      	cbnz	r2, 800fcae <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800fc86:	6803      	ldr	r3, [r0, #0]
 800fc88:	4629      	mov	r1, r5
 800fc8a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fc8e:	4798      	blx	r3
 800fc90:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800fc94:	b368      	cbz	r0, 800fcf2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800fc96:	6803      	ldr	r3, [r0, #0]
 800fc98:	68db      	ldr	r3, [r3, #12]
 800fc9a:	4798      	blx	r3
 800fc9c:	b348      	cbz	r0, 800fcf2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800fc9e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800fca2:	6803      	ldr	r3, [r0, #0]
 800fca4:	4621      	mov	r1, r4
 800fca6:	689b      	ldr	r3, [r3, #8]
 800fca8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fcac:	4718      	bx	r3
 800fcae:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800fcb2:	2b00      	cmp	r3, #0
 800fcb4:	dd08      	ble.n	800fcc8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800fcb6:	f005 fbe3 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
 800fcba:	4621      	mov	r1, r4
 800fcbc:	3004      	adds	r0, #4
 800fcbe:	f005 fc2c 	bl	801551a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800fcc2:	2300      	movs	r3, #0
 800fcc4:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800fcc8:	6823      	ldr	r3, [r4, #0]
 800fcca:	4620      	mov	r0, r4
 800fccc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800fcd0:	4798      	blx	r3
 800fcd2:	2300      	movs	r3, #0
 800fcd4:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800fcd8:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800fcdc:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800fce0:	f005 fbce 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
 800fce4:	4621      	mov	r1, r4
 800fce6:	3004      	adds	r0, #4
 800fce8:	f005 fcc0 	bl	801566c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800fcec:	2301      	movs	r3, #1
 800fcee:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800fcf2:	bd70      	pop	{r4, r5, r6, pc}

0800fcf4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800fcf4:	b510      	push	{r4, lr}
 800fcf6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800fcfa:	4299      	cmp	r1, r3
 800fcfc:	bfb8      	it	lt
 800fcfe:	4619      	movlt	r1, r3
 800fd00:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800fd04:	4299      	cmp	r1, r3
 800fd06:	bfa8      	it	ge
 800fd08:	4619      	movge	r1, r3
 800fd0a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800fd0e:	428b      	cmp	r3, r1
 800fd10:	4604      	mov	r4, r0
 800fd12:	d010      	beq.n	800fd36 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800fd14:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800fd18:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800fd1c:	b158      	cbz	r0, 800fd36 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800fd1e:	6803      	ldr	r3, [r0, #0]
 800fd20:	68db      	ldr	r3, [r3, #12]
 800fd22:	4798      	blx	r3
 800fd24:	b138      	cbz	r0, 800fd36 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800fd26:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800fd2a:	6803      	ldr	r3, [r0, #0]
 800fd2c:	4621      	mov	r1, r4
 800fd2e:	689b      	ldr	r3, [r3, #8]
 800fd30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fd34:	4718      	bx	r3
 800fd36:	bd10      	pop	{r4, pc}

0800fd38 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800fd38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fd3a:	4604      	mov	r4, r0
 800fd3c:	460d      	mov	r5, r1
 800fd3e:	b1a9      	cbz	r1, 800fd6c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800fd40:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800fd44:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800fd48:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800fd4c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800fd50:	ab01      	add	r3, sp, #4
 800fd52:	1a12      	subs	r2, r2, r0
 800fd54:	1b89      	subs	r1, r1, r6
 800fd56:	1a38      	subs	r0, r7, r0
 800fd58:	f006 fe48 	bl	80169ec <_ZN8touchgfx6muldivElllRl>
 800fd5c:	4629      	mov	r1, r5
 800fd5e:	ab01      	add	r3, sp, #4
 800fd60:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800fd64:	4430      	add	r0, r6
 800fd66:	f006 fe41 	bl	80169ec <_ZN8touchgfx6muldivElllRl>
 800fd6a:	b285      	uxth	r5, r0
 800fd6c:	4628      	mov	r0, r5
 800fd6e:	b003      	add	sp, #12
 800fd70:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800fd72 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800fd72:	b570      	push	{r4, r5, r6, lr}
 800fd74:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800fd78:	4604      	mov	r4, r0
 800fd7a:	2b00      	cmp	r3, #0
 800fd7c:	d035      	beq.n	800fdea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fd7e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800fd82:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800fd86:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800fd8a:	3001      	adds	r0, #1
 800fd8c:	1ad2      	subs	r2, r2, r3
 800fd8e:	b212      	sxth	r2, r2
 800fd90:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800fd94:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800fd98:	2100      	movs	r1, #0
 800fd9a:	b280      	uxth	r0, r0
 800fd9c:	47a8      	blx	r5
 800fd9e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800fda2:	6823      	ldr	r3, [r4, #0]
 800fda4:	4401      	add	r1, r0
 800fda6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fdaa:	4620      	mov	r0, r4
 800fdac:	4798      	blx	r3
 800fdae:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800fdb2:	429a      	cmp	r2, r3
 800fdb4:	db19      	blt.n	800fdea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fdb6:	2500      	movs	r5, #0
 800fdb8:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800fdbc:	f005 fb60 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
 800fdc0:	4621      	mov	r1, r4
 800fdc2:	3004      	adds	r0, #4
 800fdc4:	f005 fba9 	bl	801551a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800fdc8:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800fdcc:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800fdd0:	b158      	cbz	r0, 800fdea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fdd2:	6803      	ldr	r3, [r0, #0]
 800fdd4:	68db      	ldr	r3, [r3, #12]
 800fdd6:	4798      	blx	r3
 800fdd8:	b138      	cbz	r0, 800fdea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fdda:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800fdde:	6803      	ldr	r3, [r0, #0]
 800fde0:	4621      	mov	r1, r4
 800fde2:	689b      	ldr	r3, [r3, #8]
 800fde4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fde8:	4718      	bx	r3
 800fdea:	bd70      	pop	{r4, r5, r6, pc}

0800fdec <_ZN8touchgfx8DrawableC1Ev>:
 800fdec:	4a0a      	ldr	r2, [pc, #40]	; (800fe18 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800fdee:	6002      	str	r2, [r0, #0]
 800fdf0:	2200      	movs	r2, #0
 800fdf2:	8082      	strh	r2, [r0, #4]
 800fdf4:	80c2      	strh	r2, [r0, #6]
 800fdf6:	8102      	strh	r2, [r0, #8]
 800fdf8:	8142      	strh	r2, [r0, #10]
 800fdfa:	8182      	strh	r2, [r0, #12]
 800fdfc:	81c2      	strh	r2, [r0, #14]
 800fdfe:	8202      	strh	r2, [r0, #16]
 800fe00:	8242      	strh	r2, [r0, #18]
 800fe02:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800fe06:	61c2      	str	r2, [r0, #28]
 800fe08:	8402      	strh	r2, [r0, #32]
 800fe0a:	8442      	strh	r2, [r0, #34]	; 0x22
 800fe0c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800fe10:	2201      	movs	r2, #1
 800fe12:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800fe16:	4770      	bx	lr
 800fe18:	0802e99c 	.word	0x0802e99c

0800fe1c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800fe1c:	b570      	push	{r4, r5, r6, lr}
 800fe1e:	6803      	ldr	r3, [r0, #0]
 800fe20:	4604      	mov	r4, r0
 800fe22:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fe24:	4615      	mov	r5, r2
 800fe26:	4798      	blx	r3
 800fe28:	6823      	ldr	r3, [r4, #0]
 800fe2a:	4629      	mov	r1, r5
 800fe2c:	4620      	mov	r0, r4
 800fe2e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fe30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fe34:	4718      	bx	r3

0800fe36 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800fe36:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fe3a:	4604      	mov	r4, r0
 800fe3c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800fe40:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800fe44:	460e      	mov	r6, r1
 800fe46:	4615      	mov	r5, r2
 800fe48:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800fe4c:	4619      	mov	r1, r3
 800fe4e:	463a      	mov	r2, r7
 800fe50:	3058      	adds	r0, #88	; 0x58
 800fe52:	4698      	mov	r8, r3
 800fe54:	f7ff ffe2 	bl	800fe1c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800fe58:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800fe5c:	4446      	add	r6, r8
 800fe5e:	42b3      	cmp	r3, r6
 800fe60:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800fe64:	bfb8      	it	lt
 800fe66:	8126      	strhlt	r6, [r4, #8]
 800fe68:	443d      	add	r5, r7
 800fe6a:	42ab      	cmp	r3, r5
 800fe6c:	bfb8      	it	lt
 800fe6e:	8165      	strhlt	r5, [r4, #10]
 800fe70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fe74 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800fe74:	b510      	push	{r4, lr}
 800fe76:	4604      	mov	r4, r0
 800fe78:	302c      	adds	r0, #44	; 0x2c
 800fe7a:	f002 fdf8 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800fe7e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800fe82:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800fe86:	4620      	mov	r0, r4
 800fe88:	f7ff ffc8 	bl	800fe1c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800fe8c:	bd10      	pop	{r4, pc}
	...

0800fe90 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800fe90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fe92:	4604      	mov	r4, r0
 800fe94:	4626      	mov	r6, r4
 800fe96:	2500      	movs	r5, #0
 800fe98:	f7ff ffa8 	bl	800fdec <_ZN8touchgfx8DrawableC1Ev>
 800fe9c:	4b23      	ldr	r3, [pc, #140]	; (800ff2c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800fe9e:	62a5      	str	r5, [r4, #40]	; 0x28
 800fea0:	f846 3b2c 	str.w	r3, [r6], #44
 800fea4:	2226      	movs	r2, #38	; 0x26
 800fea6:	4629      	mov	r1, r5
 800fea8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800feac:	4630      	mov	r0, r6
 800feae:	f8ad 7004 	strh.w	r7, [sp, #4]
 800feb2:	f01a fb74 	bl	802a59e <memset>
 800feb6:	4630      	mov	r0, r6
 800feb8:	f7ff ff98 	bl	800fdec <_ZN8touchgfx8DrawableC1Ev>
 800febc:	a902      	add	r1, sp, #8
 800febe:	4b1c      	ldr	r3, [pc, #112]	; (800ff30 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800fec0:	62e3      	str	r3, [r4, #44]	; 0x2c
 800fec2:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800fec6:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800feca:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800fece:	4630      	mov	r0, r6
 800fed0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800fed4:	f002 fdcb 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800fed8:	4638      	mov	r0, r7
 800feda:	f7ff ff87 	bl	800fdec <_ZN8touchgfx8DrawableC1Ev>
 800fede:	4b15      	ldr	r3, [pc, #84]	; (800ff34 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800fee0:	65a3      	str	r3, [r4, #88]	; 0x58
 800fee2:	2364      	movs	r3, #100	; 0x64
 800fee4:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800fee8:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800feec:	4b12      	ldr	r3, [pc, #72]	; (800ff38 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800feee:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800fef2:	4629      	mov	r1, r5
 800fef4:	4630      	mov	r0, r6
 800fef6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800fefa:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800fefe:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800ff02:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800ff06:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800ff0a:	f7f0 ffe3 	bl	8000ed4 <_ZN8touchgfx8Drawable4setXEs>
 800ff0e:	4629      	mov	r1, r5
 800ff10:	4630      	mov	r0, r6
 800ff12:	f7f0 ffe1 	bl	8000ed8 <_ZN8touchgfx8Drawable4setYEs>
 800ff16:	4631      	mov	r1, r6
 800ff18:	4620      	mov	r0, r4
 800ff1a:	f000 f819 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800ff1e:	4620      	mov	r0, r4
 800ff20:	4639      	mov	r1, r7
 800ff22:	f000 f815 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800ff26:	4620      	mov	r0, r4
 800ff28:	b003      	add	sp, #12
 800ff2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ff2c:	0802e230 	.word	0x0802e230
 800ff30:	0802e858 	.word	0x0802e858
 800ff34:	0802e304 	.word	0x0802e304
 800ff38:	0801714b 	.word	0x0801714b

0800ff3c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800ff3c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ff3e:	2000      	movs	r0, #0
 800ff40:	b12b      	cbz	r3, 800ff4e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800ff42:	b920      	cbnz	r0, 800ff4e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800ff44:	1a5a      	subs	r2, r3, r1
 800ff46:	4250      	negs	r0, r2
 800ff48:	4150      	adcs	r0, r2
 800ff4a:	699b      	ldr	r3, [r3, #24]
 800ff4c:	e7f8      	b.n	800ff40 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800ff4e:	4770      	bx	lr

0800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800ff50:	2300      	movs	r3, #0
 800ff52:	6148      	str	r0, [r1, #20]
 800ff54:	618b      	str	r3, [r1, #24]
 800ff56:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ff58:	b913      	cbnz	r3, 800ff60 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800ff5a:	6281      	str	r1, [r0, #40]	; 0x28
 800ff5c:	4770      	bx	lr
 800ff5e:	4613      	mov	r3, r2
 800ff60:	699a      	ldr	r2, [r3, #24]
 800ff62:	2a00      	cmp	r2, #0
 800ff64:	d1fb      	bne.n	800ff5e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800ff66:	6199      	str	r1, [r3, #24]
 800ff68:	4770      	bx	lr

0800ff6a <_ZN8touchgfx9Container9removeAllEv>:
 800ff6a:	2200      	movs	r2, #0
 800ff6c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ff6e:	b123      	cbz	r3, 800ff7a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800ff70:	6999      	ldr	r1, [r3, #24]
 800ff72:	6281      	str	r1, [r0, #40]	; 0x28
 800ff74:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800ff78:	e7f8      	b.n	800ff6c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800ff7a:	4770      	bx	lr

0800ff7c <_ZN8touchgfx9Container6unlinkEv>:
 800ff7c:	2300      	movs	r3, #0
 800ff7e:	6283      	str	r3, [r0, #40]	; 0x28
 800ff80:	4770      	bx	lr

0800ff82 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800ff82:	2200      	movs	r2, #0
 800ff84:	8002      	strh	r2, [r0, #0]
 800ff86:	8042      	strh	r2, [r0, #2]
 800ff88:	8082      	strh	r2, [r0, #4]
 800ff8a:	80c2      	strh	r2, [r0, #6]
 800ff8c:	4770      	bx	lr

0800ff8e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800ff8e:	b570      	push	{r4, r5, r6, lr}
 800ff90:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ff92:	460d      	mov	r5, r1
 800ff94:	4616      	mov	r6, r2
 800ff96:	b13c      	cbz	r4, 800ffa8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800ff98:	6823      	ldr	r3, [r4, #0]
 800ff9a:	4620      	mov	r0, r4
 800ff9c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800ff9e:	4632      	mov	r2, r6
 800ffa0:	4629      	mov	r1, r5
 800ffa2:	4798      	blx	r3
 800ffa4:	69a4      	ldr	r4, [r4, #24]
 800ffa6:	e7f6      	b.n	800ff96 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800ffa8:	bd70      	pop	{r4, r5, r6, pc}

0800ffaa <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800ffaa:	b538      	push	{r3, r4, r5, lr}
 800ffac:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ffae:	460d      	mov	r5, r1
 800ffb0:	b134      	cbz	r4, 800ffc0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800ffb2:	682b      	ldr	r3, [r5, #0]
 800ffb4:	4621      	mov	r1, r4
 800ffb6:	689b      	ldr	r3, [r3, #8]
 800ffb8:	4628      	mov	r0, r5
 800ffba:	4798      	blx	r3
 800ffbc:	69a4      	ldr	r4, [r4, #24]
 800ffbe:	e7f7      	b.n	800ffb0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800ffc0:	bd38      	pop	{r3, r4, r5, pc}

0800ffc2 <_ZN8touchgfx9ContainerD1Ev>:
 800ffc2:	4770      	bx	lr

0800ffc4 <_ZN8touchgfx9ContainerD0Ev>:
 800ffc4:	b510      	push	{r4, lr}
 800ffc6:	212c      	movs	r1, #44	; 0x2c
 800ffc8:	4604      	mov	r4, r0
 800ffca:	f019 fad0 	bl	802956e <_ZdlPvj>
 800ffce:	4620      	mov	r0, r4
 800ffd0:	bd10      	pop	{r4, pc}

0800ffd2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800ffd2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ffd4:	b19b      	cbz	r3, 800fffe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800ffd6:	428b      	cmp	r3, r1
 800ffd8:	d109      	bne.n	800ffee <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800ffda:	699a      	ldr	r2, [r3, #24]
 800ffdc:	2100      	movs	r1, #0
 800ffde:	6159      	str	r1, [r3, #20]
 800ffe0:	6282      	str	r2, [r0, #40]	; 0x28
 800ffe2:	b902      	cbnz	r2, 800ffe6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800ffe4:	4770      	bx	lr
 800ffe6:	6199      	str	r1, [r3, #24]
 800ffe8:	4770      	bx	lr
 800ffea:	4613      	mov	r3, r2
 800ffec:	b13a      	cbz	r2, 800fffe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800ffee:	699a      	ldr	r2, [r3, #24]
 800fff0:	428a      	cmp	r2, r1
 800fff2:	d1fa      	bne.n	800ffea <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800fff4:	698a      	ldr	r2, [r1, #24]
 800fff6:	619a      	str	r2, [r3, #24]
 800fff8:	2300      	movs	r3, #0
 800fffa:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800fffe:	4770      	bx	lr

08010000 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8010000:	b410      	push	{r4}
 8010002:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010004:	4604      	mov	r4, r0
 8010006:	b92b      	cbnz	r3, 8010014 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8010008:	6803      	ldr	r3, [r0, #0]
 801000a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801000e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8010010:	4611      	mov	r1, r2
 8010012:	4718      	bx	r3
 8010014:	b941      	cbnz	r1, 8010028 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8010016:	6193      	str	r3, [r2, #24]
 8010018:	6282      	str	r2, [r0, #40]	; 0x28
 801001a:	6154      	str	r4, [r2, #20]
 801001c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010020:	4770      	bx	lr
 8010022:	4603      	mov	r3, r0
 8010024:	2800      	cmp	r0, #0
 8010026:	d0f9      	beq.n	801001c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8010028:	4299      	cmp	r1, r3
 801002a:	6998      	ldr	r0, [r3, #24]
 801002c:	d1f9      	bne.n	8010022 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 801002e:	6190      	str	r0, [r2, #24]
 8010030:	618a      	str	r2, [r1, #24]
 8010032:	e7f2      	b.n	801001a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08010034 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8010034:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010038:	461f      	mov	r7, r3
 801003a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 801003e:	460d      	mov	r5, r1
 8010040:	4616      	mov	r6, r2
 8010042:	b103      	cbz	r3, 8010046 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8010044:	6038      	str	r0, [r7, #0]
 8010046:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010048:	b314      	cbz	r4, 8010090 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 801004a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801004e:	b1eb      	cbz	r3, 801008c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010050:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010054:	428d      	cmp	r5, r1
 8010056:	db19      	blt.n	801008c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010058:	8923      	ldrh	r3, [r4, #8]
 801005a:	b289      	uxth	r1, r1
 801005c:	440b      	add	r3, r1
 801005e:	b21b      	sxth	r3, r3
 8010060:	429d      	cmp	r5, r3
 8010062:	da13      	bge.n	801008c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010064:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010068:	4296      	cmp	r6, r2
 801006a:	db0f      	blt.n	801008c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801006c:	8963      	ldrh	r3, [r4, #10]
 801006e:	b292      	uxth	r2, r2
 8010070:	4413      	add	r3, r2
 8010072:	b21b      	sxth	r3, r3
 8010074:	429e      	cmp	r6, r3
 8010076:	da09      	bge.n	801008c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010078:	6823      	ldr	r3, [r4, #0]
 801007a:	1ab2      	subs	r2, r6, r2
 801007c:	1a69      	subs	r1, r5, r1
 801007e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8010082:	b212      	sxth	r2, r2
 8010084:	463b      	mov	r3, r7
 8010086:	b209      	sxth	r1, r1
 8010088:	4620      	mov	r0, r4
 801008a:	47c0      	blx	r8
 801008c:	69a4      	ldr	r4, [r4, #24]
 801008e:	e7db      	b.n	8010048 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8010090:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010094 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8010094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010098:	4c6e      	ldr	r4, [pc, #440]	; (8010254 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801009a:	b0a1      	sub	sp, #132	; 0x84
 801009c:	6824      	ldr	r4, [r4, #0]
 801009e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80100a0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 80100a4:	9303      	str	r3, [sp, #12]
 80100a6:	2400      	movs	r4, #0
 80100a8:	802c      	strh	r4, [r5, #0]
 80100aa:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 80100ac:	802c      	strh	r4, [r5, #0]
 80100ae:	601c      	str	r4, [r3, #0]
 80100b0:	4606      	mov	r6, r0
 80100b2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80100b6:	f7ff ffbd 	bl	8010034 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80100ba:	f1b9 0f03 	cmp.w	r9, #3
 80100be:	f340 80c2 	ble.w	8010246 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 80100c2:	4631      	mov	r1, r6
 80100c4:	a80c      	add	r0, sp, #48	; 0x30
 80100c6:	f006 fb5f 	bl	8016788 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80100ca:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80100ce:	9306      	str	r3, [sp, #24]
 80100d0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80100d4:	9307      	str	r3, [sp, #28]
 80100d6:	9b03      	ldr	r3, [sp, #12]
 80100d8:	f8d3 a000 	ldr.w	sl, [r3]
 80100dc:	f1ba 0f00 	cmp.w	sl, #0
 80100e0:	f000 80b4 	beq.w	801024c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 80100e4:	4651      	mov	r1, sl
 80100e6:	a810      	add	r0, sp, #64	; 0x40
 80100e8:	f006 fb4e 	bl	8016788 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80100ec:	9b01      	ldr	r3, [sp, #4]
 80100ee:	9a06      	ldr	r2, [sp, #24]
 80100f0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 80100f4:	189d      	adds	r5, r3, r2
 80100f6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 80100fa:	9a07      	ldr	r2, [sp, #28]
 80100fc:	2002      	movs	r0, #2
 80100fe:	fb91 f1f0 	sdiv	r1, r1, r0
 8010102:	4419      	add	r1, r3
 8010104:	1a6d      	subs	r5, r5, r1
 8010106:	9b02      	ldr	r3, [sp, #8]
 8010108:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801010c:	4413      	add	r3, r2
 801010e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8010112:	fb92 f2f0 	sdiv	r2, r2, r0
 8010116:	440a      	add	r2, r1
 8010118:	1a9b      	subs	r3, r3, r2
 801011a:	435b      	muls	r3, r3
 801011c:	fb05 3505 	mla	r5, r5, r5, r3
 8010120:	4f4d      	ldr	r7, [pc, #308]	; (8010258 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8010122:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010124:	ac10      	add	r4, sp, #64	; 0x40
 8010126:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010128:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801012a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801012c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801012e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010130:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8010134:	f1b9 0f0c 	cmp.w	r9, #12
 8010138:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801013c:	f04f 0303 	mov.w	r3, #3
 8010140:	bfc8      	it	gt
 8010142:	4698      	movgt	r8, r3
 8010144:	f8cd 9000 	str.w	r9, [sp]
 8010148:	f04f 0400 	mov.w	r4, #0
 801014c:	bfdc      	itt	le
 801014e:	f109 32ff 	addle.w	r2, r9, #4294967295
 8010152:	fb92 f8f3 	sdivle	r8, r2, r3
 8010156:	1c63      	adds	r3, r4, #1
 8010158:	aa10      	add	r2, sp, #64	; 0x40
 801015a:	f004 0401 	and.w	r4, r4, #1
 801015e:	9308      	str	r3, [sp, #32]
 8010160:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010164:	9b00      	ldr	r3, [sp, #0]
 8010166:	fb93 f3f8 	sdiv	r3, r3, r8
 801016a:	b29b      	uxth	r3, r3
 801016c:	3404      	adds	r4, #4
 801016e:	f04f 0b00 	mov.w	fp, #0
 8010172:	9304      	str	r3, [sp, #16]
 8010174:	9a04      	ldr	r2, [sp, #16]
 8010176:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801017a:	fb13 f302 	smulbb	r3, r3, r2
 801017e:	9a01      	ldr	r2, [sp, #4]
 8010180:	b29b      	uxth	r3, r3
 8010182:	1899      	adds	r1, r3, r2
 8010184:	9305      	str	r3, [sp, #20]
 8010186:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801018a:	b209      	sxth	r1, r1
 801018c:	4299      	cmp	r1, r3
 801018e:	db4d      	blt.n	801022c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010190:	8932      	ldrh	r2, [r6, #8]
 8010192:	4413      	add	r3, r2
 8010194:	b21b      	sxth	r3, r3
 8010196:	4299      	cmp	r1, r3
 8010198:	da48      	bge.n	801022c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801019a:	9b04      	ldr	r3, [sp, #16]
 801019c:	6827      	ldr	r7, [r4, #0]
 801019e:	fb17 f703 	smulbb	r7, r7, r3
 80101a2:	9b02      	ldr	r3, [sp, #8]
 80101a4:	b2bf      	uxth	r7, r7
 80101a6:	18fa      	adds	r2, r7, r3
 80101a8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80101ac:	b212      	sxth	r2, r2
 80101ae:	429a      	cmp	r2, r3
 80101b0:	db3c      	blt.n	801022c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80101b2:	8970      	ldrh	r0, [r6, #10]
 80101b4:	4403      	add	r3, r0
 80101b6:	b21b      	sxth	r3, r3
 80101b8:	429a      	cmp	r2, r3
 80101ba:	da37      	bge.n	801022c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80101bc:	2300      	movs	r3, #0
 80101be:	930b      	str	r3, [sp, #44]	; 0x2c
 80101c0:	4630      	mov	r0, r6
 80101c2:	ab0b      	add	r3, sp, #44	; 0x2c
 80101c4:	f7ff ff36 	bl	8010034 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80101c8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80101ca:	b37a      	cbz	r2, 801022c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80101cc:	4552      	cmp	r2, sl
 80101ce:	d02d      	beq.n	801022c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80101d0:	4611      	mov	r1, r2
 80101d2:	a80e      	add	r0, sp, #56	; 0x38
 80101d4:	9209      	str	r2, [sp, #36]	; 0x24
 80101d6:	f006 fad7 	bl	8016788 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80101da:	9a06      	ldr	r2, [sp, #24]
 80101dc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 80101e0:	9b01      	ldr	r3, [sp, #4]
 80101e2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 80101e6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 80101ea:	4413      	add	r3, r2
 80101ec:	f04f 0e02 	mov.w	lr, #2
 80101f0:	fb91 f1fe 	sdiv	r1, r1, lr
 80101f4:	4401      	add	r1, r0
 80101f6:	1a58      	subs	r0, r3, r1
 80101f8:	9a07      	ldr	r2, [sp, #28]
 80101fa:	9b02      	ldr	r3, [sp, #8]
 80101fc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8010200:	fb9c fcfe 	sdiv	ip, ip, lr
 8010204:	4413      	add	r3, r2
 8010206:	448c      	add	ip, r1
 8010208:	eba3 030c 	sub.w	r3, r3, ip
 801020c:	435b      	muls	r3, r3
 801020e:	fb00 3300 	mla	r3, r0, r0, r3
 8010212:	42ab      	cmp	r3, r5
 8010214:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010216:	d208      	bcs.n	801022a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8010218:	9803      	ldr	r0, [sp, #12]
 801021a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801021c:	6001      	str	r1, [r0, #0]
 801021e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8010220:	9805      	ldr	r0, [sp, #20]
 8010222:	8008      	strh	r0, [r1, #0]
 8010224:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010226:	461d      	mov	r5, r3
 8010228:	800f      	strh	r7, [r1, #0]
 801022a:	4692      	mov	sl, r2
 801022c:	f10b 0b01 	add.w	fp, fp, #1
 8010230:	f1bb 0f04 	cmp.w	fp, #4
 8010234:	f104 0408 	add.w	r4, r4, #8
 8010238:	d19c      	bne.n	8010174 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 801023a:	9b00      	ldr	r3, [sp, #0]
 801023c:	9c08      	ldr	r4, [sp, #32]
 801023e:	444b      	add	r3, r9
 8010240:	4544      	cmp	r4, r8
 8010242:	9300      	str	r3, [sp, #0]
 8010244:	d187      	bne.n	8010156 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8010246:	b021      	add	sp, #132	; 0x84
 8010248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801024c:	f04f 35ff 	mov.w	r5, #4294967295
 8010250:	e766      	b.n	8010120 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010252:	bf00      	nop
 8010254:	20012f2c 	.word	0x20012f2c
 8010258:	0802b2ac 	.word	0x0802b2ac

0801025c <_ZN8touchgfx4RectaNERKS0_>:
 801025c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010260:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010264:	888c      	ldrh	r4, [r1, #4]
 8010266:	f9b0 9000 	ldrsh.w	r9, [r0]
 801026a:	443c      	add	r4, r7
 801026c:	b2a4      	uxth	r4, r4
 801026e:	fa0f f884 	sxth.w	r8, r4
 8010272:	45c1      	cmp	r9, r8
 8010274:	da2f      	bge.n	80102d6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010276:	8882      	ldrh	r2, [r0, #4]
 8010278:	444a      	add	r2, r9
 801027a:	b292      	uxth	r2, r2
 801027c:	fa0f fe82 	sxth.w	lr, r2
 8010280:	4577      	cmp	r7, lr
 8010282:	da28      	bge.n	80102d6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010284:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010288:	88cb      	ldrh	r3, [r1, #6]
 801028a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801028e:	442b      	add	r3, r5
 8010290:	b21b      	sxth	r3, r3
 8010292:	429e      	cmp	r6, r3
 8010294:	da1f      	bge.n	80102d6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010296:	88c3      	ldrh	r3, [r0, #6]
 8010298:	4433      	add	r3, r6
 801029a:	b29b      	uxth	r3, r3
 801029c:	fa0f fc83 	sxth.w	ip, r3
 80102a0:	4565      	cmp	r5, ip
 80102a2:	da18      	bge.n	80102d6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80102a4:	454f      	cmp	r7, r9
 80102a6:	bfb8      	it	lt
 80102a8:	464f      	movlt	r7, r9
 80102aa:	42b5      	cmp	r5, r6
 80102ac:	bfb8      	it	lt
 80102ae:	4635      	movlt	r5, r6
 80102b0:	45f0      	cmp	r8, lr
 80102b2:	bfd8      	it	le
 80102b4:	4622      	movle	r2, r4
 80102b6:	1bd2      	subs	r2, r2, r7
 80102b8:	8082      	strh	r2, [r0, #4]
 80102ba:	884a      	ldrh	r2, [r1, #2]
 80102bc:	88c9      	ldrh	r1, [r1, #6]
 80102be:	8007      	strh	r7, [r0, #0]
 80102c0:	440a      	add	r2, r1
 80102c2:	b292      	uxth	r2, r2
 80102c4:	b211      	sxth	r1, r2
 80102c6:	458c      	cmp	ip, r1
 80102c8:	bfa8      	it	ge
 80102ca:	4613      	movge	r3, r2
 80102cc:	1b5b      	subs	r3, r3, r5
 80102ce:	80c3      	strh	r3, [r0, #6]
 80102d0:	8045      	strh	r5, [r0, #2]
 80102d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80102d6:	2300      	movs	r3, #0
 80102d8:	8003      	strh	r3, [r0, #0]
 80102da:	8043      	strh	r3, [r0, #2]
 80102dc:	8083      	strh	r3, [r0, #4]
 80102de:	80c3      	strh	r3, [r0, #6]
 80102e0:	e7f7      	b.n	80102d2 <_ZN8touchgfx4RectaNERKS0_+0x76>

080102e2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 80102e2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80102e6:	2b00      	cmp	r3, #0
 80102e8:	dd06      	ble.n	80102f8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 80102ea:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 80102ee:	2800      	cmp	r0, #0
 80102f0:	bfcc      	ite	gt
 80102f2:	2000      	movgt	r0, #0
 80102f4:	2001      	movle	r0, #1
 80102f6:	4770      	bx	lr
 80102f8:	2001      	movs	r0, #1
 80102fa:	4770      	bx	lr

080102fc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 80102fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010300:	2300      	movs	r3, #0
 8010302:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010304:	8003      	strh	r3, [r0, #0]
 8010306:	4604      	mov	r4, r0
 8010308:	8043      	strh	r3, [r0, #2]
 801030a:	8083      	strh	r3, [r0, #4]
 801030c:	80c3      	strh	r3, [r0, #6]
 801030e:	2d00      	cmp	r5, #0
 8010310:	d040      	beq.n	8010394 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010312:	1d28      	adds	r0, r5, #4
 8010314:	f7ff ffe5 	bl	80102e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010318:	b988      	cbnz	r0, 801033e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 801031a:	4620      	mov	r0, r4
 801031c:	f7ff ffe1 	bl	80102e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010320:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010324:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010328:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 801032c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010330:	b138      	cbz	r0, 8010342 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010332:	8022      	strh	r2, [r4, #0]
 8010334:	8063      	strh	r3, [r4, #2]
 8010336:	f8a4 e004 	strh.w	lr, [r4, #4]
 801033a:	f8a4 c006 	strh.w	ip, [r4, #6]
 801033e:	69ad      	ldr	r5, [r5, #24]
 8010340:	e7e5      	b.n	801030e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010342:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010346:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801034a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 801034e:	4290      	cmp	r0, r2
 8010350:	4607      	mov	r7, r0
 8010352:	bfa8      	it	ge
 8010354:	4617      	movge	r7, r2
 8010356:	4472      	add	r2, lr
 8010358:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 801035c:	8027      	strh	r7, [r4, #0]
 801035e:	4299      	cmp	r1, r3
 8010360:	460e      	mov	r6, r1
 8010362:	4440      	add	r0, r8
 8010364:	bfa8      	it	ge
 8010366:	461e      	movge	r6, r3
 8010368:	4471      	add	r1, lr
 801036a:	4463      	add	r3, ip
 801036c:	b200      	sxth	r0, r0
 801036e:	b212      	sxth	r2, r2
 8010370:	b209      	sxth	r1, r1
 8010372:	b21b      	sxth	r3, r3
 8010374:	4290      	cmp	r0, r2
 8010376:	bfac      	ite	ge
 8010378:	ebc7 0200 	rsbge	r2, r7, r0
 801037c:	ebc7 0202 	rsblt	r2, r7, r2
 8010380:	4299      	cmp	r1, r3
 8010382:	bfac      	ite	ge
 8010384:	ebc6 0301 	rsbge	r3, r6, r1
 8010388:	ebc6 0303 	rsblt	r3, r6, r3
 801038c:	8066      	strh	r6, [r4, #2]
 801038e:	80a2      	strh	r2, [r4, #4]
 8010390:	80e3      	strh	r3, [r4, #6]
 8010392:	e7d4      	b.n	801033e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010394:	4620      	mov	r0, r4
 8010396:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801039a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 801039a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801039e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80103a2:	b383      	cbz	r3, 8010406 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80103a4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80103a6:	b374      	cbz	r4, 8010406 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80103a8:	f9b1 5000 	ldrsh.w	r5, [r1]
 80103ac:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 80103b0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 80103b4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 80103b8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80103bc:	b303      	cbz	r3, 8010400 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80103be:	4668      	mov	r0, sp
 80103c0:	1d21      	adds	r1, r4, #4
 80103c2:	f8ad 5000 	strh.w	r5, [sp]
 80103c6:	f8ad 6002 	strh.w	r6, [sp, #2]
 80103ca:	f8ad 7004 	strh.w	r7, [sp, #4]
 80103ce:	f8ad 8006 	strh.w	r8, [sp, #6]
 80103d2:	f7ff ff43 	bl	801025c <_ZN8touchgfx4RectaNERKS0_>
 80103d6:	4668      	mov	r0, sp
 80103d8:	f7ff ff83 	bl	80102e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80103dc:	b980      	cbnz	r0, 8010400 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80103de:	f8bd 3000 	ldrh.w	r3, [sp]
 80103e2:	88a2      	ldrh	r2, [r4, #4]
 80103e4:	1a9b      	subs	r3, r3, r2
 80103e6:	f8ad 3000 	strh.w	r3, [sp]
 80103ea:	88e2      	ldrh	r2, [r4, #6]
 80103ec:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80103f0:	1a9b      	subs	r3, r3, r2
 80103f2:	f8ad 3002 	strh.w	r3, [sp, #2]
 80103f6:	6823      	ldr	r3, [r4, #0]
 80103f8:	4669      	mov	r1, sp
 80103fa:	689b      	ldr	r3, [r3, #8]
 80103fc:	4620      	mov	r0, r4
 80103fe:	4798      	blx	r3
 8010400:	69a4      	ldr	r4, [r4, #24]
 8010402:	2c00      	cmp	r4, #0
 8010404:	d1d8      	bne.n	80103b8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010406:	b002      	add	sp, #8
 8010408:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801040c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 801040c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801040e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010412:	460d      	mov	r5, r1
 8010414:	4616      	mov	r6, r2
 8010416:	b323      	cbz	r3, 8010462 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010418:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801041a:	b314      	cbz	r4, 8010462 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 801041c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010420:	b1eb      	cbz	r3, 801045e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010422:	6828      	ldr	r0, [r5, #0]
 8010424:	6869      	ldr	r1, [r5, #4]
 8010426:	466b      	mov	r3, sp
 8010428:	c303      	stmia	r3!, {r0, r1}
 801042a:	4668      	mov	r0, sp
 801042c:	1d21      	adds	r1, r4, #4
 801042e:	f7ff ff15 	bl	801025c <_ZN8touchgfx4RectaNERKS0_>
 8010432:	4668      	mov	r0, sp
 8010434:	f7ff ff55 	bl	80102e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010438:	b988      	cbnz	r0, 801045e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 801043a:	f8bd 3000 	ldrh.w	r3, [sp]
 801043e:	88a2      	ldrh	r2, [r4, #4]
 8010440:	1a9b      	subs	r3, r3, r2
 8010442:	f8ad 3000 	strh.w	r3, [sp]
 8010446:	88e2      	ldrh	r2, [r4, #6]
 8010448:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801044c:	1a9b      	subs	r3, r3, r2
 801044e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010452:	6823      	ldr	r3, [r4, #0]
 8010454:	4632      	mov	r2, r6
 8010456:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010458:	4669      	mov	r1, sp
 801045a:	4620      	mov	r0, r4
 801045c:	4798      	blx	r3
 801045e:	69a4      	ldr	r4, [r4, #24]
 8010460:	e7db      	b.n	801041a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010462:	b002      	add	sp, #8
 8010464:	bd70      	pop	{r4, r5, r6, pc}

08010466 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8010466:	b513      	push	{r0, r1, r4, lr}
 8010468:	6803      	ldr	r3, [r0, #0]
 801046a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 801046e:	2300      	movs	r3, #0
 8010470:	e9cd 3300 	strd	r3, r3, [sp]
 8010474:	466b      	mov	r3, sp
 8010476:	47a0      	blx	r4
 8010478:	b002      	add	sp, #8
 801047a:	bd10      	pop	{r4, pc}

0801047c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 801047c:	2301      	movs	r3, #1
 801047e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010482:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010486:	4770      	bx	lr

08010488 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8010488:	2301      	movs	r3, #1
 801048a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 801048e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010492:	4770      	bx	lr

08010494 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8010494:	6843      	ldr	r3, [r0, #4]
 8010496:	2201      	movs	r2, #1
 8010498:	725a      	strb	r2, [r3, #9]
 801049a:	6840      	ldr	r0, [r0, #4]
 801049c:	6803      	ldr	r3, [r0, #0]
 801049e:	691b      	ldr	r3, [r3, #16]
 80104a0:	4718      	bx	r3

080104a2 <_ZN8touchgfx3HAL8flushDMAEv>:
 80104a2:	6840      	ldr	r0, [r0, #4]
 80104a4:	6803      	ldr	r3, [r0, #0]
 80104a6:	689b      	ldr	r3, [r3, #8]
 80104a8:	4718      	bx	r3

080104aa <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 80104aa:	b530      	push	{r4, r5, lr}
 80104ac:	b08b      	sub	sp, #44	; 0x2c
 80104ae:	6804      	ldr	r4, [r0, #0]
 80104b0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80104b4:	9509      	str	r5, [sp, #36]	; 0x24
 80104b6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 80104ba:	9508      	str	r5, [sp, #32]
 80104bc:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80104c0:	9507      	str	r5, [sp, #28]
 80104c2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80104c6:	9506      	str	r5, [sp, #24]
 80104c8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80104cc:	9505      	str	r5, [sp, #20]
 80104ce:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80104d2:	9504      	str	r5, [sp, #16]
 80104d4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 80104d8:	9503      	str	r5, [sp, #12]
 80104da:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 80104de:	9502      	str	r5, [sp, #8]
 80104e0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80104e4:	e9cd 3500 	strd	r3, r5, [sp]
 80104e8:	4613      	mov	r3, r2
 80104ea:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 80104ec:	2200      	movs	r2, #0
 80104ee:	47a0      	blx	r4
 80104f0:	b00b      	add	sp, #44	; 0x2c
 80104f2:	bd30      	pop	{r4, r5, pc}

080104f4 <_ZN8touchgfx3HAL10beginFrameEv>:
 80104f4:	4b04      	ldr	r3, [pc, #16]	; (8010508 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 80104f6:	781b      	ldrb	r3, [r3, #0]
 80104f8:	b123      	cbz	r3, 8010504 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80104fa:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 80104fe:	f080 0001 	eor.w	r0, r0, #1
 8010502:	4770      	bx	lr
 8010504:	2001      	movs	r0, #1
 8010506:	4770      	bx	lr
 8010508:	20012f2a 	.word	0x20012f2a

0801050c <_ZN8touchgfx3HAL8endFrameEv>:
 801050c:	b510      	push	{r4, lr}
 801050e:	4604      	mov	r4, r0
 8010510:	6840      	ldr	r0, [r0, #4]
 8010512:	6803      	ldr	r3, [r0, #0]
 8010514:	689b      	ldr	r3, [r3, #8]
 8010516:	4798      	blx	r3
 8010518:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 801051c:	b113      	cbz	r3, 8010524 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 801051e:	2301      	movs	r3, #1
 8010520:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010524:	bd10      	pop	{r4, pc}

08010526 <_ZN8touchgfx3HAL10initializeEv>:
 8010526:	b510      	push	{r4, lr}
 8010528:	4604      	mov	r4, r0
 801052a:	f7f0 fabf 	bl	8000aac <_ZN8touchgfx10OSWrappers10initializeEv>
 801052e:	f7f0 f9cb 	bl	80008c8 <_ZN8touchgfx4GPIO4initEv>
 8010532:	6860      	ldr	r0, [r4, #4]
 8010534:	6803      	ldr	r3, [r0, #0]
 8010536:	68db      	ldr	r3, [r3, #12]
 8010538:	4798      	blx	r3
 801053a:	68e0      	ldr	r0, [r4, #12]
 801053c:	6803      	ldr	r3, [r0, #0]
 801053e:	689b      	ldr	r3, [r3, #8]
 8010540:	4798      	blx	r3
 8010542:	6823      	ldr	r3, [r4, #0]
 8010544:	4620      	mov	r0, r4
 8010546:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8010548:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801054c:	4718      	bx	r3
	...

08010550 <_ZN8touchgfx3HAL4tickEv>:
 8010550:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010552:	6803      	ldr	r3, [r0, #0]
 8010554:	4d5b      	ldr	r5, [pc, #364]	; (80106c4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010556:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801055a:	4604      	mov	r4, r0
 801055c:	4798      	blx	r3
 801055e:	2800      	cmp	r0, #0
 8010560:	f000 8095 	beq.w	801068e <_ZN8touchgfx3HAL4tickEv+0x13e>
 8010564:	2001      	movs	r0, #1
 8010566:	f7f0 f961 	bl	800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801056a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 801056e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010572:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8010576:	2600      	movs	r6, #0
 8010578:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 801057c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8010580:	b133      	cbz	r3, 8010590 <_ZN8touchgfx3HAL4tickEv+0x40>
 8010582:	6823      	ldr	r3, [r4, #0]
 8010584:	4620      	mov	r0, r4
 8010586:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 801058a:	4798      	blx	r3
 801058c:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8010590:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8010594:	6862      	ldr	r2, [r4, #4]
 8010596:	f083 0301 	eor.w	r3, r3, #1
 801059a:	7253      	strb	r3, [r2, #9]
 801059c:	2601      	movs	r6, #1
 801059e:	702e      	strb	r6, [r5, #0]
 80105a0:	f004 ff6e 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
 80105a4:	6803      	ldr	r3, [r0, #0]
 80105a6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80105a8:	4798      	blx	r3
 80105aa:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 80105ae:	b90b      	cbnz	r3, 80105b4 <_ZN8touchgfx3HAL4tickEv+0x64>
 80105b0:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 80105b4:	f004 ff64 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
 80105b8:	6803      	ldr	r3, [r0, #0]
 80105ba:	695b      	ldr	r3, [r3, #20]
 80105bc:	4798      	blx	r3
 80105be:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80105c0:	6803      	ldr	r3, [r0, #0]
 80105c2:	691b      	ldr	r3, [r3, #16]
 80105c4:	4798      	blx	r3
 80105c6:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 80105ca:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 80105ce:	3b01      	subs	r3, #1
 80105d0:	b2db      	uxtb	r3, r3
 80105d2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80105d6:	b10a      	cbz	r2, 80105dc <_ZN8touchgfx3HAL4tickEv+0x8c>
 80105d8:	2b00      	cmp	r3, #0
 80105da:	d1eb      	bne.n	80105b4 <_ZN8touchgfx3HAL4tickEv+0x64>
 80105dc:	4a3a      	ldr	r2, [pc, #232]	; (80106c8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 80105de:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 80105e2:	7813      	ldrb	r3, [r2, #0]
 80105e4:	3301      	adds	r3, #1
 80105e6:	b25b      	sxtb	r3, r3
 80105e8:	4299      	cmp	r1, r3
 80105ea:	7013      	strb	r3, [r2, #0]
 80105ec:	dc10      	bgt.n	8010610 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80105ee:	68e0      	ldr	r0, [r4, #12]
 80105f0:	2300      	movs	r3, #0
 80105f2:	7013      	strb	r3, [r2, #0]
 80105f4:	6803      	ldr	r3, [r0, #0]
 80105f6:	aa03      	add	r2, sp, #12
 80105f8:	68db      	ldr	r3, [r3, #12]
 80105fa:	a902      	add	r1, sp, #8
 80105fc:	4798      	blx	r3
 80105fe:	6823      	ldr	r3, [r4, #0]
 8010600:	2800      	cmp	r0, #0
 8010602:	d050      	beq.n	80106a6 <_ZN8touchgfx3HAL4tickEv+0x156>
 8010604:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010608:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 801060c:	4620      	mov	r0, r4
 801060e:	4798      	blx	r3
 8010610:	6960      	ldr	r0, [r4, #20]
 8010612:	2300      	movs	r3, #0
 8010614:	f88d 3007 	strb.w	r3, [sp, #7]
 8010618:	b158      	cbz	r0, 8010632 <_ZN8touchgfx3HAL4tickEv+0xe2>
 801061a:	6803      	ldr	r3, [r0, #0]
 801061c:	f10d 0107 	add.w	r1, sp, #7
 8010620:	68db      	ldr	r3, [r3, #12]
 8010622:	4798      	blx	r3
 8010624:	b128      	cbz	r0, 8010632 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010626:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010628:	f89d 1007 	ldrb.w	r1, [sp, #7]
 801062c:	6803      	ldr	r3, [r0, #0]
 801062e:	68db      	ldr	r3, [r3, #12]
 8010630:	4798      	blx	r3
 8010632:	f104 001c 	add.w	r0, r4, #28
 8010636:	f015 feb9 	bl	80263ac <_ZN8touchgfx8Gestures4tickEv>
 801063a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 801063e:	b30b      	cbz	r3, 8010684 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010640:	6920      	ldr	r0, [r4, #16]
 8010642:	6803      	ldr	r3, [r0, #0]
 8010644:	691b      	ldr	r3, [r3, #16]
 8010646:	4798      	blx	r3
 8010648:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801064a:	4606      	mov	r6, r0
 801064c:	b903      	cbnz	r3, 8010650 <_ZN8touchgfx3HAL4tickEv+0x100>
 801064e:	6760      	str	r0, [r4, #116]	; 0x74
 8010650:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010652:	4a1e      	ldr	r2, [pc, #120]	; (80106cc <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010654:	1af3      	subs	r3, r6, r3
 8010656:	4293      	cmp	r3, r2
 8010658:	d914      	bls.n	8010684 <_ZN8touchgfx3HAL4tickEv+0x134>
 801065a:	6920      	ldr	r0, [r4, #16]
 801065c:	6803      	ldr	r3, [r0, #0]
 801065e:	699b      	ldr	r3, [r3, #24]
 8010660:	4798      	blx	r3
 8010662:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010664:	2264      	movs	r2, #100	; 0x64
 8010666:	1af3      	subs	r3, r6, r3
 8010668:	fbb3 f3f2 	udiv	r3, r3, r2
 801066c:	fbb0 f0f3 	udiv	r0, r0, r3
 8010670:	2800      	cmp	r0, #0
 8010672:	dc1d      	bgt.n	80106b0 <_ZN8touchgfx3HAL4tickEv+0x160>
 8010674:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8010678:	6920      	ldr	r0, [r4, #16]
 801067a:	6803      	ldr	r3, [r0, #0]
 801067c:	2100      	movs	r1, #0
 801067e:	69db      	ldr	r3, [r3, #28]
 8010680:	4798      	blx	r3
 8010682:	6766      	str	r6, [r4, #116]	; 0x74
 8010684:	f004 fefc 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
 8010688:	6803      	ldr	r3, [r0, #0]
 801068a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801068c:	4798      	blx	r3
 801068e:	6823      	ldr	r3, [r4, #0]
 8010690:	4620      	mov	r0, r4
 8010692:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010696:	4798      	blx	r3
 8010698:	2001      	movs	r0, #1
 801069a:	f7f0 f8df 	bl	800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801069e:	2300      	movs	r3, #0
 80106a0:	702b      	strb	r3, [r5, #0]
 80106a2:	b004      	add	sp, #16
 80106a4:	bd70      	pop	{r4, r5, r6, pc}
 80106a6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80106aa:	4620      	mov	r0, r4
 80106ac:	4798      	blx	r3
 80106ae:	e7af      	b.n	8010610 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80106b0:	2863      	cmp	r0, #99	; 0x63
 80106b2:	bfcb      	itete	gt
 80106b4:	2300      	movgt	r3, #0
 80106b6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80106ba:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 80106be:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 80106c2:	e7d9      	b.n	8010678 <_ZN8touchgfx3HAL4tickEv+0x128>
 80106c4:	20012f30 	.word	0x20012f30
 80106c8:	20012f31 	.word	0x20012f31
 80106cc:	05f5e100 	.word	0x05f5e100

080106d0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 80106d0:	b510      	push	{r4, lr}
 80106d2:	4604      	mov	r4, r0
 80106d4:	f7f0 fa1a 	bl	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 80106d8:	6863      	ldr	r3, [r4, #4]
 80106da:	2200      	movs	r2, #0
 80106dc:	729a      	strb	r2, [r3, #10]
 80106de:	bd10      	pop	{r4, pc}

080106e0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 80106e0:	65c1      	str	r1, [r0, #92]	; 0x5c
 80106e2:	301c      	adds	r0, #28
 80106e4:	f015 be60 	b.w	80263a8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080106e8 <_ZN8touchgfx3HAL5touchEll>:
 80106e8:	b530      	push	{r4, r5, lr}
 80106ea:	b087      	sub	sp, #28
 80106ec:	4604      	mov	r4, r0
 80106ee:	a804      	add	r0, sp, #16
 80106f0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80106f4:	f004 fc90 	bl	8015018 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80106f8:	9b04      	ldr	r3, [sp, #16]
 80106fa:	f8ad 300c 	strh.w	r3, [sp, #12]
 80106fe:	a906      	add	r1, sp, #24
 8010700:	9b05      	ldr	r3, [sp, #20]
 8010702:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8010706:	a803      	add	r0, sp, #12
 8010708:	f004 fcd8 	bl	80150bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 801070c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8010710:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010714:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8010718:	f104 001c 	add.w	r0, r4, #28
 801071c:	b189      	cbz	r1, 8010742 <_ZN8touchgfx3HAL5touchEll+0x5a>
 801071e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8010722:	9300      	str	r3, [sp, #0]
 8010724:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8010728:	4613      	mov	r3, r2
 801072a:	462a      	mov	r2, r5
 801072c:	f015 fe4c 	bl	80263c8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010730:	b128      	cbz	r0, 801073e <_ZN8touchgfx3HAL5touchEll+0x56>
 8010732:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010736:	6623      	str	r3, [r4, #96]	; 0x60
 8010738:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801073c:	6663      	str	r3, [r4, #100]	; 0x64
 801073e:	b007      	add	sp, #28
 8010740:	bd30      	pop	{r4, r5, pc}
 8010742:	f015 fe81 	bl	8026448 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010746:	2301      	movs	r3, #1
 8010748:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 801074c:	e7f1      	b.n	8010732 <_ZN8touchgfx3HAL5touchEll+0x4a>

0801074e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 801074e:	b510      	push	{r4, lr}
 8010750:	2b00      	cmp	r3, #0
 8010752:	d046      	beq.n	80107e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010754:	ea81 0002 	eor.w	r0, r1, r2
 8010758:	07c4      	lsls	r4, r0, #31
 801075a:	d508      	bpl.n	801076e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 801075c:	440b      	add	r3, r1
 801075e:	3a01      	subs	r2, #1
 8010760:	428b      	cmp	r3, r1
 8010762:	d93e      	bls.n	80107e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010764:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010768:	f801 0b01 	strb.w	r0, [r1], #1
 801076c:	e7f8      	b.n	8010760 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 801076e:	07d0      	lsls	r0, r2, #31
 8010770:	bf42      	ittt	mi
 8010772:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8010776:	f801 0b01 	strbmi.w	r0, [r1], #1
 801077a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 801077e:	2b01      	cmp	r3, #1
 8010780:	d911      	bls.n	80107a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010782:	ea81 0402 	eor.w	r4, r1, r2
 8010786:	07a4      	lsls	r4, r4, #30
 8010788:	4610      	mov	r0, r2
 801078a:	d022      	beq.n	80107d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 801078c:	f023 0401 	bic.w	r4, r3, #1
 8010790:	440c      	add	r4, r1
 8010792:	428c      	cmp	r4, r1
 8010794:	4602      	mov	r2, r0
 8010796:	d904      	bls.n	80107a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8010798:	8812      	ldrh	r2, [r2, #0]
 801079a:	f821 2b02 	strh.w	r2, [r1], #2
 801079e:	3002      	adds	r0, #2
 80107a0:	e7f7      	b.n	8010792 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 80107a2:	f003 0301 	and.w	r3, r3, #1
 80107a6:	f023 0003 	bic.w	r0, r3, #3
 80107aa:	4408      	add	r0, r1
 80107ac:	4288      	cmp	r0, r1
 80107ae:	4614      	mov	r4, r2
 80107b0:	d904      	bls.n	80107bc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80107b2:	6824      	ldr	r4, [r4, #0]
 80107b4:	f841 4b04 	str.w	r4, [r1], #4
 80107b8:	3204      	adds	r2, #4
 80107ba:	e7f7      	b.n	80107ac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 80107bc:	f003 0303 	and.w	r3, r3, #3
 80107c0:	440b      	add	r3, r1
 80107c2:	3a01      	subs	r2, #1
 80107c4:	428b      	cmp	r3, r1
 80107c6:	d90c      	bls.n	80107e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80107c8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80107cc:	f801 0b01 	strb.w	r0, [r1], #1
 80107d0:	e7f8      	b.n	80107c4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 80107d2:	0790      	lsls	r0, r2, #30
 80107d4:	d0e7      	beq.n	80107a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80107d6:	f832 0b02 	ldrh.w	r0, [r2], #2
 80107da:	f821 0b02 	strh.w	r0, [r1], #2
 80107de:	3b02      	subs	r3, #2
 80107e0:	e7e1      	b.n	80107a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80107e2:	2001      	movs	r0, #1
 80107e4:	bd10      	pop	{r4, pc}

080107e6 <_ZN8touchgfx3HAL7noTouchEv>:
 80107e6:	b510      	push	{r4, lr}
 80107e8:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 80107ec:	4604      	mov	r4, r0
 80107ee:	b153      	cbz	r3, 8010806 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80107f0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 80107f4:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 80107f8:	2101      	movs	r1, #1
 80107fa:	301c      	adds	r0, #28
 80107fc:	f015 fe24 	bl	8026448 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010800:	2300      	movs	r3, #0
 8010802:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8010806:	bd10      	pop	{r4, pc}

08010808 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8010808:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801080c:	b085      	sub	sp, #20
 801080e:	ad04      	add	r5, sp, #16
 8010810:	4604      	mov	r4, r0
 8010812:	2000      	movs	r0, #0
 8010814:	f845 0d04 	str.w	r0, [r5, #-4]!
 8010818:	69a0      	ldr	r0, [r4, #24]
 801081a:	6806      	ldr	r6, [r0, #0]
 801081c:	9501      	str	r5, [sp, #4]
 801081e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8010822:	9500      	str	r5, [sp, #0]
 8010824:	6835      	ldr	r5, [r6, #0]
 8010826:	4699      	mov	r9, r3
 8010828:	460f      	mov	r7, r1
 801082a:	4690      	mov	r8, r2
 801082c:	47a8      	blx	r5
 801082e:	4d10      	ldr	r5, [pc, #64]	; (8010870 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8010830:	4606      	mov	r6, r0
 8010832:	f8a5 9000 	strh.w	r9, [r5]
 8010836:	f7f3 f8d3 	bl	80039e0 <_ZN8touchgfx3HAL3lcdEv>
 801083a:	6803      	ldr	r3, [r0, #0]
 801083c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801083e:	4798      	blx	r3
 8010840:	b128      	cbz	r0, 801084e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8010842:	2801      	cmp	r0, #1
 8010844:	d00b      	beq.n	801085e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010846:	4630      	mov	r0, r6
 8010848:	b005      	add	sp, #20
 801084a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801084e:	882b      	ldrh	r3, [r5, #0]
 8010850:	fb08 7203 	mla	r2, r8, r3, r7
 8010854:	9b03      	ldr	r3, [sp, #12]
 8010856:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 801085a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801085c:	e7f3      	b.n	8010846 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 801085e:	882a      	ldrh	r2, [r5, #0]
 8010860:	9b03      	ldr	r3, [sp, #12]
 8010862:	fb08 7202 	mla	r2, r8, r2, r7
 8010866:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801086a:	1a9a      	subs	r2, r3, r2
 801086c:	63e2      	str	r2, [r4, #60]	; 0x3c
 801086e:	e7ea      	b.n	8010846 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010870:	20012f26 	.word	0x20012f26

08010874 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010874:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010876:	b08b      	sub	sp, #44	; 0x2c
 8010878:	4617      	mov	r7, r2
 801087a:	4604      	mov	r4, r0
 801087c:	460e      	mov	r6, r1
 801087e:	461d      	mov	r5, r3
 8010880:	f7f3 f8ae 	bl	80039e0 <_ZN8touchgfx3HAL3lcdEv>
 8010884:	6803      	ldr	r3, [r0, #0]
 8010886:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010888:	4798      	blx	r3
 801088a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801088e:	9007      	str	r0, [sp, #28]
 8010890:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010894:	4b0d      	ldr	r3, [pc, #52]	; (80108cc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8010896:	6822      	ldr	r2, [r4, #0]
 8010898:	881b      	ldrh	r3, [r3, #0]
 801089a:	9306      	str	r3, [sp, #24]
 801089c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80108a0:	9305      	str	r3, [sp, #20]
 80108a2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 80108a6:	9304      	str	r3, [sp, #16]
 80108a8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80108ac:	9303      	str	r3, [sp, #12]
 80108ae:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80108b2:	9302      	str	r3, [sp, #8]
 80108b4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80108b8:	e9cd 5300 	strd	r5, r3, [sp]
 80108bc:	4631      	mov	r1, r6
 80108be:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 80108c0:	463b      	mov	r3, r7
 80108c2:	2200      	movs	r2, #0
 80108c4:	4620      	mov	r0, r4
 80108c6:	47a8      	blx	r5
 80108c8:	b00b      	add	sp, #44	; 0x2c
 80108ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80108cc:	20012f26 	.word	0x20012f26

080108d0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80108d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80108d4:	4698      	mov	r8, r3
 80108d6:	6803      	ldr	r3, [r0, #0]
 80108d8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80108da:	4b15      	ldr	r3, [pc, #84]	; (8010930 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80108dc:	b08b      	sub	sp, #44	; 0x2c
 80108de:	4617      	mov	r7, r2
 80108e0:	f8b3 9000 	ldrh.w	r9, [r3]
 80108e4:	460e      	mov	r6, r1
 80108e6:	4604      	mov	r4, r0
 80108e8:	f7f3 f87a 	bl	80039e0 <_ZN8touchgfx3HAL3lcdEv>
 80108ec:	6803      	ldr	r3, [r0, #0]
 80108ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80108f0:	4798      	blx	r3
 80108f2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80108f6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80108fa:	2302      	movs	r3, #2
 80108fc:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8010900:	2301      	movs	r3, #1
 8010902:	9305      	str	r3, [sp, #20]
 8010904:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8010908:	9304      	str	r3, [sp, #16]
 801090a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801090e:	9303      	str	r3, [sp, #12]
 8010910:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010914:	9302      	str	r3, [sp, #8]
 8010916:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801091a:	2200      	movs	r2, #0
 801091c:	e9cd 8300 	strd	r8, r3, [sp]
 8010920:	4631      	mov	r1, r6
 8010922:	463b      	mov	r3, r7
 8010924:	4620      	mov	r0, r4
 8010926:	47a8      	blx	r5
 8010928:	b00b      	add	sp, #44	; 0x2c
 801092a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801092e:	bf00      	nop
 8010930:	20012f26 	.word	0x20012f26

08010934 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8010934:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010938:	4698      	mov	r8, r3
 801093a:	6803      	ldr	r3, [r0, #0]
 801093c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 801093e:	4b11      	ldr	r3, [pc, #68]	; (8010984 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8010940:	b087      	sub	sp, #28
 8010942:	f8b3 9000 	ldrh.w	r9, [r3]
 8010946:	460e      	mov	r6, r1
 8010948:	4617      	mov	r7, r2
 801094a:	4604      	mov	r4, r0
 801094c:	f7f3 f848 	bl	80039e0 <_ZN8touchgfx3HAL3lcdEv>
 8010950:	6803      	ldr	r3, [r0, #0]
 8010952:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010954:	4798      	blx	r3
 8010956:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801095a:	f8cd 900c 	str.w	r9, [sp, #12]
 801095e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8010962:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8010966:	9302      	str	r3, [sp, #8]
 8010968:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801096c:	9301      	str	r3, [sp, #4]
 801096e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010972:	9300      	str	r3, [sp, #0]
 8010974:	463a      	mov	r2, r7
 8010976:	4643      	mov	r3, r8
 8010978:	4631      	mov	r1, r6
 801097a:	4620      	mov	r0, r4
 801097c:	47a8      	blx	r5
 801097e:	b007      	add	sp, #28
 8010980:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010984:	20012f26 	.word	0x20012f26

08010988 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8010988:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801098c:	4604      	mov	r4, r0
 801098e:	b08f      	sub	sp, #60	; 0x3c
 8010990:	4610      	mov	r0, r2
 8010992:	460d      	mov	r5, r1
 8010994:	4691      	mov	r9, r2
 8010996:	461e      	mov	r6, r3
 8010998:	f008 f8f0 	bl	8018b7c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801099c:	2800      	cmp	r0, #0
 801099e:	f000 809d 	beq.w	8010adc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 80109a2:	6823      	ldr	r3, [r4, #0]
 80109a4:	f8df b198 	ldr.w	fp, [pc, #408]	; 8010b40 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 80109a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80109aa:	f8df a198 	ldr.w	sl, [pc, #408]	; 8010b44 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 80109ae:	4f61      	ldr	r7, [pc, #388]	; (8010b34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80109b0:	4620      	mov	r0, r4
 80109b2:	4798      	blx	r3
 80109b4:	6823      	ldr	r3, [r4, #0]
 80109b6:	4620      	mov	r0, r4
 80109b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80109ba:	4798      	blx	r3
 80109bc:	f8bb 3000 	ldrh.w	r3, [fp]
 80109c0:	9301      	str	r3, [sp, #4]
 80109c2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80109c6:	f8ba 3000 	ldrh.w	r3, [sl]
 80109ca:	9302      	str	r3, [sp, #8]
 80109cc:	883b      	ldrh	r3, [r7, #0]
 80109ce:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80109d2:	9303      	str	r3, [sp, #12]
 80109d4:	4b58      	ldr	r3, [pc, #352]	; (8010b38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80109d6:	9305      	str	r3, [sp, #20]
 80109d8:	881a      	ldrh	r2, [r3, #0]
 80109da:	9204      	str	r2, [sp, #16]
 80109dc:	4640      	mov	r0, r8
 80109de:	f008 f961 	bl	8018ca4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80109e2:	8038      	strh	r0, [r7, #0]
 80109e4:	4640      	mov	r0, r8
 80109e6:	f008 f991 	bl	8018d0c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80109ea:	9b05      	ldr	r3, [sp, #20]
 80109ec:	b280      	uxth	r0, r0
 80109ee:	8018      	strh	r0, [r3, #0]
 80109f0:	4b52      	ldr	r3, [pc, #328]	; (8010b3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 80109f2:	781b      	ldrb	r3, [r3, #0]
 80109f4:	2b00      	cmp	r3, #0
 80109f6:	d174      	bne.n	8010ae2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 80109f8:	883b      	ldrh	r3, [r7, #0]
 80109fa:	f8ab 3000 	strh.w	r3, [fp]
 80109fe:	f8aa 0000 	strh.w	r0, [sl]
 8010a02:	4648      	mov	r0, r9
 8010a04:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8010a08:	f008 f8b8 	bl	8018b7c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8010a0c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8010a10:	2200      	movs	r2, #0
 8010a12:	4611      	mov	r1, r2
 8010a14:	4628      	mov	r0, r5
 8010a16:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8010a1a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8010a1e:	f7f1 ff24 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8010a22:	2301      	movs	r3, #1
 8010a24:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8010a28:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8010a2c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010a30:	2b00      	cmp	r3, #0
 8010a32:	dd5c      	ble.n	8010aee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010a34:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010a38:	2b00      	cmp	r3, #0
 8010a3a:	dd58      	ble.n	8010aee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010a3c:	462a      	mov	r2, r5
 8010a3e:	ab0a      	add	r3, sp, #40	; 0x28
 8010a40:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010a44:	6851      	ldr	r1, [r2, #4]
 8010a46:	c303      	stmia	r3!, {r0, r1}
 8010a48:	4631      	mov	r1, r6
 8010a4a:	a80a      	add	r0, sp, #40	; 0x28
 8010a4c:	f7ff fc06 	bl	801025c <_ZN8touchgfx4RectaNERKS0_>
 8010a50:	4b38      	ldr	r3, [pc, #224]	; (8010b34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010a52:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010a56:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8010a5a:	2100      	movs	r1, #0
 8010a5c:	aa0a      	add	r2, sp, #40	; 0x28
 8010a5e:	4b36      	ldr	r3, [pc, #216]	; (8010b38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010a60:	910c      	str	r1, [sp, #48]	; 0x30
 8010a62:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010a66:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010a6a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8010a6e:	ab08      	add	r3, sp, #32
 8010a70:	e883 0003 	stmia.w	r3, {r0, r1}
 8010a74:	4618      	mov	r0, r3
 8010a76:	a90c      	add	r1, sp, #48	; 0x30
 8010a78:	f7ff fbf0 	bl	801025c <_ZN8touchgfx4RectaNERKS0_>
 8010a7c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8010a7e:	2b00      	cmp	r3, #0
 8010a80:	d13c      	bne.n	8010afc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8010a82:	2000      	movs	r0, #0
 8010a84:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8010a88:	2600      	movs	r6, #0
 8010a8a:	682a      	ldr	r2, [r5, #0]
 8010a8c:	696b      	ldr	r3, [r5, #20]
 8010a8e:	616e      	str	r6, [r5, #20]
 8010a90:	9305      	str	r3, [sp, #20]
 8010a92:	6892      	ldr	r2, [r2, #8]
 8010a94:	a908      	add	r1, sp, #32
 8010a96:	4628      	mov	r0, r5
 8010a98:	4790      	blx	r2
 8010a9a:	9b05      	ldr	r3, [sp, #20]
 8010a9c:	616b      	str	r3, [r5, #20]
 8010a9e:	4652      	mov	r2, sl
 8010aa0:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8010aa4:	4649      	mov	r1, r9
 8010aa6:	4628      	mov	r0, r5
 8010aa8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8010aac:	f7f1 fedd 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8010ab0:	4b23      	ldr	r3, [pc, #140]	; (8010b40 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8010ab2:	9a01      	ldr	r2, [sp, #4]
 8010ab4:	801a      	strh	r2, [r3, #0]
 8010ab6:	4b23      	ldr	r3, [pc, #140]	; (8010b44 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8010ab8:	9a02      	ldr	r2, [sp, #8]
 8010aba:	801a      	strh	r2, [r3, #0]
 8010abc:	4b1d      	ldr	r3, [pc, #116]	; (8010b34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010abe:	9a03      	ldr	r2, [sp, #12]
 8010ac0:	801a      	strh	r2, [r3, #0]
 8010ac2:	4b1d      	ldr	r3, [pc, #116]	; (8010b38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010ac4:	9a04      	ldr	r2, [sp, #16]
 8010ac6:	801a      	strh	r2, [r3, #0]
 8010ac8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8010acc:	6823      	ldr	r3, [r4, #0]
 8010ace:	4620      	mov	r0, r4
 8010ad0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010ad2:	4798      	blx	r3
 8010ad4:	6823      	ldr	r3, [r4, #0]
 8010ad6:	4620      	mov	r0, r4
 8010ad8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010ada:	4798      	blx	r3
 8010adc:	b00f      	add	sp, #60	; 0x3c
 8010ade:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010ae2:	883b      	ldrh	r3, [r7, #0]
 8010ae4:	f8ab 0000 	strh.w	r0, [fp]
 8010ae8:	f8aa 3000 	strh.w	r3, [sl]
 8010aec:	e789      	b.n	8010a02 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8010aee:	462a      	mov	r2, r5
 8010af0:	ab0a      	add	r3, sp, #40	; 0x28
 8010af2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010af6:	6851      	ldr	r1, [r2, #4]
 8010af8:	c303      	stmia	r3!, {r0, r1}
 8010afa:	e7a9      	b.n	8010a50 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8010afc:	a807      	add	r0, sp, #28
 8010afe:	f008 fa41 	bl	8018f84 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010b02:	4606      	mov	r6, r0
 8010b04:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8010b06:	6803      	ldr	r3, [r0, #0]
 8010b08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010b0a:	4798      	blx	r3
 8010b0c:	4286      	cmp	r6, r0
 8010b0e:	d1b8      	bne.n	8010a82 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8010b10:	f7f2 ff66 	bl	80039e0 <_ZN8touchgfx3HAL3lcdEv>
 8010b14:	6803      	ldr	r3, [r0, #0]
 8010b16:	4606      	mov	r6, r0
 8010b18:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010b1a:	9305      	str	r3, [sp, #20]
 8010b1c:	a807      	add	r0, sp, #28
 8010b1e:	f008 fa31 	bl	8018f84 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010b22:	9b05      	ldr	r3, [sp, #20]
 8010b24:	4601      	mov	r1, r0
 8010b26:	4630      	mov	r0, r6
 8010b28:	4798      	blx	r3
 8010b2a:	f080 0001 	eor.w	r0, r0, #1
 8010b2e:	b2c0      	uxtb	r0, r0
 8010b30:	e7a8      	b.n	8010a84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8010b32:	bf00      	nop
 8010b34:	20012f20 	.word	0x20012f20
 8010b38:	20012f22 	.word	0x20012f22
 8010b3c:	20012f24 	.word	0x20012f24
 8010b40:	20012f26 	.word	0x20012f26
 8010b44:	20012f28 	.word	0x20012f28

08010b48 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8010b48:	b510      	push	{r4, lr}
 8010b4a:	4b07      	ldr	r3, [pc, #28]	; (8010b68 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8010b4c:	781b      	ldrb	r3, [r3, #0]
 8010b4e:	4604      	mov	r4, r0
 8010b50:	b13b      	cbz	r3, 8010b62 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010b52:	6803      	ldr	r3, [r0, #0]
 8010b54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010b56:	4798      	blx	r3
 8010b58:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010b5a:	4283      	cmp	r3, r0
 8010b5c:	d101      	bne.n	8010b62 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010b5e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8010b60:	bd10      	pop	{r4, pc}
 8010b62:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010b64:	e7fc      	b.n	8010b60 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8010b66:	bf00      	nop
 8010b68:	20012f2a 	.word	0x20012f2a

08010b6c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8010b6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010b70:	b08a      	sub	sp, #40	; 0x28
 8010b72:	461d      	mov	r5, r3
 8010b74:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010b78:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010b7c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010b80:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010b84:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010b88:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010b8c:	2400      	movs	r4, #0
 8010b8e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010b92:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8010b96:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010b9a:	4690      	mov	r8, r2
 8010b9c:	4607      	mov	r7, r0
 8010b9e:	9404      	str	r4, [sp, #16]
 8010ba0:	f88d 4020 	strb.w	r4, [sp, #32]
 8010ba4:	f7ff ffd0 	bl	8010b48 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010ba8:	fb06 8505 	mla	r5, r6, r5, r8
 8010bac:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010bb0:	6878      	ldr	r0, [r7, #4]
 8010bb2:	9505      	str	r5, [sp, #20]
 8010bb4:	f8ad 601e 	strh.w	r6, [sp, #30]
 8010bb8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010bbc:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8010bc0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8010bc4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010bc8:	6803      	ldr	r3, [r0, #0]
 8010bca:	a901      	add	r1, sp, #4
 8010bcc:	685b      	ldr	r3, [r3, #4]
 8010bce:	4798      	blx	r3
 8010bd0:	b00a      	add	sp, #40	; 0x28
 8010bd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010bd6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8010bd6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010bda:	b08b      	sub	sp, #44	; 0x2c
 8010bdc:	2400      	movs	r4, #0
 8010bde:	461d      	mov	r5, r3
 8010be0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010be4:	4688      	mov	r8, r1
 8010be6:	4691      	mov	r9, r2
 8010be8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8010bec:	9404      	str	r4, [sp, #16]
 8010bee:	4607      	mov	r7, r0
 8010bf0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010bf4:	f7ff ffa8 	bl	8010b48 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010bf8:	fb06 9505 	mla	r5, r6, r5, r9
 8010bfc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010c00:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010c04:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010c08:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010c0c:	6878      	ldr	r0, [r7, #4]
 8010c0e:	9505      	str	r5, [sp, #20]
 8010c10:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010c14:	f8ad 401c 	strh.w	r4, [sp, #28]
 8010c18:	f8ad 601e 	strh.w	r6, [sp, #30]
 8010c1c:	f8cd 8010 	str.w	r8, [sp, #16]
 8010c20:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010c24:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010c28:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8010c2c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010c30:	6803      	ldr	r3, [r0, #0]
 8010c32:	a901      	add	r1, sp, #4
 8010c34:	685b      	ldr	r3, [r3, #4]
 8010c36:	4798      	blx	r3
 8010c38:	b00b      	add	sp, #44	; 0x2c
 8010c3a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08010c40 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8010c40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010c44:	b08a      	sub	sp, #40	; 0x28
 8010c46:	4698      	mov	r8, r3
 8010c48:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8010c4c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8010c50:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8010c54:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8010c58:	2300      	movs	r3, #0
 8010c5a:	2d0b      	cmp	r5, #11
 8010c5c:	4606      	mov	r6, r0
 8010c5e:	9304      	str	r3, [sp, #16]
 8010c60:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8010c64:	d138      	bne.n	8010cd8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8010c66:	2380      	movs	r3, #128	; 0x80
 8010c68:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010c6c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010c70:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010c74:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010c78:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010c7c:	f88d 0020 	strb.w	r0, [sp, #32]
 8010c80:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010c84:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010c88:	4630      	mov	r0, r6
 8010c8a:	9203      	str	r2, [sp, #12]
 8010c8c:	f7ff ff5c 	bl	8010b48 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010c90:	2c0b      	cmp	r4, #11
 8010c92:	bf98      	it	ls
 8010c94:	4b1b      	ldrls	r3, [pc, #108]	; (8010d04 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8010c96:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8010c9a:	bf98      	it	ls
 8010c9c:	5d19      	ldrbls	r1, [r3, r4]
 8010c9e:	f8ad 701e 	strh.w	r7, [sp, #30]
 8010ca2:	bf88      	it	hi
 8010ca4:	2100      	movhi	r1, #0
 8010ca6:	fb02 8307 	mla	r3, r2, r7, r8
 8010caa:	10c9      	asrs	r1, r1, #3
 8010cac:	fb01 0003 	mla	r0, r1, r3, r0
 8010cb0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8010cb4:	9005      	str	r0, [sp, #20]
 8010cb6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010cba:	6870      	ldr	r0, [r6, #4]
 8010cbc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8010cc0:	2300      	movs	r3, #0
 8010cc2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010cc6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8010cca:	6803      	ldr	r3, [r0, #0]
 8010ccc:	a901      	add	r1, sp, #4
 8010cce:	685b      	ldr	r3, [r3, #4]
 8010cd0:	4798      	blx	r3
 8010cd2:	b00a      	add	sp, #40	; 0x28
 8010cd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010cd8:	2d02      	cmp	r5, #2
 8010cda:	d109      	bne.n	8010cf0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8010cdc:	28ff      	cmp	r0, #255	; 0xff
 8010cde:	d105      	bne.n	8010cec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8010ce0:	f1bc 0f00 	cmp.w	ip, #0
 8010ce4:	bf14      	ite	ne
 8010ce6:	2340      	movne	r3, #64	; 0x40
 8010ce8:	2320      	moveq	r3, #32
 8010cea:	e7bd      	b.n	8010c68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010cec:	2340      	movs	r3, #64	; 0x40
 8010cee:	e7bb      	b.n	8010c68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010cf0:	28ff      	cmp	r0, #255	; 0xff
 8010cf2:	d105      	bne.n	8010d00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8010cf4:	f1bc 0f00 	cmp.w	ip, #0
 8010cf8:	bf14      	ite	ne
 8010cfa:	2304      	movne	r3, #4
 8010cfc:	2301      	moveq	r3, #1
 8010cfe:	e7b3      	b.n	8010c68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010d00:	2304      	movs	r3, #4
 8010d02:	e7b1      	b.n	8010c68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010d04:	0802e38c 	.word	0x0802e38c

08010d08 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8010d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d0c:	b08b      	sub	sp, #44	; 0x2c
 8010d0e:	461d      	mov	r5, r3
 8010d10:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8010d14:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8010d18:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8010d1c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010d20:	bf14      	ite	ne
 8010d22:	2308      	movne	r3, #8
 8010d24:	2302      	moveq	r3, #2
 8010d26:	2400      	movs	r4, #0
 8010d28:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010d2c:	4688      	mov	r8, r1
 8010d2e:	4693      	mov	fp, r2
 8010d30:	9404      	str	r4, [sp, #16]
 8010d32:	4607      	mov	r7, r0
 8010d34:	f7ff ff08 	bl	8010b48 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010d38:	2e0b      	cmp	r6, #11
 8010d3a:	bf98      	it	ls
 8010d3c:	4b15      	ldrls	r3, [pc, #84]	; (8010d94 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8010d3e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010d42:	bf98      	it	ls
 8010d44:	5d9c      	ldrbls	r4, [r3, r6]
 8010d46:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8010d4a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010d4e:	fb05 b50a 	mla	r5, r5, sl, fp
 8010d52:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010d56:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010d5a:	10e4      	asrs	r4, r4, #3
 8010d5c:	fb04 0405 	mla	r4, r4, r5, r0
 8010d60:	2300      	movs	r3, #0
 8010d62:	6878      	ldr	r0, [r7, #4]
 8010d64:	9405      	str	r4, [sp, #20]
 8010d66:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010d6a:	f8ad a01e 	strh.w	sl, [sp, #30]
 8010d6e:	f8cd 8010 	str.w	r8, [sp, #16]
 8010d72:	f88d 9020 	strb.w	r9, [sp, #32]
 8010d76:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8010d7a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8010d7e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8010d82:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8010d86:	6803      	ldr	r3, [r0, #0]
 8010d88:	a901      	add	r1, sp, #4
 8010d8a:	685b      	ldr	r3, [r3, #4]
 8010d8c:	4798      	blx	r3
 8010d8e:	b00b      	add	sp, #44	; 0x2c
 8010d90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d94:	0802e38c 	.word	0x0802e38c

08010d98 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8010d98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010d9c:	461e      	mov	r6, r3
 8010d9e:	4b0a      	ldr	r3, [pc, #40]	; (8010dc8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8010da0:	460f      	mov	r7, r1
 8010da2:	881d      	ldrh	r5, [r3, #0]
 8010da4:	4690      	mov	r8, r2
 8010da6:	f7f2 fe1b 	bl	80039e0 <_ZN8touchgfx3HAL3lcdEv>
 8010daa:	6803      	ldr	r3, [r0, #0]
 8010dac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010dae:	4798      	blx	r3
 8010db0:	280b      	cmp	r0, #11
 8010db2:	bf9a      	itte	ls
 8010db4:	4b05      	ldrls	r3, [pc, #20]	; (8010dcc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8010db6:	5c1c      	ldrbls	r4, [r3, r0]
 8010db8:	2400      	movhi	r4, #0
 8010dba:	fb08 7005 	mla	r0, r8, r5, r7
 8010dbe:	10e4      	asrs	r4, r4, #3
 8010dc0:	fb04 6000 	mla	r0, r4, r0, r6
 8010dc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010dc8:	20012f26 	.word	0x20012f26
 8010dcc:	0802e38c 	.word	0x0802e38c

08010dd0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8010dd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010dd2:	b08b      	sub	sp, #44	; 0x2c
 8010dd4:	461f      	mov	r7, r3
 8010dd6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010dda:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010dde:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010de2:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010de6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010dea:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010dee:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010df2:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010df6:	2500      	movs	r5, #0
 8010df8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8010dfc:	f88d 3020 	strb.w	r3, [sp, #32]
 8010e00:	4604      	mov	r4, r0
 8010e02:	4616      	mov	r6, r2
 8010e04:	9504      	str	r5, [sp, #16]
 8010e06:	f7ff fe9f 	bl	8010b48 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010e0a:	463a      	mov	r2, r7
 8010e0c:	4631      	mov	r1, r6
 8010e0e:	4603      	mov	r3, r0
 8010e10:	4620      	mov	r0, r4
 8010e12:	f7ff ffc1 	bl	8010d98 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010e16:	4b0e      	ldr	r3, [pc, #56]	; (8010e50 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8010e18:	9005      	str	r0, [sp, #20]
 8010e1a:	881b      	ldrh	r3, [r3, #0]
 8010e1c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010e20:	f7f2 fdde 	bl	80039e0 <_ZN8touchgfx3HAL3lcdEv>
 8010e24:	6803      	ldr	r3, [r0, #0]
 8010e26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010e28:	4798      	blx	r3
 8010e2a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8010e2c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8010e30:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8010e34:	9304      	str	r3, [sp, #16]
 8010e36:	6860      	ldr	r0, [r4, #4]
 8010e38:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010e3c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010e40:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8010e44:	6803      	ldr	r3, [r0, #0]
 8010e46:	a901      	add	r1, sp, #4
 8010e48:	685b      	ldr	r3, [r3, #4]
 8010e4a:	4798      	blx	r3
 8010e4c:	b00b      	add	sp, #44	; 0x2c
 8010e4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010e50:	20012f26 	.word	0x20012f26

08010e54 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8010e54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010e56:	b08d      	sub	sp, #52	; 0x34
 8010e58:	466b      	mov	r3, sp
 8010e5a:	e883 0006 	stmia.w	r3, {r1, r2}
 8010e5e:	2300      	movs	r3, #0
 8010e60:	9306      	str	r3, [sp, #24]
 8010e62:	6803      	ldr	r3, [r0, #0]
 8010e64:	f8bd 6000 	ldrh.w	r6, [sp]
 8010e68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010e6a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8010e6e:	2501      	movs	r5, #1
 8010e70:	9503      	str	r5, [sp, #12]
 8010e72:	4604      	mov	r4, r0
 8010e74:	4798      	blx	r3
 8010e76:	463a      	mov	r2, r7
 8010e78:	4631      	mov	r1, r6
 8010e7a:	4603      	mov	r3, r0
 8010e7c:	4620      	mov	r0, r4
 8010e7e:	f7ff ff8b 	bl	8010d98 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010e82:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010e84:	9307      	str	r3, [sp, #28]
 8010e86:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8010e8a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010e8e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010e92:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010e96:	4b0f      	ldr	r3, [pc, #60]	; (8010ed4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8010e98:	9004      	str	r0, [sp, #16]
 8010e9a:	881b      	ldrh	r3, [r3, #0]
 8010e9c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010ea0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010ea4:	f7f2 fd9c 	bl	80039e0 <_ZN8touchgfx3HAL3lcdEv>
 8010ea8:	6803      	ldr	r3, [r0, #0]
 8010eaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010eac:	4798      	blx	r3
 8010eae:	23ff      	movs	r3, #255	; 0xff
 8010eb0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8010eb4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010eb8:	6860      	ldr	r0, [r4, #4]
 8010eba:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010ebe:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8010ec2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8010ec6:	6803      	ldr	r3, [r0, #0]
 8010ec8:	a903      	add	r1, sp, #12
 8010eca:	685b      	ldr	r3, [r3, #4]
 8010ecc:	4798      	blx	r3
 8010ece:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8010ed0:	b00d      	add	sp, #52	; 0x34
 8010ed2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010ed4:	20012f26 	.word	0x20012f26

08010ed8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8010ed8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010edc:	b08c      	sub	sp, #48	; 0x30
 8010ede:	461e      	mov	r6, r3
 8010ee0:	466d      	mov	r5, sp
 8010ee2:	2300      	movs	r3, #0
 8010ee4:	e885 0006 	stmia.w	r5, {r1, r2}
 8010ee8:	9306      	str	r3, [sp, #24]
 8010eea:	6803      	ldr	r3, [r0, #0]
 8010eec:	f8bd 7000 	ldrh.w	r7, [sp]
 8010ef0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010ef2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8010ef6:	2501      	movs	r5, #1
 8010ef8:	9503      	str	r5, [sp, #12]
 8010efa:	4604      	mov	r4, r0
 8010efc:	4798      	blx	r3
 8010efe:	4642      	mov	r2, r8
 8010f00:	4639      	mov	r1, r7
 8010f02:	4603      	mov	r3, r0
 8010f04:	4620      	mov	r0, r4
 8010f06:	f7ff ff47 	bl	8010d98 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010f0a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8010f0e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010f12:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010f16:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010f1a:	4b11      	ldr	r3, [pc, #68]	; (8010f60 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8010f1c:	9004      	str	r0, [sp, #16]
 8010f1e:	881b      	ldrh	r3, [r3, #0]
 8010f20:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010f24:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010f26:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010f2a:	9607      	str	r6, [sp, #28]
 8010f2c:	f7f2 fd58 	bl	80039e0 <_ZN8touchgfx3HAL3lcdEv>
 8010f30:	6803      	ldr	r3, [r0, #0]
 8010f32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010f34:	4798      	blx	r3
 8010f36:	23ff      	movs	r3, #255	; 0xff
 8010f38:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8010f3c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010f40:	6860      	ldr	r0, [r4, #4]
 8010f42:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010f46:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8010f4a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8010f4e:	6803      	ldr	r3, [r0, #0]
 8010f50:	a903      	add	r1, sp, #12
 8010f52:	685b      	ldr	r3, [r3, #4]
 8010f54:	4798      	blx	r3
 8010f56:	4630      	mov	r0, r6
 8010f58:	b00c      	add	sp, #48	; 0x30
 8010f5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010f5e:	bf00      	nop
 8010f60:	20012f26 	.word	0x20012f26

08010f64 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8010f64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010f66:	b085      	sub	sp, #20
 8010f68:	ac02      	add	r4, sp, #8
 8010f6a:	e884 0006 	stmia.w	r4, {r1, r2}
 8010f6e:	4605      	mov	r5, r0
 8010f70:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8010f74:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8010f78:	f7ff fde6 	bl	8010b48 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010f7c:	463a      	mov	r2, r7
 8010f7e:	4603      	mov	r3, r0
 8010f80:	4631      	mov	r1, r6
 8010f82:	4628      	mov	r0, r5
 8010f84:	f7ff ff08 	bl	8010d98 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010f88:	4a05      	ldr	r2, [pc, #20]	; (8010fa0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8010f8a:	682b      	ldr	r3, [r5, #0]
 8010f8c:	8812      	ldrh	r2, [r2, #0]
 8010f8e:	9200      	str	r2, [sp, #0]
 8010f90:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8010f92:	e894 0006 	ldmia.w	r4, {r1, r2}
 8010f96:	4603      	mov	r3, r0
 8010f98:	4628      	mov	r0, r5
 8010f9a:	47b0      	blx	r6
 8010f9c:	b005      	add	sp, #20
 8010f9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010fa0:	20012f26 	.word	0x20012f26

08010fa4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8010fa4:	b570      	push	{r4, r5, r6, lr}
 8010fa6:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8010faa:	4604      	mov	r4, r0
 8010fac:	b19b      	cbz	r3, 8010fd6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8010fae:	2002      	movs	r0, #2
 8010fb0:	f7ef fc6c 	bl	800088c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8010fb4:	2300      	movs	r3, #0
 8010fb6:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010fba:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8010fbe:	6823      	ldr	r3, [r4, #0]
 8010fc0:	4620      	mov	r0, r4
 8010fc2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8010fc6:	f7ff fdbf 	bl	8010b48 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010fca:	462b      	mov	r3, r5
 8010fcc:	4601      	mov	r1, r0
 8010fce:	4620      	mov	r0, r4
 8010fd0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010fd4:	4718      	bx	r3
 8010fd6:	bd70      	pop	{r4, r5, r6, pc}

08010fd8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8010fd8:	b538      	push	{r3, r4, r5, lr}
 8010fda:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8010fde:	428b      	cmp	r3, r1
 8010fe0:	4604      	mov	r4, r0
 8010fe2:	460d      	mov	r5, r1
 8010fe4:	d006      	beq.n	8010ff4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8010fe6:	6803      	ldr	r3, [r0, #0]
 8010fe8:	b929      	cbnz	r1, 8010ff6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8010fea:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010fee:	4798      	blx	r3
 8010ff0:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8010ff4:	bd38      	pop	{r3, r4, r5, pc}
 8010ff6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8010ffa:	e7f8      	b.n	8010fee <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08010ffc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8010ffc:	b510      	push	{r4, lr}
 8010ffe:	4b0d      	ldr	r3, [pc, #52]	; (8011034 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8011000:	781b      	ldrb	r3, [r3, #0]
 8011002:	4604      	mov	r4, r0
 8011004:	b95b      	cbnz	r3, 801101e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011006:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 801100a:	2b02      	cmp	r3, #2
 801100c:	d007      	beq.n	801101e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801100e:	6840      	ldr	r0, [r0, #4]
 8011010:	f000 f92c 	bl	801126c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8011014:	b118      	cbz	r0, 801101e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011016:	6862      	ldr	r2, [r4, #4]
 8011018:	7a53      	ldrb	r3, [r2, #9]
 801101a:	2b00      	cmp	r3, #0
 801101c:	d0fc      	beq.n	8011018 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801101e:	f7ef fd6d 	bl	8000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011022:	4620      	mov	r0, r4
 8011024:	2100      	movs	r1, #0
 8011026:	f7ff ffd7 	bl	8010fd8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801102a:	4620      	mov	r0, r4
 801102c:	f7ff fd8c 	bl	8010b48 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011030:	bd10      	pop	{r4, pc}
 8011032:	bf00      	nop
 8011034:	20012f2a 	.word	0x20012f2a

08011038 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8011038:	b570      	push	{r4, r5, r6, lr}
 801103a:	4604      	mov	r4, r0
 801103c:	6803      	ldr	r3, [r0, #0]
 801103e:	b919      	cbnz	r1, 8011048 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8011040:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011042:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011046:	4718      	bx	r3
 8011048:	2200      	movs	r2, #0
 801104a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 801104e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8011052:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011054:	4798      	blx	r3
 8011056:	6863      	ldr	r3, [r4, #4]
 8011058:	2101      	movs	r1, #1
 801105a:	4605      	mov	r5, r0
 801105c:	7299      	strb	r1, [r3, #10]
 801105e:	4620      	mov	r0, r4
 8011060:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8011064:	f7ff ffb8 	bl	8010fd8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011068:	4628      	mov	r0, r5
 801106a:	bd70      	pop	{r4, r5, r6, pc}

0801106c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 801106c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8011070:	1a13      	subs	r3, r2, r0
 8011072:	4258      	negs	r0, r3
 8011074:	4158      	adcs	r0, r3
 8011076:	4770      	bx	lr

08011078 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8011078:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 801107c:	1a9b      	subs	r3, r3, r2
 801107e:	2b00      	cmp	r3, #0
 8011080:	bfdc      	itt	le
 8011082:	6882      	ldrle	r2, [r0, #8]
 8011084:	189b      	addle	r3, r3, r2
 8011086:	2b01      	cmp	r3, #1
 8011088:	bfcc      	ite	gt
 801108a:	2000      	movgt	r0, #0
 801108c:	2001      	movle	r0, #1
 801108e:	4770      	bx	lr

08011090 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8011090:	6902      	ldr	r2, [r0, #16]
 8011092:	6843      	ldr	r3, [r0, #4]
 8011094:	2024      	movs	r0, #36	; 0x24
 8011096:	fb00 3002 	mla	r0, r0, r2, r3
 801109a:	4770      	bx	lr

0801109c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 801109c:	6803      	ldr	r3, [r0, #0]
 801109e:	691b      	ldr	r3, [r3, #16]
 80110a0:	4718      	bx	r3

080110a2 <_ZN8touchgfx13DMA_Interface7executeEv>:
 80110a2:	b570      	push	{r4, r5, r6, lr}
 80110a4:	2301      	movs	r3, #1
 80110a6:	7203      	strb	r3, [r0, #8]
 80110a8:	4604      	mov	r4, r0
 80110aa:	6840      	ldr	r0, [r0, #4]
 80110ac:	6803      	ldr	r3, [r0, #0]
 80110ae:	699b      	ldr	r3, [r3, #24]
 80110b0:	4798      	blx	r3
 80110b2:	6803      	ldr	r3, [r0, #0]
 80110b4:	2b40      	cmp	r3, #64	; 0x40
 80110b6:	4605      	mov	r5, r0
 80110b8:	d00c      	beq.n	80110d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80110ba:	d810      	bhi.n	80110de <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80110bc:	2b04      	cmp	r3, #4
 80110be:	d01d      	beq.n	80110fc <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 80110c0:	d804      	bhi.n	80110cc <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 80110c2:	2b01      	cmp	r3, #1
 80110c4:	d006      	beq.n	80110d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80110c6:	2b02      	cmp	r3, #2
 80110c8:	d02c      	beq.n	8011124 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 80110ca:	bd70      	pop	{r4, r5, r6, pc}
 80110cc:	2b08      	cmp	r3, #8
 80110ce:	d01d      	beq.n	801110c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 80110d0:	2b20      	cmp	r3, #32
 80110d2:	d1fa      	bne.n	80110ca <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 80110d4:	6823      	ldr	r3, [r4, #0]
 80110d6:	4620      	mov	r0, r4
 80110d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80110da:	4798      	blx	r3
 80110dc:	e013      	b.n	8011106 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 80110de:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80110e2:	d0f7      	beq.n	80110d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80110e4:	d804      	bhi.n	80110f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 80110e6:	2b80      	cmp	r3, #128	; 0x80
 80110e8:	d0f4      	beq.n	80110d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80110ea:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80110ee:	e7f0      	b.n	80110d2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 80110f0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80110f4:	d0ee      	beq.n	80110d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80110f6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80110fa:	e7e5      	b.n	80110c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 80110fc:	6823      	ldr	r3, [r4, #0]
 80110fe:	7f01      	ldrb	r1, [r0, #28]
 8011100:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011102:	4620      	mov	r0, r4
 8011104:	4798      	blx	r3
 8011106:	6823      	ldr	r3, [r4, #0]
 8011108:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801110a:	e006      	b.n	801111a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 801110c:	6823      	ldr	r3, [r4, #0]
 801110e:	7f01      	ldrb	r1, [r0, #28]
 8011110:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011112:	4620      	mov	r0, r4
 8011114:	4798      	blx	r3
 8011116:	6823      	ldr	r3, [r4, #0]
 8011118:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801111a:	4629      	mov	r1, r5
 801111c:	4620      	mov	r0, r4
 801111e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011122:	4718      	bx	r3
 8011124:	6823      	ldr	r3, [r4, #0]
 8011126:	4620      	mov	r0, r4
 8011128:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801112a:	4798      	blx	r3
 801112c:	e7f3      	b.n	8011116 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0801112e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 801112e:	4770      	bx	lr

08011130 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8011130:	4770      	bx	lr

08011132 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8011132:	4770      	bx	lr

08011134 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8011134:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8011138:	1ad2      	subs	r2, r2, r3
 801113a:	2a00      	cmp	r2, #0
 801113c:	b510      	push	{r4, lr}
 801113e:	bfdc      	itt	le
 8011140:	6884      	ldrle	r4, [r0, #8]
 8011142:	1912      	addle	r2, r2, r4
 8011144:	2a01      	cmp	r2, #1
 8011146:	dd16      	ble.n	8011176 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8011148:	6842      	ldr	r2, [r0, #4]
 801114a:	2424      	movs	r4, #36	; 0x24
 801114c:	fb04 2303 	mla	r3, r4, r3, r2
 8011150:	f101 0220 	add.w	r2, r1, #32
 8011154:	f851 4b04 	ldr.w	r4, [r1], #4
 8011158:	f843 4b04 	str.w	r4, [r3], #4
 801115c:	4291      	cmp	r1, r2
 801115e:	d1f9      	bne.n	8011154 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8011160:	780a      	ldrb	r2, [r1, #0]
 8011162:	701a      	strb	r2, [r3, #0]
 8011164:	68c3      	ldr	r3, [r0, #12]
 8011166:	6882      	ldr	r2, [r0, #8]
 8011168:	f3bf 8f5b 	dmb	ish
 801116c:	3301      	adds	r3, #1
 801116e:	429a      	cmp	r2, r3
 8011170:	bfd8      	it	le
 8011172:	1a9b      	suble	r3, r3, r2
 8011174:	60c3      	str	r3, [r0, #12]
 8011176:	bd10      	pop	{r4, pc}

08011178 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8011178:	6903      	ldr	r3, [r0, #16]
 801117a:	6882      	ldr	r2, [r0, #8]
 801117c:	f3bf 8f5b 	dmb	ish
 8011180:	3301      	adds	r3, #1
 8011182:	429a      	cmp	r2, r3
 8011184:	bfd8      	it	le
 8011186:	1a9b      	suble	r3, r3, r2
 8011188:	6103      	str	r3, [r0, #16]
 801118a:	4770      	bx	lr

0801118c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 801118c:	b570      	push	{r4, r5, r6, lr}
 801118e:	4604      	mov	r4, r0
 8011190:	460e      	mov	r6, r1
 8011192:	6860      	ldr	r0, [r4, #4]
 8011194:	6803      	ldr	r3, [r0, #0]
 8011196:	685b      	ldr	r3, [r3, #4]
 8011198:	4798      	blx	r3
 801119a:	2800      	cmp	r0, #0
 801119c:	d1f9      	bne.n	8011192 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 801119e:	4d0d      	ldr	r5, [pc, #52]	; (80111d4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80111a0:	6828      	ldr	r0, [r5, #0]
 80111a2:	6803      	ldr	r3, [r0, #0]
 80111a4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80111a6:	4798      	blx	r3
 80111a8:	f7ef fcb6 	bl	8000b18 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80111ac:	6828      	ldr	r0, [r5, #0]
 80111ae:	2101      	movs	r1, #1
 80111b0:	f7ff ff12 	bl	8010fd8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80111b4:	6860      	ldr	r0, [r4, #4]
 80111b6:	6803      	ldr	r3, [r0, #0]
 80111b8:	4631      	mov	r1, r6
 80111ba:	689b      	ldr	r3, [r3, #8]
 80111bc:	4798      	blx	r3
 80111be:	6823      	ldr	r3, [r4, #0]
 80111c0:	4620      	mov	r0, r4
 80111c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80111c4:	4798      	blx	r3
 80111c6:	6828      	ldr	r0, [r5, #0]
 80111c8:	6803      	ldr	r3, [r0, #0]
 80111ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80111ce:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80111d0:	4718      	bx	r3
 80111d2:	bf00      	nop
 80111d4:	20012f2c 	.word	0x20012f2c

080111d8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 80111d8:	b508      	push	{r3, lr}
 80111da:	f7ef fc8f 	bl	8000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80111de:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80111e2:	f7ef bc93 	b.w	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080111e6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 80111e6:	b510      	push	{r4, lr}
 80111e8:	2114      	movs	r1, #20
 80111ea:	4604      	mov	r4, r0
 80111ec:	f018 f9bf 	bl	802956e <_ZdlPvj>
 80111f0:	4620      	mov	r0, r4
 80111f2:	bd10      	pop	{r4, pc}

080111f4 <_ZN8touchgfx13DMA_Interface5startEv>:
 80111f4:	b510      	push	{r4, lr}
 80111f6:	4604      	mov	r4, r0
 80111f8:	6840      	ldr	r0, [r0, #4]
 80111fa:	6803      	ldr	r3, [r0, #0]
 80111fc:	681b      	ldr	r3, [r3, #0]
 80111fe:	4798      	blx	r3
 8011200:	b948      	cbnz	r0, 8011216 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011202:	7a63      	ldrb	r3, [r4, #9]
 8011204:	b13b      	cbz	r3, 8011216 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011206:	7a23      	ldrb	r3, [r4, #8]
 8011208:	b92b      	cbnz	r3, 8011216 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801120a:	6823      	ldr	r3, [r4, #0]
 801120c:	4620      	mov	r0, r4
 801120e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011210:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011214:	4718      	bx	r3
 8011216:	bd10      	pop	{r4, pc}

08011218 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011218:	b570      	push	{r4, r5, r6, lr}
 801121a:	4604      	mov	r4, r0
 801121c:	6840      	ldr	r0, [r0, #4]
 801121e:	6803      	ldr	r3, [r0, #0]
 8011220:	681b      	ldr	r3, [r3, #0]
 8011222:	4798      	blx	r3
 8011224:	4605      	mov	r5, r0
 8011226:	b930      	cbnz	r0, 8011236 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011228:	7a23      	ldrb	r3, [r4, #8]
 801122a:	b123      	cbz	r3, 8011236 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 801122c:	6860      	ldr	r0, [r4, #4]
 801122e:	6803      	ldr	r3, [r0, #0]
 8011230:	695b      	ldr	r3, [r3, #20]
 8011232:	4798      	blx	r3
 8011234:	7225      	strb	r5, [r4, #8]
 8011236:	6860      	ldr	r0, [r4, #4]
 8011238:	6803      	ldr	r3, [r0, #0]
 801123a:	681b      	ldr	r3, [r3, #0]
 801123c:	4798      	blx	r3
 801123e:	b928      	cbnz	r0, 801124c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8011240:	6823      	ldr	r3, [r4, #0]
 8011242:	4620      	mov	r0, r4
 8011244:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011246:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801124a:	4718      	bx	r3
 801124c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011250:	f7ef bc6a 	b.w	8000b28 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08011254 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8011254:	b510      	push	{r4, lr}
 8011256:	4c04      	ldr	r4, [pc, #16]	; (8011268 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8011258:	6082      	str	r2, [r0, #8]
 801125a:	2200      	movs	r2, #0
 801125c:	e9c0 4100 	strd	r4, r1, [r0]
 8011260:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8011264:	bd10      	pop	{r4, pc}
 8011266:	bf00      	nop
 8011268:	0802e3a0 	.word	0x0802e3a0

0801126c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 801126c:	6840      	ldr	r0, [r0, #4]
 801126e:	6803      	ldr	r3, [r0, #0]
 8011270:	681b      	ldr	r3, [r3, #0]
 8011272:	4718      	bx	r3

08011274 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011274:	4b06      	ldr	r3, [pc, #24]	; (8011290 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8011276:	60c1      	str	r1, [r0, #12]
 8011278:	094a      	lsrs	r2, r1, #5
 801127a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 801127e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011282:	4313      	orrs	r3, r2
 8011284:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8011288:	4319      	orrs	r1, r3
 801128a:	8201      	strh	r1, [r0, #16]
 801128c:	4770      	bx	lr
 801128e:	bf00      	nop
 8011290:	fffff800 	.word	0xfffff800

08011294 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011294:	f1a0 0008 	sub.w	r0, r0, #8
 8011298:	e7ec      	b.n	8011274 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 801129a:	bf00      	nop

0801129c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 801129c:	b508      	push	{r3, lr}
 801129e:	4b05      	ldr	r3, [pc, #20]	; (80112b4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 80112a0:	6818      	ldr	r0, [r3, #0]
 80112a2:	6803      	ldr	r3, [r0, #0]
 80112a4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80112a8:	4798      	blx	r3
 80112aa:	1e43      	subs	r3, r0, #1
 80112ac:	4258      	negs	r0, r3
 80112ae:	4158      	adcs	r0, r3
 80112b0:	bd08      	pop	{r3, pc}
 80112b2:	bf00      	nop
 80112b4:	20012f2c 	.word	0x20012f2c

080112b8 <_ZN8touchgfx13PainterRGB565D1Ev>:
 80112b8:	4770      	bx	lr

080112ba <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 80112ba:	3808      	subs	r0, #8
 80112bc:	4770      	bx	lr

080112be <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 80112be:	b430      	push	{r4, r5}
 80112c0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 80112c4:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 80112c8:	8a02      	ldrh	r2, [r0, #16]
 80112ca:	9202      	str	r2, [sp, #8]
 80112cc:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80112d0:	68c2      	ldr	r2, [r0, #12]
 80112d2:	4629      	mov	r1, r5
 80112d4:	4620      	mov	r0, r4
 80112d6:	bc30      	pop	{r4, r5}
 80112d8:	f7ef bee8 	b.w	80010ac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

080112dc <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 80112dc:	f7ef bee4 	b.w	80010a8 <_ZN8touchgfx5paint8tearDownEv>

080112e0 <_ZN8touchgfx13PainterRGB565D0Ev>:
 80112e0:	b510      	push	{r4, lr}
 80112e2:	2114      	movs	r1, #20
 80112e4:	4604      	mov	r4, r0
 80112e6:	f018 f942 	bl	802956e <_ZdlPvj>
 80112ea:	4620      	mov	r0, r4
 80112ec:	bd10      	pop	{r4, pc}

080112ee <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 80112ee:	f1a0 0008 	sub.w	r0, r0, #8
 80112f2:	e7f5      	b.n	80112e0 <_ZN8touchgfx13PainterRGB565D0Ev>

080112f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 80112f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80112f6:	6803      	ldr	r3, [r0, #0]
 80112f8:	460d      	mov	r5, r1
 80112fa:	4604      	mov	r4, r0
 80112fc:	4601      	mov	r1, r0
 80112fe:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011300:	a802      	add	r0, sp, #8
 8011302:	4798      	blx	r3
 8011304:	6828      	ldr	r0, [r5, #0]
 8011306:	6869      	ldr	r1, [r5, #4]
 8011308:	466b      	mov	r3, sp
 801130a:	c303      	stmia	r3!, {r0, r1}
 801130c:	4668      	mov	r0, sp
 801130e:	4619      	mov	r1, r3
 8011310:	f7fe ffa4 	bl	801025c <_ZN8touchgfx4RectaNERKS0_>
 8011314:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8011316:	b188      	cbz	r0, 801133c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011318:	6803      	ldr	r3, [r0, #0]
 801131a:	1d21      	adds	r1, r4, #4
 801131c:	68db      	ldr	r3, [r3, #12]
 801131e:	4798      	blx	r3
 8011320:	b160      	cbz	r0, 801133c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011322:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011326:	2b00      	cmp	r3, #0
 8011328:	dd08      	ble.n	801133c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801132a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 801132e:	2d00      	cmp	r5, #0
 8011330:	dd04      	ble.n	801133c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011332:	4a2b      	ldr	r2, [pc, #172]	; (80113e0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8011334:	7812      	ldrb	r2, [r2, #0]
 8011336:	b11a      	cbz	r2, 8011340 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8011338:	2a01      	cmp	r2, #1
 801133a:	d029      	beq.n	8011390 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 801133c:	b004      	add	sp, #16
 801133e:	bd70      	pop	{r4, r5, r6, pc}
 8011340:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011344:	441d      	add	r5, r3
 8011346:	b2ad      	uxth	r5, r5
 8011348:	b22e      	sxth	r6, r5
 801134a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801134e:	42b3      	cmp	r3, r6
 8011350:	daf4      	bge.n	801133c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011352:	6823      	ldr	r3, [r4, #0]
 8011354:	4669      	mov	r1, sp
 8011356:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011358:	4620      	mov	r0, r4
 801135a:	4798      	blx	r3
 801135c:	b940      	cbnz	r0, 8011370 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801135e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8011362:	2b01      	cmp	r3, #1
 8011364:	d004      	beq.n	8011370 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011366:	3301      	adds	r3, #1
 8011368:	105b      	asrs	r3, r3, #1
 801136a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801136e:	e7f0      	b.n	8011352 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8011370:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8011374:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011378:	4413      	add	r3, r2
 801137a:	b29b      	uxth	r3, r3
 801137c:	441a      	add	r2, r3
 801137e:	b212      	sxth	r2, r2
 8011380:	4296      	cmp	r6, r2
 8011382:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011386:	dae0      	bge.n	801134a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011388:	1aeb      	subs	r3, r5, r3
 801138a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801138e:	e7dc      	b.n	801134a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011390:	f8bd 5000 	ldrh.w	r5, [sp]
 8011394:	441d      	add	r5, r3
 8011396:	b2ad      	uxth	r5, r5
 8011398:	b22e      	sxth	r6, r5
 801139a:	f9bd 3000 	ldrsh.w	r3, [sp]
 801139e:	42b3      	cmp	r3, r6
 80113a0:	dacc      	bge.n	801133c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80113a2:	6823      	ldr	r3, [r4, #0]
 80113a4:	4669      	mov	r1, sp
 80113a6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80113a8:	4620      	mov	r0, r4
 80113aa:	4798      	blx	r3
 80113ac:	b940      	cbnz	r0, 80113c0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80113ae:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80113b2:	2b01      	cmp	r3, #1
 80113b4:	d004      	beq.n	80113c0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80113b6:	3301      	adds	r3, #1
 80113b8:	105b      	asrs	r3, r3, #1
 80113ba:	f8ad 3004 	strh.w	r3, [sp, #4]
 80113be:	e7f0      	b.n	80113a2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 80113c0:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 80113c4:	f8bd 3000 	ldrh.w	r3, [sp]
 80113c8:	4413      	add	r3, r2
 80113ca:	b29b      	uxth	r3, r3
 80113cc:	441a      	add	r2, r3
 80113ce:	b212      	sxth	r2, r2
 80113d0:	4296      	cmp	r6, r2
 80113d2:	f8ad 3000 	strh.w	r3, [sp]
 80113d6:	dae0      	bge.n	801139a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80113d8:	1aeb      	subs	r3, r5, r3
 80113da:	f8ad 3004 	strh.w	r3, [sp, #4]
 80113de:	e7dc      	b.n	801139a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80113e0:	20012f24 	.word	0x20012f24

080113e4 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 80113e4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80113e6:	6803      	ldr	r3, [r0, #0]
 80113e8:	4604      	mov	r4, r0
 80113ea:	4601      	mov	r1, r0
 80113ec:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80113ee:	4668      	mov	r0, sp
 80113f0:	4798      	blx	r3
 80113f2:	2100      	movs	r1, #0
 80113f4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80113f8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80113fc:	9102      	str	r1, [sp, #8]
 80113fe:	4668      	mov	r0, sp
 8011400:	a902      	add	r1, sp, #8
 8011402:	f8ad 200c 	strh.w	r2, [sp, #12]
 8011406:	f8ad 300e 	strh.w	r3, [sp, #14]
 801140a:	f7fe ff27 	bl	801025c <_ZN8touchgfx4RectaNERKS0_>
 801140e:	6823      	ldr	r3, [r4, #0]
 8011410:	4669      	mov	r1, sp
 8011412:	691b      	ldr	r3, [r3, #16]
 8011414:	4620      	mov	r0, r4
 8011416:	4798      	blx	r3
 8011418:	b004      	add	sp, #16
 801141a:	bd10      	pop	{r4, pc}

0801141c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 801141c:	2101      	movs	r1, #1
 801141e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8011422:	490b      	ldr	r1, [pc, #44]	; (8011450 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8011424:	6001      	str	r1, [r0, #0]
 8011426:	2200      	movs	r2, #0
 8011428:	21ff      	movs	r1, #255	; 0xff
 801142a:	8082      	strh	r2, [r0, #4]
 801142c:	80c2      	strh	r2, [r0, #6]
 801142e:	8102      	strh	r2, [r0, #8]
 8011430:	8142      	strh	r2, [r0, #10]
 8011432:	8182      	strh	r2, [r0, #12]
 8011434:	81c2      	strh	r2, [r0, #14]
 8011436:	8202      	strh	r2, [r0, #16]
 8011438:	8242      	strh	r2, [r0, #18]
 801143a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801143e:	61c2      	str	r2, [r0, #28]
 8011440:	8402      	strh	r2, [r0, #32]
 8011442:	8442      	strh	r2, [r0, #34]	; 0x22
 8011444:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8011448:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 801144c:	6282      	str	r2, [r0, #40]	; 0x28
 801144e:	4770      	bx	lr
 8011450:	0802e3fc 	.word	0x0802e3fc

08011454 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8011454:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8011458:	4602      	mov	r2, r0
 801145a:	cb03      	ldmia	r3!, {r0, r1}
 801145c:	6010      	str	r0, [r2, #0]
 801145e:	6051      	str	r1, [r2, #4]
 8011460:	4610      	mov	r0, r2
 8011462:	4770      	bx	lr

08011464 <_ZN8touchgfx4LineD1Ev>:
 8011464:	4770      	bx	lr

08011466 <_ZN8touchgfx4LineD0Ev>:
 8011466:	b510      	push	{r4, lr}
 8011468:	2170      	movs	r1, #112	; 0x70
 801146a:	4604      	mov	r4, r0
 801146c:	f018 f87f 	bl	802956e <_ZdlPvj>
 8011470:	4620      	mov	r0, r4
 8011472:	bd10      	pop	{r4, pc}

08011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8011474:	b507      	push	{r0, r1, r2, lr}
 8011476:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 801147a:	ab01      	add	r3, sp, #4
 801147c:	6809      	ldr	r1, [r1, #0]
 801147e:	6800      	ldr	r0, [r0, #0]
 8011480:	f005 fab4 	bl	80169ec <_ZN8touchgfx6muldivElllRl>
 8011484:	b003      	add	sp, #12
 8011486:	f85d fb04 	ldr.w	pc, [sp], #4

0801148a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 801148a:	6800      	ldr	r0, [r0, #0]
 801148c:	2800      	cmp	r0, #0
 801148e:	bfb9      	ittee	lt
 8011490:	2320      	movlt	r3, #32
 8011492:	fb90 f0f3 	sdivlt	r0, r0, r3
 8011496:	301f      	addge	r0, #31
 8011498:	1140      	asrge	r0, r0, #5
 801149a:	4770      	bx	lr

0801149c <_ZNK8touchgfx4Line17invalidateContentEv>:
 801149c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80114a0:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 80114a4:	b089      	sub	sp, #36	; 0x24
 80114a6:	4604      	mov	r4, r0
 80114a8:	b353      	cbz	r3, 8011500 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 80114aa:	6803      	ldr	r3, [r0, #0]
 80114ac:	4601      	mov	r1, r0
 80114ae:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80114b0:	a802      	add	r0, sp, #8
 80114b2:	4798      	blx	r3
 80114b4:	2220      	movs	r2, #32
 80114b6:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 80114ba:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80114bc:	fb9a f0f2 	sdiv	r0, sl, r2
 80114c0:	fb91 f5f2 	sdiv	r5, r1, r2
 80114c4:	1b40      	subs	r0, r0, r5
 80114c6:	2800      	cmp	r0, #0
 80114c8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80114ca:	fb93 f6f2 	sdiv	r6, r3, r2
 80114ce:	bfb8      	it	lt
 80114d0:	4240      	neglt	r0, r0
 80114d2:	0076      	lsls	r6, r6, #1
 80114d4:	4286      	cmp	r6, r0
 80114d6:	f8d4 b000 	ldr.w	fp, [r4]
 80114da:	dc0c      	bgt.n	80114f6 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 80114dc:	6b25      	ldr	r5, [r4, #48]	; 0x30
 80114de:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 80114e2:	fb95 f0f2 	sdiv	r0, r5, r2
 80114e6:	fb98 f7f2 	sdiv	r7, r8, r2
 80114ea:	1bc0      	subs	r0, r0, r7
 80114ec:	2800      	cmp	r0, #0
 80114ee:	bfb8      	it	lt
 80114f0:	4240      	neglt	r0, r0
 80114f2:	4286      	cmp	r6, r0
 80114f4:	dd07      	ble.n	8011506 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 80114f6:	f8db 3010 	ldr.w	r3, [fp, #16]
 80114fa:	a902      	add	r1, sp, #8
 80114fc:	4620      	mov	r0, r4
 80114fe:	4798      	blx	r3
 8011500:	b009      	add	sp, #36	; 0x24
 8011502:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011506:	3301      	adds	r3, #1
 8011508:	2002      	movs	r0, #2
 801150a:	f10d 0920 	add.w	r9, sp, #32
 801150e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8011512:	4103      	asrs	r3, r0
 8011514:	f849 3d08 	str.w	r3, [r9, #-8]!
 8011518:	eb01 060a 	add.w	r6, r1, sl
 801151c:	eb08 0705 	add.w	r7, r8, r5
 8011520:	fb96 f6f0 	sdiv	r6, r6, r0
 8011524:	fb97 f7f0 	sdiv	r7, r7, r0
 8011528:	4648      	mov	r0, r9
 801152a:	9101      	str	r1, [sp, #4]
 801152c:	b236      	sxth	r6, r6
 801152e:	b23f      	sxth	r7, r7
 8011530:	fb96 f6f2 	sdiv	r6, r6, r2
 8011534:	fb97 f7f2 	sdiv	r7, r7, r2
 8011538:	f7ff ffa7 	bl	801148a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801153c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011540:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8011544:	9901      	ldr	r1, [sp, #4]
 8011546:	4293      	cmp	r3, r2
 8011548:	fa1f fe87 	uxth.w	lr, r7
 801154c:	fa1f fc86 	uxth.w	ip, r6
 8011550:	eba1 0a0a 	sub.w	sl, r1, sl
 8011554:	b280      	uxth	r0, r0
 8011556:	da54      	bge.n	8011602 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8011558:	ebac 0100 	sub.w	r1, ip, r0
 801155c:	b289      	uxth	r1, r1
 801155e:	4460      	add	r0, ip
 8011560:	f1ba 0f00 	cmp.w	sl, #0
 8011564:	b20e      	sxth	r6, r1
 8011566:	b280      	uxth	r0, r0
 8011568:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 801156c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8011570:	da29      	bge.n	80115c6 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8011572:	eba8 0505 	sub.w	r5, r8, r5
 8011576:	2d00      	cmp	r5, #0
 8011578:	da2a      	bge.n	80115d0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 801157a:	fa1f f88a 	uxth.w	r8, sl
 801157e:	eba0 0008 	sub.w	r0, r0, r8
 8011582:	fa1f f58c 	uxth.w	r5, ip
 8011586:	4443      	add	r3, r8
 8011588:	f8ad 0014 	strh.w	r0, [sp, #20]
 801158c:	1a59      	subs	r1, r3, r1
 801158e:	ebae 0005 	sub.w	r0, lr, r5
 8011592:	f8ad a010 	strh.w	sl, [sp, #16]
 8011596:	f8ad c012 	strh.w	ip, [sp, #18]
 801159a:	f8ad 0016 	strh.w	r0, [sp, #22]
 801159e:	f8ad 6018 	strh.w	r6, [sp, #24]
 80115a2:	f8ad 701a 	strh.w	r7, [sp, #26]
 80115a6:	f8ad 101c 	strh.w	r1, [sp, #28]
 80115aa:	442a      	add	r2, r5
 80115ac:	eba2 0e0e 	sub.w	lr, r2, lr
 80115b0:	f8ad e01e 	strh.w	lr, [sp, #30]
 80115b4:	f8db 3010 	ldr.w	r3, [fp, #16]
 80115b8:	a904      	add	r1, sp, #16
 80115ba:	4620      	mov	r0, r4
 80115bc:	4798      	blx	r3
 80115be:	6823      	ldr	r3, [r4, #0]
 80115c0:	4649      	mov	r1, r9
 80115c2:	691b      	ldr	r3, [r3, #16]
 80115c4:	e79a      	b.n	80114fc <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 80115c6:	d003      	beq.n	80115d0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 80115c8:	eba8 0505 	sub.w	r5, r8, r5
 80115cc:	2d00      	cmp	r5, #0
 80115ce:	dcd4      	bgt.n	801157a <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 80115d0:	fa1f f88a 	uxth.w	r8, sl
 80115d4:	4443      	add	r3, r8
 80115d6:	fa1f f58c 	uxth.w	r5, ip
 80115da:	1a59      	subs	r1, r3, r1
 80115dc:	eba0 0008 	sub.w	r0, r0, r8
 80115e0:	ebae 0305 	sub.w	r3, lr, r5
 80115e4:	f8ad 6010 	strh.w	r6, [sp, #16]
 80115e8:	f8ad c012 	strh.w	ip, [sp, #18]
 80115ec:	f8ad 1014 	strh.w	r1, [sp, #20]
 80115f0:	f8ad 3016 	strh.w	r3, [sp, #22]
 80115f4:	f8ad a018 	strh.w	sl, [sp, #24]
 80115f8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80115fc:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011600:	e7d3      	b.n	80115aa <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8011602:	ebae 0100 	sub.w	r1, lr, r0
 8011606:	b289      	uxth	r1, r1
 8011608:	4470      	add	r0, lr
 801160a:	f1ba 0f00 	cmp.w	sl, #0
 801160e:	b20f      	sxth	r7, r1
 8011610:	b280      	uxth	r0, r0
 8011612:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8011616:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 801161a:	da20      	bge.n	801165e <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 801161c:	eba8 0505 	sub.w	r5, r8, r5
 8011620:	2d00      	cmp	r5, #0
 8011622:	da21      	bge.n	8011668 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011624:	fa1f f88e 	uxth.w	r8, lr
 8011628:	fa1f f58a 	uxth.w	r5, sl
 801162c:	4443      	add	r3, r8
 801162e:	442a      	add	r2, r5
 8011630:	f8ad e010 	strh.w	lr, [sp, #16]
 8011634:	1b40      	subs	r0, r0, r5
 8011636:	ebac 0e08 	sub.w	lr, ip, r8
 801163a:	1a51      	subs	r1, r2, r1
 801163c:	eba3 0c0c 	sub.w	ip, r3, ip
 8011640:	f8ad a012 	strh.w	sl, [sp, #18]
 8011644:	f8ad e014 	strh.w	lr, [sp, #20]
 8011648:	f8ad 0016 	strh.w	r0, [sp, #22]
 801164c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011650:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011654:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011658:	f8ad 101e 	strh.w	r1, [sp, #30]
 801165c:	e7aa      	b.n	80115b4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 801165e:	d003      	beq.n	8011668 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011660:	eba8 0505 	sub.w	r5, r8, r5
 8011664:	2d00      	cmp	r5, #0
 8011666:	dcdd      	bgt.n	8011624 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8011668:	fa1f f58e 	uxth.w	r5, lr
 801166c:	fa1f f88a 	uxth.w	r8, sl
 8011670:	4442      	add	r2, r8
 8011672:	442b      	add	r3, r5
 8011674:	f8ad 7012 	strh.w	r7, [sp, #18]
 8011678:	1a51      	subs	r1, r2, r1
 801167a:	ebac 0705 	sub.w	r7, ip, r5
 801167e:	eba0 0008 	sub.w	r0, r0, r8
 8011682:	eba3 0c0c 	sub.w	ip, r3, ip
 8011686:	f8ad e010 	strh.w	lr, [sp, #16]
 801168a:	f8ad 7014 	strh.w	r7, [sp, #20]
 801168e:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011692:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011696:	f8ad a01a 	strh.w	sl, [sp, #26]
 801169a:	f8ad c01c 	strh.w	ip, [sp, #28]
 801169e:	f8ad 001e 	strh.w	r0, [sp, #30]
 80116a2:	e787      	b.n	80115b4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

080116a4 <_ZN8touchgfx7CWRUtil4sineEi>:
 80116a4:	f44f 73b4 	mov.w	r3, #360	; 0x168
 80116a8:	fb90 f2f3 	sdiv	r2, r0, r3
 80116ac:	fb02 0013 	mls	r0, r2, r3, r0
 80116b0:	2800      	cmp	r0, #0
 80116b2:	bfb8      	it	lt
 80116b4:	18c0      	addlt	r0, r0, r3
 80116b6:	285a      	cmp	r0, #90	; 0x5a
 80116b8:	4b09      	ldr	r3, [pc, #36]	; (80116e0 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 80116ba:	dc02      	bgt.n	80116c2 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 80116bc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80116c0:	4770      	bx	lr
 80116c2:	28b4      	cmp	r0, #180	; 0xb4
 80116c4:	dc02      	bgt.n	80116cc <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 80116c6:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 80116ca:	e7f7      	b.n	80116bc <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 80116cc:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 80116d0:	bfd4      	ite	le
 80116d2:	38b4      	suble	r0, #180	; 0xb4
 80116d4:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 80116d8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80116dc:	4240      	negs	r0, r0
 80116de:	4770      	bx	lr
 80116e0:	0802e4c8 	.word	0x0802e4c8

080116e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 80116e4:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 80116e8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80116ea:	fb90 f2f3 	sdiv	r2, r0, r3
 80116ee:	fb02 0013 	mls	r0, r2, r3, r0
 80116f2:	2800      	cmp	r0, #0
 80116f4:	bfb8      	it	lt
 80116f6:	18c0      	addlt	r0, r0, r3
 80116f8:	1144      	asrs	r4, r0, #5
 80116fa:	f000 061f 	and.w	r6, r0, #31
 80116fe:	4620      	mov	r0, r4
 8011700:	f7ff ffd0 	bl	80116a4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011704:	4605      	mov	r5, r0
 8011706:	b90e      	cbnz	r6, 801170c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8011708:	b002      	add	sp, #8
 801170a:	bd70      	pop	{r4, r5, r6, pc}
 801170c:	1c60      	adds	r0, r4, #1
 801170e:	f7ff ffc9 	bl	80116a4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011712:	ab01      	add	r3, sp, #4
 8011714:	2220      	movs	r2, #32
 8011716:	4631      	mov	r1, r6
 8011718:	1b40      	subs	r0, r0, r5
 801171a:	f005 f967 	bl	80169ec <_ZN8touchgfx6muldivElllRl>
 801171e:	4428      	add	r0, r5
 8011720:	e7f2      	b.n	8011708 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08011722 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8011722:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8011726:	bf2c      	ite	cs
 8011728:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 801172c:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8011730:	2300      	movs	r3, #0
 8011732:	1899      	adds	r1, r3, r2
 8011734:	4288      	cmp	r0, r1
 8011736:	bf24      	itt	cs
 8011738:	1853      	addcs	r3, r2, r1
 801173a:	1a40      	subcs	r0, r0, r1
 801173c:	0892      	lsrs	r2, r2, #2
 801173e:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8011742:	d1f6      	bne.n	8011732 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8011744:	4618      	mov	r0, r3
 8011746:	4770      	bx	lr

08011748 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8011748:	b510      	push	{r4, lr}
 801174a:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 801174e:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8011752:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8011756:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 801175a:	13a4      	asrs	r4, r4, #14
 801175c:	139b      	asrs	r3, r3, #14
 801175e:	429c      	cmp	r4, r3
 8011760:	bfb8      	it	lt
 8011762:	461c      	movlt	r4, r3
 8011764:	2c01      	cmp	r4, #1
 8011766:	dd07      	ble.n	8011778 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8011768:	fb91 f1f4 	sdiv	r1, r1, r4
 801176c:	fb90 f0f4 	sdiv	r0, r0, r4
 8011770:	f7ff ffea 	bl	8011748 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011774:	4360      	muls	r0, r4
 8011776:	bd10      	pop	{r4, pc}
 8011778:	4340      	muls	r0, r0
 801177a:	fb01 0001 	mla	r0, r1, r1, r0
 801177e:	f7ff ffd0 	bl	8011722 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011782:	e7f8      	b.n	8011776 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08011784 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8011784:	2800      	cmp	r0, #0
 8011786:	b508      	push	{r3, lr}
 8011788:	da05      	bge.n	8011796 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 801178a:	4240      	negs	r0, r0
 801178c:	f7ff fffa 	bl	8011784 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011790:	4240      	negs	r0, r0
 8011792:	b240      	sxtb	r0, r0
 8011794:	bd08      	pop	{r3, pc}
 8011796:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 801179a:	dc11      	bgt.n	80117c0 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 801179c:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 80117a0:	dd09      	ble.n	80117b6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 80117a2:	4340      	muls	r0, r0
 80117a4:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 80117a8:	f7ff ffbb 	bl	8011722 <_ZN8touchgfx7CWRUtil5isqrtEm>
 80117ac:	f7ff ffea 	bl	8011784 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80117b0:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80117b4:	e7ed      	b.n	8011792 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 80117b6:	3003      	adds	r0, #3
 80117b8:	10c0      	asrs	r0, r0, #3
 80117ba:	4b02      	ldr	r3, [pc, #8]	; (80117c4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 80117bc:	5618      	ldrsb	r0, [r3, r0]
 80117be:	e7e9      	b.n	8011794 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80117c0:	2000      	movs	r0, #0
 80117c2:	e7e7      	b.n	8011794 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80117c4:	0802e46c 	.word	0x0802e46c

080117c8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 80117c8:	4281      	cmp	r1, r0
 80117ca:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80117cc:	460c      	mov	r4, r1
 80117ce:	4615      	mov	r5, r2
 80117d0:	dd07      	ble.n	80117e2 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 80117d2:	4601      	mov	r1, r0
 80117d4:	4620      	mov	r0, r4
 80117d6:	f7ff fff7 	bl	80117c8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80117da:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80117de:	b003      	add	sp, #12
 80117e0:	bd30      	pop	{r4, r5, pc}
 80117e2:	f7ff ffb1 	bl	8011748 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80117e6:	6028      	str	r0, [r5, #0]
 80117e8:	2800      	cmp	r0, #0
 80117ea:	d0f8      	beq.n	80117de <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 80117ec:	4602      	mov	r2, r0
 80117ee:	ab01      	add	r3, sp, #4
 80117f0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80117f4:	4620      	mov	r0, r4
 80117f6:	f005 f8f9 	bl	80169ec <_ZN8touchgfx6muldivElllRl>
 80117fa:	f7ff ffc3 	bl	8011784 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80117fe:	e7ee      	b.n	80117de <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08011800 <_ZN8touchgfx4LineC1Ev>:
 8011800:	b510      	push	{r4, lr}
 8011802:	4604      	mov	r4, r0
 8011804:	f7ff fe0a 	bl	801141c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8011808:	4b0c      	ldr	r3, [pc, #48]	; (801183c <_ZN8touchgfx4LineC1Ev+0x3c>)
 801180a:	6023      	str	r3, [r4, #0]
 801180c:	2220      	movs	r2, #32
 801180e:	2300      	movs	r3, #0
 8011810:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011812:	2212      	movs	r2, #18
 8011814:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8011818:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 801181c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8011820:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8011824:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8011828:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 801182c:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8011830:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8011834:	66e2      	str	r2, [r4, #108]	; 0x6c
 8011836:	60a3      	str	r3, [r4, #8]
 8011838:	4620      	mov	r0, r4
 801183a:	bd10      	pop	{r4, pc}
 801183c:	0802e588 	.word	0x0802e588

08011840 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8011840:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011844:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8011846:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011848:	6b85      	ldr	r5, [r0, #56]	; 0x38
 801184a:	6b02      	ldr	r2, [r0, #48]	; 0x30
 801184c:	1aff      	subs	r7, r7, r3
 801184e:	4604      	mov	r4, r0
 8011850:	eba5 0502 	sub.w	r5, r5, r2
 8011854:	d142      	bne.n	80118dc <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8011856:	b955      	cbnz	r5, 801186e <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8011858:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 801185c:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8011860:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8011864:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8011868:	b002      	add	sp, #8
 801186a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801186e:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8011872:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8011876:	4629      	mov	r1, r5
 8011878:	4642      	mov	r2, r8
 801187a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801187c:	f005 f8d5 	bl	8016a2a <_ZN8touchgfx6muldivElll>
 8011880:	2502      	movs	r5, #2
 8011882:	4642      	mov	r2, r8
 8011884:	fb90 f6f5 	sdiv	r6, r0, r5
 8011888:	4639      	mov	r1, r7
 801188a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801188c:	f005 f8cd 	bl	8016a2a <_ZN8touchgfx6muldivElll>
 8011890:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8011894:	fb90 f5f5 	sdiv	r5, r0, r5
 8011898:	f1b9 0f00 	cmp.w	r9, #0
 801189c:	d067      	beq.n	801196e <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 801189e:	f1b9 0f02 	cmp.w	r9, #2
 80118a2:	d878      	bhi.n	8011996 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 80118a4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80118a6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80118a8:	1b93      	subs	r3, r2, r6
 80118aa:	1b5b      	subs	r3, r3, r5
 80118ac:	6463      	str	r3, [r4, #68]	; 0x44
 80118ae:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80118b0:	18e9      	adds	r1, r5, r3
 80118b2:	1b89      	subs	r1, r1, r6
 80118b4:	6561      	str	r1, [r4, #84]	; 0x54
 80118b6:	1b81      	subs	r1, r0, r6
 80118b8:	4429      	add	r1, r5
 80118ba:	64a1      	str	r1, [r4, #72]	; 0x48
 80118bc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80118be:	4430      	add	r0, r6
 80118c0:	186f      	adds	r7, r5, r1
 80118c2:	4432      	add	r2, r6
 80118c4:	1b49      	subs	r1, r1, r5
 80118c6:	4437      	add	r7, r6
 80118c8:	4428      	add	r0, r5
 80118ca:	4431      	add	r1, r6
 80118cc:	1b52      	subs	r2, r2, r5
 80118ce:	1b5b      	subs	r3, r3, r5
 80118d0:	65a7      	str	r7, [r4, #88]	; 0x58
 80118d2:	64e0      	str	r0, [r4, #76]	; 0x4c
 80118d4:	65e1      	str	r1, [r4, #92]	; 0x5c
 80118d6:	6522      	str	r2, [r4, #80]	; 0x50
 80118d8:	1b9b      	subs	r3, r3, r6
 80118da:	e05b      	b.n	8011994 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 80118dc:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 80118e0:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 80118e4:	2d00      	cmp	r5, #0
 80118e6:	d0c6      	beq.n	8011876 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80118e8:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 80118ec:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 80118f0:	fb93 f2f8 	sdiv	r2, r3, r8
 80118f4:	fb08 3312 	mls	r3, r8, r2, r3
 80118f8:	b353      	cbz	r3, 8011950 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 80118fa:	fb98 f2f3 	sdiv	r2, r8, r3
 80118fe:	fb03 8812 	mls	r8, r3, r2, r8
 8011902:	f1b8 0f00 	cmp.w	r8, #0
 8011906:	d1f3      	bne.n	80118f0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8011908:	2b01      	cmp	r3, #1
 801190a:	bf1c      	itt	ne
 801190c:	fb95 f5f3 	sdivne	r5, r5, r3
 8011910:	fb97 f7f3 	sdivne	r7, r7, r3
 8011914:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8011918:	f24b 5104 	movw	r1, #46340	; 0xb504
 801191c:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8011920:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8011924:	428b      	cmp	r3, r1
 8011926:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 801192a:	4608      	mov	r0, r1
 801192c:	dd01      	ble.n	8011932 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 801192e:	428a      	cmp	r2, r1
 8011930:	dc10      	bgt.n	8011954 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8011932:	fb90 f3f3 	sdiv	r3, r0, r3
 8011936:	fb90 f2f2 	sdiv	r2, r0, r2
 801193a:	4293      	cmp	r3, r2
 801193c:	bfa8      	it	ge
 801193e:	4613      	movge	r3, r2
 8011940:	435f      	muls	r7, r3
 8011942:	435d      	muls	r5, r3
 8011944:	4629      	mov	r1, r5
 8011946:	4638      	mov	r0, r7
 8011948:	f7ff fefe 	bl	8011748 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801194c:	4680      	mov	r8, r0
 801194e:	e792      	b.n	8011876 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011950:	4643      	mov	r3, r8
 8011952:	e7d9      	b.n	8011908 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8011954:	fb93 f3f1 	sdiv	r3, r3, r1
 8011958:	fb92 f2f1 	sdiv	r2, r2, r1
 801195c:	4293      	cmp	r3, r2
 801195e:	bfcc      	ite	gt
 8011960:	3301      	addgt	r3, #1
 8011962:	1c53      	addle	r3, r2, #1
 8011964:	fb97 f7f3 	sdiv	r7, r7, r3
 8011968:	fb95 f5f3 	sdiv	r5, r5, r3
 801196c:	e7ea      	b.n	8011944 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 801196e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011970:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011972:	1b93      	subs	r3, r2, r6
 8011974:	6463      	str	r3, [r4, #68]	; 0x44
 8011976:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011978:	18e9      	adds	r1, r5, r3
 801197a:	6561      	str	r1, [r4, #84]	; 0x54
 801197c:	1b81      	subs	r1, r0, r6
 801197e:	64a1      	str	r1, [r4, #72]	; 0x48
 8011980:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8011982:	4430      	add	r0, r6
 8011984:	186f      	adds	r7, r5, r1
 8011986:	4432      	add	r2, r6
 8011988:	1b49      	subs	r1, r1, r5
 801198a:	65a7      	str	r7, [r4, #88]	; 0x58
 801198c:	64e0      	str	r0, [r4, #76]	; 0x4c
 801198e:	65e1      	str	r1, [r4, #92]	; 0x5c
 8011990:	6522      	str	r2, [r4, #80]	; 0x50
 8011992:	1b5b      	subs	r3, r3, r5
 8011994:	6623      	str	r3, [r4, #96]	; 0x60
 8011996:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8011998:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801199a:	9200      	str	r2, [sp, #0]
 801199c:	9301      	str	r3, [sp, #4]
 801199e:	f104 0148 	add.w	r1, r4, #72	; 0x48
 80119a2:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 80119a6:	680f      	ldr	r7, [r1, #0]
 80119a8:	9800      	ldr	r0, [sp, #0]
 80119aa:	42ba      	cmp	r2, r7
 80119ac:	bfa8      	it	ge
 80119ae:	463a      	movge	r2, r7
 80119b0:	4287      	cmp	r7, r0
 80119b2:	bfc8      	it	gt
 80119b4:	9700      	strgt	r7, [sp, #0]
 80119b6:	690f      	ldr	r7, [r1, #16]
 80119b8:	9801      	ldr	r0, [sp, #4]
 80119ba:	42bb      	cmp	r3, r7
 80119bc:	bfa8      	it	ge
 80119be:	463b      	movge	r3, r7
 80119c0:	3104      	adds	r1, #4
 80119c2:	4287      	cmp	r7, r0
 80119c4:	bfc8      	it	gt
 80119c6:	9701      	strgt	r7, [sp, #4]
 80119c8:	458c      	cmp	ip, r1
 80119ca:	d1ec      	bne.n	80119a6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 80119cc:	4668      	mov	r0, sp
 80119ce:	2720      	movs	r7, #32
 80119d0:	fb92 f8f7 	sdiv	r8, r2, r7
 80119d4:	fb93 f7f7 	sdiv	r7, r3, r7
 80119d8:	f7ff fd57 	bl	801148a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80119dc:	4682      	mov	sl, r0
 80119de:	a801      	add	r0, sp, #4
 80119e0:	f7ff fd53 	bl	801148a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80119e4:	ebaa 0208 	sub.w	r2, sl, r8
 80119e8:	1bc0      	subs	r0, r0, r7
 80119ea:	f1b9 0f01 	cmp.w	r9, #1
 80119ee:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 80119f2:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 80119f6:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 80119fa:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 80119fe:	f47f af33 	bne.w	8011868 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8011a02:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8011a04:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011a06:	1b83      	subs	r3, r0, r6
 8011a08:	6463      	str	r3, [r4, #68]	; 0x44
 8011a0a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011a0c:	18ea      	adds	r2, r5, r3
 8011a0e:	6562      	str	r2, [r4, #84]	; 0x54
 8011a10:	1b8a      	subs	r2, r1, r6
 8011a12:	64a2      	str	r2, [r4, #72]	; 0x48
 8011a14:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011a16:	4431      	add	r1, r6
 8011a18:	18af      	adds	r7, r5, r2
 8011a1a:	4406      	add	r6, r0
 8011a1c:	1b52      	subs	r2, r2, r5
 8011a1e:	1b5d      	subs	r5, r3, r5
 8011a20:	65a7      	str	r7, [r4, #88]	; 0x58
 8011a22:	64e1      	str	r1, [r4, #76]	; 0x4c
 8011a24:	65e2      	str	r2, [r4, #92]	; 0x5c
 8011a26:	6526      	str	r6, [r4, #80]	; 0x50
 8011a28:	6625      	str	r5, [r4, #96]	; 0x60
 8011a2a:	e71d      	b.n	8011868 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08011a2c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8011a2c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011a2e:	428b      	cmp	r3, r1
 8011a30:	d102      	bne.n	8011a38 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8011a32:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8011a34:	4293      	cmp	r3, r2
 8011a36:	d003      	beq.n	8011a40 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8011a38:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8011a3c:	f7ff bf00 	b.w	8011840 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011a40:	4770      	bx	lr

08011a42 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8011a42:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8011a44:	428b      	cmp	r3, r1
 8011a46:	d102      	bne.n	8011a4e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8011a48:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8011a4a:	4293      	cmp	r3, r2
 8011a4c:	d003      	beq.n	8011a56 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8011a4e:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8011a52:	f7ff bef5 	b.w	8011840 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011a56:	4770      	bx	lr

08011a58 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8011a58:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8011a5c:	f7ff bef0 	b.w	8011840 <_ZN8touchgfx4Line17updateCachedShapeEv>

08011a60 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8011a60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011a64:	b0a0      	sub	sp, #128	; 0x80
 8011a66:	4604      	mov	r4, r0
 8011a68:	460a      	mov	r2, r1
 8011a6a:	4601      	mov	r1, r0
 8011a6c:	a804      	add	r0, sp, #16
 8011a6e:	f014 fe3b 	bl	80266e8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8011a72:	2300      	movs	r3, #0
 8011a74:	9301      	str	r3, [sp, #4]
 8011a76:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8011a7a:	2b01      	cmp	r3, #1
 8011a7c:	d17c      	bne.n	8011b78 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8011a7e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011a80:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011a82:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8011a84:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011a86:	1ac0      	subs	r0, r0, r3
 8011a88:	eba1 0102 	sub.w	r1, r1, r2
 8011a8c:	d437      	bmi.n	8011afe <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8011a8e:	2900      	cmp	r1, #0
 8011a90:	aa01      	add	r2, sp, #4
 8011a92:	db2e      	blt.n	8011af2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8011a94:	f7ff fe98 	bl	80117c8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011a98:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8011a9c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8011a9e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8011aa0:	a804      	add	r0, sp, #16
 8011aa2:	f014 ffa1 	bl	80269e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011aa6:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8011aa8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8011aaa:	a804      	add	r0, sp, #16
 8011aac:	f014 ffe9 	bl	8026a82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011ab0:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011ab2:	2db3      	cmp	r5, #179	; 0xb3
 8011ab4:	dc33      	bgt.n	8011b1e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8011ab6:	eba6 0805 	sub.w	r8, r6, r5
 8011aba:	4640      	mov	r0, r8
 8011abc:	f7ff fdf2 	bl	80116a4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011ac0:	a902      	add	r1, sp, #8
 8011ac2:	9002      	str	r0, [sp, #8]
 8011ac4:	a801      	add	r0, sp, #4
 8011ac6:	f7ff fcd5 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011aca:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011acc:	1847      	adds	r7, r0, r1
 8011ace:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011ad2:	f7ff fde7 	bl	80116a4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011ad6:	a903      	add	r1, sp, #12
 8011ad8:	9003      	str	r0, [sp, #12]
 8011ada:	a801      	add	r0, sp, #4
 8011adc:	f7ff fcca 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011ae0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011ae2:	4639      	mov	r1, r7
 8011ae4:	1a12      	subs	r2, r2, r0
 8011ae6:	a804      	add	r0, sp, #16
 8011ae8:	f014 ffcb 	bl	8026a82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011aec:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8011aee:	441d      	add	r5, r3
 8011af0:	e7df      	b.n	8011ab2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8011af2:	4249      	negs	r1, r1
 8011af4:	f7ff fe68 	bl	80117c8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011af8:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8011afc:	e7ce      	b.n	8011a9c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011afe:	2900      	cmp	r1, #0
 8011b00:	f1c0 0000 	rsb	r0, r0, #0
 8011b04:	aa01      	add	r2, sp, #4
 8011b06:	db04      	blt.n	8011b12 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8011b08:	f7ff fe5e 	bl	80117c8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011b0c:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8011b10:	e7c4      	b.n	8011a9c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011b12:	4249      	negs	r1, r1
 8011b14:	f7ff fe58 	bl	80117c8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011b18:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8011b1c:	e7be      	b.n	8011a9c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011b1e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8011b20:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011b22:	a804      	add	r0, sp, #16
 8011b24:	f014 ffad 	bl	8026a82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011b28:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8011b2a:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8011b2c:	a804      	add	r0, sp, #16
 8011b2e:	f014 ffa8 	bl	8026a82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011b32:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011b34:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8011b38:	2d00      	cmp	r5, #0
 8011b3a:	dd31      	ble.n	8011ba0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8011b3c:	eb05 0806 	add.w	r8, r5, r6
 8011b40:	4640      	mov	r0, r8
 8011b42:	f7ff fdaf 	bl	80116a4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011b46:	a902      	add	r1, sp, #8
 8011b48:	9002      	str	r0, [sp, #8]
 8011b4a:	a801      	add	r0, sp, #4
 8011b4c:	f7ff fc92 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011b50:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011b52:	1847      	adds	r7, r0, r1
 8011b54:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011b58:	f7ff fda4 	bl	80116a4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011b5c:	a903      	add	r1, sp, #12
 8011b5e:	9003      	str	r0, [sp, #12]
 8011b60:	a801      	add	r0, sp, #4
 8011b62:	f7ff fc87 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011b66:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011b68:	4639      	mov	r1, r7
 8011b6a:	1a12      	subs	r2, r2, r0
 8011b6c:	a804      	add	r0, sp, #16
 8011b6e:	f014 ff88 	bl	8026a82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011b72:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8011b74:	1aed      	subs	r5, r5, r3
 8011b76:	e7df      	b.n	8011b38 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8011b78:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8011b7a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8011b7c:	a804      	add	r0, sp, #16
 8011b7e:	f014 ff33 	bl	80269e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011b82:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8011b84:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8011b86:	a804      	add	r0, sp, #16
 8011b88:	f014 ff7b 	bl	8026a82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011b8c:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8011b8e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011b90:	a804      	add	r0, sp, #16
 8011b92:	f014 ff76 	bl	8026a82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011b96:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8011b98:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8011b9a:	a804      	add	r0, sp, #16
 8011b9c:	f014 ff71 	bl	8026a82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011ba0:	21ff      	movs	r1, #255	; 0xff
 8011ba2:	a804      	add	r0, sp, #16
 8011ba4:	f014 fe5c 	bl	8026860 <_ZN8touchgfx6Canvas6renderEh>
 8011ba8:	4b04      	ldr	r3, [pc, #16]	; (8011bbc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8011baa:	9304      	str	r3, [sp, #16]
 8011bac:	4604      	mov	r4, r0
 8011bae:	a80c      	add	r0, sp, #48	; 0x30
 8011bb0:	f001 f8cc 	bl	8012d4c <_ZN8touchgfx7OutlineD1Ev>
 8011bb4:	4620      	mov	r0, r4
 8011bb6:	b020      	add	sp, #128	; 0x80
 8011bb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011bbc:	0802edb0 	.word	0x0802edb0

08011bc0 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8011bc0:	2000      	movs	r0, #0
 8011bc2:	4770      	bx	lr

08011bc4 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8011bc4:	4b07      	ldr	r3, [pc, #28]	; (8011be4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8011bc6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011bc8:	881b      	ldrh	r3, [r3, #0]
 8011bca:	4293      	cmp	r3, r2
 8011bcc:	bf81      	itttt	hi
 8011bce:	4b06      	ldrhi	r3, [pc, #24]	; (8011be8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8011bd0:	681b      	ldrhi	r3, [r3, #0]
 8011bd2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8011bd6:	7858      	ldrbhi	r0, [r3, #1]
 8011bd8:	bf8c      	ite	hi
 8011bda:	f000 0003 	andhi.w	r0, r0, #3
 8011bde:	2000      	movls	r0, #0
 8011be0:	4770      	bx	lr
 8011be2:	bf00      	nop
 8011be4:	20012f88 	.word	0x20012f88
 8011be8:	20012f84 	.word	0x20012f84

08011bec <_ZN8touchgfx8TextAreaD1Ev>:
 8011bec:	4770      	bx	lr
	...

08011bf0 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8011bf0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011bf4:	4b10      	ldr	r3, [pc, #64]	; (8011c38 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8011bf6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011bf8:	881b      	ldrh	r3, [r3, #0]
 8011bfa:	428b      	cmp	r3, r1
 8011bfc:	4604      	mov	r4, r0
 8011bfe:	d918      	bls.n	8011c32 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8011c00:	6803      	ldr	r3, [r0, #0]
 8011c02:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8011c04:	4b0d      	ldr	r3, [pc, #52]	; (8011c3c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8011c06:	6818      	ldr	r0, [r3, #0]
 8011c08:	f7f6 fb44 	bl	8008294 <_ZNK8touchgfx5Texts7getTextEt>
 8011c0c:	6823      	ldr	r3, [r4, #0]
 8011c0e:	4606      	mov	r6, r0
 8011c10:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011c12:	4620      	mov	r0, r4
 8011c14:	4798      	blx	r3
 8011c16:	6823      	ldr	r3, [r4, #0]
 8011c18:	4607      	mov	r7, r0
 8011c1a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011c1e:	4620      	mov	r0, r4
 8011c20:	4798      	blx	r3
 8011c22:	463a      	mov	r2, r7
 8011c24:	4603      	mov	r3, r0
 8011c26:	4631      	mov	r1, r6
 8011c28:	4620      	mov	r0, r4
 8011c2a:	46ac      	mov	ip, r5
 8011c2c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011c30:	4760      	bx	ip
 8011c32:	2000      	movs	r0, #0
 8011c34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011c38:	20012f88 	.word	0x20012f88
 8011c3c:	20012f90 	.word	0x20012f90

08011c40 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8011c40:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011c44:	4b17      	ldr	r3, [pc, #92]	; (8011ca4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8011c46:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011c48:	881b      	ldrh	r3, [r3, #0]
 8011c4a:	428b      	cmp	r3, r1
 8011c4c:	4604      	mov	r4, r0
 8011c4e:	d926      	bls.n	8011c9e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8011c50:	4b15      	ldr	r3, [pc, #84]	; (8011ca8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8011c52:	681b      	ldr	r3, [r3, #0]
 8011c54:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8011c58:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8011c5c:	4b13      	ldr	r3, [pc, #76]	; (8011cac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8011c5e:	7855      	ldrb	r5, [r2, #1]
 8011c60:	681b      	ldr	r3, [r3, #0]
 8011c62:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8011c66:	6833      	ldr	r3, [r6, #0]
 8011c68:	69df      	ldr	r7, [r3, #28]
 8011c6a:	4b11      	ldr	r3, [pc, #68]	; (8011cb0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8011c6c:	6818      	ldr	r0, [r3, #0]
 8011c6e:	f7f6 fb11 	bl	8008294 <_ZNK8touchgfx5Texts7getTextEt>
 8011c72:	6823      	ldr	r3, [r4, #0]
 8011c74:	4680      	mov	r8, r0
 8011c76:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011c78:	4620      	mov	r0, r4
 8011c7a:	4798      	blx	r3
 8011c7c:	6823      	ldr	r3, [r4, #0]
 8011c7e:	4681      	mov	r9, r0
 8011c80:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011c84:	4620      	mov	r0, r4
 8011c86:	4798      	blx	r3
 8011c88:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8011c8c:	9000      	str	r0, [sp, #0]
 8011c8e:	464b      	mov	r3, r9
 8011c90:	4642      	mov	r2, r8
 8011c92:	4629      	mov	r1, r5
 8011c94:	4630      	mov	r0, r6
 8011c96:	47b8      	blx	r7
 8011c98:	b003      	add	sp, #12
 8011c9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011c9e:	2000      	movs	r0, #0
 8011ca0:	e7fa      	b.n	8011c98 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8011ca2:	bf00      	nop
 8011ca4:	20012f88 	.word	0x20012f88
 8011ca8:	20012f84 	.word	0x20012f84
 8011cac:	20012f8c 	.word	0x20012f8c
 8011cb0:	20012f90 	.word	0x20012f90

08011cb4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8011cb4:	b40e      	push	{r1, r2, r3}
 8011cb6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011cba:	4b2f      	ldr	r3, [pc, #188]	; (8011d78 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8011cbc:	881a      	ldrh	r2, [r3, #0]
 8011cbe:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8011cc0:	429a      	cmp	r2, r3
 8011cc2:	b09d      	sub	sp, #116	; 0x74
 8011cc4:	4604      	mov	r4, r0
 8011cc6:	d954      	bls.n	8011d72 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8011cc8:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8011d7c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8011ccc:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8011d80 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8011cd0:	aa26      	add	r2, sp, #152	; 0x98
 8011cd2:	9202      	str	r2, [sp, #8]
 8011cd4:	f8d9 2000 	ldr.w	r2, [r9]
 8011cd8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8011cdc:	f8d8 3000 	ldr.w	r3, [r8]
 8011ce0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011ce4:	682b      	ldr	r3, [r5, #0]
 8011ce6:	4628      	mov	r0, r5
 8011ce8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011cea:	4798      	blx	r3
 8011cec:	b207      	sxth	r7, r0
 8011cee:	4606      	mov	r6, r0
 8011cf0:	a803      	add	r0, sp, #12
 8011cf2:	f005 fa57 	bl	80171a4 <_ZN8touchgfx12TextProviderC1Ev>
 8011cf6:	682b      	ldr	r3, [r5, #0]
 8011cf8:	4628      	mov	r0, r5
 8011cfa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011cfc:	4798      	blx	r3
 8011cfe:	682b      	ldr	r3, [r5, #0]
 8011d00:	4682      	mov	sl, r0
 8011d02:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011d04:	4628      	mov	r0, r5
 8011d06:	4798      	blx	r3
 8011d08:	4653      	mov	r3, sl
 8011d0a:	9000      	str	r0, [sp, #0]
 8011d0c:	9a02      	ldr	r2, [sp, #8]
 8011d0e:	9925      	ldr	r1, [sp, #148]	; 0x94
 8011d10:	a803      	add	r0, sp, #12
 8011d12:	f005 faa2 	bl	801725a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011d16:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011d18:	f8d9 3000 	ldr.w	r3, [r9]
 8011d1c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8011d20:	8925      	ldrh	r5, [r4, #8]
 8011d22:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8011d26:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8011d2a:	eba5 050c 	sub.w	r5, r5, ip
 8011d2e:	784a      	ldrb	r2, [r1, #1]
 8011d30:	f8d8 3000 	ldr.w	r3, [r8]
 8011d34:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8011d38:	b22d      	sxth	r5, r5
 8011d3a:	9500      	str	r5, [sp, #0]
 8011d3c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011d40:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011d44:	a803      	add	r0, sp, #12
 8011d46:	f002 feed 	bl	8014b24 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8011d4a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8011d4e:	18b9      	adds	r1, r7, r2
 8011d50:	2900      	cmp	r1, #0
 8011d52:	b203      	sxth	r3, r0
 8011d54:	dd0b      	ble.n	8011d6e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8011d56:	3b01      	subs	r3, #1
 8011d58:	fb13 f302 	smulbb	r3, r3, r2
 8011d5c:	fb16 3300 	smlabb	r3, r6, r0, r3
 8011d60:	b21f      	sxth	r7, r3
 8011d62:	4638      	mov	r0, r7
 8011d64:	b01d      	add	sp, #116	; 0x74
 8011d66:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011d6a:	b003      	add	sp, #12
 8011d6c:	4770      	bx	lr
 8011d6e:	2b00      	cmp	r3, #0
 8011d70:	dcf7      	bgt.n	8011d62 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011d72:	2700      	movs	r7, #0
 8011d74:	e7f5      	b.n	8011d62 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011d76:	bf00      	nop
 8011d78:	20012f88 	.word	0x20012f88
 8011d7c:	20012f84 	.word	0x20012f84
 8011d80:	20012f8c 	.word	0x20012f8c

08011d84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8011d84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d88:	4bbc      	ldr	r3, [pc, #752]	; (801207c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8011d8a:	460c      	mov	r4, r1
 8011d8c:	881b      	ldrh	r3, [r3, #0]
 8011d8e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8011d90:	428b      	cmp	r3, r1
 8011d92:	b0a9      	sub	sp, #164	; 0xa4
 8011d94:	4680      	mov	r8, r0
 8011d96:	d809      	bhi.n	8011dac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8011d98:	2300      	movs	r3, #0
 8011d9a:	f04f 32ff 	mov.w	r2, #4294967295
 8011d9e:	e9c0 3200 	strd	r3, r2, [r0]
 8011da2:	6083      	str	r3, [r0, #8]
 8011da4:	4640      	mov	r0, r8
 8011da6:	b029      	add	sp, #164	; 0xa4
 8011da8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011dac:	4eb4      	ldr	r6, [pc, #720]	; (8012080 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8011dae:	6833      	ldr	r3, [r6, #0]
 8011db0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8011db4:	4bb3      	ldr	r3, [pc, #716]	; (8012084 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8011db6:	681b      	ldr	r3, [r3, #0]
 8011db8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011dbc:	4bb2      	ldr	r3, [pc, #712]	; (8012088 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011dbe:	6818      	ldr	r0, [r3, #0]
 8011dc0:	f7f6 fa68 	bl	8008294 <_ZNK8touchgfx5Texts7getTextEt>
 8011dc4:	682b      	ldr	r3, [r5, #0]
 8011dc6:	4681      	mov	r9, r0
 8011dc8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011dca:	4628      	mov	r0, r5
 8011dcc:	4798      	blx	r3
 8011dce:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8011dd0:	b203      	sxth	r3, r0
 8011dd2:	4407      	add	r7, r0
 8011dd4:	9304      	str	r3, [sp, #16]
 8011dd6:	b2bb      	uxth	r3, r7
 8011dd8:	9303      	str	r3, [sp, #12]
 8011dda:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8011dde:	4682      	mov	sl, r0
 8011de0:	a80f      	add	r0, sp, #60	; 0x3c
 8011de2:	2b00      	cmp	r3, #0
 8011de4:	f040 80a6 	bne.w	8011f34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8011de8:	f005 f9dc 	bl	80171a4 <_ZN8touchgfx12TextProviderC1Ev>
 8011dec:	682b      	ldr	r3, [r5, #0]
 8011dee:	4628      	mov	r0, r5
 8011df0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011df2:	4798      	blx	r3
 8011df4:	682b      	ldr	r3, [r5, #0]
 8011df6:	4606      	mov	r6, r0
 8011df8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011dfa:	4628      	mov	r0, r5
 8011dfc:	4798      	blx	r3
 8011dfe:	6823      	ldr	r3, [r4, #0]
 8011e00:	4607      	mov	r7, r0
 8011e02:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011e04:	4620      	mov	r0, r4
 8011e06:	4798      	blx	r3
 8011e08:	6823      	ldr	r3, [r4, #0]
 8011e0a:	4683      	mov	fp, r0
 8011e0c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011e10:	4620      	mov	r0, r4
 8011e12:	4798      	blx	r3
 8011e14:	463b      	mov	r3, r7
 8011e16:	e9cd b000 	strd	fp, r0, [sp]
 8011e1a:	4649      	mov	r1, r9
 8011e1c:	4632      	mov	r2, r6
 8011e1e:	a80f      	add	r0, sp, #60	; 0x3c
 8011e20:	f005 fa30 	bl	8017284 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011e24:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011e28:	f8df b254 	ldr.w	fp, [pc, #596]	; 8012080 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8011e2c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011e30:	f04f 0600 	mov.w	r6, #0
 8011e34:	bf0c      	ite	eq
 8011e36:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8011e3a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8011e3e:	4637      	mov	r7, r6
 8011e40:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011e42:	f8db 3000 	ldr.w	r3, [fp]
 8011e46:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011e4a:	4629      	mov	r1, r5
 8011e4c:	785b      	ldrb	r3, [r3, #1]
 8011e4e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8011e52:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011e56:	a80f      	add	r0, sp, #60	; 0x3c
 8011e58:	f002 fb7f 	bl	801455a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8011e5c:	9b03      	ldr	r3, [sp, #12]
 8011e5e:	4286      	cmp	r6, r0
 8011e60:	bfb8      	it	lt
 8011e62:	4606      	movlt	r6, r0
 8011e64:	3701      	adds	r7, #1
 8011e66:	eba9 0903 	sub.w	r9, r9, r3
 8011e6a:	a80f      	add	r0, sp, #60	; 0x3c
 8011e6c:	b236      	sxth	r6, r6
 8011e6e:	b2bf      	uxth	r7, r7
 8011e70:	fa0f f989 	sxth.w	r9, r9
 8011e74:	f005 f9bd 	bl	80171f2 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8011e78:	b918      	cbnz	r0, 8011e82 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011e7a:	7a2b      	ldrb	r3, [r5, #8]
 8011e7c:	444b      	add	r3, r9
 8011e7e:	2b00      	cmp	r3, #0
 8011e80:	dcde      	bgt.n	8011e40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8011e82:	9b03      	ldr	r3, [sp, #12]
 8011e84:	9a04      	ldr	r2, [sp, #16]
 8011e86:	f895 9009 	ldrb.w	r9, [r5, #9]
 8011e8a:	fb13 f707 	smulbb	r7, r3, r7
 8011e8e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011e90:	1aff      	subs	r7, r7, r3
 8011e92:	b2bf      	uxth	r7, r7
 8011e94:	b23b      	sxth	r3, r7
 8011e96:	429a      	cmp	r2, r3
 8011e98:	bfa8      	it	ge
 8011e9a:	4657      	movge	r7, sl
 8011e9c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011ea0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011ea4:	6823      	ldr	r3, [r4, #0]
 8011ea6:	bf08      	it	eq
 8011ea8:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8011eac:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011eae:	bf18      	it	ne
 8011eb0:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8011eb4:	4620      	mov	r0, r4
 8011eb6:	4798      	blx	r3
 8011eb8:	444f      	add	r7, r9
 8011eba:	fa1f f987 	uxth.w	r9, r7
 8011ebe:	2801      	cmp	r0, #1
 8011ec0:	fa0f f789 	sxth.w	r7, r9
 8011ec4:	b2b3      	uxth	r3, r6
 8011ec6:	f000 80e1 	beq.w	801208c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8011eca:	2802      	cmp	r0, #2
 8011ecc:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8011ed0:	f000 80e2 	beq.w	8012098 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8011ed4:	7aea      	ldrb	r2, [r5, #11]
 8011ed6:	7b2d      	ldrb	r5, [r5, #12]
 8011ed8:	b236      	sxth	r6, r6
 8011eda:	1ab6      	subs	r6, r6, r2
 8011edc:	442a      	add	r2, r5
 8011ede:	4413      	add	r3, r2
 8011ee0:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8011ee4:	fa1f fa86 	uxth.w	sl, r6
 8011ee8:	b29b      	uxth	r3, r3
 8011eea:	2a02      	cmp	r2, #2
 8011eec:	fa0f fb8a 	sxth.w	fp, sl
 8011ef0:	b21e      	sxth	r6, r3
 8011ef2:	f000 80d5 	beq.w	80120a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8011ef6:	2a03      	cmp	r2, #3
 8011ef8:	f000 80dd 	beq.w	80120b6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8011efc:	2a01      	cmp	r2, #1
 8011efe:	f040 80e5 	bne.w	80120cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8011f02:	8925      	ldrh	r5, [r4, #8]
 8011f04:	4633      	mov	r3, r6
 8011f06:	eba5 0909 	sub.w	r9, r5, r9
 8011f0a:	463e      	mov	r6, r7
 8011f0c:	465d      	mov	r5, fp
 8011f0e:	461f      	mov	r7, r3
 8011f10:	fa0f fb89 	sxth.w	fp, r9
 8011f14:	4b5c      	ldr	r3, [pc, #368]	; (8012088 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011f16:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011f18:	6818      	ldr	r0, [r3, #0]
 8011f1a:	f7f6 f9bb 	bl	8008294 <_ZNK8touchgfx5Texts7getTextEt>
 8011f1e:	f8a8 b000 	strh.w	fp, [r8]
 8011f22:	f8a8 5002 	strh.w	r5, [r8, #2]
 8011f26:	f8a8 6004 	strh.w	r6, [r8, #4]
 8011f2a:	f8a8 7006 	strh.w	r7, [r8, #6]
 8011f2e:	f8c8 0008 	str.w	r0, [r8, #8]
 8011f32:	e737      	b.n	8011da4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8011f34:	f005 f936 	bl	80171a4 <_ZN8touchgfx12TextProviderC1Ev>
 8011f38:	682b      	ldr	r3, [r5, #0]
 8011f3a:	4628      	mov	r0, r5
 8011f3c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011f3e:	4798      	blx	r3
 8011f40:	682b      	ldr	r3, [r5, #0]
 8011f42:	4607      	mov	r7, r0
 8011f44:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011f46:	4628      	mov	r0, r5
 8011f48:	4798      	blx	r3
 8011f4a:	6823      	ldr	r3, [r4, #0]
 8011f4c:	4683      	mov	fp, r0
 8011f4e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011f50:	4620      	mov	r0, r4
 8011f52:	4798      	blx	r3
 8011f54:	6822      	ldr	r2, [r4, #0]
 8011f56:	9005      	str	r0, [sp, #20]
 8011f58:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8011f5c:	4620      	mov	r0, r4
 8011f5e:	4790      	blx	r2
 8011f60:	9b05      	ldr	r3, [sp, #20]
 8011f62:	9001      	str	r0, [sp, #4]
 8011f64:	463a      	mov	r2, r7
 8011f66:	4649      	mov	r1, r9
 8011f68:	9300      	str	r3, [sp, #0]
 8011f6a:	a80f      	add	r0, sp, #60	; 0x3c
 8011f6c:	465b      	mov	r3, fp
 8011f6e:	f005 f989 	bl	8017284 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011f72:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011f76:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8011f7a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011f7c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8011f80:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011f84:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011f88:	bf0a      	itet	eq
 8011f8a:	464a      	moveq	r2, r9
 8011f8c:	461a      	movne	r2, r3
 8011f8e:	4699      	moveq	r9, r3
 8011f90:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8011f94:	1ad2      	subs	r2, r2, r3
 8011f96:	6833      	ldr	r3, [r6, #0]
 8011f98:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8011f9c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8011fa0:	af0f      	add	r7, sp, #60	; 0x3c
 8011fa2:	7859      	ldrb	r1, [r3, #1]
 8011fa4:	9707      	str	r7, [sp, #28]
 8011fa6:	2300      	movs	r3, #0
 8011fa8:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8011fac:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011fb0:	f88d 1020 	strb.w	r1, [sp, #32]
 8011fb4:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8011fb8:	9509      	str	r5, [sp, #36]	; 0x24
 8011fba:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011fbe:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8011fc2:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8011fc6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011fca:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8011fce:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8011fd2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8011fd6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011fda:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011fde:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8011fe2:	b350      	cbz	r0, 801203a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011fe4:	682b      	ldr	r3, [r5, #0]
 8011fe6:	4628      	mov	r0, r5
 8011fe8:	695b      	ldr	r3, [r3, #20]
 8011fea:	4798      	blx	r3
 8011fec:	4607      	mov	r7, r0
 8011fee:	b320      	cbz	r0, 801203a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011ff0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011ff2:	6803      	ldr	r3, [r0, #0]
 8011ff4:	4639      	mov	r1, r7
 8011ff6:	68db      	ldr	r3, [r3, #12]
 8011ff8:	4798      	blx	r3
 8011ffa:	4606      	mov	r6, r0
 8011ffc:	b1e8      	cbz	r0, 801203a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011ffe:	7b43      	ldrb	r3, [r0, #13]
 8012000:	7a82      	ldrb	r2, [r0, #10]
 8012002:	005b      	lsls	r3, r3, #1
 8012004:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012008:	4313      	orrs	r3, r2
 801200a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801200e:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8012012:	2b06      	cmp	r3, #6
 8012014:	d111      	bne.n	801203a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012016:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012018:	6803      	ldr	r3, [r0, #0]
 801201a:	4632      	mov	r2, r6
 801201c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801201e:	4639      	mov	r1, r7
 8012020:	4798      	blx	r3
 8012022:	7b73      	ldrb	r3, [r6, #13]
 8012024:	005b      	lsls	r3, r3, #1
 8012026:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801202a:	7ab3      	ldrb	r3, [r6, #10]
 801202c:	4313      	orrs	r3, r2
 801202e:	4418      	add	r0, r3
 8012030:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012034:	4418      	add	r0, r3
 8012036:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 801203a:	2600      	movs	r6, #0
 801203c:	4637      	mov	r7, r6
 801203e:	a806      	add	r0, sp, #24
 8012040:	f002 fc6c 	bl	801491c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8012044:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8012048:	9b03      	ldr	r3, [sp, #12]
 801204a:	4286      	cmp	r6, r0
 801204c:	eba9 0903 	sub.w	r9, r9, r3
 8012050:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8012054:	bfb8      	it	lt
 8012056:	4606      	movlt	r6, r0
 8012058:	3701      	adds	r7, #1
 801205a:	b236      	sxth	r6, r6
 801205c:	b2bf      	uxth	r7, r7
 801205e:	fa0f f989 	sxth.w	r9, r9
 8012062:	2b00      	cmp	r3, #0
 8012064:	f43f af0d 	beq.w	8011e82 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012068:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 801206c:	2b00      	cmp	r3, #0
 801206e:	f47f af08 	bne.w	8011e82 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012072:	7a2b      	ldrb	r3, [r5, #8]
 8012074:	444b      	add	r3, r9
 8012076:	2b00      	cmp	r3, #0
 8012078:	dce1      	bgt.n	801203e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 801207a:	e702      	b.n	8011e82 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801207c:	20012f88 	.word	0x20012f88
 8012080:	20012f84 	.word	0x20012f84
 8012084:	20012f8c 	.word	0x20012f8c
 8012088:	20012f90 	.word	0x20012f90
 801208c:	ebaa 0606 	sub.w	r6, sl, r6
 8012090:	2002      	movs	r0, #2
 8012092:	fb96 f6f0 	sdiv	r6, r6, r0
 8012096:	e71d      	b.n	8011ed4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8012098:	441e      	add	r6, r3
 801209a:	ebaa 0606 	sub.w	r6, sl, r6
 801209e:	e719      	b.n	8011ed4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80120a0:	8925      	ldrh	r5, [r4, #8]
 80120a2:	1aed      	subs	r5, r5, r3
 80120a4:	eba5 050a 	sub.w	r5, r5, sl
 80120a8:	fa0f fb85 	sxth.w	fp, r5
 80120ac:	8965      	ldrh	r5, [r4, #10]
 80120ae:	eba5 0509 	sub.w	r5, r5, r9
 80120b2:	b22d      	sxth	r5, r5
 80120b4:	e72e      	b.n	8011f14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80120b6:	8965      	ldrh	r5, [r4, #10]
 80120b8:	1aed      	subs	r5, r5, r3
 80120ba:	eba5 050a 	sub.w	r5, r5, sl
 80120be:	4633      	mov	r3, r6
 80120c0:	b22d      	sxth	r5, r5
 80120c2:	463e      	mov	r6, r7
 80120c4:	f04f 0b00 	mov.w	fp, #0
 80120c8:	461f      	mov	r7, r3
 80120ca:	e723      	b.n	8011f14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80120cc:	2500      	movs	r5, #0
 80120ce:	e721      	b.n	8011f14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

080120d0 <_ZN8touchgfx8TextAreaD0Ev>:
 80120d0:	b510      	push	{r4, lr}
 80120d2:	2148      	movs	r1, #72	; 0x48
 80120d4:	4604      	mov	r4, r0
 80120d6:	f017 fa4a 	bl	802956e <_ZdlPvj>
 80120da:	4620      	mov	r0, r4
 80120dc:	bd10      	pop	{r4, pc}
	...

080120e0 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 80120e0:	b513      	push	{r0, r1, r4, lr}
 80120e2:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 80120e6:	4604      	mov	r4, r0
 80120e8:	b1fb      	cbz	r3, 801212a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80120ea:	4b16      	ldr	r3, [pc, #88]	; (8012144 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 80120ec:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80120ee:	881b      	ldrh	r3, [r3, #0]
 80120f0:	428b      	cmp	r3, r1
 80120f2:	d91a      	bls.n	801212a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80120f4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80120f8:	2b00      	cmp	r3, #0
 80120fa:	dd16      	ble.n	801212a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80120fc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012100:	2b00      	cmp	r3, #0
 8012102:	dd12      	ble.n	801212a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012104:	4b10      	ldr	r3, [pc, #64]	; (8012148 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8012106:	6818      	ldr	r0, [r3, #0]
 8012108:	f7f6 f8c4 	bl	8008294 <_ZNK8touchgfx5Texts7getTextEt>
 801210c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012110:	6822      	ldr	r2, [r4, #0]
 8012112:	2b00      	cmp	r3, #0
 8012114:	db06      	blt.n	8012124 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8012116:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801211a:	2b00      	cmp	r3, #0
 801211c:	db02      	blt.n	8012124 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801211e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012120:	4298      	cmp	r0, r3
 8012122:	d004      	beq.n	801212e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8012124:	6953      	ldr	r3, [r2, #20]
 8012126:	4620      	mov	r0, r4
 8012128:	4798      	blx	r3
 801212a:	b002      	add	sp, #8
 801212c:	bd10      	pop	{r4, pc}
 801212e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8012132:	c903      	ldmia	r1, {r0, r1}
 8012134:	466b      	mov	r3, sp
 8012136:	e883 0003 	stmia.w	r3, {r0, r1}
 801213a:	6912      	ldr	r2, [r2, #16]
 801213c:	4619      	mov	r1, r3
 801213e:	4620      	mov	r0, r4
 8012140:	4790      	blx	r2
 8012142:	e7f2      	b.n	801212a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012144:	20012f88 	.word	0x20012f88
 8012148:	20012f90 	.word	0x20012f90

0801214c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 801214c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012150:	4b44      	ldr	r3, [pc, #272]	; (8012264 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8012152:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012154:	881b      	ldrh	r3, [r3, #0]
 8012156:	4293      	cmp	r3, r2
 8012158:	b08e      	sub	sp, #56	; 0x38
 801215a:	4604      	mov	r4, r0
 801215c:	d97e      	bls.n	801225c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801215e:	6808      	ldr	r0, [r1, #0]
 8012160:	4d41      	ldr	r5, [pc, #260]	; (8012268 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8012162:	6849      	ldr	r1, [r1, #4]
 8012164:	ab05      	add	r3, sp, #20
 8012166:	c303      	stmia	r3!, {r0, r1}
 8012168:	4611      	mov	r1, r2
 801216a:	6828      	ldr	r0, [r5, #0]
 801216c:	f7f6 f892 	bl	8008294 <_ZNK8touchgfx5Texts7getTextEt>
 8012170:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012174:	2b00      	cmp	r3, #0
 8012176:	db11      	blt.n	801219c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012178:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801217c:	2b00      	cmp	r3, #0
 801217e:	db0d      	blt.n	801219c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012180:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012182:	4298      	cmp	r0, r3
 8012184:	d10a      	bne.n	801219c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012186:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 801218a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801218e:	ab09      	add	r3, sp, #36	; 0x24
 8012190:	e883 0003 	stmia.w	r3, {r0, r1}
 8012194:	4619      	mov	r1, r3
 8012196:	a805      	add	r0, sp, #20
 8012198:	f7fe f860 	bl	801025c <_ZN8touchgfx4RectaNERKS0_>
 801219c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80121a0:	2b00      	cmp	r3, #0
 80121a2:	dd5b      	ble.n	801225c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80121a4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80121a8:	2b00      	cmp	r3, #0
 80121aa:	dd57      	ble.n	801225c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80121ac:	4f2f      	ldr	r7, [pc, #188]	; (801226c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80121ae:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80121b0:	683b      	ldr	r3, [r7, #0]
 80121b2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80121b6:	4b2e      	ldr	r3, [pc, #184]	; (8012270 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 80121b8:	681b      	ldr	r3, [r3, #0]
 80121ba:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80121be:	2e00      	cmp	r6, #0
 80121c0:	d04c      	beq.n	801225c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80121c2:	6823      	ldr	r3, [r4, #0]
 80121c4:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 80121c8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80121ca:	4620      	mov	r0, r4
 80121cc:	4798      	blx	r3
 80121ce:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80121d0:	683b      	ldr	r3, [r7, #0]
 80121d2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 80121d6:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 80121da:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 80121de:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80121e0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80121e4:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 80121e8:	785b      	ldrb	r3, [r3, #1]
 80121ea:	9609      	str	r6, [sp, #36]	; 0x24
 80121ec:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80121f0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80121f4:	4b1f      	ldr	r3, [pc, #124]	; (8012274 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 80121f6:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 80121fa:	681b      	ldr	r3, [r3, #0]
 80121fc:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8012200:	910b      	str	r1, [sp, #44]	; 0x2c
 8012202:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8012206:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 801220a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 801220e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8012212:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012216:	b10a      	cbz	r2, 801221c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8012218:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 801221a:	b906      	cbnz	r6, 801221e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 801221c:	689e      	ldr	r6, [r3, #8]
 801221e:	af07      	add	r7, sp, #28
 8012220:	4621      	mov	r1, r4
 8012222:	4638      	mov	r0, r7
 8012224:	f004 fab0 	bl	8016788 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012228:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801222a:	6828      	ldr	r0, [r5, #0]
 801222c:	f7f6 f832 	bl	8008294 <_ZNK8touchgfx5Texts7getTextEt>
 8012230:	6823      	ldr	r3, [r4, #0]
 8012232:	4605      	mov	r5, r0
 8012234:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012236:	4620      	mov	r0, r4
 8012238:	4798      	blx	r3
 801223a:	6823      	ldr	r3, [r4, #0]
 801223c:	4680      	mov	r8, r0
 801223e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012242:	4620      	mov	r0, r4
 8012244:	4798      	blx	r3
 8012246:	e9cd 8002 	strd	r8, r0, [sp, #8]
 801224a:	ab09      	add	r3, sp, #36	; 0x24
 801224c:	9300      	str	r3, [sp, #0]
 801224e:	9501      	str	r5, [sp, #4]
 8012250:	ab05      	add	r3, sp, #20
 8012252:	e897 0006 	ldmia.w	r7, {r1, r2}
 8012256:	4630      	mov	r0, r6
 8012258:	f7f5 ffce 	bl	80081f8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801225c:	b00e      	add	sp, #56	; 0x38
 801225e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012262:	bf00      	nop
 8012264:	20012f88 	.word	0x20012f88
 8012268:	20012f90 	.word	0x20012f90
 801226c:	20012f84 	.word	0x20012f84
 8012270:	20012f8c 	.word	0x20012f8c
 8012274:	20012f2c 	.word	0x20012f2c

08012278 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8012278:	b538      	push	{r3, r4, r5, lr}
 801227a:	4b0e      	ldr	r3, [pc, #56]	; (80122b4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 801227c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801227e:	881b      	ldrh	r3, [r3, #0]
 8012280:	429a      	cmp	r2, r3
 8012282:	4604      	mov	r4, r0
 8012284:	d214      	bcs.n	80122b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8012286:	6803      	ldr	r3, [r0, #0]
 8012288:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801228a:	4798      	blx	r3
 801228c:	6823      	ldr	r3, [r4, #0]
 801228e:	4605      	mov	r5, r0
 8012290:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8012292:	4620      	mov	r0, r4
 8012294:	4798      	blx	r3
 8012296:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801229a:	b22d      	sxth	r5, r5
 801229c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80122a0:	4601      	mov	r1, r0
 80122a2:	bf06      	itte	eq
 80122a4:	4602      	moveq	r2, r0
 80122a6:	4629      	moveq	r1, r5
 80122a8:	462a      	movne	r2, r5
 80122aa:	4620      	mov	r0, r4
 80122ac:	f7fd fdb6 	bl	800fe1c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80122b0:	bd38      	pop	{r3, r4, r5, pc}
 80122b2:	bf00      	nop
 80122b4:	20012f88 	.word	0x20012f88

080122b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 80122b8:	b530      	push	{r4, r5, lr}
 80122ba:	888b      	ldrh	r3, [r1, #4]
 80122bc:	8583      	strh	r3, [r0, #44]	; 0x2c
 80122be:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80122c2:	b085      	sub	sp, #20
 80122c4:	4604      	mov	r4, r0
 80122c6:	b923      	cbnz	r3, 80122d2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80122c8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80122cc:	b90b      	cbnz	r3, 80122d2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80122ce:	f7ff ffd3 	bl	8012278 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80122d2:	6823      	ldr	r3, [r4, #0]
 80122d4:	466d      	mov	r5, sp
 80122d6:	4621      	mov	r1, r4
 80122d8:	4628      	mov	r0, r5
 80122da:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80122de:	4798      	blx	r3
 80122e0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80122e4:	343c      	adds	r4, #60	; 0x3c
 80122e6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80122ea:	b005      	add	sp, #20
 80122ec:	bd30      	pop	{r4, r5, pc}

080122ee <_ZNK8touchgfx3Box12getSolidRectEv>:
 80122ee:	2300      	movs	r3, #0
 80122f0:	8083      	strh	r3, [r0, #4]
 80122f2:	80c3      	strh	r3, [r0, #6]
 80122f4:	8003      	strh	r3, [r0, #0]
 80122f6:	8043      	strh	r3, [r0, #2]
 80122f8:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 80122fc:	2bff      	cmp	r3, #255	; 0xff
 80122fe:	bf01      	itttt	eq
 8012300:	890b      	ldrheq	r3, [r1, #8]
 8012302:	8083      	strheq	r3, [r0, #4]
 8012304:	894b      	ldrheq	r3, [r1, #10]
 8012306:	80c3      	strheq	r3, [r0, #6]
 8012308:	4770      	bx	lr
	...

0801230c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 801230c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801230e:	4604      	mov	r4, r0
 8012310:	6808      	ldr	r0, [r1, #0]
 8012312:	6849      	ldr	r1, [r1, #4]
 8012314:	466b      	mov	r3, sp
 8012316:	c303      	stmia	r3!, {r0, r1}
 8012318:	6823      	ldr	r3, [r4, #0]
 801231a:	4669      	mov	r1, sp
 801231c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801231e:	4620      	mov	r0, r4
 8012320:	4798      	blx	r3
 8012322:	4b08      	ldr	r3, [pc, #32]	; (8012344 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8012324:	681b      	ldr	r3, [r3, #0]
 8012326:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801232a:	b10a      	cbz	r2, 8012330 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 801232c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801232e:	b900      	cbnz	r0, 8012332 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8012330:	6898      	ldr	r0, [r3, #8]
 8012332:	6803      	ldr	r3, [r0, #0]
 8012334:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8012336:	6a1d      	ldr	r5, [r3, #32]
 8012338:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 801233c:	4669      	mov	r1, sp
 801233e:	47a8      	blx	r5
 8012340:	b003      	add	sp, #12
 8012342:	bd30      	pop	{r4, r5, pc}
 8012344:	20012f2c 	.word	0x20012f2c

08012348 <_ZN8touchgfx3BoxD1Ev>:
 8012348:	4770      	bx	lr

0801234a <_ZN8touchgfx3BoxD0Ev>:
 801234a:	b510      	push	{r4, lr}
 801234c:	212c      	movs	r1, #44	; 0x2c
 801234e:	4604      	mov	r4, r0
 8012350:	f017 f90d 	bl	802956e <_ZdlPvj>
 8012354:	4620      	mov	r0, r4
 8012356:	bd10      	pop	{r4, pc}

08012358 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8012358:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 801235c:	b12a      	cbz	r2, 801236a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801235e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012362:	b112      	cbz	r2, 801236a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012364:	6803      	ldr	r3, [r0, #0]
 8012366:	695b      	ldr	r3, [r3, #20]
 8012368:	4718      	bx	r3
 801236a:	4770      	bx	lr

0801236c <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 801236c:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8012370:	600b      	str	r3, [r1, #0]
 8012372:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8012376:	6013      	str	r3, [r2, #0]
 8012378:	4770      	bx	lr

0801237a <_ZN8touchgfx5Gauge8setWidthEs>:
 801237a:	8101      	strh	r1, [r0, #8]
 801237c:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8012380:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8012384:	4770      	bx	lr

08012386 <_ZN8touchgfx5Gauge9setHeightEs>:
 8012386:	8141      	strh	r1, [r0, #10]
 8012388:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 801238c:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8012390:	4770      	bx	lr

08012392 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8012392:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8012396:	4770      	bx	lr

08012398 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8012398:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 801239c:	4770      	bx	lr

0801239e <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 801239e:	4770      	bx	lr

080123a0 <_ZN8touchgfx5GaugeD1Ev>:
 80123a0:	4770      	bx	lr

080123a2 <_ZN8touchgfx5Gauge8setAlphaEh>:
 80123a2:	b538      	push	{r3, r4, r5, lr}
 80123a4:	4604      	mov	r4, r0
 80123a6:	460d      	mov	r5, r1
 80123a8:	f7fd fc51 	bl	800fc4e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 80123ac:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 80123b0:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 80123b4:	bd38      	pop	{r3, r4, r5, pc}

080123b6 <_ZN8touchgfx5GaugeD0Ev>:
 80123b6:	b510      	push	{r4, lr}
 80123b8:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 80123bc:	4604      	mov	r4, r0
 80123be:	f017 f8d6 	bl	802956e <_ZdlPvj>
 80123c2:	4620      	mov	r0, r4
 80123c4:	bd10      	pop	{r4, pc}

080123c6 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 80123c6:	b510      	push	{r4, lr}
 80123c8:	6803      	ldr	r3, [r0, #0]
 80123ca:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80123ce:	4604      	mov	r4, r0
 80123d0:	4798      	blx	r3
 80123d2:	b170      	cbz	r0, 80123f2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80123d4:	6823      	ldr	r3, [r4, #0]
 80123d6:	4620      	mov	r0, r4
 80123d8:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80123dc:	4798      	blx	r3
 80123de:	b140      	cbz	r0, 80123f2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80123e0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80123e4:	b12b      	cbz	r3, 80123f2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80123e6:	6823      	ldr	r3, [r4, #0]
 80123e8:	4620      	mov	r0, r4
 80123ea:	695b      	ldr	r3, [r3, #20]
 80123ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80123f0:	4718      	bx	r3
 80123f2:	bd10      	pop	{r4, pc}

080123f4 <_ZN8touchgfx5GaugeC1Ev>:
 80123f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80123f6:	4604      	mov	r4, r0
 80123f8:	4626      	mov	r6, r4
 80123fa:	f7fd fd49 	bl	800fe90 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 80123fe:	4b18      	ldr	r3, [pc, #96]	; (8012460 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8012400:	f846 3bb4 	str.w	r3, [r6], #180
 8012404:	a902      	add	r1, sp, #8
 8012406:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801240a:	f821 3d04 	strh.w	r3, [r1, #-4]!
 801240e:	4630      	mov	r0, r6
 8012410:	f015 f970 	bl	80276f4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8012414:	2500      	movs	r5, #0
 8012416:	2301      	movs	r3, #1
 8012418:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 801241c:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8012420:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8012424:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8012428:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 801242c:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8012430:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8012434:	4638      	mov	r0, r7
 8012436:	f014 fba1 	bl	8026b7c <_ZN8touchgfx6CircleC1Ev>
 801243a:	f104 0158 	add.w	r1, r4, #88	; 0x58
 801243e:	4620      	mov	r0, r4
 8012440:	f7fd fdc7 	bl	800ffd2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8012444:	4639      	mov	r1, r7
 8012446:	4620      	mov	r0, r4
 8012448:	f7fd fd82 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801244c:	4620      	mov	r0, r4
 801244e:	4631      	mov	r1, r6
 8012450:	f7fd fd7e 	bl	800ff50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012454:	4620      	mov	r0, r4
 8012456:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 801245a:	b003      	add	sp, #12
 801245c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801245e:	bf00      	nop
 8012460:	0802e6f8 	.word	0x0802e6f8

08012464 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012464:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8012468:	4770      	bx	lr

0801246a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 801246a:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 801246e:	4770      	bx	lr

08012470 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8012470:	b538      	push	{r3, r4, r5, lr}
 8012472:	8902      	ldrh	r2, [r0, #8]
 8012474:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012478:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 801247c:	4604      	mov	r4, r0
 801247e:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8012482:	2200      	movs	r2, #0
 8012484:	4611      	mov	r1, r2
 8012486:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 801248a:	4628      	mov	r0, r5
 801248c:	f7f0 f9ed 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 8012490:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8012494:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012498:	1a9b      	subs	r3, r3, r2
 801249a:	ee07 3a90 	vmov	s15, r3
 801249e:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 80124a2:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 80124a6:	1a9b      	subs	r3, r3, r2
 80124a8:	ee07 3a10 	vmov	s14, r3
 80124ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80124b0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80124b4:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 80124b8:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 80124bc:	4628      	mov	r0, r5
 80124be:	f015 f965 	bl	802778c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80124c2:	4b16      	ldr	r3, [pc, #88]	; (801251c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 80124c4:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 80124c8:	4628      	mov	r0, r5
 80124ca:	f015 f95f 	bl	802778c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80124ce:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 80124d2:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 80124d6:	ee07 3a90 	vmov	s15, r3
 80124da:	ee07 2a10 	vmov	s14, r2
 80124de:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80124e2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80124e6:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 80124ea:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 80124ee:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 80124f2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80124f6:	4628      	mov	r0, r5
 80124f8:	f015 f948 	bl	802778c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80124fc:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8012500:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8012504:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8012508:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 801250c:	4628      	mov	r0, r5
 801250e:	f015 f93d 	bl	802778c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012512:	2301      	movs	r3, #1
 8012514:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012518:	bd38      	pop	{r3, r4, r5, pc}
 801251a:	bf00      	nop
 801251c:	43960000 	.word	0x43960000

08012520 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8012520:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012522:	4604      	mov	r4, r0
 8012524:	a802      	add	r0, sp, #8
 8012526:	4616      	mov	r6, r2
 8012528:	f820 1d04 	strh.w	r1, [r0, #-4]!
 801252c:	461d      	mov	r5, r3
 801252e:	4601      	mov	r1, r0
 8012530:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012534:	f015 fa80 	bl	8027a38 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8012538:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 801253c:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8012540:	4620      	mov	r0, r4
 8012542:	f7ff ff95 	bl	8012470 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012546:	b002      	add	sp, #8
 8012548:	bd70      	pop	{r4, r5, r6, pc}

0801254a <_ZN8touchgfx5Gauge9setCenterEii>:
 801254a:	b570      	push	{r4, r5, r6, lr}
 801254c:	4606      	mov	r6, r0
 801254e:	460d      	mov	r5, r1
 8012550:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8012554:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8012558:	4614      	mov	r4, r2
 801255a:	f7ff ff89 	bl	8012470 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 801255e:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8012562:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8012566:	1aa4      	subs	r4, r4, r2
 8012568:	1a6d      	subs	r5, r5, r1
 801256a:	0164      	lsls	r4, r4, #5
 801256c:	016d      	lsls	r5, r5, #5
 801256e:	3410      	adds	r4, #16
 8012570:	3510      	adds	r5, #16
 8012572:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8012576:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 801257a:	bd70      	pop	{r4, r5, r6, pc}

0801257c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 801257c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801257e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8012580:	0149      	lsls	r1, r1, #5
 8012582:	4299      	cmp	r1, r3
 8012584:	4604      	mov	r4, r0
 8012586:	9101      	str	r1, [sp, #4]
 8012588:	d00b      	beq.n	80125a2 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 801258a:	4601      	mov	r1, r0
 801258c:	aa01      	add	r2, sp, #4
 801258e:	a802      	add	r0, sp, #8
 8012590:	f014 fcf2 	bl	8026f78 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8012594:	9b01      	ldr	r3, [sp, #4]
 8012596:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012598:	6823      	ldr	r3, [r4, #0]
 801259a:	a902      	add	r1, sp, #8
 801259c:	691b      	ldr	r3, [r3, #16]
 801259e:	4620      	mov	r0, r4
 80125a0:	4798      	blx	r3
 80125a2:	b004      	add	sp, #16
 80125a4:	bd10      	pop	{r4, pc}
	...

080125a8 <_ZN8touchgfx5Gauge8setValueEi>:
 80125a8:	b570      	push	{r4, r5, r6, lr}
 80125aa:	4604      	mov	r4, r0
 80125ac:	f7fd fba2 	bl	800fcf4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 80125b0:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 80125b4:	429a      	cmp	r2, r3
 80125b6:	bfac      	ite	ge
 80125b8:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 80125bc:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 80125c0:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 80125c4:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 80125c8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 80125cc:	1ac9      	subs	r1, r1, r3
 80125ce:	2900      	cmp	r1, #0
 80125d0:	bfb8      	it	lt
 80125d2:	4249      	neglt	r1, r1
 80125d4:	b289      	uxth	r1, r1
 80125d6:	4620      	mov	r0, r4
 80125d8:	f7fd fbae 	bl	800fd38 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 80125dc:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 80125e0:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80125e4:	eddf 6a19 	vldr	s13, [pc, #100]	; 801264c <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 80125e8:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8012650 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 80125ec:	429a      	cmp	r2, r3
 80125ee:	4605      	mov	r5, r0
 80125f0:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 80125f4:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 80125f8:	da15      	bge.n	8012626 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 80125fa:	1b5b      	subs	r3, r3, r5
 80125fc:	ee07 3a90 	vmov	s15, r3
 8012600:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012604:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012608:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 801260c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012610:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012614:	f015 f829 	bl	802766a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012618:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 801261c:	1b49      	subs	r1, r1, r5
 801261e:	4630      	mov	r0, r6
 8012620:	f7ff ffac 	bl	801257c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8012624:	bd70      	pop	{r4, r5, r6, pc}
 8012626:	442b      	add	r3, r5
 8012628:	ee07 3a90 	vmov	s15, r3
 801262c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012630:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012634:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012638:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 801263c:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012640:	f015 f813 	bl	802766a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012644:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012648:	4429      	add	r1, r5
 801264a:	e7e8      	b.n	801261e <_ZN8touchgfx5Gauge8setValueEi+0x76>
 801264c:	43340000 	.word	0x43340000
 8012650:	40490fdb 	.word	0x40490fdb

08012654 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8012654:	b510      	push	{r4, lr}
 8012656:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 801265a:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 801265e:	0149      	lsls	r1, r1, #5
 8012660:	0152      	lsls	r2, r2, #5
 8012662:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8012666:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 801266a:	4604      	mov	r4, r0
 801266c:	f7fd faec 	bl	800fc48 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8012670:	4601      	mov	r1, r0
 8012672:	4620      	mov	r0, r4
 8012674:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012678:	f7ff bf96 	b.w	80125a8 <_ZN8touchgfx5Gauge8setValueEi>

0801267c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 801267c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012680:	4770      	bx	lr

08012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8012682:	b570      	push	{r4, r5, r6, lr}
 8012684:	880b      	ldrh	r3, [r1, #0]
 8012686:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8012688:	4605      	mov	r5, r0
 801268a:	8813      	ldrh	r3, [r2, #0]
 801268c:	f825 3f30 	strh.w	r3, [r5, #48]!
 8012690:	4604      	mov	r4, r0
 8012692:	4628      	mov	r0, r5
 8012694:	f006 fb06 	bl	8018ca4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012698:	4606      	mov	r6, r0
 801269a:	4628      	mov	r0, r5
 801269c:	f006 fb36 	bl	8018d0c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80126a0:	6823      	ldr	r3, [r4, #0]
 80126a2:	4605      	mov	r5, r0
 80126a4:	4631      	mov	r1, r6
 80126a6:	4620      	mov	r0, r4
 80126a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80126aa:	4798      	blx	r3
 80126ac:	6823      	ldr	r3, [r4, #0]
 80126ae:	4629      	mov	r1, r5
 80126b0:	4620      	mov	r0, r4
 80126b2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80126b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80126b8:	4718      	bx	r3

080126ba <_ZN8touchgfx14AbstractButton13executeActionEv>:
 80126ba:	b510      	push	{r4, lr}
 80126bc:	4604      	mov	r4, r0
 80126be:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80126c0:	b150      	cbz	r0, 80126d8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80126c2:	6803      	ldr	r3, [r0, #0]
 80126c4:	68db      	ldr	r3, [r3, #12]
 80126c6:	4798      	blx	r3
 80126c8:	b130      	cbz	r0, 80126d8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80126ca:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80126cc:	6803      	ldr	r3, [r0, #0]
 80126ce:	4621      	mov	r1, r4
 80126d0:	689b      	ldr	r3, [r3, #8]
 80126d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80126d6:	4718      	bx	r3
 80126d8:	bd10      	pop	{r4, pc}

080126da <_ZNK8touchgfx6Button12getSolidRectEv>:
 80126da:	b510      	push	{r4, lr}
 80126dc:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 80126e0:	2bff      	cmp	r3, #255	; 0xff
 80126e2:	4604      	mov	r4, r0
 80126e4:	d006      	beq.n	80126f4 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80126e6:	2300      	movs	r3, #0
 80126e8:	8003      	strh	r3, [r0, #0]
 80126ea:	8043      	strh	r3, [r0, #2]
 80126ec:	8083      	strh	r3, [r0, #4]
 80126ee:	80c3      	strh	r3, [r0, #6]
 80126f0:	4620      	mov	r0, r4
 80126f2:	bd10      	pop	{r4, pc}
 80126f4:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 80126f8:	b11b      	cbz	r3, 8012702 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 80126fa:	3130      	adds	r1, #48	; 0x30
 80126fc:	f006 fb3a 	bl	8018d74 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012700:	e7f6      	b.n	80126f0 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8012702:	312e      	adds	r1, #46	; 0x2e
 8012704:	e7fa      	b.n	80126fc <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08012708 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8012708:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801270c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012710:	b08a      	sub	sp, #40	; 0x28
 8012712:	4604      	mov	r4, r0
 8012714:	4688      	mov	r8, r1
 8012716:	2b00      	cmp	r3, #0
 8012718:	d066      	beq.n	80127e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801271a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801271c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012720:	a805      	add	r0, sp, #20
 8012722:	f006 fabf 	bl	8018ca4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012726:	4607      	mov	r7, r0
 8012728:	a805      	add	r0, sp, #20
 801272a:	f006 faef 	bl	8018d0c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801272e:	f9b8 6000 	ldrsh.w	r6, [r8]
 8012732:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8012736:	4432      	add	r2, r6
 8012738:	b292      	uxth	r2, r2
 801273a:	2300      	movs	r3, #0
 801273c:	fa0f fc82 	sxth.w	ip, r2
 8012740:	459c      	cmp	ip, r3
 8012742:	9306      	str	r3, [sp, #24]
 8012744:	dd52      	ble.n	80127ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012746:	42b7      	cmp	r7, r6
 8012748:	dd50      	ble.n	80127ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801274a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 801274e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8012752:	442b      	add	r3, r5
 8012754:	b29b      	uxth	r3, r3
 8012756:	b219      	sxth	r1, r3
 8012758:	2900      	cmp	r1, #0
 801275a:	dd47      	ble.n	80127ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801275c:	42a8      	cmp	r0, r5
 801275e:	dd45      	ble.n	80127ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012760:	4567      	cmp	r7, ip
 8012762:	bfb8      	it	lt
 8012764:	b2ba      	uxthlt	r2, r7
 8012766:	4288      	cmp	r0, r1
 8012768:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801276c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8012770:	bfb8      	it	lt
 8012772:	b283      	uxthlt	r3, r0
 8012774:	1b92      	subs	r2, r2, r6
 8012776:	1b5b      	subs	r3, r3, r5
 8012778:	f8ad 201c 	strh.w	r2, [sp, #28]
 801277c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012780:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012784:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012788:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801278c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012790:	429a      	cmp	r2, r3
 8012792:	d026      	beq.n	80127e2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012794:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012798:	2b00      	cmp	r3, #0
 801279a:	dd22      	ble.n	80127e2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801279c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80127a0:	2b00      	cmp	r3, #0
 80127a2:	dd1e      	ble.n	80127e2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80127a4:	2300      	movs	r3, #0
 80127a6:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80127aa:	6823      	ldr	r3, [r4, #0]
 80127ac:	a908      	add	r1, sp, #32
 80127ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80127b0:	4620      	mov	r0, r4
 80127b2:	4798      	blx	r3
 80127b4:	4b0f      	ldr	r3, [pc, #60]	; (80127f4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80127b6:	681b      	ldr	r3, [r3, #0]
 80127b8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80127bc:	b10a      	cbz	r2, 80127c2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 80127be:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80127c0:	b900      	cbnz	r0, 80127c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 80127c2:	6898      	ldr	r0, [r3, #8]
 80127c4:	6801      	ldr	r1, [r0, #0]
 80127c6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80127ca:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80127ce:	2501      	movs	r5, #1
 80127d0:	9502      	str	r5, [sp, #8]
 80127d2:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80127d6:	9401      	str	r4, [sp, #4]
 80127d8:	ac06      	add	r4, sp, #24
 80127da:	9400      	str	r4, [sp, #0]
 80127dc:	688c      	ldr	r4, [r1, #8]
 80127de:	a905      	add	r1, sp, #20
 80127e0:	47a0      	blx	r4
 80127e2:	b00a      	add	sp, #40	; 0x28
 80127e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80127e8:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80127ea:	e797      	b.n	801271c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80127ec:	2300      	movs	r3, #0
 80127ee:	9307      	str	r3, [sp, #28]
 80127f0:	e7ca      	b.n	8012788 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 80127f2:	bf00      	nop
 80127f4:	20012f2c 	.word	0x20012f2c

080127f8 <_ZNK8touchgfx6Button17invalidateContentEv>:
 80127f8:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 80127fc:	b12a      	cbz	r2, 801280a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80127fe:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012802:	b112      	cbz	r2, 801280a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8012804:	6803      	ldr	r3, [r0, #0]
 8012806:	695b      	ldr	r3, [r3, #20]
 8012808:	4718      	bx	r3
 801280a:	4770      	bx	lr

0801280c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 801280c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012810:	4b2f      	ldr	r3, [pc, #188]	; (80128d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8012812:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012814:	881b      	ldrh	r3, [r3, #0]
 8012816:	4293      	cmp	r3, r2
 8012818:	b08d      	sub	sp, #52	; 0x34
 801281a:	4604      	mov	r4, r0
 801281c:	460f      	mov	r7, r1
 801281e:	d954      	bls.n	80128ca <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012820:	4b2c      	ldr	r3, [pc, #176]	; (80128d4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8012822:	6819      	ldr	r1, [r3, #0]
 8012824:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8012828:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 801282c:	4a2a      	ldr	r2, [pc, #168]	; (80128d8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 801282e:	6812      	ldr	r2, [r2, #0]
 8012830:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8012834:	2900      	cmp	r1, #0
 8012836:	d048      	beq.n	80128ca <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012838:	785a      	ldrb	r2, [r3, #1]
 801283a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801283e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8012842:	4b26      	ldr	r3, [pc, #152]	; (80128dc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8012844:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8012848:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 801284c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8012850:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8012852:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8012856:	9107      	str	r1, [sp, #28]
 8012858:	f3c2 0801 	ubfx	r8, r2, #0, #2
 801285c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012860:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8012864:	681a      	ldr	r2, [r3, #0]
 8012866:	f88d 8020 	strb.w	r8, [sp, #32]
 801286a:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 801286e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8012872:	9609      	str	r6, [sp, #36]	; 0x24
 8012874:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8012878:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 801287c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8012880:	b10b      	cbz	r3, 8012886 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8012882:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8012884:	b905      	cbnz	r5, 8012888 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8012886:	6895      	ldr	r5, [r2, #8]
 8012888:	ae05      	add	r6, sp, #20
 801288a:	4621      	mov	r1, r4
 801288c:	4630      	mov	r0, r6
 801288e:	f003 ff7b 	bl	8016788 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012892:	4b13      	ldr	r3, [pc, #76]	; (80128e0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8012894:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012896:	6818      	ldr	r0, [r3, #0]
 8012898:	f7f5 fcfc 	bl	8008294 <_ZNK8touchgfx5Texts7getTextEt>
 801289c:	6823      	ldr	r3, [r4, #0]
 801289e:	4680      	mov	r8, r0
 80128a0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80128a2:	4620      	mov	r0, r4
 80128a4:	4798      	blx	r3
 80128a6:	6823      	ldr	r3, [r4, #0]
 80128a8:	4681      	mov	r9, r0
 80128aa:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80128ae:	4620      	mov	r0, r4
 80128b0:	4798      	blx	r3
 80128b2:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80128b6:	ab07      	add	r3, sp, #28
 80128b8:	9300      	str	r3, [sp, #0]
 80128ba:	f8cd 8004 	str.w	r8, [sp, #4]
 80128be:	463b      	mov	r3, r7
 80128c0:	e896 0006 	ldmia.w	r6, {r1, r2}
 80128c4:	4628      	mov	r0, r5
 80128c6:	f7f5 fc97 	bl	80081f8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80128ca:	b00d      	add	sp, #52	; 0x34
 80128cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80128d0:	20012f88 	.word	0x20012f88
 80128d4:	20012f84 	.word	0x20012f84
 80128d8:	20012f8c 	.word	0x20012f8c
 80128dc:	20012f2c 	.word	0x20012f2c
 80128e0:	20012f90 	.word	0x20012f90

080128e4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 80128e4:	4770      	bx	lr

080128e6 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 80128e6:	4770      	bx	lr

080128e8 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 80128e8:	b510      	push	{r4, lr}
 80128ea:	213c      	movs	r1, #60	; 0x3c
 80128ec:	4604      	mov	r4, r0
 80128ee:	f016 fe3e 	bl	802956e <_ZdlPvj>
 80128f2:	4620      	mov	r0, r4
 80128f4:	bd10      	pop	{r4, pc}

080128f6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 80128f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80128fa:	461c      	mov	r4, r3
 80128fc:	4606      	mov	r6, r0
 80128fe:	9f06      	ldr	r7, [sp, #24]
 8012900:	f7ff febf 	bl	8012682 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8012904:	8823      	ldrh	r3, [r4, #0]
 8012906:	86b3      	strh	r3, [r6, #52]	; 0x34
 8012908:	883b      	ldrh	r3, [r7, #0]
 801290a:	86f3      	strh	r3, [r6, #54]	; 0x36
 801290c:	4638      	mov	r0, r7
 801290e:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8012912:	f006 f9c7 	bl	8018ca4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012916:	f04f 0802 	mov.w	r8, #2
 801291a:	fb95 f5f8 	sdiv	r5, r5, r8
 801291e:	b2ad      	uxth	r5, r5
 8012920:	fb90 f0f8 	sdiv	r0, r0, r8
 8012924:	1a2d      	subs	r5, r5, r0
 8012926:	8735      	strh	r5, [r6, #56]	; 0x38
 8012928:	4638      	mov	r0, r7
 801292a:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 801292e:	fb94 f4f8 	sdiv	r4, r4, r8
 8012932:	f006 f9eb 	bl	8018d0c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012936:	b2a4      	uxth	r4, r4
 8012938:	fb90 f0f8 	sdiv	r0, r0, r8
 801293c:	1a24      	subs	r4, r4, r0
 801293e:	8774      	strh	r4, [r6, #58]	; 0x3a
 8012940:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012944 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8012944:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012948:	4604      	mov	r4, r0
 801294a:	b08c      	sub	sp, #48	; 0x30
 801294c:	460d      	mov	r5, r1
 801294e:	f7ff fedb 	bl	8012708 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8012952:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8012956:	2b00      	cmp	r3, #0
 8012958:	d05d      	beq.n	8012a16 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 801295a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801295c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012960:	a805      	add	r0, sp, #20
 8012962:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8012966:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 801296a:	f006 f99b 	bl	8018ca4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801296e:	4606      	mov	r6, r0
 8012970:	a805      	add	r0, sp, #20
 8012972:	f006 f9cb 	bl	8018d0c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012976:	6869      	ldr	r1, [r5, #4]
 8012978:	f8ad 001e 	strh.w	r0, [sp, #30]
 801297c:	6828      	ldr	r0, [r5, #0]
 801297e:	f8ad 8018 	strh.w	r8, [sp, #24]
 8012982:	ab08      	add	r3, sp, #32
 8012984:	ad08      	add	r5, sp, #32
 8012986:	c303      	stmia	r3!, {r0, r1}
 8012988:	a906      	add	r1, sp, #24
 801298a:	4628      	mov	r0, r5
 801298c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012990:	f8ad 601c 	strh.w	r6, [sp, #28]
 8012994:	f7fd fc62 	bl	801025c <_ZN8touchgfx4RectaNERKS0_>
 8012998:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801299c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80129a0:	429a      	cmp	r2, r3
 80129a2:	d035      	beq.n	8012a10 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80129a4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80129a8:	2b00      	cmp	r3, #0
 80129aa:	dd31      	ble.n	8012a10 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80129ac:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 80129b0:	2b00      	cmp	r3, #0
 80129b2:	dd2d      	ble.n	8012a10 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80129b4:	2300      	movs	r3, #0
 80129b6:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 80129ba:	6823      	ldr	r3, [r4, #0]
 80129bc:	a90a      	add	r1, sp, #40	; 0x28
 80129be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80129c0:	4620      	mov	r0, r4
 80129c2:	4798      	blx	r3
 80129c4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80129c8:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80129ca:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80129ce:	1a9b      	subs	r3, r3, r2
 80129d0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80129d4:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 80129d6:	1ac9      	subs	r1, r1, r3
 80129d8:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 80129dc:	490f      	ldr	r1, [pc, #60]	; (8012a1c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 80129de:	6809      	ldr	r1, [r1, #0]
 80129e0:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 80129e4:	b108      	cbz	r0, 80129ea <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 80129e6:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 80129e8:	b900      	cbnz	r0, 80129ec <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 80129ea:	6888      	ldr	r0, [r1, #8]
 80129ec:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 80129f0:	440b      	add	r3, r1
 80129f2:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80129f6:	2601      	movs	r6, #1
 80129f8:	440a      	add	r2, r1
 80129fa:	6801      	ldr	r1, [r0, #0]
 80129fc:	9602      	str	r6, [sp, #8]
 80129fe:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8012a02:	e9cd 5400 	strd	r5, r4, [sp]
 8012a06:	b21b      	sxth	r3, r3
 8012a08:	688c      	ldr	r4, [r1, #8]
 8012a0a:	b212      	sxth	r2, r2
 8012a0c:	a905      	add	r1, sp, #20
 8012a0e:	47a0      	blx	r4
 8012a10:	b00c      	add	sp, #48	; 0x30
 8012a12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012a16:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012a18:	e7a0      	b.n	801295c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 8012a1a:	bf00      	nop
 8012a1c:	20012f2c 	.word	0x20012f2c

08012a20 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8012a20:	b510      	push	{r4, lr}
 8012a22:	2101      	movs	r1, #1
 8012a24:	2200      	movs	r2, #0
 8012a26:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8012a2a:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8012a2e:	4c0e      	ldr	r4, [pc, #56]	; (8012a68 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8012a30:	8082      	strh	r2, [r0, #4]
 8012a32:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012a36:	80c2      	strh	r2, [r0, #6]
 8012a38:	8102      	strh	r2, [r0, #8]
 8012a3a:	8142      	strh	r2, [r0, #10]
 8012a3c:	8182      	strh	r2, [r0, #12]
 8012a3e:	81c2      	strh	r2, [r0, #14]
 8012a40:	8202      	strh	r2, [r0, #16]
 8012a42:	8242      	strh	r2, [r0, #18]
 8012a44:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012a48:	61c2      	str	r2, [r0, #28]
 8012a4a:	8402      	strh	r2, [r0, #32]
 8012a4c:	8442      	strh	r2, [r0, #34]	; 0x22
 8012a4e:	6282      	str	r2, [r0, #40]	; 0x28
 8012a50:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012a54:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012a56:	8601      	strh	r1, [r0, #48]	; 0x30
 8012a58:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8012a5c:	6004      	str	r4, [r0, #0]
 8012a5e:	8681      	strh	r1, [r0, #52]	; 0x34
 8012a60:	86c1      	strh	r1, [r0, #54]	; 0x36
 8012a62:	8702      	strh	r2, [r0, #56]	; 0x38
 8012a64:	8742      	strh	r2, [r0, #58]	; 0x3a
 8012a66:	bd10      	pop	{r4, pc}
 8012a68:	0802e7e0 	.word	0x0802e7e0

08012a6c <_ZN8touchgfx5ImageD1Ev>:
 8012a6c:	4770      	bx	lr

08012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8012a6e:	b570      	push	{r4, r5, r6, lr}
 8012a70:	880b      	ldrh	r3, [r1, #0]
 8012a72:	84c3      	strh	r3, [r0, #38]	; 0x26
 8012a74:	4604      	mov	r4, r0
 8012a76:	4608      	mov	r0, r1
 8012a78:	460d      	mov	r5, r1
 8012a7a:	f006 f913 	bl	8018ca4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012a7e:	4606      	mov	r6, r0
 8012a80:	4628      	mov	r0, r5
 8012a82:	f006 f943 	bl	8018d0c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012a86:	6823      	ldr	r3, [r4, #0]
 8012a88:	4605      	mov	r5, r0
 8012a8a:	4631      	mov	r1, r6
 8012a8c:	4620      	mov	r0, r4
 8012a8e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012a90:	4798      	blx	r3
 8012a92:	6823      	ldr	r3, [r4, #0]
 8012a94:	4629      	mov	r1, r5
 8012a96:	4620      	mov	r0, r4
 8012a98:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012a9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012a9e:	4718      	bx	r3

08012aa0 <_ZN8touchgfx5ImageD0Ev>:
 8012aa0:	b510      	push	{r4, lr}
 8012aa2:	212c      	movs	r1, #44	; 0x2c
 8012aa4:	4604      	mov	r4, r0
 8012aa6:	f016 fd62 	bl	802956e <_ZdlPvj>
 8012aaa:	4620      	mov	r0, r4
 8012aac:	bd10      	pop	{r4, pc}

08012aae <_ZNK8touchgfx5Image12getSolidRectEv>:
 8012aae:	b510      	push	{r4, lr}
 8012ab0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8012ab4:	2bff      	cmp	r3, #255	; 0xff
 8012ab6:	4604      	mov	r4, r0
 8012ab8:	d006      	beq.n	8012ac8 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8012aba:	2300      	movs	r3, #0
 8012abc:	8003      	strh	r3, [r0, #0]
 8012abe:	8043      	strh	r3, [r0, #2]
 8012ac0:	8083      	strh	r3, [r0, #4]
 8012ac2:	80c3      	strh	r3, [r0, #6]
 8012ac4:	4620      	mov	r0, r4
 8012ac6:	bd10      	pop	{r4, pc}
 8012ac8:	3126      	adds	r1, #38	; 0x26
 8012aca:	f006 f953 	bl	8018d74 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012ace:	e7f9      	b.n	8012ac4 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08012ad0 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8012ad0:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8012ad4:	b12a      	cbz	r2, 8012ae2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8012ad6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012ada:	b112      	cbz	r2, 8012ae2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8012adc:	6803      	ldr	r3, [r0, #0]
 8012ade:	695b      	ldr	r3, [r3, #20]
 8012ae0:	4718      	bx	r3
 8012ae2:	4770      	bx	lr

08012ae4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8012ae4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012ae8:	4604      	mov	r4, r0
 8012aea:	b088      	sub	sp, #32
 8012aec:	f854 3b26 	ldr.w	r3, [r4], #38
 8012af0:	2500      	movs	r5, #0
 8012af2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012af4:	460f      	mov	r7, r1
 8012af6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8012afa:	a904      	add	r1, sp, #16
 8012afc:	4606      	mov	r6, r0
 8012afe:	4798      	blx	r3
 8012b00:	4620      	mov	r0, r4
 8012b02:	f006 f8cf 	bl	8018ca4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012b06:	4680      	mov	r8, r0
 8012b08:	4620      	mov	r0, r4
 8012b0a:	f006 f8ff 	bl	8018d0c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012b0e:	9506      	str	r5, [sp, #24]
 8012b10:	ad06      	add	r5, sp, #24
 8012b12:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012b16:	4639      	mov	r1, r7
 8012b18:	4628      	mov	r0, r5
 8012b1a:	f8ad 801c 	strh.w	r8, [sp, #28]
 8012b1e:	f7fd fb9d 	bl	801025c <_ZN8touchgfx4RectaNERKS0_>
 8012b22:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012b26:	2b00      	cmp	r3, #0
 8012b28:	dd19      	ble.n	8012b5e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8012b2a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012b2e:	2b00      	cmp	r3, #0
 8012b30:	dd15      	ble.n	8012b5e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8012b32:	4b0c      	ldr	r3, [pc, #48]	; (8012b64 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8012b34:	681b      	ldr	r3, [r3, #0]
 8012b36:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012b3a:	b10a      	cbz	r2, 8012b40 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8012b3c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012b3e:	b900      	cbnz	r0, 8012b42 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8012b40:	6898      	ldr	r0, [r3, #8]
 8012b42:	6801      	ldr	r1, [r0, #0]
 8012b44:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012b48:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8012b4c:	2701      	movs	r7, #1
 8012b4e:	9702      	str	r7, [sp, #8]
 8012b50:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8012b54:	e9cd 5600 	strd	r5, r6, [sp]
 8012b58:	688d      	ldr	r5, [r1, #8]
 8012b5a:	4621      	mov	r1, r4
 8012b5c:	47a8      	blx	r5
 8012b5e:	b008      	add	sp, #32
 8012b60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012b64:	20012f2c 	.word	0x20012f2c

08012b68 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8012b68:	4770      	bx	lr

08012b6a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 8012b6a:	b510      	push	{r4, lr}
 8012b6c:	2148      	movs	r1, #72	; 0x48
 8012b6e:	4604      	mov	r4, r0
 8012b70:	f016 fcfd 	bl	802956e <_ZdlPvj>
 8012b74:	4620      	mov	r0, r4
 8012b76:	bd10      	pop	{r4, pc}

08012b78 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8012b78:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012b7c:	b08d      	sub	sp, #52	; 0x34
 8012b7e:	4604      	mov	r4, r0
 8012b80:	460f      	mov	r7, r1
 8012b82:	f7ff fdc1 	bl	8012708 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8012b86:	4a55      	ldr	r2, [pc, #340]	; (8012cdc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8012b88:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012b8a:	8812      	ldrh	r2, [r2, #0]
 8012b8c:	429a      	cmp	r2, r3
 8012b8e:	f240 8082 	bls.w	8012c96 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012b92:	4d53      	ldr	r5, [pc, #332]	; (8012ce0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8012b94:	682a      	ldr	r2, [r5, #0]
 8012b96:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8012b9a:	4b52      	ldr	r3, [pc, #328]	; (8012ce4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 8012b9c:	681b      	ldr	r3, [r3, #0]
 8012b9e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8012ba2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8012ba6:	2200      	movs	r2, #0
 8012ba8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8012bac:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8012bb0:	2a03      	cmp	r2, #3
 8012bb2:	d811      	bhi.n	8012bd8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8012bb4:	e8df f002 	tbb	[pc, r2]
 8012bb8:	89727902 	.word	0x89727902
 8012bbc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8012bc0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012bc4:	1ad2      	subs	r2, r2, r3
 8012bc6:	2002      	movs	r0, #2
 8012bc8:	f8ad 1010 	strh.w	r1, [sp, #16]
 8012bcc:	fb92 f2f0 	sdiv	r2, r2, r0
 8012bd0:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012bd4:	f8ad 200e 	strh.w	r2, [sp, #14]
 8012bd8:	f10d 080c 	add.w	r8, sp, #12
 8012bdc:	e898 0003 	ldmia.w	r8, {r0, r1}
 8012be0:	f10d 0914 	add.w	r9, sp, #20
 8012be4:	e889 0003 	stmia.w	r9, {r0, r1}
 8012be8:	4639      	mov	r1, r7
 8012bea:	4648      	mov	r0, r9
 8012bec:	f7fd fb36 	bl	801025c <_ZN8touchgfx4RectaNERKS0_>
 8012bf0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012bf4:	2b00      	cmp	r3, #0
 8012bf6:	dd4e      	ble.n	8012c96 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012bf8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012bfc:	2b00      	cmp	r3, #0
 8012bfe:	dd4a      	ble.n	8012c96 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012c00:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8012c04:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8012c08:	1a9b      	subs	r3, r3, r2
 8012c0a:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012c0e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8012c12:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8012c16:	1a9b      	subs	r3, r3, r2
 8012c18:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012c1c:	6823      	ldr	r3, [r4, #0]
 8012c1e:	4641      	mov	r1, r8
 8012c20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012c22:	4620      	mov	r0, r4
 8012c24:	4798      	blx	r3
 8012c26:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8012c2a:	2b00      	cmp	r3, #0
 8012c2c:	d053      	beq.n	8012cd6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 8012c2e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8012c30:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8012c32:	682b      	ldr	r3, [r5, #0]
 8012c34:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8012c38:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 8012c3c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012c40:	785b      	ldrb	r3, [r3, #1]
 8012c42:	9209      	str	r2, [sp, #36]	; 0x24
 8012c44:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8012c48:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012c4c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8012c50:	2300      	movs	r3, #0
 8012c52:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8012c56:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8012c5a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8012c5e:	4b22      	ldr	r3, [pc, #136]	; (8012ce8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8012c60:	9607      	str	r6, [sp, #28]
 8012c62:	681b      	ldr	r3, [r3, #0]
 8012c64:	f88d 5020 	strb.w	r5, [sp, #32]
 8012c68:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012c6c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012c70:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012c74:	b10a      	cbz	r2, 8012c7a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8012c76:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8012c78:	b904      	cbnz	r4, 8012c7c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 8012c7a:	689c      	ldr	r4, [r3, #8]
 8012c7c:	4b1b      	ldr	r3, [pc, #108]	; (8012cec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8012c7e:	6818      	ldr	r0, [r3, #0]
 8012c80:	f7f5 fb08 	bl	8008294 <_ZNK8touchgfx5Texts7getTextEt>
 8012c84:	ab07      	add	r3, sp, #28
 8012c86:	9001      	str	r0, [sp, #4]
 8012c88:	9300      	str	r3, [sp, #0]
 8012c8a:	e898 0006 	ldmia.w	r8, {r1, r2}
 8012c8e:	464b      	mov	r3, r9
 8012c90:	4620      	mov	r0, r4
 8012c92:	f7f5 fab1 	bl	80081f8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012c96:	b00d      	add	sp, #52	; 0x34
 8012c98:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012c9c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8012ca0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012ca4:	1ad2      	subs	r2, r2, r3
 8012ca6:	3201      	adds	r2, #1
 8012ca8:	e78d      	b.n	8012bc6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 8012caa:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8012cae:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8012cb2:	1ad2      	subs	r2, r2, r3
 8012cb4:	3201      	adds	r2, #1
 8012cb6:	2002      	movs	r0, #2
 8012cb8:	f8ad 3010 	strh.w	r3, [sp, #16]
 8012cbc:	fb92 f2f0 	sdiv	r2, r2, r0
 8012cc0:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012cc4:	f8ad 200c 	strh.w	r2, [sp, #12]
 8012cc8:	e786      	b.n	8012bd8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8012cca:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8012cce:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8012cd2:	1ad2      	subs	r2, r2, r3
 8012cd4:	e7ef      	b.n	8012cb6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8012cd6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8012cd8:	e7aa      	b.n	8012c30 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 8012cda:	bf00      	nop
 8012cdc:	20012f88 	.word	0x20012f88
 8012ce0:	20012f84 	.word	0x20012f84
 8012ce4:	20012f8c 	.word	0x20012f8c
 8012ce8:	20012f2c 	.word	0x20012f2c
 8012cec:	20012f90 	.word	0x20012f90

08012cf0 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8012cf0:	b510      	push	{r4, lr}
 8012cf2:	2101      	movs	r1, #1
 8012cf4:	4c13      	ldr	r4, [pc, #76]	; (8012d44 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8012cf6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8012cfa:	2200      	movs	r2, #0
 8012cfc:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8012d00:	6004      	str	r4, [r0, #0]
 8012d02:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012d06:	4c10      	ldr	r4, [pc, #64]	; (8012d48 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8012d08:	8082      	strh	r2, [r0, #4]
 8012d0a:	80c2      	strh	r2, [r0, #6]
 8012d0c:	8102      	strh	r2, [r0, #8]
 8012d0e:	8142      	strh	r2, [r0, #10]
 8012d10:	8182      	strh	r2, [r0, #12]
 8012d12:	81c2      	strh	r2, [r0, #14]
 8012d14:	8202      	strh	r2, [r0, #16]
 8012d16:	8242      	strh	r2, [r0, #18]
 8012d18:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012d1c:	61c2      	str	r2, [r0, #28]
 8012d1e:	8402      	strh	r2, [r0, #32]
 8012d20:	8442      	strh	r2, [r0, #34]	; 0x22
 8012d22:	6282      	str	r2, [r0, #40]	; 0x28
 8012d24:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012d28:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012d2a:	8601      	strh	r1, [r0, #48]	; 0x30
 8012d2c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8012d30:	6344      	str	r4, [r0, #52]	; 0x34
 8012d32:	8701      	strh	r1, [r0, #56]	; 0x38
 8012d34:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8012d38:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 8012d3c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8012d40:	bd10      	pop	{r4, pc}
 8012d42:	bf00      	nop
 8012d44:	0802e8c4 	.word	0x0802e8c4
 8012d48:	0802bd38 	.word	0x0802bd38

08012d4c <_ZN8touchgfx7OutlineD1Ev>:
 8012d4c:	4770      	bx	lr

08012d4e <_ZN8touchgfx7OutlineD0Ev>:
 8012d4e:	b510      	push	{r4, lr}
 8012d50:	2130      	movs	r1, #48	; 0x30
 8012d52:	4604      	mov	r4, r0
 8012d54:	f016 fc0b 	bl	802956e <_ZdlPvj>
 8012d58:	4620      	mov	r0, r4
 8012d5a:	bd10      	pop	{r4, pc}

08012d5c <_ZN8touchgfx7Outline5resetEv>:
 8012d5c:	b510      	push	{r4, lr}
 8012d5e:	4604      	mov	r4, r0
 8012d60:	f000 fe96 	bl	8013a90 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8012d64:	60e0      	str	r0, [r4, #12]
 8012d66:	f000 fe99 	bl	8013a9c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8012d6a:	68e3      	ldr	r3, [r4, #12]
 8012d6c:	6123      	str	r3, [r4, #16]
 8012d6e:	08c0      	lsrs	r0, r0, #3
 8012d70:	2200      	movs	r2, #0
 8012d72:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8012d76:	3801      	subs	r0, #1
 8012d78:	6060      	str	r0, [r4, #4]
 8012d7a:	60a2      	str	r2, [r4, #8]
 8012d7c:	8019      	strh	r1, [r3, #0]
 8012d7e:	8059      	strh	r1, [r3, #2]
 8012d80:	809a      	strh	r2, [r3, #4]
 8012d82:	80da      	strh	r2, [r3, #6]
 8012d84:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8012d86:	f023 0301 	bic.w	r3, r3, #1
 8012d8a:	f043 0302 	orr.w	r3, r3, #2
 8012d8e:	6263      	str	r3, [r4, #36]	; 0x24
 8012d90:	bd10      	pop	{r4, pc}
	...

08012d94 <_ZN8touchgfx7OutlineC1Ev>:
 8012d94:	b510      	push	{r4, lr}
 8012d96:	4b0a      	ldr	r3, [pc, #40]	; (8012dc0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8012d98:	6003      	str	r3, [r0, #0]
 8012d9a:	2300      	movs	r3, #0
 8012d9c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8012da0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8012da4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8012da8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8012dac:	6243      	str	r3, [r0, #36]	; 0x24
 8012dae:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8012db2:	4604      	mov	r4, r0
 8012db4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8012db8:	f7ff ffd0 	bl	8012d5c <_ZN8touchgfx7Outline5resetEv>
 8012dbc:	4620      	mov	r0, r4
 8012dbe:	bd10      	pop	{r4, pc}
 8012dc0:	0802e938 	.word	0x0802e938

08012dc4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8012dc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012dc8:	b093      	sub	sp, #76	; 0x4c
 8012dca:	1156      	asrs	r6, r2, #5
 8012dcc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8012dce:	9305      	str	r3, [sp, #20]
 8012dd0:	f004 051f 	and.w	r5, r4, #31
 8012dd4:	1153      	asrs	r3, r2, #5
 8012dd6:	9504      	str	r5, [sp, #16]
 8012dd8:	1165      	asrs	r5, r4, #5
 8012dda:	9303      	str	r3, [sp, #12]
 8012ddc:	42ae      	cmp	r6, r5
 8012dde:	ea4f 1364 	mov.w	r3, r4, asr #5
 8012de2:	9306      	str	r3, [sp, #24]
 8012de4:	f002 031f 	and.w	r3, r2, #31
 8012de8:	f040 80f8 	bne.w	8012fdc <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8012dec:	9c04      	ldr	r4, [sp, #16]
 8012dee:	9a05      	ldr	r2, [sp, #20]
 8012df0:	42a3      	cmp	r3, r4
 8012df2:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8012df6:	6902      	ldr	r2, [r0, #16]
 8012df8:	d125      	bne.n	8012e46 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8012dfa:	f9b2 3000 	ldrsh.w	r3, [r2]
 8012dfe:	459e      	cmp	lr, r3
 8012e00:	d103      	bne.n	8012e0a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8012e02:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012e06:	429e      	cmp	r6, r3
 8012e08:	d035      	beq.n	8012e76 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012e0a:	88d1      	ldrh	r1, [r2, #6]
 8012e0c:	8893      	ldrh	r3, [r2, #4]
 8012e0e:	430b      	orrs	r3, r1
 8012e10:	d010      	beq.n	8012e34 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012e12:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012e16:	2b00      	cmp	r3, #0
 8012e18:	db0c      	blt.n	8012e34 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012e1a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8012e1c:	428b      	cmp	r3, r1
 8012e1e:	da09      	bge.n	8012e34 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012e20:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012e24:	428b      	cmp	r3, r1
 8012e26:	bf38      	it	cc
 8012e28:	3208      	addcc	r2, #8
 8012e2a:	f103 0301 	add.w	r3, r3, #1
 8012e2e:	bf38      	it	cc
 8012e30:	6102      	strcc	r2, [r0, #16]
 8012e32:	6083      	str	r3, [r0, #8]
 8012e34:	6903      	ldr	r3, [r0, #16]
 8012e36:	9a03      	ldr	r2, [sp, #12]
 8012e38:	f8a3 e000 	strh.w	lr, [r3]
 8012e3c:	805a      	strh	r2, [r3, #2]
 8012e3e:	2200      	movs	r2, #0
 8012e40:	809a      	strh	r2, [r3, #4]
 8012e42:	80da      	strh	r2, [r3, #6]
 8012e44:	e017      	b.n	8012e76 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012e46:	9c05      	ldr	r4, [sp, #20]
 8012e48:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8012e4c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8012e50:	f004 041f 	and.w	r4, r4, #31
 8012e54:	114e      	asrs	r6, r1, #5
 8012e56:	9402      	str	r4, [sp, #8]
 8012e58:	9c04      	ldr	r4, [sp, #16]
 8012e5a:	4576      	cmp	r6, lr
 8012e5c:	f001 0c1f 	and.w	ip, r1, #31
 8012e60:	eba4 0403 	sub.w	r4, r4, r3
 8012e64:	d10a      	bne.n	8012e7c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8012e66:	9b02      	ldr	r3, [sp, #8]
 8012e68:	449c      	add	ip, r3
 8012e6a:	44a0      	add	r8, r4
 8012e6c:	fb04 a40c 	mla	r4, r4, ip, sl
 8012e70:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012e74:	80d4      	strh	r4, [r2, #6]
 8012e76:	b013      	add	sp, #76	; 0x4c
 8012e78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012e7c:	9d05      	ldr	r5, [sp, #20]
 8012e7e:	1a69      	subs	r1, r5, r1
 8012e80:	bf5b      	ittet	pl
 8012e82:	f1cc 0520 	rsbpl	r5, ip, #32
 8012e86:	436c      	mulpl	r4, r5
 8012e88:	2500      	movmi	r5, #0
 8012e8a:	2520      	movpl	r5, #32
 8012e8c:	bf44      	itt	mi
 8012e8e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8012e92:	4249      	negmi	r1, r1
 8012e94:	9501      	str	r5, [sp, #4]
 8012e96:	9f01      	ldr	r7, [sp, #4]
 8012e98:	fb94 f5f1 	sdiv	r5, r4, r1
 8012e9c:	fb01 4415 	mls	r4, r1, r5, r4
 8012ea0:	bf54      	ite	pl
 8012ea2:	f04f 0901 	movpl.w	r9, #1
 8012ea6:	f04f 39ff 	movmi.w	r9, #4294967295
 8012eaa:	2c00      	cmp	r4, #0
 8012eac:	bfb8      	it	lt
 8012eae:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8012eb2:	44bc      	add	ip, r7
 8012eb4:	44a8      	add	r8, r5
 8012eb6:	fb05 ac0c 	mla	ip, r5, ip, sl
 8012eba:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012ebe:	f8a2 c006 	strh.w	ip, [r2, #6]
 8012ec2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012ec6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8012eca:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8012ece:	bfb8      	it	lt
 8012ed0:	1864      	addlt	r4, r4, r1
 8012ed2:	ea58 0202 	orrs.w	r2, r8, r2
 8012ed6:	444e      	add	r6, r9
 8012ed8:	d011      	beq.n	8012efe <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012eda:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8012ede:	f1b8 0f00 	cmp.w	r8, #0
 8012ee2:	db0c      	blt.n	8012efe <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012ee4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8012ee6:	4590      	cmp	r8, r2
 8012ee8:	da09      	bge.n	8012efe <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012eea:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8012eee:	4590      	cmp	r8, r2
 8012ef0:	bf3c      	itt	cc
 8012ef2:	f10c 0208 	addcc.w	r2, ip, #8
 8012ef6:	6102      	strcc	r2, [r0, #16]
 8012ef8:	f108 0201 	add.w	r2, r8, #1
 8012efc:	6082      	str	r2, [r0, #8]
 8012efe:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012f02:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012f06:	f8ac 6000 	strh.w	r6, [ip]
 8012f0a:	2700      	movs	r7, #0
 8012f0c:	45b6      	cmp	lr, r6
 8012f0e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8012f12:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012f16:	f8ac 7006 	strh.w	r7, [ip, #6]
 8012f1a:	442b      	add	r3, r5
 8012f1c:	d04d      	beq.n	8012fba <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8012f1e:	9f04      	ldr	r7, [sp, #16]
 8012f20:	1aff      	subs	r7, r7, r3
 8012f22:	443d      	add	r5, r7
 8012f24:	016d      	lsls	r5, r5, #5
 8012f26:	fb95 f8f1 	sdiv	r8, r5, r1
 8012f2a:	fb01 5518 	mls	r5, r1, r8, r5
 8012f2e:	2d00      	cmp	r5, #0
 8012f30:	bfb8      	it	lt
 8012f32:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012f36:	f108 0701 	add.w	r7, r8, #1
 8012f3a:	bfb8      	it	lt
 8012f3c:	186d      	addlt	r5, r5, r1
 8012f3e:	1a64      	subs	r4, r4, r1
 8012f40:	9703      	str	r7, [sp, #12]
 8012f42:	f04f 0a00 	mov.w	sl, #0
 8012f46:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012f4a:	1964      	adds	r4, r4, r5
 8012f4c:	bf58      	it	pl
 8012f4e:	9f03      	ldrpl	r7, [sp, #12]
 8012f50:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8012f54:	bf48      	it	mi
 8012f56:	4647      	movmi	r7, r8
 8012f58:	44bb      	add	fp, r7
 8012f5a:	f8ac b004 	strh.w	fp, [ip, #4]
 8012f5e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012f62:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012f66:	f8ac b006 	strh.w	fp, [ip, #6]
 8012f6a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012f6e:	443b      	add	r3, r7
 8012f70:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012f74:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012f78:	bf58      	it	pl
 8012f7a:	1a64      	subpl	r4, r4, r1
 8012f7c:	ea5b 0707 	orrs.w	r7, fp, r7
 8012f80:	444e      	add	r6, r9
 8012f82:	d011      	beq.n	8012fa8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012f84:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8012f88:	f1bb 0f00 	cmp.w	fp, #0
 8012f8c:	db0c      	blt.n	8012fa8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012f8e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012f90:	45bb      	cmp	fp, r7
 8012f92:	da09      	bge.n	8012fa8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012f94:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012f98:	45bb      	cmp	fp, r7
 8012f9a:	bf3c      	itt	cc
 8012f9c:	f10c 0708 	addcc.w	r7, ip, #8
 8012fa0:	6107      	strcc	r7, [r0, #16]
 8012fa2:	f10b 0701 	add.w	r7, fp, #1
 8012fa6:	6087      	str	r7, [r0, #8]
 8012fa8:	6907      	ldr	r7, [r0, #16]
 8012faa:	45b6      	cmp	lr, r6
 8012fac:	803e      	strh	r6, [r7, #0]
 8012fae:	807a      	strh	r2, [r7, #2]
 8012fb0:	f8a7 a004 	strh.w	sl, [r7, #4]
 8012fb4:	f8a7 a006 	strh.w	sl, [r7, #6]
 8012fb8:	d1c5      	bne.n	8012f46 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 8012fba:	9a04      	ldr	r2, [sp, #16]
 8012fbc:	1ad3      	subs	r3, r2, r3
 8012fbe:	6902      	ldr	r2, [r0, #16]
 8012fc0:	8891      	ldrh	r1, [r2, #4]
 8012fc2:	88d6      	ldrh	r6, [r2, #6]
 8012fc4:	4419      	add	r1, r3
 8012fc6:	8091      	strh	r1, [r2, #4]
 8012fc8:	9902      	ldr	r1, [sp, #8]
 8012fca:	f101 0c20 	add.w	ip, r1, #32
 8012fce:	9901      	ldr	r1, [sp, #4]
 8012fd0:	ebac 0c01 	sub.w	ip, ip, r1
 8012fd4:	fb03 630c 	mla	r3, r3, ip, r6
 8012fd8:	80d3      	strh	r3, [r2, #6]
 8012fda:	e74c      	b.n	8012e76 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012fdc:	9d05      	ldr	r5, [sp, #20]
 8012fde:	1aa2      	subs	r2, r4, r2
 8012fe0:	eba5 0501 	sub.w	r5, r5, r1
 8012fe4:	9508      	str	r5, [sp, #32]
 8012fe6:	9202      	str	r2, [sp, #8]
 8012fe8:	f140 8128 	bpl.w	801323c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8012fec:	9a03      	ldr	r2, [sp, #12]
 8012fee:	2a00      	cmp	r2, #0
 8012ff0:	f6ff af41 	blt.w	8012e76 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012ff4:	9a02      	ldr	r2, [sp, #8]
 8012ff6:	4252      	negs	r2, r2
 8012ff8:	9202      	str	r2, [sp, #8]
 8012ffa:	9a06      	ldr	r2, [sp, #24]
 8012ffc:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8013000:	f04f 34ff 	mov.w	r4, #4294967295
 8013004:	9206      	str	r2, [sp, #24]
 8013006:	462a      	mov	r2, r5
 8013008:	940b      	str	r4, [sp, #44]	; 0x2c
 801300a:	435a      	muls	r2, r3
 801300c:	2400      	movs	r4, #0
 801300e:	9d02      	ldr	r5, [sp, #8]
 8013010:	9401      	str	r4, [sp, #4]
 8013012:	9c02      	ldr	r4, [sp, #8]
 8013014:	fb92 f4f4 	sdiv	r4, r2, r4
 8013018:	fb05 2214 	mls	r2, r5, r4, r2
 801301c:	2a00      	cmp	r2, #0
 801301e:	9207      	str	r2, [sp, #28]
 8013020:	bfbc      	itt	lt
 8013022:	1952      	addlt	r2, r2, r5
 8013024:	9207      	strlt	r2, [sp, #28]
 8013026:	9a01      	ldr	r2, [sp, #4]
 8013028:	6905      	ldr	r5, [r0, #16]
 801302a:	bfb8      	it	lt
 801302c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013030:	eb04 0901 	add.w	r9, r4, r1
 8013034:	429a      	cmp	r2, r3
 8013036:	ea4f 1669 	mov.w	r6, r9, asr #5
 801303a:	f040 8112 	bne.w	8013262 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801303e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8013042:	429e      	cmp	r6, r3
 8013044:	d104      	bne.n	8013050 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8013046:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801304a:	9a03      	ldr	r2, [sp, #12]
 801304c:	429a      	cmp	r2, r3
 801304e:	d01b      	beq.n	8013088 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013050:	88ea      	ldrh	r2, [r5, #6]
 8013052:	88ab      	ldrh	r3, [r5, #4]
 8013054:	4313      	orrs	r3, r2
 8013056:	d010      	beq.n	801307a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013058:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801305c:	2a00      	cmp	r2, #0
 801305e:	db0c      	blt.n	801307a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013060:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013062:	429a      	cmp	r2, r3
 8013064:	da09      	bge.n	801307a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013066:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801306a:	429a      	cmp	r2, r3
 801306c:	bf38      	it	cc
 801306e:	3508      	addcc	r5, #8
 8013070:	f102 0201 	add.w	r2, r2, #1
 8013074:	bf38      	it	cc
 8013076:	6105      	strcc	r5, [r0, #16]
 8013078:	6082      	str	r2, [r0, #8]
 801307a:	6903      	ldr	r3, [r0, #16]
 801307c:	9a03      	ldr	r2, [sp, #12]
 801307e:	805a      	strh	r2, [r3, #2]
 8013080:	2200      	movs	r2, #0
 8013082:	801e      	strh	r6, [r3, #0]
 8013084:	809a      	strh	r2, [r3, #4]
 8013086:	80da      	strh	r2, [r3, #6]
 8013088:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801308a:	9a03      	ldr	r2, [sp, #12]
 801308c:	6901      	ldr	r1, [r0, #16]
 801308e:	441a      	add	r2, r3
 8013090:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013094:	42b3      	cmp	r3, r6
 8013096:	d103      	bne.n	80130a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8013098:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801309c:	429a      	cmp	r2, r3
 801309e:	d01a      	beq.n	80130d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80130a0:	88cc      	ldrh	r4, [r1, #6]
 80130a2:	888b      	ldrh	r3, [r1, #4]
 80130a4:	4323      	orrs	r3, r4
 80130a6:	d010      	beq.n	80130ca <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80130a8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80130ac:	2c00      	cmp	r4, #0
 80130ae:	db0c      	blt.n	80130ca <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80130b0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80130b2:	429c      	cmp	r4, r3
 80130b4:	da09      	bge.n	80130ca <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80130b6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80130ba:	429c      	cmp	r4, r3
 80130bc:	bf38      	it	cc
 80130be:	3108      	addcc	r1, #8
 80130c0:	f104 0401 	add.w	r4, r4, #1
 80130c4:	bf38      	it	cc
 80130c6:	6101      	strcc	r1, [r0, #16]
 80130c8:	6084      	str	r4, [r0, #8]
 80130ca:	6903      	ldr	r3, [r0, #16]
 80130cc:	2100      	movs	r1, #0
 80130ce:	801e      	strh	r6, [r3, #0]
 80130d0:	805a      	strh	r2, [r3, #2]
 80130d2:	8099      	strh	r1, [r3, #4]
 80130d4:	80d9      	strh	r1, [r3, #6]
 80130d6:	9b06      	ldr	r3, [sp, #24]
 80130d8:	4293      	cmp	r3, r2
 80130da:	f000 8082 	beq.w	80131e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 80130de:	9b08      	ldr	r3, [sp, #32]
 80130e0:	9c02      	ldr	r4, [sp, #8]
 80130e2:	9902      	ldr	r1, [sp, #8]
 80130e4:	015b      	lsls	r3, r3, #5
 80130e6:	fb93 f1f1 	sdiv	r1, r3, r1
 80130ea:	fb04 3311 	mls	r3, r4, r1, r3
 80130ee:	2b00      	cmp	r3, #0
 80130f0:	9103      	str	r1, [sp, #12]
 80130f2:	9308      	str	r3, [sp, #32]
 80130f4:	da04      	bge.n	8013100 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 80130f6:	1e4b      	subs	r3, r1, #1
 80130f8:	9303      	str	r3, [sp, #12]
 80130fa:	9b08      	ldr	r3, [sp, #32]
 80130fc:	4423      	add	r3, r4
 80130fe:	9308      	str	r3, [sp, #32]
 8013100:	9b07      	ldr	r3, [sp, #28]
 8013102:	9902      	ldr	r1, [sp, #8]
 8013104:	1a5b      	subs	r3, r3, r1
 8013106:	9307      	str	r3, [sp, #28]
 8013108:	9b01      	ldr	r3, [sp, #4]
 801310a:	f1c3 0320 	rsb	r3, r3, #32
 801310e:	930e      	str	r3, [sp, #56]	; 0x38
 8013110:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013112:	9b01      	ldr	r3, [sp, #4]
 8013114:	1a5b      	subs	r3, r3, r1
 8013116:	464f      	mov	r7, r9
 8013118:	930a      	str	r3, [sp, #40]	; 0x28
 801311a:	2600      	movs	r6, #0
 801311c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8013120:	185b      	adds	r3, r3, r1
 8013122:	bf58      	it	pl
 8013124:	9902      	ldrpl	r1, [sp, #8]
 8013126:	9307      	str	r3, [sp, #28]
 8013128:	bf5d      	ittte	pl
 801312a:	1a5b      	subpl	r3, r3, r1
 801312c:	9307      	strpl	r3, [sp, #28]
 801312e:	9b03      	ldrpl	r3, [sp, #12]
 8013130:	9903      	ldrmi	r1, [sp, #12]
 8013132:	bf58      	it	pl
 8013134:	1c59      	addpl	r1, r3, #1
 8013136:	4489      	add	r9, r1
 8013138:	2a00      	cmp	r2, #0
 801313a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801313e:	db2e      	blt.n	801319e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013140:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013142:	4293      	cmp	r3, r2
 8013144:	dd2b      	ble.n	801319e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013146:	9c01      	ldr	r4, [sp, #4]
 8013148:	6905      	ldr	r5, [r0, #16]
 801314a:	46a0      	mov	r8, r4
 801314c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801314e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8013152:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8013156:	45a0      	cmp	r8, r4
 8013158:	f040 814f 	bne.w	80133fa <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801315c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8013160:	4551      	cmp	r1, sl
 8013162:	d103      	bne.n	801316c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8013164:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013168:	4291      	cmp	r1, r2
 801316a:	d018      	beq.n	801319e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801316c:	ea5c 010e 	orrs.w	r1, ip, lr
 8013170:	d00f      	beq.n	8013192 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013172:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013176:	2900      	cmp	r1, #0
 8013178:	db0b      	blt.n	8013192 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801317a:	428b      	cmp	r3, r1
 801317c:	dd09      	ble.n	8013192 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801317e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8013182:	4299      	cmp	r1, r3
 8013184:	bf38      	it	cc
 8013186:	3508      	addcc	r5, #8
 8013188:	f101 0101 	add.w	r1, r1, #1
 801318c:	bf38      	it	cc
 801318e:	6105      	strcc	r5, [r0, #16]
 8013190:	6081      	str	r1, [r0, #8]
 8013192:	6903      	ldr	r3, [r0, #16]
 8013194:	f8a3 a000 	strh.w	sl, [r3]
 8013198:	805a      	strh	r2, [r3, #2]
 801319a:	809e      	strh	r6, [r3, #4]
 801319c:	80de      	strh	r6, [r3, #6]
 801319e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80131a0:	6901      	ldr	r1, [r0, #16]
 80131a2:	441a      	add	r2, r3
 80131a4:	88cc      	ldrh	r4, [r1, #6]
 80131a6:	888b      	ldrh	r3, [r1, #4]
 80131a8:	4323      	orrs	r3, r4
 80131aa:	d010      	beq.n	80131ce <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80131ac:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80131b0:	2c00      	cmp	r4, #0
 80131b2:	db0c      	blt.n	80131ce <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80131b4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80131b6:	429c      	cmp	r4, r3
 80131b8:	da09      	bge.n	80131ce <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80131ba:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80131be:	429c      	cmp	r4, r3
 80131c0:	bf38      	it	cc
 80131c2:	3108      	addcc	r1, #8
 80131c4:	f104 0401 	add.w	r4, r4, #1
 80131c8:	bf38      	it	cc
 80131ca:	6101      	strcc	r1, [r0, #16]
 80131cc:	6084      	str	r4, [r0, #8]
 80131ce:	6903      	ldr	r3, [r0, #16]
 80131d0:	f8a3 a000 	strh.w	sl, [r3]
 80131d4:	805a      	strh	r2, [r3, #2]
 80131d6:	809e      	strh	r6, [r3, #4]
 80131d8:	80de      	strh	r6, [r3, #6]
 80131da:	9b06      	ldr	r3, [sp, #24]
 80131dc:	4293      	cmp	r3, r2
 80131de:	464f      	mov	r7, r9
 80131e0:	d19c      	bne.n	801311c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 80131e2:	9b01      	ldr	r3, [sp, #4]
 80131e4:	6907      	ldr	r7, [r0, #16]
 80131e6:	f1c3 0620 	rsb	r6, r3, #32
 80131ea:	9b05      	ldr	r3, [sp, #20]
 80131ec:	ea4f 1e63 	mov.w	lr, r3, asr #5
 80131f0:	9b04      	ldr	r3, [sp, #16]
 80131f2:	429e      	cmp	r6, r3
 80131f4:	f040 81cc 	bne.w	8013590 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 80131f8:	f9b7 3000 	ldrsh.w	r3, [r7]
 80131fc:	459e      	cmp	lr, r3
 80131fe:	d104      	bne.n	801320a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8013200:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013204:	429a      	cmp	r2, r3
 8013206:	f43f ae36 	beq.w	8012e76 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801320a:	88f9      	ldrh	r1, [r7, #6]
 801320c:	88bb      	ldrh	r3, [r7, #4]
 801320e:	430b      	orrs	r3, r1
 8013210:	d010      	beq.n	8013234 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013212:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013216:	2b00      	cmp	r3, #0
 8013218:	db0c      	blt.n	8013234 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801321a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801321c:	428b      	cmp	r3, r1
 801321e:	da09      	bge.n	8013234 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013220:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013224:	428b      	cmp	r3, r1
 8013226:	bf38      	it	cc
 8013228:	3708      	addcc	r7, #8
 801322a:	f103 0301 	add.w	r3, r3, #1
 801322e:	bf38      	it	cc
 8013230:	6107      	strcc	r7, [r0, #16]
 8013232:	6083      	str	r3, [r0, #8]
 8013234:	6903      	ldr	r3, [r0, #16]
 8013236:	f8a3 e000 	strh.w	lr, [r3]
 801323a:	e5ff      	b.n	8012e3c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801323c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801323e:	9c03      	ldr	r4, [sp, #12]
 8013240:	42a2      	cmp	r2, r4
 8013242:	f6ff ae18 	blt.w	8012e76 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013246:	9c06      	ldr	r4, [sp, #24]
 8013248:	42a2      	cmp	r2, r4
 801324a:	bfb8      	it	lt
 801324c:	3201      	addlt	r2, #1
 801324e:	9c08      	ldr	r4, [sp, #32]
 8013250:	bfb8      	it	lt
 8013252:	9206      	strlt	r2, [sp, #24]
 8013254:	f1c3 0220 	rsb	r2, r3, #32
 8013258:	4362      	muls	r2, r4
 801325a:	2401      	movs	r4, #1
 801325c:	940b      	str	r4, [sp, #44]	; 0x2c
 801325e:	2420      	movs	r4, #32
 8013260:	e6d5      	b.n	801300e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8013262:	f009 021f 	and.w	r2, r9, #31
 8013266:	ea4f 1861 	mov.w	r8, r1, asr #5
 801326a:	920c      	str	r2, [sp, #48]	; 0x30
 801326c:	9a01      	ldr	r2, [sp, #4]
 801326e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8013272:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8013276:	45b0      	cmp	r8, r6
 8013278:	f001 011f 	and.w	r1, r1, #31
 801327c:	eba2 0203 	sub.w	r2, r2, r3
 8013280:	d108      	bne.n	8013294 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8013282:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013284:	4419      	add	r1, r3
 8013286:	4496      	add	lr, r2
 8013288:	fb02 a101 	mla	r1, r2, r1, sl
 801328c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013290:	80e9      	strh	r1, [r5, #6]
 8013292:	e6f9      	b.n	8013088 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013294:	2c00      	cmp	r4, #0
 8013296:	f2c0 80a9 	blt.w	80133ec <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 801329a:	2701      	movs	r7, #1
 801329c:	f1c1 0c20 	rsb	ip, r1, #32
 80132a0:	970a      	str	r7, [sp, #40]	; 0x28
 80132a2:	fb02 f20c 	mul.w	r2, r2, ip
 80132a6:	2720      	movs	r7, #32
 80132a8:	9709      	str	r7, [sp, #36]	; 0x24
 80132aa:	fb92 fcf4 	sdiv	ip, r2, r4
 80132ae:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80132b0:	fb04 221c 	mls	r2, r4, ip, r2
 80132b4:	2a00      	cmp	r2, #0
 80132b6:	bfb8      	it	lt
 80132b8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80132bc:	4439      	add	r1, r7
 80132be:	fb0c a101 	mla	r1, ip, r1, sl
 80132c2:	80e9      	strh	r1, [r5, #6]
 80132c4:	44e6      	add	lr, ip
 80132c6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80132c8:	f8a5 e004 	strh.w	lr, [r5, #4]
 80132cc:	eb08 0501 	add.w	r5, r8, r1
 80132d0:	6901      	ldr	r1, [r0, #16]
 80132d2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 80132d6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 80132da:	bfb8      	it	lt
 80132dc:	1912      	addlt	r2, r2, r4
 80132de:	ea58 070e 	orrs.w	r7, r8, lr
 80132e2:	d010      	beq.n	8013306 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80132e4:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 80132e8:	f1be 0f00 	cmp.w	lr, #0
 80132ec:	db0b      	blt.n	8013306 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80132ee:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80132f0:	45be      	cmp	lr, r7
 80132f2:	da08      	bge.n	8013306 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80132f4:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80132f8:	45be      	cmp	lr, r7
 80132fa:	bf3c      	itt	cc
 80132fc:	3108      	addcc	r1, #8
 80132fe:	6101      	strcc	r1, [r0, #16]
 8013300:	f10e 0101 	add.w	r1, lr, #1
 8013304:	6081      	str	r1, [r0, #8]
 8013306:	6901      	ldr	r1, [r0, #16]
 8013308:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801330c:	800d      	strh	r5, [r1, #0]
 801330e:	f04f 0e00 	mov.w	lr, #0
 8013312:	42ae      	cmp	r6, r5
 8013314:	f8a1 8002 	strh.w	r8, [r1, #2]
 8013318:	f8a1 e004 	strh.w	lr, [r1, #4]
 801331c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8013320:	4463      	add	r3, ip
 8013322:	d054      	beq.n	80133ce <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8013324:	9901      	ldr	r1, [sp, #4]
 8013326:	1ac9      	subs	r1, r1, r3
 8013328:	4461      	add	r1, ip
 801332a:	0149      	lsls	r1, r1, #5
 801332c:	fb91 fef4 	sdiv	lr, r1, r4
 8013330:	fb04 111e 	mls	r1, r4, lr, r1
 8013334:	2900      	cmp	r1, #0
 8013336:	bfb8      	it	lt
 8013338:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801333c:	f10e 0701 	add.w	r7, lr, #1
 8013340:	bfb8      	it	lt
 8013342:	1909      	addlt	r1, r1, r4
 8013344:	1b12      	subs	r2, r2, r4
 8013346:	970d      	str	r7, [sp, #52]	; 0x34
 8013348:	f8d0 a010 	ldr.w	sl, [r0, #16]
 801334c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801334e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8013352:	1852      	adds	r2, r2, r1
 8013354:	bf54      	ite	pl
 8013356:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 801335a:	46f4      	movmi	ip, lr
 801335c:	44e3      	add	fp, ip
 801335e:	f8aa b004 	strh.w	fp, [sl, #4]
 8013362:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8013366:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 801336a:	f8aa b006 	strh.w	fp, [sl, #6]
 801336e:	4463      	add	r3, ip
 8013370:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013374:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013378:	f8bc a004 	ldrh.w	sl, [ip, #4]
 801337c:	bf58      	it	pl
 801337e:	1b12      	subpl	r2, r2, r4
 8013380:	443d      	add	r5, r7
 8013382:	ea5b 070a 	orrs.w	r7, fp, sl
 8013386:	d014      	beq.n	80133b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013388:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 801338c:	f1ba 0f00 	cmp.w	sl, #0
 8013390:	db0f      	blt.n	80133b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013392:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013394:	45ba      	cmp	sl, r7
 8013396:	da0c      	bge.n	80133b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013398:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 801339c:	45ba      	cmp	sl, r7
 801339e:	bf38      	it	cc
 80133a0:	f10c 0c08 	addcc.w	ip, ip, #8
 80133a4:	f10a 0a01 	add.w	sl, sl, #1
 80133a8:	bf38      	it	cc
 80133aa:	f8c0 c010 	strcc.w	ip, [r0, #16]
 80133ae:	f8c0 a008 	str.w	sl, [r0, #8]
 80133b2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80133b6:	f04f 0700 	mov.w	r7, #0
 80133ba:	42ae      	cmp	r6, r5
 80133bc:	f8ac 5000 	strh.w	r5, [ip]
 80133c0:	f8ac 8002 	strh.w	r8, [ip, #2]
 80133c4:	f8ac 7004 	strh.w	r7, [ip, #4]
 80133c8:	f8ac 7006 	strh.w	r7, [ip, #6]
 80133cc:	d1bc      	bne.n	8013348 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 80133ce:	6904      	ldr	r4, [r0, #16]
 80133d0:	9a01      	ldr	r2, [sp, #4]
 80133d2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80133d4:	1ad3      	subs	r3, r2, r3
 80133d6:	88a2      	ldrh	r2, [r4, #4]
 80133d8:	441a      	add	r2, r3
 80133da:	80a2      	strh	r2, [r4, #4]
 80133dc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80133de:	3120      	adds	r1, #32
 80133e0:	1a89      	subs	r1, r1, r2
 80133e2:	88e2      	ldrh	r2, [r4, #6]
 80133e4:	fb03 2301 	mla	r3, r3, r1, r2
 80133e8:	80e3      	strh	r3, [r4, #6]
 80133ea:	e64d      	b.n	8013088 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80133ec:	f04f 37ff 	mov.w	r7, #4294967295
 80133f0:	970a      	str	r7, [sp, #40]	; 0x28
 80133f2:	434a      	muls	r2, r1
 80133f4:	4264      	negs	r4, r4
 80133f6:	2700      	movs	r7, #0
 80133f8:	e756      	b.n	80132a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 80133fa:	ea4f 1867 	mov.w	r8, r7, asr #5
 80133fe:	f009 031f 	and.w	r3, r9, #31
 8013402:	45d0      	cmp	r8, sl
 8013404:	f007 071f 	and.w	r7, r7, #31
 8013408:	930f      	str	r3, [sp, #60]	; 0x3c
 801340a:	fa1f fc8c 	uxth.w	ip, ip
 801340e:	fa1f fe8e 	uxth.w	lr, lr
 8013412:	d10a      	bne.n	801342a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8013414:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013416:	449c      	add	ip, r3
 8013418:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801341a:	f8a5 c004 	strh.w	ip, [r5, #4]
 801341e:	441f      	add	r7, r3
 8013420:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013422:	fb03 e707 	mla	r7, r3, r7, lr
 8013426:	80ef      	strh	r7, [r5, #6]
 8013428:	e6b9      	b.n	801319e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801342a:	2900      	cmp	r1, #0
 801342c:	f2c0 80a8 	blt.w	8013580 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8013430:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013432:	f1c7 0320 	rsb	r3, r7, #32
 8013436:	4363      	muls	r3, r4
 8013438:	2401      	movs	r4, #1
 801343a:	940d      	str	r4, [sp, #52]	; 0x34
 801343c:	2420      	movs	r4, #32
 801343e:	940c      	str	r4, [sp, #48]	; 0x30
 8013440:	fb93 f4f1 	sdiv	r4, r3, r1
 8013444:	fb01 3b14 	mls	fp, r1, r4, r3
 8013448:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801344a:	f1bb 0f00 	cmp.w	fp, #0
 801344e:	bfb8      	it	lt
 8013450:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013454:	441f      	add	r7, r3
 8013456:	fb04 e707 	mla	r7, r4, r7, lr
 801345a:	44a4      	add	ip, r4
 801345c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013460:	80ef      	strh	r7, [r5, #6]
 8013462:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013466:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013468:	f8bc e006 	ldrh.w	lr, [ip, #6]
 801346c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013470:	bfb8      	it	lt
 8013472:	448b      	addlt	fp, r1
 8013474:	eb08 0503 	add.w	r5, r8, r3
 8013478:	ea5e 0307 	orrs.w	r3, lr, r7
 801347c:	d011      	beq.n	80134a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801347e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8013482:	f1be 0f00 	cmp.w	lr, #0
 8013486:	db0c      	blt.n	80134a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013488:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801348a:	45be      	cmp	lr, r7
 801348c:	da09      	bge.n	80134a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801348e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013492:	45be      	cmp	lr, r7
 8013494:	bf3c      	itt	cc
 8013496:	f10c 0708 	addcc.w	r7, ip, #8
 801349a:	6107      	strcc	r7, [r0, #16]
 801349c:	f10e 0701 	add.w	r7, lr, #1
 80134a0:	6087      	str	r7, [r0, #8]
 80134a2:	6907      	ldr	r7, [r0, #16]
 80134a4:	b213      	sxth	r3, r2
 80134a6:	9310      	str	r3, [sp, #64]	; 0x40
 80134a8:	807b      	strh	r3, [r7, #2]
 80134aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80134ac:	803d      	strh	r5, [r7, #0]
 80134ae:	4555      	cmp	r5, sl
 80134b0:	80be      	strh	r6, [r7, #4]
 80134b2:	80fe      	strh	r6, [r7, #6]
 80134b4:	eb04 0c03 	add.w	ip, r4, r3
 80134b8:	d051      	beq.n	801355e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 80134ba:	9b01      	ldr	r3, [sp, #4]
 80134bc:	eba3 070c 	sub.w	r7, r3, ip
 80134c0:	443c      	add	r4, r7
 80134c2:	0164      	lsls	r4, r4, #5
 80134c4:	fb94 f8f1 	sdiv	r8, r4, r1
 80134c8:	fb01 4418 	mls	r4, r1, r8, r4
 80134cc:	2c00      	cmp	r4, #0
 80134ce:	bfb8      	it	lt
 80134d0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80134d4:	ebab 0301 	sub.w	r3, fp, r1
 80134d8:	f108 0701 	add.w	r7, r8, #1
 80134dc:	bfb8      	it	lt
 80134de:	1864      	addlt	r4, r4, r1
 80134e0:	9309      	str	r3, [sp, #36]	; 0x24
 80134e2:	9711      	str	r7, [sp, #68]	; 0x44
 80134e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80134e6:	f8d0 e010 	ldr.w	lr, [r0, #16]
 80134ea:	191b      	adds	r3, r3, r4
 80134ec:	bf58      	it	pl
 80134ee:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 80134f0:	f8be b004 	ldrh.w	fp, [lr, #4]
 80134f4:	9309      	str	r3, [sp, #36]	; 0x24
 80134f6:	bf48      	it	mi
 80134f8:	4647      	movmi	r7, r8
 80134fa:	44bb      	add	fp, r7
 80134fc:	f8ae b004 	strh.w	fp, [lr, #4]
 8013500:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013504:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013508:	f8ae b006 	strh.w	fp, [lr, #6]
 801350c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013510:	44bc      	add	ip, r7
 8013512:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8013514:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013518:	443d      	add	r5, r7
 801351a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 801351e:	bf5c      	itt	pl
 8013520:	1a5b      	subpl	r3, r3, r1
 8013522:	9309      	strpl	r3, [sp, #36]	; 0x24
 8013524:	ea5b 0307 	orrs.w	r3, fp, r7
 8013528:	d011      	beq.n	801354e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801352a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 801352e:	f1bb 0f00 	cmp.w	fp, #0
 8013532:	db0c      	blt.n	801354e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013534:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013536:	45bb      	cmp	fp, r7
 8013538:	da09      	bge.n	801354e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801353a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801353e:	45bb      	cmp	fp, r7
 8013540:	bf3c      	itt	cc
 8013542:	f10e 0708 	addcc.w	r7, lr, #8
 8013546:	6107      	strcc	r7, [r0, #16]
 8013548:	f10b 0701 	add.w	r7, fp, #1
 801354c:	6087      	str	r7, [r0, #8]
 801354e:	6907      	ldr	r7, [r0, #16]
 8013550:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013552:	803d      	strh	r5, [r7, #0]
 8013554:	4555      	cmp	r5, sl
 8013556:	807b      	strh	r3, [r7, #2]
 8013558:	80be      	strh	r6, [r7, #4]
 801355a:	80fe      	strh	r6, [r7, #6]
 801355c:	d1c2      	bne.n	80134e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 801355e:	9b01      	ldr	r3, [sp, #4]
 8013560:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013562:	eba3 0c0c 	sub.w	ip, r3, ip
 8013566:	6903      	ldr	r3, [r0, #16]
 8013568:	8899      	ldrh	r1, [r3, #4]
 801356a:	4461      	add	r1, ip
 801356c:	8099      	strh	r1, [r3, #4]
 801356e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013570:	3720      	adds	r7, #32
 8013572:	1a7f      	subs	r7, r7, r1
 8013574:	88d9      	ldrh	r1, [r3, #6]
 8013576:	fb0c 1c07 	mla	ip, ip, r7, r1
 801357a:	f8a3 c006 	strh.w	ip, [r3, #6]
 801357e:	e60e      	b.n	801319e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013580:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013582:	f04f 34ff 	mov.w	r4, #4294967295
 8013586:	940d      	str	r4, [sp, #52]	; 0x34
 8013588:	437b      	muls	r3, r7
 801358a:	4249      	negs	r1, r1
 801358c:	2400      	movs	r4, #0
 801358e:	e756      	b.n	801343e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8013590:	9905      	ldr	r1, [sp, #20]
 8013592:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8013596:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 801359a:	f001 011f 	and.w	r1, r1, #31
 801359e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 80135a2:	9102      	str	r1, [sp, #8]
 80135a4:	9904      	ldr	r1, [sp, #16]
 80135a6:	45f3      	cmp	fp, lr
 80135a8:	f009 0c1f 	and.w	ip, r9, #31
 80135ac:	eba1 0406 	sub.w	r4, r1, r6
 80135b0:	d108      	bne.n	80135c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 80135b2:	9b02      	ldr	r3, [sp, #8]
 80135b4:	449c      	add	ip, r3
 80135b6:	44a0      	add	r8, r4
 80135b8:	fb04 a40c 	mla	r4, r4, ip, sl
 80135bc:	f8a7 8004 	strh.w	r8, [r7, #4]
 80135c0:	80fc      	strh	r4, [r7, #6]
 80135c2:	e458      	b.n	8012e76 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80135c4:	9905      	ldr	r1, [sp, #20]
 80135c6:	ebb1 0109 	subs.w	r1, r1, r9
 80135ca:	bf5b      	ittet	pl
 80135cc:	f1cc 0520 	rsbpl	r5, ip, #32
 80135d0:	436c      	mulpl	r4, r5
 80135d2:	2500      	movmi	r5, #0
 80135d4:	2520      	movpl	r5, #32
 80135d6:	bf44      	itt	mi
 80135d8:	fb04 f40c 	mulmi.w	r4, r4, ip
 80135dc:	4249      	negmi	r1, r1
 80135de:	9501      	str	r5, [sp, #4]
 80135e0:	9b01      	ldr	r3, [sp, #4]
 80135e2:	fb94 f5f1 	sdiv	r5, r4, r1
 80135e6:	fb01 4415 	mls	r4, r1, r5, r4
 80135ea:	bf54      	ite	pl
 80135ec:	f04f 0901 	movpl.w	r9, #1
 80135f0:	f04f 39ff 	movmi.w	r9, #4294967295
 80135f4:	2c00      	cmp	r4, #0
 80135f6:	bfb8      	it	lt
 80135f8:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80135fc:	449c      	add	ip, r3
 80135fe:	44a8      	add	r8, r5
 8013600:	fb05 ac0c 	mla	ip, r5, ip, sl
 8013604:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013608:	f8a7 c006 	strh.w	ip, [r7, #6]
 801360c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013610:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8013614:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013618:	bfb8      	it	lt
 801361a:	1864      	addlt	r4, r4, r1
 801361c:	ea58 0707 	orrs.w	r7, r8, r7
 8013620:	eb0b 0309 	add.w	r3, fp, r9
 8013624:	d011      	beq.n	801364a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013626:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801362a:	f1b8 0f00 	cmp.w	r8, #0
 801362e:	db0c      	blt.n	801364a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013630:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013632:	45b8      	cmp	r8, r7
 8013634:	da09      	bge.n	801364a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013636:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 801363a:	45b8      	cmp	r8, r7
 801363c:	bf3c      	itt	cc
 801363e:	f10c 0708 	addcc.w	r7, ip, #8
 8013642:	6107      	strcc	r7, [r0, #16]
 8013644:	f108 0701 	add.w	r7, r8, #1
 8013648:	6087      	str	r7, [r0, #8]
 801364a:	6907      	ldr	r7, [r0, #16]
 801364c:	f04f 0c00 	mov.w	ip, #0
 8013650:	b212      	sxth	r2, r2
 8013652:	459e      	cmp	lr, r3
 8013654:	803b      	strh	r3, [r7, #0]
 8013656:	807a      	strh	r2, [r7, #2]
 8013658:	f8a7 c004 	strh.w	ip, [r7, #4]
 801365c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013660:	442e      	add	r6, r5
 8013662:	d04d      	beq.n	8013700 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8013664:	9f04      	ldr	r7, [sp, #16]
 8013666:	1bbf      	subs	r7, r7, r6
 8013668:	443d      	add	r5, r7
 801366a:	016d      	lsls	r5, r5, #5
 801366c:	fb95 f8f1 	sdiv	r8, r5, r1
 8013670:	fb01 5518 	mls	r5, r1, r8, r5
 8013674:	4565      	cmp	r5, ip
 8013676:	bfb8      	it	lt
 8013678:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801367c:	f108 0701 	add.w	r7, r8, #1
 8013680:	bfb8      	it	lt
 8013682:	186d      	addlt	r5, r5, r1
 8013684:	1a64      	subs	r4, r4, r1
 8013686:	9703      	str	r7, [sp, #12]
 8013688:	f04f 0a00 	mov.w	sl, #0
 801368c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013690:	1964      	adds	r4, r4, r5
 8013692:	bf58      	it	pl
 8013694:	9f03      	ldrpl	r7, [sp, #12]
 8013696:	f8bc b004 	ldrh.w	fp, [ip, #4]
 801369a:	bf48      	it	mi
 801369c:	4647      	movmi	r7, r8
 801369e:	44bb      	add	fp, r7
 80136a0:	f8ac b004 	strh.w	fp, [ip, #4]
 80136a4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80136a8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80136ac:	f8ac b006 	strh.w	fp, [ip, #6]
 80136b0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80136b4:	443e      	add	r6, r7
 80136b6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80136ba:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80136be:	bf58      	it	pl
 80136c0:	1a64      	subpl	r4, r4, r1
 80136c2:	ea5b 0707 	orrs.w	r7, fp, r7
 80136c6:	444b      	add	r3, r9
 80136c8:	d011      	beq.n	80136ee <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80136ca:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80136ce:	f1bb 0f00 	cmp.w	fp, #0
 80136d2:	db0c      	blt.n	80136ee <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80136d4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80136d6:	45bb      	cmp	fp, r7
 80136d8:	da09      	bge.n	80136ee <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80136da:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80136de:	45bb      	cmp	fp, r7
 80136e0:	bf3c      	itt	cc
 80136e2:	f10c 0708 	addcc.w	r7, ip, #8
 80136e6:	6107      	strcc	r7, [r0, #16]
 80136e8:	f10b 0701 	add.w	r7, fp, #1
 80136ec:	6087      	str	r7, [r0, #8]
 80136ee:	6907      	ldr	r7, [r0, #16]
 80136f0:	459e      	cmp	lr, r3
 80136f2:	803b      	strh	r3, [r7, #0]
 80136f4:	807a      	strh	r2, [r7, #2]
 80136f6:	f8a7 a004 	strh.w	sl, [r7, #4]
 80136fa:	f8a7 a006 	strh.w	sl, [r7, #6]
 80136fe:	d1c5      	bne.n	801368c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8013700:	9b04      	ldr	r3, [sp, #16]
 8013702:	1b9e      	subs	r6, r3, r6
 8013704:	6903      	ldr	r3, [r0, #16]
 8013706:	889a      	ldrh	r2, [r3, #4]
 8013708:	4432      	add	r2, r6
 801370a:	809a      	strh	r2, [r3, #4]
 801370c:	9a02      	ldr	r2, [sp, #8]
 801370e:	f102 0c20 	add.w	ip, r2, #32
 8013712:	9a01      	ldr	r2, [sp, #4]
 8013714:	ebac 0c02 	sub.w	ip, ip, r2
 8013718:	88da      	ldrh	r2, [r3, #6]
 801371a:	fb06 260c 	mla	r6, r6, ip, r2
 801371e:	80de      	strh	r6, [r3, #6]
 8013720:	f7ff bba9 	b.w	8012e76 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08013724 <_ZN8touchgfx7Outline6lineToEii>:
 8013724:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013726:	079b      	lsls	r3, r3, #30
 8013728:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801372a:	460e      	mov	r6, r1
 801372c:	4615      	mov	r5, r2
 801372e:	d511      	bpl.n	8013754 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013730:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8013734:	ea86 0701 	eor.w	r7, r6, r1
 8013738:	ea85 0302 	eor.w	r3, r5, r2
 801373c:	433b      	orrs	r3, r7
 801373e:	d009      	beq.n	8013754 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013740:	4633      	mov	r3, r6
 8013742:	9500      	str	r5, [sp, #0]
 8013744:	f7ff fb3e 	bl	8012dc4 <_ZN8touchgfx7Outline10renderLineEiiii>
 8013748:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801374a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 801374e:	f043 0301 	orr.w	r3, r3, #1
 8013752:	6243      	str	r3, [r0, #36]	; 0x24
 8013754:	b003      	add	sp, #12
 8013756:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013758 <_ZN8touchgfx7Outline6moveToEii>:
 8013758:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801375a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801375c:	4615      	mov	r5, r2
 801375e:	079a      	lsls	r2, r3, #30
 8013760:	4604      	mov	r4, r0
 8013762:	460e      	mov	r6, r1
 8013764:	d401      	bmi.n	801376a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8013766:	f7ff faf9 	bl	8012d5c <_ZN8touchgfx7Outline5resetEv>
 801376a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801376c:	07db      	lsls	r3, r3, #31
 801376e:	d504      	bpl.n	801377a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8013770:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8013774:	4620      	mov	r0, r4
 8013776:	f7ff ffd5 	bl	8013724 <_ZN8touchgfx7Outline6lineToEii>
 801377a:	6923      	ldr	r3, [r4, #16]
 801377c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013780:	1170      	asrs	r0, r6, #5
 8013782:	4290      	cmp	r0, r2
 8013784:	ea4f 1165 	mov.w	r1, r5, asr #5
 8013788:	d103      	bne.n	8013792 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 801378a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801378e:	4291      	cmp	r1, r2
 8013790:	d01a      	beq.n	80137c8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8013792:	88df      	ldrh	r7, [r3, #6]
 8013794:	889a      	ldrh	r2, [r3, #4]
 8013796:	433a      	orrs	r2, r7
 8013798:	d010      	beq.n	80137bc <_ZN8touchgfx7Outline6moveToEii+0x64>
 801379a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801379e:	2a00      	cmp	r2, #0
 80137a0:	db0c      	blt.n	80137bc <_ZN8touchgfx7Outline6moveToEii+0x64>
 80137a2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80137a4:	42ba      	cmp	r2, r7
 80137a6:	da09      	bge.n	80137bc <_ZN8touchgfx7Outline6moveToEii+0x64>
 80137a8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 80137ac:	42ba      	cmp	r2, r7
 80137ae:	bf38      	it	cc
 80137b0:	3308      	addcc	r3, #8
 80137b2:	f102 0201 	add.w	r2, r2, #1
 80137b6:	bf38      	it	cc
 80137b8:	6123      	strcc	r3, [r4, #16]
 80137ba:	60a2      	str	r2, [r4, #8]
 80137bc:	6923      	ldr	r3, [r4, #16]
 80137be:	2200      	movs	r2, #0
 80137c0:	8018      	strh	r0, [r3, #0]
 80137c2:	8059      	strh	r1, [r3, #2]
 80137c4:	809a      	strh	r2, [r3, #4]
 80137c6:	80da      	strh	r2, [r3, #6]
 80137c8:	6166      	str	r6, [r4, #20]
 80137ca:	e9c4 5606 	strd	r5, r6, [r4, #24]
 80137ce:	6225      	str	r5, [r4, #32]
 80137d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080137d2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 80137d2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80137d6:	b0d0      	sub	sp, #320	; 0x140
 80137d8:	466c      	mov	r4, sp
 80137da:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80137de:	4627      	mov	r7, r4
 80137e0:	1a0d      	subs	r5, r1, r0
 80137e2:	2d48      	cmp	r5, #72	; 0x48
 80137e4:	f100 0308 	add.w	r3, r0, #8
 80137e8:	f340 80d5 	ble.w	8013996 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80137ec:	112d      	asrs	r5, r5, #4
 80137ee:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 80137f2:	f9b0 9000 	ldrsh.w	r9, [r0]
 80137f6:	6816      	ldr	r6, [r2, #0]
 80137f8:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 80137fc:	6006      	str	r6, [r0, #0]
 80137fe:	6856      	ldr	r6, [r2, #4]
 8013800:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8013804:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013808:	6046      	str	r6, [r0, #4]
 801380a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801380e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8013812:	f8a2 e004 	strh.w	lr, [r2, #4]
 8013816:	f8a2 c006 	strh.w	ip, [r2, #6]
 801381a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 801381e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8013822:	4565      	cmp	r5, ip
 8013824:	f1a1 0208 	sub.w	r2, r1, #8
 8013828:	db06      	blt.n	8013838 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801382a:	d119      	bne.n	8013860 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801382c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8013830:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8013834:	42ae      	cmp	r6, r5
 8013836:	dd13      	ble.n	8013860 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8013838:	460e      	mov	r6, r1
 801383a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801383e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8013842:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8013846:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801384a:	601d      	str	r5, [r3, #0]
 801384c:	6875      	ldr	r5, [r6, #4]
 801384e:	605d      	str	r5, [r3, #4]
 8013850:	f821 9c08 	strh.w	r9, [r1, #-8]
 8013854:	f821 cc06 	strh.w	ip, [r1, #-6]
 8013858:	f821 8c04 	strh.w	r8, [r1, #-4]
 801385c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8013860:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8013864:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8013868:	42ae      	cmp	r6, r5
 801386a:	db06      	blt.n	801387a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 801386c:	d116      	bne.n	801389c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801386e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8013872:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8013876:	45ac      	cmp	ip, r5
 8013878:	da10      	bge.n	801389c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801387a:	681d      	ldr	r5, [r3, #0]
 801387c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8013880:	6005      	str	r5, [r0, #0]
 8013882:	685d      	ldr	r5, [r3, #4]
 8013884:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013888:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801388c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8013890:	6045      	str	r5, [r0, #4]
 8013892:	8146      	strh	r6, [r0, #10]
 8013894:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8013898:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801389c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80138a0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80138a4:	4565      	cmp	r5, ip
 80138a6:	db06      	blt.n	80138b6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80138a8:	d119      	bne.n	80138de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80138aa:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80138ae:	f9b0 5000 	ldrsh.w	r5, [r0]
 80138b2:	42ae      	cmp	r6, r5
 80138b4:	da13      	bge.n	80138de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80138b6:	460e      	mov	r6, r1
 80138b8:	f9b0 9000 	ldrsh.w	r9, [r0]
 80138bc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80138c0:	6005      	str	r5, [r0, #0]
 80138c2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 80138c6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 80138ca:	6875      	ldr	r5, [r6, #4]
 80138cc:	6045      	str	r5, [r0, #4]
 80138ce:	f821 9c08 	strh.w	r9, [r1, #-8]
 80138d2:	f821 cc06 	strh.w	ip, [r1, #-6]
 80138d6:	f821 8c04 	strh.w	r8, [r1, #-4]
 80138da:	f821 ec02 	strh.w	lr, [r1, #-2]
 80138de:	3308      	adds	r3, #8
 80138e0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80138e4:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80138e8:	45e6      	cmp	lr, ip
 80138ea:	dbf8      	blt.n	80138de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80138ec:	d105      	bne.n	80138fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80138ee:	f9b3 6000 	ldrsh.w	r6, [r3]
 80138f2:	f9b0 5000 	ldrsh.w	r5, [r0]
 80138f6:	42ae      	cmp	r6, r5
 80138f8:	dbf1      	blt.n	80138de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80138fa:	4615      	mov	r5, r2
 80138fc:	3a08      	subs	r2, #8
 80138fe:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8013902:	45b4      	cmp	ip, r6
 8013904:	dbf9      	blt.n	80138fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8013906:	d105      	bne.n	8013914 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8013908:	f9b0 8000 	ldrsh.w	r8, [r0]
 801390c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8013910:	45b0      	cmp	r8, r6
 8013912:	dbf2      	blt.n	80138fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8013914:	4293      	cmp	r3, r2
 8013916:	f1a5 0608 	sub.w	r6, r5, #8
 801391a:	d816      	bhi.n	801394a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 801391c:	f8d6 c000 	ldr.w	ip, [r6]
 8013920:	f9b3 a000 	ldrsh.w	sl, [r3]
 8013924:	f8c3 c000 	str.w	ip, [r3]
 8013928:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801392c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8013930:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8013934:	f8c3 c004 	str.w	ip, [r3, #4]
 8013938:	f825 ac08 	strh.w	sl, [r5, #-8]
 801393c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8013940:	f825 9c04 	strh.w	r9, [r5, #-4]
 8013944:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013948:	e7c9      	b.n	80138de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801394a:	f8d6 e000 	ldr.w	lr, [r6]
 801394e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8013952:	f8c0 e000 	str.w	lr, [r0]
 8013956:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801395a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801395e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8013962:	f8c0 e004 	str.w	lr, [r0, #4]
 8013966:	f825 ac08 	strh.w	sl, [r5, #-8]
 801396a:	f825 cc06 	strh.w	ip, [r5, #-6]
 801396e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8013972:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013976:	1acd      	subs	r5, r1, r3
 8013978:	1a16      	subs	r6, r2, r0
 801397a:	10ed      	asrs	r5, r5, #3
 801397c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8013980:	bfb5      	itete	lt
 8013982:	e9c4 0200 	strdlt	r0, r2, [r4]
 8013986:	e9c4 3100 	strdge	r3, r1, [r4]
 801398a:	460a      	movlt	r2, r1
 801398c:	4603      	movge	r3, r0
 801398e:	3408      	adds	r4, #8
 8013990:	4618      	mov	r0, r3
 8013992:	4611      	mov	r1, r2
 8013994:	e724      	b.n	80137e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8013996:	4299      	cmp	r1, r3
 8013998:	d928      	bls.n	80139ec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801399a:	f1a3 0210 	sub.w	r2, r3, #16
 801399e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80139a2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80139a6:	45ac      	cmp	ip, r5
 80139a8:	db06      	blt.n	80139b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80139aa:	d11d      	bne.n	80139e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80139ac:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80139b0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80139b4:	42ae      	cmp	r6, r5
 80139b6:	da17      	bge.n	80139e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80139b8:	4615      	mov	r5, r2
 80139ba:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80139be:	f855 6f08 	ldr.w	r6, [r5, #8]!
 80139c2:	6116      	str	r6, [r2, #16]
 80139c4:	686e      	ldr	r6, [r5, #4]
 80139c6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 80139ca:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 80139ce:	f8a2 9008 	strh.w	r9, [r2, #8]
 80139d2:	42a8      	cmp	r0, r5
 80139d4:	6156      	str	r6, [r2, #20]
 80139d6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 80139da:	f8a2 800c 	strh.w	r8, [r2, #12]
 80139de:	f8a2 e00e 	strh.w	lr, [r2, #14]
 80139e2:	f1a2 0208 	sub.w	r2, r2, #8
 80139e6:	d1da      	bne.n	801399e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 80139e8:	3308      	adds	r3, #8
 80139ea:	e7d4      	b.n	8013996 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80139ec:	42bc      	cmp	r4, r7
 80139ee:	d903      	bls.n	80139f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 80139f0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 80139f4:	3c08      	subs	r4, #8
 80139f6:	e6f3      	b.n	80137e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80139f8:	b050      	add	sp, #320	; 0x140
 80139fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080139fe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 80139fe:	b510      	push	{r4, lr}
 8013a00:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013a02:	07da      	lsls	r2, r3, #31
 8013a04:	4604      	mov	r4, r0
 8013a06:	d507      	bpl.n	8013a18 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8013a08:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8013a0c:	f7ff fe8a 	bl	8013724 <_ZN8touchgfx7Outline6lineToEii>
 8013a10:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013a12:	f023 0301 	bic.w	r3, r3, #1
 8013a16:	6243      	str	r3, [r0, #36]	; 0x24
 8013a18:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013a1a:	079b      	lsls	r3, r3, #30
 8013a1c:	d521      	bpl.n	8013a62 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8013a1e:	6923      	ldr	r3, [r4, #16]
 8013a20:	88d9      	ldrh	r1, [r3, #6]
 8013a22:	889a      	ldrh	r2, [r3, #4]
 8013a24:	430a      	orrs	r2, r1
 8013a26:	d010      	beq.n	8013a4a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013a28:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8013a2c:	2a00      	cmp	r2, #0
 8013a2e:	db0c      	blt.n	8013a4a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013a30:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8013a32:	428a      	cmp	r2, r1
 8013a34:	da09      	bge.n	8013a4a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013a36:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8013a3a:	4291      	cmp	r1, r2
 8013a3c:	bf88      	it	hi
 8013a3e:	3308      	addhi	r3, #8
 8013a40:	f102 0201 	add.w	r2, r2, #1
 8013a44:	bf88      	it	hi
 8013a46:	6123      	strhi	r3, [r4, #16]
 8013a48:	60a2      	str	r2, [r4, #8]
 8013a4a:	68a1      	ldr	r1, [r4, #8]
 8013a4c:	b129      	cbz	r1, 8013a5a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8013a4e:	6863      	ldr	r3, [r4, #4]
 8013a50:	4299      	cmp	r1, r3
 8013a52:	d802      	bhi.n	8013a5a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8013a54:	68e0      	ldr	r0, [r4, #12]
 8013a56:	f7ff febc 	bl	80137d2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8013a5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013a5c:	f023 0302 	bic.w	r3, r3, #2
 8013a60:	6263      	str	r3, [r4, #36]	; 0x24
 8013a62:	68e0      	ldr	r0, [r4, #12]
 8013a64:	bd10      	pop	{r4, pc}
	...

08013a68 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8013a68:	4b02      	ldr	r3, [pc, #8]	; (8013a74 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8013a6a:	6018      	str	r0, [r3, #0]
 8013a6c:	4b02      	ldr	r3, [pc, #8]	; (8013a78 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8013a6e:	6019      	str	r1, [r3, #0]
 8013a70:	4770      	bx	lr
 8013a72:	bf00      	nop
 8013a74:	20012f34 	.word	0x20012f34
 8013a78:	20012f38 	.word	0x20012f38

08013a7c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8013a7c:	4a02      	ldr	r2, [pc, #8]	; (8013a88 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8013a7e:	2300      	movs	r3, #0
 8013a80:	6013      	str	r3, [r2, #0]
 8013a82:	4a02      	ldr	r2, [pc, #8]	; (8013a8c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8013a84:	6013      	str	r3, [r2, #0]
 8013a86:	4770      	bx	lr
 8013a88:	20012f34 	.word	0x20012f34
 8013a8c:	20012f38 	.word	0x20012f38

08013a90 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8013a90:	4b01      	ldr	r3, [pc, #4]	; (8013a98 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8013a92:	6818      	ldr	r0, [r3, #0]
 8013a94:	4770      	bx	lr
 8013a96:	bf00      	nop
 8013a98:	20012f34 	.word	0x20012f34

08013a9c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8013a9c:	4b01      	ldr	r3, [pc, #4]	; (8013aa4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8013a9e:	6818      	ldr	r0, [r3, #0]
 8013aa0:	4770      	bx	lr
 8013aa2:	bf00      	nop
 8013aa4:	20012f38 	.word	0x20012f38

08013aa8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8013aa8:	b510      	push	{r4, lr}
 8013aaa:	6803      	ldr	r3, [r0, #0]
 8013aac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013aae:	460c      	mov	r4, r1
 8013ab0:	4798      	blx	r3
 8013ab2:	1b03      	subs	r3, r0, r4
 8013ab4:	4258      	negs	r0, r3
 8013ab6:	4158      	adcs	r0, r3
 8013ab8:	bd10      	pop	{r4, pc}
	...

08013abc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8013abc:	4b01      	ldr	r3, [pc, #4]	; (8013ac4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8013abe:	6019      	str	r1, [r3, #0]
 8013ac0:	4770      	bx	lr
 8013ac2:	bf00      	nop
 8013ac4:	20012f3c 	.word	0x20012f3c

08013ac8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013ac8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013acc:	4696      	mov	lr, r2
 8013ace:	4605      	mov	r5, r0
 8013ad0:	4614      	mov	r4, r2
 8013ad2:	460e      	mov	r6, r1
 8013ad4:	461f      	mov	r7, r3
 8013ad6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013ada:	b097      	sub	sp, #92	; 0x5c
 8013adc:	f10d 0c1c 	add.w	ip, sp, #28
 8013ae0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013ae4:	f8de 3000 	ldr.w	r3, [lr]
 8013ae8:	f8cc 3000 	str.w	r3, [ip]
 8013aec:	f104 0e14 	add.w	lr, r4, #20
 8013af0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013af4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013af8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013afc:	f8de 3000 	ldr.w	r3, [lr]
 8013b00:	f8cc 3000 	str.w	r3, [ip]
 8013b04:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013b08:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013b0c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013b10:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013b14:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8013b18:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8013b1c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8013b20:	f8de 3000 	ldr.w	r3, [lr]
 8013b24:	f8cc 3000 	str.w	r3, [ip]
 8013b28:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013b2a:	682b      	ldr	r3, [r5, #0]
 8013b2c:	9201      	str	r2, [sp, #4]
 8013b2e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8013b32:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013b34:	9200      	str	r2, [sp, #0]
 8013b36:	f8cd 8008 	str.w	r8, [sp, #8]
 8013b3a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8013b3e:	aa07      	add	r2, sp, #28
 8013b40:	463b      	mov	r3, r7
 8013b42:	4631      	mov	r1, r6
 8013b44:	4628      	mov	r0, r5
 8013b46:	47d8      	blx	fp
 8013b48:	46a6      	mov	lr, r4
 8013b4a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013b4e:	f10d 0c1c 	add.w	ip, sp, #28
 8013b52:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013b56:	f8de 3000 	ldr.w	r3, [lr]
 8013b5a:	f8cc 3000 	str.w	r3, [ip]
 8013b5e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013b62:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013b66:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013b6a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013b6e:	343c      	adds	r4, #60	; 0x3c
 8013b70:	f8de 3000 	ldr.w	r3, [lr]
 8013b74:	f8cc 3000 	str.w	r3, [ip]
 8013b78:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013b7a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013b7e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013b82:	6823      	ldr	r3, [r4, #0]
 8013b84:	f8cc 3000 	str.w	r3, [ip]
 8013b88:	682b      	ldr	r3, [r5, #0]
 8013b8a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8013b8e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013b90:	9201      	str	r2, [sp, #4]
 8013b92:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013b94:	9200      	str	r2, [sp, #0]
 8013b96:	f8cd 8008 	str.w	r8, [sp, #8]
 8013b9a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8013b9c:	aa07      	add	r2, sp, #28
 8013b9e:	463b      	mov	r3, r7
 8013ba0:	4631      	mov	r1, r6
 8013ba2:	4628      	mov	r0, r5
 8013ba4:	47a0      	blx	r4
 8013ba6:	b017      	add	sp, #92	; 0x5c
 8013ba8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013bac <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8013bac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013bb0:	b08d      	sub	sp, #52	; 0x34
 8013bb2:	4688      	mov	r8, r1
 8013bb4:	9916      	ldr	r1, [sp, #88]	; 0x58
 8013bb6:	f8d3 c000 	ldr.w	ip, [r3]
 8013bba:	680f      	ldr	r7, [r1, #0]
 8013bbc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8013bc0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8013bc4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8013bc8:	edd3 6a07 	vldr	s13, [r3, #28]
 8013bcc:	9918      	ldr	r1, [sp, #96]	; 0x60
 8013bce:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8013bd2:	f9b1 9000 	ldrsh.w	r9, [r1]
 8013bd6:	f9ba 1000 	ldrsh.w	r1, [sl]
 8013bda:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8013bde:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8013be2:	eba7 070c 	sub.w	r7, r7, ip
 8013be6:	42bc      	cmp	r4, r7
 8013be8:	bfa8      	it	ge
 8013bea:	463c      	movge	r4, r7
 8013bec:	ee07 4a90 	vmov	s15, r4
 8013bf0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8013bf4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8013bf8:	ee25 4a04 	vmul.f32	s8, s10, s8
 8013bfc:	ee65 4a24 	vmul.f32	s9, s10, s9
 8013c00:	ee25 5a27 	vmul.f32	s10, s10, s15
 8013c04:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8013c08:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8013c0c:	eb09 0e0c 	add.w	lr, r9, ip
 8013c10:	4571      	cmp	r1, lr
 8013c12:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8013c16:	ee32 1a05 	vadd.f32	s2, s4, s10
 8013c1a:	ee36 0a84 	vadd.f32	s0, s13, s8
 8013c1e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013c22:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013c26:	f340 808d 	ble.w	8013d44 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8013c2a:	eba1 060e 	sub.w	r6, r1, lr
 8013c2e:	fb96 f5f4 	sdiv	r5, r6, r4
 8013c32:	ee07 5a10 	vmov	s14, r5
 8013c36:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013c3a:	2d00      	cmp	r5, #0
 8013c3c:	fb04 6615 	mls	r6, r4, r5, r6
 8013c40:	eea7 0a04 	vfma.f32	s0, s14, s8
 8013c44:	eee7 0a24 	vfma.f32	s1, s14, s9
 8013c48:	eea7 1a05 	vfma.f32	s2, s14, s10
 8013c4c:	dd13      	ble.n	8013c76 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8013c4e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8013c52:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8013c56:	eef5 6a40 	vcmp.f32	s13, #0.0
 8013c5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013c5e:	bf18      	it	ne
 8013c60:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8013c64:	ee31 2a45 	vsub.f32	s4, s2, s10
 8013c68:	bf08      	it	eq
 8013c6a:	eeb0 7a67 	vmoveq.f32	s14, s15
 8013c6e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013c72:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013c76:	fb05 f204 	mul.w	r2, r5, r4
 8013c7a:	1abf      	subs	r7, r7, r2
 8013c7c:	4494      	add	ip, r2
 8013c7e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8013c82:	4411      	add	r1, r2
 8013c84:	eb09 020c 	add.w	r2, r9, ip
 8013c88:	443a      	add	r2, r7
 8013c8a:	b209      	sxth	r1, r1
 8013c8c:	428a      	cmp	r2, r1
 8013c8e:	bfc4      	itt	gt
 8013c90:	eba1 0209 	subgt.w	r2, r1, r9
 8013c94:	eba2 070c 	subgt.w	r7, r2, ip
 8013c98:	2f00      	cmp	r7, #0
 8013c9a:	dd50      	ble.n	8013d3e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8013c9c:	fb97 f1f4 	sdiv	r1, r7, r4
 8013ca0:	fb04 7211 	mls	r2, r4, r1, r7
 8013ca4:	b90a      	cbnz	r2, 8013caa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8013ca6:	3901      	subs	r1, #1
 8013ca8:	4622      	mov	r2, r4
 8013caa:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8013cae:	6840      	ldr	r0, [r0, #4]
 8013cb0:	900b      	str	r0, [sp, #44]	; 0x2c
 8013cb2:	f8d0 a000 	ldr.w	sl, [r0]
 8013cb6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8013cb8:	9008      	str	r0, [sp, #32]
 8013cba:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8013cbe:	9818      	ldr	r0, [sp, #96]	; 0x60
 8013cc0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8013cc4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8013cc8:	695b      	ldr	r3, [r3, #20]
 8013cca:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013ccc:	445b      	add	r3, fp
 8013cce:	eef0 6a42 	vmov.f32	s13, s4
 8013cd2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8013cd6:	ee21 3a23 	vmul.f32	s6, s2, s7
 8013cda:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8013cde:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013ce2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013ce6:	9307      	str	r3, [sp, #28]
 8013ce8:	ee17 7a90 	vmov	r7, s15
 8013cec:	ee73 7a42 	vsub.f32	s15, s6, s4
 8013cf0:	eeb0 7a61 	vmov.f32	s14, s3
 8013cf4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013cf8:	ee16 3a90 	vmov	r3, s13
 8013cfc:	fb97 f7f4 	sdiv	r7, r7, r4
 8013d00:	ee17 ca90 	vmov	ip, s15
 8013d04:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8013d08:	fb9c fcf4 	sdiv	ip, ip, r4
 8013d0c:	fb0c 3306 	mla	r3, ip, r6, r3
 8013d10:	9302      	str	r3, [sp, #8]
 8013d12:	ee17 3a10 	vmov	r3, s14
 8013d16:	44b6      	add	lr, r6
 8013d18:	fb04 e505 	mla	r5, r4, r5, lr
 8013d1c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8013d20:	fb07 3706 	mla	r7, r7, r6, r3
 8013d24:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8013d28:	e9cd 4700 	strd	r4, r7, [sp]
 8013d2c:	2900      	cmp	r1, #0
 8013d2e:	bfcc      	ite	gt
 8013d30:	46a1      	movgt	r9, r4
 8013d32:	4691      	movle	r9, r2
 8013d34:	eba9 0306 	sub.w	r3, r9, r6
 8013d38:	f8da 4008 	ldr.w	r4, [sl, #8]
 8013d3c:	47a0      	blx	r4
 8013d3e:	b00d      	add	sp, #52	; 0x34
 8013d40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d44:	2500      	movs	r5, #0
 8013d46:	462e      	mov	r6, r5
 8013d48:	e799      	b.n	8013c7e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08013d4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013d4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d50:	b0db      	sub	sp, #364	; 0x16c
 8013d52:	461d      	mov	r5, r3
 8013d54:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8013d58:	930a      	str	r3, [sp, #40]	; 0x28
 8013d5a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8013d5e:	930b      	str	r3, [sp, #44]	; 0x2c
 8013d60:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8013d64:	9310      	str	r3, [sp, #64]	; 0x40
 8013d66:	6803      	ldr	r3, [r0, #0]
 8013d68:	910f      	str	r1, [sp, #60]	; 0x3c
 8013d6a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8013d6c:	9009      	str	r0, [sp, #36]	; 0x24
 8013d6e:	4614      	mov	r4, r2
 8013d70:	4629      	mov	r1, r5
 8013d72:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8013d76:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8013d7a:	47b8      	blx	r7
 8013d7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013d7e:	6058      	str	r0, [r3, #4]
 8013d80:	2800      	cmp	r0, #0
 8013d82:	f000 83a1 	beq.w	80144c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013d86:	682b      	ldr	r3, [r5, #0]
 8013d88:	9314      	str	r3, [sp, #80]	; 0x50
 8013d8a:	686b      	ldr	r3, [r5, #4]
 8013d8c:	9315      	str	r3, [sp, #84]	; 0x54
 8013d8e:	4bc4      	ldr	r3, [pc, #784]	; (80140a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8013d90:	ed94 7a02 	vldr	s14, [r4, #8]
 8013d94:	7819      	ldrb	r1, [r3, #0]
 8013d96:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8013d9a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8013d9e:	2900      	cmp	r1, #0
 8013da0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013da4:	bf16      	itet	ne
 8013da6:	4619      	movne	r1, r3
 8013da8:	4611      	moveq	r1, r2
 8013daa:	4613      	movne	r3, r2
 8013dac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013db0:	9116      	str	r1, [sp, #88]	; 0x58
 8013db2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8013db6:	f240 8387 	bls.w	80144c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013dba:	ed94 7a07 	vldr	s14, [r4, #28]
 8013dbe:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013dc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013dc6:	f240 837f 	bls.w	80144c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013dca:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8013dce:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013dd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013dd6:	f240 8377 	bls.w	80144c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013dda:	6822      	ldr	r2, [r4, #0]
 8013ddc:	4bb1      	ldr	r3, [pc, #708]	; (80140a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8013dde:	429a      	cmp	r2, r3
 8013de0:	f2c0 8372 	blt.w	80144c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013de4:	49b0      	ldr	r1, [pc, #704]	; (80140a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8013de6:	6963      	ldr	r3, [r4, #20]
 8013de8:	428a      	cmp	r2, r1
 8013dea:	f300 836d 	bgt.w	80144c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013dee:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013df2:	48ae      	ldr	r0, [pc, #696]	; (80140ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8013df4:	33ff      	adds	r3, #255	; 0xff
 8013df6:	4283      	cmp	r3, r0
 8013df8:	f200 8366 	bhi.w	80144c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013dfc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8013dfe:	4dac      	ldr	r5, [pc, #688]	; (80140b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8013e00:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013e04:	33ff      	adds	r3, #255	; 0xff
 8013e06:	42ab      	cmp	r3, r5
 8013e08:	f200 835e 	bhi.w	80144c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e0c:	6862      	ldr	r2, [r4, #4]
 8013e0e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8013e12:	33ff      	adds	r3, #255	; 0xff
 8013e14:	4283      	cmp	r3, r0
 8013e16:	f200 8357 	bhi.w	80144c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e1a:	69a1      	ldr	r1, [r4, #24]
 8013e1c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8013e20:	33ff      	adds	r3, #255	; 0xff
 8013e22:	4283      	cmp	r3, r0
 8013e24:	f200 8350 	bhi.w	80144c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e28:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8013e2a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8013e2e:	30ff      	adds	r0, #255	; 0xff
 8013e30:	42a8      	cmp	r0, r5
 8013e32:	f200 8349 	bhi.w	80144c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013e36:	428a      	cmp	r2, r1
 8013e38:	f280 8110 	bge.w	801405c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8013e3c:	429a      	cmp	r2, r3
 8013e3e:	f300 8119 	bgt.w	8014074 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8013e42:	4299      	cmp	r1, r3
 8013e44:	f280 811d 	bge.w	8014082 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8013e48:	2502      	movs	r5, #2
 8013e4a:	2701      	movs	r7, #1
 8013e4c:	46a9      	mov	r9, r5
 8013e4e:	46b8      	mov	r8, r7
 8013e50:	f04f 0a00 	mov.w	sl, #0
 8013e54:	4621      	mov	r1, r4
 8013e56:	a849      	add	r0, sp, #292	; 0x124
 8013e58:	f003 feec 	bl	8017c34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8013e5c:	4622      	mov	r2, r4
 8013e5e:	4653      	mov	r3, sl
 8013e60:	a949      	add	r1, sp, #292	; 0x124
 8013e62:	f8cd 9000 	str.w	r9, [sp]
 8013e66:	a819      	add	r0, sp, #100	; 0x64
 8013e68:	f004 f814 	bl	8017e94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013e6c:	4622      	mov	r2, r4
 8013e6e:	4653      	mov	r3, sl
 8013e70:	a949      	add	r1, sp, #292	; 0x124
 8013e72:	f8cd 8000 	str.w	r8, [sp]
 8013e76:	a829      	add	r0, sp, #164	; 0xa4
 8013e78:	f004 f80c 	bl	8017e94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013e7c:	4643      	mov	r3, r8
 8013e7e:	4622      	mov	r2, r4
 8013e80:	a949      	add	r1, sp, #292	; 0x124
 8013e82:	f8cd 9000 	str.w	r9, [sp]
 8013e86:	a839      	add	r0, sp, #228	; 0xe4
 8013e88:	f004 f804 	bl	8017e94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013e8c:	42af      	cmp	r7, r5
 8013e8e:	bfb5      	itete	lt
 8013e90:	2300      	movlt	r3, #0
 8013e92:	2301      	movge	r3, #1
 8013e94:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013e96:	930e      	strge	r3, [sp, #56]	; 0x38
 8013e98:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013e9a:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013e9e:	af12      	add	r7, sp, #72	; 0x48
 8013ea0:	bfb9      	ittee	lt
 8013ea2:	ad29      	addlt	r5, sp, #164	; 0xa4
 8013ea4:	ac19      	addlt	r4, sp, #100	; 0x64
 8013ea6:	ad19      	addge	r5, sp, #100	; 0x64
 8013ea8:	ac29      	addge	r4, sp, #164	; 0xa4
 8013eaa:	e887 0003 	stmia.w	r7, {r0, r1}
 8013eae:	b928      	cbnz	r0, 8013ebc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8013eb0:	4b80      	ldr	r3, [pc, #512]	; (80140b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8013eb2:	6818      	ldr	r0, [r3, #0]
 8013eb4:	6803      	ldr	r3, [r0, #0]
 8013eb6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013eb8:	4798      	blx	r3
 8013eba:	6038      	str	r0, [r7, #0]
 8013ebc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013ebe:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013ec2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013ec6:	930c      	str	r3, [sp, #48]	; 0x30
 8013ec8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013eca:	6963      	ldr	r3, [r4, #20]
 8013ecc:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8013ece:	440b      	add	r3, r1
 8013ed0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013ed4:	4408      	add	r0, r1
 8013ed6:	b200      	sxth	r0, r0
 8013ed8:	4283      	cmp	r3, r0
 8013eda:	900d      	str	r0, [sp, #52]	; 0x34
 8013edc:	f280 80dd 	bge.w	801409a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8013ee0:	428b      	cmp	r3, r1
 8013ee2:	da08      	bge.n	8013ef6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013ee4:	2a00      	cmp	r2, #0
 8013ee6:	dd06      	ble.n	8013ef6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013ee8:	1acb      	subs	r3, r1, r3
 8013eea:	429a      	cmp	r2, r3
 8013eec:	f2c0 80e4 	blt.w	80140b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8013ef0:	2b00      	cmp	r3, #0
 8013ef2:	f300 80e2 	bgt.w	80140ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8013ef6:	6967      	ldr	r7, [r4, #20]
 8013ef8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013efa:	443b      	add	r3, r7
 8013efc:	461f      	mov	r7, r3
 8013efe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013f00:	1bdf      	subs	r7, r3, r7
 8013f02:	4297      	cmp	r7, r2
 8013f04:	bfa8      	it	ge
 8013f06:	4617      	movge	r7, r2
 8013f08:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8013f0c:	2f00      	cmp	r7, #0
 8013f0e:	f340 8166 	ble.w	80141de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8013f12:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013f14:	6829      	ldr	r1, [r5, #0]
 8013f16:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013f1a:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013f1e:	6820      	ldr	r0, [r4, #0]
 8013f20:	4411      	add	r1, r2
 8013f22:	4299      	cmp	r1, r3
 8013f24:	dd1a      	ble.n	8013f5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013f26:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013f2a:	440b      	add	r3, r1
 8013f2c:	4402      	add	r2, r0
 8013f2e:	b21b      	sxth	r3, r3
 8013f30:	429a      	cmp	r2, r3
 8013f32:	dc13      	bgt.n	8013f5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013f34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f36:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013f38:	681b      	ldr	r3, [r3, #0]
 8013f3a:	9206      	str	r2, [sp, #24]
 8013f3c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013f3e:	9205      	str	r2, [sp, #20]
 8013f40:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013f42:	9500      	str	r5, [sp, #0]
 8013f44:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013f48:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013f4a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013f4c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013f50:	a912      	add	r1, sp, #72	; 0x48
 8013f52:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013f56:	aa49      	add	r2, sp, #292	; 0x124
 8013f58:	4623      	mov	r3, r4
 8013f5a:	47c8      	blx	r9
 8013f5c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013f60:	441a      	add	r2, r3
 8013f62:	6963      	ldr	r3, [r4, #20]
 8013f64:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013f68:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013f6c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013f70:	68a1      	ldr	r1, [r4, #8]
 8013f72:	ed94 6a08 	vldr	s12, [r4, #32]
 8013f76:	6022      	str	r2, [r4, #0]
 8013f78:	3301      	adds	r3, #1
 8013f7a:	6163      	str	r3, [r4, #20]
 8013f7c:	69a3      	ldr	r3, [r4, #24]
 8013f7e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013f82:	3b01      	subs	r3, #1
 8013f84:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013f88:	61a3      	str	r3, [r4, #24]
 8013f8a:	6923      	ldr	r3, [r4, #16]
 8013f8c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013f90:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013f94:	edd4 6a07 	vldr	s13, [r4, #28]
 8013f98:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013f9c:	440b      	add	r3, r1
 8013f9e:	68e1      	ldr	r1, [r4, #12]
 8013fa0:	6123      	str	r3, [r4, #16]
 8013fa2:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013fa6:	428b      	cmp	r3, r1
 8013fa8:	edc4 6a07 	vstr	s13, [r4, #28]
 8013fac:	db15      	blt.n	8013fda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8013fae:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013fb2:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013fb6:	3201      	adds	r2, #1
 8013fb8:	edc4 6a07 	vstr	s13, [r4, #28]
 8013fbc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013fc0:	6022      	str	r2, [r4, #0]
 8013fc2:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013fc6:	1a5b      	subs	r3, r3, r1
 8013fc8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013fcc:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013fd0:	6123      	str	r3, [r4, #16]
 8013fd2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013fd6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013fda:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013fde:	441a      	add	r2, r3
 8013fe0:	696b      	ldr	r3, [r5, #20]
 8013fe2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013fe6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013fea:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8013fee:	68a9      	ldr	r1, [r5, #8]
 8013ff0:	ed95 6a08 	vldr	s12, [r5, #32]
 8013ff4:	602a      	str	r2, [r5, #0]
 8013ff6:	3301      	adds	r3, #1
 8013ff8:	616b      	str	r3, [r5, #20]
 8013ffa:	69ab      	ldr	r3, [r5, #24]
 8013ffc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014000:	3b01      	subs	r3, #1
 8014002:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014006:	61ab      	str	r3, [r5, #24]
 8014008:	692b      	ldr	r3, [r5, #16]
 801400a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801400e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014012:	edd5 6a07 	vldr	s13, [r5, #28]
 8014016:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801401a:	440b      	add	r3, r1
 801401c:	68e9      	ldr	r1, [r5, #12]
 801401e:	612b      	str	r3, [r5, #16]
 8014020:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014024:	428b      	cmp	r3, r1
 8014026:	edc5 6a07 	vstr	s13, [r5, #28]
 801402a:	db15      	blt.n	8014058 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801402c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8014030:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014034:	3201      	adds	r2, #1
 8014036:	edc5 6a07 	vstr	s13, [r5, #28]
 801403a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801403e:	602a      	str	r2, [r5, #0]
 8014040:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014044:	1a5b      	subs	r3, r3, r1
 8014046:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801404a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801404e:	612b      	str	r3, [r5, #16]
 8014050:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014054:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014058:	3f01      	subs	r7, #1
 801405a:	e757      	b.n	8013f0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801405c:	4299      	cmp	r1, r3
 801405e:	dc13      	bgt.n	8014088 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8014060:	429a      	cmp	r2, r3
 8014062:	da14      	bge.n	801408e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8014064:	2502      	movs	r5, #2
 8014066:	2703      	movs	r7, #3
 8014068:	46a9      	mov	r9, r5
 801406a:	f04f 0800 	mov.w	r8, #0
 801406e:	f04f 0a01 	mov.w	sl, #1
 8014072:	e6ef      	b.n	8013e54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014074:	2501      	movs	r5, #1
 8014076:	2700      	movs	r7, #0
 8014078:	46a9      	mov	r9, r5
 801407a:	46b8      	mov	r8, r7
 801407c:	f04f 0a02 	mov.w	sl, #2
 8014080:	e6e8      	b.n	8013e54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014082:	2501      	movs	r5, #1
 8014084:	2702      	movs	r7, #2
 8014086:	e6e1      	b.n	8013e4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8014088:	2500      	movs	r5, #0
 801408a:	2701      	movs	r7, #1
 801408c:	e7f4      	b.n	8014078 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801408e:	2702      	movs	r7, #2
 8014090:	2503      	movs	r5, #3
 8014092:	f04f 0900 	mov.w	r9, #0
 8014096:	46b8      	mov	r8, r7
 8014098:	e7e9      	b.n	801406e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801409a:	4613      	mov	r3, r2
 801409c:	e728      	b.n	8013ef0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801409e:	bf00      	nop
 80140a0:	20012f24 	.word	0x20012f24
 80140a4:	fffd8f01 	.word	0xfffd8f01
 80140a8:	00027100 	.word	0x00027100
 80140ac:	0004e1ff 	.word	0x0004e1ff
 80140b0:	0004e1fe 	.word	0x0004e1fe
 80140b4:	20012f2c 	.word	0x20012f2c
 80140b8:	4613      	mov	r3, r2
 80140ba:	992b      	ldr	r1, [sp, #172]	; 0xac
 80140bc:	9111      	str	r1, [sp, #68]	; 0x44
 80140be:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80140c2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80140c6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80140c8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80140cc:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80140d0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80140d4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80140d8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80140dc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80140e0:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80140e4:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 80140e8:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 80140ec:	469e      	mov	lr, r3
 80140ee:	469c      	mov	ip, r3
 80140f0:	f04f 0900 	mov.w	r9, #0
 80140f4:	f1bc 0f00 	cmp.w	ip, #0
 80140f8:	d147      	bne.n	801418a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80140fa:	eb03 0c07 	add.w	ip, r3, r7
 80140fe:	1ad7      	subs	r7, r2, r3
 8014100:	f1b9 0f00 	cmp.w	r9, #0
 8014104:	d009      	beq.n	801411a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8014106:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801410a:	9029      	str	r0, [sp, #164]	; 0xa4
 801410c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8014110:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8014114:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8014118:	912d      	str	r1, [sp, #180]	; 0xb4
 801411a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801411c:	9111      	str	r1, [sp, #68]	; 0x44
 801411e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014122:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014126:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801412a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801412e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014132:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014136:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801413a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801413e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014142:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014146:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801414a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801414e:	f04f 0800 	mov.w	r8, #0
 8014152:	f1be 0f00 	cmp.w	lr, #0
 8014156:	d031      	beq.n	80141bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8014158:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801415a:	4431      	add	r1, r6
 801415c:	4549      	cmp	r1, r9
 801415e:	4450      	add	r0, sl
 8014160:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014164:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014168:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801416c:	db08      	blt.n	8014180 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801416e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014172:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014176:	ee37 7a06 	vadd.f32	s14, s14, s12
 801417a:	3001      	adds	r0, #1
 801417c:	eba1 0109 	sub.w	r1, r1, r9
 8014180:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014184:	f04f 0801 	mov.w	r8, #1
 8014188:	e7e3      	b.n	8014152 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801418a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801418c:	4431      	add	r1, r6
 801418e:	4541      	cmp	r1, r8
 8014190:	4450      	add	r0, sl
 8014192:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014196:	ee77 7a84 	vadd.f32	s15, s15, s8
 801419a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801419e:	db08      	blt.n	80141b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80141a0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80141a4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80141a8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80141ac:	3001      	adds	r0, #1
 80141ae:	eba1 0108 	sub.w	r1, r1, r8
 80141b2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80141b6:	f04f 0901 	mov.w	r9, #1
 80141ba:	e79b      	b.n	80140f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80141bc:	449c      	add	ip, r3
 80141be:	1aff      	subs	r7, r7, r3
 80141c0:	f1b8 0f00 	cmp.w	r8, #0
 80141c4:	d009      	beq.n	80141da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80141c6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80141ca:	9019      	str	r0, [sp, #100]	; 0x64
 80141cc:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80141d0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80141d4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80141d8:	911d      	str	r1, [sp, #116]	; 0x74
 80141da:	1ad2      	subs	r2, r2, r3
 80141dc:	e68b      	b.n	8013ef6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80141de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80141e0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 80141e2:	2b00      	cmp	r3, #0
 80141e4:	f000 80d1 	beq.w	801438a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80141e8:	ad19      	add	r5, sp, #100	; 0x64
 80141ea:	ac39      	add	r4, sp, #228	; 0xe4
 80141ec:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80141ee:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80141f2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80141f6:	930c      	str	r3, [sp, #48]	; 0x30
 80141f8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80141fa:	6963      	ldr	r3, [r4, #20]
 80141fc:	440b      	add	r3, r1
 80141fe:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014202:	4408      	add	r0, r1
 8014204:	b200      	sxth	r0, r0
 8014206:	4283      	cmp	r3, r0
 8014208:	900d      	str	r0, [sp, #52]	; 0x34
 801420a:	f280 80c1 	bge.w	8014390 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801420e:	428b      	cmp	r3, r1
 8014210:	da08      	bge.n	8014224 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014212:	2a00      	cmp	r2, #0
 8014214:	dd06      	ble.n	8014224 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014216:	1acb      	subs	r3, r1, r3
 8014218:	429a      	cmp	r2, r3
 801421a:	f2c0 80bb 	blt.w	8014394 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801421e:	2b00      	cmp	r3, #0
 8014220:	f300 80b9 	bgt.w	8014396 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8014224:	6967      	ldr	r7, [r4, #20]
 8014226:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014228:	443b      	add	r3, r7
 801422a:	461f      	mov	r7, r3
 801422c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801422e:	1bdf      	subs	r7, r3, r7
 8014230:	4297      	cmp	r7, r2
 8014232:	bfa8      	it	ge
 8014234:	4617      	movge	r7, r2
 8014236:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801423a:	2f00      	cmp	r7, #0
 801423c:	f340 813c 	ble.w	80144b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8014240:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014242:	6829      	ldr	r1, [r5, #0]
 8014244:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014248:	f9bb 3000 	ldrsh.w	r3, [fp]
 801424c:	6820      	ldr	r0, [r4, #0]
 801424e:	4411      	add	r1, r2
 8014250:	4299      	cmp	r1, r3
 8014252:	dd1a      	ble.n	801428a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014254:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8014258:	440b      	add	r3, r1
 801425a:	4402      	add	r2, r0
 801425c:	b21b      	sxth	r3, r3
 801425e:	429a      	cmp	r2, r3
 8014260:	dc13      	bgt.n	801428a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014262:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014264:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014266:	681b      	ldr	r3, [r3, #0]
 8014268:	9206      	str	r2, [sp, #24]
 801426a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801426c:	9205      	str	r2, [sp, #20]
 801426e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014270:	9500      	str	r5, [sp, #0]
 8014272:	e9cd b203 	strd	fp, r2, [sp, #12]
 8014276:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8014278:	9809      	ldr	r0, [sp, #36]	; 0x24
 801427a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801427e:	a912      	add	r1, sp, #72	; 0x48
 8014280:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8014284:	aa49      	add	r2, sp, #292	; 0x124
 8014286:	4623      	mov	r3, r4
 8014288:	47c8      	blx	r9
 801428a:	e9d4 2300 	ldrd	r2, r3, [r4]
 801428e:	441a      	add	r2, r3
 8014290:	6963      	ldr	r3, [r4, #20]
 8014292:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014296:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801429a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801429e:	68a1      	ldr	r1, [r4, #8]
 80142a0:	ed94 6a08 	vldr	s12, [r4, #32]
 80142a4:	6022      	str	r2, [r4, #0]
 80142a6:	3301      	adds	r3, #1
 80142a8:	6163      	str	r3, [r4, #20]
 80142aa:	69a3      	ldr	r3, [r4, #24]
 80142ac:	ee37 7a27 	vadd.f32	s14, s14, s15
 80142b0:	3b01      	subs	r3, #1
 80142b2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80142b6:	61a3      	str	r3, [r4, #24]
 80142b8:	6923      	ldr	r3, [r4, #16]
 80142ba:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80142be:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80142c2:	edd4 6a07 	vldr	s13, [r4, #28]
 80142c6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80142ca:	440b      	add	r3, r1
 80142cc:	68e1      	ldr	r1, [r4, #12]
 80142ce:	6123      	str	r3, [r4, #16]
 80142d0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80142d4:	428b      	cmp	r3, r1
 80142d6:	edc4 6a07 	vstr	s13, [r4, #28]
 80142da:	db15      	blt.n	8014308 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80142dc:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80142e0:	ee76 6a26 	vadd.f32	s13, s12, s13
 80142e4:	3201      	adds	r2, #1
 80142e6:	edc4 6a07 	vstr	s13, [r4, #28]
 80142ea:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80142ee:	6022      	str	r2, [r4, #0]
 80142f0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80142f4:	1a5b      	subs	r3, r3, r1
 80142f6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80142fa:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80142fe:	6123      	str	r3, [r4, #16]
 8014300:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014304:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014308:	e9d5 2300 	ldrd	r2, r3, [r5]
 801430c:	441a      	add	r2, r3
 801430e:	696b      	ldr	r3, [r5, #20]
 8014310:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014314:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8014318:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801431c:	68a9      	ldr	r1, [r5, #8]
 801431e:	ed95 6a08 	vldr	s12, [r5, #32]
 8014322:	602a      	str	r2, [r5, #0]
 8014324:	3301      	adds	r3, #1
 8014326:	616b      	str	r3, [r5, #20]
 8014328:	69ab      	ldr	r3, [r5, #24]
 801432a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801432e:	3b01      	subs	r3, #1
 8014330:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014334:	61ab      	str	r3, [r5, #24]
 8014336:	692b      	ldr	r3, [r5, #16]
 8014338:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801433c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014340:	edd5 6a07 	vldr	s13, [r5, #28]
 8014344:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014348:	440b      	add	r3, r1
 801434a:	68e9      	ldr	r1, [r5, #12]
 801434c:	612b      	str	r3, [r5, #16]
 801434e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014352:	428b      	cmp	r3, r1
 8014354:	edc5 6a07 	vstr	s13, [r5, #28]
 8014358:	db15      	blt.n	8014386 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801435a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801435e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014362:	3201      	adds	r2, #1
 8014364:	edc5 6a07 	vstr	s13, [r5, #28]
 8014368:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801436c:	602a      	str	r2, [r5, #0]
 801436e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014372:	1a5b      	subs	r3, r3, r1
 8014374:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014378:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801437c:	612b      	str	r3, [r5, #16]
 801437e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014382:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014386:	3f01      	subs	r7, #1
 8014388:	e757      	b.n	801423a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801438a:	ad39      	add	r5, sp, #228	; 0xe4
 801438c:	ac19      	add	r4, sp, #100	; 0x64
 801438e:	e72d      	b.n	80141ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8014390:	4613      	mov	r3, r2
 8014392:	e744      	b.n	801421e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8014394:	4613      	mov	r3, r2
 8014396:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801439a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 801439c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80143a0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80143a4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80143a8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80143ac:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 80143b0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 80143b4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 80143b8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 80143ba:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 80143be:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 80143c2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 80143c6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 80143ca:	960e      	str	r6, [sp, #56]	; 0x38
 80143cc:	469e      	mov	lr, r3
 80143ce:	461f      	mov	r7, r3
 80143d0:	f04f 0900 	mov.w	r9, #0
 80143d4:	2f00      	cmp	r7, #0
 80143d6:	d146      	bne.n	8014466 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80143d8:	449c      	add	ip, r3
 80143da:	1ad7      	subs	r7, r2, r3
 80143dc:	f1b9 0f00 	cmp.w	r9, #0
 80143e0:	d009      	beq.n	80143f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80143e2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 80143e6:	9039      	str	r0, [sp, #228]	; 0xe4
 80143e8:	913d      	str	r1, [sp, #244]	; 0xf4
 80143ea:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 80143ee:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 80143f2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 80143f6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80143f8:	910e      	str	r1, [sp, #56]	; 0x38
 80143fa:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80143fe:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014402:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8014406:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801440a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801440e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014412:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8014416:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801441a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801441e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014422:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8014426:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801442a:	f04f 0800 	mov.w	r8, #0
 801442e:	f1be 0f00 	cmp.w	lr, #0
 8014432:	d030      	beq.n	8014496 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8014434:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014436:	4431      	add	r1, r6
 8014438:	4549      	cmp	r1, r9
 801443a:	4450      	add	r0, sl
 801443c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014440:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014444:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014448:	db08      	blt.n	801445c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801444a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801444e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014452:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014456:	3001      	adds	r0, #1
 8014458:	eba1 0109 	sub.w	r1, r1, r9
 801445c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014460:	f04f 0801 	mov.w	r8, #1
 8014464:	e7e3      	b.n	801442e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8014466:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014468:	4431      	add	r1, r6
 801446a:	4541      	cmp	r1, r8
 801446c:	4450      	add	r0, sl
 801446e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014472:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014476:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801447a:	db08      	blt.n	801448e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 801447c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014480:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014484:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014488:	3001      	adds	r0, #1
 801448a:	eba1 0108 	sub.w	r1, r1, r8
 801448e:	3f01      	subs	r7, #1
 8014490:	f04f 0901 	mov.w	r9, #1
 8014494:	e79e      	b.n	80143d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8014496:	449c      	add	ip, r3
 8014498:	1aff      	subs	r7, r7, r3
 801449a:	f1b8 0f00 	cmp.w	r8, #0
 801449e:	d009      	beq.n	80144b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80144a0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80144a4:	9019      	str	r0, [sp, #100]	; 0x64
 80144a6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80144aa:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80144ae:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80144b2:	911d      	str	r1, [sp, #116]	; 0x74
 80144b4:	1ad2      	subs	r2, r2, r3
 80144b6:	e6b5      	b.n	8014224 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80144b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80144ba:	681b      	ldr	r3, [r3, #0]
 80144bc:	b923      	cbnz	r3, 80144c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80144be:	4b04      	ldr	r3, [pc, #16]	; (80144d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80144c0:	6818      	ldr	r0, [r3, #0]
 80144c2:	6803      	ldr	r3, [r0, #0]
 80144c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80144c6:	4798      	blx	r3
 80144c8:	b05b      	add	sp, #364	; 0x16c
 80144ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80144ce:	bf00      	nop
 80144d0:	20012f2c 	.word	0x20012f2c

080144d4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 80144d4:	b570      	push	{r4, r5, r6, lr}
 80144d6:	4604      	mov	r4, r0
 80144d8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 80144dc:	9805      	ldr	r0, [sp, #20]
 80144de:	6061      	str	r1, [r4, #4]
 80144e0:	2500      	movs	r5, #0
 80144e2:	f89d 1010 	ldrb.w	r1, [sp, #16]
 80144e6:	8263      	strh	r3, [r4, #18]
 80144e8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80144ec:	8025      	strh	r5, [r4, #0]
 80144ee:	7221      	strb	r1, [r4, #8]
 80144f0:	7266      	strb	r6, [r4, #9]
 80144f2:	60e0      	str	r0, [r4, #12]
 80144f4:	8222      	strh	r2, [r4, #16]
 80144f6:	82a3      	strh	r3, [r4, #20]
 80144f8:	82e5      	strh	r5, [r4, #22]
 80144fa:	8325      	strh	r5, [r4, #24]
 80144fc:	8365      	strh	r5, [r4, #26]
 80144fe:	83a5      	strh	r5, [r4, #28]
 8014500:	83e5      	strh	r5, [r4, #30]
 8014502:	8425      	strh	r5, [r4, #32]
 8014504:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8014508:	b32e      	cbz	r6, 8014556 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801450a:	6803      	ldr	r3, [r0, #0]
 801450c:	695b      	ldr	r3, [r3, #20]
 801450e:	4798      	blx	r3
 8014510:	4606      	mov	r6, r0
 8014512:	b300      	cbz	r0, 8014556 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014514:	68e0      	ldr	r0, [r4, #12]
 8014516:	6803      	ldr	r3, [r0, #0]
 8014518:	4631      	mov	r1, r6
 801451a:	68db      	ldr	r3, [r3, #12]
 801451c:	4798      	blx	r3
 801451e:	4605      	mov	r5, r0
 8014520:	b1c8      	cbz	r0, 8014556 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014522:	7b43      	ldrb	r3, [r0, #13]
 8014524:	7a82      	ldrb	r2, [r0, #10]
 8014526:	005b      	lsls	r3, r3, #1
 8014528:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801452c:	4313      	orrs	r3, r2
 801452e:	8423      	strh	r3, [r4, #32]
 8014530:	7a63      	ldrb	r3, [r4, #9]
 8014532:	2b06      	cmp	r3, #6
 8014534:	d10f      	bne.n	8014556 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014536:	68e0      	ldr	r0, [r4, #12]
 8014538:	6803      	ldr	r3, [r0, #0]
 801453a:	462a      	mov	r2, r5
 801453c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801453e:	4631      	mov	r1, r6
 8014540:	4798      	blx	r3
 8014542:	7b6b      	ldrb	r3, [r5, #13]
 8014544:	005b      	lsls	r3, r3, #1
 8014546:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801454a:	7aab      	ldrb	r3, [r5, #10]
 801454c:	4313      	orrs	r3, r2
 801454e:	4418      	add	r0, r3
 8014550:	8c23      	ldrh	r3, [r4, #32]
 8014552:	4418      	add	r0, r3
 8014554:	8420      	strh	r0, [r4, #32]
 8014556:	4620      	mov	r0, r4
 8014558:	bd70      	pop	{r4, r5, r6, pc}

0801455a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801455a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801455e:	2400      	movs	r4, #0
 8014560:	b085      	sub	sp, #20
 8014562:	4681      	mov	r9, r0
 8014564:	4688      	mov	r8, r1
 8014566:	4692      	mov	sl, r2
 8014568:	469b      	mov	fp, r3
 801456a:	4627      	mov	r7, r4
 801456c:	4625      	mov	r5, r4
 801456e:	4626      	mov	r6, r4
 8014570:	4554      	cmp	r4, sl
 8014572:	da2a      	bge.n	80145ca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014574:	2300      	movs	r3, #0
 8014576:	9303      	str	r3, [sp, #12]
 8014578:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801457c:	429d      	cmp	r5, r3
 801457e:	d004      	beq.n	801458a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8014580:	f242 030b 	movw	r3, #8203	; 0x200b
 8014584:	429d      	cmp	r5, r3
 8014586:	bf18      	it	ne
 8014588:	462f      	movne	r7, r5
 801458a:	ab03      	add	r3, sp, #12
 801458c:	4642      	mov	r2, r8
 801458e:	4659      	mov	r1, fp
 8014590:	4648      	mov	r0, r9
 8014592:	f003 f965 	bl	8017860 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014596:	4605      	mov	r5, r0
 8014598:	b1b8      	cbz	r0, 80145ca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801459a:	280a      	cmp	r0, #10
 801459c:	d015      	beq.n	80145ca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801459e:	9a03      	ldr	r2, [sp, #12]
 80145a0:	b18a      	cbz	r2, 80145c6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80145a2:	7b50      	ldrb	r0, [r2, #13]
 80145a4:	7a93      	ldrb	r3, [r2, #10]
 80145a6:	8895      	ldrh	r5, [r2, #4]
 80145a8:	0040      	lsls	r0, r0, #1
 80145aa:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80145ae:	4303      	orrs	r3, r0
 80145b0:	9301      	str	r3, [sp, #4]
 80145b2:	f8d8 3000 	ldr.w	r3, [r8]
 80145b6:	4639      	mov	r1, r7
 80145b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80145ba:	4640      	mov	r0, r8
 80145bc:	4798      	blx	r3
 80145be:	9b01      	ldr	r3, [sp, #4]
 80145c0:	4418      	add	r0, r3
 80145c2:	4406      	add	r6, r0
 80145c4:	b2b6      	uxth	r6, r6
 80145c6:	3401      	adds	r4, #1
 80145c8:	e7d2      	b.n	8014570 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 80145ca:	4630      	mov	r0, r6
 80145cc:	b005      	add	sp, #20
 80145ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080145d2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 80145d2:	2a02      	cmp	r2, #2
 80145d4:	b530      	push	{r4, r5, lr}
 80145d6:	d011      	beq.n	80145fc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 80145d8:	2a03      	cmp	r2, #3
 80145da:	d01c      	beq.n	8014616 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 80145dc:	2a01      	cmp	r2, #1
 80145de:	d10c      	bne.n	80145fa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80145e0:	888b      	ldrh	r3, [r1, #4]
 80145e2:	8801      	ldrh	r1, [r0, #0]
 80145e4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80145e8:	8844      	ldrh	r4, [r0, #2]
 80145ea:	8004      	strh	r4, [r0, #0]
 80145ec:	1a5b      	subs	r3, r3, r1
 80145ee:	1a9b      	subs	r3, r3, r2
 80145f0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80145f4:	8043      	strh	r3, [r0, #2]
 80145f6:	8081      	strh	r1, [r0, #4]
 80145f8:	80c2      	strh	r2, [r0, #6]
 80145fa:	bd30      	pop	{r4, r5, pc}
 80145fc:	88cb      	ldrh	r3, [r1, #6]
 80145fe:	8842      	ldrh	r2, [r0, #2]
 8014600:	1a9b      	subs	r3, r3, r2
 8014602:	88c2      	ldrh	r2, [r0, #6]
 8014604:	1a9b      	subs	r3, r3, r2
 8014606:	888a      	ldrh	r2, [r1, #4]
 8014608:	8801      	ldrh	r1, [r0, #0]
 801460a:	8043      	strh	r3, [r0, #2]
 801460c:	1a52      	subs	r2, r2, r1
 801460e:	8881      	ldrh	r1, [r0, #4]
 8014610:	1a52      	subs	r2, r2, r1
 8014612:	8002      	strh	r2, [r0, #0]
 8014614:	e7f1      	b.n	80145fa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014616:	88cb      	ldrh	r3, [r1, #6]
 8014618:	8841      	ldrh	r1, [r0, #2]
 801461a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801461e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014622:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8014626:	8045      	strh	r5, [r0, #2]
 8014628:	1a5b      	subs	r3, r3, r1
 801462a:	1a9b      	subs	r3, r3, r2
 801462c:	8003      	strh	r3, [r0, #0]
 801462e:	8082      	strh	r2, [r0, #4]
 8014630:	80c4      	strh	r4, [r0, #6]
 8014632:	e7e2      	b.n	80145fa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08014634 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8014634:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014638:	b09f      	sub	sp, #124	; 0x7c
 801463a:	9116      	str	r1, [sp, #88]	; 0x58
 801463c:	9317      	str	r3, [sp, #92]	; 0x5c
 801463e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014640:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014642:	8809      	ldrh	r1, [r1, #0]
 8014644:	889b      	ldrh	r3, [r3, #4]
 8014646:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 801464a:	9212      	str	r2, [sp, #72]	; 0x48
 801464c:	440b      	add	r3, r1
 801464e:	b21b      	sxth	r3, r3
 8014650:	9310      	str	r3, [sp, #64]	; 0x40
 8014652:	f8d8 3000 	ldr.w	r3, [r8]
 8014656:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 801465a:	7b19      	ldrb	r1, [r3, #12]
 801465c:	7adb      	ldrb	r3, [r3, #11]
 801465e:	9011      	str	r0, [sp, #68]	; 0x44
 8014660:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8014664:	9114      	str	r1, [sp, #80]	; 0x50
 8014666:	9315      	str	r3, [sp, #84]	; 0x54
 8014668:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 801466c:	2a00      	cmp	r2, #0
 801466e:	d06a      	beq.n	8014746 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8014670:	f898 3010 	ldrb.w	r3, [r8, #16]
 8014674:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014676:	2b06      	cmp	r3, #6
 8014678:	bf14      	ite	ne
 801467a:	2301      	movne	r3, #1
 801467c:	2302      	moveq	r3, #2
 801467e:	4413      	add	r3, r2
 8014680:	f04f 0900 	mov.w	r9, #0
 8014684:	930f      	str	r3, [sp, #60]	; 0x3c
 8014686:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 801468a:	464c      	mov	r4, r9
 801468c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8014690:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8014694:	4293      	cmp	r3, r2
 8014696:	f280 808f 	bge.w	80147b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801469a:	2300      	movs	r3, #0
 801469c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 80146a0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80146a4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80146a8:	429c      	cmp	r4, r3
 80146aa:	d006      	beq.n	80146ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 80146ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80146ae:	f242 020b 	movw	r2, #8203	; 0x200b
 80146b2:	4294      	cmp	r4, r2
 80146b4:	bf18      	it	ne
 80146b6:	4623      	movne	r3, r4
 80146b8:	930d      	str	r3, [sp, #52]	; 0x34
 80146ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80146bc:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80146be:	f8d8 2000 	ldr.w	r2, [r8]
 80146c2:	428b      	cmp	r3, r1
 80146c4:	db41      	blt.n	801474a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 80146c6:	6813      	ldr	r3, [r2, #0]
 80146c8:	4610      	mov	r0, r2
 80146ca:	695b      	ldr	r3, [r3, #20]
 80146cc:	4798      	blx	r3
 80146ce:	4604      	mov	r4, r0
 80146d0:	f8d8 0000 	ldr.w	r0, [r8]
 80146d4:	6803      	ldr	r3, [r0, #0]
 80146d6:	aa1d      	add	r2, sp, #116	; 0x74
 80146d8:	689d      	ldr	r5, [r3, #8]
 80146da:	4621      	mov	r1, r4
 80146dc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80146e0:	47a8      	blx	r5
 80146e2:	901c      	str	r0, [sp, #112]	; 0x70
 80146e4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80146e8:	429c      	cmp	r4, r3
 80146ea:	f000 80eb 	beq.w	80148c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80146ee:	f242 030b 	movw	r3, #8203	; 0x200b
 80146f2:	429c      	cmp	r4, r3
 80146f4:	f000 80e6 	beq.w	80148c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80146f8:	2c00      	cmp	r4, #0
 80146fa:	f000 80f8 	beq.w	80148ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80146fe:	2c0a      	cmp	r4, #10
 8014700:	d060      	beq.n	80147c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8014702:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014704:	b36a      	cbz	r2, 8014762 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8014706:	8894      	ldrh	r4, [r2, #4]
 8014708:	f1bb 0f00 	cmp.w	fp, #0
 801470c:	d03b      	beq.n	8014786 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 801470e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8014712:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014716:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801471a:	f892 900a 	ldrb.w	r9, [r2, #10]
 801471e:	f1bb 0f01 	cmp.w	fp, #1
 8014722:	ea49 0903 	orr.w	r9, r9, r3
 8014726:	d134      	bne.n	8014792 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8014728:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801472a:	eba6 0609 	sub.w	r6, r6, r9
 801472e:	2b00      	cmp	r3, #0
 8014730:	d14f      	bne.n	80147d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014732:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014734:	eb09 0306 	add.w	r3, r9, r6
 8014738:	4413      	add	r3, r2
 801473a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801473c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8014740:	4293      	cmp	r3, r2
 8014742:	da51      	bge.n	80147e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014744:	e038      	b.n	80147b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014746:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014748:	e79a      	b.n	8014680 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 801474a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801474e:	9301      	str	r3, [sp, #4]
 8014750:	ab1d      	add	r3, sp, #116	; 0x74
 8014752:	9300      	str	r3, [sp, #0]
 8014754:	4659      	mov	r1, fp
 8014756:	ab1c      	add	r3, sp, #112	; 0x70
 8014758:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801475a:	f003 f8ca 	bl	80178f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801475e:	4604      	mov	r4, r0
 8014760:	e7c0      	b.n	80146e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8014762:	f8d8 0000 	ldr.w	r0, [r8]
 8014766:	6803      	ldr	r3, [r0, #0]
 8014768:	691b      	ldr	r3, [r3, #16]
 801476a:	4798      	blx	r3
 801476c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014770:	4298      	cmp	r0, r3
 8014772:	f000 80a7 	beq.w	80148c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014776:	f242 030b 	movw	r3, #8203	; 0x200b
 801477a:	4298      	cmp	r0, r3
 801477c:	f000 80a2 	beq.w	80148c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014780:	f1bb 0f00 	cmp.w	fp, #0
 8014784:	d100      	bne.n	8014788 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8014786:	444e      	add	r6, r9
 8014788:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801478a:	2a00      	cmp	r2, #0
 801478c:	d1bf      	bne.n	801470e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 801478e:	4691      	mov	r9, r2
 8014790:	e098      	b.n	80148c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014792:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014794:	2b00      	cmp	r3, #0
 8014796:	f000 80ac 	beq.w	80148f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 801479a:	f1bb 0f00 	cmp.w	fp, #0
 801479e:	d118      	bne.n	80147d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80147a0:	f8d8 0000 	ldr.w	r0, [r8]
 80147a4:	990d      	ldr	r1, [sp, #52]	; 0x34
 80147a6:	6803      	ldr	r3, [r0, #0]
 80147a8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80147aa:	4798      	blx	r3
 80147ac:	4406      	add	r6, r0
 80147ae:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80147b0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80147b2:	1af3      	subs	r3, r6, r3
 80147b4:	4293      	cmp	r3, r2
 80147b6:	dd17      	ble.n	80147e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80147b8:	2c00      	cmp	r4, #0
 80147ba:	f000 8098 	beq.w	80148ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80147be:	2c0a      	cmp	r4, #10
 80147c0:	f040 8086 	bne.w	80148d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 80147c4:	240a      	movs	r4, #10
 80147c6:	fab4 f084 	clz	r0, r4
 80147ca:	0940      	lsrs	r0, r0, #5
 80147cc:	b01f      	add	sp, #124	; 0x7c
 80147ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80147d2:	f8d8 0000 	ldr.w	r0, [r8]
 80147d6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80147d8:	6803      	ldr	r3, [r0, #0]
 80147da:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80147dc:	4798      	blx	r3
 80147de:	f1bb 0f01 	cmp.w	fp, #1
 80147e2:	eba6 0600 	sub.w	r6, r6, r0
 80147e6:	d0a4      	beq.n	8014732 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 80147e8:	981c      	ldr	r0, [sp, #112]	; 0x70
 80147ea:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80147ec:	f990 1009 	ldrsb.w	r1, [r0, #9]
 80147f0:	f9b3 7000 	ldrsh.w	r7, [r3]
 80147f4:	7b43      	ldrb	r3, [r0, #13]
 80147f6:	015b      	lsls	r3, r3, #5
 80147f8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80147fc:	7983      	ldrb	r3, [r0, #6]
 80147fe:	4431      	add	r1, r6
 8014800:	4313      	orrs	r3, r2
 8014802:	440b      	add	r3, r1
 8014804:	42bb      	cmp	r3, r7
 8014806:	db5d      	blt.n	80148c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014808:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801480a:	4299      	cmp	r1, r3
 801480c:	da5a      	bge.n	80148c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801480e:	f8d8 0000 	ldr.w	r0, [r8]
 8014812:	6803      	ldr	r3, [r0, #0]
 8014814:	42b7      	cmp	r7, r6
 8014816:	bfc8      	it	gt
 8014818:	1bbf      	subgt	r7, r7, r6
 801481a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801481c:	bfcc      	ite	gt
 801481e:	b2bf      	uxthgt	r7, r7
 8014820:	2700      	movle	r7, #0
 8014822:	4798      	blx	r3
 8014824:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014826:	7b5a      	ldrb	r2, [r3, #13]
 8014828:	00d1      	lsls	r1, r2, #3
 801482a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 801482e:	7a19      	ldrb	r1, [r3, #8]
 8014830:	4329      	orrs	r1, r5
 8014832:	0655      	lsls	r5, r2, #25
 8014834:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8014836:	bf44      	itt	mi
 8014838:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801483c:	b209      	sxthmi	r1, r1
 801483e:	1945      	adds	r5, r0, r5
 8014840:	1a6d      	subs	r5, r5, r1
 8014842:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014844:	b2ad      	uxth	r5, r5
 8014846:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801484a:	fa0f fa85 	sxth.w	sl, r5
 801484e:	4551      	cmp	r1, sl
 8014850:	dd3c      	ble.n	80148cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8014852:	0112      	lsls	r2, r2, #4
 8014854:	79d8      	ldrb	r0, [r3, #7]
 8014856:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801485a:	4302      	orrs	r2, r0
 801485c:	4492      	add	sl, r2
 801485e:	4551      	cmp	r1, sl
 8014860:	dc30      	bgt.n	80148c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014862:	1b4d      	subs	r5, r1, r5
 8014864:	b22d      	sxth	r5, r5
 8014866:	468a      	mov	sl, r1
 8014868:	9319      	str	r3, [sp, #100]	; 0x64
 801486a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801486c:	f8d8 0000 	ldr.w	r0, [r8]
 8014870:	681a      	ldr	r2, [r3, #0]
 8014872:	6801      	ldr	r1, [r0, #0]
 8014874:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8014876:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8014878:	9313      	str	r3, [sp, #76]	; 0x4c
 801487a:	9218      	str	r2, [sp, #96]	; 0x60
 801487c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801487e:	4788      	blx	r1
 8014880:	f898 1006 	ldrb.w	r1, [r8, #6]
 8014884:	910b      	str	r1, [sp, #44]	; 0x2c
 8014886:	f898 100e 	ldrb.w	r1, [r8, #14]
 801488a:	910a      	str	r1, [sp, #40]	; 0x28
 801488c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8014890:	9109      	str	r1, [sp, #36]	; 0x24
 8014892:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8014896:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8014898:	9305      	str	r3, [sp, #20]
 801489a:	b2ad      	uxth	r5, r5
 801489c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80148a0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 80148a4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80148a6:	9304      	str	r3, [sp, #16]
 80148a8:	4437      	add	r7, r6
 80148aa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80148ac:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80148ae:	9206      	str	r2, [sp, #24]
 80148b0:	b23f      	sxth	r7, r7
 80148b2:	f8cd a004 	str.w	sl, [sp, #4]
 80148b6:	9700      	str	r7, [sp, #0]
 80148b8:	681a      	ldr	r2, [r3, #0]
 80148ba:	9916      	ldr	r1, [sp, #88]	; 0x58
 80148bc:	685b      	ldr	r3, [r3, #4]
 80148be:	9811      	ldr	r0, [sp, #68]	; 0x44
 80148c0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80148c2:	47a8      	blx	r5
 80148c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80148c6:	3301      	adds	r3, #1
 80148c8:	930e      	str	r3, [sp, #56]	; 0x38
 80148ca:	e6e1      	b.n	8014690 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 80148cc:	2500      	movs	r5, #0
 80148ce:	e7cb      	b.n	8014868 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 80148d0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80148d2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80148d4:	3501      	adds	r5, #1
 80148d6:	429d      	cmp	r5, r3
 80148d8:	f6bf af75 	bge.w	80147c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80148dc:	4659      	mov	r1, fp
 80148de:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80148e0:	f7f3 fc46 	bl	8008170 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80148e4:	4604      	mov	r4, r0
 80148e6:	b110      	cbz	r0, 80148ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80148e8:	280a      	cmp	r0, #10
 80148ea:	d1f2      	bne.n	80148d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 80148ec:	e76a      	b.n	80147c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80148ee:	2400      	movs	r4, #0
 80148f0:	e769      	b.n	80147c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80148f2:	f1bb 0f00 	cmp.w	fp, #0
 80148f6:	f43f af5a 	beq.w	80147ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 80148fa:	e775      	b.n	80147e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

080148fc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 80148fc:	b530      	push	{r4, r5, lr}
 80148fe:	8ac4      	ldrh	r4, [r0, #22]
 8014900:	8b45      	ldrh	r5, [r0, #26]
 8014902:	8343      	strh	r3, [r0, #26]
 8014904:	442c      	add	r4, r5
 8014906:	1ae4      	subs	r4, r4, r3
 8014908:	82c4      	strh	r4, [r0, #22]
 801490a:	8b83      	ldrh	r3, [r0, #28]
 801490c:	8b04      	ldrh	r4, [r0, #24]
 801490e:	4422      	add	r2, r4
 8014910:	440c      	add	r4, r1
 8014912:	1a59      	subs	r1, r3, r1
 8014914:	83c2      	strh	r2, [r0, #30]
 8014916:	8304      	strh	r4, [r0, #24]
 8014918:	8381      	strh	r1, [r0, #28]
 801491a:	bd30      	pop	{r4, r5, pc}

0801491c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801491c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014920:	4604      	mov	r4, r0
 8014922:	8a47      	ldrh	r7, [r0, #18]
 8014924:	68c0      	ldr	r0, [r0, #12]
 8014926:	6803      	ldr	r3, [r0, #0]
 8014928:	b085      	sub	sp, #20
 801492a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801492c:	4798      	blx	r3
 801492e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8014932:	7a63      	ldrb	r3, [r4, #9]
 8014934:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8014938:	42b7      	cmp	r7, r6
 801493a:	f103 33ff 	add.w	r3, r3, #4294967295
 801493e:	bfac      	ite	ge
 8014940:	f04f 0900 	movge.w	r9, #0
 8014944:	f04f 0901 	movlt.w	r9, #1
 8014948:	2b05      	cmp	r3, #5
 801494a:	d804      	bhi.n	8014956 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801494c:	e8df f003 	tbb	[pc, r3]
 8014950:	470e0854 	.word	0x470e0854
 8014954:	4c4c      	.short	0x4c4c
 8014956:	2500      	movs	r5, #0
 8014958:	46a9      	mov	r9, r5
 801495a:	462e      	mov	r6, r5
 801495c:	462f      	mov	r7, r5
 801495e:	e00d      	b.n	801497c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014960:	42b7      	cmp	r7, r6
 8014962:	bfb4      	ite	lt
 8014964:	2600      	movlt	r6, #0
 8014966:	2601      	movge	r6, #1
 8014968:	2500      	movs	r5, #0
 801496a:	e7f7      	b.n	801495c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801496c:	42b7      	cmp	r7, r6
 801496e:	464d      	mov	r5, r9
 8014970:	f04f 0900 	mov.w	r9, #0
 8014974:	bfb4      	ite	lt
 8014976:	2600      	movlt	r6, #0
 8014978:	2601      	movge	r6, #1
 801497a:	464f      	mov	r7, r9
 801497c:	f04f 0800 	mov.w	r8, #0
 8014980:	f8a4 8016 	strh.w	r8, [r4, #22]
 8014984:	f8a4 8018 	strh.w	r8, [r4, #24]
 8014988:	f8cd 8004 	str.w	r8, [sp, #4]
 801498c:	2300      	movs	r3, #0
 801498e:	9303      	str	r3, [sp, #12]
 8014990:	8823      	ldrh	r3, [r4, #0]
 8014992:	2b20      	cmp	r3, #32
 8014994:	d034      	beq.n	8014a00 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8014996:	f242 010b 	movw	r1, #8203	; 0x200b
 801499a:	1a5a      	subs	r2, r3, r1
 801499c:	f1d2 0a00 	rsbs	sl, r2, #0
 80149a0:	eb4a 0a02 	adc.w	sl, sl, r2
 80149a4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80149a8:	4293      	cmp	r3, r2
 80149aa:	d009      	beq.n	80149c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80149ac:	428b      	cmp	r3, r1
 80149ae:	9a01      	ldr	r2, [sp, #4]
 80149b0:	bf18      	it	ne
 80149b2:	461a      	movne	r2, r3
 80149b4:	9201      	str	r2, [sp, #4]
 80149b6:	bf0c      	ite	eq
 80149b8:	f04f 0a01 	moveq.w	sl, #1
 80149bc:	f04f 0a00 	movne.w	sl, #0
 80149c0:	ab03      	add	r3, sp, #12
 80149c2:	68e2      	ldr	r2, [r4, #12]
 80149c4:	7a21      	ldrb	r1, [r4, #8]
 80149c6:	6860      	ldr	r0, [r4, #4]
 80149c8:	f002 ff4a 	bl	8017860 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80149cc:	8020      	strh	r0, [r4, #0]
 80149ce:	b9d8      	cbnz	r0, 8014a08 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 80149d0:	8ba2      	ldrh	r2, [r4, #28]
 80149d2:	2300      	movs	r3, #0
 80149d4:	4611      	mov	r1, r2
 80149d6:	4620      	mov	r0, r4
 80149d8:	f7ff ff90 	bl	80148fc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80149dc:	e06e      	b.n	8014abc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80149de:	2500      	movs	r5, #0
 80149e0:	46a9      	mov	r9, r5
 80149e2:	462e      	mov	r6, r5
 80149e4:	2701      	movs	r7, #1
 80149e6:	e7c9      	b.n	801497c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80149e8:	42b7      	cmp	r7, r6
 80149ea:	f04f 0500 	mov.w	r5, #0
 80149ee:	bfb4      	ite	lt
 80149f0:	2700      	movlt	r7, #0
 80149f2:	2701      	movge	r7, #1
 80149f4:	462e      	mov	r6, r5
 80149f6:	e7c1      	b.n	801497c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80149f8:	2500      	movs	r5, #0
 80149fa:	46a9      	mov	r9, r5
 80149fc:	2601      	movs	r6, #1
 80149fe:	e7ad      	b.n	801495c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8014a00:	9301      	str	r3, [sp, #4]
 8014a02:	f04f 0a01 	mov.w	sl, #1
 8014a06:	e7db      	b.n	80149c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8014a08:	8b63      	ldrh	r3, [r4, #26]
 8014a0a:	280a      	cmp	r0, #10
 8014a0c:	f103 0301 	add.w	r3, r3, #1
 8014a10:	8363      	strh	r3, [r4, #26]
 8014a12:	d0dd      	beq.n	80149d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8014a14:	9a03      	ldr	r2, [sp, #12]
 8014a16:	bb62      	cbnz	r2, 8014a72 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8014a18:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014a1c:	4298      	cmp	r0, r3
 8014a1e:	d003      	beq.n	8014a28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8014a20:	f242 030b 	movw	r3, #8203	; 0x200b
 8014a24:	4298      	cmp	r0, r3
 8014a26:	d1b1      	bne.n	801498c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014a28:	8823      	ldrh	r3, [r4, #0]
 8014a2a:	8ba1      	ldrh	r1, [r4, #28]
 8014a2c:	2b20      	cmp	r3, #32
 8014a2e:	d003      	beq.n	8014a38 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8014a30:	f242 000b 	movw	r0, #8203	; 0x200b
 8014a34:	4283      	cmp	r3, r0
 8014a36:	d131      	bne.n	8014a9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8014a38:	f1ba 0f00 	cmp.w	sl, #0
 8014a3c:	bf0a      	itet	eq
 8014a3e:	4688      	moveq	r8, r1
 8014a40:	4650      	movne	r0, sl
 8014a42:	2001      	moveq	r0, #1
 8014a44:	440a      	add	r2, r1
 8014a46:	8b23      	ldrh	r3, [r4, #24]
 8014a48:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8014a4c:	b292      	uxth	r2, r2
 8014a4e:	83a2      	strh	r2, [r4, #28]
 8014a50:	4413      	add	r3, r2
 8014a52:	f1b9 0f00 	cmp.w	r9, #0
 8014a56:	d102      	bne.n	8014a5e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8014a58:	2d00      	cmp	r5, #0
 8014a5a:	d042      	beq.n	8014ae2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8014a5c:	b300      	cbz	r0, 8014aa0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8014a5e:	8c21      	ldrh	r1, [r4, #32]
 8014a60:	4419      	add	r1, r3
 8014a62:	458c      	cmp	ip, r1
 8014a64:	da37      	bge.n	8014ad6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8014a66:	8ae1      	ldrh	r1, [r4, #22]
 8014a68:	2900      	cmp	r1, #0
 8014a6a:	d034      	beq.n	8014ad6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8014a6c:	4563      	cmp	r3, ip
 8014a6e:	dd8d      	ble.n	801498c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014a70:	e01d      	b.n	8014aae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8014a72:	8893      	ldrh	r3, [r2, #4]
 8014a74:	8023      	strh	r3, [r4, #0]
 8014a76:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8014a7a:	9901      	ldr	r1, [sp, #4]
 8014a7c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8014a80:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8014a84:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8014a88:	ea4b 0b00 	orr.w	fp, fp, r0
 8014a8c:	68e0      	ldr	r0, [r4, #12]
 8014a8e:	6803      	ldr	r3, [r0, #0]
 8014a90:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014a92:	4798      	blx	r3
 8014a94:	eb0b 0200 	add.w	r2, fp, r0
 8014a98:	b292      	uxth	r2, r2
 8014a9a:	e7c5      	b.n	8014a28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8014a9c:	2000      	movs	r0, #0
 8014a9e:	e7d1      	b.n	8014a44 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8014aa0:	4563      	cmp	r3, ip
 8014aa2:	f77f af73 	ble.w	801498c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014aa6:	8ae3      	ldrh	r3, [r4, #22]
 8014aa8:	2b00      	cmp	r3, #0
 8014aaa:	f43f af6f 	beq.w	801498c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014aae:	2301      	movs	r3, #1
 8014ab0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8014ab4:	8c22      	ldrh	r2, [r4, #32]
 8014ab6:	8be3      	ldrh	r3, [r4, #30]
 8014ab8:	4413      	add	r3, r2
 8014aba:	83e3      	strh	r3, [r4, #30]
 8014abc:	68e0      	ldr	r0, [r4, #12]
 8014abe:	6803      	ldr	r3, [r0, #0]
 8014ac0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014ac2:	4798      	blx	r3
 8014ac4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8014ac8:	4418      	add	r0, r3
 8014aca:	8a63      	ldrh	r3, [r4, #18]
 8014acc:	1a18      	subs	r0, r3, r0
 8014ace:	8260      	strh	r0, [r4, #18]
 8014ad0:	b005      	add	sp, #20
 8014ad2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014ad6:	2300      	movs	r3, #0
 8014ad8:	4611      	mov	r1, r2
 8014ada:	4620      	mov	r0, r4
 8014adc:	f7ff ff0e 	bl	80148fc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8014ae0:	e754      	b.n	801498c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014ae2:	4563      	cmp	r3, ip
 8014ae4:	dd14      	ble.n	8014b10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8014ae6:	b117      	cbz	r7, 8014aee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8014ae8:	2301      	movs	r3, #1
 8014aea:	460a      	mov	r2, r1
 8014aec:	e772      	b.n	80149d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8014aee:	2e00      	cmp	r6, #0
 8014af0:	f43f af4c 	beq.w	801498c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014af4:	2800      	cmp	r0, #0
 8014af6:	f47f af49 	bne.w	801498c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014afa:	f1ba 0f00 	cmp.w	sl, #0
 8014afe:	d002      	beq.n	8014b06 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8014b00:	2301      	movs	r3, #1
 8014b02:	4642      	mov	r2, r8
 8014b04:	e767      	b.n	80149d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8014b06:	8ae3      	ldrh	r3, [r4, #22]
 8014b08:	2b00      	cmp	r3, #0
 8014b0a:	f43f af3f 	beq.w	801498c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014b0e:	e7d5      	b.n	8014abc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8014b10:	2800      	cmp	r0, #0
 8014b12:	f47f af3b 	bne.w	801498c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014b16:	f1ba 0f00 	cmp.w	sl, #0
 8014b1a:	f43f af37 	beq.w	801498c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014b1e:	2301      	movs	r3, #1
 8014b20:	4642      	mov	r2, r8
 8014b22:	e7da      	b.n	8014ada <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08014b24 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8014b24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014b26:	4605      	mov	r5, r0
 8014b28:	b08f      	sub	sp, #60	; 0x3c
 8014b2a:	4617      	mov	r7, r2
 8014b2c:	461c      	mov	r4, r3
 8014b2e:	460e      	mov	r6, r1
 8014b30:	b1d1      	cbz	r1, 8014b68 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8014b32:	681b      	ldr	r3, [r3, #0]
 8014b34:	4620      	mov	r0, r4
 8014b36:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014b38:	4798      	blx	r3
 8014b3a:	4240      	negs	r0, r0
 8014b3c:	b200      	sxth	r0, r0
 8014b3e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8014b42:	9603      	str	r6, [sp, #12]
 8014b44:	9700      	str	r7, [sp, #0]
 8014b46:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8014b4a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8014b4e:	4629      	mov	r1, r5
 8014b50:	a805      	add	r0, sp, #20
 8014b52:	f7ff fcbf 	bl	80144d4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014b56:	2401      	movs	r4, #1
 8014b58:	a805      	add	r0, sp, #20
 8014b5a:	f7ff fedf 	bl	801491c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014b5e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8014b62:	b163      	cbz	r3, 8014b7e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8014b64:	3401      	adds	r4, #1
 8014b66:	e7f7      	b.n	8014b58 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8014b68:	f002 ff48 	bl	80179fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014b6c:	2401      	movs	r4, #1
 8014b6e:	280a      	cmp	r0, #10
 8014b70:	4628      	mov	r0, r5
 8014b72:	bf08      	it	eq
 8014b74:	3401      	addeq	r4, #1
 8014b76:	f002 ff41 	bl	80179fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014b7a:	2800      	cmp	r0, #0
 8014b7c:	d1f7      	bne.n	8014b6e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8014b7e:	b2a0      	uxth	r0, r4
 8014b80:	b00f      	add	sp, #60	; 0x3c
 8014b82:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014b84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8014b84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b88:	b0e3      	sub	sp, #396	; 0x18c
 8014b8a:	461c      	mov	r4, r3
 8014b8c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8014b8e:	4683      	mov	fp, r0
 8014b90:	4688      	mov	r8, r1
 8014b92:	2b00      	cmp	r3, #0
 8014b94:	f000 8112 	beq.w	8014dbc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014b98:	6823      	ldr	r3, [r4, #0]
 8014b9a:	2b00      	cmp	r3, #0
 8014b9c:	f000 810e 	beq.w	8014dbc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014ba0:	7ba3      	ldrb	r3, [r4, #14]
 8014ba2:	2b00      	cmp	r3, #0
 8014ba4:	f000 810a 	beq.w	8014dbc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014ba8:	6810      	ldr	r0, [r2, #0]
 8014baa:	6851      	ldr	r1, [r2, #4]
 8014bac:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8014bb0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8014bb4:	ad0a      	add	r5, sp, #40	; 0x28
 8014bb6:	462b      	mov	r3, r5
 8014bb8:	c303      	stmia	r3!, {r0, r1}
 8014bba:	2100      	movs	r1, #0
 8014bbc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8014bc0:	910c      	str	r1, [sp, #48]	; 0x30
 8014bc2:	79a2      	ldrb	r2, [r4, #6]
 8014bc4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014bc8:	a90c      	add	r1, sp, #48	; 0x30
 8014bca:	4628      	mov	r0, r5
 8014bcc:	f7ff fd01 	bl	80145d2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8014bd0:	a90c      	add	r1, sp, #48	; 0x30
 8014bd2:	4608      	mov	r0, r1
 8014bd4:	79a2      	ldrb	r2, [r4, #6]
 8014bd6:	f7ff fcfc 	bl	80145d2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8014bda:	a817      	add	r0, sp, #92	; 0x5c
 8014bdc:	f002 fae2 	bl	80171a4 <_ZN8touchgfx12TextProviderC1Ev>
 8014be0:	6820      	ldr	r0, [r4, #0]
 8014be2:	6803      	ldr	r3, [r0, #0]
 8014be4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014be6:	4798      	blx	r3
 8014be8:	4606      	mov	r6, r0
 8014bea:	6820      	ldr	r0, [r4, #0]
 8014bec:	6803      	ldr	r3, [r0, #0]
 8014bee:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014bf0:	4798      	blx	r3
 8014bf2:	4633      	mov	r3, r6
 8014bf4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8014bf6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014bf8:	9000      	str	r0, [sp, #0]
 8014bfa:	a817      	add	r0, sp, #92	; 0x5c
 8014bfc:	f002 fb2d 	bl	801725a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014c00:	6820      	ldr	r0, [r4, #0]
 8014c02:	f894 a004 	ldrb.w	sl, [r4, #4]
 8014c06:	6803      	ldr	r3, [r0, #0]
 8014c08:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014c0a:	4798      	blx	r3
 8014c0c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8014c10:	6823      	ldr	r3, [r4, #0]
 8014c12:	4607      	mov	r7, r0
 8014c14:	4406      	add	r6, r0
 8014c16:	a830      	add	r0, sp, #192	; 0xc0
 8014c18:	f893 9009 	ldrb.w	r9, [r3, #9]
 8014c1c:	f002 fac2 	bl	80171a4 <_ZN8touchgfx12TextProviderC1Ev>
 8014c20:	7c23      	ldrb	r3, [r4, #16]
 8014c22:	b17b      	cbz	r3, 8014c44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8014c24:	6820      	ldr	r0, [r4, #0]
 8014c26:	6803      	ldr	r3, [r0, #0]
 8014c28:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014c2a:	4798      	blx	r3
 8014c2c:	9009      	str	r0, [sp, #36]	; 0x24
 8014c2e:	6820      	ldr	r0, [r4, #0]
 8014c30:	6802      	ldr	r2, [r0, #0]
 8014c32:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8014c34:	4790      	blx	r2
 8014c36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014c38:	9000      	str	r0, [sp, #0]
 8014c3a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8014c3c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014c3e:	a830      	add	r0, sp, #192	; 0xc0
 8014c40:	f002 fb0b 	bl	801725a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014c44:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8014c48:	7be2      	ldrb	r2, [r4, #15]
 8014c4a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8014c4e:	1a8a      	subs	r2, r1, r2
 8014c50:	7c21      	ldrb	r1, [r4, #16]
 8014c52:	9103      	str	r1, [sp, #12]
 8014c54:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8014c58:	9102      	str	r1, [sp, #8]
 8014c5a:	6821      	ldr	r1, [r4, #0]
 8014c5c:	9101      	str	r1, [sp, #4]
 8014c5e:	7961      	ldrb	r1, [r4, #5]
 8014c60:	9100      	str	r1, [sp, #0]
 8014c62:	b292      	uxth	r2, r2
 8014c64:	a930      	add	r1, sp, #192	; 0xc0
 8014c66:	a80e      	add	r0, sp, #56	; 0x38
 8014c68:	f7ff fc34 	bl	80144d4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014c6c:	2e00      	cmp	r6, #0
 8014c6e:	dc5b      	bgt.n	8014d28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8014c70:	af17      	add	r7, sp, #92	; 0x5c
 8014c72:	f04f 0900 	mov.w	r9, #0
 8014c76:	7c23      	ldrb	r3, [r4, #16]
 8014c78:	2b00      	cmp	r3, #0
 8014c7a:	f000 80b1 	beq.w	8014de0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8014c7e:	a80e      	add	r0, sp, #56	; 0x38
 8014c80:	f7ff fe4c 	bl	801491c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014c84:	f1ba 0f00 	cmp.w	sl, #0
 8014c88:	f000 80a5 	beq.w	8014dd6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8014c8c:	7c23      	ldrb	r3, [r4, #16]
 8014c8e:	9309      	str	r3, [sp, #36]	; 0x24
 8014c90:	2264      	movs	r2, #100	; 0x64
 8014c92:	4639      	mov	r1, r7
 8014c94:	a849      	add	r0, sp, #292	; 0x124
 8014c96:	f015 fda8 	bl	802a7ea <memcpy>
 8014c9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014c9c:	2b00      	cmp	r3, #0
 8014c9e:	f000 80a7 	beq.w	8014df0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8014ca2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8014ca6:	7922      	ldrb	r2, [r4, #4]
 8014ca8:	2a01      	cmp	r2, #1
 8014caa:	f040 808a 	bne.w	8014dc2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8014cae:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8014cb2:	1ac0      	subs	r0, r0, r3
 8014cb4:	2302      	movs	r3, #2
 8014cb6:	fb90 f0f3 	sdiv	r0, r0, r3
 8014cba:	b200      	sxth	r0, r0
 8014cbc:	7c23      	ldrb	r3, [r4, #16]
 8014cbe:	2b00      	cmp	r3, #0
 8014cc0:	f000 808b 	beq.w	8014dda <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8014cc4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8014cc8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8014ccc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014cd0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8014cd4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8014cd8:	4410      	add	r0, r2
 8014cda:	b200      	sxth	r0, r0
 8014cdc:	9000      	str	r0, [sp, #0]
 8014cde:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8014ce2:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8014ce6:	4642      	mov	r2, r8
 8014ce8:	2100      	movs	r1, #0
 8014cea:	4658      	mov	r0, fp
 8014cec:	f7ff fca2 	bl	8014634 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8014cf0:	2800      	cmp	r0, #0
 8014cf2:	d163      	bne.n	8014dbc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014cf4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014cf8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8014cfc:	b2b2      	uxth	r2, r6
 8014cfe:	4413      	add	r3, r2
 8014d00:	1a8a      	subs	r2, r1, r2
 8014d02:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8014d06:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8014d0a:	b21b      	sxth	r3, r3
 8014d0c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014d10:	2a00      	cmp	r2, #0
 8014d12:	d153      	bne.n	8014dbc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014d14:	6822      	ldr	r2, [r4, #0]
 8014d16:	8869      	ldrh	r1, [r5, #2]
 8014d18:	7a12      	ldrb	r2, [r2, #8]
 8014d1a:	1a9b      	subs	r3, r3, r2
 8014d1c:	88ea      	ldrh	r2, [r5, #6]
 8014d1e:	440a      	add	r2, r1
 8014d20:	b212      	sxth	r2, r2
 8014d22:	4293      	cmp	r3, r2
 8014d24:	dda7      	ble.n	8014c76 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8014d26:	e049      	b.n	8014dbc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014d28:	7c23      	ldrb	r3, [r4, #16]
 8014d2a:	444f      	add	r7, r9
 8014d2c:	b1c3      	cbz	r3, 8014d60 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8014d2e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8014d32:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014d36:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014d3a:	443b      	add	r3, r7
 8014d3c:	4293      	cmp	r3, r2
 8014d3e:	da97      	bge.n	8014c70 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014d40:	a80e      	add	r0, sp, #56	; 0x38
 8014d42:	f7ff fdeb 	bl	801491c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014d46:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8014d4a:	3b01      	subs	r3, #1
 8014d4c:	b29b      	uxth	r3, r3
 8014d4e:	454b      	cmp	r3, r9
 8014d50:	9309      	str	r3, [sp, #36]	; 0x24
 8014d52:	d021      	beq.n	8014d98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8014d54:	7961      	ldrb	r1, [r4, #5]
 8014d56:	a817      	add	r0, sp, #92	; 0x5c
 8014d58:	f7f3 fa0a 	bl	8008170 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014d5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014d5e:	e7f4      	b.n	8014d4a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8014d60:	fa1f f986 	uxth.w	r9, r6
 8014d64:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014d68:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014d6c:	443b      	add	r3, r7
 8014d6e:	4293      	cmp	r3, r2
 8014d70:	f6bf af7e 	bge.w	8014c70 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014d74:	a817      	add	r0, sp, #92	; 0x5c
 8014d76:	f002 fe41 	bl	80179fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014d7a:	b1f8      	cbz	r0, 8014dbc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014d7c:	280a      	cmp	r0, #10
 8014d7e:	d1f1      	bne.n	8014d64 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014d80:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014d84:	444b      	add	r3, r9
 8014d86:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014d8a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8014d8e:	eba3 0309 	sub.w	r3, r3, r9
 8014d92:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014d96:	e7e5      	b.n	8014d64 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014d98:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8014d9c:	b2b3      	uxth	r3, r6
 8014d9e:	441a      	add	r2, r3
 8014da0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8014da4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8014da8:	1ad3      	subs	r3, r2, r3
 8014daa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014dae:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014db2:	b11b      	cbz	r3, 8014dbc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014db4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8014db8:	2b00      	cmp	r3, #0
 8014dba:	d0ba      	beq.n	8014d32 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8014dbc:	b063      	add	sp, #396	; 0x18c
 8014dbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014dc2:	2a02      	cmp	r2, #2
 8014dc4:	d105      	bne.n	8014dd2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8014dc6:	7be2      	ldrb	r2, [r4, #15]
 8014dc8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8014dcc:	1a80      	subs	r0, r0, r2
 8014dce:	1ac0      	subs	r0, r0, r3
 8014dd0:	e773      	b.n	8014cba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8014dd2:	2000      	movs	r0, #0
 8014dd4:	e772      	b.n	8014cbc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8014dd6:	7be0      	ldrb	r0, [r4, #15]
 8014dd8:	e770      	b.n	8014cbc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8014dda:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014dde:	e773      	b.n	8014cc8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8014de0:	f1ba 0f00 	cmp.w	sl, #0
 8014de4:	d0f7      	beq.n	8014dd6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8014de6:	2264      	movs	r2, #100	; 0x64
 8014de8:	4639      	mov	r1, r7
 8014dea:	a849      	add	r0, sp, #292	; 0x124
 8014dec:	f015 fcfd 	bl	802a7ea <memcpy>
 8014df0:	2300      	movs	r3, #0
 8014df2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014df6:	6821      	ldr	r1, [r4, #0]
 8014df8:	a849      	add	r0, sp, #292	; 0x124
 8014dfa:	f7ff fbae 	bl	801455a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8014dfe:	b203      	sxth	r3, r0
 8014e00:	e751      	b.n	8014ca6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08014e02 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8014e02:	2b03      	cmp	r3, #3
 8014e04:	d818      	bhi.n	8014e38 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8014e06:	e8df f003 	tbb	[pc, r3]
 8014e0a:	0602      	.short	0x0602
 8014e0c:	130d      	.short	0x130d
 8014e0e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014e12:	1850      	adds	r0, r2, r1
 8014e14:	4770      	bx	lr
 8014e16:	8803      	ldrh	r3, [r0, #0]
 8014e18:	8880      	ldrh	r0, [r0, #4]
 8014e1a:	4418      	add	r0, r3
 8014e1c:	b200      	sxth	r0, r0
 8014e1e:	1a80      	subs	r0, r0, r2
 8014e20:	3801      	subs	r0, #1
 8014e22:	4770      	bx	lr
 8014e24:	8803      	ldrh	r3, [r0, #0]
 8014e26:	8880      	ldrh	r0, [r0, #4]
 8014e28:	4418      	add	r0, r3
 8014e2a:	b200      	sxth	r0, r0
 8014e2c:	1a40      	subs	r0, r0, r1
 8014e2e:	e7f7      	b.n	8014e20 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8014e30:	f9b0 0000 	ldrsh.w	r0, [r0]
 8014e34:	4410      	add	r0, r2
 8014e36:	4770      	bx	lr
 8014e38:	2000      	movs	r0, #0
 8014e3a:	4770      	bx	lr

08014e3c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8014e3c:	2b03      	cmp	r3, #3
 8014e3e:	d817      	bhi.n	8014e70 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8014e40:	e8df f003 	tbb	[pc, r3]
 8014e44:	10090602 	.word	0x10090602
 8014e48:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014e4c:	1850      	adds	r0, r2, r1
 8014e4e:	4770      	bx	lr
 8014e50:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014e54:	e7fa      	b.n	8014e4c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8014e56:	8843      	ldrh	r3, [r0, #2]
 8014e58:	88c0      	ldrh	r0, [r0, #6]
 8014e5a:	4418      	add	r0, r3
 8014e5c:	b200      	sxth	r0, r0
 8014e5e:	1a80      	subs	r0, r0, r2
 8014e60:	3801      	subs	r0, #1
 8014e62:	4770      	bx	lr
 8014e64:	8843      	ldrh	r3, [r0, #2]
 8014e66:	88c0      	ldrh	r0, [r0, #6]
 8014e68:	4418      	add	r0, r3
 8014e6a:	b200      	sxth	r0, r0
 8014e6c:	1a40      	subs	r0, r0, r1
 8014e6e:	e7f7      	b.n	8014e60 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8014e70:	2000      	movs	r0, #0
 8014e72:	4770      	bx	lr

08014e74 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8014e74:	4b01      	ldr	r3, [pc, #4]	; (8014e7c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8014e76:	2200      	movs	r2, #0
 8014e78:	601a      	str	r2, [r3, #0]
 8014e7a:	4770      	bx	lr
 8014e7c:	20012f3c 	.word	0x20012f3c

08014e80 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8014e80:	4603      	mov	r3, r0
 8014e82:	b1c8      	cbz	r0, 8014eb8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8014e84:	0c02      	lsrs	r2, r0, #16
 8014e86:	0412      	lsls	r2, r2, #16
 8014e88:	b9a2      	cbnz	r2, 8014eb4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8014e8a:	0403      	lsls	r3, r0, #16
 8014e8c:	2010      	movs	r0, #16
 8014e8e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8014e92:	bf04      	itt	eq
 8014e94:	021b      	lsleq	r3, r3, #8
 8014e96:	3008      	addeq	r0, #8
 8014e98:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8014e9c:	bf04      	itt	eq
 8014e9e:	011b      	lsleq	r3, r3, #4
 8014ea0:	3004      	addeq	r0, #4
 8014ea2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8014ea6:	bf04      	itt	eq
 8014ea8:	009b      	lsleq	r3, r3, #2
 8014eaa:	3002      	addeq	r0, #2
 8014eac:	2b00      	cmp	r3, #0
 8014eae:	db04      	blt.n	8014eba <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8014eb0:	3001      	adds	r0, #1
 8014eb2:	4770      	bx	lr
 8014eb4:	2000      	movs	r0, #0
 8014eb6:	e7ea      	b.n	8014e8e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8014eb8:	2020      	movs	r0, #32
 8014eba:	4770      	bx	lr

08014ebc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8014ebc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ec0:	b087      	sub	sp, #28
 8014ec2:	460d      	mov	r5, r1
 8014ec4:	4616      	mov	r6, r2
 8014ec6:	4698      	mov	r8, r3
 8014ec8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8014ecc:	4601      	mov	r1, r0
 8014ece:	b120      	cbz	r0, 8014eda <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014ed0:	b11a      	cbz	r2, 8014eda <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014ed2:	2d1f      	cmp	r5, #31
 8014ed4:	d801      	bhi.n	8014eda <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014ed6:	2b1f      	cmp	r3, #31
 8014ed8:	d904      	bls.n	8014ee4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8014eda:	2000      	movs	r0, #0
 8014edc:	6038      	str	r0, [r7, #0]
 8014ede:	b007      	add	sp, #28
 8014ee0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014ee4:	b97d      	cbnz	r5, 8014f06 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8014ee6:	b143      	cbz	r3, 8014efa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8014ee8:	4602      	mov	r2, r0
 8014eea:	e9cd 4700 	strd	r4, r7, [sp]
 8014eee:	462b      	mov	r3, r5
 8014ef0:	4641      	mov	r1, r8
 8014ef2:	4630      	mov	r0, r6
 8014ef4:	f7ff ffe2 	bl	8014ebc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014ef8:	e7f1      	b.n	8014ede <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014efa:	f04f 33ff 	mov.w	r3, #4294967295
 8014efe:	603b      	str	r3, [r7, #0]
 8014f00:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8014f04:	e7eb      	b.n	8014ede <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014f06:	fa32 fa05 	lsrs.w	sl, r2, r5
 8014f0a:	d106      	bne.n	8014f1a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8014f0c:	4346      	muls	r6, r0
 8014f0e:	fbb6 f0f4 	udiv	r0, r6, r4
 8014f12:	fb04 6610 	mls	r6, r4, r0, r6
 8014f16:	603e      	str	r6, [r7, #0]
 8014f18:	e7e1      	b.n	8014ede <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014f1a:	2201      	movs	r2, #1
 8014f1c:	40aa      	lsls	r2, r5
 8014f1e:	3a01      	subs	r2, #1
 8014f20:	4016      	ands	r6, r2
 8014f22:	fa00 fb05 	lsl.w	fp, r0, r5
 8014f26:	4630      	mov	r0, r6
 8014f28:	fbbb f9f4 	udiv	r9, fp, r4
 8014f2c:	fb0a f309 	mul.w	r3, sl, r9
 8014f30:	9303      	str	r3, [sp, #12]
 8014f32:	f7ff ffa5 	bl	8014e80 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014f36:	462b      	mov	r3, r5
 8014f38:	460a      	mov	r2, r1
 8014f3a:	e9cd 4700 	strd	r4, r7, [sp]
 8014f3e:	4601      	mov	r1, r0
 8014f40:	4630      	mov	r0, r6
 8014f42:	f7ff ffbb 	bl	8014ebc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014f46:	fb04 b919 	mls	r9, r4, r9, fp
 8014f4a:	4606      	mov	r6, r0
 8014f4c:	4648      	mov	r0, r9
 8014f4e:	eb05 0108 	add.w	r1, r5, r8
 8014f52:	f7ff ff95 	bl	8014e80 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014f56:	ab05      	add	r3, sp, #20
 8014f58:	e9cd 4300 	strd	r4, r3, [sp]
 8014f5c:	464a      	mov	r2, r9
 8014f5e:	4603      	mov	r3, r0
 8014f60:	4650      	mov	r0, sl
 8014f62:	f7ff ffab 	bl	8014ebc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014f66:	6839      	ldr	r1, [r7, #0]
 8014f68:	9a05      	ldr	r2, [sp, #20]
 8014f6a:	9b03      	ldr	r3, [sp, #12]
 8014f6c:	4411      	add	r1, r2
 8014f6e:	fbb1 f2f4 	udiv	r2, r1, r4
 8014f72:	18d3      	adds	r3, r2, r3
 8014f74:	441e      	add	r6, r3
 8014f76:	fb04 1412 	mls	r4, r4, r2, r1
 8014f7a:	4430      	add	r0, r6
 8014f7c:	603c      	str	r4, [r7, #0]
 8014f7e:	e7ae      	b.n	8014ede <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08014f80 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8014f80:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014f84:	b085      	sub	sp, #20
 8014f86:	f1b0 0900 	subs.w	r9, r0, #0
 8014f8a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014f8c:	461d      	mov	r5, r3
 8014f8e:	bfbf      	itttt	lt
 8014f90:	6823      	ldrlt	r3, [r4, #0]
 8014f92:	425b      	neglt	r3, r3
 8014f94:	f1c9 0900 	rsblt	r9, r9, #0
 8014f98:	6023      	strlt	r3, [r4, #0]
 8014f9a:	bfb4      	ite	lt
 8014f9c:	f04f 36ff 	movlt.w	r6, #4294967295
 8014fa0:	2601      	movge	r6, #1
 8014fa2:	2a00      	cmp	r2, #0
 8014fa4:	4617      	mov	r7, r2
 8014fa6:	da04      	bge.n	8014fb2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8014fa8:	6823      	ldr	r3, [r4, #0]
 8014faa:	425b      	negs	r3, r3
 8014fac:	4257      	negs	r7, r2
 8014fae:	4276      	negs	r6, r6
 8014fb0:	6023      	str	r3, [r4, #0]
 8014fb2:	2d00      	cmp	r5, #0
 8014fb4:	4638      	mov	r0, r7
 8014fb6:	bfba      	itte	lt
 8014fb8:	426d      	neglt	r5, r5
 8014fba:	f04f 38ff 	movlt.w	r8, #4294967295
 8014fbe:	f04f 0801 	movge.w	r8, #1
 8014fc2:	f7ff ff5d 	bl	8014e80 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014fc6:	ab03      	add	r3, sp, #12
 8014fc8:	e9cd 5300 	strd	r5, r3, [sp]
 8014fcc:	463a      	mov	r2, r7
 8014fce:	4603      	mov	r3, r0
 8014fd0:	4648      	mov	r0, r9
 8014fd2:	f7ff ff73 	bl	8014ebc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014fd6:	6823      	ldr	r3, [r4, #0]
 8014fd8:	9a03      	ldr	r2, [sp, #12]
 8014fda:	4546      	cmp	r6, r8
 8014fdc:	441a      	add	r2, r3
 8014fde:	fb92 f3f5 	sdiv	r3, r2, r5
 8014fe2:	4418      	add	r0, r3
 8014fe4:	bf18      	it	ne
 8014fe6:	4240      	negne	r0, r0
 8014fe8:	fb05 2313 	mls	r3, r5, r3, r2
 8014fec:	1c72      	adds	r2, r6, #1
 8014fee:	6023      	str	r3, [r4, #0]
 8014ff0:	d105      	bne.n	8014ffe <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8014ff2:	2b00      	cmp	r3, #0
 8014ff4:	f1c3 0200 	rsb	r2, r3, #0
 8014ff8:	db0b      	blt.n	8015012 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8014ffa:	6022      	str	r2, [r4, #0]
 8014ffc:	e006      	b.n	801500c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014ffe:	2e01      	cmp	r6, #1
 8015000:	d104      	bne.n	801500c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015002:	2b00      	cmp	r3, #0
 8015004:	da02      	bge.n	801500c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015006:	442b      	add	r3, r5
 8015008:	3801      	subs	r0, #1
 801500a:	6023      	str	r3, [r4, #0]
 801500c:	b005      	add	sp, #20
 801500e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015012:	3801      	subs	r0, #1
 8015014:	1b52      	subs	r2, r2, r5
 8015016:	e7f0      	b.n	8014ffa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08015018 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8015018:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801501c:	4c1c      	ldr	r4, [pc, #112]	; (8015090 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801501e:	6807      	ldr	r7, [r0, #0]
 8015020:	69a3      	ldr	r3, [r4, #24]
 8015022:	4605      	mov	r5, r0
 8015024:	b92b      	cbnz	r3, 8015032 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8015026:	6840      	ldr	r0, [r0, #4]
 8015028:	e9c5 7000 	strd	r7, r0, [r5]
 801502c:	b004      	add	sp, #16
 801502e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015032:	68a2      	ldr	r2, [r4, #8]
 8015034:	6820      	ldr	r0, [r4, #0]
 8015036:	ae04      	add	r6, sp, #16
 8015038:	f04f 0802 	mov.w	r8, #2
 801503c:	fb93 f1f8 	sdiv	r1, r3, r8
 8015040:	440a      	add	r2, r1
 8015042:	f846 2d04 	str.w	r2, [r6, #-4]!
 8015046:	69e1      	ldr	r1, [r4, #28]
 8015048:	9600      	str	r6, [sp, #0]
 801504a:	463a      	mov	r2, r7
 801504c:	f7ff ff98 	bl	8014f80 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015050:	69a3      	ldr	r3, [r4, #24]
 8015052:	686a      	ldr	r2, [r5, #4]
 8015054:	6a21      	ldr	r1, [r4, #32]
 8015056:	9600      	str	r6, [sp, #0]
 8015058:	4607      	mov	r7, r0
 801505a:	6860      	ldr	r0, [r4, #4]
 801505c:	f7ff ff90 	bl	8014f80 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015060:	6962      	ldr	r2, [r4, #20]
 8015062:	69a3      	ldr	r3, [r4, #24]
 8015064:	fb93 f8f8 	sdiv	r8, r3, r8
 8015068:	4442      	add	r2, r8
 801506a:	9203      	str	r2, [sp, #12]
 801506c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801506e:	682a      	ldr	r2, [r5, #0]
 8015070:	9600      	str	r6, [sp, #0]
 8015072:	4407      	add	r7, r0
 8015074:	68e0      	ldr	r0, [r4, #12]
 8015076:	f7ff ff83 	bl	8014f80 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801507a:	9600      	str	r6, [sp, #0]
 801507c:	4680      	mov	r8, r0
 801507e:	69a3      	ldr	r3, [r4, #24]
 8015080:	686a      	ldr	r2, [r5, #4]
 8015082:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8015084:	6920      	ldr	r0, [r4, #16]
 8015086:	f7ff ff7b 	bl	8014f80 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801508a:	4440      	add	r0, r8
 801508c:	e7cc      	b.n	8015028 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801508e:	bf00      	nop
 8015090:	20012f40 	.word	0x20012f40

08015094 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8015094:	4b07      	ldr	r3, [pc, #28]	; (80150b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8015096:	781b      	ldrb	r3, [r3, #0]
 8015098:	2b01      	cmp	r3, #1
 801509a:	d109      	bne.n	80150b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801509c:	f9b1 3000 	ldrsh.w	r3, [r1]
 80150a0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80150a4:	8003      	strh	r3, [r0, #0]
 80150a6:	4b04      	ldr	r3, [pc, #16]	; (80150b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80150a8:	881b      	ldrh	r3, [r3, #0]
 80150aa:	3b01      	subs	r3, #1
 80150ac:	1a9b      	subs	r3, r3, r2
 80150ae:	800b      	strh	r3, [r1, #0]
 80150b0:	4770      	bx	lr
 80150b2:	bf00      	nop
 80150b4:	20012f24 	.word	0x20012f24
 80150b8:	20012f20 	.word	0x20012f20

080150bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80150bc:	b510      	push	{r4, lr}
 80150be:	4b07      	ldr	r3, [pc, #28]	; (80150dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80150c0:	781b      	ldrb	r3, [r3, #0]
 80150c2:	2b01      	cmp	r3, #1
 80150c4:	d108      	bne.n	80150d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80150c6:	4b06      	ldr	r3, [pc, #24]	; (80150e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80150c8:	880c      	ldrh	r4, [r1, #0]
 80150ca:	881b      	ldrh	r3, [r3, #0]
 80150cc:	f9b0 2000 	ldrsh.w	r2, [r0]
 80150d0:	3b01      	subs	r3, #1
 80150d2:	1b1b      	subs	r3, r3, r4
 80150d4:	8003      	strh	r3, [r0, #0]
 80150d6:	800a      	strh	r2, [r1, #0]
 80150d8:	bd10      	pop	{r4, pc}
 80150da:	bf00      	nop
 80150dc:	20012f24 	.word	0x20012f24
 80150e0:	20012f20 	.word	0x20012f20

080150e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80150e4:	b510      	push	{r4, lr}
 80150e6:	4b0a      	ldr	r3, [pc, #40]	; (8015110 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80150e8:	781b      	ldrb	r3, [r3, #0]
 80150ea:	2b01      	cmp	r3, #1
 80150ec:	d10e      	bne.n	801510c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80150ee:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80150f2:	8843      	ldrh	r3, [r0, #2]
 80150f4:	f9b0 4000 	ldrsh.w	r4, [r0]
 80150f8:	8044      	strh	r4, [r0, #2]
 80150fa:	18ca      	adds	r2, r1, r3
 80150fc:	4b05      	ldr	r3, [pc, #20]	; (8015114 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80150fe:	881b      	ldrh	r3, [r3, #0]
 8015100:	1a9b      	subs	r3, r3, r2
 8015102:	8003      	strh	r3, [r0, #0]
 8015104:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015108:	80c3      	strh	r3, [r0, #6]
 801510a:	8081      	strh	r1, [r0, #4]
 801510c:	bd10      	pop	{r4, pc}
 801510e:	bf00      	nop
 8015110:	20012f24 	.word	0x20012f24
 8015114:	20012f20 	.word	0x20012f20

08015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8015118:	4b08      	ldr	r3, [pc, #32]	; (801513c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801511a:	781b      	ldrb	r3, [r3, #0]
 801511c:	2b01      	cmp	r3, #1
 801511e:	d10c      	bne.n	801513a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8015120:	8803      	ldrh	r3, [r0, #0]
 8015122:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8015126:	8842      	ldrh	r2, [r0, #2]
 8015128:	8002      	strh	r2, [r0, #0]
 801512a:	185a      	adds	r2, r3, r1
 801512c:	4b04      	ldr	r3, [pc, #16]	; (8015140 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801512e:	881b      	ldrh	r3, [r3, #0]
 8015130:	1a9b      	subs	r3, r3, r2
 8015132:	8043      	strh	r3, [r0, #2]
 8015134:	88c3      	ldrh	r3, [r0, #6]
 8015136:	8083      	strh	r3, [r0, #4]
 8015138:	80c1      	strh	r1, [r0, #6]
 801513a:	4770      	bx	lr
 801513c:	20012f24 	.word	0x20012f24
 8015140:	20012f20 	.word	0x20012f20

08015144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8015144:	b510      	push	{r4, lr}
 8015146:	4b07      	ldr	r3, [pc, #28]	; (8015164 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8015148:	781b      	ldrb	r3, [r3, #0]
 801514a:	2b01      	cmp	r3, #1
 801514c:	d108      	bne.n	8015160 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801514e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015152:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015156:	8003      	strh	r3, [r0, #0]
 8015158:	8893      	ldrh	r3, [r2, #4]
 801515a:	3b01      	subs	r3, #1
 801515c:	1b1b      	subs	r3, r3, r4
 801515e:	800b      	strh	r3, [r1, #0]
 8015160:	bd10      	pop	{r4, pc}
 8015162:	bf00      	nop
 8015164:	20012f24 	.word	0x20012f24

08015168 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8015168:	4b0b      	ldr	r3, [pc, #44]	; (8015198 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801516a:	781b      	ldrb	r3, [r3, #0]
 801516c:	2b01      	cmp	r3, #1
 801516e:	d111      	bne.n	8015194 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8015170:	680b      	ldr	r3, [r1, #0]
 8015172:	ed90 7a00 	vldr	s14, [r0]
 8015176:	6003      	str	r3, [r0, #0]
 8015178:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801517c:	eddf 6a07 	vldr	s13, [pc, #28]	; 801519c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8015180:	ee07 3a90 	vmov	s15, r3
 8015184:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015188:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801518c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8015190:	edc1 7a00 	vstr	s15, [r1]
 8015194:	4770      	bx	lr
 8015196:	bf00      	nop
 8015198:	20012f24 	.word	0x20012f24
 801519c:	38d1b717 	.word	0x38d1b717

080151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80151a0:	b510      	push	{r4, lr}
 80151a2:	4b0a      	ldr	r3, [pc, #40]	; (80151cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80151a4:	781b      	ldrb	r3, [r3, #0]
 80151a6:	2b01      	cmp	r3, #1
 80151a8:	460a      	mov	r2, r1
 80151aa:	d10d      	bne.n	80151c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80151ac:	8881      	ldrh	r1, [r0, #4]
 80151ae:	8803      	ldrh	r3, [r0, #0]
 80151b0:	440b      	add	r3, r1
 80151b2:	4601      	mov	r1, r0
 80151b4:	3b01      	subs	r3, #1
 80151b6:	f821 3b02 	strh.w	r3, [r1], #2
 80151ba:	f7ff ffc3 	bl	8015144 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80151be:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80151c2:	88c2      	ldrh	r2, [r0, #6]
 80151c4:	8082      	strh	r2, [r0, #4]
 80151c6:	80c3      	strh	r3, [r0, #6]
 80151c8:	bd10      	pop	{r4, pc}
 80151ca:	bf00      	nop
 80151cc:	20012f24 	.word	0x20012f24

080151d0 <_ZN8touchgfx11Application13requestRedrawEv>:
 80151d0:	4b06      	ldr	r3, [pc, #24]	; (80151ec <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80151d2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80151d6:	4b06      	ldr	r3, [pc, #24]	; (80151f0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80151d8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 80151dc:	f9b3 3000 	ldrsh.w	r3, [r3]
 80151e0:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 80151e4:	2100      	movs	r1, #0
 80151e6:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 80151ea:	4770      	bx	lr
 80151ec:	20012f20 	.word	0x20012f20
 80151f0:	20012f22 	.word	0x20012f22

080151f4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80151f4:	4b03      	ldr	r3, [pc, #12]	; (8015204 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80151f6:	6818      	ldr	r0, [r3, #0]
 80151f8:	b110      	cbz	r0, 8015200 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80151fa:	6803      	ldr	r3, [r0, #0]
 80151fc:	699b      	ldr	r3, [r3, #24]
 80151fe:	4718      	bx	r3
 8015200:	4770      	bx	lr
 8015202:	bf00      	nop
 8015204:	20012f70 	.word	0x20012f70

08015208 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8015208:	4770      	bx	lr
	...

0801520c <_ZN8touchgfx11Application4drawEv>:
 801520c:	b507      	push	{r0, r1, r2, lr}
 801520e:	4b09      	ldr	r3, [pc, #36]	; (8015234 <_ZN8touchgfx11Application4drawEv+0x28>)
 8015210:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015214:	4b08      	ldr	r3, [pc, #32]	; (8015238 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8015216:	f8ad 2004 	strh.w	r2, [sp, #4]
 801521a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801521e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015222:	6803      	ldr	r3, [r0, #0]
 8015224:	2100      	movs	r1, #0
 8015226:	9100      	str	r1, [sp, #0]
 8015228:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801522a:	4669      	mov	r1, sp
 801522c:	4798      	blx	r3
 801522e:	b003      	add	sp, #12
 8015230:	f85d fb04 	ldr.w	pc, [sp], #4
 8015234:	20012f20 	.word	0x20012f20
 8015238:	20012f22 	.word	0x20012f22

0801523c <_ZN8touchgfx11Application10invalidateEv>:
 801523c:	4b09      	ldr	r3, [pc, #36]	; (8015264 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801523e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015242:	4b09      	ldr	r3, [pc, #36]	; (8015268 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8015244:	b082      	sub	sp, #8
 8015246:	f9b3 3000 	ldrsh.w	r3, [r3]
 801524a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801524e:	2100      	movs	r1, #0
 8015250:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015254:	9100      	str	r1, [sp, #0]
 8015256:	6803      	ldr	r3, [r0, #0]
 8015258:	aa02      	add	r2, sp, #8
 801525a:	e912 0006 	ldmdb	r2, {r1, r2}
 801525e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015260:	b002      	add	sp, #8
 8015262:	4718      	bx	r3
 8015264:	20012f20 	.word	0x20012f20
 8015268:	20012f22 	.word	0x20012f22

0801526c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801526c:	4b03      	ldr	r3, [pc, #12]	; (801527c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801526e:	6818      	ldr	r0, [r3, #0]
 8015270:	b110      	cbz	r0, 8015278 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8015272:	6803      	ldr	r3, [r0, #0]
 8015274:	69db      	ldr	r3, [r3, #28]
 8015276:	4718      	bx	r3
 8015278:	4770      	bx	lr
 801527a:	bf00      	nop
 801527c:	20012f70 	.word	0x20012f70

08015280 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8015280:	4b03      	ldr	r3, [pc, #12]	; (8015290 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8015282:	6818      	ldr	r0, [r3, #0]
 8015284:	b110      	cbz	r0, 801528c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8015286:	6803      	ldr	r3, [r0, #0]
 8015288:	6a1b      	ldr	r3, [r3, #32]
 801528a:	4718      	bx	r3
 801528c:	4770      	bx	lr
 801528e:	bf00      	nop
 8015290:	20012f70 	.word	0x20012f70

08015294 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8015294:	2300      	movs	r3, #0
 8015296:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 801529a:	4770      	bx	lr

0801529c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801529c:	4b03      	ldr	r3, [pc, #12]	; (80152ac <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801529e:	6818      	ldr	r0, [r3, #0]
 80152a0:	b110      	cbz	r0, 80152a8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80152a2:	6803      	ldr	r3, [r0, #0]
 80152a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80152a6:	4718      	bx	r3
 80152a8:	4770      	bx	lr
 80152aa:	bf00      	nop
 80152ac:	20012f70 	.word	0x20012f70

080152b0 <_ZN8touchgfx11ApplicationD1Ev>:
 80152b0:	4770      	bx	lr

080152b2 <_ZN8touchgfx11ApplicationD0Ev>:
 80152b2:	b510      	push	{r4, lr}
 80152b4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80152b8:	4604      	mov	r4, r0
 80152ba:	f014 f958 	bl	802956e <_ZdlPvj>
 80152be:	4620      	mov	r0, r4
 80152c0:	bd10      	pop	{r4, pc}

080152c2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80152c2:	b510      	push	{r4, lr}
 80152c4:	f9b1 4000 	ldrsh.w	r4, [r1]
 80152c8:	888a      	ldrh	r2, [r1, #4]
 80152ca:	f9b0 3000 	ldrsh.w	r3, [r0]
 80152ce:	4422      	add	r2, r4
 80152d0:	b212      	sxth	r2, r2
 80152d2:	4293      	cmp	r3, r2
 80152d4:	da15      	bge.n	8015302 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80152d6:	8882      	ldrh	r2, [r0, #4]
 80152d8:	4413      	add	r3, r2
 80152da:	b21b      	sxth	r3, r3
 80152dc:	429c      	cmp	r4, r3
 80152de:	da10      	bge.n	8015302 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80152e0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80152e4:	88c9      	ldrh	r1, [r1, #6]
 80152e6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80152ea:	4419      	add	r1, r3
 80152ec:	b209      	sxth	r1, r1
 80152ee:	428a      	cmp	r2, r1
 80152f0:	da07      	bge.n	8015302 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80152f2:	88c0      	ldrh	r0, [r0, #6]
 80152f4:	4410      	add	r0, r2
 80152f6:	b200      	sxth	r0, r0
 80152f8:	4283      	cmp	r3, r0
 80152fa:	bfac      	ite	ge
 80152fc:	2000      	movge	r0, #0
 80152fe:	2001      	movlt	r0, #1
 8015300:	bd10      	pop	{r4, pc}
 8015302:	2000      	movs	r0, #0
 8015304:	e7fc      	b.n	8015300 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08015306 <_ZN8touchgfx4Rect10restrictToEss>:
 8015306:	f9b0 3000 	ldrsh.w	r3, [r0]
 801530a:	2b00      	cmp	r3, #0
 801530c:	b510      	push	{r4, lr}
 801530e:	da04      	bge.n	801531a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8015310:	8884      	ldrh	r4, [r0, #4]
 8015312:	4423      	add	r3, r4
 8015314:	8083      	strh	r3, [r0, #4]
 8015316:	2300      	movs	r3, #0
 8015318:	8003      	strh	r3, [r0, #0]
 801531a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801531e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015322:	1b09      	subs	r1, r1, r4
 8015324:	428b      	cmp	r3, r1
 8015326:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801532a:	bfc8      	it	gt
 801532c:	8081      	strhgt	r1, [r0, #4]
 801532e:	2b00      	cmp	r3, #0
 8015330:	da04      	bge.n	801533c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8015332:	88c1      	ldrh	r1, [r0, #6]
 8015334:	440b      	add	r3, r1
 8015336:	80c3      	strh	r3, [r0, #6]
 8015338:	2300      	movs	r3, #0
 801533a:	8043      	strh	r3, [r0, #2]
 801533c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015340:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015344:	1a52      	subs	r2, r2, r1
 8015346:	4293      	cmp	r3, r2
 8015348:	bfc8      	it	gt
 801534a:	80c2      	strhgt	r2, [r0, #6]
 801534c:	bd10      	pop	{r4, pc}
	...

08015350 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8015350:	b510      	push	{r4, lr}
 8015352:	4b10      	ldr	r3, [pc, #64]	; (8015394 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8015354:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015358:	4b0f      	ldr	r3, [pc, #60]	; (8015398 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801535a:	460c      	mov	r4, r1
 801535c:	4620      	mov	r0, r4
 801535e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015362:	f7ff ffd0 	bl	8015306 <_ZN8touchgfx4Rect10restrictToEss>
 8015366:	4b0d      	ldr	r3, [pc, #52]	; (801539c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8015368:	6818      	ldr	r0, [r3, #0]
 801536a:	b190      	cbz	r0, 8015392 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801536c:	6803      	ldr	r3, [r0, #0]
 801536e:	4621      	mov	r1, r4
 8015370:	689b      	ldr	r3, [r3, #8]
 8015372:	4798      	blx	r3
 8015374:	4b0a      	ldr	r3, [pc, #40]	; (80153a0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8015376:	6818      	ldr	r0, [r3, #0]
 8015378:	b118      	cbz	r0, 8015382 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801537a:	6803      	ldr	r3, [r0, #0]
 801537c:	4621      	mov	r1, r4
 801537e:	689b      	ldr	r3, [r3, #8]
 8015380:	4798      	blx	r3
 8015382:	4b08      	ldr	r3, [pc, #32]	; (80153a4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8015384:	6818      	ldr	r0, [r3, #0]
 8015386:	6803      	ldr	r3, [r0, #0]
 8015388:	4621      	mov	r1, r4
 801538a:	69db      	ldr	r3, [r3, #28]
 801538c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015390:	4718      	bx	r3
 8015392:	bd10      	pop	{r4, pc}
 8015394:	20012f22 	.word	0x20012f22
 8015398:	20012f20 	.word	0x20012f20
 801539c:	20012f70 	.word	0x20012f70
 80153a0:	20012f6c 	.word	0x20012f6c
 80153a4:	20012f2c 	.word	0x20012f2c

080153a8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80153a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80153aa:	4606      	mov	r6, r0
 80153ac:	4608      	mov	r0, r1
 80153ae:	460f      	mov	r7, r1
 80153b0:	f7fa ff97 	bl	80102e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80153b4:	b9e8      	cbnz	r0, 80153f2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80153b6:	f9b7 5000 	ldrsh.w	r5, [r7]
 80153ba:	f9b6 4000 	ldrsh.w	r4, [r6]
 80153be:	42a5      	cmp	r5, r4
 80153c0:	db17      	blt.n	80153f2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80153c2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80153c6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80153ca:	429a      	cmp	r2, r3
 80153cc:	db11      	blt.n	80153f2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80153ce:	88b9      	ldrh	r1, [r7, #4]
 80153d0:	440d      	add	r5, r1
 80153d2:	88b1      	ldrh	r1, [r6, #4]
 80153d4:	440c      	add	r4, r1
 80153d6:	b22d      	sxth	r5, r5
 80153d8:	b224      	sxth	r4, r4
 80153da:	42a5      	cmp	r5, r4
 80153dc:	dc09      	bgt.n	80153f2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80153de:	88f8      	ldrh	r0, [r7, #6]
 80153e0:	4410      	add	r0, r2
 80153e2:	88f2      	ldrh	r2, [r6, #6]
 80153e4:	4413      	add	r3, r2
 80153e6:	b200      	sxth	r0, r0
 80153e8:	b21b      	sxth	r3, r3
 80153ea:	4298      	cmp	r0, r3
 80153ec:	bfcc      	ite	gt
 80153ee:	2000      	movgt	r0, #0
 80153f0:	2001      	movle	r0, #1
 80153f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080153f4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80153f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80153f6:	4604      	mov	r4, r0
 80153f8:	4608      	mov	r0, r1
 80153fa:	460d      	mov	r5, r1
 80153fc:	f7fa ff71 	bl	80102e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015400:	b978      	cbnz	r0, 8015422 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8015402:	4620      	mov	r0, r4
 8015404:	f7fa ff6d 	bl	80102e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015408:	f9b5 6000 	ldrsh.w	r6, [r5]
 801540c:	b150      	cbz	r0, 8015424 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 801540e:	8026      	strh	r6, [r4, #0]
 8015410:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015414:	8063      	strh	r3, [r4, #2]
 8015416:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801541a:	80a3      	strh	r3, [r4, #4]
 801541c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8015420:	80e3      	strh	r3, [r4, #6]
 8015422:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015424:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015428:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801542c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8015430:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8015434:	88ed      	ldrh	r5, [r5, #6]
 8015436:	42b1      	cmp	r1, r6
 8015438:	460f      	mov	r7, r1
 801543a:	bfa8      	it	ge
 801543c:	4637      	movge	r7, r6
 801543e:	4293      	cmp	r3, r2
 8015440:	4618      	mov	r0, r3
 8015442:	4466      	add	r6, ip
 8015444:	bfa8      	it	ge
 8015446:	4610      	movge	r0, r2
 8015448:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801544c:	8027      	strh	r7, [r4, #0]
 801544e:	442a      	add	r2, r5
 8015450:	88e5      	ldrh	r5, [r4, #6]
 8015452:	8060      	strh	r0, [r4, #2]
 8015454:	4461      	add	r1, ip
 8015456:	442b      	add	r3, r5
 8015458:	b236      	sxth	r6, r6
 801545a:	b209      	sxth	r1, r1
 801545c:	b212      	sxth	r2, r2
 801545e:	b21b      	sxth	r3, r3
 8015460:	428e      	cmp	r6, r1
 8015462:	bfac      	ite	ge
 8015464:	ebc7 0106 	rsbge	r1, r7, r6
 8015468:	ebc7 0101 	rsblt	r1, r7, r1
 801546c:	429a      	cmp	r2, r3
 801546e:	bfac      	ite	ge
 8015470:	ebc0 0202 	rsbge	r2, r0, r2
 8015474:	ebc0 0203 	rsblt	r2, r0, r3
 8015478:	80a1      	strh	r1, [r4, #4]
 801547a:	80e2      	strh	r2, [r4, #6]
 801547c:	e7d1      	b.n	8015422 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08015480 <_ZN8touchgfx11Application11getInstanceEv>:
 8015480:	4b01      	ldr	r3, [pc, #4]	; (8015488 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8015482:	6818      	ldr	r0, [r3, #0]
 8015484:	4770      	bx	lr
 8015486:	bf00      	nop
 8015488:	20012f80 	.word	0x20012f80

0801548c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 801548c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801548e:	4b10      	ldr	r3, [pc, #64]	; (80154d0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8015490:	781b      	ldrb	r3, [r3, #0]
 8015492:	4605      	mov	r5, r0
 8015494:	b1d3      	cbz	r3, 80154cc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8015496:	4b0f      	ldr	r3, [pc, #60]	; (80154d4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8015498:	4f0f      	ldr	r7, [pc, #60]	; (80154d8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 801549a:	881c      	ldrh	r4, [r3, #0]
 801549c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 80154a0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 80154a4:	42a3      	cmp	r3, r4
 80154a6:	d90e      	bls.n	80154c6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 80154a8:	683b      	ldr	r3, [r7, #0]
 80154aa:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80154ae:	b10a      	cbz	r2, 80154b4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 80154b0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80154b2:	b900      	cbnz	r0, 80154b6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 80154b4:	6898      	ldr	r0, [r3, #8]
 80154b6:	6803      	ldr	r3, [r0, #0]
 80154b8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 80154bc:	69db      	ldr	r3, [r3, #28]
 80154be:	3401      	adds	r4, #1
 80154c0:	4798      	blx	r3
 80154c2:	b2a4      	uxth	r4, r4
 80154c4:	e7ec      	b.n	80154a0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 80154c6:	2300      	movs	r3, #0
 80154c8:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 80154cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80154ce:	bf00      	nop
 80154d0:	20012f2a 	.word	0x20012f2a
 80154d4:	20000088 	.word	0x20000088
 80154d8:	20012f2c 	.word	0x20012f2c

080154dc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 80154dc:	b510      	push	{r4, lr}
 80154de:	2300      	movs	r3, #0
 80154e0:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 80154e4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80154e8:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80154ec:	4604      	mov	r4, r0
 80154ee:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80154f2:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 80154f6:	429a      	cmp	r2, r3
 80154f8:	d90e      	bls.n	8015518 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80154fa:	18e2      	adds	r2, r4, r3
 80154fc:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8015500:	b122      	cbz	r2, 801550c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8015502:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8015506:	6803      	ldr	r3, [r0, #0]
 8015508:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801550a:	4798      	blx	r3
 801550c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015510:	3301      	adds	r3, #1
 8015512:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015516:	e7ea      	b.n	80154ee <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8015518:	bd10      	pop	{r4, pc}

0801551a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 801551a:	b530      	push	{r4, r5, lr}
 801551c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8015520:	2200      	movs	r2, #0
 8015522:	b293      	uxth	r3, r2
 8015524:	429d      	cmp	r5, r3
 8015526:	d90e      	bls.n	8015546 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015528:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 801552c:	428b      	cmp	r3, r1
 801552e:	d10b      	bne.n	8015548 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015530:	1884      	adds	r4, r0, r2
 8015532:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8015536:	b13b      	cbz	r3, 8015548 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015538:	3b01      	subs	r3, #1
 801553a:	b2db      	uxtb	r3, r3
 801553c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8015540:	b90b      	cbnz	r3, 8015546 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015542:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8015546:	bd30      	pop	{r4, r5, pc}
 8015548:	3201      	adds	r2, #1
 801554a:	e7ea      	b.n	8015522 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

0801554c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 801554c:	2300      	movs	r3, #0
 801554e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015552:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8015556:	30a4      	adds	r0, #164	; 0xa4
 8015558:	f802 3b01 	strb.w	r3, [r2], #1
 801555c:	4282      	cmp	r2, r0
 801555e:	d1fb      	bne.n	8015558 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8015560:	4770      	bx	lr
	...

08015564 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8015564:	b570      	push	{r4, r5, r6, lr}
 8015566:	4c0b      	ldr	r4, [pc, #44]	; (8015594 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8015568:	4605      	mov	r5, r0
 801556a:	6820      	ldr	r0, [r4, #0]
 801556c:	460e      	mov	r6, r1
 801556e:	b110      	cbz	r0, 8015576 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8015570:	6803      	ldr	r3, [r0, #0]
 8015572:	695b      	ldr	r3, [r3, #20]
 8015574:	4798      	blx	r3
 8015576:	1d28      	adds	r0, r5, #4
 8015578:	f7ff ffe8 	bl	801554c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801557c:	6026      	str	r6, [r4, #0]
 801557e:	6833      	ldr	r3, [r6, #0]
 8015580:	4630      	mov	r0, r6
 8015582:	68db      	ldr	r3, [r3, #12]
 8015584:	4798      	blx	r3
 8015586:	682b      	ldr	r3, [r5, #0]
 8015588:	4628      	mov	r0, r5
 801558a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801558c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015590:	4718      	bx	r3
 8015592:	bf00      	nop
 8015594:	20012f70 	.word	0x20012f70

08015598 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8015598:	2300      	movs	r3, #0
 801559a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 801559e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 80155a2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80155a4:	461a      	mov	r2, r3
 80155a6:	461c      	mov	r4, r3
 80155a8:	461d      	mov	r5, r3
 80155aa:	459c      	cmp	ip, r3
 80155ac:	dd1a      	ble.n	80155e4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 80155ae:	18c6      	adds	r6, r0, r3
 80155b0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 80155b4:	b16e      	cbz	r6, 80155d2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 80155b6:	429a      	cmp	r2, r3
 80155b8:	d008      	beq.n	80155cc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 80155ba:	fa1f fe82 	uxth.w	lr, r2
 80155be:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 80155c2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 80155c6:	1887      	adds	r7, r0, r2
 80155c8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 80155cc:	3201      	adds	r2, #1
 80155ce:	3301      	adds	r3, #1
 80155d0:	e7eb      	b.n	80155aa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 80155d2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 80155d6:	4299      	cmp	r1, r3
 80155d8:	bfa8      	it	ge
 80155da:	3501      	addge	r5, #1
 80155dc:	429e      	cmp	r6, r3
 80155de:	bfc8      	it	gt
 80155e0:	3401      	addgt	r4, #1
 80155e2:	e7f4      	b.n	80155ce <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 80155e4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 80155e8:	1b49      	subs	r1, r1, r5
 80155ea:	1b1b      	subs	r3, r3, r4
 80155ec:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 80155f0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80155f4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80155f8:	4293      	cmp	r3, r2
 80155fa:	dd03      	ble.n	8015604 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 80155fc:	3b01      	subs	r3, #1
 80155fe:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015602:	e7f7      	b.n	80155f4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8015604:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08015608 <_ZN8touchgfx11Application15handleTickEventEv>:
 8015608:	b570      	push	{r4, r5, r6, lr}
 801560a:	4d16      	ldr	r5, [pc, #88]	; (8015664 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 801560c:	4604      	mov	r4, r0
 801560e:	6828      	ldr	r0, [r5, #0]
 8015610:	b140      	cbz	r0, 8015624 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015612:	7a03      	ldrb	r3, [r0, #8]
 8015614:	b933      	cbnz	r3, 8015624 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015616:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801561a:	6803      	ldr	r3, [r0, #0]
 801561c:	689b      	ldr	r3, [r3, #8]
 801561e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015622:	4718      	bx	r3
 8015624:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8015628:	4e0f      	ldr	r6, [pc, #60]	; (8015668 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801562a:	b973      	cbnz	r3, 801564a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801562c:	b168      	cbz	r0, 801564a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801562e:	7a03      	ldrb	r3, [r0, #8]
 8015630:	b15b      	cbz	r3, 801564a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015632:	6830      	ldr	r0, [r6, #0]
 8015634:	b110      	cbz	r0, 801563c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8015636:	6803      	ldr	r3, [r0, #0]
 8015638:	691b      	ldr	r3, [r3, #16]
 801563a:	4798      	blx	r3
 801563c:	6828      	ldr	r0, [r5, #0]
 801563e:	6803      	ldr	r3, [r0, #0]
 8015640:	68db      	ldr	r3, [r3, #12]
 8015642:	4798      	blx	r3
 8015644:	2301      	movs	r3, #1
 8015646:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801564a:	3404      	adds	r4, #4
 801564c:	4620      	mov	r0, r4
 801564e:	f7ff ff45 	bl	80154dc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8015652:	4620      	mov	r0, r4
 8015654:	f7ff ffa0 	bl	8015598 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015658:	6830      	ldr	r0, [r6, #0]
 801565a:	b110      	cbz	r0, 8015662 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 801565c:	6803      	ldr	r3, [r0, #0]
 801565e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015660:	e7dd      	b.n	801561e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8015662:	bd70      	pop	{r4, r5, r6, pc}
 8015664:	20012f74 	.word	0x20012f74
 8015668:	20012f70 	.word	0x20012f70

0801566c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 801566c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801566e:	2300      	movs	r3, #0
 8015670:	4604      	mov	r4, r0
 8015672:	460d      	mov	r5, r1
 8015674:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8015678:	4618      	mov	r0, r3
 801567a:	b29a      	uxth	r2, r3
 801567c:	4291      	cmp	r1, r2
 801567e:	d911      	bls.n	80156a4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8015680:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8015684:	18e6      	adds	r6, r4, r3
 8015686:	42af      	cmp	r7, r5
 8015688:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 801568c:	d105      	bne.n	801569a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 801568e:	2aff      	cmp	r2, #255	; 0xff
 8015690:	d002      	beq.n	8015698 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015692:	3201      	adds	r2, #1
 8015694:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8015698:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801569a:	2a00      	cmp	r2, #0
 801569c:	bf08      	it	eq
 801569e:	2001      	moveq	r0, #1
 80156a0:	3301      	adds	r3, #1
 80156a2:	e7ea      	b.n	801567a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 80156a4:	b120      	cbz	r0, 80156b0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 80156a6:	2920      	cmp	r1, #32
 80156a8:	d102      	bne.n	80156b0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 80156aa:	4620      	mov	r0, r4
 80156ac:	f7ff ff74 	bl	8015598 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80156b0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 80156b4:	2b1f      	cmp	r3, #31
 80156b6:	d8ef      	bhi.n	8015698 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 80156b8:	18e2      	adds	r2, r4, r3
 80156ba:	2101      	movs	r1, #1
 80156bc:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 80156c0:	185a      	adds	r2, r3, r1
 80156c2:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 80156c6:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80156ca:	e7e5      	b.n	8015698 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

080156cc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80156cc:	4603      	mov	r3, r0
 80156ce:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80156d2:	2200      	movs	r2, #0
 80156d4:	801a      	strh	r2, [r3, #0]
 80156d6:	805a      	strh	r2, [r3, #2]
 80156d8:	809a      	strh	r2, [r3, #4]
 80156da:	80da      	strh	r2, [r3, #6]
 80156dc:	3308      	adds	r3, #8
 80156de:	428b      	cmp	r3, r1
 80156e0:	d1f8      	bne.n	80156d4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80156e2:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80156e6:	4770      	bx	lr

080156e8 <_ZN8touchgfx11ApplicationC1Ev>:
 80156e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80156ea:	4606      	mov	r6, r0
 80156ec:	4b1c      	ldr	r3, [pc, #112]	; (8015760 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80156ee:	f846 3b04 	str.w	r3, [r6], #4
 80156f2:	4604      	mov	r4, r0
 80156f4:	2500      	movs	r5, #0
 80156f6:	22a8      	movs	r2, #168	; 0xa8
 80156f8:	2100      	movs	r1, #0
 80156fa:	4630      	mov	r0, r6
 80156fc:	f014 ff4f 	bl	802a59e <memset>
 8015700:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8015704:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015708:	f7ff ffe0 	bl	80156cc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801570c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015710:	f7ff ffdc 	bl	80156cc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015714:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8015718:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 801571c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8015720:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8015724:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8015728:	490e      	ldr	r1, [pc, #56]	; (8015764 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801572a:	480f      	ldr	r0, [pc, #60]	; (8015768 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 801572c:	4f0f      	ldr	r7, [pc, #60]	; (801576c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801572e:	f010 fde9 	bl	8026304 <CRC_Lock>
 8015732:	4b0f      	ldr	r3, [pc, #60]	; (8015770 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8015734:	b158      	cbz	r0, 801574e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8015736:	801d      	strh	r5, [r3, #0]
 8015738:	4a0e      	ldr	r2, [pc, #56]	; (8015774 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801573a:	2300      	movs	r3, #0
 801573c:	6013      	str	r3, [r2, #0]
 801573e:	4a0e      	ldr	r2, [pc, #56]	; (8015778 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8015740:	603b      	str	r3, [r7, #0]
 8015742:	4630      	mov	r0, r6
 8015744:	6013      	str	r3, [r2, #0]
 8015746:	f7ff ff01 	bl	801554c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801574a:	4620      	mov	r0, r4
 801574c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801574e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8015752:	2002      	movs	r0, #2
 8015754:	801a      	strh	r2, [r3, #0]
 8015756:	6038      	str	r0, [r7, #0]
 8015758:	f001 fb4a 	bl	8016df0 <_ZN8touchgfx6Screen4drawEv>
 801575c:	e7ec      	b.n	8015738 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801575e:	bf00      	nop
 8015760:	0802e948 	.word	0x0802e948
 8015764:	b5e8b5cd 	.word	0xb5e8b5cd
 8015768:	f407a5c2 	.word	0xf407a5c2
 801576c:	20012f70 	.word	0x20012f70
 8015770:	20000088 	.word	0x20000088
 8015774:	20012f80 	.word	0x20012f80
 8015778:	20012f74 	.word	0x20012f74

0801577c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801577c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8015780:	3b01      	subs	r3, #1
 8015782:	b29b      	uxth	r3, r3
 8015784:	428b      	cmp	r3, r1
 8015786:	b510      	push	{r4, lr}
 8015788:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801578c:	d908      	bls.n	80157a0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801578e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8015792:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8015796:	681a      	ldr	r2, [r3, #0]
 8015798:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801579c:	685a      	ldr	r2, [r3, #4]
 801579e:	6062      	str	r2, [r4, #4]
 80157a0:	bd10      	pop	{r4, pc}
	...

080157a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80157a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80157a8:	4b8f      	ldr	r3, [pc, #572]	; (80159e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 80157aa:	b08f      	sub	sp, #60	; 0x3c
 80157ac:	ac0a      	add	r4, sp, #40	; 0x28
 80157ae:	e884 0006 	stmia.w	r4, {r1, r2}
 80157b2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80157b6:	4b8d      	ldr	r3, [pc, #564]	; (80159ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 80157b8:	4683      	mov	fp, r0
 80157ba:	f9b3 1000 	ldrsh.w	r1, [r3]
 80157be:	4620      	mov	r0, r4
 80157c0:	f7ff fda1 	bl	8015306 <_ZN8touchgfx4Rect10restrictToEss>
 80157c4:	4620      	mov	r0, r4
 80157c6:	f7fa fd8c 	bl	80102e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80157ca:	2800      	cmp	r0, #0
 80157cc:	d16a      	bne.n	80158a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80157ce:	9403      	str	r4, [sp, #12]
 80157d0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80157d4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80157d8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80157dc:	35a4      	adds	r5, #164	; 0xa4
 80157de:	9301      	str	r3, [sp, #4]
 80157e0:	b15c      	cbz	r4, 80157fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 80157e2:	4629      	mov	r1, r5
 80157e4:	9803      	ldr	r0, [sp, #12]
 80157e6:	f7ff fddf 	bl	80153a8 <_ZNK8touchgfx4Rect8includesERKS0_>
 80157ea:	3c01      	subs	r4, #1
 80157ec:	b118      	cbz	r0, 80157f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 80157ee:	b2a1      	uxth	r1, r4
 80157f0:	9801      	ldr	r0, [sp, #4]
 80157f2:	f7ff ffc3 	bl	801577c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80157f6:	3d08      	subs	r5, #8
 80157f8:	e7f2      	b.n	80157e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80157fa:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 80157fe:	f8cd a010 	str.w	sl, [sp, #16]
 8015802:	f10a 33ff 	add.w	r3, sl, #4294967295
 8015806:	9302      	str	r3, [sp, #8]
 8015808:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801580c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8015810:	9306      	str	r3, [sp, #24]
 8015812:	445c      	add	r4, fp
 8015814:	2500      	movs	r5, #0
 8015816:	4626      	mov	r6, r4
 8015818:	f8cd a014 	str.w	sl, [sp, #20]
 801581c:	462f      	mov	r7, r5
 801581e:	9b05      	ldr	r3, [sp, #20]
 8015820:	2b00      	cmp	r3, #0
 8015822:	d073      	beq.n	801590c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8015824:	9903      	ldr	r1, [sp, #12]
 8015826:	4630      	mov	r0, r6
 8015828:	f7ff fd4b 	bl	80152c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801582c:	b350      	cbz	r0, 8015884 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801582e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8015832:	f9b6 c000 	ldrsh.w	ip, [r6]
 8015836:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 801583a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801583e:	45e6      	cmp	lr, ip
 8015840:	db33      	blt.n	80158aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015842:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015846:	88b3      	ldrh	r3, [r6, #4]
 8015848:	4472      	add	r2, lr
 801584a:	4463      	add	r3, ip
 801584c:	b212      	sxth	r2, r2
 801584e:	b21b      	sxth	r3, r3
 8015850:	429a      	cmp	r2, r3
 8015852:	dc2a      	bgt.n	80158aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015854:	88f3      	ldrh	r3, [r6, #6]
 8015856:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801585a:	fa1f f289 	uxth.w	r2, r9
 801585e:	4413      	add	r3, r2
 8015860:	b29b      	uxth	r3, r3
 8015862:	45c8      	cmp	r8, r9
 8015864:	fa1f fc88 	uxth.w	ip, r8
 8015868:	fa0f fe83 	sxth.w	lr, r3
 801586c:	db0f      	blt.n	801588e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801586e:	eba3 030c 	sub.w	r3, r3, ip
 8015872:	1ac9      	subs	r1, r1, r3
 8015874:	b209      	sxth	r1, r1
 8015876:	2900      	cmp	r1, #0
 8015878:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801587c:	dd12      	ble.n	80158a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801587e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8015882:	4605      	mov	r5, r0
 8015884:	9b05      	ldr	r3, [sp, #20]
 8015886:	3b01      	subs	r3, #1
 8015888:	9305      	str	r3, [sp, #20]
 801588a:	3e08      	subs	r6, #8
 801588c:	e7c7      	b.n	801581e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801588e:	4461      	add	r1, ip
 8015890:	b209      	sxth	r1, r1
 8015892:	4571      	cmp	r1, lr
 8015894:	dc38      	bgt.n	8015908 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015896:	eba2 020c 	sub.w	r2, r2, ip
 801589a:	b212      	sxth	r2, r2
 801589c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80158a0:	2a00      	cmp	r2, #0
 80158a2:	dcee      	bgt.n	8015882 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80158a4:	b00f      	add	sp, #60	; 0x3c
 80158a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80158aa:	45c8      	cmp	r8, r9
 80158ac:	db2c      	blt.n	8015908 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80158ae:	88f3      	ldrh	r3, [r6, #6]
 80158b0:	4499      	add	r9, r3
 80158b2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80158b6:	4498      	add	r8, r3
 80158b8:	fa0f f989 	sxth.w	r9, r9
 80158bc:	fa0f f888 	sxth.w	r8, r8
 80158c0:	45c1      	cmp	r9, r8
 80158c2:	db21      	blt.n	8015908 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80158c4:	88b3      	ldrh	r3, [r6, #4]
 80158c6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80158ca:	fa1f f28c 	uxth.w	r2, ip
 80158ce:	4413      	add	r3, r2
 80158d0:	b29b      	uxth	r3, r3
 80158d2:	45e6      	cmp	lr, ip
 80158d4:	fa1f f88e 	uxth.w	r8, lr
 80158d8:	fa0f f983 	sxth.w	r9, r3
 80158dc:	db0a      	blt.n	80158f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80158de:	eba3 0308 	sub.w	r3, r3, r8
 80158e2:	1ac9      	subs	r1, r1, r3
 80158e4:	b209      	sxth	r1, r1
 80158e6:	2900      	cmp	r1, #0
 80158e8:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80158ec:	ddda      	ble.n	80158a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80158ee:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80158f2:	e7c6      	b.n	8015882 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80158f4:	4441      	add	r1, r8
 80158f6:	b209      	sxth	r1, r1
 80158f8:	4549      	cmp	r1, r9
 80158fa:	dc05      	bgt.n	8015908 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80158fc:	eba2 0208 	sub.w	r2, r2, r8
 8015900:	b212      	sxth	r2, r2
 8015902:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8015906:	e7cb      	b.n	80158a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8015908:	4607      	mov	r7, r0
 801590a:	e7bb      	b.n	8015884 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801590c:	2d00      	cmp	r5, #0
 801590e:	d181      	bne.n	8015814 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8015910:	2f00      	cmp	r7, #0
 8015912:	f000 81dd 	beq.w	8015cd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015916:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801591a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 801591e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8015922:	b2b3      	uxth	r3, r6
 8015924:	9305      	str	r3, [sp, #20]
 8015926:	9a05      	ldr	r2, [sp, #20]
 8015928:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801592c:	4413      	add	r3, r2
 801592e:	b2ba      	uxth	r2, r7
 8015930:	4492      	add	sl, r2
 8015932:	b29b      	uxth	r3, r3
 8015934:	fa1f fa8a 	uxth.w	sl, sl
 8015938:	fa0f f883 	sxth.w	r8, r3
 801593c:	fa0f f98a 	sxth.w	r9, sl
 8015940:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8015944:	9b04      	ldr	r3, [sp, #16]
 8015946:	2b00      	cmp	r3, #0
 8015948:	d052      	beq.n	80159f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801594a:	9903      	ldr	r1, [sp, #12]
 801594c:	4620      	mov	r0, r4
 801594e:	f7ff fcb8 	bl	80152c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015952:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8015956:	b1c0      	cbz	r0, 801598a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015958:	f9b4 e000 	ldrsh.w	lr, [r4]
 801595c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8015960:	4576      	cmp	r6, lr
 8015962:	dc22      	bgt.n	80159aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015964:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015968:	44f4      	add	ip, lr
 801596a:	fa0f fc8c 	sxth.w	ip, ip
 801596e:	45e0      	cmp	r8, ip
 8015970:	db1b      	blt.n	80159aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015972:	428f      	cmp	r7, r1
 8015974:	fa1f fc81 	uxth.w	ip, r1
 8015978:	88e1      	ldrh	r1, [r4, #6]
 801597a:	dc0d      	bgt.n	8015998 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801597c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8015980:	eba1 010c 	sub.w	r1, r1, ip
 8015984:	f8a4 9002 	strh.w	r9, [r4, #2]
 8015988:	80e1      	strh	r1, [r4, #6]
 801598a:	4628      	mov	r0, r5
 801598c:	9904      	ldr	r1, [sp, #16]
 801598e:	3901      	subs	r1, #1
 8015990:	9104      	str	r1, [sp, #16]
 8015992:	3c08      	subs	r4, #8
 8015994:	4605      	mov	r5, r0
 8015996:	e7d3      	b.n	8015940 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8015998:	4461      	add	r1, ip
 801599a:	b209      	sxth	r1, r1
 801599c:	4549      	cmp	r1, r9
 801599e:	dcf5      	bgt.n	801598c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80159a0:	eba2 0c0c 	sub.w	ip, r2, ip
 80159a4:	f8a4 c006 	strh.w	ip, [r4, #6]
 80159a8:	e7ef      	b.n	801598a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80159aa:	428f      	cmp	r7, r1
 80159ac:	dcee      	bgt.n	801598c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80159ae:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80159b2:	4461      	add	r1, ip
 80159b4:	b209      	sxth	r1, r1
 80159b6:	4589      	cmp	r9, r1
 80159b8:	dbe8      	blt.n	801598c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80159ba:	4576      	cmp	r6, lr
 80159bc:	fa1f fc8e 	uxth.w	ip, lr
 80159c0:	88a1      	ldrh	r1, [r4, #4]
 80159c2:	dc07      	bgt.n	80159d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80159c4:	eba3 0c0c 	sub.w	ip, r3, ip
 80159c8:	eba1 010c 	sub.w	r1, r1, ip
 80159cc:	f8a4 8000 	strh.w	r8, [r4]
 80159d0:	80a1      	strh	r1, [r4, #4]
 80159d2:	e7da      	b.n	801598a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80159d4:	4461      	add	r1, ip
 80159d6:	b209      	sxth	r1, r1
 80159d8:	4588      	cmp	r8, r1
 80159da:	dbd7      	blt.n	801598c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80159dc:	9905      	ldr	r1, [sp, #20]
 80159de:	eba1 0c0c 	sub.w	ip, r1, ip
 80159e2:	f8a4 c004 	strh.w	ip, [r4, #4]
 80159e6:	e7d0      	b.n	801598a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80159e8:	20012f22 	.word	0x20012f22
 80159ec:	20012f20 	.word	0x20012f20
 80159f0:	2d00      	cmp	r5, #0
 80159f2:	f000 816d 	beq.w	8015cd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80159f6:	9b06      	ldr	r3, [sp, #24]
 80159f8:	445b      	add	r3, fp
 80159fa:	461c      	mov	r4, r3
 80159fc:	9b02      	ldr	r3, [sp, #8]
 80159fe:	3301      	adds	r3, #1
 8015a00:	f000 8166 	beq.w	8015cd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015a04:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8015a08:	4629      	mov	r1, r5
 8015a0a:	9803      	ldr	r0, [sp, #12]
 8015a0c:	f7ff fccc 	bl	80153a8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8015a10:	b120      	cbz	r0, 8015a1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8015a12:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015a16:	9801      	ldr	r0, [sp, #4]
 8015a18:	f7ff feb0 	bl	801577c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015a1c:	9903      	ldr	r1, [sp, #12]
 8015a1e:	4628      	mov	r0, r5
 8015a20:	f7ff fc4f 	bl	80152c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015a24:	2800      	cmp	r0, #0
 8015a26:	f000 809c 	beq.w	8015b62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8015a2a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8015a2e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015a32:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015a36:	9309      	str	r3, [sp, #36]	; 0x24
 8015a38:	fa1f f189 	uxth.w	r1, r9
 8015a3c:	eb01 0c03 	add.w	ip, r1, r3
 8015a40:	fa1f fa8c 	uxth.w	sl, ip
 8015a44:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8015a48:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8015a4c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8015a50:	b283      	uxth	r3, r0
 8015a52:	eb03 050c 	add.w	r5, r3, ip
 8015a56:	b2ad      	uxth	r5, r5
 8015a58:	9505      	str	r5, [sp, #20]
 8015a5a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8015a5e:	9504      	str	r5, [sp, #16]
 8015a60:	4548      	cmp	r0, r9
 8015a62:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8015a66:	f340 8099 	ble.w	8015b9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8015a6a:	1a5b      	subs	r3, r3, r1
 8015a6c:	b29b      	uxth	r3, r3
 8015a6e:	4596      	cmp	lr, r2
 8015a70:	fa0f f08a 	sxth.w	r0, sl
 8015a74:	b21e      	sxth	r6, r3
 8015a76:	dd2e      	ble.n	8015ad6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8015a78:	9f02      	ldr	r7, [sp, #8]
 8015a7a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8015a7e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8015a82:	9f04      	ldr	r7, [sp, #16]
 8015a84:	1a3f      	subs	r7, r7, r0
 8015a86:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8015a8a:	fa1f fe8e 	uxth.w	lr, lr
 8015a8e:	b292      	uxth	r2, r2
 8015a90:	ebae 0102 	sub.w	r1, lr, r2
 8015a94:	44a6      	add	lr, r4
 8015a96:	4402      	add	r2, r0
 8015a98:	b289      	uxth	r1, r1
 8015a9a:	fa0f fe8e 	sxth.w	lr, lr
 8015a9e:	b212      	sxth	r2, r2
 8015aa0:	b20d      	sxth	r5, r1
 8015aa2:	ebae 0202 	sub.w	r2, lr, r2
 8015aa6:	436f      	muls	r7, r5
 8015aa8:	4372      	muls	r2, r6
 8015aaa:	4297      	cmp	r7, r2
 8015aac:	db09      	blt.n	8015ac2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8015aae:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8015ab2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8015ab6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8015aba:	449c      	add	ip, r3
 8015abc:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015ac0:	e686      	b.n	80157d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015ac2:	4421      	add	r1, r4
 8015ac4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8015ac8:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8015acc:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015ad0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015ad4:	e67c      	b.n	80157d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015ad6:	9f04      	ldr	r7, [sp, #16]
 8015ad8:	42b8      	cmp	r0, r7
 8015ada:	da27      	bge.n	8015b2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8015adc:	9902      	ldr	r1, [sp, #8]
 8015ade:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8015ae2:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8015ae6:	eb05 010e 	add.w	r1, r5, lr
 8015aea:	fa1f f881 	uxth.w	r8, r1
 8015aee:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8015af2:	4411      	add	r1, r2
 8015af4:	eba1 0108 	sub.w	r1, r1, r8
 8015af8:	b289      	uxth	r1, r1
 8015afa:	fa0f f988 	sxth.w	r9, r8
 8015afe:	eba2 020e 	sub.w	r2, r2, lr
 8015b02:	fa0f f881 	sxth.w	r8, r1
 8015b06:	1a3f      	subs	r7, r7, r0
 8015b08:	4372      	muls	r2, r6
 8015b0a:	fb08 f707 	mul.w	r7, r8, r7
 8015b0e:	42ba      	cmp	r2, r7
 8015b10:	dc06      	bgt.n	8015b20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8015b12:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8015b16:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8015b1a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8015b1e:	e7ca      	b.n	8015ab6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8015b20:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8015b24:	4429      	add	r1, r5
 8015b26:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015b2a:	e651      	b.n	80157d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015b2c:	9805      	ldr	r0, [sp, #20]
 8015b2e:	ebaa 0000 	sub.w	r0, sl, r0
 8015b32:	b280      	uxth	r0, r0
 8015b34:	2d06      	cmp	r5, #6
 8015b36:	fa0f fe80 	sxth.w	lr, r0
 8015b3a:	d817      	bhi.n	8015b6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8015b3c:	9b04      	ldr	r3, [sp, #16]
 8015b3e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015b42:	1c6b      	adds	r3, r5, #1
 8015b44:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8015b48:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8015b4c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015b50:	9b01      	ldr	r3, [sp, #4]
 8015b52:	9801      	ldr	r0, [sp, #4]
 8015b54:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015b58:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8015b5c:	805a      	strh	r2, [r3, #2]
 8015b5e:	809e      	strh	r6, [r3, #4]
 8015b60:	80d9      	strh	r1, [r3, #6]
 8015b62:	9b02      	ldr	r3, [sp, #8]
 8015b64:	3b01      	subs	r3, #1
 8015b66:	9302      	str	r3, [sp, #8]
 8015b68:	3c08      	subs	r4, #8
 8015b6a:	e747      	b.n	80159fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8015b6c:	9a02      	ldr	r2, [sp, #8]
 8015b6e:	45b6      	cmp	lr, r6
 8015b70:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015b74:	db0d      	blt.n	8015b92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8015b76:	449c      	add	ip, r3
 8015b78:	fa1f fc8c 	uxth.w	ip, ip
 8015b7c:	445a      	add	r2, fp
 8015b7e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015b82:	448c      	add	ip, r1
 8015b84:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8015b88:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8015b8c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8015b90:	e61e      	b.n	80157d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015b92:	445a      	add	r2, fp
 8015b94:	4484      	add	ip, r0
 8015b96:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8015b9a:	e78f      	b.n	8015abc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015b9c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8015ba0:	fa1f f18e 	uxth.w	r1, lr
 8015ba4:	eb01 0806 	add.w	r8, r1, r6
 8015ba8:	b293      	uxth	r3, r2
 8015baa:	fa1f f888 	uxth.w	r8, r8
 8015bae:	9306      	str	r3, [sp, #24]
 8015bb0:	fa0f f388 	sxth.w	r3, r8
 8015bb4:	9307      	str	r3, [sp, #28]
 8015bb6:	9f06      	ldr	r7, [sp, #24]
 8015bb8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8015bbc:	443b      	add	r3, r7
 8015bbe:	b29b      	uxth	r3, r3
 8015bc0:	4596      	cmp	lr, r2
 8015bc2:	9308      	str	r3, [sp, #32]
 8015bc4:	da24      	bge.n	8015c10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8015bc6:	9905      	ldr	r1, [sp, #20]
 8015bc8:	eba3 0308 	sub.w	r3, r3, r8
 8015bcc:	ebaa 0401 	sub.w	r4, sl, r1
 8015bd0:	b2a4      	uxth	r4, r4
 8015bd2:	b29b      	uxth	r3, r3
 8015bd4:	b225      	sxth	r5, r4
 8015bd6:	b219      	sxth	r1, r3
 8015bd8:	eba2 020e 	sub.w	r2, r2, lr
 8015bdc:	eba9 0000 	sub.w	r0, r9, r0
 8015be0:	436a      	muls	r2, r5
 8015be2:	4348      	muls	r0, r1
 8015be4:	4282      	cmp	r2, r0
 8015be6:	9a02      	ldr	r2, [sp, #8]
 8015be8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015bec:	445a      	add	r2, fp
 8015bee:	dc06      	bgt.n	8015bfe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8015bf0:	9b07      	ldr	r3, [sp, #28]
 8015bf2:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8015bf6:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8015bfa:	44a4      	add	ip, r4
 8015bfc:	e75e      	b.n	8015abc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015bfe:	9904      	ldr	r1, [sp, #16]
 8015c00:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8015c04:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8015c08:	4433      	add	r3, r6
 8015c0a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015c0e:	e5df      	b.n	80157d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015c10:	9f06      	ldr	r7, [sp, #24]
 8015c12:	9b04      	ldr	r3, [sp, #16]
 8015c14:	1bc9      	subs	r1, r1, r7
 8015c16:	fa0f f78a 	sxth.w	r7, sl
 8015c1a:	b289      	uxth	r1, r1
 8015c1c:	429f      	cmp	r7, r3
 8015c1e:	fa0f fe81 	sxth.w	lr, r1
 8015c22:	dd23      	ble.n	8015c6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8015c24:	9a05      	ldr	r2, [sp, #20]
 8015c26:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8015c2a:	9d07      	ldr	r5, [sp, #28]
 8015c2c:	ebaa 0202 	sub.w	r2, sl, r2
 8015c30:	b292      	uxth	r2, r2
 8015c32:	eba5 0a03 	sub.w	sl, r5, r3
 8015c36:	b214      	sxth	r4, r2
 8015c38:	eba9 0000 	sub.w	r0, r9, r0
 8015c3c:	9b02      	ldr	r3, [sp, #8]
 8015c3e:	fb0e f000 	mul.w	r0, lr, r0
 8015c42:	fb04 fa0a 	mul.w	sl, r4, sl
 8015c46:	00db      	lsls	r3, r3, #3
 8015c48:	4550      	cmp	r0, sl
 8015c4a:	445b      	add	r3, fp
 8015c4c:	db03      	blt.n	8015c56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8015c4e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8015c52:	4494      	add	ip, r2
 8015c54:	e732      	b.n	8015abc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015c56:	9a04      	ldr	r2, [sp, #16]
 8015c58:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8015c5c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8015c60:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8015c64:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015c68:	4431      	add	r1, r6
 8015c6a:	e75c      	b.n	8015b26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8015c6c:	9b08      	ldr	r3, [sp, #32]
 8015c6e:	eba3 0308 	sub.w	r3, r3, r8
 8015c72:	b29b      	uxth	r3, r3
 8015c74:	2d06      	cmp	r5, #6
 8015c76:	b218      	sxth	r0, r3
 8015c78:	d813      	bhi.n	8015ca2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8015c7a:	9b07      	ldr	r3, [sp, #28]
 8015c7c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8015c80:	1c6b      	adds	r3, r5, #1
 8015c82:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8015c86:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015c8a:	9b01      	ldr	r3, [sp, #4]
 8015c8c:	9901      	ldr	r1, [sp, #4]
 8015c8e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015c92:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8015c96:	805a      	strh	r2, [r3, #2]
 8015c98:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015c9a:	809a      	strh	r2, [r3, #4]
 8015c9c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8015ca0:	e75f      	b.n	8015b62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8015ca2:	9c02      	ldr	r4, [sp, #8]
 8015ca4:	4570      	cmp	r0, lr
 8015ca6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8015caa:	db0d      	blt.n	8015cc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8015cac:	4431      	add	r1, r6
 8015cae:	9b06      	ldr	r3, [sp, #24]
 8015cb0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8015cb4:	b289      	uxth	r1, r1
 8015cb6:	445c      	add	r4, fp
 8015cb8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015cbc:	4419      	add	r1, r3
 8015cbe:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8015cc2:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8015cc6:	e583      	b.n	80157d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015cc8:	445c      	add	r4, fp
 8015cca:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8015cce:	e79b      	b.n	8015c08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8015cd0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8015cd4:	1e65      	subs	r5, r4, #1
 8015cd6:	b2ad      	uxth	r5, r5
 8015cd8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8015cdc:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8015ce0:	42b5      	cmp	r5, r6
 8015ce2:	d044      	beq.n	8015d6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8015ce4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8015ce8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8015cec:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8015cf0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8015cf4:	4282      	cmp	r2, r0
 8015cf6:	d11f      	bne.n	8015d38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015cf8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8015cfc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015d00:	459c      	cmp	ip, r3
 8015d02:	d119      	bne.n	8015d38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015d04:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8015d08:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015d0c:	19d8      	adds	r0, r3, r7
 8015d0e:	b200      	sxth	r0, r0
 8015d10:	4288      	cmp	r0, r1
 8015d12:	d109      	bne.n	8015d28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8015d14:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8015d18:	4413      	add	r3, r2
 8015d1a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8015d1e:	4629      	mov	r1, r5
 8015d20:	9801      	ldr	r0, [sp, #4]
 8015d22:	f7ff fd2b 	bl	801577c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015d26:	e003      	b.n	8015d30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015d28:	4411      	add	r1, r2
 8015d2a:	b209      	sxth	r1, r1
 8015d2c:	42b9      	cmp	r1, r7
 8015d2e:	d0f3      	beq.n	8015d18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8015d30:	3d01      	subs	r5, #1
 8015d32:	b2ad      	uxth	r5, r5
 8015d34:	3c08      	subs	r4, #8
 8015d36:	e7d3      	b.n	8015ce0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8015d38:	42b9      	cmp	r1, r7
 8015d3a:	d1f9      	bne.n	8015d30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015d3c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8015d40:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015d44:	4299      	cmp	r1, r3
 8015d46:	d1f3      	bne.n	8015d30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015d48:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8015d4c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015d50:	181f      	adds	r7, r3, r0
 8015d52:	b23f      	sxth	r7, r7
 8015d54:	42ba      	cmp	r2, r7
 8015d56:	d105      	bne.n	8015d64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8015d58:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8015d5c:	440b      	add	r3, r1
 8015d5e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015d62:	e7dc      	b.n	8015d1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8015d64:	440a      	add	r2, r1
 8015d66:	b212      	sxth	r2, r2
 8015d68:	4290      	cmp	r0, r2
 8015d6a:	d1e1      	bne.n	8015d30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015d6c:	e7f6      	b.n	8015d5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8015d6e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8015d72:	2e07      	cmp	r6, #7
 8015d74:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8015d78:	d812      	bhi.n	8015da0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8015d7a:	1c75      	adds	r5, r6, #1
 8015d7c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8015d80:	9d01      	ldr	r5, [sp, #4]
 8015d82:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015d86:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8015d8a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8015d8e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8015d92:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8015d96:	442c      	add	r4, r5
 8015d98:	8061      	strh	r1, [r4, #2]
 8015d9a:	80a2      	strh	r2, [r4, #4]
 8015d9c:	80e3      	strh	r3, [r4, #6]
 8015d9e:	e581      	b.n	80158a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015da0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8015da4:	3e01      	subs	r6, #1
 8015da6:	445c      	add	r4, fp
 8015da8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8015dac:	f04f 37ff 	mov.w	r7, #4294967295
 8015db0:	2500      	movs	r5, #0
 8015db2:	9305      	str	r3, [sp, #20]
 8015db4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015db8:	9302      	str	r3, [sp, #8]
 8015dba:	1e72      	subs	r2, r6, #1
 8015dbc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015dc0:	9304      	str	r3, [sp, #16]
 8015dc2:	4691      	mov	r9, r2
 8015dc4:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8015dc8:	f1b9 3fff 	cmp.w	r9, #4294967295
 8015dcc:	bf14      	ite	ne
 8015dce:	9905      	ldrne	r1, [sp, #20]
 8015dd0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8015dd4:	6818      	ldr	r0, [r3, #0]
 8015dd6:	9207      	str	r2, [sp, #28]
 8015dd8:	bf18      	it	ne
 8015dda:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8015dde:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8015de2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8015de6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8015dea:	9306      	str	r3, [sp, #24]
 8015dec:	fb18 f801 	smulbb	r8, r8, r1
 8015df0:	6859      	ldr	r1, [r3, #4]
 8015df2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8015df6:	4671      	mov	r1, lr
 8015df8:	a80c      	add	r0, sp, #48	; 0x30
 8015dfa:	f7ff fafb 	bl	80153f4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015dfe:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8015e02:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8015e06:	9b04      	ldr	r3, [sp, #16]
 8015e08:	9a02      	ldr	r2, [sp, #8]
 8015e0a:	fb10 f001 	smulbb	r0, r0, r1
 8015e0e:	fb02 8803 	mla	r8, r2, r3, r8
 8015e12:	eba0 0108 	sub.w	r1, r0, r8
 8015e16:	f04f 0c08 	mov.w	ip, #8
 8015e1a:	fb90 f0fc 	sdiv	r0, r0, ip
 8015e1e:	4288      	cmp	r0, r1
 8015e20:	dc20      	bgt.n	8015e64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8015e22:	4551      	cmp	r1, sl
 8015e24:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8015e28:	da03      	bge.n	8015e32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8015e2a:	b1d9      	cbz	r1, 8015e64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8015e2c:	468a      	mov	sl, r1
 8015e2e:	464f      	mov	r7, r9
 8015e30:	4635      	mov	r5, r6
 8015e32:	f109 39ff 	add.w	r9, r9, #4294967295
 8015e36:	f119 0f02 	cmn.w	r9, #2
 8015e3a:	d1c5      	bne.n	8015dc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8015e3c:	4616      	mov	r6, r2
 8015e3e:	3201      	adds	r2, #1
 8015e40:	f1a4 0408 	sub.w	r4, r4, #8
 8015e44:	d1b6      	bne.n	8015db4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8015e46:	9b01      	ldr	r3, [sp, #4]
 8015e48:	b2ac      	uxth	r4, r5
 8015e4a:	00ed      	lsls	r5, r5, #3
 8015e4c:	1958      	adds	r0, r3, r5
 8015e4e:	1c7b      	adds	r3, r7, #1
 8015e50:	d10b      	bne.n	8015e6a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8015e52:	4601      	mov	r1, r0
 8015e54:	9803      	ldr	r0, [sp, #12]
 8015e56:	f7ff facd 	bl	80153f4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015e5a:	4621      	mov	r1, r4
 8015e5c:	9801      	ldr	r0, [sp, #4]
 8015e5e:	f7ff fc8d 	bl	801577c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015e62:	e4b5      	b.n	80157d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015e64:	464f      	mov	r7, r9
 8015e66:	4635      	mov	r5, r6
 8015e68:	e7ed      	b.n	8015e46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8015e6a:	9b01      	ldr	r3, [sp, #4]
 8015e6c:	00ff      	lsls	r7, r7, #3
 8015e6e:	19d9      	adds	r1, r3, r7
 8015e70:	f7ff fac0 	bl	80153f4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015e74:	9b03      	ldr	r3, [sp, #12]
 8015e76:	cb03      	ldmia	r3!, {r0, r1}
 8015e78:	445f      	add	r7, fp
 8015e7a:	445d      	add	r5, fp
 8015e7c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8015e80:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8015e84:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8015e88:	9b03      	ldr	r3, [sp, #12]
 8015e8a:	6869      	ldr	r1, [r5, #4]
 8015e8c:	c303      	stmia	r3!, {r0, r1}
 8015e8e:	e7e4      	b.n	8015e5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08015e90 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8015e90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e94:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8015e98:	b09b      	sub	sp, #108	; 0x6c
 8015e9a:	4604      	mov	r4, r0
 8015e9c:	4630      	mov	r0, r6
 8015e9e:	f7fa fa20 	bl	80102e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015ea2:	4605      	mov	r5, r0
 8015ea4:	b948      	cbnz	r0, 8015eba <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8015ea6:	6823      	ldr	r3, [r4, #0]
 8015ea8:	e896 0006 	ldmia.w	r6, {r1, r2}
 8015eac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015eae:	4620      	mov	r0, r4
 8015eb0:	4798      	blx	r3
 8015eb2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8015eb6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8015eba:	4bc6      	ldr	r3, [pc, #792]	; (80161d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8015ebc:	681b      	ldr	r3, [r3, #0]
 8015ebe:	2b00      	cmp	r3, #0
 8015ec0:	d03f      	beq.n	8015f42 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015ec2:	4dc5      	ldr	r5, [pc, #788]	; (80161d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8015ec4:	4628      	mov	r0, r5
 8015ec6:	f7fa fa0c 	bl	80102e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015eca:	4606      	mov	r6, r0
 8015ecc:	2800      	cmp	r0, #0
 8015ece:	d138      	bne.n	8015f42 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015ed0:	4628      	mov	r0, r5
 8015ed2:	f7ff f907 	bl	80150e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015ed6:	6823      	ldr	r3, [r4, #0]
 8015ed8:	6829      	ldr	r1, [r5, #0]
 8015eda:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015edc:	686a      	ldr	r2, [r5, #4]
 8015ede:	4620      	mov	r0, r4
 8015ee0:	4798      	blx	r3
 8015ee2:	802e      	strh	r6, [r5, #0]
 8015ee4:	806e      	strh	r6, [r5, #2]
 8015ee6:	80ae      	strh	r6, [r5, #4]
 8015ee8:	80ee      	strh	r6, [r5, #6]
 8015eea:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8015eee:	4dbb      	ldr	r5, [pc, #748]	; (80161dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8015ef0:	4640      	mov	r0, r8
 8015ef2:	f7ff fbeb 	bl	80156cc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015ef6:	882e      	ldrh	r6, [r5, #0]
 8015ef8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015efc:	4633      	mov	r3, r6
 8015efe:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015f02:	42bb      	cmp	r3, r7
 8015f04:	d224      	bcs.n	8015f50 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015f06:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8015f0a:	2907      	cmp	r1, #7
 8015f0c:	d816      	bhi.n	8015f3c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8015f0e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8015f12:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8015f16:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8015f1a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8015f1e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8015f22:	1c4a      	adds	r2, r1, #1
 8015f24:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8015f28:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8015f2c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8015f30:	f8a2 a002 	strh.w	sl, [r2, #2]
 8015f34:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015f38:	f8a2 c006 	strh.w	ip, [r2, #6]
 8015f3c:	3301      	adds	r3, #1
 8015f3e:	b29b      	uxth	r3, r3
 8015f40:	e7df      	b.n	8015f02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8015f42:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015f46:	2b00      	cmp	r3, #0
 8015f48:	d1cf      	bne.n	8015eea <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8015f4a:	b01b      	add	sp, #108	; 0x6c
 8015f4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015f50:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8015f54:	42b3      	cmp	r3, r6
 8015f56:	d90c      	bls.n	8015f72 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8015f58:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8015f5c:	6822      	ldr	r2, [r4, #0]
 8015f5e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8015f62:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8015f64:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8015f68:	4620      	mov	r0, r4
 8015f6a:	3601      	adds	r6, #1
 8015f6c:	47b8      	blx	r7
 8015f6e:	b2b6      	uxth	r6, r6
 8015f70:	e7ee      	b.n	8015f50 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015f72:	4a9b      	ldr	r2, [pc, #620]	; (80161e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015f74:	6813      	ldr	r3, [r2, #0]
 8015f76:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8015f7a:	2b01      	cmp	r3, #1
 8015f7c:	4691      	mov	r9, r2
 8015f7e:	f040 80e2 	bne.w	8016146 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8015f82:	8829      	ldrh	r1, [r5, #0]
 8015f84:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015f88:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8015f8c:	33ae      	adds	r3, #174	; 0xae
 8015f8e:	2600      	movs	r6, #0
 8015f90:	428f      	cmp	r7, r1
 8015f92:	f103 0308 	add.w	r3, r3, #8
 8015f96:	dd0a      	ble.n	8015fae <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8015f98:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8015f9c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8015fa0:	4402      	add	r2, r0
 8015fa2:	b212      	sxth	r2, r2
 8015fa4:	4296      	cmp	r6, r2
 8015fa6:	bfb8      	it	lt
 8015fa8:	4616      	movlt	r6, r2
 8015faa:	3101      	adds	r1, #1
 8015fac:	e7f0      	b.n	8015f90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8015fae:	4b8d      	ldr	r3, [pc, #564]	; (80161e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8015fb0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 80161e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8015fb4:	881b      	ldrh	r3, [r3, #0]
 8015fb6:	2b0f      	cmp	r3, #15
 8015fb8:	bf88      	it	hi
 8015fba:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8015fbe:	f04f 0300 	mov.w	r3, #0
 8015fc2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8015fc6:	bf98      	it	ls
 8015fc8:	f04f 0b01 	movls.w	fp, #1
 8015fcc:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8015fd0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8015fd4:	4b82      	ldr	r3, [pc, #520]	; (80161e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015fd6:	4438      	add	r0, r7
 8015fd8:	b207      	sxth	r7, r0
 8015fda:	6818      	ldr	r0, [r3, #0]
 8015fdc:	42b7      	cmp	r7, r6
 8015fde:	6803      	ldr	r3, [r0, #0]
 8015fe0:	f280 8083 	bge.w	80160ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8015fe4:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8015fe8:	4798      	blx	r3
 8015fea:	eb07 030b 	add.w	r3, r7, fp
 8015fee:	4298      	cmp	r0, r3
 8015ff0:	da07      	bge.n	8016002 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015ff2:	42b0      	cmp	r0, r6
 8015ff4:	da05      	bge.n	8016002 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015ff6:	4287      	cmp	r7, r0
 8015ff8:	dd6c      	ble.n	80160d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015ffa:	2f00      	cmp	r7, #0
 8015ffc:	dd6a      	ble.n	80160d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015ffe:	4630      	mov	r0, r6
 8016000:	e004      	b.n	801600c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8016002:	4287      	cmp	r7, r0
 8016004:	dcfb      	bgt.n	8015ffe <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8016006:	42b0      	cmp	r0, r6
 8016008:	bfa8      	it	ge
 801600a:	4630      	movge	r0, r6
 801600c:	4b76      	ldr	r3, [pc, #472]	; (80161e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801600e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8016012:	1bc0      	subs	r0, r0, r7
 8016014:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016018:	882f      	ldrh	r7, [r5, #0]
 801601a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801601e:	2200      	movs	r2, #0
 8016020:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016024:	f8ad 001a 	strh.w	r0, [sp, #26]
 8016028:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801602c:	42bb      	cmp	r3, r7
 801602e:	d9cd      	bls.n	8015fcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8016030:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8016034:	ab07      	add	r3, sp, #28
 8016036:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801603a:	6851      	ldr	r1, [r2, #4]
 801603c:	c303      	stmia	r3!, {r0, r1}
 801603e:	a905      	add	r1, sp, #20
 8016040:	a807      	add	r0, sp, #28
 8016042:	f7ff f93e 	bl	80152c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016046:	2800      	cmp	r0, #0
 8016048:	d04c      	beq.n	80160e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801604a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801604e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8016052:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8016056:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801605a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801605e:	9302      	str	r3, [sp, #8]
 8016060:	4686      	mov	lr, r0
 8016062:	4290      	cmp	r0, r2
 8016064:	4450      	add	r0, sl
 8016066:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801606a:	bfb8      	it	lt
 801606c:	4696      	movlt	lr, r2
 801606e:	4452      	add	r2, sl
 8016070:	4299      	cmp	r1, r3
 8016072:	b280      	uxth	r0, r0
 8016074:	b292      	uxth	r2, r2
 8016076:	468c      	mov	ip, r1
 8016078:	fa0f fa82 	sxth.w	sl, r2
 801607c:	bfb8      	it	lt
 801607e:	469c      	movlt	ip, r3
 8016080:	b203      	sxth	r3, r0
 8016082:	4553      	cmp	r3, sl
 8016084:	bfb8      	it	lt
 8016086:	4602      	movlt	r2, r0
 8016088:	eba2 020e 	sub.w	r2, r2, lr
 801608c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016090:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8016094:	9b02      	ldr	r3, [sp, #8]
 8016096:	f8ad e01c 	strh.w	lr, [sp, #28]
 801609a:	4411      	add	r1, r2
 801609c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80160a0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80160a4:	4413      	add	r3, r2
 80160a6:	b289      	uxth	r1, r1
 80160a8:	b29b      	uxth	r3, r3
 80160aa:	b208      	sxth	r0, r1
 80160ac:	b21a      	sxth	r2, r3
 80160ae:	4290      	cmp	r0, r2
 80160b0:	bfb8      	it	lt
 80160b2:	460b      	movlt	r3, r1
 80160b4:	eba3 030c 	sub.w	r3, r3, ip
 80160b8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80160bc:	a807      	add	r0, sp, #28
 80160be:	f7fa f910 	bl	80102e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80160c2:	b920      	cbnz	r0, 80160ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80160c4:	6823      	ldr	r3, [r4, #0]
 80160c6:	a907      	add	r1, sp, #28
 80160c8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80160ca:	4620      	mov	r0, r4
 80160cc:	4798      	blx	r3
 80160ce:	3701      	adds	r7, #1
 80160d0:	b2bf      	uxth	r7, r7
 80160d2:	e7a9      	b.n	8016028 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80160d4:	f8d9 0000 	ldr.w	r0, [r9]
 80160d8:	6803      	ldr	r3, [r0, #0]
 80160da:	2101      	movs	r1, #1
 80160dc:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80160e0:	4798      	blx	r3
 80160e2:	e773      	b.n	8015fcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80160e4:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80160e8:	e7e8      	b.n	80160bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 80160ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80160ec:	4798      	blx	r3
 80160ee:	4b3f      	ldr	r3, [pc, #252]	; (80161ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80160f0:	781b      	ldrb	r3, [r3, #0]
 80160f2:	2b00      	cmp	r3, #0
 80160f4:	f43f af29 	beq.w	8015f4a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80160f8:	2300      	movs	r3, #0
 80160fa:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 80160fe:	882b      	ldrh	r3, [r5, #0]
 8016100:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8016104:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016108:	42ab      	cmp	r3, r5
 801610a:	f4bf af1e 	bcs.w	8015f4a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801610e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8016112:	2907      	cmp	r1, #7
 8016114:	d814      	bhi.n	8016140 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8016116:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801611a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801611e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8016122:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8016126:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801612a:	1c4a      	adds	r2, r1, #1
 801612c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8016130:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8016134:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8016138:	f8a2 c002 	strh.w	ip, [r2, #2]
 801613c:	8097      	strh	r7, [r2, #4]
 801613e:	80d6      	strh	r6, [r2, #6]
 8016140:	3301      	adds	r3, #1
 8016142:	b29b      	uxth	r3, r3
 8016144:	e7e0      	b.n	8016108 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8016146:	2b02      	cmp	r3, #2
 8016148:	f040 8133 	bne.w	80163b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801614c:	4b28      	ldr	r3, [pc, #160]	; (80161f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801614e:	781b      	ldrb	r3, [r3, #0]
 8016150:	2b01      	cmp	r3, #1
 8016152:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8016156:	f000 8098 	beq.w	801628a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801615a:	882a      	ldrh	r2, [r5, #0]
 801615c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8016160:	3201      	adds	r2, #1
 8016162:	b292      	uxth	r2, r2
 8016164:	2900      	cmp	r1, #0
 8016166:	d0c2      	beq.n	80160ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016168:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 801616c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8016170:	441e      	add	r6, r3
 8016172:	b236      	sxth	r6, r6
 8016174:	4694      	mov	ip, r2
 8016176:	f04f 0900 	mov.w	r9, #0
 801617a:	fa1f f38c 	uxth.w	r3, ip
 801617e:	4299      	cmp	r1, r3
 8016180:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8016184:	f240 80bf 	bls.w	8016306 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8016188:	4427      	add	r7, r4
 801618a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801618e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8016192:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8016196:	4283      	cmp	r3, r0
 8016198:	f340 80a1 	ble.w	80162de <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 801619c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80161a0:	4406      	add	r6, r0
 80161a2:	b236      	sxth	r6, r6
 80161a4:	429e      	cmp	r6, r3
 80161a6:	bfa8      	it	ge
 80161a8:	461e      	movge	r6, r3
 80161aa:	46e1      	mov	r9, ip
 80161ac:	f10c 0c01 	add.w	ip, ip, #1
 80161b0:	e7e3      	b.n	801617a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 80161b2:	d10a      	bne.n	80161ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80161b4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 80161b8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 80161bc:	4562      	cmp	r2, ip
 80161be:	bfb8      	it	lt
 80161c0:	4662      	movlt	r2, ip
 80161c2:	4288      	cmp	r0, r1
 80161c4:	bfb8      	it	lt
 80161c6:	461f      	movlt	r7, r3
 80161c8:	e087      	b.n	80162da <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80161ca:	428a      	cmp	r2, r1
 80161cc:	bfb8      	it	lt
 80161ce:	460a      	movlt	r2, r1
 80161d0:	e083      	b.n	80162da <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80161d2:	bf00      	nop
 80161d4:	20012f6c 	.word	0x20012f6c
 80161d8:	20012f78 	.word	0x20012f78
 80161dc:	20000088 	.word	0x20000088
 80161e0:	20012f2c 	.word	0x20012f2c
 80161e4:	20012f22 	.word	0x20012f22
 80161e8:	20012f20 	.word	0x20012f20
 80161ec:	20012f2a 	.word	0x20012f2a
 80161f0:	20012f24 	.word	0x20012f24
 80161f4:	19a1      	adds	r1, r4, r6
 80161f6:	ab07      	add	r3, sp, #28
 80161f8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80161fc:	6849      	ldr	r1, [r1, #4]
 80161fe:	c303      	stmia	r3!, {r0, r1}
 8016200:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016204:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016208:	2b13      	cmp	r3, #19
 801620a:	bfd8      	it	le
 801620c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8016210:	f8ad 201c 	strh.w	r2, [sp, #28]
 8016214:	440b      	add	r3, r1
 8016216:	1a9b      	subs	r3, r3, r2
 8016218:	a807      	add	r0, sp, #28
 801621a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801621e:	f7fe ff7b 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016222:	a807      	add	r0, sp, #28
 8016224:	f7fa f85d 	bl	80102e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016228:	bb78      	cbnz	r0, 801628a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801622a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801622e:	f8d9 0000 	ldr.w	r0, [r9]
 8016232:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8016236:	f8d0 e000 	ldr.w	lr, [r0]
 801623a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801623e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016242:	f1bc 0f14 	cmp.w	ip, #20
 8016246:	bfa8      	it	ge
 8016248:	f04f 0c14 	movge.w	ip, #20
 801624c:	fa1f fc8c 	uxth.w	ip, ip
 8016250:	f8cd c000 	str.w	ip, [sp]
 8016254:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8016258:	47d8      	blx	fp
 801625a:	4683      	mov	fp, r0
 801625c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016260:	a807      	add	r0, sp, #28
 8016262:	f7fe ff3f 	bl	80150e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016266:	6823      	ldr	r3, [r4, #0]
 8016268:	4426      	add	r6, r4
 801626a:	4620      	mov	r0, r4
 801626c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801626e:	a907      	add	r1, sp, #28
 8016270:	4798      	blx	r3
 8016272:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8016276:	eba0 000b 	sub.w	r0, r0, fp
 801627a:	b200      	sxth	r0, r0
 801627c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8016280:	b918      	cbnz	r0, 801628a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016282:	b2b9      	uxth	r1, r7
 8016284:	4650      	mov	r0, sl
 8016286:	f7ff fa79 	bl	801577c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801628a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 801628e:	f1bb 0f00 	cmp.w	fp, #0
 8016292:	f43f af2c 	beq.w	80160ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016296:	882b      	ldrh	r3, [r5, #0]
 8016298:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 801629c:	3301      	adds	r3, #1
 801629e:	b29b      	uxth	r3, r3
 80162a0:	2700      	movs	r7, #0
 80162a2:	b299      	uxth	r1, r3
 80162a4:	458b      	cmp	fp, r1
 80162a6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 80162aa:	d9a3      	bls.n	80161f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80162ac:	4426      	add	r6, r4
 80162ae:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80162b2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 80162b6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80162ba:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 80162be:	4408      	add	r0, r1
 80162c0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 80162c4:	4461      	add	r1, ip
 80162c6:	b200      	sxth	r0, r0
 80162c8:	b209      	sxth	r1, r1
 80162ca:	4288      	cmp	r0, r1
 80162cc:	f6bf af71 	bge.w	80161b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 80162d0:	4584      	cmp	ip, r0
 80162d2:	4662      	mov	r2, ip
 80162d4:	461f      	mov	r7, r3
 80162d6:	bfb8      	it	lt
 80162d8:	4602      	movlt	r2, r0
 80162da:	3301      	adds	r3, #1
 80162dc:	e7e1      	b.n	80162a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 80162de:	d10e      	bne.n	80162fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 80162e0:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 80162e4:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 80162e8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 80162ec:	4473      	add	r3, lr
 80162ee:	b21b      	sxth	r3, r3
 80162f0:	429e      	cmp	r6, r3
 80162f2:	bfa8      	it	ge
 80162f4:	461e      	movge	r6, r3
 80162f6:	4287      	cmp	r7, r0
 80162f8:	bfb8      	it	lt
 80162fa:	46e1      	movlt	r9, ip
 80162fc:	e756      	b.n	80161ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80162fe:	4286      	cmp	r6, r0
 8016300:	bfa8      	it	ge
 8016302:	4606      	movge	r6, r0
 8016304:	e752      	b.n	80161ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016306:	eb0a 0007 	add.w	r0, sl, r7
 801630a:	4427      	add	r7, r4
 801630c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8016310:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8016314:	f1bb 0f13 	cmp.w	fp, #19
 8016318:	bfde      	ittt	le
 801631a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 801631e:	445e      	addle	r6, fp
 8016320:	b236      	sxthle	r6, r6
 8016322:	f7f9 ffde 	bl	80102e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016326:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801632a:	2800      	cmp	r0, #0
 801632c:	f47f af1a 	bne.w	8016164 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8016330:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8016334:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016338:	482a      	ldr	r0, [pc, #168]	; (80163e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801633a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801633e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8016342:	6800      	ldr	r0, [r0, #0]
 8016344:	f8ad 101c 	strh.w	r1, [sp, #28]
 8016348:	1ab6      	subs	r6, r6, r2
 801634a:	2e14      	cmp	r6, #20
 801634c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8016350:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016354:	bfa8      	it	ge
 8016356:	2614      	movge	r6, #20
 8016358:	f8d0 c000 	ldr.w	ip, [r0]
 801635c:	b2b6      	uxth	r6, r6
 801635e:	fa1f fb8b 	uxth.w	fp, fp
 8016362:	455e      	cmp	r6, fp
 8016364:	bf94      	ite	ls
 8016366:	9600      	strls	r6, [sp, #0]
 8016368:	f8cd b000 	strhi.w	fp, [sp]
 801636c:	b292      	uxth	r2, r2
 801636e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8016372:	b29b      	uxth	r3, r3
 8016374:	b289      	uxth	r1, r1
 8016376:	47b0      	blx	r6
 8016378:	6823      	ldr	r3, [r4, #0]
 801637a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801637e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016380:	a907      	add	r1, sp, #28
 8016382:	4620      	mov	r0, r4
 8016384:	4798      	blx	r3
 8016386:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801638a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 801638e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8016392:	1a5b      	subs	r3, r3, r1
 8016394:	440a      	add	r2, r1
 8016396:	b21b      	sxth	r3, r3
 8016398:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 801639c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 80163a0:	2b00      	cmp	r3, #0
 80163a2:	f47f aeda 	bne.w	801615a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80163a6:	fa1f f189 	uxth.w	r1, r9
 80163aa:	4650      	mov	r0, sl
 80163ac:	f7ff f9e6 	bl	801577c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80163b0:	e6d3      	b.n	801615a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80163b2:	882e      	ldrh	r6, [r5, #0]
 80163b4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80163b8:	42b3      	cmp	r3, r6
 80163ba:	f67f ae98 	bls.w	80160ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80163be:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 80163c2:	ab07      	add	r3, sp, #28
 80163c4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80163c8:	6851      	ldr	r1, [r2, #4]
 80163ca:	c303      	stmia	r3!, {r0, r1}
 80163cc:	a807      	add	r0, sp, #28
 80163ce:	f7f9 ff88 	bl	80102e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80163d2:	b920      	cbnz	r0, 80163de <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 80163d4:	6823      	ldr	r3, [r4, #0]
 80163d6:	a907      	add	r1, sp, #28
 80163d8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80163da:	4620      	mov	r0, r4
 80163dc:	4798      	blx	r3
 80163de:	3601      	adds	r6, #1
 80163e0:	b2b6      	uxth	r6, r6
 80163e2:	e7e7      	b.n	80163b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 80163e4:	20012f2c 	.word	0x20012f2c

080163e8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80163e8:	4b03      	ldr	r3, [pc, #12]	; (80163f8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80163ea:	2200      	movs	r2, #0
 80163ec:	801a      	strh	r2, [r3, #0]
 80163ee:	805a      	strh	r2, [r3, #2]
 80163f0:	809a      	strh	r2, [r3, #4]
 80163f2:	80da      	strh	r2, [r3, #6]
 80163f4:	4770      	bx	lr
 80163f6:	bf00      	nop
 80163f8:	20012f78 	.word	0x20012f78

080163fc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80163fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016400:	4606      	mov	r6, r0
 8016402:	b09d      	sub	sp, #116	; 0x74
 8016404:	a803      	add	r0, sp, #12
 8016406:	4614      	mov	r4, r2
 8016408:	468a      	mov	sl, r1
 801640a:	461d      	mov	r5, r3
 801640c:	f000 feca 	bl	80171a4 <_ZN8touchgfx12TextProviderC1Ev>
 8016410:	6833      	ldr	r3, [r6, #0]
 8016412:	4630      	mov	r0, r6
 8016414:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016416:	4798      	blx	r3
 8016418:	6833      	ldr	r3, [r6, #0]
 801641a:	4607      	mov	r7, r0
 801641c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801641e:	4630      	mov	r0, r6
 8016420:	4798      	blx	r3
 8016422:	462a      	mov	r2, r5
 8016424:	9000      	str	r0, [sp, #0]
 8016426:	4621      	mov	r1, r4
 8016428:	463b      	mov	r3, r7
 801642a:	a803      	add	r0, sp, #12
 801642c:	f000 ff15 	bl	801725a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016430:	2500      	movs	r5, #0
 8016432:	462c      	mov	r4, r5
 8016434:	46a9      	mov	r9, r5
 8016436:	46a8      	mov	r8, r5
 8016438:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801643c:	2300      	movs	r3, #0
 801643e:	9302      	str	r3, [sp, #8]
 8016440:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016444:	429c      	cmp	r4, r3
 8016446:	d002      	beq.n	801644e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8016448:	455c      	cmp	r4, fp
 801644a:	bf18      	it	ne
 801644c:	4625      	movne	r5, r4
 801644e:	ab02      	add	r3, sp, #8
 8016450:	4632      	mov	r2, r6
 8016452:	4651      	mov	r1, sl
 8016454:	a803      	add	r0, sp, #12
 8016456:	f001 fa03 	bl	8017860 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801645a:	4604      	mov	r4, r0
 801645c:	b108      	cbz	r0, 8016462 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801645e:	280a      	cmp	r0, #10
 8016460:	d10a      	bne.n	8016478 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8016462:	45c1      	cmp	r9, r8
 8016464:	bf38      	it	cc
 8016466:	46c1      	movcc	r9, r8
 8016468:	f04f 0800 	mov.w	r8, #0
 801646c:	2c00      	cmp	r4, #0
 801646e:	d1e5      	bne.n	801643c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016470:	4648      	mov	r0, r9
 8016472:	b01d      	add	sp, #116	; 0x74
 8016474:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016478:	9a02      	ldr	r2, [sp, #8]
 801647a:	2a00      	cmp	r2, #0
 801647c:	d0de      	beq.n	801643c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801647e:	7b57      	ldrb	r7, [r2, #13]
 8016480:	6833      	ldr	r3, [r6, #0]
 8016482:	8894      	ldrh	r4, [r2, #4]
 8016484:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016486:	007f      	lsls	r7, r7, #1
 8016488:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801648c:	7a97      	ldrb	r7, [r2, #10]
 801648e:	4629      	mov	r1, r5
 8016490:	4307      	orrs	r7, r0
 8016492:	4630      	mov	r0, r6
 8016494:	4798      	blx	r3
 8016496:	4438      	add	r0, r7
 8016498:	4480      	add	r8, r0
 801649a:	fa1f f888 	uxth.w	r8, r8
 801649e:	e7e5      	b.n	801646c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080164a0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80164a0:	b508      	push	{r3, lr}
 80164a2:	6803      	ldr	r3, [r0, #0]
 80164a4:	68db      	ldr	r3, [r3, #12]
 80164a6:	4798      	blx	r3
 80164a8:	b128      	cbz	r0, 80164b6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80164aa:	7b43      	ldrb	r3, [r0, #13]
 80164ac:	7a80      	ldrb	r0, [r0, #10]
 80164ae:	005b      	lsls	r3, r3, #1
 80164b0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80164b4:	4318      	orrs	r0, r3
 80164b6:	bd08      	pop	{r3, pc}

080164b8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80164b8:	b40e      	push	{r1, r2, r3}
 80164ba:	b5f0      	push	{r4, r5, r6, r7, lr}
 80164bc:	b09e      	sub	sp, #120	; 0x78
 80164be:	ab23      	add	r3, sp, #140	; 0x8c
 80164c0:	4605      	mov	r5, r0
 80164c2:	f853 4b04 	ldr.w	r4, [r3], #4
 80164c6:	9303      	str	r3, [sp, #12]
 80164c8:	a805      	add	r0, sp, #20
 80164ca:	f000 fe6b 	bl	80171a4 <_ZN8touchgfx12TextProviderC1Ev>
 80164ce:	682b      	ldr	r3, [r5, #0]
 80164d0:	4628      	mov	r0, r5
 80164d2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80164d4:	4798      	blx	r3
 80164d6:	682b      	ldr	r3, [r5, #0]
 80164d8:	4606      	mov	r6, r0
 80164da:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80164dc:	4628      	mov	r0, r5
 80164de:	4798      	blx	r3
 80164e0:	4633      	mov	r3, r6
 80164e2:	ae1e      	add	r6, sp, #120	; 0x78
 80164e4:	4621      	mov	r1, r4
 80164e6:	9000      	str	r0, [sp, #0]
 80164e8:	9a03      	ldr	r2, [sp, #12]
 80164ea:	2400      	movs	r4, #0
 80164ec:	a805      	add	r0, sp, #20
 80164ee:	f000 feb4 	bl	801725a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80164f2:	f846 4d68 	str.w	r4, [r6, #-104]!
 80164f6:	462a      	mov	r2, r5
 80164f8:	4633      	mov	r3, r6
 80164fa:	4621      	mov	r1, r4
 80164fc:	a805      	add	r0, sp, #20
 80164fe:	f001 f9af 	bl	8017860 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016502:	b1f0      	cbz	r0, 8016542 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8016504:	280a      	cmp	r0, #10
 8016506:	d018      	beq.n	801653a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016508:	9f04      	ldr	r7, [sp, #16]
 801650a:	b1b7      	cbz	r7, 801653a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801650c:	7b78      	ldrb	r0, [r7, #13]
 801650e:	7a3b      	ldrb	r3, [r7, #8]
 8016510:	88ea      	ldrh	r2, [r5, #6]
 8016512:	00c1      	lsls	r1, r0, #3
 8016514:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016518:	4319      	orrs	r1, r3
 801651a:	0643      	lsls	r3, r0, #25
 801651c:	bf44      	itt	mi
 801651e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8016522:	b219      	sxthmi	r1, r3
 8016524:	0100      	lsls	r0, r0, #4
 8016526:	79fb      	ldrb	r3, [r7, #7]
 8016528:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801652c:	4303      	orrs	r3, r0
 801652e:	4413      	add	r3, r2
 8016530:	1a5b      	subs	r3, r3, r1
 8016532:	b21b      	sxth	r3, r3
 8016534:	429c      	cmp	r4, r3
 8016536:	bfb8      	it	lt
 8016538:	461c      	movlt	r4, r3
 801653a:	4633      	mov	r3, r6
 801653c:	462a      	mov	r2, r5
 801653e:	2100      	movs	r1, #0
 8016540:	e7dc      	b.n	80164fc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8016542:	b2a0      	uxth	r0, r4
 8016544:	b01e      	add	sp, #120	; 0x78
 8016546:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801654a:	b003      	add	sp, #12
 801654c:	4770      	bx	lr

0801654e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801654e:	7a43      	ldrb	r3, [r0, #9]
 8016550:	8880      	ldrh	r0, [r0, #4]
 8016552:	4418      	add	r0, r3
 8016554:	b280      	uxth	r0, r0
 8016556:	4770      	bx	lr

08016558 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8016558:	6803      	ldr	r3, [r0, #0]
 801655a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801655c:	4718      	bx	r3

0801655e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801655e:	b40e      	push	{r1, r2, r3}
 8016560:	b570      	push	{r4, r5, r6, lr}
 8016562:	b09d      	sub	sp, #116	; 0x74
 8016564:	ab21      	add	r3, sp, #132	; 0x84
 8016566:	4604      	mov	r4, r0
 8016568:	f853 5b04 	ldr.w	r5, [r3], #4
 801656c:	9302      	str	r3, [sp, #8]
 801656e:	a803      	add	r0, sp, #12
 8016570:	f000 fe18 	bl	80171a4 <_ZN8touchgfx12TextProviderC1Ev>
 8016574:	6823      	ldr	r3, [r4, #0]
 8016576:	4620      	mov	r0, r4
 8016578:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801657a:	4798      	blx	r3
 801657c:	6823      	ldr	r3, [r4, #0]
 801657e:	4606      	mov	r6, r0
 8016580:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016582:	4620      	mov	r0, r4
 8016584:	4798      	blx	r3
 8016586:	4633      	mov	r3, r6
 8016588:	9000      	str	r0, [sp, #0]
 801658a:	9a02      	ldr	r2, [sp, #8]
 801658c:	4629      	mov	r1, r5
 801658e:	a803      	add	r0, sp, #12
 8016590:	f000 fe63 	bl	801725a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016594:	a803      	add	r0, sp, #12
 8016596:	f001 fa31 	bl	80179fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801659a:	2401      	movs	r4, #1
 801659c:	b2a3      	uxth	r3, r4
 801659e:	b140      	cbz	r0, 80165b2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80165a0:	280a      	cmp	r0, #10
 80165a2:	bf08      	it	eq
 80165a4:	3301      	addeq	r3, #1
 80165a6:	a803      	add	r0, sp, #12
 80165a8:	bf08      	it	eq
 80165aa:	b21c      	sxtheq	r4, r3
 80165ac:	f001 fa26 	bl	80179fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 80165b0:	e7f4      	b.n	801659c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80165b2:	4618      	mov	r0, r3
 80165b4:	b01d      	add	sp, #116	; 0x74
 80165b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80165ba:	b003      	add	sp, #12
 80165bc:	4770      	bx	lr

080165be <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80165be:	b40e      	push	{r1, r2, r3}
 80165c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80165c2:	b09e      	sub	sp, #120	; 0x78
 80165c4:	ab23      	add	r3, sp, #140	; 0x8c
 80165c6:	4604      	mov	r4, r0
 80165c8:	f853 5b04 	ldr.w	r5, [r3], #4
 80165cc:	9303      	str	r3, [sp, #12]
 80165ce:	a805      	add	r0, sp, #20
 80165d0:	f000 fde8 	bl	80171a4 <_ZN8touchgfx12TextProviderC1Ev>
 80165d4:	6823      	ldr	r3, [r4, #0]
 80165d6:	4620      	mov	r0, r4
 80165d8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80165da:	4798      	blx	r3
 80165dc:	6823      	ldr	r3, [r4, #0]
 80165de:	4606      	mov	r6, r0
 80165e0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80165e2:	4620      	mov	r0, r4
 80165e4:	4798      	blx	r3
 80165e6:	4633      	mov	r3, r6
 80165e8:	4629      	mov	r1, r5
 80165ea:	9000      	str	r0, [sp, #0]
 80165ec:	9a03      	ldr	r2, [sp, #12]
 80165ee:	a805      	add	r0, sp, #20
 80165f0:	ad1e      	add	r5, sp, #120	; 0x78
 80165f2:	f000 fe32 	bl	801725a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80165f6:	2100      	movs	r1, #0
 80165f8:	f845 1d68 	str.w	r1, [r5, #-104]!
 80165fc:	4622      	mov	r2, r4
 80165fe:	462b      	mov	r3, r5
 8016600:	a805      	add	r0, sp, #20
 8016602:	f001 f92d 	bl	8017860 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016606:	f647 76ff 	movw	r6, #32767	; 0x7fff
 801660a:	b1d8      	cbz	r0, 8016644 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 801660c:	280a      	cmp	r0, #10
 801660e:	d012      	beq.n	8016636 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016610:	9804      	ldr	r0, [sp, #16]
 8016612:	b180      	cbz	r0, 8016636 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016614:	7b47      	ldrb	r7, [r0, #13]
 8016616:	88e2      	ldrh	r2, [r4, #6]
 8016618:	00fb      	lsls	r3, r7, #3
 801661a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801661e:	7a03      	ldrb	r3, [r0, #8]
 8016620:	430b      	orrs	r3, r1
 8016622:	0679      	lsls	r1, r7, #25
 8016624:	bf44      	itt	mi
 8016626:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801662a:	b21b      	sxthmi	r3, r3
 801662c:	1ad3      	subs	r3, r2, r3
 801662e:	b21b      	sxth	r3, r3
 8016630:	429e      	cmp	r6, r3
 8016632:	bfa8      	it	ge
 8016634:	461e      	movge	r6, r3
 8016636:	462b      	mov	r3, r5
 8016638:	4622      	mov	r2, r4
 801663a:	2100      	movs	r1, #0
 801663c:	a805      	add	r0, sp, #20
 801663e:	f001 f90f 	bl	8017860 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016642:	e7e2      	b.n	801660a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8016644:	4630      	mov	r0, r6
 8016646:	b01e      	add	sp, #120	; 0x78
 8016648:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801664c:	b003      	add	sp, #12
 801664e:	4770      	bx	lr

08016650 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8016650:	b513      	push	{r0, r1, r4, lr}
 8016652:	6803      	ldr	r3, [r0, #0]
 8016654:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016658:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801665c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016660:	2400      	movs	r4, #0
 8016662:	9400      	str	r4, [sp, #0]
 8016664:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016668:	691b      	ldr	r3, [r3, #16]
 801666a:	4669      	mov	r1, sp
 801666c:	4798      	blx	r3
 801666e:	b002      	add	sp, #8
 8016670:	bd10      	pop	{r4, pc}

08016672 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8016672:	b538      	push	{r3, r4, r5, lr}
 8016674:	680b      	ldr	r3, [r1, #0]
 8016676:	460c      	mov	r4, r1
 8016678:	68db      	ldr	r3, [r3, #12]
 801667a:	4605      	mov	r5, r0
 801667c:	4798      	blx	r3
 801667e:	6823      	ldr	r3, [r4, #0]
 8016680:	4620      	mov	r0, r4
 8016682:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016684:	4629      	mov	r1, r5
 8016686:	4798      	blx	r3
 8016688:	4628      	mov	r0, r5
 801668a:	bd38      	pop	{r3, r4, r5, pc}

0801668c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801668c:	b410      	push	{r4}
 801668e:	880a      	ldrh	r2, [r1, #0]
 8016690:	8884      	ldrh	r4, [r0, #4]
 8016692:	4422      	add	r2, r4
 8016694:	800a      	strh	r2, [r1, #0]
 8016696:	88c4      	ldrh	r4, [r0, #6]
 8016698:	884a      	ldrh	r2, [r1, #2]
 801669a:	4422      	add	r2, r4
 801669c:	804a      	strh	r2, [r1, #2]
 801669e:	6940      	ldr	r0, [r0, #20]
 80166a0:	b120      	cbz	r0, 80166ac <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80166a2:	6803      	ldr	r3, [r0, #0]
 80166a4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80166a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80166aa:	4718      	bx	r3
 80166ac:	f85d 4b04 	ldr.w	r4, [sp], #4
 80166b0:	4770      	bx	lr

080166b2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80166b2:	b570      	push	{r4, r5, r6, lr}
 80166b4:	8882      	ldrh	r2, [r0, #4]
 80166b6:	880b      	ldrh	r3, [r1, #0]
 80166b8:	4413      	add	r3, r2
 80166ba:	800b      	strh	r3, [r1, #0]
 80166bc:	88c2      	ldrh	r2, [r0, #6]
 80166be:	884b      	ldrh	r3, [r1, #2]
 80166c0:	460c      	mov	r4, r1
 80166c2:	4413      	add	r3, r2
 80166c4:	804b      	strh	r3, [r1, #2]
 80166c6:	4605      	mov	r5, r0
 80166c8:	1d01      	adds	r1, r0, #4
 80166ca:	4620      	mov	r0, r4
 80166cc:	f7f9 fdc6 	bl	801025c <_ZN8touchgfx4RectaNERKS0_>
 80166d0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80166d4:	2b00      	cmp	r3, #0
 80166d6:	dd0b      	ble.n	80166f0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80166d8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80166dc:	2b00      	cmp	r3, #0
 80166de:	dd07      	ble.n	80166f0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80166e0:	6968      	ldr	r0, [r5, #20]
 80166e2:	b128      	cbz	r0, 80166f0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80166e4:	6803      	ldr	r3, [r0, #0]
 80166e6:	4621      	mov	r1, r4
 80166e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80166ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80166ee:	4718      	bx	r3
 80166f0:	bd70      	pop	{r4, r5, r6, pc}
	...

080166f4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80166f4:	b570      	push	{r4, r5, r6, lr}
 80166f6:	8882      	ldrh	r2, [r0, #4]
 80166f8:	880b      	ldrh	r3, [r1, #0]
 80166fa:	4413      	add	r3, r2
 80166fc:	800b      	strh	r3, [r1, #0]
 80166fe:	88c2      	ldrh	r2, [r0, #6]
 8016700:	884b      	ldrh	r3, [r1, #2]
 8016702:	460c      	mov	r4, r1
 8016704:	4413      	add	r3, r2
 8016706:	804b      	strh	r3, [r1, #2]
 8016708:	4605      	mov	r5, r0
 801670a:	1d01      	adds	r1, r0, #4
 801670c:	4620      	mov	r0, r4
 801670e:	f7f9 fda5 	bl	801025c <_ZN8touchgfx4RectaNERKS0_>
 8016712:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016716:	2b00      	cmp	r3, #0
 8016718:	dd19      	ble.n	801674e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801671a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801671e:	2b00      	cmp	r3, #0
 8016720:	dd15      	ble.n	801674e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016722:	6968      	ldr	r0, [r5, #20]
 8016724:	b128      	cbz	r0, 8016732 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8016726:	6803      	ldr	r3, [r0, #0]
 8016728:	4621      	mov	r1, r4
 801672a:	691b      	ldr	r3, [r3, #16]
 801672c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016730:	4718      	bx	r3
 8016732:	4b07      	ldr	r3, [pc, #28]	; (8016750 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8016734:	681b      	ldr	r3, [r3, #0]
 8016736:	3304      	adds	r3, #4
 8016738:	429d      	cmp	r5, r3
 801673a:	d108      	bne.n	801674e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801673c:	f7fe fea0 	bl	8015480 <_ZN8touchgfx11Application11getInstanceEv>
 8016740:	6803      	ldr	r3, [r0, #0]
 8016742:	6821      	ldr	r1, [r4, #0]
 8016744:	6862      	ldr	r2, [r4, #4]
 8016746:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016748:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801674c:	4718      	bx	r3
 801674e:	bd70      	pop	{r4, r5, r6, pc}
 8016750:	20012f70 	.word	0x20012f70

08016754 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8016754:	b570      	push	{r4, r5, r6, lr}
 8016756:	4604      	mov	r4, r0
 8016758:	4616      	mov	r6, r2
 801675a:	460d      	mov	r5, r1
 801675c:	b901      	cbnz	r1, 8016760 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801675e:	b192      	cbz	r2, 8016786 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8016760:	6823      	ldr	r3, [r4, #0]
 8016762:	4620      	mov	r0, r4
 8016764:	699b      	ldr	r3, [r3, #24]
 8016766:	4798      	blx	r3
 8016768:	88e2      	ldrh	r2, [r4, #6]
 801676a:	88a1      	ldrh	r1, [r4, #4]
 801676c:	4432      	add	r2, r6
 801676e:	4429      	add	r1, r5
 8016770:	4620      	mov	r0, r4
 8016772:	b212      	sxth	r2, r2
 8016774:	b209      	sxth	r1, r1
 8016776:	f7ec f878 	bl	800286a <_ZN8touchgfx8Drawable5setXYEss>
 801677a:	6823      	ldr	r3, [r4, #0]
 801677c:	4620      	mov	r0, r4
 801677e:	699b      	ldr	r3, [r3, #24]
 8016780:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016784:	4718      	bx	r3
 8016786:	bd70      	pop	{r4, r5, r6, pc}

08016788 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8016788:	b510      	push	{r4, lr}
 801678a:	4604      	mov	r4, r0
 801678c:	4608      	mov	r0, r1
 801678e:	2300      	movs	r3, #0
 8016790:	8023      	strh	r3, [r4, #0]
 8016792:	8063      	strh	r3, [r4, #2]
 8016794:	6803      	ldr	r3, [r0, #0]
 8016796:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801679a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801679e:	80a1      	strh	r1, [r4, #4]
 80167a0:	80e2      	strh	r2, [r4, #6]
 80167a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80167a4:	4621      	mov	r1, r4
 80167a6:	4798      	blx	r3
 80167a8:	4620      	mov	r0, r4
 80167aa:	bd10      	pop	{r4, pc}

080167ac <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80167ac:	b530      	push	{r4, r5, lr}
 80167ae:	8083      	strh	r3, [r0, #4]
 80167b0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80167b4:	80c3      	strh	r3, [r0, #6]
 80167b6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80167ba:	7203      	strb	r3, [r0, #8]
 80167bc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80167c0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80167c4:	7243      	strb	r3, [r0, #9]
 80167c6:	7a83      	ldrb	r3, [r0, #10]
 80167c8:	6141      	str	r1, [r0, #20]
 80167ca:	f365 0306 	bfi	r3, r5, #0, #7
 80167ce:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80167d2:	8302      	strh	r2, [r0, #24]
 80167d4:	f365 13c7 	bfi	r3, r5, #7, #1
 80167d8:	7283      	strb	r3, [r0, #10]
 80167da:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80167de:	72c3      	strb	r3, [r0, #11]
 80167e0:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 80167e4:	7303      	strb	r3, [r0, #12]
 80167e6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80167ea:	81c3      	strh	r3, [r0, #14]
 80167ec:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80167f0:	8203      	strh	r3, [r0, #16]
 80167f2:	4b01      	ldr	r3, [pc, #4]	; (80167f8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80167f4:	6003      	str	r3, [r0, #0]
 80167f6:	bd30      	pop	{r4, r5, pc}
 80167f8:	0802ea04 	.word	0x0802ea04

080167fc <_ZNK8touchgfx9ConstFont4findEt>:
 80167fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80167fe:	6944      	ldr	r4, [r0, #20]
 8016800:	b3bc      	cbz	r4, 8016872 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016802:	88a3      	ldrh	r3, [r4, #4]
 8016804:	8b02      	ldrh	r2, [r0, #24]
 8016806:	1acb      	subs	r3, r1, r3
 8016808:	f102 32ff 	add.w	r2, r2, #4294967295
 801680c:	d431      	bmi.n	8016872 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801680e:	4293      	cmp	r3, r2
 8016810:	dd0c      	ble.n	801682c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8016812:	230e      	movs	r3, #14
 8016814:	fb03 4302 	mla	r3, r3, r2, r4
 8016818:	889b      	ldrh	r3, [r3, #4]
 801681a:	1a5b      	subs	r3, r3, r1
 801681c:	1ad3      	subs	r3, r2, r3
 801681e:	429a      	cmp	r2, r3
 8016820:	db27      	blt.n	8016872 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016822:	2b00      	cmp	r3, #0
 8016824:	bfbc      	itt	lt
 8016826:	2302      	movlt	r3, #2
 8016828:	fb92 f3f3 	sdivlt	r3, r2, r3
 801682c:	2500      	movs	r5, #0
 801682e:	260e      	movs	r6, #14
 8016830:	4295      	cmp	r5, r2
 8016832:	dc1e      	bgt.n	8016872 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016834:	fb06 4003 	mla	r0, r6, r3, r4
 8016838:	8887      	ldrh	r7, [r0, #4]
 801683a:	42b9      	cmp	r1, r7
 801683c:	d01a      	beq.n	8016874 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801683e:	d20d      	bcs.n	801685c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8016840:	1e5a      	subs	r2, r3, #1
 8016842:	4295      	cmp	r5, r2
 8016844:	dc15      	bgt.n	8016872 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016846:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801684a:	1a5b      	subs	r3, r3, r1
 801684c:	1ad3      	subs	r3, r2, r3
 801684e:	429a      	cmp	r2, r3
 8016850:	db0f      	blt.n	8016872 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016852:	429d      	cmp	r5, r3
 8016854:	ddec      	ble.n	8016830 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016856:	1953      	adds	r3, r2, r5
 8016858:	105b      	asrs	r3, r3, #1
 801685a:	e7e9      	b.n	8016830 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801685c:	1c5d      	adds	r5, r3, #1
 801685e:	42aa      	cmp	r2, r5
 8016860:	db07      	blt.n	8016872 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016862:	8a43      	ldrh	r3, [r0, #18]
 8016864:	1acb      	subs	r3, r1, r3
 8016866:	442b      	add	r3, r5
 8016868:	429d      	cmp	r5, r3
 801686a:	dc02      	bgt.n	8016872 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801686c:	429a      	cmp	r2, r3
 801686e:	dadf      	bge.n	8016830 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016870:	e7f1      	b.n	8016856 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8016872:	2000      	movs	r0, #0
 8016874:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016876 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8016876:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016878:	4604      	mov	r4, r0
 801687a:	4617      	mov	r7, r2
 801687c:	461e      	mov	r6, r3
 801687e:	b911      	cbnz	r1, 8016886 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8016880:	2500      	movs	r5, #0
 8016882:	4628      	mov	r0, r5
 8016884:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016886:	290a      	cmp	r1, #10
 8016888:	d0fa      	beq.n	8016880 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801688a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801688e:	4291      	cmp	r1, r2
 8016890:	d0f6      	beq.n	8016880 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016892:	f242 020b 	movw	r2, #8203	; 0x200b
 8016896:	4291      	cmp	r1, r2
 8016898:	d0f2      	beq.n	8016880 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801689a:	f7ff ffaf 	bl	80167fc <_ZNK8touchgfx9ConstFont4findEt>
 801689e:	4605      	mov	r5, r0
 80168a0:	b950      	cbnz	r0, 80168b8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80168a2:	6823      	ldr	r3, [r4, #0]
 80168a4:	4620      	mov	r0, r4
 80168a6:	691b      	ldr	r3, [r3, #16]
 80168a8:	4798      	blx	r3
 80168aa:	4601      	mov	r1, r0
 80168ac:	4620      	mov	r0, r4
 80168ae:	f7ff ffa5 	bl	80167fc <_ZNK8touchgfx9ConstFont4findEt>
 80168b2:	4605      	mov	r5, r0
 80168b4:	2800      	cmp	r0, #0
 80168b6:	d0e3      	beq.n	8016880 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80168b8:	6823      	ldr	r3, [r4, #0]
 80168ba:	4629      	mov	r1, r5
 80168bc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80168be:	4620      	mov	r0, r4
 80168c0:	4798      	blx	r3
 80168c2:	6038      	str	r0, [r7, #0]
 80168c4:	6823      	ldr	r3, [r4, #0]
 80168c6:	4620      	mov	r0, r4
 80168c8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80168ca:	4798      	blx	r3
 80168cc:	7030      	strb	r0, [r6, #0]
 80168ce:	e7d8      	b.n	8016882 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080168d0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 80168d0:	b538      	push	{r3, r4, r5, lr}
 80168d2:	4605      	mov	r5, r0
 80168d4:	f002 fb56 	bl	8018f84 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80168d8:	4604      	mov	r4, r0
 80168da:	4628      	mov	r0, r5
 80168dc:	f002 fa96 	bl	8018e0c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80168e0:	2800      	cmp	r0, #0
 80168e2:	bf14      	ite	ne
 80168e4:	2002      	movne	r0, #2
 80168e6:	2000      	moveq	r0, #0
 80168e8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80168ec:	b280      	uxth	r0, r0
 80168ee:	bd38      	pop	{r3, r4, r5, pc}

080168f0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 80168f0:	b538      	push	{r3, r4, r5, lr}
 80168f2:	4605      	mov	r5, r0
 80168f4:	f002 fb46 	bl	8018f84 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80168f8:	4604      	mov	r4, r0
 80168fa:	4628      	mov	r0, r5
 80168fc:	f002 fa86 	bl	8018e0c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016900:	2800      	cmp	r0, #0
 8016902:	bf14      	ite	ne
 8016904:	2002      	movne	r0, #2
 8016906:	2000      	moveq	r0, #0
 8016908:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801690c:	f040 0001 	orr.w	r0, r0, #1
 8016910:	b280      	uxth	r0, r0
 8016912:	bd38      	pop	{r3, r4, r5, pc}

08016914 <_ZN8touchgfx4clzuEm>:
 8016914:	4603      	mov	r3, r0
 8016916:	b1c8      	cbz	r0, 801694c <_ZN8touchgfx4clzuEm+0x38>
 8016918:	0c02      	lsrs	r2, r0, #16
 801691a:	0412      	lsls	r2, r2, #16
 801691c:	b9a2      	cbnz	r2, 8016948 <_ZN8touchgfx4clzuEm+0x34>
 801691e:	0403      	lsls	r3, r0, #16
 8016920:	2010      	movs	r0, #16
 8016922:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8016926:	bf04      	itt	eq
 8016928:	021b      	lsleq	r3, r3, #8
 801692a:	3008      	addeq	r0, #8
 801692c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8016930:	bf04      	itt	eq
 8016932:	011b      	lsleq	r3, r3, #4
 8016934:	3004      	addeq	r0, #4
 8016936:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801693a:	bf04      	itt	eq
 801693c:	009b      	lsleq	r3, r3, #2
 801693e:	3002      	addeq	r0, #2
 8016940:	2b00      	cmp	r3, #0
 8016942:	db04      	blt.n	801694e <_ZN8touchgfx4clzuEm+0x3a>
 8016944:	3001      	adds	r0, #1
 8016946:	4770      	bx	lr
 8016948:	2000      	movs	r0, #0
 801694a:	e7ea      	b.n	8016922 <_ZN8touchgfx4clzuEm+0xe>
 801694c:	2020      	movs	r0, #32
 801694e:	4770      	bx	lr

08016950 <_ZN8touchgfx7muldivuEmmmRm>:
 8016950:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8016954:	460f      	mov	r7, r1
 8016956:	4615      	mov	r5, r2
 8016958:	461e      	mov	r6, r3
 801695a:	4601      	mov	r1, r0
 801695c:	b100      	cbz	r0, 8016960 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801695e:	b927      	cbnz	r7, 801696a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8016960:	2000      	movs	r0, #0
 8016962:	6030      	str	r0, [r6, #0]
 8016964:	b002      	add	sp, #8
 8016966:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801696a:	f7ff ffd3 	bl	8016914 <_ZN8touchgfx4clzuEm>
 801696e:	b980      	cbnz	r0, 8016992 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8016970:	4638      	mov	r0, r7
 8016972:	f7ff ffcf 	bl	8016914 <_ZN8touchgfx4clzuEm>
 8016976:	2800      	cmp	r0, #0
 8016978:	dd05      	ble.n	8016986 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801697a:	4633      	mov	r3, r6
 801697c:	462a      	mov	r2, r5
 801697e:	4638      	mov	r0, r7
 8016980:	f7ff ffe6 	bl	8016950 <_ZN8touchgfx7muldivuEmmmRm>
 8016984:	e7ee      	b.n	8016964 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016986:	f04f 33ff 	mov.w	r3, #4294967295
 801698a:	6033      	str	r3, [r6, #0]
 801698c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8016990:	e7e8      	b.n	8016964 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016992:	fa37 f800 	lsrs.w	r8, r7, r0
 8016996:	fb07 f301 	mul.w	r3, r7, r1
 801699a:	d105      	bne.n	80169a8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801699c:	fbb3 f0f5 	udiv	r0, r3, r5
 80169a0:	fb05 3510 	mls	r5, r5, r0, r3
 80169a4:	6035      	str	r5, [r6, #0]
 80169a6:	e7dd      	b.n	8016964 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80169a8:	2301      	movs	r3, #1
 80169aa:	fa01 fa00 	lsl.w	sl, r1, r0
 80169ae:	fa03 f000 	lsl.w	r0, r3, r0
 80169b2:	3801      	subs	r0, #1
 80169b4:	462a      	mov	r2, r5
 80169b6:	4633      	mov	r3, r6
 80169b8:	4038      	ands	r0, r7
 80169ba:	f7ff ffc9 	bl	8016950 <_ZN8touchgfx7muldivuEmmmRm>
 80169be:	fbba f9f5 	udiv	r9, sl, r5
 80169c2:	462a      	mov	r2, r5
 80169c4:	4607      	mov	r7, r0
 80169c6:	ab01      	add	r3, sp, #4
 80169c8:	fb05 a119 	mls	r1, r5, r9, sl
 80169cc:	4640      	mov	r0, r8
 80169ce:	f7ff ffbf 	bl	8016950 <_ZN8touchgfx7muldivuEmmmRm>
 80169d2:	9b01      	ldr	r3, [sp, #4]
 80169d4:	6832      	ldr	r2, [r6, #0]
 80169d6:	fb08 f409 	mul.w	r4, r8, r9
 80169da:	441a      	add	r2, r3
 80169dc:	fbb2 f3f5 	udiv	r3, r2, r5
 80169e0:	441c      	add	r4, r3
 80169e2:	443c      	add	r4, r7
 80169e4:	4420      	add	r0, r4
 80169e6:	fb05 2513 	mls	r5, r5, r3, r2
 80169ea:	e7db      	b.n	80169a4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

080169ec <_ZN8touchgfx6muldivElllRl>:
 80169ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80169ee:	2800      	cmp	r0, #0
 80169f0:	bfba      	itte	lt
 80169f2:	4240      	neglt	r0, r0
 80169f4:	f04f 34ff 	movlt.w	r4, #4294967295
 80169f8:	2401      	movge	r4, #1
 80169fa:	2900      	cmp	r1, #0
 80169fc:	bfbc      	itt	lt
 80169fe:	4249      	neglt	r1, r1
 8016a00:	4264      	neglt	r4, r4
 8016a02:	2a00      	cmp	r2, #0
 8016a04:	bfb6      	itet	lt
 8016a06:	4265      	neglt	r5, r4
 8016a08:	4625      	movge	r5, r4
 8016a0a:	4252      	neglt	r2, r2
 8016a0c:	4288      	cmp	r0, r1
 8016a0e:	461e      	mov	r6, r3
 8016a10:	bfc2      	ittt	gt
 8016a12:	4603      	movgt	r3, r0
 8016a14:	4608      	movgt	r0, r1
 8016a16:	4619      	movgt	r1, r3
 8016a18:	ab01      	add	r3, sp, #4
 8016a1a:	f7ff ff99 	bl	8016950 <_ZN8touchgfx7muldivuEmmmRm>
 8016a1e:	9b01      	ldr	r3, [sp, #4]
 8016a20:	4368      	muls	r0, r5
 8016a22:	435c      	muls	r4, r3
 8016a24:	6034      	str	r4, [r6, #0]
 8016a26:	b002      	add	sp, #8
 8016a28:	bd70      	pop	{r4, r5, r6, pc}

08016a2a <_ZN8touchgfx6muldivElll>:
 8016a2a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8016a2c:	4606      	mov	r6, r0
 8016a2e:	ab01      	add	r3, sp, #4
 8016a30:	460d      	mov	r5, r1
 8016a32:	4614      	mov	r4, r2
 8016a34:	f7ff ffda 	bl	80169ec <_ZN8touchgfx6muldivElllRl>
 8016a38:	2e00      	cmp	r6, #0
 8016a3a:	db20      	blt.n	8016a7e <_ZN8touchgfx6muldivElll+0x54>
 8016a3c:	bf14      	ite	ne
 8016a3e:	2301      	movne	r3, #1
 8016a40:	2300      	moveq	r3, #0
 8016a42:	2d00      	cmp	r5, #0
 8016a44:	db1e      	blt.n	8016a84 <_ZN8touchgfx6muldivElll+0x5a>
 8016a46:	bf14      	ite	ne
 8016a48:	2201      	movne	r2, #1
 8016a4a:	2200      	moveq	r2, #0
 8016a4c:	2c00      	cmp	r4, #0
 8016a4e:	fb03 f202 	mul.w	r2, r3, r2
 8016a52:	db1a      	blt.n	8016a8a <_ZN8touchgfx6muldivElll+0x60>
 8016a54:	bf14      	ite	ne
 8016a56:	2301      	movne	r3, #1
 8016a58:	2300      	moveq	r3, #0
 8016a5a:	4353      	muls	r3, r2
 8016a5c:	2b01      	cmp	r3, #1
 8016a5e:	d117      	bne.n	8016a90 <_ZN8touchgfx6muldivElll+0x66>
 8016a60:	9b01      	ldr	r3, [sp, #4]
 8016a62:	2c00      	cmp	r4, #0
 8016a64:	bfb8      	it	lt
 8016a66:	4264      	neglt	r4, r4
 8016a68:	2b00      	cmp	r3, #0
 8016a6a:	f104 0401 	add.w	r4, r4, #1
 8016a6e:	bfb8      	it	lt
 8016a70:	425b      	neglt	r3, r3
 8016a72:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8016a76:	db00      	blt.n	8016a7a <_ZN8touchgfx6muldivElll+0x50>
 8016a78:	3001      	adds	r0, #1
 8016a7a:	b002      	add	sp, #8
 8016a7c:	bd70      	pop	{r4, r5, r6, pc}
 8016a7e:	f04f 33ff 	mov.w	r3, #4294967295
 8016a82:	e7de      	b.n	8016a42 <_ZN8touchgfx6muldivElll+0x18>
 8016a84:	f04f 32ff 	mov.w	r2, #4294967295
 8016a88:	e7e0      	b.n	8016a4c <_ZN8touchgfx6muldivElll+0x22>
 8016a8a:	f04f 33ff 	mov.w	r3, #4294967295
 8016a8e:	e7e4      	b.n	8016a5a <_ZN8touchgfx6muldivElll+0x30>
 8016a90:	3301      	adds	r3, #1
 8016a92:	d1f2      	bne.n	8016a7a <_ZN8touchgfx6muldivElll+0x50>
 8016a94:	9b01      	ldr	r3, [sp, #4]
 8016a96:	2c00      	cmp	r4, #0
 8016a98:	bfb8      	it	lt
 8016a9a:	4264      	neglt	r4, r4
 8016a9c:	2b00      	cmp	r3, #0
 8016a9e:	bfb8      	it	lt
 8016aa0:	425b      	neglt	r3, r3
 8016aa2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8016aa6:	bfc8      	it	gt
 8016aa8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8016aac:	e7e5      	b.n	8016a7a <_ZN8touchgfx6muldivElll+0x50>

08016aae <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8016aae:	2000      	movs	r0, #0
 8016ab0:	4770      	bx	lr

08016ab2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8016ab2:	2001      	movs	r0, #1
 8016ab4:	4770      	bx	lr

08016ab6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8016ab6:	2002      	movs	r0, #2
 8016ab8:	4770      	bx	lr

08016aba <_ZN8touchgfx6ScreenD1Ev>:
 8016aba:	4770      	bx	lr

08016abc <_ZN8touchgfx12GestureEventD1Ev>:
 8016abc:	4770      	bx	lr

08016abe <_ZN8touchgfx9DragEventD1Ev>:
 8016abe:	4770      	bx	lr

08016ac0 <_ZN8touchgfx10ClickEventD1Ev>:
 8016ac0:	4770      	bx	lr

08016ac2 <_ZN8touchgfx10ClickEventD0Ev>:
 8016ac2:	b510      	push	{r4, lr}
 8016ac4:	210c      	movs	r1, #12
 8016ac6:	4604      	mov	r4, r0
 8016ac8:	f012 fd51 	bl	802956e <_ZdlPvj>
 8016acc:	4620      	mov	r0, r4
 8016ace:	bd10      	pop	{r4, pc}

08016ad0 <_ZN8touchgfx9DragEventD0Ev>:
 8016ad0:	b510      	push	{r4, lr}
 8016ad2:	2110      	movs	r1, #16
 8016ad4:	4604      	mov	r4, r0
 8016ad6:	f012 fd4a 	bl	802956e <_ZdlPvj>
 8016ada:	4620      	mov	r0, r4
 8016adc:	bd10      	pop	{r4, pc}

08016ade <_ZN8touchgfx12GestureEventD0Ev>:
 8016ade:	b510      	push	{r4, lr}
 8016ae0:	210c      	movs	r1, #12
 8016ae2:	4604      	mov	r4, r0
 8016ae4:	f012 fd43 	bl	802956e <_ZdlPvj>
 8016ae8:	4620      	mov	r0, r4
 8016aea:	bd10      	pop	{r4, pc}

08016aec <_ZN8touchgfx6ScreenD0Ev>:
 8016aec:	b510      	push	{r4, lr}
 8016aee:	213c      	movs	r1, #60	; 0x3c
 8016af0:	4604      	mov	r4, r0
 8016af2:	f012 fd3c 	bl	802956e <_ZdlPvj>
 8016af6:	4620      	mov	r0, r4
 8016af8:	bd10      	pop	{r4, pc}
	...

08016afc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8016afc:	b530      	push	{r4, r5, lr}
 8016afe:	460d      	mov	r5, r1
 8016b00:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016b02:	b087      	sub	sp, #28
 8016b04:	4604      	mov	r4, r0
 8016b06:	b301      	cbz	r1, 8016b4a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8016b08:	a801      	add	r0, sp, #4
 8016b0a:	f7ff fe3d 	bl	8016788 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016b0e:	892a      	ldrh	r2, [r5, #8]
 8016b10:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8016b14:	7928      	ldrb	r0, [r5, #4]
 8016b16:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8016b1a:	f88d 0010 	strb.w	r0, [sp, #16]
 8016b1e:	1ad2      	subs	r2, r2, r3
 8016b20:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8016b22:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8016b24:	f8ad 1012 	strh.w	r1, [sp, #18]
 8016b28:	441a      	add	r2, r3
 8016b2a:	896b      	ldrh	r3, [r5, #10]
 8016b2c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8016b30:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016b34:	1b5b      	subs	r3, r3, r5
 8016b36:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8016b38:	442b      	add	r3, r5
 8016b3a:	4d05      	ldr	r5, [pc, #20]	; (8016b50 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8016b3c:	9503      	str	r5, [sp, #12]
 8016b3e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016b42:	6803      	ldr	r3, [r0, #0]
 8016b44:	a903      	add	r1, sp, #12
 8016b46:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016b48:	4798      	blx	r3
 8016b4a:	b007      	add	sp, #28
 8016b4c:	bd30      	pop	{r4, r5, pc}
 8016b4e:	bf00      	nop
 8016b50:	0802ea8c 	.word	0x0802ea8c

08016b54 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8016b54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016b58:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8016b5a:	b08a      	sub	sp, #40	; 0x28
 8016b5c:	4604      	mov	r4, r0
 8016b5e:	460d      	mov	r5, r1
 8016b60:	b113      	cbz	r3, 8016b68 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8016b62:	790b      	ldrb	r3, [r1, #4]
 8016b64:	2b00      	cmp	r3, #0
 8016b66:	d044      	beq.n	8016bf2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016b68:	f104 0804 	add.w	r8, r4, #4
 8016b6c:	4641      	mov	r1, r8
 8016b6e:	a803      	add	r0, sp, #12
 8016b70:	f7ff fe0a 	bl	8016788 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016b74:	792b      	ldrb	r3, [r5, #4]
 8016b76:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8016b7a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8016b7e:	b983      	cbnz	r3, 8016ba2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8016b80:	892a      	ldrh	r2, [r5, #8]
 8016b82:	88e9      	ldrh	r1, [r5, #6]
 8016b84:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8016b88:	1b92      	subs	r2, r2, r6
 8016b8a:	1bc9      	subs	r1, r1, r7
 8016b8c:	9301      	str	r3, [sp, #4]
 8016b8e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8016b92:	9300      	str	r3, [sp, #0]
 8016b94:	b212      	sxth	r2, r2
 8016b96:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8016b9a:	b209      	sxth	r1, r1
 8016b9c:	4640      	mov	r0, r8
 8016b9e:	f7f9 fa79 	bl	8010094 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8016ba2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8016ba4:	b329      	cbz	r1, 8016bf2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016ba6:	a805      	add	r0, sp, #20
 8016ba8:	f7ff fdee 	bl	8016788 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016bac:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8016bb0:	792b      	ldrb	r3, [r5, #4]
 8016bb2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8016bb4:	f88d 3020 	strb.w	r3, [sp, #32]
 8016bb8:	1abf      	subs	r7, r7, r2
 8016bba:	88ea      	ldrh	r2, [r5, #6]
 8016bbc:	4417      	add	r7, r2
 8016bbe:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8016bc0:	4417      	add	r7, r2
 8016bc2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8016bc6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8016bca:	1ab6      	subs	r6, r6, r2
 8016bcc:	892a      	ldrh	r2, [r5, #8]
 8016bce:	4416      	add	r6, r2
 8016bd0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8016bd2:	4416      	add	r6, r2
 8016bd4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8016bd8:	4a07      	ldr	r2, [pc, #28]	; (8016bf8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8016bda:	9207      	str	r2, [sp, #28]
 8016bdc:	2600      	movs	r6, #0
 8016bde:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8016be2:	6803      	ldr	r3, [r0, #0]
 8016be4:	a907      	add	r1, sp, #28
 8016be6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016be8:	4798      	blx	r3
 8016bea:	792b      	ldrb	r3, [r5, #4]
 8016bec:	b10b      	cbz	r3, 8016bf2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016bee:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8016bf2:	b00a      	add	sp, #40	; 0x28
 8016bf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016bf8:	0802ea64 	.word	0x0802ea64

08016bfc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8016bfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016c00:	460c      	mov	r4, r1
 8016c02:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016c04:	b088      	sub	sp, #32
 8016c06:	4605      	mov	r5, r0
 8016c08:	2900      	cmp	r1, #0
 8016c0a:	d06d      	beq.n	8016ce8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8016c0c:	4668      	mov	r0, sp
 8016c0e:	f7ff fdbb 	bl	8016788 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016c12:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8016c14:	88e3      	ldrh	r3, [r4, #6]
 8016c16:	f9bd 8000 	ldrsh.w	r8, [sp]
 8016c1a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8016c1e:	440b      	add	r3, r1
 8016c20:	b21b      	sxth	r3, r3
 8016c22:	4543      	cmp	r3, r8
 8016c24:	db31      	blt.n	8016c8a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016c26:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8016c2a:	44c4      	add	ip, r8
 8016c2c:	fa0f fc8c 	sxth.w	ip, ip
 8016c30:	4563      	cmp	r3, ip
 8016c32:	da2a      	bge.n	8016c8a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016c34:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8016c36:	8926      	ldrh	r6, [r4, #8]
 8016c38:	4416      	add	r6, r2
 8016c3a:	b236      	sxth	r6, r6
 8016c3c:	42be      	cmp	r6, r7
 8016c3e:	db24      	blt.n	8016c8a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016c40:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8016c44:	4438      	add	r0, r7
 8016c46:	b200      	sxth	r0, r0
 8016c48:	4286      	cmp	r6, r0
 8016c4a:	da1e      	bge.n	8016c8a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016c4c:	8963      	ldrh	r3, [r4, #10]
 8016c4e:	4419      	add	r1, r3
 8016c50:	b209      	sxth	r1, r1
 8016c52:	4541      	cmp	r1, r8
 8016c54:	db08      	blt.n	8016c68 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016c56:	4561      	cmp	r1, ip
 8016c58:	da06      	bge.n	8016c68 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016c5a:	89a3      	ldrh	r3, [r4, #12]
 8016c5c:	441a      	add	r2, r3
 8016c5e:	b212      	sxth	r2, r2
 8016c60:	42ba      	cmp	r2, r7
 8016c62:	db01      	blt.n	8016c68 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016c64:	4282      	cmp	r2, r0
 8016c66:	db10      	blt.n	8016c8a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016c68:	4b21      	ldr	r3, [pc, #132]	; (8016cf0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8016c6a:	9304      	str	r3, [sp, #16]
 8016c6c:	2302      	movs	r3, #2
 8016c6e:	f88d 3014 	strb.w	r3, [sp, #20]
 8016c72:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016c74:	2300      	movs	r3, #0
 8016c76:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016c7a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8016c7e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8016c82:	6803      	ldr	r3, [r0, #0]
 8016c84:	a904      	add	r1, sp, #16
 8016c86:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016c88:	4798      	blx	r3
 8016c8a:	1d29      	adds	r1, r5, #4
 8016c8c:	a802      	add	r0, sp, #8
 8016c8e:	f7ff fd7b 	bl	8016788 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016c92:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016c96:	88e0      	ldrh	r0, [r4, #6]
 8016c98:	7921      	ldrb	r1, [r4, #4]
 8016c9a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8016c9e:	8922      	ldrh	r2, [r4, #8]
 8016ca0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8016ca2:	f88d 1014 	strb.w	r1, [sp, #20]
 8016ca6:	eba3 0808 	sub.w	r8, r3, r8
 8016caa:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016cae:	1bdf      	subs	r7, r3, r7
 8016cb0:	b2bb      	uxth	r3, r7
 8016cb2:	fa1f f888 	uxth.w	r8, r8
 8016cb6:	8967      	ldrh	r7, [r4, #10]
 8016cb8:	89a4      	ldrh	r4, [r4, #12]
 8016cba:	4440      	add	r0, r8
 8016cbc:	4460      	add	r0, ip
 8016cbe:	441a      	add	r2, r3
 8016cc0:	44b8      	add	r8, r7
 8016cc2:	4423      	add	r3, r4
 8016cc4:	f8ad 0016 	strh.w	r0, [sp, #22]
 8016cc8:	4433      	add	r3, r6
 8016cca:	4432      	add	r2, r6
 8016ccc:	44e0      	add	r8, ip
 8016cce:	4c09      	ldr	r4, [pc, #36]	; (8016cf4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8016cd0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016cd2:	9404      	str	r4, [sp, #16]
 8016cd4:	f8ad 2018 	strh.w	r2, [sp, #24]
 8016cd8:	f8ad 801a 	strh.w	r8, [sp, #26]
 8016cdc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8016ce0:	6803      	ldr	r3, [r0, #0]
 8016ce2:	a904      	add	r1, sp, #16
 8016ce4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016ce6:	4798      	blx	r3
 8016ce8:	b008      	add	sp, #32
 8016cea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016cee:	bf00      	nop
 8016cf0:	0802ea64 	.word	0x0802ea64
 8016cf4:	0802ea78 	.word	0x0802ea78

08016cf8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8016cf8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8016cfa:	4604      	mov	r4, r0
 8016cfc:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8016d00:	3201      	adds	r2, #1
 8016d02:	d112      	bne.n	8016d2a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8016d04:	6803      	ldr	r3, [r0, #0]
 8016d06:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016d0a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016d0e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016d12:	2500      	movs	r5, #0
 8016d14:	9500      	str	r5, [sp, #0]
 8016d16:	466d      	mov	r5, sp
 8016d18:	4629      	mov	r1, r5
 8016d1a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016d1e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016d20:	4798      	blx	r3
 8016d22:	e895 0003 	ldmia.w	r5, {r0, r1}
 8016d26:	e884 0003 	stmia.w	r4, {r0, r1}
 8016d2a:	4620      	mov	r0, r4
 8016d2c:	b003      	add	sp, #12
 8016d2e:	bd30      	pop	{r4, r5, pc}

08016d30 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8016d30:	b513      	push	{r0, r1, r4, lr}
 8016d32:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8016d36:	3301      	adds	r3, #1
 8016d38:	4604      	mov	r4, r0
 8016d3a:	d109      	bne.n	8016d50 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8016d3c:	4601      	mov	r1, r0
 8016d3e:	4668      	mov	r0, sp
 8016d40:	f7ff fd22 	bl	8016788 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016d44:	f8bd 3000 	ldrh.w	r3, [sp]
 8016d48:	8423      	strh	r3, [r4, #32]
 8016d4a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016d4e:	8463      	strh	r3, [r4, #34]	; 0x22
 8016d50:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8016d54:	b002      	add	sp, #8
 8016d56:	bd10      	pop	{r4, pc}

08016d58 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8016d58:	b513      	push	{r0, r1, r4, lr}
 8016d5a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8016d5e:	3301      	adds	r3, #1
 8016d60:	4604      	mov	r4, r0
 8016d62:	d109      	bne.n	8016d78 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8016d64:	4601      	mov	r1, r0
 8016d66:	4668      	mov	r0, sp
 8016d68:	f7ff fd0e 	bl	8016788 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016d6c:	f8bd 3000 	ldrh.w	r3, [sp]
 8016d70:	8423      	strh	r3, [r4, #32]
 8016d72:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016d76:	8463      	strh	r3, [r4, #34]	; 0x22
 8016d78:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8016d7c:	b002      	add	sp, #8
 8016d7e:	bd10      	pop	{r4, pc}

08016d80 <_ZN8touchgfx6ScreenC1Ev>:
 8016d80:	b570      	push	{r4, r5, r6, lr}
 8016d82:	4605      	mov	r5, r0
 8016d84:	4b16      	ldr	r3, [pc, #88]	; (8016de0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8016d86:	f845 3b04 	str.w	r3, [r5], #4
 8016d8a:	2300      	movs	r3, #0
 8016d8c:	8103      	strh	r3, [r0, #8]
 8016d8e:	8143      	strh	r3, [r0, #10]
 8016d90:	8183      	strh	r3, [r0, #12]
 8016d92:	81c3      	strh	r3, [r0, #14]
 8016d94:	8203      	strh	r3, [r0, #16]
 8016d96:	8243      	strh	r3, [r0, #18]
 8016d98:	8283      	strh	r3, [r0, #20]
 8016d9a:	82c3      	strh	r3, [r0, #22]
 8016d9c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8016da0:	6203      	str	r3, [r0, #32]
 8016da2:	8483      	strh	r3, [r0, #36]	; 0x24
 8016da4:	84c3      	strh	r3, [r0, #38]	; 0x26
 8016da6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8016daa:	4a0e      	ldr	r2, [pc, #56]	; (8016de4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8016dac:	6343      	str	r3, [r0, #52]	; 0x34
 8016dae:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8016db2:	4b0d      	ldr	r3, [pc, #52]	; (8016de8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8016db4:	6042      	str	r2, [r0, #4]
 8016db6:	f9b3 6000 	ldrsh.w	r6, [r3]
 8016dba:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8016dbc:	4a0b      	ldr	r2, [pc, #44]	; (8016dec <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8016dbe:	4604      	mov	r4, r0
 8016dc0:	2101      	movs	r1, #1
 8016dc2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8016dc6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8016dca:	f9b2 1000 	ldrsh.w	r1, [r2]
 8016dce:	4628      	mov	r0, r5
 8016dd0:	4798      	blx	r3
 8016dd2:	6863      	ldr	r3, [r4, #4]
 8016dd4:	4628      	mov	r0, r5
 8016dd6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016dd8:	4631      	mov	r1, r6
 8016dda:	4798      	blx	r3
 8016ddc:	4620      	mov	r0, r4
 8016dde:	bd70      	pop	{r4, r5, r6, pc}
 8016de0:	0802eaa0 	.word	0x0802eaa0
 8016de4:	0802e304 	.word	0x0802e304
 8016de8:	20012f22 	.word	0x20012f22
 8016dec:	20012f20 	.word	0x20012f20

08016df0 <_ZN8touchgfx6Screen4drawEv>:
 8016df0:	b507      	push	{r0, r1, r2, lr}
 8016df2:	4b09      	ldr	r3, [pc, #36]	; (8016e18 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8016df4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016df8:	4b08      	ldr	r3, [pc, #32]	; (8016e1c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8016dfa:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016dfe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016e02:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016e06:	6803      	ldr	r3, [r0, #0]
 8016e08:	2100      	movs	r1, #0
 8016e0a:	9100      	str	r1, [sp, #0]
 8016e0c:	689b      	ldr	r3, [r3, #8]
 8016e0e:	4669      	mov	r1, sp
 8016e10:	4798      	blx	r3
 8016e12:	b003      	add	sp, #12
 8016e14:	f85d fb04 	ldr.w	pc, [sp], #4
 8016e18:	20012f20 	.word	0x20012f20
 8016e1c:	20012f22 	.word	0x20012f22

08016e20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8016e20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016e24:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8016e28:	2b00      	cmp	r3, #0
 8016e2a:	b089      	sub	sp, #36	; 0x24
 8016e2c:	4680      	mov	r8, r0
 8016e2e:	460c      	mov	r4, r1
 8016e30:	4615      	mov	r5, r2
 8016e32:	dd0e      	ble.n	8016e52 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016e34:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8016e38:	2b00      	cmp	r3, #0
 8016e3a:	dd0a      	ble.n	8016e52 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016e3c:	4628      	mov	r0, r5
 8016e3e:	f7ff ff5b 	bl	8016cf8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016e42:	4621      	mov	r1, r4
 8016e44:	f7fe fa3d 	bl	80152c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016e48:	69eb      	ldr	r3, [r5, #28]
 8016e4a:	b928      	cbnz	r0, 8016e58 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8016e4c:	461d      	mov	r5, r3
 8016e4e:	2b00      	cmp	r3, #0
 8016e50:	d1f4      	bne.n	8016e3c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8016e52:	b009      	add	sp, #36	; 0x24
 8016e54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016e58:	ae04      	add	r6, sp, #16
 8016e5a:	2b00      	cmp	r3, #0
 8016e5c:	f000 80b5 	beq.w	8016fca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016e60:	682b      	ldr	r3, [r5, #0]
 8016e62:	4629      	mov	r1, r5
 8016e64:	68db      	ldr	r3, [r3, #12]
 8016e66:	a802      	add	r0, sp, #8
 8016e68:	4798      	blx	r3
 8016e6a:	4628      	mov	r0, r5
 8016e6c:	f7ff ff60 	bl	8016d30 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016e70:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8016e74:	4407      	add	r7, r0
 8016e76:	4628      	mov	r0, r5
 8016e78:	f7ff ff6e 	bl	8016d58 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016e7c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016e80:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016e84:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016e88:	4418      	add	r0, r3
 8016e8a:	4621      	mov	r1, r4
 8016e8c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8016e90:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016e94:	b23f      	sxth	r7, r7
 8016e96:	4630      	mov	r0, r6
 8016e98:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016e9c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8016ea0:	f7f9 f9dc 	bl	801025c <_ZN8touchgfx4RectaNERKS0_>
 8016ea4:	4628      	mov	r0, r5
 8016ea6:	f7ff ff27 	bl	8016cf8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016eaa:	4602      	mov	r2, r0
 8016eac:	e896 0003 	ldmia.w	r6, {r0, r1}
 8016eb0:	ab06      	add	r3, sp, #24
 8016eb2:	e883 0003 	stmia.w	r3, {r0, r1}
 8016eb6:	4611      	mov	r1, r2
 8016eb8:	4618      	mov	r0, r3
 8016eba:	f7f9 f9cf 	bl	801025c <_ZN8touchgfx4RectaNERKS0_>
 8016ebe:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016ec2:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016ec6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8016eca:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8016ece:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8016ed2:	4299      	cmp	r1, r3
 8016ed4:	d10b      	bne.n	8016eee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016ed6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016eda:	4552      	cmp	r2, sl
 8016edc:	d107      	bne.n	8016eee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016ede:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8016ee2:	455a      	cmp	r2, fp
 8016ee4:	d103      	bne.n	8016eee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016ee6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8016eea:	454a      	cmp	r2, r9
 8016eec:	d06d      	beq.n	8016fca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016eee:	f1bb 0f00 	cmp.w	fp, #0
 8016ef2:	dd65      	ble.n	8016fc0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016ef4:	f1b9 0f00 	cmp.w	r9, #0
 8016ef8:	dd62      	ble.n	8016fc0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016efa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016efe:	fa1f f08a 	uxth.w	r0, sl
 8016f02:	4552      	cmp	r2, sl
 8016f04:	9000      	str	r0, [sp, #0]
 8016f06:	da12      	bge.n	8016f2e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8016f08:	9301      	str	r3, [sp, #4]
 8016f0a:	9b00      	ldr	r3, [sp, #0]
 8016f0c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016f10:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016f14:	1a9a      	subs	r2, r3, r2
 8016f16:	f8ad 1010 	strh.w	r1, [sp, #16]
 8016f1a:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016f1e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8016f22:	69ea      	ldr	r2, [r5, #28]
 8016f24:	4631      	mov	r1, r6
 8016f26:	4640      	mov	r0, r8
 8016f28:	f7ff ff7a 	bl	8016e20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016f2c:	9b01      	ldr	r3, [sp, #4]
 8016f2e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8016f32:	429a      	cmp	r2, r3
 8016f34:	b29f      	uxth	r7, r3
 8016f36:	da0d      	bge.n	8016f54 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8016f38:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016f3c:	1aba      	subs	r2, r7, r2
 8016f3e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016f42:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016f46:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016f4a:	69ea      	ldr	r2, [r5, #28]
 8016f4c:	4631      	mov	r1, r6
 8016f4e:	4640      	mov	r0, r8
 8016f50:	f7ff ff66 	bl	8016e20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016f54:	8822      	ldrh	r2, [r4, #0]
 8016f56:	88a3      	ldrh	r3, [r4, #4]
 8016f58:	445f      	add	r7, fp
 8016f5a:	4413      	add	r3, r2
 8016f5c:	b29b      	uxth	r3, r3
 8016f5e:	b2bf      	uxth	r7, r7
 8016f60:	b23a      	sxth	r2, r7
 8016f62:	b219      	sxth	r1, r3
 8016f64:	4291      	cmp	r1, r2
 8016f66:	dd0d      	ble.n	8016f84 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8016f68:	1bdb      	subs	r3, r3, r7
 8016f6a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016f6e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016f72:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016f76:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016f7a:	69ea      	ldr	r2, [r5, #28]
 8016f7c:	4631      	mov	r1, r6
 8016f7e:	4640      	mov	r0, r8
 8016f80:	f7ff ff4e 	bl	8016e20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016f84:	88e2      	ldrh	r2, [r4, #6]
 8016f86:	8863      	ldrh	r3, [r4, #2]
 8016f88:	4413      	add	r3, r2
 8016f8a:	9a00      	ldr	r2, [sp, #0]
 8016f8c:	444a      	add	r2, r9
 8016f8e:	b29b      	uxth	r3, r3
 8016f90:	fa1f f982 	uxth.w	r9, r2
 8016f94:	fa0f f289 	sxth.w	r2, r9
 8016f98:	b219      	sxth	r1, r3
 8016f9a:	428a      	cmp	r2, r1
 8016f9c:	da15      	bge.n	8016fca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016f9e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8016fa2:	f9b4 0000 	ldrsh.w	r0, [r4]
 8016fa6:	f8ad 1014 	strh.w	r1, [sp, #20]
 8016faa:	eba3 0309 	sub.w	r3, r3, r9
 8016fae:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016fb2:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016fb6:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016fba:	69ea      	ldr	r2, [r5, #28]
 8016fbc:	4631      	mov	r1, r6
 8016fbe:	e001      	b.n	8016fc4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8016fc0:	69ea      	ldr	r2, [r5, #28]
 8016fc2:	4621      	mov	r1, r4
 8016fc4:	4640      	mov	r0, r8
 8016fc6:	f7ff ff2b 	bl	8016e20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016fca:	4628      	mov	r0, r5
 8016fcc:	f7ff fe94 	bl	8016cf8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016fd0:	6861      	ldr	r1, [r4, #4]
 8016fd2:	4602      	mov	r2, r0
 8016fd4:	6820      	ldr	r0, [r4, #0]
 8016fd6:	4633      	mov	r3, r6
 8016fd8:	c303      	stmia	r3!, {r0, r1}
 8016fda:	4611      	mov	r1, r2
 8016fdc:	4630      	mov	r0, r6
 8016fde:	f7f9 f93d 	bl	801025c <_ZN8touchgfx4RectaNERKS0_>
 8016fe2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8016fe6:	2b00      	cmp	r3, #0
 8016fe8:	f77f af33 	ble.w	8016e52 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016fec:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016ff0:	2b00      	cmp	r3, #0
 8016ff2:	f77f af2e 	ble.w	8016e52 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016ff6:	4628      	mov	r0, r5
 8016ff8:	f7ff fe9a 	bl	8016d30 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016ffc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8017000:	1a18      	subs	r0, r3, r0
 8017002:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017006:	4628      	mov	r0, r5
 8017008:	f7ff fea6 	bl	8016d58 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801700c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017010:	1a18      	subs	r0, r3, r0
 8017012:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017016:	682b      	ldr	r3, [r5, #0]
 8017018:	4631      	mov	r1, r6
 801701a:	689b      	ldr	r3, [r3, #8]
 801701c:	4628      	mov	r0, r5
 801701e:	4798      	blx	r3
 8017020:	e717      	b.n	8016e52 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08017022 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8017022:	b570      	push	{r4, r5, r6, lr}
 8017024:	460c      	mov	r4, r1
 8017026:	b086      	sub	sp, #24
 8017028:	1d06      	adds	r6, r0, #4
 801702a:	2300      	movs	r3, #0
 801702c:	4631      	mov	r1, r6
 801702e:	4605      	mov	r5, r0
 8017030:	a802      	add	r0, sp, #8
 8017032:	9301      	str	r3, [sp, #4]
 8017034:	f7ff fba8 	bl	8016788 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017038:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801703c:	8822      	ldrh	r2, [r4, #0]
 801703e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8017042:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017046:	f8ad 0014 	strh.w	r0, [sp, #20]
 801704a:	1ad2      	subs	r2, r2, r3
 801704c:	8863      	ldrh	r3, [r4, #2]
 801704e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017052:	1a5b      	subs	r3, r3, r1
 8017054:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8017058:	f8ad 1016 	strh.w	r1, [sp, #22]
 801705c:	aa01      	add	r2, sp, #4
 801705e:	a904      	add	r1, sp, #16
 8017060:	4630      	mov	r0, r6
 8017062:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017066:	f7f9 f9d1 	bl	801040c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801706a:	9a01      	ldr	r2, [sp, #4]
 801706c:	b11a      	cbz	r2, 8017076 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801706e:	4621      	mov	r1, r4
 8017070:	4628      	mov	r0, r5
 8017072:	f7ff fed5 	bl	8016e20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017076:	b006      	add	sp, #24
 8017078:	bd70      	pop	{r4, r5, r6, pc}

0801707a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801707a:	b530      	push	{r4, r5, lr}
 801707c:	4602      	mov	r2, r0
 801707e:	4604      	mov	r4, r0
 8017080:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8017084:	b085      	sub	sp, #20
 8017086:	460d      	mov	r5, r1
 8017088:	6851      	ldr	r1, [r2, #4]
 801708a:	466b      	mov	r3, sp
 801708c:	c303      	stmia	r3!, {r0, r1}
 801708e:	4629      	mov	r1, r5
 8017090:	4668      	mov	r0, sp
 8017092:	f7f9 f8e3 	bl	801025c <_ZN8touchgfx4RectaNERKS0_>
 8017096:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801709a:	b12b      	cbz	r3, 80170a8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801709c:	4669      	mov	r1, sp
 801709e:	4620      	mov	r0, r4
 80170a0:	f7ff ffbf 	bl	8017022 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80170a4:	b005      	add	sp, #20
 80170a6:	bd30      	pop	{r4, r5, pc}
 80170a8:	3404      	adds	r4, #4
 80170aa:	4621      	mov	r1, r4
 80170ac:	a802      	add	r0, sp, #8
 80170ae:	f7ff fb6b 	bl	8016788 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80170b2:	f8bd 3000 	ldrh.w	r3, [sp]
 80170b6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80170ba:	1a9b      	subs	r3, r3, r2
 80170bc:	f8ad 3000 	strh.w	r3, [sp]
 80170c0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80170c4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80170c8:	4669      	mov	r1, sp
 80170ca:	1a9b      	subs	r3, r3, r2
 80170cc:	4620      	mov	r0, r4
 80170ce:	f8ad 3002 	strh.w	r3, [sp, #2]
 80170d2:	f7f9 f962 	bl	801039a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80170d6:	e7e5      	b.n	80170a4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080170d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80170d8:	680a      	ldr	r2, [r1, #0]
 80170da:	460b      	mov	r3, r1
 80170dc:	6992      	ldr	r2, [r2, #24]
 80170de:	1d01      	adds	r1, r0, #4
 80170e0:	4618      	mov	r0, r3
 80170e2:	4710      	bx	r2

080170e4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 80170e4:	4298      	cmp	r0, r3
 80170e6:	d200      	bcs.n	80170ea <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 80170e8:	b913      	cbnz	r3, 80170f0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 80170ea:	440a      	add	r2, r1
 80170ec:	b210      	sxth	r0, r2
 80170ee:	4770      	bx	lr
 80170f0:	ee07 0a90 	vmov	s15, r0
 80170f4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80170f8:	ee07 3a90 	vmov	s15, r3
 80170fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017100:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8017104:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017108:	ee37 7a66 	vsub.f32	s14, s14, s13
 801710c:	ee07 2a90 	vmov	s15, r2
 8017110:	ee67 5a07 	vmul.f32	s11, s14, s14
 8017114:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8017118:	eee5 6a87 	vfma.f32	s13, s11, s14
 801711c:	ee07 1a90 	vmov	s15, r1
 8017120:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017124:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017128:	eee6 7a26 	vfma.f32	s15, s12, s13
 801712c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017130:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017134:	bfcc      	ite	gt
 8017136:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801713a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801713e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017142:	ee17 3a90 	vmov	r3, s15
 8017146:	b218      	sxth	r0, r3
 8017148:	4770      	bx	lr

0801714a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801714a:	4298      	cmp	r0, r3
 801714c:	d200      	bcs.n	8017150 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801714e:	b913      	cbnz	r3, 8017156 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8017150:	440a      	add	r2, r1
 8017152:	b210      	sxth	r0, r2
 8017154:	4770      	bx	lr
 8017156:	ee07 2a90 	vmov	s15, r2
 801715a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801715e:	ee07 0a90 	vmov	s15, r0
 8017162:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8017166:	ee67 7a27 	vmul.f32	s15, s14, s15
 801716a:	ee07 3a10 	vmov	s14, r3
 801716e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8017172:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8017176:	ee07 1a90 	vmov	s15, r1
 801717a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801717e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017182:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017186:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801718a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801718e:	bfcc      	ite	gt
 8017190:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8017194:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8017198:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801719c:	ee17 3a90 	vmov	r3, s15
 80171a0:	b218      	sxth	r0, r3
 80171a2:	4770      	bx	lr

080171a4 <_ZN8touchgfx12TextProviderC1Ev>:
 80171a4:	b538      	push	{r3, r4, r5, lr}
 80171a6:	2500      	movs	r5, #0
 80171a8:	2302      	movs	r3, #2
 80171aa:	4604      	mov	r4, r0
 80171ac:	e9c0 5500 	strd	r5, r5, [r0]
 80171b0:	7403      	strb	r3, [r0, #16]
 80171b2:	6145      	str	r5, [r0, #20]
 80171b4:	7605      	strb	r5, [r0, #24]
 80171b6:	83c5      	strh	r5, [r0, #30]
 80171b8:	8405      	strh	r5, [r0, #32]
 80171ba:	86c5      	strh	r5, [r0, #54]	; 0x36
 80171bc:	8705      	strh	r5, [r0, #56]	; 0x38
 80171be:	87c5      	strh	r5, [r0, #62]	; 0x3e
 80171c0:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 80171c4:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 80171c8:	220e      	movs	r2, #14
 80171ca:	4629      	mov	r1, r5
 80171cc:	304c      	adds	r0, #76	; 0x4c
 80171ce:	f013 f9e6 	bl	802a59e <memset>
 80171d2:	2301      	movs	r3, #1
 80171d4:	4620      	mov	r0, r4
 80171d6:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 80171da:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80171de:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 80171e2:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 80171e6:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 80171ea:	f7f1 f803 	bl	80081f4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80171ee:	4620      	mov	r0, r4
 80171f0:	bd38      	pop	{r3, r4, r5, pc}

080171f2 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80171f2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80171f4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80171f8:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80171fa:	fab0 f080 	clz	r0, r0
 80171fe:	0940      	lsrs	r0, r0, #5
 8017200:	4770      	bx	lr

08017202 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8017202:	b530      	push	{r4, r5, lr}
 8017204:	2500      	movs	r5, #0
 8017206:	2401      	movs	r4, #1
 8017208:	6843      	ldr	r3, [r0, #4]
 801720a:	b913      	cbnz	r3, 8017212 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801720c:	6803      	ldr	r3, [r0, #0]
 801720e:	b313      	cbz	r3, 8017256 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017210:	6043      	str	r3, [r0, #4]
 8017212:	7e03      	ldrb	r3, [r0, #24]
 8017214:	b143      	cbz	r3, 8017228 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8017216:	6943      	ldr	r3, [r0, #20]
 8017218:	b12b      	cbz	r3, 8017226 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801721a:	881a      	ldrh	r2, [r3, #0]
 801721c:	b11a      	cbz	r2, 8017226 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801721e:	1c9a      	adds	r2, r3, #2
 8017220:	6142      	str	r2, [r0, #20]
 8017222:	8818      	ldrh	r0, [r3, #0]
 8017224:	bd30      	pop	{r4, r5, pc}
 8017226:	7605      	strb	r5, [r0, #24]
 8017228:	6843      	ldr	r3, [r0, #4]
 801722a:	8819      	ldrh	r1, [r3, #0]
 801722c:	b199      	cbz	r1, 8017256 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801722e:	1c9a      	adds	r2, r3, #2
 8017230:	2902      	cmp	r1, #2
 8017232:	6042      	str	r2, [r0, #4]
 8017234:	d1f5      	bne.n	8017222 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8017236:	7c03      	ldrb	r3, [r0, #16]
 8017238:	2b01      	cmp	r3, #1
 801723a:	d8e5      	bhi.n	8017208 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801723c:	1c5a      	adds	r2, r3, #1
 801723e:	3302      	adds	r3, #2
 8017240:	7402      	strb	r2, [r0, #16]
 8017242:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8017246:	6143      	str	r3, [r0, #20]
 8017248:	2b00      	cmp	r3, #0
 801724a:	d0dd      	beq.n	8017208 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801724c:	881b      	ldrh	r3, [r3, #0]
 801724e:	2b00      	cmp	r3, #0
 8017250:	d0da      	beq.n	8017208 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017252:	7604      	strb	r4, [r0, #24]
 8017254:	e7d8      	b.n	8017208 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017256:	2000      	movs	r0, #0
 8017258:	e7e4      	b.n	8017224 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801725a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801725a:	b430      	push	{r4, r5}
 801725c:	6001      	str	r1, [r0, #0]
 801725e:	2100      	movs	r1, #0
 8017260:	6041      	str	r1, [r0, #4]
 8017262:	6815      	ldr	r5, [r2, #0]
 8017264:	6085      	str	r5, [r0, #8]
 8017266:	6852      	ldr	r2, [r2, #4]
 8017268:	6443      	str	r3, [r0, #68]	; 0x44
 801726a:	9b02      	ldr	r3, [sp, #8]
 801726c:	60c2      	str	r2, [r0, #12]
 801726e:	7401      	strb	r1, [r0, #16]
 8017270:	6141      	str	r1, [r0, #20]
 8017272:	7601      	strb	r1, [r0, #24]
 8017274:	8701      	strh	r1, [r0, #56]	; 0x38
 8017276:	8401      	strh	r1, [r0, #32]
 8017278:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801727c:	6483      	str	r3, [r0, #72]	; 0x48
 801727e:	bc30      	pop	{r4, r5}
 8017280:	f7f0 bfb8 	b.w	80081f4 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08017284 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8017284:	b408      	push	{r3}
 8017286:	b510      	push	{r4, lr}
 8017288:	b085      	sub	sp, #20
 801728a:	ac07      	add	r4, sp, #28
 801728c:	f854 3b04 	ldr.w	r3, [r4], #4
 8017290:	9300      	str	r3, [sp, #0]
 8017292:	4613      	mov	r3, r2
 8017294:	4622      	mov	r2, r4
 8017296:	9403      	str	r4, [sp, #12]
 8017298:	f7ff ffdf 	bl	801725a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801729c:	b005      	add	sp, #20
 801729e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80172a2:	b001      	add	sp, #4
 80172a4:	4770      	bx	lr

080172a6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80172a6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80172a8:	4605      	mov	r5, r0
 80172aa:	4608      	mov	r0, r1
 80172ac:	b1e9      	cbz	r1, 80172ea <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80172ae:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 80172b2:	460b      	mov	r3, r1
 80172b4:	f101 0708 	add.w	r7, r1, #8
 80172b8:	4622      	mov	r2, r4
 80172ba:	6818      	ldr	r0, [r3, #0]
 80172bc:	6859      	ldr	r1, [r3, #4]
 80172be:	4626      	mov	r6, r4
 80172c0:	c603      	stmia	r6!, {r0, r1}
 80172c2:	3308      	adds	r3, #8
 80172c4:	42bb      	cmp	r3, r7
 80172c6:	4634      	mov	r4, r6
 80172c8:	d1f7      	bne.n	80172ba <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80172ca:	6818      	ldr	r0, [r3, #0]
 80172cc:	6030      	str	r0, [r6, #0]
 80172ce:	889b      	ldrh	r3, [r3, #4]
 80172d0:	80b3      	strh	r3, [r6, #4]
 80172d2:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 80172d6:	015b      	lsls	r3, r3, #5
 80172d8:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80172dc:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 80172e0:	430b      	orrs	r3, r1
 80172e2:	425b      	negs	r3, r3
 80172e4:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 80172e8:	4610      	mov	r0, r2
 80172ea:	bdf0      	pop	{r4, r5, r6, r7, pc}

080172ec <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80172ec:	b538      	push	{r3, r4, r5, lr}
 80172ee:	460c      	mov	r4, r1
 80172f0:	6811      	ldr	r1, [r2, #0]
 80172f2:	4610      	mov	r0, r2
 80172f4:	68cd      	ldr	r5, [r1, #12]
 80172f6:	4619      	mov	r1, r3
 80172f8:	47a8      	blx	r5
 80172fa:	2800      	cmp	r0, #0
 80172fc:	bf08      	it	eq
 80172fe:	4620      	moveq	r0, r4
 8017300:	bd38      	pop	{r3, r4, r5, pc}
	...

08017304 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8017304:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017306:	4604      	mov	r4, r0
 8017308:	4615      	mov	r5, r2
 801730a:	4608      	mov	r0, r1
 801730c:	b93a      	cbnz	r2, 801731e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801730e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017312:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8017316:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801731a:	4628      	mov	r0, r5
 801731c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801731e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8017322:	8893      	ldrh	r3, [r2, #4]
 8017324:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8017328:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801732c:	79ee      	ldrb	r6, [r5, #7]
 801732e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8017332:	4316      	orrs	r6, r2
 8017334:	19da      	adds	r2, r3, r7
 8017336:	b291      	uxth	r1, r2
 8017338:	291d      	cmp	r1, #29
 801733a:	b2b7      	uxth	r7, r6
 801733c:	d87a      	bhi.n	8017434 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801733e:	2201      	movs	r2, #1
 8017340:	408a      	lsls	r2, r1
 8017342:	4975      	ldr	r1, [pc, #468]	; (8017518 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8017344:	420a      	tst	r2, r1
 8017346:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801734a:	d12d      	bne.n	80173a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801734c:	f412 7f60 	tst.w	r2, #896	; 0x380
 8017350:	d070      	beq.n	8017434 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017352:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8017356:	462b      	mov	r3, r5
 8017358:	f105 0e08 	add.w	lr, r5, #8
 801735c:	4615      	mov	r5, r2
 801735e:	6818      	ldr	r0, [r3, #0]
 8017360:	6859      	ldr	r1, [r3, #4]
 8017362:	4694      	mov	ip, r2
 8017364:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017368:	3308      	adds	r3, #8
 801736a:	4573      	cmp	r3, lr
 801736c:	4662      	mov	r2, ip
 801736e:	d1f6      	bne.n	801735e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8017370:	6818      	ldr	r0, [r3, #0]
 8017372:	f8cc 0000 	str.w	r0, [ip]
 8017376:	889b      	ldrh	r3, [r3, #4]
 8017378:	f8ac 3004 	strh.w	r3, [ip, #4]
 801737c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8017380:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8017384:	b2b3      	uxth	r3, r6
 8017386:	1aca      	subs	r2, r1, r3
 8017388:	b292      	uxth	r2, r2
 801738a:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801738e:	10d2      	asrs	r2, r2, #3
 8017390:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8017394:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8017398:	4302      	orrs	r2, r0
 801739a:	1bcf      	subs	r7, r1, r7
 801739c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80173a0:	1afb      	subs	r3, r7, r3
 80173a2:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80173a6:	e7b8      	b.n	801731a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80173a8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80173aa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80173ae:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 80173b0:	f640 6333 	movw	r3, #3635	; 0xe33
 80173b4:	4299      	cmp	r1, r3
 80173b6:	d110      	bne.n	80173da <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 80173b8:	6803      	ldr	r3, [r0, #0]
 80173ba:	68db      	ldr	r3, [r3, #12]
 80173bc:	4798      	blx	r3
 80173be:	7b41      	ldrb	r1, [r0, #13]
 80173c0:	00cb      	lsls	r3, r1, #3
 80173c2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80173c6:	7a03      	ldrb	r3, [r0, #8]
 80173c8:	0648      	lsls	r0, r1, #25
 80173ca:	ea43 0302 	orr.w	r3, r3, r2
 80173ce:	bf44      	itt	mi
 80173d0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80173d4:	b21b      	sxthmi	r3, r3
 80173d6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80173da:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80173de:	443b      	add	r3, r7
 80173e0:	4433      	add	r3, r6
 80173e2:	b29b      	uxth	r3, r3
 80173e4:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80173e8:	462a      	mov	r2, r5
 80173ea:	f105 0c08 	add.w	ip, r5, #8
 80173ee:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80173f2:	4635      	mov	r5, r6
 80173f4:	6810      	ldr	r0, [r2, #0]
 80173f6:	6851      	ldr	r1, [r2, #4]
 80173f8:	4637      	mov	r7, r6
 80173fa:	c703      	stmia	r7!, {r0, r1}
 80173fc:	3208      	adds	r2, #8
 80173fe:	4562      	cmp	r2, ip
 8017400:	463e      	mov	r6, r7
 8017402:	d1f7      	bne.n	80173f4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8017404:	6810      	ldr	r0, [r2, #0]
 8017406:	6038      	str	r0, [r7, #0]
 8017408:	8892      	ldrh	r2, [r2, #4]
 801740a:	80ba      	strh	r2, [r7, #4]
 801740c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017410:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017414:	10db      	asrs	r3, r3, #3
 8017416:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801741a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801741e:	4313      	orrs	r3, r2
 8017420:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017424:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8017428:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801742c:	1a9b      	subs	r3, r3, r2
 801742e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8017432:	e772      	b.n	801731a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017434:	f023 0204 	bic.w	r2, r3, #4
 8017438:	f640 611b 	movw	r1, #3611	; 0xe1b
 801743c:	428a      	cmp	r2, r1
 801743e:	d003      	beq.n	8017448 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8017440:	f640 621d 	movw	r2, #3613	; 0xe1d
 8017444:	4293      	cmp	r3, r2
 8017446:	d120      	bne.n	801748a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8017448:	3b01      	subs	r3, #1
 801744a:	4602      	mov	r2, r0
 801744c:	b29b      	uxth	r3, r3
 801744e:	4629      	mov	r1, r5
 8017450:	4620      	mov	r0, r4
 8017452:	f7ff ff4b 	bl	80172ec <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017456:	7b41      	ldrb	r1, [r0, #13]
 8017458:	00cb      	lsls	r3, r1, #3
 801745a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801745e:	7a03      	ldrb	r3, [r0, #8]
 8017460:	0649      	lsls	r1, r1, #25
 8017462:	ea43 0302 	orr.w	r3, r3, r2
 8017466:	bf44      	itt	mi
 8017468:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801746c:	b21b      	sxthmi	r3, r3
 801746e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017472:	7b6b      	ldrb	r3, [r5, #13]
 8017474:	7aaa      	ldrb	r2, [r5, #10]
 8017476:	005b      	lsls	r3, r3, #1
 8017478:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801747c:	4313      	orrs	r3, r2
 801747e:	115a      	asrs	r2, r3, #5
 8017480:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8017484:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017488:	e036      	b.n	80174f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801748a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801748e:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8017492:	7a2a      	ldrb	r2, [r5, #8]
 8017494:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8017498:	ea42 0201 	orr.w	r2, r2, r1
 801749c:	bf1c      	itt	ne
 801749e:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 80174a2:	b212      	sxthne	r2, r2
 80174a4:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80174a8:	f640 6109 	movw	r1, #3593	; 0xe09
 80174ac:	f023 0210 	bic.w	r2, r3, #16
 80174b0:	428a      	cmp	r2, r1
 80174b2:	d003      	beq.n	80174bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 80174b4:	f640 6213 	movw	r2, #3603	; 0xe13
 80174b8:	4293      	cmp	r3, r2
 80174ba:	d12a      	bne.n	8017512 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 80174bc:	7b6e      	ldrb	r6, [r5, #13]
 80174be:	0076      	lsls	r6, r6, #1
 80174c0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80174c4:	7aae      	ldrb	r6, [r5, #10]
 80174c6:	4316      	orrs	r6, r2
 80174c8:	f640 6213 	movw	r2, #3603	; 0xe13
 80174cc:	4293      	cmp	r3, r2
 80174ce:	bf18      	it	ne
 80174d0:	f103 33ff 	addne.w	r3, r3, #4294967295
 80174d4:	4602      	mov	r2, r0
 80174d6:	bf14      	ite	ne
 80174d8:	b29b      	uxthne	r3, r3
 80174da:	f640 630c 	movweq	r3, #3596	; 0xe0c
 80174de:	4629      	mov	r1, r5
 80174e0:	4620      	mov	r0, r4
 80174e2:	f7ff ff03 	bl	80172ec <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80174e6:	7b43      	ldrb	r3, [r0, #13]
 80174e8:	7a82      	ldrb	r2, [r0, #10]
 80174ea:	005b      	lsls	r3, r3, #1
 80174ec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80174f0:	4313      	orrs	r3, r2
 80174f2:	1af6      	subs	r6, r6, r3
 80174f4:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80174f8:	7b69      	ldrb	r1, [r5, #13]
 80174fa:	00cb      	lsls	r3, r1, #3
 80174fc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017500:	7a2b      	ldrb	r3, [r5, #8]
 8017502:	4313      	orrs	r3, r2
 8017504:	064a      	lsls	r2, r1, #25
 8017506:	bf44      	itt	mi
 8017508:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801750c:	b21b      	sxthmi	r3, r3
 801750e:	1bdb      	subs	r3, r3, r7
 8017510:	e747      	b.n	80173a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8017512:	2300      	movs	r3, #0
 8017514:	e7b6      	b.n	8017484 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8017516:	bf00      	nop
 8017518:	3fc00079 	.word	0x3fc00079

0801751c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801751c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017520:	4604      	mov	r4, r0
 8017522:	b942      	cbnz	r2, 8017536 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8017524:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017528:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801752c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8017530:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017534:	e047      	b.n	80175c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017536:	7b51      	ldrb	r1, [r2, #13]
 8017538:	8893      	ldrh	r3, [r2, #4]
 801753a:	010d      	lsls	r5, r1, #4
 801753c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8017540:	79d5      	ldrb	r5, [r2, #7]
 8017542:	4305      	orrs	r5, r0
 8017544:	2d04      	cmp	r5, #4
 8017546:	bfcc      	ite	gt
 8017548:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801754c:	f04f 0e01 	movle.w	lr, #1
 8017550:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8017554:	f200 80ab 	bhi.w	80176ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8017558:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801755c:	4283      	cmp	r3, r0
 801755e:	d216      	bcs.n	801758e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017560:	f240 605b 	movw	r0, #1627	; 0x65b
 8017564:	4283      	cmp	r3, r0
 8017566:	d859      	bhi.n	801761c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8017568:	f240 6057 	movw	r0, #1623	; 0x657
 801756c:	4283      	cmp	r3, r0
 801756e:	d20e      	bcs.n	801758e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017570:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017574:	d24a      	bcs.n	801760c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8017576:	f240 604e 	movw	r0, #1614	; 0x64e
 801757a:	4283      	cmp	r3, r0
 801757c:	d207      	bcs.n	801758e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801757e:	f240 601a 	movw	r0, #1562	; 0x61a
 8017582:	4283      	cmp	r3, r0
 8017584:	d02a      	beq.n	80175dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017586:	d821      	bhi.n	80175cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8017588:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801758c:	d35b      	bcc.n	8017646 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801758e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8017592:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017596:	f040 80d0 	bne.w	801773a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801759a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801759e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80175a2:	f040 80ca 	bne.w	801773a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80175a6:	00cb      	lsls	r3, r1, #3
 80175a8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80175ac:	7a13      	ldrb	r3, [r2, #8]
 80175ae:	0649      	lsls	r1, r1, #25
 80175b0:	ea43 0300 	orr.w	r3, r3, r0
 80175b4:	bf44      	itt	mi
 80175b6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80175ba:	b21b      	sxthmi	r3, r3
 80175bc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80175c0:	1b5d      	subs	r5, r3, r5
 80175c2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80175c6:	4610      	mov	r0, r2
 80175c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80175cc:	f240 604b 	movw	r0, #1611	; 0x64b
 80175d0:	4283      	cmp	r3, r0
 80175d2:	d338      	bcc.n	8017646 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80175d4:	f240 604c 	movw	r0, #1612	; 0x64c
 80175d8:	4283      	cmp	r3, r0
 80175da:	d9d8      	bls.n	801758e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80175dc:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 80175e0:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80175e4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80175e8:	f040 80f2 	bne.w	80177d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80175ec:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80175f0:	f040 80ee 	bne.w	80177d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80175f4:	00cb      	lsls	r3, r1, #3
 80175f6:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80175fa:	7a13      	ldrb	r3, [r2, #8]
 80175fc:	064e      	lsls	r6, r1, #25
 80175fe:	ea43 0300 	orr.w	r3, r3, r0
 8017602:	bf44      	itt	mi
 8017604:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017608:	b21b      	sxthmi	r3, r3
 801760a:	e7d9      	b.n	80175c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801760c:	f240 6054 	movw	r0, #1620	; 0x654
 8017610:	4283      	cmp	r3, r0
 8017612:	d8e3      	bhi.n	80175dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017614:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017618:	d9e0      	bls.n	80175dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801761a:	e7b8      	b.n	801758e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801761c:	f240 6074 	movw	r0, #1652	; 0x674
 8017620:	4283      	cmp	r3, r0
 8017622:	d0b4      	beq.n	801758e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017624:	d82d      	bhi.n	8017682 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8017626:	f240 605e 	movw	r0, #1630	; 0x65e
 801762a:	4283      	cmp	r3, r0
 801762c:	d804      	bhi.n	8017638 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801762e:	f240 605d 	movw	r0, #1629	; 0x65d
 8017632:	4283      	cmp	r3, r0
 8017634:	d3d2      	bcc.n	80175dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017636:	e7aa      	b.n	801758e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017638:	f240 605f 	movw	r0, #1631	; 0x65f
 801763c:	4283      	cmp	r3, r0
 801763e:	d0cd      	beq.n	80175dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017640:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8017644:	d0a3      	beq.n	801758e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017646:	00cb      	lsls	r3, r1, #3
 8017648:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801764c:	7a13      	ldrb	r3, [r2, #8]
 801764e:	0649      	lsls	r1, r1, #25
 8017650:	ea43 0300 	orr.w	r3, r3, r0
 8017654:	bf44      	itt	mi
 8017656:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801765a:	b21b      	sxthmi	r3, r3
 801765c:	1b5d      	subs	r5, r3, r5
 801765e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017662:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017666:	7b53      	ldrb	r3, [r2, #13]
 8017668:	015b      	lsls	r3, r3, #5
 801766a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801766e:	7993      	ldrb	r3, [r2, #6]
 8017670:	430b      	orrs	r3, r1
 8017672:	005b      	lsls	r3, r3, #1
 8017674:	2105      	movs	r1, #5
 8017676:	fb93 f3f1 	sdiv	r3, r3, r1
 801767a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801767e:	440b      	add	r3, r1
 8017680:	e756      	b.n	8017530 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8017682:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8017686:	4283      	cmp	r3, r0
 8017688:	d809      	bhi.n	801769e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801768a:	f240 60df 	movw	r0, #1759	; 0x6df
 801768e:	4283      	cmp	r3, r0
 8017690:	f4bf af7d 	bcs.w	801758e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017694:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8017698:	2b05      	cmp	r3, #5
 801769a:	d8d4      	bhi.n	8017646 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801769c:	e777      	b.n	801758e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801769e:	f240 60e3 	movw	r0, #1763	; 0x6e3
 80176a2:	4283      	cmp	r3, r0
 80176a4:	d09a      	beq.n	80175dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80176a6:	f240 60e4 	movw	r0, #1764	; 0x6e4
 80176aa:	4283      	cmp	r3, r0
 80176ac:	e7ca      	b.n	8017644 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80176ae:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 80176b2:	d22b      	bcs.n	801770c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80176b4:	f640 00ed 	movw	r0, #2285	; 0x8ed
 80176b8:	4283      	cmp	r3, r0
 80176ba:	d28f      	bcs.n	80175dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80176bc:	f640 00e5 	movw	r0, #2277	; 0x8e5
 80176c0:	4283      	cmp	r3, r0
 80176c2:	d816      	bhi.n	80176f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80176c4:	f640 00e4 	movw	r0, #2276	; 0x8e4
 80176c8:	4283      	cmp	r3, r0
 80176ca:	f4bf af60 	bcs.w	801758e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80176ce:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80176d2:	4283      	cmp	r3, r0
 80176d4:	d80a      	bhi.n	80176ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80176d6:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80176da:	4283      	cmp	r3, r0
 80176dc:	f4bf af57 	bcs.w	801758e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80176e0:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80176e4:	4283      	cmp	r3, r0
 80176e6:	f43f af79 	beq.w	80175dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80176ea:	e7ac      	b.n	8017646 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80176ec:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80176f0:	e7f8      	b.n	80176e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80176f2:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80176f6:	4283      	cmp	r3, r0
 80176f8:	d802      	bhi.n	8017700 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80176fa:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80176fe:	e798      	b.n	8017632 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8017700:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8017704:	4283      	cmp	r3, r0
 8017706:	f47f af42 	bne.w	801758e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801770a:	e767      	b.n	80175dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801770c:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8017710:	4283      	cmp	r3, r0
 8017712:	f43f af63 	beq.w	80175dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017716:	d802      	bhi.n	801771e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8017718:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801771c:	e7f2      	b.n	8017704 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801771e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8017722:	4283      	cmp	r3, r0
 8017724:	d805      	bhi.n	8017732 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8017726:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801772a:	4283      	cmp	r3, r0
 801772c:	f4ff af2f 	bcc.w	801758e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017730:	e754      	b.n	80175dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017732:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8017736:	4283      	cmp	r3, r0
 8017738:	e7af      	b.n	801769a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801773a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801773e:	4617      	mov	r7, r2
 8017740:	f102 0808 	add.w	r8, r2, #8
 8017744:	4666      	mov	r6, ip
 8017746:	6838      	ldr	r0, [r7, #0]
 8017748:	6879      	ldr	r1, [r7, #4]
 801774a:	46e6      	mov	lr, ip
 801774c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8017750:	3708      	adds	r7, #8
 8017752:	4547      	cmp	r7, r8
 8017754:	46f4      	mov	ip, lr
 8017756:	d1f6      	bne.n	8017746 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8017758:	6838      	ldr	r0, [r7, #0]
 801775a:	f8ce 0000 	str.w	r0, [lr]
 801775e:	88b9      	ldrh	r1, [r7, #4]
 8017760:	f8ae 1004 	strh.w	r1, [lr, #4]
 8017764:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017768:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801776c:	d009      	beq.n	8017782 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801776e:	7b51      	ldrb	r1, [r2, #13]
 8017770:	7992      	ldrb	r2, [r2, #6]
 8017772:	0149      	lsls	r1, r1, #5
 8017774:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017778:	4311      	orrs	r1, r2
 801777a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801777e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017782:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017786:	b2ad      	uxth	r5, r5
 8017788:	d00d      	beq.n	80177a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801778a:	442b      	add	r3, r5
 801778c:	b29b      	uxth	r3, r3
 801778e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017792:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017796:	10db      	asrs	r3, r3, #3
 8017798:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801779c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80177a0:	4313      	orrs	r3, r2
 80177a2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80177a6:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80177aa:	00cb      	lsls	r3, r1, #3
 80177ac:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80177b0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80177b4:	064f      	lsls	r7, r1, #25
 80177b6:	ea43 0302 	orr.w	r3, r3, r2
 80177ba:	bf44      	itt	mi
 80177bc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80177c0:	b21b      	sxthmi	r3, r3
 80177c2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80177c6:	1b5b      	subs	r3, r3, r5
 80177c8:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80177cc:	4632      	mov	r2, r6
 80177ce:	e6fa      	b.n	80175c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80177d0:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80177d4:	4617      	mov	r7, r2
 80177d6:	f102 0908 	add.w	r9, r2, #8
 80177da:	4666      	mov	r6, ip
 80177dc:	6838      	ldr	r0, [r7, #0]
 80177de:	6879      	ldr	r1, [r7, #4]
 80177e0:	46e0      	mov	r8, ip
 80177e2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80177e6:	3708      	adds	r7, #8
 80177e8:	454f      	cmp	r7, r9
 80177ea:	46c4      	mov	ip, r8
 80177ec:	d1f6      	bne.n	80177dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80177ee:	6838      	ldr	r0, [r7, #0]
 80177f0:	f8c8 0000 	str.w	r0, [r8]
 80177f4:	88b9      	ldrh	r1, [r7, #4]
 80177f6:	f8a8 1004 	strh.w	r1, [r8, #4]
 80177fa:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80177fe:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017802:	d009      	beq.n	8017818 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8017804:	7b51      	ldrb	r1, [r2, #13]
 8017806:	7992      	ldrb	r2, [r2, #6]
 8017808:	0149      	lsls	r1, r1, #5
 801780a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801780e:	4311      	orrs	r1, r2
 8017810:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8017814:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017818:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801781c:	d00e      	beq.n	801783c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801781e:	eba3 030e 	sub.w	r3, r3, lr
 8017822:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017826:	b29b      	uxth	r3, r3
 8017828:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801782c:	10db      	asrs	r3, r3, #3
 801782e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017832:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017836:	4313      	orrs	r3, r2
 8017838:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801783c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8017840:	00cb      	lsls	r3, r1, #3
 8017842:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017846:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801784a:	0648      	lsls	r0, r1, #25
 801784c:	ea43 0302 	orr.w	r3, r3, r2
 8017850:	bf44      	itt	mi
 8017852:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017856:	b21b      	sxthmi	r3, r3
 8017858:	1b5d      	subs	r5, r3, r5
 801785a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801785e:	e7b5      	b.n	80177cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08017860 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8017860:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017864:	461e      	mov	r6, r3
 8017866:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017868:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801786c:	4604      	mov	r4, r0
 801786e:	4617      	mov	r7, r2
 8017870:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017874:	f7f0 fc7c 	bl	8008170 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017878:	4605      	mov	r5, r0
 801787a:	b918      	cbnz	r0, 8017884 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801787c:	6030      	str	r0, [r6, #0]
 801787e:	4628      	mov	r0, r5
 8017880:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017884:	683b      	ldr	r3, [r7, #0]
 8017886:	4601      	mov	r1, r0
 8017888:	68db      	ldr	r3, [r3, #12]
 801788a:	4638      	mov	r0, r7
 801788c:	4798      	blx	r3
 801788e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8017892:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8017896:	4602      	mov	r2, r0
 8017898:	6030      	str	r0, [r6, #0]
 801789a:	d213      	bcs.n	80178c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801789c:	4643      	mov	r3, r8
 801789e:	4639      	mov	r1, r7
 80178a0:	4620      	mov	r0, r4
 80178a2:	f7ff fe3b 	bl	801751c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80178a6:	6030      	str	r0, [r6, #0]
 80178a8:	6833      	ldr	r3, [r6, #0]
 80178aa:	b143      	cbz	r3, 80178be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80178ac:	7b5a      	ldrb	r2, [r3, #13]
 80178ae:	7a9b      	ldrb	r3, [r3, #10]
 80178b0:	0052      	lsls	r2, r2, #1
 80178b2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80178b6:	4313      	orrs	r3, r2
 80178b8:	bf0c      	ite	eq
 80178ba:	2301      	moveq	r3, #1
 80178bc:	2300      	movne	r3, #0
 80178be:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80178c2:	e7dc      	b.n	801787e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80178c4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80178c8:	b29b      	uxth	r3, r3
 80178ca:	2b7f      	cmp	r3, #127	; 0x7f
 80178cc:	d804      	bhi.n	80178d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80178ce:	4639      	mov	r1, r7
 80178d0:	4620      	mov	r0, r4
 80178d2:	f7ff fd17 	bl	8017304 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80178d6:	e7e6      	b.n	80178a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80178d8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80178dc:	2b00      	cmp	r3, #0
 80178de:	d0e3      	beq.n	80178a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80178e0:	f640 1302 	movw	r3, #2306	; 0x902
 80178e4:	429d      	cmp	r5, r3
 80178e6:	d1df      	bne.n	80178a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80178e8:	4601      	mov	r1, r0
 80178ea:	4620      	mov	r0, r4
 80178ec:	f7ff fcdb 	bl	80172a6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80178f0:	e7d9      	b.n	80178a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080178f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80178f2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80178f6:	461e      	mov	r6, r3
 80178f8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80178fa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80178fe:	4604      	mov	r4, r0
 8017900:	4617      	mov	r7, r2
 8017902:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017906:	f7f0 fc33 	bl	8008170 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801790a:	4605      	mov	r5, r0
 801790c:	b918      	cbnz	r0, 8017916 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801790e:	6030      	str	r0, [r6, #0]
 8017910:	4628      	mov	r0, r5
 8017912:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8017916:	683b      	ldr	r3, [r7, #0]
 8017918:	4601      	mov	r1, r0
 801791a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801791e:	4638      	mov	r0, r7
 8017920:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8017924:	47c8      	blx	r9
 8017926:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801792a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801792e:	4602      	mov	r2, r0
 8017930:	6030      	str	r0, [r6, #0]
 8017932:	d213      	bcs.n	801795c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8017934:	4643      	mov	r3, r8
 8017936:	4639      	mov	r1, r7
 8017938:	4620      	mov	r0, r4
 801793a:	f7ff fdef 	bl	801751c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801793e:	6030      	str	r0, [r6, #0]
 8017940:	6833      	ldr	r3, [r6, #0]
 8017942:	b143      	cbz	r3, 8017956 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8017944:	7b5a      	ldrb	r2, [r3, #13]
 8017946:	7a9b      	ldrb	r3, [r3, #10]
 8017948:	0052      	lsls	r2, r2, #1
 801794a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801794e:	4313      	orrs	r3, r2
 8017950:	bf0c      	ite	eq
 8017952:	2301      	moveq	r3, #1
 8017954:	2300      	movne	r3, #0
 8017956:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801795a:	e7d9      	b.n	8017910 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801795c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017960:	b29b      	uxth	r3, r3
 8017962:	2b7f      	cmp	r3, #127	; 0x7f
 8017964:	d804      	bhi.n	8017970 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8017966:	4639      	mov	r1, r7
 8017968:	4620      	mov	r0, r4
 801796a:	f7ff fccb 	bl	8017304 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801796e:	e7e6      	b.n	801793e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8017970:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8017974:	2b00      	cmp	r3, #0
 8017976:	d0e3      	beq.n	8017940 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017978:	f640 1302 	movw	r3, #2306	; 0x902
 801797c:	429d      	cmp	r5, r3
 801797e:	d1df      	bne.n	8017940 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017980:	4601      	mov	r1, r0
 8017982:	4620      	mov	r0, r4
 8017984:	f7ff fc8f 	bl	80172a6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017988:	e7d9      	b.n	801793e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801798a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801798a:	b510      	push	{r4, lr}
 801798c:	4604      	mov	r4, r0
 801798e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8017992:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017994:	b1f1      	cbz	r1, 80179d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8017996:	2b0a      	cmp	r3, #10
 8017998:	d02f      	beq.n	80179fa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801799a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801799c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80179a0:	3901      	subs	r1, #1
 80179a2:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80179a4:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80179a8:	1c51      	adds	r1, r2, #1
 80179aa:	b289      	uxth	r1, r1
 80179ac:	2901      	cmp	r1, #1
 80179ae:	bf84      	itt	hi
 80179b0:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80179b4:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80179b6:	f103 0201 	add.w	r2, r3, #1
 80179ba:	8722      	strh	r2, [r4, #56]	; 0x38
 80179bc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80179be:	bf98      	it	ls
 80179c0:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80179c2:	4413      	add	r3, r2
 80179c4:	b29b      	uxth	r3, r3
 80179c6:	2b09      	cmp	r3, #9
 80179c8:	bf88      	it	hi
 80179ca:	3b0a      	subhi	r3, #10
 80179cc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80179d0:	8458      	strh	r0, [r3, #34]	; 0x22
 80179d2:	e7dc      	b.n	801798e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80179d4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80179d6:	2b0a      	cmp	r3, #10
 80179d8:	d00f      	beq.n	80179fa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80179da:	4620      	mov	r0, r4
 80179dc:	f7ff fc11 	bl	8017202 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80179e0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80179e2:	1c5a      	adds	r2, r3, #1
 80179e4:	8722      	strh	r2, [r4, #56]	; 0x38
 80179e6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80179e8:	4413      	add	r3, r2
 80179ea:	b29b      	uxth	r3, r3
 80179ec:	2b09      	cmp	r3, #9
 80179ee:	bf88      	it	hi
 80179f0:	3b0a      	subhi	r3, #10
 80179f2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80179f6:	8458      	strh	r0, [r3, #34]	; 0x22
 80179f8:	e7ec      	b.n	80179d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80179fa:	bd10      	pop	{r4, pc}

080179fc <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80179fc:	b538      	push	{r3, r4, r5, lr}
 80179fe:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017a00:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8017a04:	4604      	mov	r4, r0
 8017a06:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8017a08:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8017a0a:	3a01      	subs	r2, #1
 8017a0c:	8702      	strh	r2, [r0, #56]	; 0x38
 8017a0e:	1c5a      	adds	r2, r3, #1
 8017a10:	b292      	uxth	r2, r2
 8017a12:	2a09      	cmp	r2, #9
 8017a14:	bf86      	itte	hi
 8017a16:	3b09      	subhi	r3, #9
 8017a18:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8017a1a:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8017a1c:	f7ff ffb5 	bl	801798a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8017a20:	8c23      	ldrh	r3, [r4, #32]
 8017a22:	2b01      	cmp	r3, #1
 8017a24:	bf9c      	itt	ls
 8017a26:	3301      	addls	r3, #1
 8017a28:	8423      	strhls	r3, [r4, #32]
 8017a2a:	8be3      	ldrh	r3, [r4, #30]
 8017a2c:	b90b      	cbnz	r3, 8017a32 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8017a2e:	2302      	movs	r3, #2
 8017a30:	83e3      	strh	r3, [r4, #30]
 8017a32:	8be3      	ldrh	r3, [r4, #30]
 8017a34:	3b01      	subs	r3, #1
 8017a36:	b29b      	uxth	r3, r3
 8017a38:	83e3      	strh	r3, [r4, #30]
 8017a3a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017a3e:	4628      	mov	r0, r5
 8017a40:	8365      	strh	r5, [r4, #26]
 8017a42:	bd38      	pop	{r3, r4, r5, pc}

08017a44 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8017a44:	428a      	cmp	r2, r1
 8017a46:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017a4a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8017a4c:	d931      	bls.n	8017ab2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8017a4e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8017a50:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8017a54:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8017a58:	19ee      	adds	r6, r5, r7
 8017a5a:	1a54      	subs	r4, r2, r1
 8017a5c:	3e01      	subs	r6, #1
 8017a5e:	fa1f fe84 	uxth.w	lr, r4
 8017a62:	b2b4      	uxth	r4, r6
 8017a64:	eba4 090e 	sub.w	r9, r4, lr
 8017a68:	fa1f f989 	uxth.w	r9, r9
 8017a6c:	2c09      	cmp	r4, #9
 8017a6e:	4626      	mov	r6, r4
 8017a70:	bf88      	it	hi
 8017a72:	f1a4 060a 	subhi.w	r6, r4, #10
 8017a76:	f1bc 0f00 	cmp.w	ip, #0
 8017a7a:	bf08      	it	eq
 8017a7c:	f04f 0c02 	moveq.w	ip, #2
 8017a80:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017a84:	f10c 3cff 	add.w	ip, ip, #4294967295
 8017a88:	fa1f fc8c 	uxth.w	ip, ip
 8017a8c:	3c01      	subs	r4, #1
 8017a8e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8017a92:	b2a4      	uxth	r4, r4
 8017a94:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8017a98:	454c      	cmp	r4, r9
 8017a9a:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8017a9e:	d1e5      	bne.n	8017a6c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8017aa0:	eba5 050e 	sub.w	r5, r5, lr
 8017aa4:	eb0e 0408 	add.w	r4, lr, r8
 8017aa8:	8705      	strh	r5, [r0, #56]	; 0x38
 8017aaa:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8017aae:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8017ab2:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8017ab4:	1a64      	subs	r4, r4, r1
 8017ab6:	4439      	add	r1, r7
 8017ab8:	b289      	uxth	r1, r1
 8017aba:	2909      	cmp	r1, #9
 8017abc:	bf88      	it	hi
 8017abe:	390a      	subhi	r1, #10
 8017ac0:	8704      	strh	r4, [r0, #56]	; 0x38
 8017ac2:	86c1      	strh	r1, [r0, #54]	; 0x36
 8017ac4:	250a      	movs	r5, #10
 8017ac6:	b18a      	cbz	r2, 8017aec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8017ac8:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8017aca:	3a01      	subs	r2, #1
 8017acc:	b292      	uxth	r2, r2
 8017ace:	3101      	adds	r1, #1
 8017ad0:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8017ad4:	8701      	strh	r1, [r0, #56]	; 0x38
 8017ad6:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8017ad8:	b901      	cbnz	r1, 8017adc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8017ada:	86c5      	strh	r5, [r0, #54]	; 0x36
 8017adc:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8017ade:	3901      	subs	r1, #1
 8017ae0:	b289      	uxth	r1, r1
 8017ae2:	86c1      	strh	r1, [r0, #54]	; 0x36
 8017ae4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8017ae8:	844c      	strh	r4, [r1, #34]	; 0x22
 8017aea:	e7ec      	b.n	8017ac6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8017aec:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017af0:	f7ff bf4b 	b.w	801798a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08017af4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8017af4:	b570      	push	{r4, r5, r6, lr}
 8017af6:	2500      	movs	r5, #0
 8017af8:	4295      	cmp	r5, r2
 8017afa:	d011      	beq.n	8017b20 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8017afc:	8bc4      	ldrh	r4, [r0, #30]
 8017afe:	f831 6b02 	ldrh.w	r6, [r1], #2
 8017b02:	4414      	add	r4, r2
 8017b04:	3c01      	subs	r4, #1
 8017b06:	1b64      	subs	r4, r4, r5
 8017b08:	b2a4      	uxth	r4, r4
 8017b0a:	2c01      	cmp	r4, #1
 8017b0c:	bf88      	it	hi
 8017b0e:	3c02      	subhi	r4, #2
 8017b10:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017b14:	8b64      	ldrh	r4, [r4, #26]
 8017b16:	42b4      	cmp	r4, r6
 8017b18:	d117      	bne.n	8017b4a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8017b1a:	3501      	adds	r5, #1
 8017b1c:	b2ad      	uxth	r5, r5
 8017b1e:	e7eb      	b.n	8017af8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8017b20:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017b24:	2400      	movs	r4, #0
 8017b26:	4413      	add	r3, r2
 8017b28:	b2a2      	uxth	r2, r4
 8017b2a:	429a      	cmp	r2, r3
 8017b2c:	da0f      	bge.n	8017b4e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8017b2e:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8017b30:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8017b34:	4432      	add	r2, r6
 8017b36:	b292      	uxth	r2, r2
 8017b38:	2a09      	cmp	r2, #9
 8017b3a:	bf88      	it	hi
 8017b3c:	3a0a      	subhi	r2, #10
 8017b3e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017b42:	3401      	adds	r4, #1
 8017b44:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8017b46:	42aa      	cmp	r2, r5
 8017b48:	d0ee      	beq.n	8017b28 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8017b4a:	2000      	movs	r0, #0
 8017b4c:	bd70      	pop	{r4, r5, r6, pc}
 8017b4e:	2001      	movs	r0, #1
 8017b50:	e7fc      	b.n	8017b4c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08017b52 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8017b52:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b56:	4605      	mov	r5, r0
 8017b58:	4616      	mov	r6, r2
 8017b5a:	1c8c      	adds	r4, r1, #2
 8017b5c:	8809      	ldrh	r1, [r1, #0]
 8017b5e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8017b62:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8017b66:	42b3      	cmp	r3, r6
 8017b68:	d124      	bne.n	8017bb4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8017b6a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8017b6e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8017b72:	f001 070f 	and.w	r7, r1, #15
 8017b76:	f8cd 8000 	str.w	r8, [sp]
 8017b7a:	464b      	mov	r3, r9
 8017b7c:	4652      	mov	r2, sl
 8017b7e:	4621      	mov	r1, r4
 8017b80:	4628      	mov	r0, r5
 8017b82:	f7ff ffb7 	bl	8017af4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8017b86:	4683      	mov	fp, r0
 8017b88:	b168      	cbz	r0, 8017ba6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8017b8a:	eb0a 0109 	add.w	r1, sl, r9
 8017b8e:	4441      	add	r1, r8
 8017b90:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8017b94:	463a      	mov	r2, r7
 8017b96:	4649      	mov	r1, r9
 8017b98:	4628      	mov	r0, r5
 8017b9a:	f7ff ff53 	bl	8017a44 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8017b9e:	4658      	mov	r0, fp
 8017ba0:	b003      	add	sp, #12
 8017ba2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ba6:	eb07 010a 	add.w	r1, r7, sl
 8017baa:	4449      	add	r1, r9
 8017bac:	4441      	add	r1, r8
 8017bae:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8017bb2:	e7d2      	b.n	8017b5a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8017bb4:	f04f 0b00 	mov.w	fp, #0
 8017bb8:	e7f1      	b.n	8017b9e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08017bba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8017bba:	b570      	push	{r4, r5, r6, lr}
 8017bbc:	8810      	ldrh	r0, [r2, #0]
 8017bbe:	4298      	cmp	r0, r3
 8017bc0:	d817      	bhi.n	8017bf2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017bc2:	1e48      	subs	r0, r1, #1
 8017bc4:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8017bc8:	4298      	cmp	r0, r3
 8017bca:	d312      	bcc.n	8017bf2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017bcc:	2400      	movs	r4, #0
 8017bce:	428c      	cmp	r4, r1
 8017bd0:	d20f      	bcs.n	8017bf2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017bd2:	1860      	adds	r0, r4, r1
 8017bd4:	1040      	asrs	r0, r0, #1
 8017bd6:	0085      	lsls	r5, r0, #2
 8017bd8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8017bdc:	42b3      	cmp	r3, r6
 8017bde:	d902      	bls.n	8017be6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8017be0:	3001      	adds	r0, #1
 8017be2:	b284      	uxth	r4, r0
 8017be4:	e7f3      	b.n	8017bce <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8017be6:	d201      	bcs.n	8017bec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8017be8:	b281      	uxth	r1, r0
 8017bea:	e7f0      	b.n	8017bce <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8017bec:	442a      	add	r2, r5
 8017bee:	8850      	ldrh	r0, [r2, #2]
 8017bf0:	bd70      	pop	{r4, r5, r6, pc}
 8017bf2:	2000      	movs	r0, #0
 8017bf4:	e7fc      	b.n	8017bf0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08017bf6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8017bf6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017bfa:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8017bfc:	886f      	ldrh	r7, [r5, #2]
 8017bfe:	4604      	mov	r4, r0
 8017c00:	087f      	lsrs	r7, r7, #1
 8017c02:	260b      	movs	r6, #11
 8017c04:	3e01      	subs	r6, #1
 8017c06:	d013      	beq.n	8017c30 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017c08:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8017c0a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017c0e:	462a      	mov	r2, r5
 8017c10:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017c14:	4639      	mov	r1, r7
 8017c16:	4643      	mov	r3, r8
 8017c18:	4620      	mov	r0, r4
 8017c1a:	f7ff ffce 	bl	8017bba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8017c1e:	b138      	cbz	r0, 8017c30 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017c20:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8017c24:	4642      	mov	r2, r8
 8017c26:	4620      	mov	r0, r4
 8017c28:	f7ff ff93 	bl	8017b52 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8017c2c:	2800      	cmp	r0, #0
 8017c2e:	d1e9      	bne.n	8017c04 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8017c30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08017c34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8017c34:	b570      	push	{r4, r5, r6, lr}
 8017c36:	694a      	ldr	r2, [r1, #20]
 8017c38:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8017c3a:	684b      	ldr	r3, [r1, #4]
 8017c3c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8017c3e:	1b54      	subs	r4, r2, r5
 8017c40:	f000 8106 	beq.w	8017e50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8017c44:	1b9b      	subs	r3, r3, r6
 8017c46:	d003      	beq.n	8017c50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017c48:	4363      	muls	r3, r4
 8017c4a:	2210      	movs	r2, #16
 8017c4c:	fb93 f3f2 	sdiv	r3, r3, r2
 8017c50:	680c      	ldr	r4, [r1, #0]
 8017c52:	698a      	ldr	r2, [r1, #24]
 8017c54:	1b65      	subs	r5, r4, r5
 8017c56:	f000 80fd 	beq.w	8017e54 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8017c5a:	1b92      	subs	r2, r2, r6
 8017c5c:	d003      	beq.n	8017c66 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017c5e:	436a      	muls	r2, r5
 8017c60:	2410      	movs	r4, #16
 8017c62:	fb92 f2f4 	sdiv	r2, r2, r4
 8017c66:	1a9b      	subs	r3, r3, r2
 8017c68:	ee07 3a90 	vmov	s15, r3
 8017c6c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8017e90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8017c70:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017c74:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017c78:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017c7c:	460a      	mov	r2, r1
 8017c7e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8017c82:	4603      	mov	r3, r0
 8017c84:	f100 040c 	add.w	r4, r0, #12
 8017c88:	eeb1 6a43 	vneg.f32	s12, s6
 8017c8c:	edd2 7a02 	vldr	s15, [r2, #8]
 8017c90:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8017c94:	3214      	adds	r2, #20
 8017c96:	ece3 6a01 	vstmia	r3!, {s13}
 8017c9a:	ed52 7a02 	vldr	s15, [r2, #-8]
 8017c9e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017ca2:	429c      	cmp	r4, r3
 8017ca4:	edc3 7a02 	vstr	s15, [r3, #8]
 8017ca8:	ed52 7a01 	vldr	s15, [r2, #-4]
 8017cac:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017cb0:	edc3 7a05 	vstr	s15, [r3, #20]
 8017cb4:	d1ea      	bne.n	8017c8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8017cb6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017cb8:	698b      	ldr	r3, [r1, #24]
 8017cba:	edd0 4a02 	vldr	s9, [r0, #8]
 8017cbe:	edd0 3a00 	vldr	s7, [r0]
 8017cc2:	edd0 6a01 	vldr	s13, [r0, #4]
 8017cc6:	ed90 5a05 	vldr	s10, [r0, #20]
 8017cca:	ed90 2a03 	vldr	s4, [r0, #12]
 8017cce:	edd0 5a04 	vldr	s11, [r0, #16]
 8017cd2:	ed90 1a07 	vldr	s2, [r0, #28]
 8017cd6:	edd0 2a06 	vldr	s5, [r0, #24]
 8017cda:	1a9b      	subs	r3, r3, r2
 8017cdc:	ee07 3a90 	vmov	s15, r3
 8017ce0:	684b      	ldr	r3, [r1, #4]
 8017ce2:	1a9b      	subs	r3, r3, r2
 8017ce4:	ee07 3a10 	vmov	s14, r3
 8017ce8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017cec:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8017cf0:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017cf4:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8017cf8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017cfc:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8017d00:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017d04:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8017d08:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017d0c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8017d10:	ee67 7a83 	vmul.f32	s15, s15, s6
 8017d14:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8017d18:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017d1a:	694a      	ldr	r2, [r1, #20]
 8017d1c:	1b13      	subs	r3, r2, r4
 8017d1e:	ee07 3a10 	vmov	s14, r3
 8017d22:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017d26:	680b      	ldr	r3, [r1, #0]
 8017d28:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017d2c:	1b1b      	subs	r3, r3, r4
 8017d2e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8017d32:	ee07 3a10 	vmov	s14, r3
 8017d36:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017d3a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017d3e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8017d42:	ee64 4a86 	vmul.f32	s9, s9, s12
 8017d46:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8017d4a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017d4c:	698b      	ldr	r3, [r1, #24]
 8017d4e:	1a9b      	subs	r3, r3, r2
 8017d50:	ee06 3a90 	vmov	s13, r3
 8017d54:	684b      	ldr	r3, [r1, #4]
 8017d56:	1a9b      	subs	r3, r3, r2
 8017d58:	ee07 3a10 	vmov	s14, r3
 8017d5c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017d60:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017d64:	ee66 6a84 	vmul.f32	s13, s13, s8
 8017d68:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017d6c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8017d70:	eee5 6a87 	vfma.f32	s13, s11, s14
 8017d74:	ee66 6a83 	vmul.f32	s13, s13, s6
 8017d78:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8017d7c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017d7e:	694a      	ldr	r2, [r1, #20]
 8017d80:	1b13      	subs	r3, r2, r4
 8017d82:	ee07 3a10 	vmov	s14, r3
 8017d86:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017d8a:	680b      	ldr	r3, [r1, #0]
 8017d8c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017d90:	1b1b      	subs	r3, r3, r4
 8017d92:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8017d96:	ee07 3a10 	vmov	s14, r3
 8017d9a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017d9e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017da2:	eea5 5a87 	vfma.f32	s10, s11, s14
 8017da6:	edd0 5a08 	vldr	s11, [r0, #32]
 8017daa:	ee25 5a06 	vmul.f32	s10, s10, s12
 8017dae:	ee31 1a65 	vsub.f32	s2, s2, s11
 8017db2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8017db6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017db8:	698b      	ldr	r3, [r1, #24]
 8017dba:	1a9b      	subs	r3, r3, r2
 8017dbc:	ee07 3a10 	vmov	s14, r3
 8017dc0:	684b      	ldr	r3, [r1, #4]
 8017dc2:	1a9b      	subs	r3, r3, r2
 8017dc4:	ee01 3a90 	vmov	s3, r3
 8017dc8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017dcc:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8017dd0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017dd4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8017dd8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8017ddc:	ee61 1a84 	vmul.f32	s3, s3, s8
 8017de0:	eea1 7a21 	vfma.f32	s14, s2, s3
 8017de4:	ee27 7a03 	vmul.f32	s14, s14, s6
 8017de8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017dec:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017dee:	694a      	ldr	r2, [r1, #20]
 8017df0:	1b13      	subs	r3, r2, r4
 8017df2:	ee03 3a10 	vmov	s6, r3
 8017df6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017dfa:	680b      	ldr	r3, [r1, #0]
 8017dfc:	ee23 3a04 	vmul.f32	s6, s6, s8
 8017e00:	1b1b      	subs	r3, r3, r4
 8017e02:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8017e06:	ee03 3a10 	vmov	s6, r3
 8017e0a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017e0e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8017e12:	eee1 5a04 	vfma.f32	s11, s2, s8
 8017e16:	ee25 6a86 	vmul.f32	s12, s11, s12
 8017e1a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8017e1e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8017e22:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8017e26:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8017e2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017e2e:	dd13      	ble.n	8017e58 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8017e30:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017e34:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8017e38:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017e3a:	eee3 7a87 	vfma.f32	s15, s7, s14
 8017e3e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017e42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017e46:	dd15      	ble.n	8017e74 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8017e48:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017e4c:	6403      	str	r3, [r0, #64]	; 0x40
 8017e4e:	bd70      	pop	{r4, r5, r6, pc}
 8017e50:	4623      	mov	r3, r4
 8017e52:	e6fd      	b.n	8017c50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017e54:	462a      	mov	r2, r5
 8017e56:	e706      	b.n	8017c66 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017e58:	d502      	bpl.n	8017e60 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8017e5a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017e5e:	e7e9      	b.n	8017e34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8017e60:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8017e64:	eea3 2a85 	vfma.f32	s4, s7, s10
 8017e68:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8017e6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017e70:	dade      	bge.n	8017e30 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8017e72:	e7f2      	b.n	8017e5a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8017e74:	d502      	bpl.n	8017e7c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8017e76:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017e7a:	e7e7      	b.n	8017e4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8017e7c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8017e80:	eee3 4a86 	vfma.f32	s9, s7, s12
 8017e84:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8017e88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017e8c:	dadc      	bge.n	8017e48 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8017e8e:	e7f2      	b.n	8017e76 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8017e90:	3d800000 	.word	0x3d800000

08017e94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8017e94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017e98:	2714      	movs	r7, #20
 8017e9a:	435f      	muls	r7, r3
 8017e9c:	eb02 0c07 	add.w	ip, r2, r7
 8017ea0:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8017ea4:	f115 0e0f 	adds.w	lr, r5, #15
 8017ea8:	f100 80a2 	bmi.w	8017ff0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8017eac:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8017eb0:	9c08      	ldr	r4, [sp, #32]
 8017eb2:	f8c0 e014 	str.w	lr, [r0, #20]
 8017eb6:	2614      	movs	r6, #20
 8017eb8:	4366      	muls	r6, r4
 8017eba:	eb02 0806 	add.w	r8, r2, r6
 8017ebe:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8017ec2:	f115 040f 	adds.w	r4, r5, #15
 8017ec6:	f100 809f 	bmi.w	8018008 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8017eca:	1124      	asrs	r4, r4, #4
 8017ecc:	eba4 040e 	sub.w	r4, r4, lr
 8017ed0:	6184      	str	r4, [r0, #24]
 8017ed2:	2c00      	cmp	r4, #0
 8017ed4:	f000 808a 	beq.w	8017fec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8017ed8:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8017edc:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8017ee0:	5995      	ldr	r5, [r2, r6]
 8017ee2:	eba4 0809 	sub.w	r8, r4, r9
 8017ee6:	59d4      	ldr	r4, [r2, r7]
 8017ee8:	eba5 0a04 	sub.w	sl, r5, r4
 8017eec:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8017ef0:	fb0e fe05 	mul.w	lr, lr, r5
 8017ef4:	fb0a ee19 	mls	lr, sl, r9, lr
 8017ef8:	fb08 e404 	mla	r4, r8, r4, lr
 8017efc:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8017f00:	3c01      	subs	r4, #1
 8017f02:	19a4      	adds	r4, r4, r6
 8017f04:	f100 808c 	bmi.w	8018020 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8017f08:	fb94 fef6 	sdiv	lr, r4, r6
 8017f0c:	f8c0 e000 	str.w	lr, [r0]
 8017f10:	fb06 441e 	mls	r4, r6, lr, r4
 8017f14:	6104      	str	r4, [r0, #16]
 8017f16:	2d00      	cmp	r5, #0
 8017f18:	f2c0 8095 	blt.w	8018046 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8017f1c:	fb95 f4f6 	sdiv	r4, r5, r6
 8017f20:	6044      	str	r4, [r0, #4]
 8017f22:	fb06 5514 	mls	r5, r6, r4, r5
 8017f26:	6085      	str	r5, [r0, #8]
 8017f28:	60c6      	str	r6, [r0, #12]
 8017f2a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8017f2e:	6945      	ldr	r5, [r0, #20]
 8017f30:	59d2      	ldr	r2, [r2, r7]
 8017f32:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8018068 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8017f36:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017f3a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8017f3e:	ee07 4a10 	vmov	s14, r4
 8017f42:	6804      	ldr	r4, [r0, #0]
 8017f44:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8017f48:	ee07 2a90 	vmov	s15, r2
 8017f4c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017f50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017f54:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017f58:	ee27 7a26 	vmul.f32	s14, s14, s13
 8017f5c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017f60:	edd3 6a00 	vldr	s13, [r3]
 8017f64:	eee6 6a07 	vfma.f32	s13, s12, s14
 8017f68:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8017f6c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8017f70:	edc0 6a07 	vstr	s13, [r0, #28]
 8017f74:	edd0 6a01 	vldr	s13, [r0, #4]
 8017f78:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8017f7c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017f80:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017f84:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017f88:	ed80 6a08 	vstr	s12, [r0, #32]
 8017f8c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8017f8e:	6242      	str	r2, [r0, #36]	; 0x24
 8017f90:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8017f94:	ed93 6a03 	vldr	s12, [r3, #12]
 8017f98:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017f9c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017fa0:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8017fa4:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8017fa8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017fac:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8017fb0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017fb4:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8017fb8:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017fba:	6302      	str	r2, [r0, #48]	; 0x30
 8017fbc:	ed93 6a06 	vldr	s12, [r3, #24]
 8017fc0:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8017fc4:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017fc8:	eeb0 7a46 	vmov.f32	s14, s12
 8017fcc:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8017fd0:	eea6 7a27 	vfma.f32	s14, s12, s15
 8017fd4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017fd8:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8017fdc:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8017fe0:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017fe4:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8017fe8:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8017fea:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017fec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017ff0:	f1c5 0501 	rsb	r5, r5, #1
 8017ff4:	f015 050f 	ands.w	r5, r5, #15
 8017ff8:	bf18      	it	ne
 8017ffa:	2501      	movne	r5, #1
 8017ffc:	2410      	movs	r4, #16
 8017ffe:	fb9e fef4 	sdiv	lr, lr, r4
 8018002:	ebae 0e05 	sub.w	lr, lr, r5
 8018006:	e753      	b.n	8017eb0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8018008:	f1c5 0501 	rsb	r5, r5, #1
 801800c:	f015 050f 	ands.w	r5, r5, #15
 8018010:	bf18      	it	ne
 8018012:	2501      	movne	r5, #1
 8018014:	f04f 0910 	mov.w	r9, #16
 8018018:	fb94 f4f9 	sdiv	r4, r4, r9
 801801c:	1b64      	subs	r4, r4, r5
 801801e:	e755      	b.n	8017ecc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8018020:	4264      	negs	r4, r4
 8018022:	fb94 fef6 	sdiv	lr, r4, r6
 8018026:	f1ce 0800 	rsb	r8, lr, #0
 801802a:	fb06 441e 	mls	r4, r6, lr, r4
 801802e:	f8c0 8000 	str.w	r8, [r0]
 8018032:	6104      	str	r4, [r0, #16]
 8018034:	2c00      	cmp	r4, #0
 8018036:	f43f af6e 	beq.w	8017f16 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801803a:	ea6f 0e0e 	mvn.w	lr, lr
 801803e:	f8c0 e000 	str.w	lr, [r0]
 8018042:	1b34      	subs	r4, r6, r4
 8018044:	e766      	b.n	8017f14 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8018046:	426d      	negs	r5, r5
 8018048:	fb95 f4f6 	sdiv	r4, r5, r6
 801804c:	f1c4 0e00 	rsb	lr, r4, #0
 8018050:	fb06 5514 	mls	r5, r6, r4, r5
 8018054:	f8c0 e004 	str.w	lr, [r0, #4]
 8018058:	6085      	str	r5, [r0, #8]
 801805a:	2d00      	cmp	r5, #0
 801805c:	f43f af64 	beq.w	8017f28 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8018060:	43e4      	mvns	r4, r4
 8018062:	6044      	str	r4, [r0, #4]
 8018064:	1b75      	subs	r5, r6, r5
 8018066:	e75e      	b.n	8017f26 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8018068:	3d800000 	.word	0x3d800000

0801806c <_ZN8touchgfx7Unicode6strlenEPKt>:
 801806c:	4602      	mov	r2, r0
 801806e:	b148      	cbz	r0, 8018084 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8018070:	2300      	movs	r3, #0
 8018072:	b298      	uxth	r0, r3
 8018074:	3301      	adds	r3, #1
 8018076:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801807a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801807e:	2900      	cmp	r1, #0
 8018080:	d1f7      	bne.n	8018072 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8018082:	4770      	bx	lr
 8018084:	4770      	bx	lr

08018086 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8018086:	b530      	push	{r4, r5, lr}
 8018088:	4604      	mov	r4, r0
 801808a:	b159      	cbz	r1, 80180a4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801808c:	b148      	cbz	r0, 80180a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801808e:	2300      	movs	r3, #0
 8018090:	b298      	uxth	r0, r3
 8018092:	4282      	cmp	r2, r0
 8018094:	d905      	bls.n	80180a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8018096:	5ccd      	ldrb	r5, [r1, r3]
 8018098:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801809c:	3301      	adds	r3, #1
 801809e:	2d00      	cmp	r5, #0
 80180a0:	d1f6      	bne.n	8018090 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 80180a2:	bd30      	pop	{r4, r5, pc}
 80180a4:	4608      	mov	r0, r1
 80180a6:	e7fc      	b.n	80180a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

080180a8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 80180a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80180aa:	b08b      	sub	sp, #44	; 0x2c
 80180ac:	468c      	mov	ip, r1
 80180ae:	2100      	movs	r1, #0
 80180b0:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80180b4:	4604      	mov	r4, r0
 80180b6:	261f      	movs	r6, #31
 80180b8:	af01      	add	r7, sp, #4
 80180ba:	fb94 fef3 	sdiv	lr, r4, r3
 80180be:	fb03 441e 	mls	r4, r3, lr, r4
 80180c2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80180c6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80180ca:	b2ec      	uxtb	r4, r5
 80180cc:	2d09      	cmp	r5, #9
 80180ce:	bfd4      	ite	le
 80180d0:	3430      	addle	r4, #48	; 0x30
 80180d2:	3457      	addgt	r4, #87	; 0x57
 80180d4:	b2e4      	uxtb	r4, r4
 80180d6:	55bc      	strb	r4, [r7, r6]
 80180d8:	4674      	mov	r4, lr
 80180da:	1e71      	subs	r1, r6, #1
 80180dc:	b974      	cbnz	r4, 80180fc <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 80180de:	2800      	cmp	r0, #0
 80180e0:	da05      	bge.n	80180ee <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 80180e2:	ab0a      	add	r3, sp, #40	; 0x28
 80180e4:	4419      	add	r1, r3
 80180e6:	232d      	movs	r3, #45	; 0x2d
 80180e8:	f801 3c24 	strb.w	r3, [r1, #-36]
 80180ec:	1eb1      	subs	r1, r6, #2
 80180ee:	3101      	adds	r1, #1
 80180f0:	4439      	add	r1, r7
 80180f2:	4660      	mov	r0, ip
 80180f4:	f7ff ffc7 	bl	8018086 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80180f8:	b00b      	add	sp, #44	; 0x2c
 80180fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80180fc:	460e      	mov	r6, r1
 80180fe:	e7dc      	b.n	80180ba <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08018100 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8018100:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018102:	b08b      	sub	sp, #44	; 0x2c
 8018104:	468c      	mov	ip, r1
 8018106:	2100      	movs	r1, #0
 8018108:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801810c:	ae01      	add	r6, sp, #4
 801810e:	211f      	movs	r1, #31
 8018110:	fbb0 f7f3 	udiv	r7, r0, r3
 8018114:	fb03 0517 	mls	r5, r3, r7, r0
 8018118:	b2ec      	uxtb	r4, r5
 801811a:	2d09      	cmp	r5, #9
 801811c:	bfd4      	ite	le
 801811e:	3430      	addle	r4, #48	; 0x30
 8018120:	3457      	addgt	r4, #87	; 0x57
 8018122:	b2e4      	uxtb	r4, r4
 8018124:	558c      	strb	r4, [r1, r6]
 8018126:	4638      	mov	r0, r7
 8018128:	1e4c      	subs	r4, r1, #1
 801812a:	b92f      	cbnz	r7, 8018138 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801812c:	4431      	add	r1, r6
 801812e:	4660      	mov	r0, ip
 8018130:	f7ff ffa9 	bl	8018086 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018134:	b00b      	add	sp, #44	; 0x2c
 8018136:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018138:	4621      	mov	r1, r4
 801813a:	e7e9      	b.n	8018110 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801813c <_ZN8touchgfx7Unicode4itoaElPtti>:
 801813c:	b410      	push	{r4}
 801813e:	b131      	cbz	r1, 801814e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8018140:	1e9c      	subs	r4, r3, #2
 8018142:	2c22      	cmp	r4, #34	; 0x22
 8018144:	d803      	bhi.n	801814e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8018146:	f85d 4b04 	ldr.w	r4, [sp], #4
 801814a:	f7ff bfad 	b.w	80180a8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801814e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018152:	4770      	bx	lr

08018154 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8018154:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018158:	4691      	mov	r9, r2
 801815a:	b085      	sub	sp, #20
 801815c:	6802      	ldr	r2, [r0, #0]
 801815e:	9201      	str	r2, [sp, #4]
 8018160:	4688      	mov	r8, r1
 8018162:	4683      	mov	fp, r0
 8018164:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8018168:	9103      	str	r1, [sp, #12]
 801816a:	4610      	mov	r0, r2
 801816c:	461c      	mov	r4, r3
 801816e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8018172:	9302      	str	r3, [sp, #8]
 8018174:	f7ff ff7a 	bl	801806c <_ZN8touchgfx7Unicode6strlenEPKt>
 8018178:	f1b8 0f00 	cmp.w	r8, #0
 801817c:	bf0c      	ite	eq
 801817e:	4684      	moveq	ip, r0
 8018180:	f100 0c01 	addne.w	ip, r0, #1
 8018184:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8018188:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801818c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801818e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018190:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8018194:	9903      	ldr	r1, [sp, #12]
 8018196:	fa1f fc8c 	uxth.w	ip, ip
 801819a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801819e:	d041      	beq.n	8018224 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80181a0:	d834      	bhi.n	801820c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 80181a2:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 80181a6:	d059      	beq.n	801825c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 80181a8:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 80181ac:	d03a      	beq.n	8018224 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80181ae:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 80181b2:	d034      	beq.n	801821e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80181b4:	2400      	movs	r4, #0
 80181b6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80181ba:	3a01      	subs	r2, #1
 80181bc:	b169      	cbz	r1, 80181da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80181be:	9911      	ldr	r1, [sp, #68]	; 0x44
 80181c0:	458c      	cmp	ip, r1
 80181c2:	da09      	bge.n	80181d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80181c4:	eba1 010c 	sub.w	r1, r1, ip
 80181c8:	b289      	uxth	r1, r1
 80181ca:	b933      	cbnz	r3, 80181da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80181cc:	2e00      	cmp	r6, #0
 80181ce:	d051      	beq.n	8018274 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80181d0:	2800      	cmp	r0, #0
 80181d2:	d04f      	beq.n	8018274 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80181d4:	440c      	add	r4, r1
 80181d6:	b2a4      	uxth	r4, r4
 80181d8:	2100      	movs	r1, #0
 80181da:	682b      	ldr	r3, [r5, #0]
 80181dc:	4293      	cmp	r3, r2
 80181de:	da07      	bge.n	80181f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80181e0:	f1b8 0f00 	cmp.w	r8, #0
 80181e4:	d004      	beq.n	80181f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80181e6:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 80181ea:	682b      	ldr	r3, [r5, #0]
 80181ec:	3301      	adds	r3, #1
 80181ee:	602b      	str	r3, [r5, #0]
 80181f0:	2730      	movs	r7, #48	; 0x30
 80181f2:	2c00      	cmp	r4, #0
 80181f4:	d04e      	beq.n	8018294 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80181f6:	682e      	ldr	r6, [r5, #0]
 80181f8:	3c01      	subs	r4, #1
 80181fa:	42b2      	cmp	r2, r6
 80181fc:	b2a4      	uxth	r4, r4
 80181fe:	dd49      	ble.n	8018294 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018200:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018204:	682b      	ldr	r3, [r5, #0]
 8018206:	3301      	adds	r3, #1
 8018208:	602b      	str	r3, [r5, #0]
 801820a:	e7f2      	b.n	80181f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801820c:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8018210:	d01d      	beq.n	801824e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8018212:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8018216:	d002      	beq.n	801821e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018218:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801821c:	e7c9      	b.n	80181b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801821e:	4684      	mov	ip, r0
 8018220:	f04f 0800 	mov.w	r8, #0
 8018224:	2c00      	cmp	r4, #0
 8018226:	d0c6      	beq.n	80181b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018228:	b947      	cbnz	r7, 801823c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801822a:	2801      	cmp	r0, #1
 801822c:	d106      	bne.n	801823c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801822e:	8814      	ldrh	r4, [r2, #0]
 8018230:	2c30      	cmp	r4, #48	; 0x30
 8018232:	bf02      	ittt	eq
 8018234:	3202      	addeq	r2, #2
 8018236:	f8cb 2000 	streq.w	r2, [fp]
 801823a:	4638      	moveq	r0, r7
 801823c:	45bc      	cmp	ip, r7
 801823e:	da14      	bge.n	801826a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8018240:	b2bf      	uxth	r7, r7
 8018242:	eba7 040c 	sub.w	r4, r7, ip
 8018246:	b2a4      	uxth	r4, r4
 8018248:	46bc      	mov	ip, r7
 801824a:	2600      	movs	r6, #0
 801824c:	e7b3      	b.n	80181b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801824e:	4684      	mov	ip, r0
 8018250:	b16c      	cbz	r4, 801826e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8018252:	42b8      	cmp	r0, r7
 8018254:	dd00      	ble.n	8018258 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8018256:	b2b8      	uxth	r0, r7
 8018258:	2400      	movs	r4, #0
 801825a:	e003      	b.n	8018264 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801825c:	f04f 0c01 	mov.w	ip, #1
 8018260:	2400      	movs	r4, #0
 8018262:	4660      	mov	r0, ip
 8018264:	4626      	mov	r6, r4
 8018266:	46a0      	mov	r8, r4
 8018268:	e7a5      	b.n	80181b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801826a:	2400      	movs	r4, #0
 801826c:	e7ed      	b.n	801824a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801826e:	4626      	mov	r6, r4
 8018270:	46a0      	mov	r8, r4
 8018272:	e7a0      	b.n	80181b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018274:	2900      	cmp	r1, #0
 8018276:	d0b0      	beq.n	80181da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018278:	2720      	movs	r7, #32
 801827a:	682e      	ldr	r6, [r5, #0]
 801827c:	2900      	cmp	r1, #0
 801827e:	d0ac      	beq.n	80181da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018280:	3901      	subs	r1, #1
 8018282:	4296      	cmp	r6, r2
 8018284:	b289      	uxth	r1, r1
 8018286:	daa7      	bge.n	80181d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018288:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801828c:	682b      	ldr	r3, [r5, #0]
 801828e:	3301      	adds	r3, #1
 8018290:	602b      	str	r3, [r5, #0]
 8018292:	e7f2      	b.n	801827a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8018294:	b188      	cbz	r0, 80182ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018296:	682b      	ldr	r3, [r5, #0]
 8018298:	3801      	subs	r0, #1
 801829a:	429a      	cmp	r2, r3
 801829c:	b280      	uxth	r0, r0
 801829e:	dd0c      	ble.n	80182ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80182a0:	f8db 3000 	ldr.w	r3, [fp]
 80182a4:	1c9c      	adds	r4, r3, #2
 80182a6:	f8cb 4000 	str.w	r4, [fp]
 80182aa:	881c      	ldrh	r4, [r3, #0]
 80182ac:	682b      	ldr	r3, [r5, #0]
 80182ae:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 80182b2:	682b      	ldr	r3, [r5, #0]
 80182b4:	3301      	adds	r3, #1
 80182b6:	602b      	str	r3, [r5, #0]
 80182b8:	e7ec      	b.n	8018294 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80182ba:	2620      	movs	r6, #32
 80182bc:	b151      	cbz	r1, 80182d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80182be:	6828      	ldr	r0, [r5, #0]
 80182c0:	3901      	subs	r1, #1
 80182c2:	4282      	cmp	r2, r0
 80182c4:	b289      	uxth	r1, r1
 80182c6:	dd05      	ble.n	80182d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80182c8:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 80182cc:	682b      	ldr	r3, [r5, #0]
 80182ce:	3301      	adds	r3, #1
 80182d0:	602b      	str	r3, [r5, #0]
 80182d2:	e7f3      	b.n	80182bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 80182d4:	b005      	add	sp, #20
 80182d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080182da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 80182da:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80182de:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 80182e2:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 80182e6:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 80182ea:	2400      	movs	r4, #0
 80182ec:	8014      	strh	r4, [r2, #0]
 80182ee:	701c      	strb	r4, [r3, #0]
 80182f0:	f888 4000 	strb.w	r4, [r8]
 80182f4:	f88c 4000 	strb.w	r4, [ip]
 80182f8:	f88e 4000 	strb.w	r4, [lr]
 80182fc:	703c      	strb	r4, [r7, #0]
 80182fe:	6804      	ldr	r4, [r0, #0]
 8018300:	b1a4      	cbz	r4, 801832c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8018302:	8824      	ldrh	r4, [r4, #0]
 8018304:	f04f 0901 	mov.w	r9, #1
 8018308:	b314      	cbz	r4, 8018350 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801830a:	2c2b      	cmp	r4, #43	; 0x2b
 801830c:	d001      	beq.n	8018312 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801830e:	2c20      	cmp	r4, #32
 8018310:	d110      	bne.n	8018334 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8018312:	8014      	strh	r4, [r2, #0]
 8018314:	6804      	ldr	r4, [r0, #0]
 8018316:	b10c      	cbz	r4, 801831c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8018318:	3402      	adds	r4, #2
 801831a:	6004      	str	r4, [r0, #0]
 801831c:	680c      	ldr	r4, [r1, #0]
 801831e:	b10c      	cbz	r4, 8018324 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8018320:	3401      	adds	r4, #1
 8018322:	600c      	str	r4, [r1, #0]
 8018324:	6804      	ldr	r4, [r0, #0]
 8018326:	b17c      	cbz	r4, 8018348 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8018328:	8824      	ldrh	r4, [r4, #0]
 801832a:	e7ed      	b.n	8018308 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801832c:	680c      	ldr	r4, [r1, #0]
 801832e:	b17c      	cbz	r4, 8018350 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018330:	7824      	ldrb	r4, [r4, #0]
 8018332:	e7e7      	b.n	8018304 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8018334:	2c2d      	cmp	r4, #45	; 0x2d
 8018336:	d102      	bne.n	801833e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8018338:	f883 9000 	strb.w	r9, [r3]
 801833c:	e7ea      	b.n	8018314 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801833e:	2c23      	cmp	r4, #35	; 0x23
 8018340:	d107      	bne.n	8018352 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8018342:	f888 9000 	strb.w	r9, [r8]
 8018346:	e7e5      	b.n	8018314 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018348:	680c      	ldr	r4, [r1, #0]
 801834a:	b10c      	cbz	r4, 8018350 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801834c:	7824      	ldrb	r4, [r4, #0]
 801834e:	e7db      	b.n	8018308 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018350:	2400      	movs	r4, #0
 8018352:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8018356:	2b09      	cmp	r3, #9
 8018358:	d901      	bls.n	801835e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801835a:	2c2a      	cmp	r4, #42	; 0x2a
 801835c:	d122      	bne.n	80183a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801835e:	2301      	movs	r3, #1
 8018360:	2c30      	cmp	r4, #48	; 0x30
 8018362:	f88e 3000 	strb.w	r3, [lr]
 8018366:	d10d      	bne.n	8018384 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018368:	f88c 3000 	strb.w	r3, [ip]
 801836c:	6803      	ldr	r3, [r0, #0]
 801836e:	b10b      	cbz	r3, 8018374 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8018370:	3302      	adds	r3, #2
 8018372:	6003      	str	r3, [r0, #0]
 8018374:	680b      	ldr	r3, [r1, #0]
 8018376:	b10b      	cbz	r3, 801837c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8018378:	3301      	adds	r3, #1
 801837a:	600b      	str	r3, [r1, #0]
 801837c:	6803      	ldr	r3, [r0, #0]
 801837e:	2b00      	cmp	r3, #0
 8018380:	d02f      	beq.n	80183e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8018382:	881c      	ldrh	r4, [r3, #0]
 8018384:	2c2a      	cmp	r4, #42	; 0x2a
 8018386:	d135      	bne.n	80183f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018388:	f04f 33ff 	mov.w	r3, #4294967295
 801838c:	6033      	str	r3, [r6, #0]
 801838e:	6803      	ldr	r3, [r0, #0]
 8018390:	b10b      	cbz	r3, 8018396 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8018392:	3302      	adds	r3, #2
 8018394:	6003      	str	r3, [r0, #0]
 8018396:	680b      	ldr	r3, [r1, #0]
 8018398:	b10b      	cbz	r3, 801839e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801839a:	3301      	adds	r3, #1
 801839c:	600b      	str	r3, [r1, #0]
 801839e:	6803      	ldr	r3, [r0, #0]
 80183a0:	b31b      	cbz	r3, 80183ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 80183a2:	881c      	ldrh	r4, [r3, #0]
 80183a4:	2c2e      	cmp	r4, #46	; 0x2e
 80183a6:	d11a      	bne.n	80183de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80183a8:	2301      	movs	r3, #1
 80183aa:	703b      	strb	r3, [r7, #0]
 80183ac:	6803      	ldr	r3, [r0, #0]
 80183ae:	b10b      	cbz	r3, 80183b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 80183b0:	3302      	adds	r3, #2
 80183b2:	6003      	str	r3, [r0, #0]
 80183b4:	680b      	ldr	r3, [r1, #0]
 80183b6:	b10b      	cbz	r3, 80183bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 80183b8:	3301      	adds	r3, #1
 80183ba:	600b      	str	r3, [r1, #0]
 80183bc:	6803      	ldr	r3, [r0, #0]
 80183be:	2b00      	cmp	r3, #0
 80183c0:	d036      	beq.n	8018430 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 80183c2:	881b      	ldrh	r3, [r3, #0]
 80183c4:	2b2a      	cmp	r3, #42	; 0x2a
 80183c6:	d137      	bne.n	8018438 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80183c8:	f04f 33ff 	mov.w	r3, #4294967295
 80183cc:	602b      	str	r3, [r5, #0]
 80183ce:	6803      	ldr	r3, [r0, #0]
 80183d0:	b10b      	cbz	r3, 80183d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 80183d2:	3302      	adds	r3, #2
 80183d4:	6003      	str	r3, [r0, #0]
 80183d6:	680b      	ldr	r3, [r1, #0]
 80183d8:	b10b      	cbz	r3, 80183de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80183da:	3301      	adds	r3, #1
 80183dc:	600b      	str	r3, [r1, #0]
 80183de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80183e2:	680c      	ldr	r4, [r1, #0]
 80183e4:	b134      	cbz	r4, 80183f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80183e6:	7824      	ldrb	r4, [r4, #0]
 80183e8:	e7cc      	b.n	8018384 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80183ea:	680b      	ldr	r3, [r1, #0]
 80183ec:	2b00      	cmp	r3, #0
 80183ee:	d0f6      	beq.n	80183de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80183f0:	781c      	ldrb	r4, [r3, #0]
 80183f2:	e7d7      	b.n	80183a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80183f4:	2300      	movs	r3, #0
 80183f6:	6033      	str	r3, [r6, #0]
 80183f8:	220a      	movs	r2, #10
 80183fa:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80183fe:	fa1f f38c 	uxth.w	r3, ip
 8018402:	2b09      	cmp	r3, #9
 8018404:	d8ce      	bhi.n	80183a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018406:	6833      	ldr	r3, [r6, #0]
 8018408:	fb02 c303 	mla	r3, r2, r3, ip
 801840c:	6033      	str	r3, [r6, #0]
 801840e:	6803      	ldr	r3, [r0, #0]
 8018410:	b10b      	cbz	r3, 8018416 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8018412:	3302      	adds	r3, #2
 8018414:	6003      	str	r3, [r0, #0]
 8018416:	680b      	ldr	r3, [r1, #0]
 8018418:	b10b      	cbz	r3, 801841e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801841a:	3301      	adds	r3, #1
 801841c:	600b      	str	r3, [r1, #0]
 801841e:	6803      	ldr	r3, [r0, #0]
 8018420:	b10b      	cbz	r3, 8018426 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8018422:	881c      	ldrh	r4, [r3, #0]
 8018424:	e7e9      	b.n	80183fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018426:	680c      	ldr	r4, [r1, #0]
 8018428:	2c00      	cmp	r4, #0
 801842a:	d0e6      	beq.n	80183fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801842c:	7824      	ldrb	r4, [r4, #0]
 801842e:	e7e4      	b.n	80183fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018430:	680b      	ldr	r3, [r1, #0]
 8018432:	b10b      	cbz	r3, 8018438 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018434:	781b      	ldrb	r3, [r3, #0]
 8018436:	e7c5      	b.n	80183c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8018438:	2200      	movs	r2, #0
 801843a:	602a      	str	r2, [r5, #0]
 801843c:	240a      	movs	r4, #10
 801843e:	3b30      	subs	r3, #48	; 0x30
 8018440:	b29e      	uxth	r6, r3
 8018442:	2e09      	cmp	r6, #9
 8018444:	682a      	ldr	r2, [r5, #0]
 8018446:	d813      	bhi.n	8018470 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8018448:	fb04 3302 	mla	r3, r4, r2, r3
 801844c:	602b      	str	r3, [r5, #0]
 801844e:	6803      	ldr	r3, [r0, #0]
 8018450:	b10b      	cbz	r3, 8018456 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8018452:	3302      	adds	r3, #2
 8018454:	6003      	str	r3, [r0, #0]
 8018456:	680b      	ldr	r3, [r1, #0]
 8018458:	b10b      	cbz	r3, 801845e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801845a:	3301      	adds	r3, #1
 801845c:	600b      	str	r3, [r1, #0]
 801845e:	6803      	ldr	r3, [r0, #0]
 8018460:	b10b      	cbz	r3, 8018466 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8018462:	881b      	ldrh	r3, [r3, #0]
 8018464:	e7eb      	b.n	801843e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018466:	680b      	ldr	r3, [r1, #0]
 8018468:	2b00      	cmp	r3, #0
 801846a:	d0e8      	beq.n	801843e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801846c:	781b      	ldrb	r3, [r3, #0]
 801846e:	e7e6      	b.n	801843e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018470:	2a06      	cmp	r2, #6
 8018472:	bfa8      	it	ge
 8018474:	2206      	movge	r2, #6
 8018476:	602a      	str	r2, [r5, #0]
 8018478:	e7b1      	b.n	80183de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801847a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801847a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801847e:	b0a3      	sub	sp, #140	; 0x8c
 8018480:	2600      	movs	r6, #0
 8018482:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8018486:	4607      	mov	r7, r0
 8018488:	4688      	mov	r8, r1
 801848a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801848e:	4631      	mov	r1, r6
 8018490:	2242      	movs	r2, #66	; 0x42
 8018492:	4648      	mov	r0, r9
 8018494:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8018496:	960d      	str	r6, [sp, #52]	; 0x34
 8018498:	f012 f881 	bl	802a59e <memset>
 801849c:	b15f      	cbz	r7, 80184b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801849e:	f108 3aff 	add.w	sl, r8, #4294967295
 80184a2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80184a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80184a6:	b152      	cbz	r2, 80184be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 80184a8:	8812      	ldrh	r2, [r2, #0]
 80184aa:	b10a      	cbz	r2, 80184b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80184ac:	459a      	cmp	sl, r3
 80184ae:	dc2e      	bgt.n	801850e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 80184b0:	2200      	movs	r2, #0
 80184b2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80184b6:	4638      	mov	r0, r7
 80184b8:	b023      	add	sp, #140	; 0x8c
 80184ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80184be:	9a08      	ldr	r2, [sp, #32]
 80184c0:	2a00      	cmp	r2, #0
 80184c2:	d0f5      	beq.n	80184b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80184c4:	7812      	ldrb	r2, [r2, #0]
 80184c6:	e7f0      	b.n	80184aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 80184c8:	2d00      	cmp	r5, #0
 80184ca:	d0ea      	beq.n	80184a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80184cc:	782a      	ldrb	r2, [r5, #0]
 80184ce:	b142      	cbz	r2, 80184e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 80184d0:	2a25      	cmp	r2, #37	; 0x25
 80184d2:	d001      	beq.n	80184d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 80184d4:	459a      	cmp	sl, r3
 80184d6:	dc08      	bgt.n	80184ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 80184d8:	f1bb 0f00 	cmp.w	fp, #0
 80184dc:	d121      	bne.n	8018522 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 80184de:	2d00      	cmp	r5, #0
 80184e0:	d0df      	beq.n	80184a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80184e2:	782a      	ldrb	r2, [r5, #0]
 80184e4:	f04f 0b00 	mov.w	fp, #0
 80184e8:	e01d      	b.n	8018526 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 80184ea:	f1bb 0f00 	cmp.w	fp, #0
 80184ee:	d078      	beq.n	80185e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 80184f0:	f8bb 2000 	ldrh.w	r2, [fp]
 80184f4:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80184f8:	f1bb 0f00 	cmp.w	fp, #0
 80184fc:	d002      	beq.n	8018504 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 80184fe:	f10b 0202 	add.w	r2, fp, #2
 8018502:	9209      	str	r2, [sp, #36]	; 0x24
 8018504:	b10d      	cbz	r5, 801850a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8018506:	3501      	adds	r5, #1
 8018508:	9508      	str	r5, [sp, #32]
 801850a:	3301      	adds	r3, #1
 801850c:	930d      	str	r3, [sp, #52]	; 0x34
 801850e:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8018512:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018514:	f1bb 0f00 	cmp.w	fp, #0
 8018518:	d0d6      	beq.n	80184c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801851a:	f8bb 2000 	ldrh.w	r2, [fp]
 801851e:	2a00      	cmp	r2, #0
 8018520:	d1d6      	bne.n	80184d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8018522:	f8bb 2000 	ldrh.w	r2, [fp]
 8018526:	2a00      	cmp	r2, #0
 8018528:	d0bb      	beq.n	80184a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801852a:	459a      	cmp	sl, r3
 801852c:	ddb9      	ble.n	80184a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801852e:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8018532:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8018536:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801853a:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801853e:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8018542:	960e      	str	r6, [sp, #56]	; 0x38
 8018544:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8018548:	960f      	str	r6, [sp, #60]	; 0x3c
 801854a:	f1bb 0f00 	cmp.w	fp, #0
 801854e:	d002      	beq.n	8018556 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8018550:	f10b 0302 	add.w	r3, fp, #2
 8018554:	9309      	str	r3, [sp, #36]	; 0x24
 8018556:	b10d      	cbz	r5, 801855c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8018558:	1c6b      	adds	r3, r5, #1
 801855a:	9308      	str	r3, [sp, #32]
 801855c:	ab0f      	add	r3, sp, #60	; 0x3c
 801855e:	9305      	str	r3, [sp, #20]
 8018560:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8018564:	9304      	str	r3, [sp, #16]
 8018566:	ab0e      	add	r3, sp, #56	; 0x38
 8018568:	9303      	str	r3, [sp, #12]
 801856a:	ab0c      	add	r3, sp, #48	; 0x30
 801856c:	9302      	str	r3, [sp, #8]
 801856e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8018572:	9301      	str	r3, [sp, #4]
 8018574:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018578:	9300      	str	r3, [sp, #0]
 801857a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801857e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8018582:	a908      	add	r1, sp, #32
 8018584:	a809      	add	r0, sp, #36	; 0x24
 8018586:	f7ff fea8 	bl	80182da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801858a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801858c:	2b00      	cmp	r3, #0
 801858e:	bfbe      	ittt	lt
 8018590:	6823      	ldrlt	r3, [r4, #0]
 8018592:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018596:	930e      	strlt	r3, [sp, #56]	; 0x38
 8018598:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801859a:	bfb8      	it	lt
 801859c:	3404      	addlt	r4, #4
 801859e:	2b00      	cmp	r3, #0
 80185a0:	bfb8      	it	lt
 80185a2:	6823      	ldrlt	r3, [r4, #0]
 80185a4:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80185a8:	bfbe      	ittt	lt
 80185aa:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80185ae:	930f      	strlt	r3, [sp, #60]	; 0x3c
 80185b0:	3404      	addlt	r4, #4
 80185b2:	b1d9      	cbz	r1, 80185ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 80185b4:	880b      	ldrh	r3, [r1, #0]
 80185b6:	2b69      	cmp	r3, #105	; 0x69
 80185b8:	d01f      	beq.n	80185fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80185ba:	d82f      	bhi.n	801861c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 80185bc:	2b58      	cmp	r3, #88	; 0x58
 80185be:	d01c      	beq.n	80185fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80185c0:	d818      	bhi.n	80185f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 80185c2:	2b25      	cmp	r3, #37	; 0x25
 80185c4:	d034      	beq.n	8018630 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 80185c6:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 80185ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80185cc:	f1bb 0f00 	cmp.w	fp, #0
 80185d0:	f000 80b8 	beq.w	8018744 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 80185d4:	f8bb 5000 	ldrh.w	r5, [fp]
 80185d8:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 80185dc:	3301      	adds	r3, #1
 80185de:	930d      	str	r3, [sp, #52]	; 0x34
 80185e0:	e029      	b.n	8018636 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80185e2:	b10d      	cbz	r5, 80185e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 80185e4:	782a      	ldrb	r2, [r5, #0]
 80185e6:	e785      	b.n	80184f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80185e8:	462a      	mov	r2, r5
 80185ea:	e783      	b.n	80184f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80185ec:	2a00      	cmp	r2, #0
 80185ee:	d0ea      	beq.n	80185c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80185f0:	7813      	ldrb	r3, [r2, #0]
 80185f2:	e7e0      	b.n	80185b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 80185f4:	3b63      	subs	r3, #99	; 0x63
 80185f6:	2b01      	cmp	r3, #1
 80185f8:	d8e5      	bhi.n	80185c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80185fa:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 80185fe:	b329      	cbz	r1, 801864c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8018600:	880b      	ldrh	r3, [r1, #0]
 8018602:	2b69      	cmp	r3, #105	; 0x69
 8018604:	d063      	beq.n	80186ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018606:	d825      	bhi.n	8018654 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8018608:	2b63      	cmp	r3, #99	; 0x63
 801860a:	d038      	beq.n	801867e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801860c:	2b64      	cmp	r3, #100	; 0x64
 801860e:	d05e      	beq.n	80186ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018610:	2b58      	cmp	r3, #88	; 0x58
 8018612:	d07b      	beq.n	801870c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8018614:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8018618:	4625      	mov	r5, r4
 801861a:	e036      	b.n	801868a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801861c:	2b73      	cmp	r3, #115	; 0x73
 801861e:	d0ec      	beq.n	80185fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018620:	d802      	bhi.n	8018628 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8018622:	2b6f      	cmp	r3, #111	; 0x6f
 8018624:	d1cf      	bne.n	80185c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018626:	e7e8      	b.n	80185fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018628:	2b75      	cmp	r3, #117	; 0x75
 801862a:	d0e6      	beq.n	80185fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801862c:	2b78      	cmp	r3, #120	; 0x78
 801862e:	e7f9      	b.n	8018624 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8018630:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018632:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8018636:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018638:	b10b      	cbz	r3, 801863e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801863a:	3302      	adds	r3, #2
 801863c:	9309      	str	r3, [sp, #36]	; 0x24
 801863e:	9b08      	ldr	r3, [sp, #32]
 8018640:	2b00      	cmp	r3, #0
 8018642:	f43f af2e 	beq.w	80184a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018646:	3301      	adds	r3, #1
 8018648:	9308      	str	r3, [sp, #32]
 801864a:	e72a      	b.n	80184a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801864c:	2a00      	cmp	r2, #0
 801864e:	d0e1      	beq.n	8018614 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018650:	7813      	ldrb	r3, [r2, #0]
 8018652:	e7d6      	b.n	8018602 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8018654:	2b73      	cmp	r3, #115	; 0x73
 8018656:	d036      	beq.n	80186c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8018658:	d807      	bhi.n	801866a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801865a:	2b6f      	cmp	r3, #111	; 0x6f
 801865c:	d1da      	bne.n	8018614 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801865e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018660:	1d25      	adds	r5, r4, #4
 8018662:	eba8 0202 	sub.w	r2, r8, r2
 8018666:	2308      	movs	r3, #8
 8018668:	e04a      	b.n	8018700 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801866a:	2b75      	cmp	r3, #117	; 0x75
 801866c:	d043      	beq.n	80186f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801866e:	2b78      	cmp	r3, #120	; 0x78
 8018670:	d1d0      	bne.n	8018614 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018672:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018674:	1d25      	adds	r5, r4, #4
 8018676:	eba8 0202 	sub.w	r2, r8, r2
 801867a:	2310      	movs	r3, #16
 801867c:	e040      	b.n	8018700 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801867e:	6823      	ldr	r3, [r4, #0]
 8018680:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8018684:	1d25      	adds	r5, r4, #4
 8018686:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801868a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801868c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018690:	2b00      	cmp	r3, #0
 8018692:	d052      	beq.n	801873a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8018694:	881a      	ldrh	r2, [r3, #0]
 8018696:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801869a:	a80d      	add	r0, sp, #52	; 0x34
 801869c:	9005      	str	r0, [sp, #20]
 801869e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 80186a2:	9004      	str	r0, [sp, #16]
 80186a4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80186a6:	9003      	str	r0, [sp, #12]
 80186a8:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 80186ac:	9002      	str	r0, [sp, #8]
 80186ae:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80186b0:	9001      	str	r0, [sp, #4]
 80186b2:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80186b6:	9000      	str	r0, [sp, #0]
 80186b8:	e9cd 8706 	strd	r8, r7, [sp, #24]
 80186bc:	a810      	add	r0, sp, #64	; 0x40
 80186be:	f7ff fd49 	bl	8018154 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80186c2:	462c      	mov	r4, r5
 80186c4:	e7b7      	b.n	8018636 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80186c6:	6823      	ldr	r3, [r4, #0]
 80186c8:	1d25      	adds	r5, r4, #4
 80186ca:	9310      	str	r3, [sp, #64]	; 0x40
 80186cc:	e7dd      	b.n	801868a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80186ce:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80186d0:	6820      	ldr	r0, [r4, #0]
 80186d2:	eba8 0202 	sub.w	r2, r8, r2
 80186d6:	230a      	movs	r3, #10
 80186d8:	b292      	uxth	r2, r2
 80186da:	4649      	mov	r1, r9
 80186dc:	f7ff fce4 	bl	80180a8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80186e0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80186e4:	2b2d      	cmp	r3, #45	; 0x2d
 80186e6:	f104 0504 	add.w	r5, r4, #4
 80186ea:	d1ce      	bne.n	801868a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80186ec:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80186f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80186f2:	3302      	adds	r3, #2
 80186f4:	e7e9      	b.n	80186ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 80186f6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80186f8:	1d25      	adds	r5, r4, #4
 80186fa:	eba8 0202 	sub.w	r2, r8, r2
 80186fe:	230a      	movs	r3, #10
 8018700:	b292      	uxth	r2, r2
 8018702:	4649      	mov	r1, r9
 8018704:	6820      	ldr	r0, [r4, #0]
 8018706:	f7ff fcfb 	bl	8018100 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801870a:	e7be      	b.n	801868a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801870c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801870e:	6820      	ldr	r0, [r4, #0]
 8018710:	eba8 0202 	sub.w	r2, r8, r2
 8018714:	b292      	uxth	r2, r2
 8018716:	2310      	movs	r3, #16
 8018718:	4649      	mov	r1, r9
 801871a:	f7ff fcf1 	bl	8018100 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801871e:	1d25      	adds	r5, r4, #4
 8018720:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8018724:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8018728:	2b00      	cmp	r3, #0
 801872a:	d0ae      	beq.n	801868a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801872c:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8018730:	2919      	cmp	r1, #25
 8018732:	d8f7      	bhi.n	8018724 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018734:	3b20      	subs	r3, #32
 8018736:	8013      	strh	r3, [r2, #0]
 8018738:	e7f4      	b.n	8018724 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801873a:	9a08      	ldr	r2, [sp, #32]
 801873c:	2a00      	cmp	r2, #0
 801873e:	d0aa      	beq.n	8018696 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018740:	7812      	ldrb	r2, [r2, #0]
 8018742:	e7a8      	b.n	8018696 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018744:	2d00      	cmp	r5, #0
 8018746:	f43f af47 	beq.w	80185d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801874a:	782d      	ldrb	r5, [r5, #0]
 801874c:	e744      	b.n	80185d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801874e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801874e:	b507      	push	{r0, r1, r2, lr}
 8018750:	9300      	str	r3, [sp, #0]
 8018752:	4613      	mov	r3, r2
 8018754:	2200      	movs	r2, #0
 8018756:	f7ff fe90 	bl	801847a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801875a:	b003      	add	sp, #12
 801875c:	f85d fb04 	ldr.w	pc, [sp], #4

08018760 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8018760:	b40c      	push	{r2, r3}
 8018762:	b507      	push	{r0, r1, r2, lr}
 8018764:	ab04      	add	r3, sp, #16
 8018766:	f853 2b04 	ldr.w	r2, [r3], #4
 801876a:	9301      	str	r3, [sp, #4]
 801876c:	f7ff ffef 	bl	801874e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8018770:	b003      	add	sp, #12
 8018772:	f85d eb04 	ldr.w	lr, [sp], #4
 8018776:	b002      	add	sp, #8
 8018778:	4770      	bx	lr
	...

0801877c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801877c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018780:	b0c5      	sub	sp, #276	; 0x114
 8018782:	2400      	movs	r4, #0
 8018784:	af11      	add	r7, sp, #68	; 0x44
 8018786:	4606      	mov	r6, r0
 8018788:	468a      	mov	sl, r1
 801878a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801878e:	4621      	mov	r1, r4
 8018790:	22c8      	movs	r2, #200	; 0xc8
 8018792:	4638      	mov	r0, r7
 8018794:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 8018798:	940d      	str	r4, [sp, #52]	; 0x34
 801879a:	f011 ff00 	bl	802a59e <memset>
 801879e:	b16e      	cbz	r6, 80187bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 80187a0:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 8018a44 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 80187a4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80187a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80187a8:	b162      	cbz	r2, 80187c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 80187aa:	8812      	ldrh	r2, [r2, #0]
 80187ac:	b11a      	cbz	r2, 80187b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 80187ae:	f10a 31ff 	add.w	r1, sl, #4294967295
 80187b2:	4299      	cmp	r1, r3
 80187b4:	dc2e      	bgt.n	8018814 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 80187b6:	2200      	movs	r2, #0
 80187b8:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80187bc:	4630      	mov	r0, r6
 80187be:	b045      	add	sp, #276	; 0x114
 80187c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80187c4:	9a08      	ldr	r2, [sp, #32]
 80187c6:	2a00      	cmp	r2, #0
 80187c8:	d0f5      	beq.n	80187b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 80187ca:	7812      	ldrb	r2, [r2, #0]
 80187cc:	e7ee      	b.n	80187ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 80187ce:	2d00      	cmp	r5, #0
 80187d0:	d0e8      	beq.n	80187a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80187d2:	782a      	ldrb	r2, [r5, #0]
 80187d4:	b142      	cbz	r2, 80187e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 80187d6:	2a25      	cmp	r2, #37	; 0x25
 80187d8:	d001      	beq.n	80187de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 80187da:	4299      	cmp	r1, r3
 80187dc:	dc08      	bgt.n	80187f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 80187de:	f1b8 0f00 	cmp.w	r8, #0
 80187e2:	d121      	bne.n	8018828 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 80187e4:	2d00      	cmp	r5, #0
 80187e6:	d0dd      	beq.n	80187a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80187e8:	782a      	ldrb	r2, [r5, #0]
 80187ea:	f04f 0800 	mov.w	r8, #0
 80187ee:	e01d      	b.n	801882c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 80187f0:	f1b8 0f00 	cmp.w	r8, #0
 80187f4:	d07f      	beq.n	80188f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 80187f6:	f8b8 2000 	ldrh.w	r2, [r8]
 80187fa:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80187fe:	f1b8 0f00 	cmp.w	r8, #0
 8018802:	d002      	beq.n	801880a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8018804:	f108 0202 	add.w	r2, r8, #2
 8018808:	9209      	str	r2, [sp, #36]	; 0x24
 801880a:	b10d      	cbz	r5, 8018810 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 801880c:	3501      	adds	r5, #1
 801880e:	9508      	str	r5, [sp, #32]
 8018810:	3301      	adds	r3, #1
 8018812:	930d      	str	r3, [sp, #52]	; 0x34
 8018814:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8018818:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801881a:	f1b8 0f00 	cmp.w	r8, #0
 801881e:	d0d6      	beq.n	80187ce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 8018820:	f8b8 2000 	ldrh.w	r2, [r8]
 8018824:	2a00      	cmp	r2, #0
 8018826:	d1d6      	bne.n	80187d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8018828:	f8b8 2000 	ldrh.w	r2, [r8]
 801882c:	2a00      	cmp	r2, #0
 801882e:	d0b9      	beq.n	80187a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018830:	4299      	cmp	r1, r3
 8018832:	ddb7      	ble.n	80187a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018834:	2300      	movs	r3, #0
 8018836:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801883a:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801883e:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 8018842:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 8018846:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801884a:	930e      	str	r3, [sp, #56]	; 0x38
 801884c:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8018850:	930f      	str	r3, [sp, #60]	; 0x3c
 8018852:	f1b8 0f00 	cmp.w	r8, #0
 8018856:	d002      	beq.n	801885e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8018858:	f108 0302 	add.w	r3, r8, #2
 801885c:	9309      	str	r3, [sp, #36]	; 0x24
 801885e:	b10d      	cbz	r5, 8018864 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8018860:	1c6b      	adds	r3, r5, #1
 8018862:	9308      	str	r3, [sp, #32]
 8018864:	ab0f      	add	r3, sp, #60	; 0x3c
 8018866:	9305      	str	r3, [sp, #20]
 8018868:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801886c:	9304      	str	r3, [sp, #16]
 801886e:	ab0e      	add	r3, sp, #56	; 0x38
 8018870:	9303      	str	r3, [sp, #12]
 8018872:	ab0c      	add	r3, sp, #48	; 0x30
 8018874:	9302      	str	r3, [sp, #8]
 8018876:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801887a:	9301      	str	r3, [sp, #4]
 801887c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018880:	9300      	str	r3, [sp, #0]
 8018882:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8018886:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801888a:	a908      	add	r1, sp, #32
 801888c:	a809      	add	r0, sp, #36	; 0x24
 801888e:	f7ff fd24 	bl	80182da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8018892:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018894:	2b00      	cmp	r3, #0
 8018896:	da0b      	bge.n	80188b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 8018898:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801889c:	edd3 7a00 	vldr	s15, [r3]
 80188a0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80188a4:	3401      	adds	r4, #1
 80188a6:	ee17 3a90 	vmov	r3, s15
 80188aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80188ae:	930e      	str	r3, [sp, #56]	; 0x38
 80188b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80188b2:	2b00      	cmp	r3, #0
 80188b4:	da0b      	bge.n	80188ce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 80188b6:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80188ba:	edd3 7a00 	vldr	s15, [r3]
 80188be:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80188c2:	3401      	adds	r4, #1
 80188c4:	ee17 3a90 	vmov	r3, s15
 80188c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80188cc:	930f      	str	r3, [sp, #60]	; 0x3c
 80188ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80188d0:	b1b3      	cbz	r3, 8018900 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 80188d2:	881a      	ldrh	r2, [r3, #0]
 80188d4:	2a25      	cmp	r2, #37	; 0x25
 80188d6:	d018      	beq.n	801890a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 80188d8:	2a66      	cmp	r2, #102	; 0x66
 80188da:	d01c      	beq.n	8018916 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 80188dc:	e9cd 5808 	strd	r5, r8, [sp, #32]
 80188e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80188e2:	f1b8 0f00 	cmp.w	r8, #0
 80188e6:	f000 8121 	beq.w	8018b2c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 80188ea:	f8b8 5000 	ldrh.w	r5, [r8]
 80188ee:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 80188f2:	3301      	adds	r3, #1
 80188f4:	e00d      	b.n	8018912 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 80188f6:	b10d      	cbz	r5, 80188fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 80188f8:	782a      	ldrb	r2, [r5, #0]
 80188fa:	e77e      	b.n	80187fa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 80188fc:	462a      	mov	r2, r5
 80188fe:	e77c      	b.n	80187fa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8018900:	9b08      	ldr	r3, [sp, #32]
 8018902:	2b00      	cmp	r3, #0
 8018904:	d0ea      	beq.n	80188dc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8018906:	781a      	ldrb	r2, [r3, #0]
 8018908:	e7e4      	b.n	80188d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801890a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801890c:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8018910:	3302      	adds	r3, #2
 8018912:	930d      	str	r3, [sp, #52]	; 0x34
 8018914:	e041      	b.n	801899a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 8018916:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801891a:	edd3 7a00 	vldr	s15, [r3]
 801891e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018922:	9710      	str	r7, [sp, #64]	; 0x40
 8018924:	3401      	adds	r4, #1
 8018926:	b923      	cbnz	r3, 8018932 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 8018928:	2301      	movs	r3, #1
 801892a:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801892e:	2306      	movs	r3, #6
 8018930:	930f      	str	r3, [sp, #60]	; 0x3c
 8018932:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018936:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801893a:	bf48      	it	mi
 801893c:	eef1 7a67 	vnegmi.f32	s15, s15
 8018940:	eeb0 7ae7 	vabs.f32	s14, s15
 8018944:	bf48      	it	mi
 8018946:	232d      	movmi	r3, #45	; 0x2d
 8018948:	eeb4 7a45 	vcmp.f32	s14, s10
 801894c:	bf48      	it	mi
 801894e:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 8018952:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018956:	dd2b      	ble.n	80189b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8018958:	4b3b      	ldr	r3, [pc, #236]	; (8018a48 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801895a:	9311      	str	r3, [sp, #68]	; 0x44
 801895c:	2366      	movs	r3, #102	; 0x66
 801895e:	9312      	str	r3, [sp, #72]	; 0x48
 8018960:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018962:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018966:	2b00      	cmp	r3, #0
 8018968:	f000 80da 	beq.w	8018b20 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801896c:	881a      	ldrh	r2, [r3, #0]
 801896e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018972:	a80d      	add	r0, sp, #52	; 0x34
 8018974:	9005      	str	r0, [sp, #20]
 8018976:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801897a:	9004      	str	r0, [sp, #16]
 801897c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801897e:	9003      	str	r0, [sp, #12]
 8018980:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8018984:	9002      	str	r0, [sp, #8]
 8018986:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018988:	9001      	str	r0, [sp, #4]
 801898a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801898e:	9000      	str	r0, [sp, #0]
 8018990:	e9cd a606 	strd	sl, r6, [sp, #24]
 8018994:	a810      	add	r0, sp, #64	; 0x40
 8018996:	f7ff fbdd 	bl	8018154 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801899a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801899c:	b10b      	cbz	r3, 80189a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801899e:	3302      	adds	r3, #2
 80189a0:	9309      	str	r3, [sp, #36]	; 0x24
 80189a2:	9b08      	ldr	r3, [sp, #32]
 80189a4:	2b00      	cmp	r3, #0
 80189a6:	f43f aefd 	beq.w	80187a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80189aa:	3301      	adds	r3, #1
 80189ac:	9308      	str	r3, [sp, #32]
 80189ae:	e6f9      	b.n	80187a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80189b0:	eef4 7a67 	vcmp.f32	s15, s15
 80189b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80189b8:	d63a      	bvs.n	8018a30 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 80189ba:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 80189be:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80189c2:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 80189c6:	eeb0 6a67 	vmov.f32	s12, s15
 80189ca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80189ce:	eef0 5a47 	vmov.f32	s11, s14
 80189d2:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80189d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80189da:	da2d      	bge.n	8018a38 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 80189dc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80189de:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 80189e2:	2100      	movs	r1, #0
 80189e4:	eef0 4a46 	vmov.f32	s9, s12
 80189e8:	ebaa 0202 	sub.w	r2, sl, r2
 80189ec:	eef4 6ac6 	vcmpe.f32	s13, s12
 80189f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80189f4:	b28d      	uxth	r5, r1
 80189f6:	db2c      	blt.n	8018a52 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 80189f8:	1a53      	subs	r3, r2, r1
 80189fa:	2b00      	cmp	r3, #0
 80189fc:	dd29      	ble.n	8018a52 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 80189fe:	3101      	adds	r1, #1
 8018a00:	2964      	cmp	r1, #100	; 0x64
 8018a02:	d025      	beq.n	8018a50 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8018a04:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8018a08:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8018a0c:	ee17 3a10 	vmov	r3, s14
 8018a10:	2b09      	cmp	r3, #9
 8018a12:	bfa8      	it	ge
 8018a14:	2309      	movge	r3, #9
 8018a16:	ee07 3a10 	vmov	s14, r3
 8018a1a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018a1e:	f103 0030 	add.w	r0, r3, #48	; 0x30
 8018a22:	eee7 7a66 	vfms.f32	s15, s14, s13
 8018a26:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 8018a2a:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 8018a2e:	e7dd      	b.n	80189ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 8018a30:	4b06      	ldr	r3, [pc, #24]	; (8018a4c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 8018a32:	9311      	str	r3, [sp, #68]	; 0x44
 8018a34:	236e      	movs	r3, #110	; 0x6e
 8018a36:	e792      	b.n	801895e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 8018a38:	ee66 6a87 	vmul.f32	s13, s13, s14
 8018a3c:	ee86 6a07 	vdiv.f32	s12, s12, s14
 8018a40:	e7c7      	b.n	80189d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 8018a42:	bf00      	nop
 8018a44:	7f7fffff 	.word	0x7f7fffff
 8018a48:	006e0069 	.word	0x006e0069
 8018a4c:	0061006e 	.word	0x0061006e
 8018a50:	2563      	movs	r5, #99	; 0x63
 8018a52:	2a63      	cmp	r2, #99	; 0x63
 8018a54:	bfd4      	ite	le
 8018a56:	ebc5 0202 	rsble	r2, r5, r2
 8018a5a:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 8018a5e:	2a00      	cmp	r2, #0
 8018a60:	dd43      	ble.n	8018aea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8018a62:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018a64:	2b00      	cmp	r3, #0
 8018a66:	dd40      	ble.n	8018aea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8018a68:	f04f 0901 	mov.w	r9, #1
 8018a6c:	210a      	movs	r1, #10
 8018a6e:	f113 33ff 	adds.w	r3, r3, #4294967295
 8018a72:	d30c      	bcc.n	8018a8e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 8018a74:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8018a78:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8018a7c:	ee17 0a10 	vmov	r0, s14
 8018a80:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018a84:	fb01 0909 	mla	r9, r1, r9, r0
 8018a88:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8018a8c:	e7ef      	b.n	8018a6e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 8018a8e:	3501      	adds	r5, #1
 8018a90:	930f      	str	r3, [sp, #60]	; 0x3c
 8018a92:	b292      	uxth	r2, r2
 8018a94:	230a      	movs	r3, #10
 8018a96:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 8018a9a:	4648      	mov	r0, r9
 8018a9c:	f7ff fb4e 	bl	801813c <_ZN8touchgfx7Unicode4itoaElPtti>
 8018aa0:	f1b9 0f01 	cmp.w	r9, #1
 8018aa4:	dc1f      	bgt.n	8018ae6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 8018aa6:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 8018aaa:	2b00      	cmp	r3, #0
 8018aac:	bf0c      	ite	eq
 8018aae:	2300      	moveq	r3, #0
 8018ab0:	232e      	movne	r3, #46	; 0x2e
 8018ab2:	aa44      	add	r2, sp, #272	; 0x110
 8018ab4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8018ab8:	eef4 7ae4 	vcmpe.f32	s15, s9
 8018abc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018ac0:	f825 3ccc 	strh.w	r3, [r5, #-204]
 8018ac4:	f6ff af4c 	blt.w	8018960 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8018ac8:	2300      	movs	r3, #0
 8018aca:	f838 2b02 	ldrh.w	r2, [r8], #2
 8018ace:	1c59      	adds	r1, r3, #1
 8018ad0:	b98a      	cbnz	r2, 8018af6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 8018ad2:	b29b      	uxth	r3, r3
 8018ad4:	2130      	movs	r1, #48	; 0x30
 8018ad6:	b983      	cbnz	r3, 8018afa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 8018ad8:	2331      	movs	r3, #49	; 0x31
 8018ada:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8018ade:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018ae0:	3b02      	subs	r3, #2
 8018ae2:	9310      	str	r3, [sp, #64]	; 0x40
 8018ae4:	e73c      	b.n	8018960 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8018ae6:	232e      	movs	r3, #46	; 0x2e
 8018ae8:	e7e3      	b.n	8018ab2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 8018aea:	ab44      	add	r3, sp, #272	; 0x110
 8018aec:	3501      	adds	r5, #1
 8018aee:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8018af2:	2300      	movs	r3, #0
 8018af4:	e7e0      	b.n	8018ab8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8018af6:	460b      	mov	r3, r1
 8018af8:	e7e7      	b.n	8018aca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 8018afa:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 8018afe:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 8018b02:	2808      	cmp	r0, #8
 8018b04:	d806      	bhi.n	8018b14 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 8018b06:	a944      	add	r1, sp, #272	; 0x110
 8018b08:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8018b0c:	3201      	adds	r2, #1
 8018b0e:	f823 2ccc 	strh.w	r2, [r3, #-204]
 8018b12:	e725      	b.n	8018960 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8018b14:	2a39      	cmp	r2, #57	; 0x39
 8018b16:	bf08      	it	eq
 8018b18:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 8018b1c:	3b01      	subs	r3, #1
 8018b1e:	e7da      	b.n	8018ad6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 8018b20:	9a08      	ldr	r2, [sp, #32]
 8018b22:	2a00      	cmp	r2, #0
 8018b24:	f43f af23 	beq.w	801896e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8018b28:	7812      	ldrb	r2, [r2, #0]
 8018b2a:	e720      	b.n	801896e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8018b2c:	2d00      	cmp	r5, #0
 8018b2e:	f43f aede 	beq.w	80188ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8018b32:	782d      	ldrb	r5, [r5, #0]
 8018b34:	e6db      	b.n	80188ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8018b36:	bf00      	nop

08018b38 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8018b38:	b507      	push	{r0, r1, r2, lr}
 8018b3a:	9300      	str	r3, [sp, #0]
 8018b3c:	4613      	mov	r3, r2
 8018b3e:	2200      	movs	r2, #0
 8018b40:	f7ff fe1c 	bl	801877c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8018b44:	b003      	add	sp, #12
 8018b46:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08018b4c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8018b4c:	4b01      	ldr	r3, [pc, #4]	; (8018b54 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8018b4e:	6018      	str	r0, [r3, #0]
 8018b50:	4770      	bx	lr
 8018b52:	bf00      	nop
 8018b54:	20012f94 	.word	0x20012f94

08018b58 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8018b58:	4b06      	ldr	r3, [pc, #24]	; (8018b74 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8018b5a:	881a      	ldrh	r2, [r3, #0]
 8018b5c:	4282      	cmp	r2, r0
 8018b5e:	d807      	bhi.n	8018b70 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8018b60:	4b05      	ldr	r3, [pc, #20]	; (8018b78 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8018b62:	881b      	ldrh	r3, [r3, #0]
 8018b64:	4413      	add	r3, r2
 8018b66:	4298      	cmp	r0, r3
 8018b68:	bfac      	ite	ge
 8018b6a:	2000      	movge	r0, #0
 8018b6c:	2001      	movlt	r0, #1
 8018b6e:	4770      	bx	lr
 8018b70:	2000      	movs	r0, #0
 8018b72:	4770      	bx	lr
 8018b74:	20012fb4 	.word	0x20012fb4
 8018b78:	20012fb8 	.word	0x20012fb8

08018b7c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8018b7c:	b508      	push	{r3, lr}
 8018b7e:	4601      	mov	r1, r0
 8018b80:	f7ff ffea 	bl	8018b58 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8018b84:	b118      	cbz	r0, 8018b8e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8018b86:	4b02      	ldr	r3, [pc, #8]	; (8018b90 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8018b88:	681b      	ldr	r3, [r3, #0]
 8018b8a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8018b8e:	bd08      	pop	{r3, pc}
 8018b90:	20012f98 	.word	0x20012f98

08018b94 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8018b94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018b96:	4c24      	ldr	r4, [pc, #144]	; (8018c28 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8018b98:	6823      	ldr	r3, [r4, #0]
 8018b9a:	2b00      	cmp	r3, #0
 8018b9c:	d042      	beq.n	8018c24 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8018b9e:	4a23      	ldr	r2, [pc, #140]	; (8018c2c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8018ba0:	4d23      	ldr	r5, [pc, #140]	; (8018c30 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8018ba2:	8811      	ldrh	r1, [r2, #0]
 8018ba4:	f8b5 c000 	ldrh.w	ip, [r5]
 8018ba8:	4822      	ldr	r0, [pc, #136]	; (8018c34 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8018baa:	4461      	add	r1, ip
 8018bac:	1c4a      	adds	r2, r1, #1
 8018bae:	f022 0201 	bic.w	r2, r2, #1
 8018bb2:	008f      	lsls	r7, r1, #2
 8018bb4:	0412      	lsls	r2, r2, #16
 8018bb6:	19de      	adds	r6, r3, r7
 8018bb8:	0c12      	lsrs	r2, r2, #16
 8018bba:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8018bbe:	6006      	str	r6, [r0, #0]
 8018bc0:	4e1d      	ldr	r6, [pc, #116]	; (8018c38 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8018bc2:	19da      	adds	r2, r3, r7
 8018bc4:	6032      	str	r2, [r6, #0]
 8018bc6:	220e      	movs	r2, #14
 8018bc8:	fb02 f20c 	mul.w	r2, r2, ip
 8018bcc:	3203      	adds	r2, #3
 8018bce:	f022 0203 	bic.w	r2, r2, #3
 8018bd2:	443a      	add	r2, r7
 8018bd4:	4f19      	ldr	r7, [pc, #100]	; (8018c3c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8018bd6:	4413      	add	r3, r2
 8018bd8:	603b      	str	r3, [r7, #0]
 8018bda:	4f19      	ldr	r7, [pc, #100]	; (8018c40 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8018bdc:	2300      	movs	r3, #0
 8018bde:	803b      	strh	r3, [r7, #0]
 8018be0:	4f18      	ldr	r7, [pc, #96]	; (8018c44 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8018be2:	683f      	ldr	r7, [r7, #0]
 8018be4:	1aba      	subs	r2, r7, r2
 8018be6:	4f18      	ldr	r7, [pc, #96]	; (8018c48 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8018be8:	603a      	str	r2, [r7, #0]
 8018bea:	4a18      	ldr	r2, [pc, #96]	; (8018c4c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8018bec:	469c      	mov	ip, r3
 8018bee:	8013      	strh	r3, [r2, #0]
 8018bf0:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8018bf4:	428b      	cmp	r3, r1
 8018bf6:	d10d      	bne.n	8018c14 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8018bf8:	882d      	ldrh	r5, [r5, #0]
 8018bfa:	6830      	ldr	r0, [r6, #0]
 8018bfc:	2300      	movs	r3, #0
 8018bfe:	240e      	movs	r4, #14
 8018c00:	429d      	cmp	r5, r3
 8018c02:	d90f      	bls.n	8018c24 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8018c04:	fb04 0203 	mla	r2, r4, r3, r0
 8018c08:	3301      	adds	r3, #1
 8018c0a:	7b11      	ldrb	r1, [r2, #12]
 8018c0c:	f36f 1145 	bfc	r1, #5, #1
 8018c10:	7311      	strb	r1, [r2, #12]
 8018c12:	e7f5      	b.n	8018c00 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8018c14:	6822      	ldr	r2, [r4, #0]
 8018c16:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8018c1a:	6802      	ldr	r2, [r0, #0]
 8018c1c:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8018c20:	3301      	adds	r3, #1
 8018c22:	e7e7      	b.n	8018bf4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8018c24:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018c26:	bf00      	nop
 8018c28:	20012f98 	.word	0x20012f98
 8018c2c:	20012fb4 	.word	0x20012fb4
 8018c30:	20012fb8 	.word	0x20012fb8
 8018c34:	20012fac 	.word	0x20012fac
 8018c38:	20012f9c 	.word	0x20012f9c
 8018c3c:	20012fa4 	.word	0x20012fa4
 8018c40:	20012fb6 	.word	0x20012fb6
 8018c44:	20012fa0 	.word	0x20012fa0
 8018c48:	20012fb0 	.word	0x20012fb0
 8018c4c:	20012fa8 	.word	0x20012fa8

08018c50 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8018c50:	4b06      	ldr	r3, [pc, #24]	; (8018c6c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8018c52:	681b      	ldr	r3, [r3, #0]
 8018c54:	b943      	cbnz	r3, 8018c68 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018c56:	b139      	cbz	r1, 8018c68 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018c58:	4b05      	ldr	r3, [pc, #20]	; (8018c70 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8018c5a:	801a      	strh	r2, [r3, #0]
 8018c5c:	4b05      	ldr	r3, [pc, #20]	; (8018c74 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8018c5e:	6019      	str	r1, [r3, #0]
 8018c60:	4b05      	ldr	r3, [pc, #20]	; (8018c78 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8018c62:	6018      	str	r0, [r3, #0]
 8018c64:	f7ff bf96 	b.w	8018b94 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8018c68:	4770      	bx	lr
 8018c6a:	bf00      	nop
 8018c6c:	20012fa4 	.word	0x20012fa4
 8018c70:	20012fb8 	.word	0x20012fb8
 8018c74:	20012fa0 	.word	0x20012fa0
 8018c78:	20012f98 	.word	0x20012f98

08018c7c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8018c7c:	b470      	push	{r4, r5, r6}
 8018c7e:	4c07      	ldr	r4, [pc, #28]	; (8018c9c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8018c80:	6826      	ldr	r6, [r4, #0]
 8018c82:	4605      	mov	r5, r0
 8018c84:	4610      	mov	r0, r2
 8018c86:	9a03      	ldr	r2, [sp, #12]
 8018c88:	b936      	cbnz	r6, 8018c98 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8018c8a:	6025      	str	r5, [r4, #0]
 8018c8c:	4c04      	ldr	r4, [pc, #16]	; (8018ca0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8018c8e:	8021      	strh	r1, [r4, #0]
 8018c90:	bc70      	pop	{r4, r5, r6}
 8018c92:	4619      	mov	r1, r3
 8018c94:	f7ff bfdc 	b.w	8018c50 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8018c98:	bc70      	pop	{r4, r5, r6}
 8018c9a:	4770      	bx	lr
 8018c9c:	20012fbc 	.word	0x20012fbc
 8018ca0:	20012fb4 	.word	0x20012fb4

08018ca4 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8018ca4:	4a12      	ldr	r2, [pc, #72]	; (8018cf0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8018ca6:	8803      	ldrh	r3, [r0, #0]
 8018ca8:	8812      	ldrh	r2, [r2, #0]
 8018caa:	4293      	cmp	r3, r2
 8018cac:	d207      	bcs.n	8018cbe <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8018cae:	4a11      	ldr	r2, [pc, #68]	; (8018cf4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8018cb0:	6812      	ldr	r2, [r2, #0]
 8018cb2:	2114      	movs	r1, #20
 8018cb4:	fb01 2303 	mla	r3, r1, r3, r2
 8018cb8:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8018cbc:	4770      	bx	lr
 8018cbe:	490e      	ldr	r1, [pc, #56]	; (8018cf8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8018cc0:	8809      	ldrh	r1, [r1, #0]
 8018cc2:	4411      	add	r1, r2
 8018cc4:	428b      	cmp	r3, r1
 8018cc6:	da04      	bge.n	8018cd2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8018cc8:	1a9b      	subs	r3, r3, r2
 8018cca:	4a0c      	ldr	r2, [pc, #48]	; (8018cfc <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8018ccc:	210e      	movs	r1, #14
 8018cce:	6812      	ldr	r2, [r2, #0]
 8018cd0:	e7f0      	b.n	8018cb4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8018cd2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018cd6:	4293      	cmp	r3, r2
 8018cd8:	d108      	bne.n	8018cec <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8018cda:	4b09      	ldr	r3, [pc, #36]	; (8018d00 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8018cdc:	781b      	ldrb	r3, [r3, #0]
 8018cde:	b91b      	cbnz	r3, 8018ce8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8018ce0:	4b08      	ldr	r3, [pc, #32]	; (8018d04 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8018ce2:	f9b3 0000 	ldrsh.w	r0, [r3]
 8018ce6:	4770      	bx	lr
 8018ce8:	4b07      	ldr	r3, [pc, #28]	; (8018d08 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8018cea:	e7fa      	b.n	8018ce2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8018cec:	2000      	movs	r0, #0
 8018cee:	4770      	bx	lr
 8018cf0:	20012fb4 	.word	0x20012fb4
 8018cf4:	20012fbc 	.word	0x20012fbc
 8018cf8:	20012fb8 	.word	0x20012fb8
 8018cfc:	20012f9c 	.word	0x20012f9c
 8018d00:	20012f24 	.word	0x20012f24
 8018d04:	20012f26 	.word	0x20012f26
 8018d08:	20012f28 	.word	0x20012f28

08018d0c <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8018d0c:	4a12      	ldr	r2, [pc, #72]	; (8018d58 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8018d0e:	8803      	ldrh	r3, [r0, #0]
 8018d10:	8812      	ldrh	r2, [r2, #0]
 8018d12:	4293      	cmp	r3, r2
 8018d14:	d207      	bcs.n	8018d26 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8018d16:	4a11      	ldr	r2, [pc, #68]	; (8018d5c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8018d18:	6812      	ldr	r2, [r2, #0]
 8018d1a:	2114      	movs	r1, #20
 8018d1c:	fb01 2303 	mla	r3, r1, r3, r2
 8018d20:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8018d24:	4770      	bx	lr
 8018d26:	490e      	ldr	r1, [pc, #56]	; (8018d60 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8018d28:	8809      	ldrh	r1, [r1, #0]
 8018d2a:	4411      	add	r1, r2
 8018d2c:	428b      	cmp	r3, r1
 8018d2e:	da04      	bge.n	8018d3a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8018d30:	1a9b      	subs	r3, r3, r2
 8018d32:	4a0c      	ldr	r2, [pc, #48]	; (8018d64 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8018d34:	210e      	movs	r1, #14
 8018d36:	6812      	ldr	r2, [r2, #0]
 8018d38:	e7f0      	b.n	8018d1c <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8018d3a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018d3e:	4293      	cmp	r3, r2
 8018d40:	d108      	bne.n	8018d54 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8018d42:	4b09      	ldr	r3, [pc, #36]	; (8018d68 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8018d44:	781b      	ldrb	r3, [r3, #0]
 8018d46:	b91b      	cbnz	r3, 8018d50 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8018d48:	4b08      	ldr	r3, [pc, #32]	; (8018d6c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8018d4a:	f9b3 0000 	ldrsh.w	r0, [r3]
 8018d4e:	4770      	bx	lr
 8018d50:	4b07      	ldr	r3, [pc, #28]	; (8018d70 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8018d52:	e7fa      	b.n	8018d4a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8018d54:	2000      	movs	r0, #0
 8018d56:	4770      	bx	lr
 8018d58:	20012fb4 	.word	0x20012fb4
 8018d5c:	20012fbc 	.word	0x20012fbc
 8018d60:	20012fb8 	.word	0x20012fb8
 8018d64:	20012f9c 	.word	0x20012f9c
 8018d68:	20012f24 	.word	0x20012f24
 8018d6c:	20012f28 	.word	0x20012f28
 8018d70:	20012f26 	.word	0x20012f26

08018d74 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8018d74:	b510      	push	{r4, lr}
 8018d76:	4a1f      	ldr	r2, [pc, #124]	; (8018df4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8018d78:	880b      	ldrh	r3, [r1, #0]
 8018d7a:	8812      	ldrh	r2, [r2, #0]
 8018d7c:	4293      	cmp	r3, r2
 8018d7e:	d213      	bcs.n	8018da8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8018d80:	4a1d      	ldr	r2, [pc, #116]	; (8018df8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8018d82:	6812      	ldr	r2, [r2, #0]
 8018d84:	2114      	movs	r1, #20
 8018d86:	fb01 2303 	mla	r3, r1, r3, r2
 8018d8a:	8a1a      	ldrh	r2, [r3, #16]
 8018d8c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8018d90:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8018d94:	8a5b      	ldrh	r3, [r3, #18]
 8018d96:	8004      	strh	r4, [r0, #0]
 8018d98:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8018d9c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8018da0:	8041      	strh	r1, [r0, #2]
 8018da2:	8082      	strh	r2, [r0, #4]
 8018da4:	80c3      	strh	r3, [r0, #6]
 8018da6:	e00e      	b.n	8018dc6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018da8:	4914      	ldr	r1, [pc, #80]	; (8018dfc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8018daa:	8809      	ldrh	r1, [r1, #0]
 8018dac:	4411      	add	r1, r2
 8018dae:	428b      	cmp	r3, r1
 8018db0:	da0a      	bge.n	8018dc8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8018db2:	1a9b      	subs	r3, r3, r2
 8018db4:	4a12      	ldr	r2, [pc, #72]	; (8018e00 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8018db6:	6812      	ldr	r2, [r2, #0]
 8018db8:	210e      	movs	r1, #14
 8018dba:	fb01 2303 	mla	r3, r1, r3, r2
 8018dbe:	681a      	ldr	r2, [r3, #0]
 8018dc0:	6002      	str	r2, [r0, #0]
 8018dc2:	685a      	ldr	r2, [r3, #4]
 8018dc4:	6042      	str	r2, [r0, #4]
 8018dc6:	bd10      	pop	{r4, pc}
 8018dc8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018dcc:	4293      	cmp	r3, r2
 8018dce:	d10b      	bne.n	8018de8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8018dd0:	4b0c      	ldr	r3, [pc, #48]	; (8018e04 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8018dd2:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018dd6:	4b0c      	ldr	r3, [pc, #48]	; (8018e08 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8018dd8:	8081      	strh	r1, [r0, #4]
 8018dda:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018dde:	80c2      	strh	r2, [r0, #6]
 8018de0:	2300      	movs	r3, #0
 8018de2:	8003      	strh	r3, [r0, #0]
 8018de4:	8043      	strh	r3, [r0, #2]
 8018de6:	e7ee      	b.n	8018dc6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018de8:	2300      	movs	r3, #0
 8018dea:	8003      	strh	r3, [r0, #0]
 8018dec:	8043      	strh	r3, [r0, #2]
 8018dee:	8083      	strh	r3, [r0, #4]
 8018df0:	e7d8      	b.n	8018da4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8018df2:	bf00      	nop
 8018df4:	20012fb4 	.word	0x20012fb4
 8018df8:	20012fbc 	.word	0x20012fbc
 8018dfc:	20012fb8 	.word	0x20012fb8
 8018e00:	20012f9c 	.word	0x20012f9c
 8018e04:	20012f20 	.word	0x20012f20
 8018e08:	20012f22 	.word	0x20012f22

08018e0c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8018e0c:	4a17      	ldr	r2, [pc, #92]	; (8018e6c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8018e0e:	8803      	ldrh	r3, [r0, #0]
 8018e10:	8812      	ldrh	r2, [r2, #0]
 8018e12:	4293      	cmp	r3, r2
 8018e14:	d213      	bcs.n	8018e3e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8018e16:	4a16      	ldr	r2, [pc, #88]	; (8018e70 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8018e18:	6812      	ldr	r2, [r2, #0]
 8018e1a:	2114      	movs	r1, #20
 8018e1c:	fb01 2303 	mla	r3, r1, r3, r2
 8018e20:	8a1a      	ldrh	r2, [r3, #16]
 8018e22:	8919      	ldrh	r1, [r3, #8]
 8018e24:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8018e28:	428a      	cmp	r2, r1
 8018e2a:	db1d      	blt.n	8018e68 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018e2c:	8a58      	ldrh	r0, [r3, #18]
 8018e2e:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8018e32:	895b      	ldrh	r3, [r3, #10]
 8018e34:	4298      	cmp	r0, r3
 8018e36:	bfac      	ite	ge
 8018e38:	2000      	movge	r0, #0
 8018e3a:	2001      	movlt	r0, #1
 8018e3c:	4770      	bx	lr
 8018e3e:	490d      	ldr	r1, [pc, #52]	; (8018e74 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8018e40:	8809      	ldrh	r1, [r1, #0]
 8018e42:	4411      	add	r1, r2
 8018e44:	428b      	cmp	r3, r1
 8018e46:	da0d      	bge.n	8018e64 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8018e48:	1a9b      	subs	r3, r3, r2
 8018e4a:	4a0b      	ldr	r2, [pc, #44]	; (8018e78 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8018e4c:	6812      	ldr	r2, [r2, #0]
 8018e4e:	210e      	movs	r1, #14
 8018e50:	fb01 2303 	mla	r3, r1, r3, r2
 8018e54:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8018e58:	891a      	ldrh	r2, [r3, #8]
 8018e5a:	4291      	cmp	r1, r2
 8018e5c:	db04      	blt.n	8018e68 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018e5e:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8018e62:	e7e6      	b.n	8018e32 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8018e64:	2000      	movs	r0, #0
 8018e66:	4770      	bx	lr
 8018e68:	2001      	movs	r0, #1
 8018e6a:	4770      	bx	lr
 8018e6c:	20012fb4 	.word	0x20012fb4
 8018e70:	20012fbc 	.word	0x20012fbc
 8018e74:	20012fb8 	.word	0x20012fb8
 8018e78:	20012f9c 	.word	0x20012f9c

08018e7c <_ZNK8touchgfx6Bitmap7getDataEv>:
 8018e7c:	4a12      	ldr	r2, [pc, #72]	; (8018ec8 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8018e7e:	8803      	ldrh	r3, [r0, #0]
 8018e80:	8811      	ldrh	r1, [r2, #0]
 8018e82:	428b      	cmp	r3, r1
 8018e84:	d20b      	bcs.n	8018e9e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8018e86:	4a11      	ldr	r2, [pc, #68]	; (8018ecc <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8018e88:	6812      	ldr	r2, [r2, #0]
 8018e8a:	b112      	cbz	r2, 8018e92 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8018e8c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018e90:	b9c0      	cbnz	r0, 8018ec4 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8018e92:	4a0f      	ldr	r2, [pc, #60]	; (8018ed0 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8018e94:	6811      	ldr	r1, [r2, #0]
 8018e96:	2214      	movs	r2, #20
 8018e98:	4353      	muls	r3, r2
 8018e9a:	58c8      	ldr	r0, [r1, r3]
 8018e9c:	4770      	bx	lr
 8018e9e:	4a0d      	ldr	r2, [pc, #52]	; (8018ed4 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8018ea0:	8812      	ldrh	r2, [r2, #0]
 8018ea2:	440a      	add	r2, r1
 8018ea4:	4293      	cmp	r3, r2
 8018ea6:	da04      	bge.n	8018eb2 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8018ea8:	4a08      	ldr	r2, [pc, #32]	; (8018ecc <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8018eaa:	6812      	ldr	r2, [r2, #0]
 8018eac:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018eb0:	4770      	bx	lr
 8018eb2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018eb6:	4293      	cmp	r3, r2
 8018eb8:	d103      	bne.n	8018ec2 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8018eba:	4b07      	ldr	r3, [pc, #28]	; (8018ed8 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8018ebc:	681b      	ldr	r3, [r3, #0]
 8018ebe:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8018ec0:	4770      	bx	lr
 8018ec2:	2000      	movs	r0, #0
 8018ec4:	4770      	bx	lr
 8018ec6:	bf00      	nop
 8018ec8:	20012fb4 	.word	0x20012fb4
 8018ecc:	20012f98 	.word	0x20012f98
 8018ed0:	20012fbc 	.word	0x20012fbc
 8018ed4:	20012fb8 	.word	0x20012fb8
 8018ed8:	20012f2c 	.word	0x20012f2c

08018edc <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8018edc:	4b24      	ldr	r3, [pc, #144]	; (8018f70 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8018ede:	8802      	ldrh	r2, [r0, #0]
 8018ee0:	8818      	ldrh	r0, [r3, #0]
 8018ee2:	4282      	cmp	r2, r0
 8018ee4:	d221      	bcs.n	8018f2a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8018ee6:	4b23      	ldr	r3, [pc, #140]	; (8018f74 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8018ee8:	6819      	ldr	r1, [r3, #0]
 8018eea:	2314      	movs	r3, #20
 8018eec:	fb03 1302 	mla	r3, r3, r2, r1
 8018ef0:	6858      	ldr	r0, [r3, #4]
 8018ef2:	2800      	cmp	r0, #0
 8018ef4:	d03a      	beq.n	8018f6c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018ef6:	4920      	ldr	r1, [pc, #128]	; (8018f78 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8018ef8:	6809      	ldr	r1, [r1, #0]
 8018efa:	2900      	cmp	r1, #0
 8018efc:	d036      	beq.n	8018f6c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018efe:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8018f02:	2900      	cmp	r1, #0
 8018f04:	d032      	beq.n	8018f6c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018f06:	891a      	ldrh	r2, [r3, #8]
 8018f08:	8958      	ldrh	r0, [r3, #10]
 8018f0a:	4350      	muls	r0, r2
 8018f0c:	7c5a      	ldrb	r2, [r3, #17]
 8018f0e:	7cdb      	ldrb	r3, [r3, #19]
 8018f10:	0952      	lsrs	r2, r2, #5
 8018f12:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8018f16:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8018f1a:	2b0b      	cmp	r3, #11
 8018f1c:	bf18      	it	ne
 8018f1e:	0040      	lslne	r0, r0, #1
 8018f20:	3003      	adds	r0, #3
 8018f22:	f020 0003 	bic.w	r0, r0, #3
 8018f26:	4408      	add	r0, r1
 8018f28:	4770      	bx	lr
 8018f2a:	4b14      	ldr	r3, [pc, #80]	; (8018f7c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8018f2c:	881b      	ldrh	r3, [r3, #0]
 8018f2e:	4403      	add	r3, r0
 8018f30:	429a      	cmp	r2, r3
 8018f32:	da1a      	bge.n	8018f6a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8018f34:	4b12      	ldr	r3, [pc, #72]	; (8018f80 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8018f36:	681b      	ldr	r3, [r3, #0]
 8018f38:	1a10      	subs	r0, r2, r0
 8018f3a:	210e      	movs	r1, #14
 8018f3c:	fb01 3000 	mla	r0, r1, r0, r3
 8018f40:	7b03      	ldrb	r3, [r0, #12]
 8018f42:	f003 031f 	and.w	r3, r3, #31
 8018f46:	2b0b      	cmp	r3, #11
 8018f48:	d10b      	bne.n	8018f62 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8018f4a:	8903      	ldrh	r3, [r0, #8]
 8018f4c:	8940      	ldrh	r0, [r0, #10]
 8018f4e:	4358      	muls	r0, r3
 8018f50:	4b09      	ldr	r3, [pc, #36]	; (8018f78 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8018f52:	6819      	ldr	r1, [r3, #0]
 8018f54:	3003      	adds	r0, #3
 8018f56:	f020 0303 	bic.w	r3, r0, #3
 8018f5a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8018f5e:	4418      	add	r0, r3
 8018f60:	4770      	bx	lr
 8018f62:	2b0d      	cmp	r3, #13
 8018f64:	d101      	bne.n	8018f6a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8018f66:	300d      	adds	r0, #13
 8018f68:	4770      	bx	lr
 8018f6a:	2000      	movs	r0, #0
 8018f6c:	4770      	bx	lr
 8018f6e:	bf00      	nop
 8018f70:	20012fb4 	.word	0x20012fb4
 8018f74:	20012fbc 	.word	0x20012fbc
 8018f78:	20012f98 	.word	0x20012f98
 8018f7c:	20012fb8 	.word	0x20012fb8
 8018f80:	20012f9c 	.word	0x20012f9c

08018f84 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8018f84:	b510      	push	{r4, lr}
 8018f86:	4a17      	ldr	r2, [pc, #92]	; (8018fe4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8018f88:	8803      	ldrh	r3, [r0, #0]
 8018f8a:	8812      	ldrh	r2, [r2, #0]
 8018f8c:	4293      	cmp	r3, r2
 8018f8e:	d20c      	bcs.n	8018faa <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8018f90:	4a15      	ldr	r2, [pc, #84]	; (8018fe8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8018f92:	6812      	ldr	r2, [r2, #0]
 8018f94:	2114      	movs	r1, #20
 8018f96:	fb01 2303 	mla	r3, r1, r3, r2
 8018f9a:	7c58      	ldrb	r0, [r3, #17]
 8018f9c:	0942      	lsrs	r2, r0, #5
 8018f9e:	7cd8      	ldrb	r0, [r3, #19]
 8018fa0:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8018fa4:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8018fa8:	bd10      	pop	{r4, pc}
 8018faa:	4910      	ldr	r1, [pc, #64]	; (8018fec <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8018fac:	8809      	ldrh	r1, [r1, #0]
 8018fae:	4411      	add	r1, r2
 8018fb0:	428b      	cmp	r3, r1
 8018fb2:	da09      	bge.n	8018fc8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8018fb4:	1a9b      	subs	r3, r3, r2
 8018fb6:	4a0e      	ldr	r2, [pc, #56]	; (8018ff0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8018fb8:	6812      	ldr	r2, [r2, #0]
 8018fba:	210e      	movs	r1, #14
 8018fbc:	fb01 2303 	mla	r3, r1, r3, r2
 8018fc0:	7b18      	ldrb	r0, [r3, #12]
 8018fc2:	f000 001f 	and.w	r0, r0, #31
 8018fc6:	e7ef      	b.n	8018fa8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8018fc8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018fcc:	4293      	cmp	r3, r2
 8018fce:	d106      	bne.n	8018fde <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8018fd0:	f7ea fd06 	bl	80039e0 <_ZN8touchgfx3HAL3lcdEv>
 8018fd4:	6803      	ldr	r3, [r0, #0]
 8018fd6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018fda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018fdc:	4718      	bx	r3
 8018fde:	2000      	movs	r0, #0
 8018fe0:	e7e2      	b.n	8018fa8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8018fe2:	bf00      	nop
 8018fe4:	20012fb4 	.word	0x20012fb4
 8018fe8:	20012fbc 	.word	0x20012fbc
 8018fec:	20012fb8 	.word	0x20012fb8
 8018ff0:	20012f9c 	.word	0x20012f9c

08018ff4 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8018ff4:	2010      	movs	r0, #16
 8018ff6:	4770      	bx	lr

08018ff8 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8018ff8:	2000      	movs	r0, #0
 8018ffa:	4770      	bx	lr

08018ffc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8018ffc:	4b02      	ldr	r3, [pc, #8]	; (8019008 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8018ffe:	8818      	ldrh	r0, [r3, #0]
 8019000:	0040      	lsls	r0, r0, #1
 8019002:	b280      	uxth	r0, r0
 8019004:	4770      	bx	lr
 8019006:	bf00      	nop
 8019008:	20012f26 	.word	0x20012f26

0801900c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801900c:	2bff      	cmp	r3, #255	; 0xff
 801900e:	d050      	beq.n	80190b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8019010:	2a0b      	cmp	r2, #11
 8019012:	d04a      	beq.n	80190aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8019014:	d80e      	bhi.n	8019034 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8019016:	2a03      	cmp	r2, #3
 8019018:	d03f      	beq.n	801909a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801901a:	d804      	bhi.n	8019026 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801901c:	2a01      	cmp	r2, #1
 801901e:	d03e      	beq.n	801909e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8019020:	d93f      	bls.n	80190a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8019022:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8019024:	4770      	bx	lr
 8019026:	2a09      	cmp	r2, #9
 8019028:	d03f      	beq.n	80190aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801902a:	d83c      	bhi.n	80190a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801902c:	2a08      	cmp	r2, #8
 801902e:	d03a      	beq.n	80190a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8019030:	2000      	movs	r0, #0
 8019032:	4770      	bx	lr
 8019034:	2a2f      	cmp	r2, #47	; 0x2f
 8019036:	d024      	beq.n	8019082 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8019038:	d80d      	bhi.n	8019056 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801903a:	2a2d      	cmp	r2, #45	; 0x2d
 801903c:	d014      	beq.n	8019068 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801903e:	d826      	bhi.n	801908e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8019040:	2a2c      	cmp	r2, #44	; 0x2c
 8019042:	d1f5      	bne.n	8019030 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019044:	684b      	ldr	r3, [r1, #4]
 8019046:	781b      	ldrb	r3, [r3, #0]
 8019048:	2b01      	cmp	r3, #1
 801904a:	d018      	beq.n	801907e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801904c:	d323      	bcc.n	8019096 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801904e:	2b02      	cmp	r3, #2
 8019050:	d1ee      	bne.n	8019030 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019052:	6880      	ldr	r0, [r0, #8]
 8019054:	4770      	bx	lr
 8019056:	2a31      	cmp	r2, #49	; 0x31
 8019058:	d004      	beq.n	8019064 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801905a:	d328      	bcc.n	80190ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801905c:	2a32      	cmp	r2, #50	; 0x32
 801905e:	d026      	beq.n	80190ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8019060:	2a33      	cmp	r2, #51	; 0x33
 8019062:	d1e5      	bne.n	8019030 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019064:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8019066:	4770      	bx	lr
 8019068:	684b      	ldr	r3, [r1, #4]
 801906a:	781b      	ldrb	r3, [r3, #0]
 801906c:	2b01      	cmp	r3, #1
 801906e:	d004      	beq.n	801907a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8019070:	d30b      	bcc.n	801908a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019072:	2b02      	cmp	r3, #2
 8019074:	d1dc      	bne.n	8019030 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019076:	6900      	ldr	r0, [r0, #16]
 8019078:	4770      	bx	lr
 801907a:	6a00      	ldr	r0, [r0, #32]
 801907c:	4770      	bx	lr
 801907e:	6980      	ldr	r0, [r0, #24]
 8019080:	4770      	bx	lr
 8019082:	684b      	ldr	r3, [r1, #4]
 8019084:	781b      	ldrb	r3, [r3, #0]
 8019086:	2b00      	cmp	r3, #0
 8019088:	d1d2      	bne.n	8019030 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801908a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801908c:	4770      	bx	lr
 801908e:	684b      	ldr	r3, [r1, #4]
 8019090:	781b      	ldrb	r3, [r3, #0]
 8019092:	2b00      	cmp	r3, #0
 8019094:	d1cc      	bne.n	8019030 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019096:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8019098:	4770      	bx	lr
 801909a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801909c:	4770      	bx	lr
 801909e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80190a0:	4770      	bx	lr
 80190a2:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80190a4:	4770      	bx	lr
 80190a6:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80190a8:	4770      	bx	lr
 80190aa:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80190ac:	4770      	bx	lr
 80190ae:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80190b0:	4770      	bx	lr
 80190b2:	2a0b      	cmp	r2, #11
 80190b4:	d049      	beq.n	801914a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80190b6:	d80e      	bhi.n	80190d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80190b8:	2a03      	cmp	r2, #3
 80190ba:	d040      	beq.n	801913e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80190bc:	d804      	bhi.n	80190c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80190be:	2a01      	cmp	r2, #1
 80190c0:	d03f      	beq.n	8019142 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80190c2:	d940      	bls.n	8019146 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80190c4:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80190c6:	4770      	bx	lr
 80190c8:	2a09      	cmp	r2, #9
 80190ca:	d03e      	beq.n	801914a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80190cc:	d801      	bhi.n	80190d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80190ce:	2a08      	cmp	r2, #8
 80190d0:	d1ae      	bne.n	8019030 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80190d2:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80190d4:	4770      	bx	lr
 80190d6:	2a2f      	cmp	r2, #47	; 0x2f
 80190d8:	d024      	beq.n	8019124 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80190da:	d80d      	bhi.n	80190f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80190dc:	2a2d      	cmp	r2, #45	; 0x2d
 80190de:	d014      	beq.n	801910a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80190e0:	d826      	bhi.n	8019130 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80190e2:	2a2c      	cmp	r2, #44	; 0x2c
 80190e4:	d1a4      	bne.n	8019030 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80190e6:	684b      	ldr	r3, [r1, #4]
 80190e8:	781b      	ldrb	r3, [r3, #0]
 80190ea:	2b01      	cmp	r3, #1
 80190ec:	d018      	beq.n	8019120 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 80190ee:	d324      	bcc.n	801913a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 80190f0:	2b02      	cmp	r3, #2
 80190f2:	d19d      	bne.n	8019030 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80190f4:	68c0      	ldr	r0, [r0, #12]
 80190f6:	4770      	bx	lr
 80190f8:	2a31      	cmp	r2, #49	; 0x31
 80190fa:	d004      	beq.n	8019106 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 80190fc:	d327      	bcc.n	801914e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80190fe:	2a32      	cmp	r2, #50	; 0x32
 8019100:	d025      	beq.n	801914e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019102:	2a33      	cmp	r2, #51	; 0x33
 8019104:	d194      	bne.n	8019030 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019106:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8019108:	4770      	bx	lr
 801910a:	684b      	ldr	r3, [r1, #4]
 801910c:	781b      	ldrb	r3, [r3, #0]
 801910e:	2b01      	cmp	r3, #1
 8019110:	d004      	beq.n	801911c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8019112:	d30b      	bcc.n	801912c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8019114:	2b02      	cmp	r3, #2
 8019116:	d18b      	bne.n	8019030 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019118:	6940      	ldr	r0, [r0, #20]
 801911a:	4770      	bx	lr
 801911c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801911e:	4770      	bx	lr
 8019120:	69c0      	ldr	r0, [r0, #28]
 8019122:	4770      	bx	lr
 8019124:	684b      	ldr	r3, [r1, #4]
 8019126:	781b      	ldrb	r3, [r3, #0]
 8019128:	2b00      	cmp	r3, #0
 801912a:	d181      	bne.n	8019030 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801912c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801912e:	4770      	bx	lr
 8019130:	684b      	ldr	r3, [r1, #4]
 8019132:	781b      	ldrb	r3, [r3, #0]
 8019134:	2b00      	cmp	r3, #0
 8019136:	f47f af7b 	bne.w	8019030 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801913a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801913c:	4770      	bx	lr
 801913e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8019140:	4770      	bx	lr
 8019142:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8019144:	4770      	bx	lr
 8019146:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8019148:	4770      	bx	lr
 801914a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801914c:	4770      	bx	lr
 801914e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8019150:	4770      	bx	lr

08019152 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019152:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019156:	b087      	sub	sp, #28
 8019158:	9815      	ldr	r0, [sp, #84]	; 0x54
 801915a:	9205      	str	r2, [sp, #20]
 801915c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019160:	9202      	str	r2, [sp, #8]
 8019162:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019166:	9101      	str	r1, [sp, #4]
 8019168:	6841      	ldr	r1, [r0, #4]
 801916a:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801916e:	fb01 2404 	mla	r4, r1, r4, r2
 8019172:	6802      	ldr	r2, [r0, #0]
 8019174:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019178:	f8de 2000 	ldr.w	r2, [lr]
 801917c:	9203      	str	r2, [sp, #12]
 801917e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019182:	3204      	adds	r2, #4
 8019184:	9204      	str	r2, [sp, #16]
 8019186:	9a02      	ldr	r2, [sp, #8]
 8019188:	43d6      	mvns	r6, r2
 801918a:	b2f6      	uxtb	r6, r6
 801918c:	9a01      	ldr	r2, [sp, #4]
 801918e:	2a00      	cmp	r2, #0
 8019190:	dc03      	bgt.n	801919a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019192:	9a05      	ldr	r2, [sp, #20]
 8019194:	2a00      	cmp	r2, #0
 8019196:	f340 8129 	ble.w	80193ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801919a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801919c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80191a0:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80191a4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80191a8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80191aa:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80191ae:	2b00      	cmp	r3, #0
 80191b0:	dd0e      	ble.n	80191d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80191b2:	1408      	asrs	r0, r1, #16
 80191b4:	d405      	bmi.n	80191c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80191b6:	4560      	cmp	r0, ip
 80191b8:	da03      	bge.n	80191c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80191ba:	1410      	asrs	r0, r2, #16
 80191bc:	d401      	bmi.n	80191c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80191be:	42b8      	cmp	r0, r7
 80191c0:	db07      	blt.n	80191d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80191c2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80191c4:	4401      	add	r1, r0
 80191c6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80191c8:	3b01      	subs	r3, #1
 80191ca:	4402      	add	r2, r0
 80191cc:	3402      	adds	r4, #2
 80191ce:	e7ee      	b.n	80191ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80191d0:	d071      	beq.n	80192b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80191d2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80191d4:	1e58      	subs	r0, r3, #1
 80191d6:	fb05 1500 	mla	r5, r5, r0, r1
 80191da:	142d      	asrs	r5, r5, #16
 80191dc:	d45f      	bmi.n	801929e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80191de:	4565      	cmp	r5, ip
 80191e0:	da5d      	bge.n	801929e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80191e2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80191e4:	fb05 2000 	mla	r0, r5, r0, r2
 80191e8:	1400      	asrs	r0, r0, #16
 80191ea:	d458      	bmi.n	801929e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80191ec:	42b8      	cmp	r0, r7
 80191ee:	da56      	bge.n	801929e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80191f0:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80191f4:	4699      	mov	r9, r3
 80191f6:	46a2      	mov	sl, r4
 80191f8:	f1b9 0f00 	cmp.w	r9, #0
 80191fc:	dd57      	ble.n	80192ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80191fe:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019202:	9803      	ldr	r0, [sp, #12]
 8019204:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8019208:	140d      	asrs	r5, r1, #16
 801920a:	fb07 000c 	mla	r0, r7, ip, r0
 801920e:	f109 39ff 	add.w	r9, r9, #4294967295
 8019212:	5d40      	ldrb	r0, [r0, r5]
 8019214:	9d04      	ldr	r5, [sp, #16]
 8019216:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801921a:	f8ba 5000 	ldrh.w	r5, [sl]
 801921e:	122f      	asrs	r7, r5, #8
 8019220:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019224:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019228:	fb17 f706 	smulbb	r7, r7, r6
 801922c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019230:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019234:	00ed      	lsls	r5, r5, #3
 8019236:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801923a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801923e:	10c7      	asrs	r7, r0, #3
 8019240:	b2ed      	uxtb	r5, r5
 8019242:	00c0      	lsls	r0, r0, #3
 8019244:	fb18 f806 	smulbb	r8, r8, r6
 8019248:	fb15 f506 	smulbb	r5, r5, r6
 801924c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019250:	b2c0      	uxtb	r0, r0
 8019252:	fa1f fc8c 	uxth.w	ip, ip
 8019256:	fb07 870b 	mla	r7, r7, fp, r8
 801925a:	fb00 500b 	mla	r0, r0, fp, r5
 801925e:	b280      	uxth	r0, r0
 8019260:	b2bf      	uxth	r7, r7
 8019262:	f10c 0501 	add.w	r5, ip, #1
 8019266:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801926a:	f107 0801 	add.w	r8, r7, #1
 801926e:	1c45      	adds	r5, r0, #1
 8019270:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019274:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019278:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801927a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801927e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019282:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019286:	ea45 0c0c 	orr.w	ip, r5, ip
 801928a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801928e:	4401      	add	r1, r0
 8019290:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019292:	ea4c 0c08 	orr.w	ip, ip, r8
 8019296:	f82a cb02 	strh.w	ip, [sl], #2
 801929a:	4402      	add	r2, r0
 801929c:	e7ac      	b.n	80191f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801929e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80192a2:	f04f 0800 	mov.w	r8, #0
 80192a6:	eb03 0008 	add.w	r0, r3, r8
 80192aa:	2800      	cmp	r0, #0
 80192ac:	dc41      	bgt.n	8019332 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80192ae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80192b2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80192b6:	9b01      	ldr	r3, [sp, #4]
 80192b8:	2b00      	cmp	r3, #0
 80192ba:	f340 8097 	ble.w	80193ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80192be:	ee30 0a04 	vadd.f32	s0, s0, s8
 80192c2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80192c6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80192ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80192cc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80192d0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80192d4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80192d8:	eef0 6a62 	vmov.f32	s13, s5
 80192dc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80192e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80192e4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80192e8:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80192ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80192f0:	eef0 6a43 	vmov.f32	s13, s6
 80192f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80192f8:	ee12 2a90 	vmov	r2, s5
 80192fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019300:	fb92 f3f3 	sdiv	r3, r2, r3
 8019304:	ee13 2a10 	vmov	r2, s6
 8019308:	9313      	str	r3, [sp, #76]	; 0x4c
 801930a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801930c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019310:	9314      	str	r3, [sp, #80]	; 0x50
 8019312:	9b01      	ldr	r3, [sp, #4]
 8019314:	9a05      	ldr	r2, [sp, #20]
 8019316:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801931a:	3b01      	subs	r3, #1
 801931c:	9301      	str	r3, [sp, #4]
 801931e:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019322:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019324:	eeb0 3a67 	vmov.f32	s6, s15
 8019328:	bf08      	it	eq
 801932a:	4613      	moveq	r3, r2
 801932c:	eef0 2a47 	vmov.f32	s5, s14
 8019330:	e72c      	b.n	801918c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019332:	140f      	asrs	r7, r1, #16
 8019334:	d453      	bmi.n	80193de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019336:	f8de 5008 	ldr.w	r5, [lr, #8]
 801933a:	42bd      	cmp	r5, r7
 801933c:	dd4f      	ble.n	80193de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801933e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019342:	d44c      	bmi.n	80193de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019344:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019348:	4560      	cmp	r0, ip
 801934a:	dd48      	ble.n	80193de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801934c:	9803      	ldr	r0, [sp, #12]
 801934e:	b22d      	sxth	r5, r5
 8019350:	fb0c 0505 	mla	r5, ip, r5, r0
 8019354:	5de8      	ldrb	r0, [r5, r7]
 8019356:	9d04      	ldr	r5, [sp, #16]
 8019358:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801935c:	f06f 0501 	mvn.w	r5, #1
 8019360:	fb05 fb08 	mul.w	fp, r5, r8
 8019364:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019368:	f834 500b 	ldrh.w	r5, [r4, fp]
 801936c:	122f      	asrs	r7, r5, #8
 801936e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019372:	fb17 f706 	smulbb	r7, r7, r6
 8019376:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801937a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801937e:	00ed      	lsls	r5, r5, #3
 8019380:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019384:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019388:	10c7      	asrs	r7, r0, #3
 801938a:	b2ed      	uxtb	r5, r5
 801938c:	00c0      	lsls	r0, r0, #3
 801938e:	fb19 f906 	smulbb	r9, r9, r6
 8019392:	fb15 f506 	smulbb	r5, r5, r6
 8019396:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801939a:	b2c0      	uxtb	r0, r0
 801939c:	fa1f fc8c 	uxth.w	ip, ip
 80193a0:	fb07 970a 	mla	r7, r7, sl, r9
 80193a4:	fb00 500a 	mla	r0, r0, sl, r5
 80193a8:	b2bf      	uxth	r7, r7
 80193aa:	b280      	uxth	r0, r0
 80193ac:	f10c 0501 	add.w	r5, ip, #1
 80193b0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80193b4:	f107 0901 	add.w	r9, r7, #1
 80193b8:	1c45      	adds	r5, r0, #1
 80193ba:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80193be:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80193c2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80193c6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80193ca:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80193ce:	ea45 0c0c 	orr.w	ip, r5, ip
 80193d2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80193d6:	ea4c 0c09 	orr.w	ip, ip, r9
 80193da:	f824 c00b 	strh.w	ip, [r4, fp]
 80193de:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80193e0:	4401      	add	r1, r0
 80193e2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80193e4:	f108 38ff 	add.w	r8, r8, #4294967295
 80193e8:	4402      	add	r2, r0
 80193ea:	e75c      	b.n	80192a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80193ec:	b007      	add	sp, #28
 80193ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080193f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80193f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193f6:	b085      	sub	sp, #20
 80193f8:	4693      	mov	fp, r2
 80193fa:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80193fc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80193fe:	6870      	ldr	r0, [r6, #4]
 8019400:	9100      	str	r1, [sp, #0]
 8019402:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019406:	fb00 2404 	mla	r4, r0, r4, r2
 801940a:	6832      	ldr	r2, [r6, #0]
 801940c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019410:	682a      	ldr	r2, [r5, #0]
 8019412:	9201      	str	r2, [sp, #4]
 8019414:	686a      	ldr	r2, [r5, #4]
 8019416:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801941a:	3204      	adds	r2, #4
 801941c:	9202      	str	r2, [sp, #8]
 801941e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019422:	9a00      	ldr	r2, [sp, #0]
 8019424:	2a00      	cmp	r2, #0
 8019426:	dc03      	bgt.n	8019430 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019428:	f1bb 0f00 	cmp.w	fp, #0
 801942c:	f340 80a0 	ble.w	8019570 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019430:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019432:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019436:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801943a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801943e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019440:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019444:	2b00      	cmp	r3, #0
 8019446:	dd0c      	ble.n	8019462 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019448:	1406      	asrs	r6, r0, #16
 801944a:	d405      	bmi.n	8019458 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801944c:	454e      	cmp	r6, r9
 801944e:	da03      	bge.n	8019458 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019450:	1416      	asrs	r6, r2, #16
 8019452:	d401      	bmi.n	8019458 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019454:	4546      	cmp	r6, r8
 8019456:	db05      	blt.n	8019464 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019458:	4470      	add	r0, lr
 801945a:	4462      	add	r2, ip
 801945c:	3b01      	subs	r3, #1
 801945e:	3402      	adds	r4, #2
 8019460:	e7f0      	b.n	8019444 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019462:	d00f      	beq.n	8019484 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019464:	1e5e      	subs	r6, r3, #1
 8019466:	fb0e 0706 	mla	r7, lr, r6, r0
 801946a:	143f      	asrs	r7, r7, #16
 801946c:	d541      	bpl.n	80194f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801946e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019472:	4698      	mov	r8, r3
 8019474:	9603      	str	r6, [sp, #12]
 8019476:	f1b8 0f00 	cmp.w	r8, #0
 801947a:	dc59      	bgt.n	8019530 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801947c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019480:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019484:	9b00      	ldr	r3, [sp, #0]
 8019486:	2b00      	cmp	r3, #0
 8019488:	dd72      	ble.n	8019570 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801948a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801948e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019492:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019496:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019498:	ee31 1a05 	vadd.f32	s2, s2, s10
 801949c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80194a0:	eeb0 6a62 	vmov.f32	s12, s5
 80194a4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80194a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80194ac:	ee77 2a62 	vsub.f32	s5, s14, s5
 80194b0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80194b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80194b8:	eeb0 6a43 	vmov.f32	s12, s6
 80194bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80194c0:	ee12 2a90 	vmov	r2, s5
 80194c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80194c8:	fb92 fef3 	sdiv	lr, r2, r3
 80194cc:	ee13 2a10 	vmov	r2, s6
 80194d0:	fb92 fcf3 	sdiv	ip, r2, r3
 80194d4:	9b00      	ldr	r3, [sp, #0]
 80194d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80194da:	3b01      	subs	r3, #1
 80194dc:	9300      	str	r3, [sp, #0]
 80194de:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80194e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80194e4:	eeb0 3a67 	vmov.f32	s6, s15
 80194e8:	bf08      	it	eq
 80194ea:	465b      	moveq	r3, fp
 80194ec:	eef0 2a47 	vmov.f32	s5, s14
 80194f0:	e797      	b.n	8019422 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80194f2:	454f      	cmp	r7, r9
 80194f4:	dabb      	bge.n	801946e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80194f6:	fb0c 2606 	mla	r6, ip, r6, r2
 80194fa:	1436      	asrs	r6, r6, #16
 80194fc:	d4b7      	bmi.n	801946e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80194fe:	4546      	cmp	r6, r8
 8019500:	dab5      	bge.n	801946e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019502:	461e      	mov	r6, r3
 8019504:	46a0      	mov	r8, r4
 8019506:	2e00      	cmp	r6, #0
 8019508:	ddb8      	ble.n	801947c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801950a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801950e:	9901      	ldr	r1, [sp, #4]
 8019510:	1417      	asrs	r7, r2, #16
 8019512:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019516:	fb0a 1707 	mla	r7, sl, r7, r1
 801951a:	9902      	ldr	r1, [sp, #8]
 801951c:	f817 7009 	ldrb.w	r7, [r7, r9]
 8019520:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019524:	f828 7b02 	strh.w	r7, [r8], #2
 8019528:	4470      	add	r0, lr
 801952a:	4462      	add	r2, ip
 801952c:	3e01      	subs	r6, #1
 801952e:	e7ea      	b.n	8019506 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8019530:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019534:	d417      	bmi.n	8019566 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019536:	68ae      	ldr	r6, [r5, #8]
 8019538:	454e      	cmp	r6, r9
 801953a:	dd14      	ble.n	8019566 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801953c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019540:	d411      	bmi.n	8019566 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019542:	68ef      	ldr	r7, [r5, #12]
 8019544:	4557      	cmp	r7, sl
 8019546:	dd0e      	ble.n	8019566 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019548:	9f01      	ldr	r7, [sp, #4]
 801954a:	b236      	sxth	r6, r6
 801954c:	fb0a 7606 	mla	r6, sl, r6, r7
 8019550:	9f02      	ldr	r7, [sp, #8]
 8019552:	f816 6009 	ldrb.w	r6, [r6, r9]
 8019556:	f06f 0101 	mvn.w	r1, #1
 801955a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801955e:	fb01 f608 	mul.w	r6, r1, r8
 8019562:	9903      	ldr	r1, [sp, #12]
 8019564:	538f      	strh	r7, [r1, r6]
 8019566:	4470      	add	r0, lr
 8019568:	4462      	add	r2, ip
 801956a:	f108 38ff 	add.w	r8, r8, #4294967295
 801956e:	e782      	b.n	8019476 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019570:	b005      	add	sp, #20
 8019572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019576 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019576:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801957a:	b087      	sub	sp, #28
 801957c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801957e:	9205      	str	r2, [sp, #20]
 8019580:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019584:	9203      	str	r2, [sp, #12]
 8019586:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801958a:	9102      	str	r1, [sp, #8]
 801958c:	6861      	ldr	r1, [r4, #4]
 801958e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8019592:	fb01 2000 	mla	r0, r1, r0, r2
 8019596:	6822      	ldr	r2, [r4, #0]
 8019598:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801959c:	9200      	str	r2, [sp, #0]
 801959e:	f8dc 2000 	ldr.w	r2, [ip]
 80195a2:	9204      	str	r2, [sp, #16]
 80195a4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80195a8:	3204      	adds	r2, #4
 80195aa:	9201      	str	r2, [sp, #4]
 80195ac:	9a03      	ldr	r2, [sp, #12]
 80195ae:	43d5      	mvns	r5, r2
 80195b0:	b2ed      	uxtb	r5, r5
 80195b2:	9a02      	ldr	r2, [sp, #8]
 80195b4:	2a00      	cmp	r2, #0
 80195b6:	dc03      	bgt.n	80195c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80195b8:	9a05      	ldr	r2, [sp, #20]
 80195ba:	2a00      	cmp	r2, #0
 80195bc:	f340 812c 	ble.w	8019818 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80195c0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80195c2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80195c6:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80195ca:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80195ce:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80195d0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80195d4:	2b00      	cmp	r3, #0
 80195d6:	dd10      	ble.n	80195fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80195d8:	140c      	asrs	r4, r1, #16
 80195da:	d405      	bmi.n	80195e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80195dc:	4574      	cmp	r4, lr
 80195de:	da03      	bge.n	80195e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80195e0:	1414      	asrs	r4, r2, #16
 80195e2:	d401      	bmi.n	80195e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80195e4:	42bc      	cmp	r4, r7
 80195e6:	db09      	blt.n	80195fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80195e8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80195ea:	9800      	ldr	r0, [sp, #0]
 80195ec:	4421      	add	r1, r4
 80195ee:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80195f0:	3002      	adds	r0, #2
 80195f2:	4422      	add	r2, r4
 80195f4:	3b01      	subs	r3, #1
 80195f6:	9000      	str	r0, [sp, #0]
 80195f8:	e7ec      	b.n	80195d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80195fa:	d071      	beq.n	80196e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80195fc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80195fe:	1e5c      	subs	r4, r3, #1
 8019600:	fb06 1604 	mla	r6, r6, r4, r1
 8019604:	1436      	asrs	r6, r6, #16
 8019606:	d45d      	bmi.n	80196c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019608:	4576      	cmp	r6, lr
 801960a:	da5b      	bge.n	80196c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801960c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801960e:	fb06 2404 	mla	r4, r6, r4, r2
 8019612:	1424      	asrs	r4, r4, #16
 8019614:	d456      	bmi.n	80196c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019616:	42bc      	cmp	r4, r7
 8019618:	da54      	bge.n	80196c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801961a:	f8dd 9000 	ldr.w	r9, [sp]
 801961e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8019622:	4698      	mov	r8, r3
 8019624:	f1b8 0f00 	cmp.w	r8, #0
 8019628:	dd54      	ble.n	80196d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801962a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801962e:	9804      	ldr	r0, [sp, #16]
 8019630:	1414      	asrs	r4, r2, #16
 8019632:	fb07 0404 	mla	r4, r7, r4, r0
 8019636:	140e      	asrs	r6, r1, #16
 8019638:	9801      	ldr	r0, [sp, #4]
 801963a:	f814 e006 	ldrb.w	lr, [r4, r6]
 801963e:	f8b9 4000 	ldrh.w	r4, [r9]
 8019642:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019646:	eb00 0b0e 	add.w	fp, r0, lr
 801964a:	1227      	asrs	r7, r4, #8
 801964c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019650:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019654:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8019658:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801965a:	fb16 f60a 	smulbb	r6, r6, sl
 801965e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019662:	fb07 6705 	mla	r7, r7, r5, r6
 8019666:	10e6      	asrs	r6, r4, #3
 8019668:	00e4      	lsls	r4, r4, #3
 801966a:	b2e4      	uxtb	r4, r4
 801966c:	fb1b fb0a 	smulbb	fp, fp, sl
 8019670:	fb14 f405 	smulbb	r4, r4, r5
 8019674:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019678:	b2bf      	uxth	r7, r7
 801967a:	fb06 b605 	mla	r6, r6, r5, fp
 801967e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8019682:	b2b6      	uxth	r6, r6
 8019684:	fa1f fe8e 	uxth.w	lr, lr
 8019688:	1c7c      	adds	r4, r7, #1
 801968a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801968e:	f106 0b01 	add.w	fp, r6, #1
 8019692:	f10e 0401 	add.w	r4, lr, #1
 8019696:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801969a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801969e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80196a2:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80196a6:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80196aa:	4327      	orrs	r7, r4
 80196ac:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80196b0:	4401      	add	r1, r0
 80196b2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80196b4:	ea47 070b 	orr.w	r7, r7, fp
 80196b8:	f829 7b02 	strh.w	r7, [r9], #2
 80196bc:	4402      	add	r2, r0
 80196be:	f108 38ff 	add.w	r8, r8, #4294967295
 80196c2:	e7af      	b.n	8019624 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80196c4:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80196c8:	f04f 0e00 	mov.w	lr, #0
 80196cc:	eb03 040e 	add.w	r4, r3, lr
 80196d0:	2c00      	cmp	r4, #0
 80196d2:	dc43      	bgt.n	801975c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80196d4:	9a00      	ldr	r2, [sp, #0]
 80196d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80196da:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80196de:	9300      	str	r3, [sp, #0]
 80196e0:	9b02      	ldr	r3, [sp, #8]
 80196e2:	2b00      	cmp	r3, #0
 80196e4:	f340 8098 	ble.w	8019818 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80196e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80196ec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80196f0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80196f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80196f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80196fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80196fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019702:	eef0 6a62 	vmov.f32	s13, s5
 8019706:	ee61 7a27 	vmul.f32	s15, s2, s15
 801970a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801970e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019712:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8019716:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801971a:	eef0 6a43 	vmov.f32	s13, s6
 801971e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019722:	ee12 2a90 	vmov	r2, s5
 8019726:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801972a:	fb92 f3f3 	sdiv	r3, r2, r3
 801972e:	ee13 2a10 	vmov	r2, s6
 8019732:	9313      	str	r3, [sp, #76]	; 0x4c
 8019734:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019736:	fb92 f3f3 	sdiv	r3, r2, r3
 801973a:	9314      	str	r3, [sp, #80]	; 0x50
 801973c:	9b02      	ldr	r3, [sp, #8]
 801973e:	9a05      	ldr	r2, [sp, #20]
 8019740:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019744:	3b01      	subs	r3, #1
 8019746:	9302      	str	r3, [sp, #8]
 8019748:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801974c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801974e:	eeb0 3a67 	vmov.f32	s6, s15
 8019752:	bf08      	it	eq
 8019754:	4613      	moveq	r3, r2
 8019756:	eef0 2a47 	vmov.f32	s5, s14
 801975a:	e72a      	b.n	80195b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801975c:	140f      	asrs	r7, r1, #16
 801975e:	d454      	bmi.n	801980a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019760:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8019764:	42be      	cmp	r6, r7
 8019766:	dd50      	ble.n	801980a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019768:	ea5f 4822 	movs.w	r8, r2, asr #16
 801976c:	d44d      	bmi.n	801980a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801976e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8019772:	4544      	cmp	r4, r8
 8019774:	dd49      	ble.n	801980a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019776:	9c04      	ldr	r4, [sp, #16]
 8019778:	b236      	sxth	r6, r6
 801977a:	fb08 4606 	mla	r6, r8, r6, r4
 801977e:	f06f 0001 	mvn.w	r0, #1
 8019782:	f816 8007 	ldrb.w	r8, [r6, r7]
 8019786:	9c01      	ldr	r4, [sp, #4]
 8019788:	fb00 fa0e 	mul.w	sl, r0, lr
 801978c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8019790:	9800      	ldr	r0, [sp, #0]
 8019792:	eb04 0b08 	add.w	fp, r4, r8
 8019796:	f830 400a 	ldrh.w	r4, [r0, sl]
 801979a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801979e:	9801      	ldr	r0, [sp, #4]
 80197a0:	f89b b001 	ldrb.w	fp, [fp, #1]
 80197a4:	f810 8008 	ldrb.w	r8, [r0, r8]
 80197a8:	9800      	ldr	r0, [sp, #0]
 80197aa:	1227      	asrs	r7, r4, #8
 80197ac:	fb16 f609 	smulbb	r6, r6, r9
 80197b0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80197b4:	fb07 6705 	mla	r7, r7, r5, r6
 80197b8:	10e6      	asrs	r6, r4, #3
 80197ba:	00e4      	lsls	r4, r4, #3
 80197bc:	b2e4      	uxtb	r4, r4
 80197be:	fb1b fb09 	smulbb	fp, fp, r9
 80197c2:	fb14 f405 	smulbb	r4, r4, r5
 80197c6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80197ca:	b2bf      	uxth	r7, r7
 80197cc:	fb06 b605 	mla	r6, r6, r5, fp
 80197d0:	fb08 4809 	mla	r8, r8, r9, r4
 80197d4:	b2b6      	uxth	r6, r6
 80197d6:	fa1f f888 	uxth.w	r8, r8
 80197da:	1c7c      	adds	r4, r7, #1
 80197dc:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80197e0:	f106 0b01 	add.w	fp, r6, #1
 80197e4:	f108 0401 	add.w	r4, r8, #1
 80197e8:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80197ec:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80197f0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80197f4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80197f8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80197fc:	4327      	orrs	r7, r4
 80197fe:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019802:	ea47 070b 	orr.w	r7, r7, fp
 8019806:	f820 700a 	strh.w	r7, [r0, sl]
 801980a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801980c:	4401      	add	r1, r0
 801980e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019810:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019814:	4402      	add	r2, r0
 8019816:	e759      	b.n	80196cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019818:	b007      	add	sp, #28
 801981a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019820 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019824:	b085      	sub	sp, #20
 8019826:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801982a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801982c:	9203      	str	r2, [sp, #12]
 801982e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019832:	6870      	ldr	r0, [r6, #4]
 8019834:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019836:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801983a:	686f      	ldr	r7, [r5, #4]
 801983c:	9101      	str	r1, [sp, #4]
 801983e:	fb00 2404 	mla	r4, r0, r4, r2
 8019842:	6832      	ldr	r2, [r6, #0]
 8019844:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019848:	682a      	ldr	r2, [r5, #0]
 801984a:	9202      	str	r2, [sp, #8]
 801984c:	3704      	adds	r7, #4
 801984e:	9a01      	ldr	r2, [sp, #4]
 8019850:	2a00      	cmp	r2, #0
 8019852:	dc03      	bgt.n	801985c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019854:	9a03      	ldr	r2, [sp, #12]
 8019856:	2a00      	cmp	r2, #0
 8019858:	f340 80cc 	ble.w	80199f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801985c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801985e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019862:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019866:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801986a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801986c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019870:	2b00      	cmp	r3, #0
 8019872:	dd0d      	ble.n	8019890 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019874:	1406      	asrs	r6, r0, #16
 8019876:	d405      	bmi.n	8019884 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019878:	454e      	cmp	r6, r9
 801987a:	da03      	bge.n	8019884 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801987c:	1416      	asrs	r6, r2, #16
 801987e:	d401      	bmi.n	8019884 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019880:	4546      	cmp	r6, r8
 8019882:	db06      	blt.n	8019892 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019884:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8019886:	4460      	add	r0, ip
 8019888:	4432      	add	r2, r6
 801988a:	3b01      	subs	r3, #1
 801988c:	3402      	adds	r4, #2
 801988e:	e7ef      	b.n	8019870 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8019890:	d00f      	beq.n	80198b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019892:	1e5e      	subs	r6, r3, #1
 8019894:	fb0c 0e06 	mla	lr, ip, r6, r0
 8019898:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801989c:	d543      	bpl.n	8019926 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801989e:	4698      	mov	r8, r3
 80198a0:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80198a4:	f1b8 0f00 	cmp.w	r8, #0
 80198a8:	dc71      	bgt.n	801998e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80198aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80198ae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80198b2:	9b01      	ldr	r3, [sp, #4]
 80198b4:	2b00      	cmp	r3, #0
 80198b6:	f340 809d 	ble.w	80199f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80198ba:	ee30 0a04 	vadd.f32	s0, s0, s8
 80198be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80198c2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80198c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80198c8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80198cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80198d0:	eeb0 6a62 	vmov.f32	s12, s5
 80198d4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80198d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80198dc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80198e0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80198e4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80198e8:	eeb0 6a43 	vmov.f32	s12, s6
 80198ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80198f0:	ee12 2a90 	vmov	r2, s5
 80198f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80198f8:	fb92 fcf3 	sdiv	ip, r2, r3
 80198fc:	ee13 2a10 	vmov	r2, s6
 8019900:	fb92 f3f3 	sdiv	r3, r2, r3
 8019904:	9312      	str	r3, [sp, #72]	; 0x48
 8019906:	9b01      	ldr	r3, [sp, #4]
 8019908:	9a03      	ldr	r2, [sp, #12]
 801990a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801990e:	3b01      	subs	r3, #1
 8019910:	9301      	str	r3, [sp, #4]
 8019912:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019916:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019918:	eeb0 3a67 	vmov.f32	s6, s15
 801991c:	bf08      	it	eq
 801991e:	4613      	moveq	r3, r2
 8019920:	eef0 2a47 	vmov.f32	s5, s14
 8019924:	e793      	b.n	801984e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8019926:	45ce      	cmp	lr, r9
 8019928:	dab9      	bge.n	801989e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801992a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801992c:	fb01 2606 	mla	r6, r1, r6, r2
 8019930:	1436      	asrs	r6, r6, #16
 8019932:	d4b4      	bmi.n	801989e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019934:	4546      	cmp	r6, r8
 8019936:	dab2      	bge.n	801989e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019938:	4698      	mov	r8, r3
 801993a:	46a2      	mov	sl, r4
 801993c:	f1b8 0f00 	cmp.w	r8, #0
 8019940:	ddb3      	ble.n	80198aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019942:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019946:	9902      	ldr	r1, [sp, #8]
 8019948:	1416      	asrs	r6, r2, #16
 801994a:	fb09 1606 	mla	r6, r9, r6, r1
 801994e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8019952:	492a      	ldr	r1, [pc, #168]	; (80199fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8019954:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8019958:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801995c:	eb07 0b0e 	add.w	fp, r7, lr
 8019960:	4460      	add	r0, ip
 8019962:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8019966:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801996a:	00f6      	lsls	r6, r6, #3
 801996c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8019970:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019974:	ea49 0606 	orr.w	r6, r9, r6
 8019978:	f817 900e 	ldrb.w	r9, [r7, lr]
 801997c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801997e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8019982:	f82a 6b02 	strh.w	r6, [sl], #2
 8019986:	440a      	add	r2, r1
 8019988:	f108 38ff 	add.w	r8, r8, #4294967295
 801998c:	e7d6      	b.n	801993c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801998e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019992:	d429      	bmi.n	80199e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019994:	68ae      	ldr	r6, [r5, #8]
 8019996:	454e      	cmp	r6, r9
 8019998:	dd26      	ble.n	80199e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801999a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801999e:	d423      	bmi.n	80199e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80199a0:	68e9      	ldr	r1, [r5, #12]
 80199a2:	4559      	cmp	r1, fp
 80199a4:	dd20      	ble.n	80199e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80199a6:	9902      	ldr	r1, [sp, #8]
 80199a8:	fa0f fe86 	sxth.w	lr, r6
 80199ac:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80199b0:	f06f 0101 	mvn.w	r1, #1
 80199b4:	f81e e009 	ldrb.w	lr, [lr, r9]
 80199b8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80199bc:	eb07 060e 	add.w	r6, r7, lr
 80199c0:	fb01 f908 	mul.w	r9, r1, r8
 80199c4:	f896 b002 	ldrb.w	fp, [r6, #2]
 80199c8:	7876      	ldrb	r6, [r6, #1]
 80199ca:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80199ce:	00f6      	lsls	r6, r6, #3
 80199d0:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80199d4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80199d8:	ea4b 0606 	orr.w	r6, fp, r6
 80199dc:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80199e0:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80199e4:	f82a 6009 	strh.w	r6, [sl, r9]
 80199e8:	9912      	ldr	r1, [sp, #72]	; 0x48
 80199ea:	4460      	add	r0, ip
 80199ec:	440a      	add	r2, r1
 80199ee:	f108 38ff 	add.w	r8, r8, #4294967295
 80199f2:	e757      	b.n	80198a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80199f4:	b005      	add	sp, #20
 80199f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80199fa:	bf00      	nop
 80199fc:	fffff800 	.word	0xfffff800

08019a00 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019a00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a04:	b087      	sub	sp, #28
 8019a06:	468b      	mov	fp, r1
 8019a08:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019a0a:	9204      	str	r2, [sp, #16]
 8019a0c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019a10:	9205      	str	r2, [sp, #20]
 8019a12:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019a16:	6841      	ldr	r1, [r0, #4]
 8019a18:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8019a1c:	fb01 2404 	mla	r4, r1, r4, r2
 8019a20:	6802      	ldr	r2, [r0, #0]
 8019a22:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019a26:	f8dc 2000 	ldr.w	r2, [ip]
 8019a2a:	9201      	str	r2, [sp, #4]
 8019a2c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019a30:	3204      	adds	r2, #4
 8019a32:	9202      	str	r2, [sp, #8]
 8019a34:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019a38:	f1bb 0f00 	cmp.w	fp, #0
 8019a3c:	dc03      	bgt.n	8019a46 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8019a3e:	9a04      	ldr	r2, [sp, #16]
 8019a40:	2a00      	cmp	r2, #0
 8019a42:	f340 8138 	ble.w	8019cb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019a46:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019a48:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8019a4c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8019a50:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019a54:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019a56:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019a5a:	2b00      	cmp	r3, #0
 8019a5c:	dd0e      	ble.n	8019a7c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019a5e:	1402      	asrs	r2, r0, #16
 8019a60:	d405      	bmi.n	8019a6e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019a62:	42ba      	cmp	r2, r7
 8019a64:	da03      	bge.n	8019a6e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019a66:	140a      	asrs	r2, r1, #16
 8019a68:	d401      	bmi.n	8019a6e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019a6a:	42b2      	cmp	r2, r6
 8019a6c:	db07      	blt.n	8019a7e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019a6e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019a70:	4410      	add	r0, r2
 8019a72:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019a74:	3b01      	subs	r3, #1
 8019a76:	4411      	add	r1, r2
 8019a78:	3402      	adds	r4, #2
 8019a7a:	e7ee      	b.n	8019a5a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019a7c:	d019      	beq.n	8019ab2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019a7e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019a80:	1e5a      	subs	r2, r3, #1
 8019a82:	fb05 0502 	mla	r5, r5, r2, r0
 8019a86:	142d      	asrs	r5, r5, #16
 8019a88:	d409      	bmi.n	8019a9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019a8a:	42bd      	cmp	r5, r7
 8019a8c:	da07      	bge.n	8019a9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019a8e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019a90:	fb05 1202 	mla	r2, r5, r2, r1
 8019a94:	1412      	asrs	r2, r2, #16
 8019a96:	d402      	bmi.n	8019a9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019a98:	42b2      	cmp	r2, r6
 8019a9a:	f2c0 80ac 	blt.w	8019bf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8019a9e:	f04f 0e00 	mov.w	lr, #0
 8019aa2:	eb03 020e 	add.w	r2, r3, lr
 8019aa6:	2a00      	cmp	r2, #0
 8019aa8:	dc3e      	bgt.n	8019b28 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8019aaa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019aae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019ab2:	f1bb 0f00 	cmp.w	fp, #0
 8019ab6:	f340 80fe 	ble.w	8019cb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019aba:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019abe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019ac2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019ac6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019ac8:	f1bb 0b01 	subs.w	fp, fp, #1
 8019acc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019ad0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019ad4:	eeb0 6a62 	vmov.f32	s12, s5
 8019ad8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019adc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019ae0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019ae4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019ae8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019aec:	eeb0 6a43 	vmov.f32	s12, s6
 8019af0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019af4:	ee12 2a90 	vmov	r2, s5
 8019af8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019afc:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b00:	ee13 2a10 	vmov	r2, s6
 8019b04:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b08:	9313      	str	r3, [sp, #76]	; 0x4c
 8019b0a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019b0c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b10:	9a04      	ldr	r2, [sp, #16]
 8019b12:	9314      	str	r3, [sp, #80]	; 0x50
 8019b14:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019b18:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019b1a:	eeb0 3a67 	vmov.f32	s6, s15
 8019b1e:	bf08      	it	eq
 8019b20:	4613      	moveq	r3, r2
 8019b22:	eef0 2a47 	vmov.f32	s5, s14
 8019b26:	e787      	b.n	8019a38 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019b28:	1406      	asrs	r6, r0, #16
 8019b2a:	d45d      	bmi.n	8019be8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019b2c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8019b30:	42b5      	cmp	r5, r6
 8019b32:	dd59      	ble.n	8019be8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019b34:	140f      	asrs	r7, r1, #16
 8019b36:	d457      	bmi.n	8019be8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019b38:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8019b3c:	42ba      	cmp	r2, r7
 8019b3e:	dd53      	ble.n	8019be8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019b40:	9a01      	ldr	r2, [sp, #4]
 8019b42:	b22d      	sxth	r5, r5
 8019b44:	fb07 2505 	mla	r5, r7, r5, r2
 8019b48:	5daa      	ldrb	r2, [r5, r6]
 8019b4a:	9d02      	ldr	r5, [sp, #8]
 8019b4c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019b50:	0e2e      	lsrs	r6, r5, #24
 8019b52:	d049      	beq.n	8019be8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019b54:	f06f 0201 	mvn.w	r2, #1
 8019b58:	fb02 f20e 	mul.w	r2, r2, lr
 8019b5c:	9203      	str	r2, [sp, #12]
 8019b5e:	f834 8002 	ldrh.w	r8, [r4, r2]
 8019b62:	9a05      	ldr	r2, [sp, #20]
 8019b64:	4356      	muls	r6, r2
 8019b66:	1c72      	adds	r2, r6, #1
 8019b68:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8019b6c:	1212      	asrs	r2, r2, #8
 8019b6e:	fa1f f982 	uxth.w	r9, r2
 8019b72:	ea4f 2728 	mov.w	r7, r8, asr #8
 8019b76:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019b7a:	43d2      	mvns	r2, r2
 8019b7c:	b2d2      	uxtb	r2, r2
 8019b7e:	fb16 f609 	smulbb	r6, r6, r9
 8019b82:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019b86:	fb07 6702 	mla	r7, r7, r2, r6
 8019b8a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019b8e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019b92:	b2ed      	uxtb	r5, r5
 8019b94:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019b98:	fa5f f888 	uxtb.w	r8, r8
 8019b9c:	fb15 f509 	smulbb	r5, r5, r9
 8019ba0:	fb08 5502 	mla	r5, r8, r2, r5
 8019ba4:	b2bf      	uxth	r7, r7
 8019ba6:	fb1a fa09 	smulbb	sl, sl, r9
 8019baa:	b2ad      	uxth	r5, r5
 8019bac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019bb0:	fb06 a602 	mla	r6, r6, r2, sl
 8019bb4:	1c7a      	adds	r2, r7, #1
 8019bb6:	f105 0a01 	add.w	sl, r5, #1
 8019bba:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019bbe:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019bc2:	b2b6      	uxth	r6, r6
 8019bc4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019bc8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019bcc:	ea4a 0707 	orr.w	r7, sl, r7
 8019bd0:	f106 0a01 	add.w	sl, r6, #1
 8019bd4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019bd8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019bdc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019be0:	9a03      	ldr	r2, [sp, #12]
 8019be2:	ea47 070a 	orr.w	r7, r7, sl
 8019be6:	52a7      	strh	r7, [r4, r2]
 8019be8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019bea:	4410      	add	r0, r2
 8019bec:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019bee:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019bf2:	4411      	add	r1, r2
 8019bf4:	e755      	b.n	8019aa2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019bf6:	f04f 0800 	mov.w	r8, #0
 8019bfa:	eba3 0208 	sub.w	r2, r3, r8
 8019bfe:	2a00      	cmp	r2, #0
 8019c00:	f77f af53 	ble.w	8019aaa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8019c04:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8019c08:	9f01      	ldr	r7, [sp, #4]
 8019c0a:	140a      	asrs	r2, r1, #16
 8019c0c:	1405      	asrs	r5, r0, #16
 8019c0e:	fb06 7202 	mla	r2, r6, r2, r7
 8019c12:	5d52      	ldrb	r2, [r2, r5]
 8019c14:	9d02      	ldr	r5, [sp, #8]
 8019c16:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019c1a:	0e2e      	lsrs	r6, r5, #24
 8019c1c:	d044      	beq.n	8019ca8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8019c1e:	9a05      	ldr	r2, [sp, #20]
 8019c20:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8019c24:	4356      	muls	r6, r2
 8019c26:	1c72      	adds	r2, r6, #1
 8019c28:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8019c2c:	1212      	asrs	r2, r2, #8
 8019c2e:	fa1f f982 	uxth.w	r9, r2
 8019c32:	ea4f 272e 	mov.w	r7, lr, asr #8
 8019c36:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019c3a:	43d2      	mvns	r2, r2
 8019c3c:	b2d2      	uxtb	r2, r2
 8019c3e:	fb16 f609 	smulbb	r6, r6, r9
 8019c42:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019c46:	fb07 6702 	mla	r7, r7, r2, r6
 8019c4a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019c4e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019c52:	b2ed      	uxtb	r5, r5
 8019c54:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019c58:	fa5f fe8e 	uxtb.w	lr, lr
 8019c5c:	fb15 f509 	smulbb	r5, r5, r9
 8019c60:	fb0e 5502 	mla	r5, lr, r2, r5
 8019c64:	b2bf      	uxth	r7, r7
 8019c66:	fb1a fa09 	smulbb	sl, sl, r9
 8019c6a:	b2ad      	uxth	r5, r5
 8019c6c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019c70:	fb06 a602 	mla	r6, r6, r2, sl
 8019c74:	1c7a      	adds	r2, r7, #1
 8019c76:	f105 0a01 	add.w	sl, r5, #1
 8019c7a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019c7e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019c82:	b2b6      	uxth	r6, r6
 8019c84:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019c88:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019c8c:	ea4a 0707 	orr.w	r7, sl, r7
 8019c90:	f106 0a01 	add.w	sl, r6, #1
 8019c94:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019c98:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019c9c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019ca0:	ea47 070a 	orr.w	r7, r7, sl
 8019ca4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019ca8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019caa:	4410      	add	r0, r2
 8019cac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019cae:	f108 0801 	add.w	r8, r8, #1
 8019cb2:	4411      	add	r1, r2
 8019cb4:	e7a1      	b.n	8019bfa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8019cb6:	b007      	add	sp, #28
 8019cb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019cbc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019cbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019cc0:	b085      	sub	sp, #20
 8019cc2:	468b      	mov	fp, r1
 8019cc4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019cc6:	9203      	str	r2, [sp, #12]
 8019cc8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019ccc:	6841      	ldr	r1, [r0, #4]
 8019cce:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8019cd2:	fb01 2404 	mla	r4, r1, r4, r2
 8019cd6:	6802      	ldr	r2, [r0, #0]
 8019cd8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019cdc:	f8de 2000 	ldr.w	r2, [lr]
 8019ce0:	9200      	str	r2, [sp, #0]
 8019ce2:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019ce6:	3204      	adds	r2, #4
 8019ce8:	9201      	str	r2, [sp, #4]
 8019cea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019cee:	f1bb 0f00 	cmp.w	fp, #0
 8019cf2:	dc03      	bgt.n	8019cfc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019cf4:	9a03      	ldr	r2, [sp, #12]
 8019cf6:	2a00      	cmp	r2, #0
 8019cf8:	f340 8153 	ble.w	8019fa2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019cfc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019cfe:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019d02:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8019d06:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019d0a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019d0c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019d10:	2b00      	cmp	r3, #0
 8019d12:	dd0e      	ble.n	8019d32 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019d14:	1408      	asrs	r0, r1, #16
 8019d16:	d405      	bmi.n	8019d24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019d18:	42b8      	cmp	r0, r7
 8019d1a:	da03      	bge.n	8019d24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019d1c:	1410      	asrs	r0, r2, #16
 8019d1e:	d401      	bmi.n	8019d24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019d20:	42b0      	cmp	r0, r6
 8019d22:	db07      	blt.n	8019d34 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019d24:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019d26:	4401      	add	r1, r0
 8019d28:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019d2a:	3b01      	subs	r3, #1
 8019d2c:	4402      	add	r2, r0
 8019d2e:	3402      	adds	r4, #2
 8019d30:	e7ee      	b.n	8019d10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019d32:	d017      	beq.n	8019d64 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019d34:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019d36:	1e58      	subs	r0, r3, #1
 8019d38:	fb05 1500 	mla	r5, r5, r0, r1
 8019d3c:	142d      	asrs	r5, r5, #16
 8019d3e:	d409      	bmi.n	8019d54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019d40:	42bd      	cmp	r5, r7
 8019d42:	da07      	bge.n	8019d54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019d44:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019d46:	fb05 2000 	mla	r0, r5, r0, r2
 8019d4a:	1400      	asrs	r0, r0, #16
 8019d4c:	d402      	bmi.n	8019d54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019d4e:	42b0      	cmp	r0, r6
 8019d50:	f2c0 80bc 	blt.w	8019ecc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8019d54:	2600      	movs	r6, #0
 8019d56:	1998      	adds	r0, r3, r6
 8019d58:	2800      	cmp	r0, #0
 8019d5a:	dc3e      	bgt.n	8019dda <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8019d5c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019d60:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019d64:	f1bb 0f00 	cmp.w	fp, #0
 8019d68:	f340 811b 	ble.w	8019fa2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019d6c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019d70:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019d74:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019d78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d7a:	f1bb 0b01 	subs.w	fp, fp, #1
 8019d7e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019d82:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019d86:	eeb0 6a62 	vmov.f32	s12, s5
 8019d8a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019d8e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d92:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019d96:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019d9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019d9e:	eeb0 6a43 	vmov.f32	s12, s6
 8019da2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019da6:	ee12 2a90 	vmov	r2, s5
 8019daa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019dae:	fb92 f3f3 	sdiv	r3, r2, r3
 8019db2:	ee13 2a10 	vmov	r2, s6
 8019db6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019dba:	9311      	str	r3, [sp, #68]	; 0x44
 8019dbc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019dbe:	fb92 f3f3 	sdiv	r3, r2, r3
 8019dc2:	9a03      	ldr	r2, [sp, #12]
 8019dc4:	9312      	str	r3, [sp, #72]	; 0x48
 8019dc6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019dca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019dcc:	eeb0 3a67 	vmov.f32	s6, s15
 8019dd0:	bf08      	it	eq
 8019dd2:	4613      	moveq	r3, r2
 8019dd4:	eef0 2a47 	vmov.f32	s5, s14
 8019dd8:	e789      	b.n	8019cee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019dda:	140f      	asrs	r7, r1, #16
 8019ddc:	d426      	bmi.n	8019e2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019dde:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019de2:	42bd      	cmp	r5, r7
 8019de4:	dd22      	ble.n	8019e2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019de6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019dea:	d41f      	bmi.n	8019e2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019dec:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019df0:	4560      	cmp	r0, ip
 8019df2:	dd1b      	ble.n	8019e2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019df4:	9800      	ldr	r0, [sp, #0]
 8019df6:	b22d      	sxth	r5, r5
 8019df8:	fb0c 0505 	mla	r5, ip, r5, r0
 8019dfc:	5de8      	ldrb	r0, [r5, r7]
 8019dfe:	9d01      	ldr	r5, [sp, #4]
 8019e00:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8019e04:	0e07      	lsrs	r7, r0, #24
 8019e06:	2fff      	cmp	r7, #255	; 0xff
 8019e08:	d116      	bne.n	8019e38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019e0a:	f06f 0501 	mvn.w	r5, #1
 8019e0e:	fb05 f706 	mul.w	r7, r5, r6
 8019e12:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8019e16:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8019e1a:	0945      	lsrs	r5, r0, #5
 8019e1c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019e20:	ea4c 0505 	orr.w	r5, ip, r5
 8019e24:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019e28:	4305      	orrs	r5, r0
 8019e2a:	53e5      	strh	r5, [r4, r7]
 8019e2c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019e2e:	4401      	add	r1, r0
 8019e30:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019e32:	3e01      	subs	r6, #1
 8019e34:	4402      	add	r2, r0
 8019e36:	e78e      	b.n	8019d56 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019e38:	b2fd      	uxtb	r5, r7
 8019e3a:	2f00      	cmp	r7, #0
 8019e3c:	d0f6      	beq.n	8019e2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019e3e:	f06f 0701 	mvn.w	r7, #1
 8019e42:	4377      	muls	r7, r6
 8019e44:	fa1f f985 	uxth.w	r9, r5
 8019e48:	f834 8007 	ldrh.w	r8, [r4, r7]
 8019e4c:	9702      	str	r7, [sp, #8]
 8019e4e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019e52:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8019e56:	43ed      	mvns	r5, r5
 8019e58:	b2ed      	uxtb	r5, r5
 8019e5a:	fb17 f709 	smulbb	r7, r7, r9
 8019e5e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019e62:	fb0c 7c05 	mla	ip, ip, r5, r7
 8019e66:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8019e6a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8019e6e:	b2c0      	uxtb	r0, r0
 8019e70:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019e74:	fa5f f888 	uxtb.w	r8, r8
 8019e78:	fb10 f009 	smulbb	r0, r0, r9
 8019e7c:	fb08 0005 	mla	r0, r8, r5, r0
 8019e80:	b280      	uxth	r0, r0
 8019e82:	fa1f fc8c 	uxth.w	ip, ip
 8019e86:	fb1a fa09 	smulbb	sl, sl, r9
 8019e8a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019e8e:	fb07 a705 	mla	r7, r7, r5, sl
 8019e92:	f100 0a01 	add.w	sl, r0, #1
 8019e96:	f10c 0501 	add.w	r5, ip, #1
 8019e9a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8019e9e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019ea2:	b2bf      	uxth	r7, r7
 8019ea4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019ea8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019eac:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019eb0:	f107 0a01 	add.w	sl, r7, #1
 8019eb4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019eb8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019ebc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019ec0:	9802      	ldr	r0, [sp, #8]
 8019ec2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019ec6:	f824 c000 	strh.w	ip, [r4, r0]
 8019eca:	e7af      	b.n	8019e2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019ecc:	f04f 0800 	mov.w	r8, #0
 8019ed0:	eba3 0008 	sub.w	r0, r3, r8
 8019ed4:	2800      	cmp	r0, #0
 8019ed6:	f77f af41 	ble.w	8019d5c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019eda:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019ede:	9f00      	ldr	r7, [sp, #0]
 8019ee0:	1410      	asrs	r0, r2, #16
 8019ee2:	140d      	asrs	r5, r1, #16
 8019ee4:	fb06 7000 	mla	r0, r6, r0, r7
 8019ee8:	5d40      	ldrb	r0, [r0, r5]
 8019eea:	9d01      	ldr	r5, [sp, #4]
 8019eec:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8019ef0:	0e2e      	lsrs	r6, r5, #24
 8019ef2:	2eff      	cmp	r6, #255	; 0xff
 8019ef4:	d112      	bne.n	8019f1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8019ef6:	482c      	ldr	r0, [pc, #176]	; (8019fa8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8019ef8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8019efc:	0968      	lsrs	r0, r5, #5
 8019efe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019f02:	4330      	orrs	r0, r6
 8019f04:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019f08:	4328      	orrs	r0, r5
 8019f0a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8019f0e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019f10:	4401      	add	r1, r0
 8019f12:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019f14:	f108 0801 	add.w	r8, r8, #1
 8019f18:	4402      	add	r2, r0
 8019f1a:	e7d9      	b.n	8019ed0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019f1c:	b2f0      	uxtb	r0, r6
 8019f1e:	2e00      	cmp	r6, #0
 8019f20:	d0f5      	beq.n	8019f0e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019f22:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8019f26:	fa1f f980 	uxth.w	r9, r0
 8019f2a:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019f2e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019f32:	43c0      	mvns	r0, r0
 8019f34:	b2c0      	uxtb	r0, r0
 8019f36:	fb16 f609 	smulbb	r6, r6, r9
 8019f3a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019f3e:	fb07 6700 	mla	r7, r7, r0, r6
 8019f42:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019f46:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019f4a:	b2ed      	uxtb	r5, r5
 8019f4c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019f50:	fa5f fc8c 	uxtb.w	ip, ip
 8019f54:	fb15 f509 	smulbb	r5, r5, r9
 8019f58:	fb0c 5500 	mla	r5, ip, r0, r5
 8019f5c:	b2bf      	uxth	r7, r7
 8019f5e:	fb1a fa09 	smulbb	sl, sl, r9
 8019f62:	b2ad      	uxth	r5, r5
 8019f64:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019f68:	fb06 a600 	mla	r6, r6, r0, sl
 8019f6c:	1c78      	adds	r0, r7, #1
 8019f6e:	f105 0a01 	add.w	sl, r5, #1
 8019f72:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8019f76:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019f7a:	b2b6      	uxth	r6, r6
 8019f7c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019f80:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019f84:	ea4a 0707 	orr.w	r7, sl, r7
 8019f88:	f106 0a01 	add.w	sl, r6, #1
 8019f8c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019f90:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019f94:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019f98:	ea47 070a 	orr.w	r7, r7, sl
 8019f9c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019fa0:	e7b5      	b.n	8019f0e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019fa2:	b005      	add	sp, #20
 8019fa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019fa8:	fffff800 	.word	0xfffff800

08019fac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019fac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019fb0:	b087      	sub	sp, #28
 8019fb2:	468b      	mov	fp, r1
 8019fb4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019fb6:	9204      	str	r2, [sp, #16]
 8019fb8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019fbc:	9205      	str	r2, [sp, #20]
 8019fbe:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8019fc2:	6861      	ldr	r1, [r4, #4]
 8019fc4:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8019fc8:	fb01 2000 	mla	r0, r1, r0, r2
 8019fcc:	6822      	ldr	r2, [r4, #0]
 8019fce:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8019fd2:	f8de 2000 	ldr.w	r2, [lr]
 8019fd6:	9201      	str	r2, [sp, #4]
 8019fd8:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019fdc:	9202      	str	r2, [sp, #8]
 8019fde:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019fe2:	f1bb 0f00 	cmp.w	fp, #0
 8019fe6:	dc03      	bgt.n	8019ff0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8019fe8:	9a04      	ldr	r2, [sp, #16]
 8019fea:	2a00      	cmp	r2, #0
 8019fec:	f340 8142 	ble.w	801a274 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019ff0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019ff2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019ff6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8019ffa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019ffe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a000:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a004:	2b00      	cmp	r3, #0
 801a006:	dd0e      	ble.n	801a026 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a008:	140c      	asrs	r4, r1, #16
 801a00a:	d405      	bmi.n	801a018 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a00c:	42bc      	cmp	r4, r7
 801a00e:	da03      	bge.n	801a018 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a010:	1414      	asrs	r4, r2, #16
 801a012:	d401      	bmi.n	801a018 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a014:	42b4      	cmp	r4, r6
 801a016:	db07      	blt.n	801a028 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a018:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a01a:	4421      	add	r1, r4
 801a01c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a01e:	3b01      	subs	r3, #1
 801a020:	4422      	add	r2, r4
 801a022:	3002      	adds	r0, #2
 801a024:	e7ee      	b.n	801a004 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a026:	d019      	beq.n	801a05c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a028:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a02a:	1e5c      	subs	r4, r3, #1
 801a02c:	fb05 1504 	mla	r5, r5, r4, r1
 801a030:	142d      	asrs	r5, r5, #16
 801a032:	d409      	bmi.n	801a048 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a034:	42bd      	cmp	r5, r7
 801a036:	da07      	bge.n	801a048 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a038:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a03a:	fb05 2404 	mla	r4, r5, r4, r2
 801a03e:	1424      	asrs	r4, r4, #16
 801a040:	d402      	bmi.n	801a048 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a042:	42b4      	cmp	r4, r6
 801a044:	f2c0 80b1 	blt.w	801a1aa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801a048:	f04f 0800 	mov.w	r8, #0
 801a04c:	eb03 0408 	add.w	r4, r3, r8
 801a050:	2c00      	cmp	r4, #0
 801a052:	dc3e      	bgt.n	801a0d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801a054:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a058:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a05c:	f1bb 0f00 	cmp.w	fp, #0
 801a060:	f340 8108 	ble.w	801a274 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801a064:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a068:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a06c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a070:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a072:	f1bb 0b01 	subs.w	fp, fp, #1
 801a076:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a07a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a07e:	eeb0 6a62 	vmov.f32	s12, s5
 801a082:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a086:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a08a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a08e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a092:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a096:	eeb0 6a43 	vmov.f32	s12, s6
 801a09a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a09e:	ee12 2a90 	vmov	r2, s5
 801a0a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a0a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a0aa:	ee13 2a10 	vmov	r2, s6
 801a0ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a0b2:	9313      	str	r3, [sp, #76]	; 0x4c
 801a0b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a0b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a0ba:	9a04      	ldr	r2, [sp, #16]
 801a0bc:	9314      	str	r3, [sp, #80]	; 0x50
 801a0be:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a0c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a0c4:	eeb0 3a67 	vmov.f32	s6, s15
 801a0c8:	bf08      	it	eq
 801a0ca:	4613      	moveq	r3, r2
 801a0cc:	eef0 2a47 	vmov.f32	s5, s14
 801a0d0:	e787      	b.n	8019fe2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801a0d2:	140e      	asrs	r6, r1, #16
 801a0d4:	d462      	bmi.n	801a19c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a0d6:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a0da:	42b5      	cmp	r5, r6
 801a0dc:	dd5e      	ble.n	801a19c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a0de:	1417      	asrs	r7, r2, #16
 801a0e0:	d45c      	bmi.n	801a19c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a0e2:	f8de 400c 	ldr.w	r4, [lr, #12]
 801a0e6:	42bc      	cmp	r4, r7
 801a0e8:	dd58      	ble.n	801a19c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a0ea:	b22d      	sxth	r5, r5
 801a0ec:	fb07 6505 	mla	r5, r7, r5, r6
 801a0f0:	9c02      	ldr	r4, [sp, #8]
 801a0f2:	5d66      	ldrb	r6, [r4, r5]
 801a0f4:	2e00      	cmp	r6, #0
 801a0f6:	d051      	beq.n	801a19c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a0f8:	9c01      	ldr	r4, [sp, #4]
 801a0fa:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801a0fe:	f06f 0401 	mvn.w	r4, #1
 801a102:	fb04 f408 	mul.w	r4, r4, r8
 801a106:	9403      	str	r4, [sp, #12]
 801a108:	5b05      	ldrh	r5, [r0, r4]
 801a10a:	9c05      	ldr	r4, [sp, #20]
 801a10c:	4366      	muls	r6, r4
 801a10e:	1c74      	adds	r4, r6, #1
 801a110:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801a114:	1224      	asrs	r4, r4, #8
 801a116:	b2a7      	uxth	r7, r4
 801a118:	122e      	asrs	r6, r5, #8
 801a11a:	43e4      	mvns	r4, r4
 801a11c:	b2e4      	uxtb	r4, r4
 801a11e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801a122:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a126:	fb16 f604 	smulbb	r6, r6, r4
 801a12a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a12e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a132:	00ed      	lsls	r5, r5, #3
 801a134:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a138:	b2ed      	uxtb	r5, r5
 801a13a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801a13e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801a142:	fb15 f504 	smulbb	r5, r5, r4
 801a146:	fa5f f989 	uxtb.w	r9, r9
 801a14a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a14e:	fb09 5507 	mla	r5, r9, r7, r5
 801a152:	fb1a fa04 	smulbb	sl, sl, r4
 801a156:	fa1f fc8c 	uxth.w	ip, ip
 801a15a:	b2ad      	uxth	r5, r5
 801a15c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a160:	fb06 a607 	mla	r6, r6, r7, sl
 801a164:	f10c 0401 	add.w	r4, ip, #1
 801a168:	f105 0a01 	add.w	sl, r5, #1
 801a16c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a170:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a174:	b2b6      	uxth	r6, r6
 801a176:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a17a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a17e:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a182:	f106 0a01 	add.w	sl, r6, #1
 801a186:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a18a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a18e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a192:	9c03      	ldr	r4, [sp, #12]
 801a194:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a198:	f820 c004 	strh.w	ip, [r0, r4]
 801a19c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a19e:	4421      	add	r1, r4
 801a1a0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a1a2:	f108 38ff 	add.w	r8, r8, #4294967295
 801a1a6:	4422      	add	r2, r4
 801a1a8:	e750      	b.n	801a04c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a1aa:	f04f 0900 	mov.w	r9, #0
 801a1ae:	eba3 0409 	sub.w	r4, r3, r9
 801a1b2:	2c00      	cmp	r4, #0
 801a1b4:	f77f af4e 	ble.w	801a054 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a1b8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a1bc:	140d      	asrs	r5, r1, #16
 801a1be:	1414      	asrs	r4, r2, #16
 801a1c0:	fb06 5404 	mla	r4, r6, r4, r5
 801a1c4:	9d02      	ldr	r5, [sp, #8]
 801a1c6:	5d2e      	ldrb	r6, [r5, r4]
 801a1c8:	2e00      	cmp	r6, #0
 801a1ca:	d04c      	beq.n	801a266 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801a1cc:	9d01      	ldr	r5, [sp, #4]
 801a1ce:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801a1d2:	9c05      	ldr	r4, [sp, #20]
 801a1d4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801a1d8:	4366      	muls	r6, r4
 801a1da:	1c74      	adds	r4, r6, #1
 801a1dc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801a1e0:	1224      	asrs	r4, r4, #8
 801a1e2:	b2a7      	uxth	r7, r4
 801a1e4:	122e      	asrs	r6, r5, #8
 801a1e6:	43e4      	mvns	r4, r4
 801a1e8:	b2e4      	uxtb	r4, r4
 801a1ea:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a1ee:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a1f2:	fb16 f604 	smulbb	r6, r6, r4
 801a1f6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a1fa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a1fe:	00ed      	lsls	r5, r5, #3
 801a200:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a204:	b2ed      	uxtb	r5, r5
 801a206:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a20a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a20e:	fb15 f504 	smulbb	r5, r5, r4
 801a212:	fa5f f888 	uxtb.w	r8, r8
 801a216:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a21a:	fb08 5507 	mla	r5, r8, r7, r5
 801a21e:	fb1a fa04 	smulbb	sl, sl, r4
 801a222:	fa1f fc8c 	uxth.w	ip, ip
 801a226:	b2ad      	uxth	r5, r5
 801a228:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a22c:	fb06 a607 	mla	r6, r6, r7, sl
 801a230:	f10c 0401 	add.w	r4, ip, #1
 801a234:	f105 0a01 	add.w	sl, r5, #1
 801a238:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a23c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a240:	b2b6      	uxth	r6, r6
 801a242:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a246:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a24a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a24e:	f106 0a01 	add.w	sl, r6, #1
 801a252:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a256:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a25a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a25e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a262:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801a266:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a268:	4421      	add	r1, r4
 801a26a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a26c:	f109 0901 	add.w	r9, r9, #1
 801a270:	4422      	add	r2, r4
 801a272:	e79c      	b.n	801a1ae <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801a274:	b007      	add	sp, #28
 801a276:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a27a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a27a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a27e:	b085      	sub	sp, #20
 801a280:	468b      	mov	fp, r1
 801a282:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a284:	9203      	str	r2, [sp, #12]
 801a286:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801a28a:	6861      	ldr	r1, [r4, #4]
 801a28c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801a290:	fb01 2000 	mla	r0, r1, r0, r2
 801a294:	6822      	ldr	r2, [r4, #0]
 801a296:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801a29a:	f8d8 2000 	ldr.w	r2, [r8]
 801a29e:	9200      	str	r2, [sp, #0]
 801a2a0:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801a2a4:	9201      	str	r2, [sp, #4]
 801a2a6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a2aa:	f1bb 0f00 	cmp.w	fp, #0
 801a2ae:	dc03      	bgt.n	801a2b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a2b0:	9a03      	ldr	r2, [sp, #12]
 801a2b2:	2a00      	cmp	r2, #0
 801a2b4:	f340 8146 	ble.w	801a544 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801a2b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a2ba:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801a2be:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801a2c2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a2c6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a2c8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a2cc:	2b00      	cmp	r3, #0
 801a2ce:	dd0e      	ble.n	801a2ee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a2d0:	140c      	asrs	r4, r1, #16
 801a2d2:	d405      	bmi.n	801a2e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a2d4:	42bc      	cmp	r4, r7
 801a2d6:	da03      	bge.n	801a2e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a2d8:	1414      	asrs	r4, r2, #16
 801a2da:	d401      	bmi.n	801a2e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a2dc:	42b4      	cmp	r4, r6
 801a2de:	db07      	blt.n	801a2f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a2e0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a2e2:	4421      	add	r1, r4
 801a2e4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a2e6:	3b01      	subs	r3, #1
 801a2e8:	4422      	add	r2, r4
 801a2ea:	3002      	adds	r0, #2
 801a2ec:	e7ee      	b.n	801a2cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a2ee:	d017      	beq.n	801a320 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a2f0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a2f2:	1e5c      	subs	r4, r3, #1
 801a2f4:	fb05 1504 	mla	r5, r5, r4, r1
 801a2f8:	142d      	asrs	r5, r5, #16
 801a2fa:	d409      	bmi.n	801a310 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a2fc:	42bd      	cmp	r5, r7
 801a2fe:	da07      	bge.n	801a310 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a300:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a302:	fb05 2404 	mla	r4, r5, r4, r2
 801a306:	1424      	asrs	r4, r4, #16
 801a308:	d402      	bmi.n	801a310 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a30a:	42b4      	cmp	r4, r6
 801a30c:	f2c0 80b3 	blt.w	801a476 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801a310:	2600      	movs	r6, #0
 801a312:	199c      	adds	r4, r3, r6
 801a314:	2c00      	cmp	r4, #0
 801a316:	dc3e      	bgt.n	801a396 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a318:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a31c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a320:	f1bb 0f00 	cmp.w	fp, #0
 801a324:	f340 810e 	ble.w	801a544 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801a328:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a32c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a330:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a334:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a336:	f1bb 0b01 	subs.w	fp, fp, #1
 801a33a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a33e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a342:	eeb0 6a62 	vmov.f32	s12, s5
 801a346:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a34a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a34e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a352:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a356:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a35a:	eeb0 6a43 	vmov.f32	s12, s6
 801a35e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a362:	ee12 2a90 	vmov	r2, s5
 801a366:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a36a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a36e:	ee13 2a10 	vmov	r2, s6
 801a372:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a376:	9311      	str	r3, [sp, #68]	; 0x44
 801a378:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a37a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a37e:	9a03      	ldr	r2, [sp, #12]
 801a380:	9312      	str	r3, [sp, #72]	; 0x48
 801a382:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a386:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a388:	eeb0 3a67 	vmov.f32	s6, s15
 801a38c:	bf08      	it	eq
 801a38e:	4613      	moveq	r3, r2
 801a390:	eef0 2a47 	vmov.f32	s5, s14
 801a394:	e789      	b.n	801a2aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a396:	140f      	asrs	r7, r1, #16
 801a398:	d418      	bmi.n	801a3cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a39a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801a39e:	42bd      	cmp	r5, r7
 801a3a0:	dd14      	ble.n	801a3cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a3a2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a3a6:	d411      	bmi.n	801a3cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a3a8:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801a3ac:	4564      	cmp	r4, ip
 801a3ae:	dd0d      	ble.n	801a3cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a3b0:	b22d      	sxth	r5, r5
 801a3b2:	fb0c 7505 	mla	r5, ip, r5, r7
 801a3b6:	9c01      	ldr	r4, [sp, #4]
 801a3b8:	5d64      	ldrb	r4, [r4, r5]
 801a3ba:	2cff      	cmp	r4, #255	; 0xff
 801a3bc:	d10c      	bne.n	801a3d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801a3be:	9c00      	ldr	r4, [sp, #0]
 801a3c0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801a3c4:	f06f 0401 	mvn.w	r4, #1
 801a3c8:	4374      	muls	r4, r6
 801a3ca:	5305      	strh	r5, [r0, r4]
 801a3cc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a3ce:	4421      	add	r1, r4
 801a3d0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a3d2:	3e01      	subs	r6, #1
 801a3d4:	4422      	add	r2, r4
 801a3d6:	e79c      	b.n	801a312 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a3d8:	2c00      	cmp	r4, #0
 801a3da:	d0f7      	beq.n	801a3cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a3dc:	9f00      	ldr	r7, [sp, #0]
 801a3de:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801a3e2:	f06f 0501 	mvn.w	r5, #1
 801a3e6:	4375      	muls	r5, r6
 801a3e8:	9502      	str	r5, [sp, #8]
 801a3ea:	5b45      	ldrh	r5, [r0, r5]
 801a3ec:	fa1f fc84 	uxth.w	ip, r4
 801a3f0:	122f      	asrs	r7, r5, #8
 801a3f2:	43e4      	mvns	r4, r4
 801a3f4:	b2e4      	uxtb	r4, r4
 801a3f6:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801a3fa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a3fe:	fb17 f704 	smulbb	r7, r7, r4
 801a402:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a406:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a40a:	00ed      	lsls	r5, r5, #3
 801a40c:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801a410:	b2ed      	uxtb	r5, r5
 801a412:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801a416:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801a41a:	fb15 f504 	smulbb	r5, r5, r4
 801a41e:	fa5f f989 	uxtb.w	r9, r9
 801a422:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a426:	fb09 550c 	mla	r5, r9, ip, r5
 801a42a:	fb1a fa04 	smulbb	sl, sl, r4
 801a42e:	fa1f fe8e 	uxth.w	lr, lr
 801a432:	b2ad      	uxth	r5, r5
 801a434:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a438:	fb07 a70c 	mla	r7, r7, ip, sl
 801a43c:	f10e 0401 	add.w	r4, lr, #1
 801a440:	f105 0a01 	add.w	sl, r5, #1
 801a444:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801a448:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a44c:	b2bf      	uxth	r7, r7
 801a44e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a452:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a456:	ea4a 0e0e 	orr.w	lr, sl, lr
 801a45a:	f107 0a01 	add.w	sl, r7, #1
 801a45e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a462:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a466:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a46a:	9c02      	ldr	r4, [sp, #8]
 801a46c:	ea4e 0e0a 	orr.w	lr, lr, sl
 801a470:	f820 e004 	strh.w	lr, [r0, r4]
 801a474:	e7aa      	b.n	801a3cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a476:	f04f 0900 	mov.w	r9, #0
 801a47a:	eba3 0409 	sub.w	r4, r3, r9
 801a47e:	2c00      	cmp	r4, #0
 801a480:	f77f af4a 	ble.w	801a318 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a484:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a488:	1414      	asrs	r4, r2, #16
 801a48a:	140d      	asrs	r5, r1, #16
 801a48c:	fb06 5504 	mla	r5, r6, r4, r5
 801a490:	9c01      	ldr	r4, [sp, #4]
 801a492:	5d64      	ldrb	r4, [r4, r5]
 801a494:	2cff      	cmp	r4, #255	; 0xff
 801a496:	d10b      	bne.n	801a4b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801a498:	9c00      	ldr	r4, [sp, #0]
 801a49a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801a49e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801a4a2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a4a4:	4421      	add	r1, r4
 801a4a6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a4a8:	f109 0901 	add.w	r9, r9, #1
 801a4ac:	4422      	add	r2, r4
 801a4ae:	e7e4      	b.n	801a47a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a4b0:	2c00      	cmp	r4, #0
 801a4b2:	d0f6      	beq.n	801a4a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801a4b4:	9e00      	ldr	r6, [sp, #0]
 801a4b6:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801a4ba:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801a4be:	b2a7      	uxth	r7, r4
 801a4c0:	122e      	asrs	r6, r5, #8
 801a4c2:	43e4      	mvns	r4, r4
 801a4c4:	b2e4      	uxtb	r4, r4
 801a4c6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a4ca:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a4ce:	fb16 f604 	smulbb	r6, r6, r4
 801a4d2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a4d6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a4da:	00ed      	lsls	r5, r5, #3
 801a4dc:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a4e0:	b2ed      	uxtb	r5, r5
 801a4e2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a4e6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a4ea:	fb15 f504 	smulbb	r5, r5, r4
 801a4ee:	fa5f fe8e 	uxtb.w	lr, lr
 801a4f2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a4f6:	fb0e 5507 	mla	r5, lr, r7, r5
 801a4fa:	fb1a fa04 	smulbb	sl, sl, r4
 801a4fe:	fa1f fc8c 	uxth.w	ip, ip
 801a502:	b2ad      	uxth	r5, r5
 801a504:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a508:	fb06 a607 	mla	r6, r6, r7, sl
 801a50c:	f10c 0401 	add.w	r4, ip, #1
 801a510:	f105 0a01 	add.w	sl, r5, #1
 801a514:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a518:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a51c:	b2b6      	uxth	r6, r6
 801a51e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a522:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a526:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a52a:	f106 0a01 	add.w	sl, r6, #1
 801a52e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a532:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a536:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a53a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a53e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801a542:	e7ae      	b.n	801a4a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801a544:	b005      	add	sp, #20
 801a546:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a54a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a54a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a54e:	b085      	sub	sp, #20
 801a550:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a552:	9203      	str	r2, [sp, #12]
 801a554:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801a558:	9201      	str	r2, [sp, #4]
 801a55a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a55e:	9100      	str	r1, [sp, #0]
 801a560:	6841      	ldr	r1, [r0, #4]
 801a562:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801a566:	fb01 2404 	mla	r4, r1, r4, r2
 801a56a:	6802      	ldr	r2, [r0, #0]
 801a56c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a570:	f8de 2000 	ldr.w	r2, [lr]
 801a574:	9202      	str	r2, [sp, #8]
 801a576:	9a01      	ldr	r2, [sp, #4]
 801a578:	43d6      	mvns	r6, r2
 801a57a:	b2f6      	uxtb	r6, r6
 801a57c:	9a00      	ldr	r2, [sp, #0]
 801a57e:	2a00      	cmp	r2, #0
 801a580:	dc03      	bgt.n	801a58a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a582:	9a03      	ldr	r2, [sp, #12]
 801a584:	2a00      	cmp	r2, #0
 801a586:	f340 8124 	ble.w	801a7d2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801a58a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a58c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801a590:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801a594:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a598:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a59a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a59e:	2b00      	cmp	r3, #0
 801a5a0:	dd0e      	ble.n	801a5c0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a5a2:	1408      	asrs	r0, r1, #16
 801a5a4:	d405      	bmi.n	801a5b2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a5a6:	4560      	cmp	r0, ip
 801a5a8:	da03      	bge.n	801a5b2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a5aa:	1410      	asrs	r0, r2, #16
 801a5ac:	d401      	bmi.n	801a5b2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a5ae:	42b8      	cmp	r0, r7
 801a5b0:	db07      	blt.n	801a5c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a5b2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a5b4:	4401      	add	r1, r0
 801a5b6:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a5b8:	3b01      	subs	r3, #1
 801a5ba:	4402      	add	r2, r0
 801a5bc:	3402      	adds	r4, #2
 801a5be:	e7ee      	b.n	801a59e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a5c0:	d06e      	beq.n	801a6a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a5c2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a5c4:	1e58      	subs	r0, r3, #1
 801a5c6:	fb05 1500 	mla	r5, r5, r0, r1
 801a5ca:	142d      	asrs	r5, r5, #16
 801a5cc:	d45c      	bmi.n	801a688 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a5ce:	4565      	cmp	r5, ip
 801a5d0:	da5a      	bge.n	801a688 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a5d2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a5d4:	fb05 2000 	mla	r0, r5, r0, r2
 801a5d8:	1400      	asrs	r0, r0, #16
 801a5da:	d455      	bmi.n	801a688 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a5dc:	42b8      	cmp	r0, r7
 801a5de:	da53      	bge.n	801a688 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a5e0:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801a5e4:	4699      	mov	r9, r3
 801a5e6:	46a2      	mov	sl, r4
 801a5e8:	f1b9 0f00 	cmp.w	r9, #0
 801a5ec:	dd54      	ble.n	801a698 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a5ee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a5f2:	140d      	asrs	r5, r1, #16
 801a5f4:	1410      	asrs	r0, r2, #16
 801a5f6:	fb07 5000 	mla	r0, r7, r0, r5
 801a5fa:	9d02      	ldr	r5, [sp, #8]
 801a5fc:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a600:	f8ba 5000 	ldrh.w	r5, [sl]
 801a604:	122f      	asrs	r7, r5, #8
 801a606:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a60a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a60e:	fb17 f706 	smulbb	r7, r7, r6
 801a612:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801a616:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a61a:	00ed      	lsls	r5, r5, #3
 801a61c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801a620:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801a624:	10c7      	asrs	r7, r0, #3
 801a626:	b2ed      	uxtb	r5, r5
 801a628:	00c0      	lsls	r0, r0, #3
 801a62a:	fb18 f806 	smulbb	r8, r8, r6
 801a62e:	fb15 f506 	smulbb	r5, r5, r6
 801a632:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a636:	b2c0      	uxtb	r0, r0
 801a638:	fa1f fc8c 	uxth.w	ip, ip
 801a63c:	fb07 870b 	mla	r7, r7, fp, r8
 801a640:	fb00 500b 	mla	r0, r0, fp, r5
 801a644:	b280      	uxth	r0, r0
 801a646:	b2bf      	uxth	r7, r7
 801a648:	f10c 0501 	add.w	r5, ip, #1
 801a64c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a650:	f107 0801 	add.w	r8, r7, #1
 801a654:	1c45      	adds	r5, r0, #1
 801a656:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a65a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801a65e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a660:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a664:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a668:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a66c:	ea45 0c0c 	orr.w	ip, r5, ip
 801a670:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801a674:	4401      	add	r1, r0
 801a676:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a678:	ea4c 0c08 	orr.w	ip, ip, r8
 801a67c:	f82a cb02 	strh.w	ip, [sl], #2
 801a680:	4402      	add	r2, r0
 801a682:	f109 39ff 	add.w	r9, r9, #4294967295
 801a686:	e7af      	b.n	801a5e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a688:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801a68c:	f04f 0800 	mov.w	r8, #0
 801a690:	eb03 0008 	add.w	r0, r3, r8
 801a694:	2800      	cmp	r0, #0
 801a696:	dc41      	bgt.n	801a71c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801a698:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a69c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a6a0:	9b00      	ldr	r3, [sp, #0]
 801a6a2:	2b00      	cmp	r3, #0
 801a6a4:	f340 8095 	ble.w	801a7d2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801a6a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a6ac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a6b0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a6b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a6b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a6ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a6be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a6c2:	eef0 6a62 	vmov.f32	s13, s5
 801a6c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a6ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a6ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a6d2:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801a6d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a6da:	eef0 6a43 	vmov.f32	s13, s6
 801a6de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a6e2:	ee12 2a90 	vmov	r2, s5
 801a6e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a6ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6ee:	ee13 2a10 	vmov	r2, s6
 801a6f2:	9311      	str	r3, [sp, #68]	; 0x44
 801a6f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a6f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6fa:	9312      	str	r3, [sp, #72]	; 0x48
 801a6fc:	9b00      	ldr	r3, [sp, #0]
 801a6fe:	9a03      	ldr	r2, [sp, #12]
 801a700:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a704:	3b01      	subs	r3, #1
 801a706:	9300      	str	r3, [sp, #0]
 801a708:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801a70c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a70e:	eeb0 3a67 	vmov.f32	s6, s15
 801a712:	bf08      	it	eq
 801a714:	4613      	moveq	r3, r2
 801a716:	eef0 2a47 	vmov.f32	s5, s14
 801a71a:	e72f      	b.n	801a57c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a71c:	140f      	asrs	r7, r1, #16
 801a71e:	d451      	bmi.n	801a7c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a720:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a724:	42bd      	cmp	r5, r7
 801a726:	dd4d      	ble.n	801a7c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a728:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a72c:	d44a      	bmi.n	801a7c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a72e:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a732:	4560      	cmp	r0, ip
 801a734:	dd46      	ble.n	801a7c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a736:	b22d      	sxth	r5, r5
 801a738:	fb0c 7505 	mla	r5, ip, r5, r7
 801a73c:	9802      	ldr	r0, [sp, #8]
 801a73e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801a742:	f06f 0501 	mvn.w	r5, #1
 801a746:	fb05 fb08 	mul.w	fp, r5, r8
 801a74a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a74e:	f834 500b 	ldrh.w	r5, [r4, fp]
 801a752:	122f      	asrs	r7, r5, #8
 801a754:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a758:	fb17 f706 	smulbb	r7, r7, r6
 801a75c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801a760:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a764:	00ed      	lsls	r5, r5, #3
 801a766:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801a76a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a76e:	10c7      	asrs	r7, r0, #3
 801a770:	b2ed      	uxtb	r5, r5
 801a772:	00c0      	lsls	r0, r0, #3
 801a774:	fb19 f906 	smulbb	r9, r9, r6
 801a778:	fb15 f506 	smulbb	r5, r5, r6
 801a77c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a780:	b2c0      	uxtb	r0, r0
 801a782:	fa1f fc8c 	uxth.w	ip, ip
 801a786:	fb07 970a 	mla	r7, r7, sl, r9
 801a78a:	fb00 500a 	mla	r0, r0, sl, r5
 801a78e:	b2bf      	uxth	r7, r7
 801a790:	b280      	uxth	r0, r0
 801a792:	f10c 0501 	add.w	r5, ip, #1
 801a796:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a79a:	f107 0901 	add.w	r9, r7, #1
 801a79e:	1c45      	adds	r5, r0, #1
 801a7a0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a7a4:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801a7a8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a7ac:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a7b0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a7b4:	ea45 0c0c 	orr.w	ip, r5, ip
 801a7b8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a7bc:	ea4c 0c09 	orr.w	ip, ip, r9
 801a7c0:	f824 c00b 	strh.w	ip, [r4, fp]
 801a7c4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a7c6:	4401      	add	r1, r0
 801a7c8:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a7ca:	f108 38ff 	add.w	r8, r8, #4294967295
 801a7ce:	4402      	add	r2, r0
 801a7d0:	e75e      	b.n	801a690 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801a7d2:	b005      	add	sp, #20
 801a7d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a7d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a7d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7dc:	b085      	sub	sp, #20
 801a7de:	4693      	mov	fp, r2
 801a7e0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a7e2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a7e4:	6870      	ldr	r0, [r6, #4]
 801a7e6:	9101      	str	r1, [sp, #4]
 801a7e8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a7ec:	fb00 2404 	mla	r4, r0, r4, r2
 801a7f0:	6832      	ldr	r2, [r6, #0]
 801a7f2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801a7f6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a7fa:	682a      	ldr	r2, [r5, #0]
 801a7fc:	9202      	str	r2, [sp, #8]
 801a7fe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a802:	9a01      	ldr	r2, [sp, #4]
 801a804:	2a00      	cmp	r2, #0
 801a806:	dc03      	bgt.n	801a810 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a808:	f1bb 0f00 	cmp.w	fp, #0
 801a80c:	f340 809a 	ble.w	801a944 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a810:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a812:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a816:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a81a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a81e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a820:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a824:	2b00      	cmp	r3, #0
 801a826:	dd0c      	ble.n	801a842 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801a828:	1406      	asrs	r6, r0, #16
 801a82a:	d405      	bmi.n	801a838 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a82c:	454e      	cmp	r6, r9
 801a82e:	da03      	bge.n	801a838 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a830:	1416      	asrs	r6, r2, #16
 801a832:	d401      	bmi.n	801a838 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a834:	4546      	cmp	r6, r8
 801a836:	db05      	blt.n	801a844 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a838:	4470      	add	r0, lr
 801a83a:	4462      	add	r2, ip
 801a83c:	3b01      	subs	r3, #1
 801a83e:	3402      	adds	r4, #2
 801a840:	e7f0      	b.n	801a824 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a842:	d00f      	beq.n	801a864 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a844:	1e5e      	subs	r6, r3, #1
 801a846:	fb0e 0706 	mla	r7, lr, r6, r0
 801a84a:	143f      	asrs	r7, r7, #16
 801a84c:	d541      	bpl.n	801a8d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801a84e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801a852:	4698      	mov	r8, r3
 801a854:	9603      	str	r6, [sp, #12]
 801a856:	f1b8 0f00 	cmp.w	r8, #0
 801a85a:	dc56      	bgt.n	801a90a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801a85c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a860:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a864:	9b01      	ldr	r3, [sp, #4]
 801a866:	2b00      	cmp	r3, #0
 801a868:	dd6c      	ble.n	801a944 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a86a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a86e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a872:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a876:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a878:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a87c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a880:	eeb0 6a62 	vmov.f32	s12, s5
 801a884:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a888:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a88c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a890:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a894:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a898:	eeb0 6a43 	vmov.f32	s12, s6
 801a89c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a8a0:	ee12 2a90 	vmov	r2, s5
 801a8a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a8a8:	fb92 fef3 	sdiv	lr, r2, r3
 801a8ac:	ee13 2a10 	vmov	r2, s6
 801a8b0:	fb92 fcf3 	sdiv	ip, r2, r3
 801a8b4:	9b01      	ldr	r3, [sp, #4]
 801a8b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a8ba:	3b01      	subs	r3, #1
 801a8bc:	9301      	str	r3, [sp, #4]
 801a8be:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a8c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a8c4:	eeb0 3a67 	vmov.f32	s6, s15
 801a8c8:	bf08      	it	eq
 801a8ca:	465b      	moveq	r3, fp
 801a8cc:	eef0 2a47 	vmov.f32	s5, s14
 801a8d0:	e797      	b.n	801a802 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a8d2:	454f      	cmp	r7, r9
 801a8d4:	dabb      	bge.n	801a84e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a8d6:	fb0c 2606 	mla	r6, ip, r6, r2
 801a8da:	1436      	asrs	r6, r6, #16
 801a8dc:	d4b7      	bmi.n	801a84e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a8de:	4546      	cmp	r6, r8
 801a8e0:	dab5      	bge.n	801a84e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a8e2:	461e      	mov	r6, r3
 801a8e4:	46a0      	mov	r8, r4
 801a8e6:	2e00      	cmp	r6, #0
 801a8e8:	ddb8      	ble.n	801a85c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a8ea:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a8ee:	9902      	ldr	r1, [sp, #8]
 801a8f0:	1417      	asrs	r7, r2, #16
 801a8f2:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a8f6:	fb0a 9707 	mla	r7, sl, r7, r9
 801a8fa:	4470      	add	r0, lr
 801a8fc:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a900:	f828 7b02 	strh.w	r7, [r8], #2
 801a904:	4462      	add	r2, ip
 801a906:	3e01      	subs	r6, #1
 801a908:	e7ed      	b.n	801a8e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801a90a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a90e:	d414      	bmi.n	801a93a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a910:	68ae      	ldr	r6, [r5, #8]
 801a912:	454e      	cmp	r6, r9
 801a914:	dd11      	ble.n	801a93a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a916:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a91a:	d40e      	bmi.n	801a93a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a91c:	68ef      	ldr	r7, [r5, #12]
 801a91e:	4557      	cmp	r7, sl
 801a920:	dd0b      	ble.n	801a93a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a922:	b236      	sxth	r6, r6
 801a924:	fb0a 9606 	mla	r6, sl, r6, r9
 801a928:	9f02      	ldr	r7, [sp, #8]
 801a92a:	f06f 0101 	mvn.w	r1, #1
 801a92e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a932:	fb01 f608 	mul.w	r6, r1, r8
 801a936:	9903      	ldr	r1, [sp, #12]
 801a938:	538f      	strh	r7, [r1, r6]
 801a93a:	4470      	add	r0, lr
 801a93c:	4462      	add	r2, ip
 801a93e:	f108 38ff 	add.w	r8, r8, #4294967295
 801a942:	e788      	b.n	801a856 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a944:	b005      	add	sp, #20
 801a946:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a94a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a94a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a94e:	b087      	sub	sp, #28
 801a950:	468b      	mov	fp, r1
 801a952:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a954:	9203      	str	r2, [sp, #12]
 801a956:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a95a:	9204      	str	r2, [sp, #16]
 801a95c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801a960:	6841      	ldr	r1, [r0, #4]
 801a962:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a966:	fb01 2505 	mla	r5, r1, r5, r2
 801a96a:	6802      	ldr	r2, [r0, #0]
 801a96c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801a970:	f8d9 2000 	ldr.w	r2, [r9]
 801a974:	9201      	str	r2, [sp, #4]
 801a976:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a97a:	f1bb 0f00 	cmp.w	fp, #0
 801a97e:	dc03      	bgt.n	801a988 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a980:	9a03      	ldr	r2, [sp, #12]
 801a982:	2a00      	cmp	r2, #0
 801a984:	f340 8159 	ble.w	801ac3a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a988:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a98a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a98e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a992:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a996:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a998:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a99c:	2b00      	cmp	r3, #0
 801a99e:	dd0e      	ble.n	801a9be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a9a0:	1402      	asrs	r2, r0, #16
 801a9a2:	d405      	bmi.n	801a9b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a9a4:	42ba      	cmp	r2, r7
 801a9a6:	da03      	bge.n	801a9b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a9a8:	140a      	asrs	r2, r1, #16
 801a9aa:	d401      	bmi.n	801a9b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a9ac:	42b2      	cmp	r2, r6
 801a9ae:	db07      	blt.n	801a9c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a9b0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a9b2:	4410      	add	r0, r2
 801a9b4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a9b6:	3b01      	subs	r3, #1
 801a9b8:	4411      	add	r1, r2
 801a9ba:	3502      	adds	r5, #2
 801a9bc:	e7ee      	b.n	801a99c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a9be:	d017      	beq.n	801a9f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a9c0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a9c2:	1e5a      	subs	r2, r3, #1
 801a9c4:	fb04 0402 	mla	r4, r4, r2, r0
 801a9c8:	1424      	asrs	r4, r4, #16
 801a9ca:	d409      	bmi.n	801a9e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a9cc:	42bc      	cmp	r4, r7
 801a9ce:	da07      	bge.n	801a9e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a9d0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a9d2:	fb04 1202 	mla	r2, r4, r2, r1
 801a9d6:	1412      	asrs	r2, r2, #16
 801a9d8:	d402      	bmi.n	801a9e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a9da:	42b2      	cmp	r2, r6
 801a9dc:	f2c0 80bf 	blt.w	801ab5e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a9e0:	2700      	movs	r7, #0
 801a9e2:	19da      	adds	r2, r3, r7
 801a9e4:	2a00      	cmp	r2, #0
 801a9e6:	dc3e      	bgt.n	801aa66 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a9e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a9ec:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a9f0:	f1bb 0f00 	cmp.w	fp, #0
 801a9f4:	f340 8121 	ble.w	801ac3a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a9f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a9fc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aa00:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801aa04:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa06:	f1bb 0b01 	subs.w	fp, fp, #1
 801aa0a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aa0e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aa12:	eeb0 6a62 	vmov.f32	s12, s5
 801aa16:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aa1a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa1e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aa22:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801aa26:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aa2a:	eeb0 6a43 	vmov.f32	s12, s6
 801aa2e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aa32:	ee12 2a90 	vmov	r2, s5
 801aa36:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aa3a:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa3e:	ee13 2a10 	vmov	r2, s6
 801aa42:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa46:	9313      	str	r3, [sp, #76]	; 0x4c
 801aa48:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa4a:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa4e:	9a03      	ldr	r2, [sp, #12]
 801aa50:	9314      	str	r3, [sp, #80]	; 0x50
 801aa52:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801aa56:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa58:	eeb0 3a67 	vmov.f32	s6, s15
 801aa5c:	bf08      	it	eq
 801aa5e:	4613      	moveq	r3, r2
 801aa60:	eef0 2a47 	vmov.f32	s5, s14
 801aa64:	e789      	b.n	801a97a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801aa66:	1406      	asrs	r6, r0, #16
 801aa68:	d42d      	bmi.n	801aac6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801aa6a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801aa6e:	42b4      	cmp	r4, r6
 801aa70:	dd29      	ble.n	801aac6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801aa72:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801aa76:	d426      	bmi.n	801aac6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801aa78:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801aa7c:	4562      	cmp	r2, ip
 801aa7e:	dd22      	ble.n	801aac6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801aa80:	b224      	sxth	r4, r4
 801aa82:	9a01      	ldr	r2, [sp, #4]
 801aa84:	fb0c 6404 	mla	r4, ip, r4, r6
 801aa88:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801aa8c:	0e22      	lsrs	r2, r4, #24
 801aa8e:	d01a      	beq.n	801aac6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801aa90:	9e04      	ldr	r6, [sp, #16]
 801aa92:	4372      	muls	r2, r6
 801aa94:	1c56      	adds	r6, r2, #1
 801aa96:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801aa9a:	1212      	asrs	r2, r2, #8
 801aa9c:	0a26      	lsrs	r6, r4, #8
 801aa9e:	2aff      	cmp	r2, #255	; 0xff
 801aaa0:	9605      	str	r6, [sp, #20]
 801aaa2:	d116      	bne.n	801aad2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801aaa4:	f06f 0201 	mvn.w	r2, #1
 801aaa8:	fb02 fc07 	mul.w	ip, r2, r7
 801aaac:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801aab0:	0962      	lsrs	r2, r4, #5
 801aab2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aab6:	f026 0607 	bic.w	r6, r6, #7
 801aaba:	4316      	orrs	r6, r2
 801aabc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801aac0:	4326      	orrs	r6, r4
 801aac2:	f825 600c 	strh.w	r6, [r5, ip]
 801aac6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aac8:	4410      	add	r0, r2
 801aaca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aacc:	3f01      	subs	r7, #1
 801aace:	4411      	add	r1, r2
 801aad0:	e787      	b.n	801a9e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801aad2:	f06f 0601 	mvn.w	r6, #1
 801aad6:	437e      	muls	r6, r7
 801aad8:	fa1f fa82 	uxth.w	sl, r2
 801aadc:	f835 8006 	ldrh.w	r8, [r5, r6]
 801aae0:	9602      	str	r6, [sp, #8]
 801aae2:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801aae6:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801aaea:	43d2      	mvns	r2, r2
 801aaec:	b2d2      	uxtb	r2, r2
 801aaee:	fb1c fc0a 	smulbb	ip, ip, sl
 801aaf2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801aaf6:	fb0e ce02 	mla	lr, lr, r2, ip
 801aafa:	b2e4      	uxtb	r4, r4
 801aafc:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801ab00:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ab04:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801ab08:	fa5f f888 	uxtb.w	r8, r8
 801ab0c:	fb14 f40a 	smulbb	r4, r4, sl
 801ab10:	fb08 4402 	mla	r4, r8, r2, r4
 801ab14:	fa1f fe8e 	uxth.w	lr, lr
 801ab18:	fb16 f60a 	smulbb	r6, r6, sl
 801ab1c:	b2a4      	uxth	r4, r4
 801ab1e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801ab22:	fb0c 6c02 	mla	ip, ip, r2, r6
 801ab26:	f10e 0201 	add.w	r2, lr, #1
 801ab2a:	1c66      	adds	r6, r4, #1
 801ab2c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801ab30:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801ab34:	fa1f fc8c 	uxth.w	ip, ip
 801ab38:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ab3c:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801ab40:	ea46 0e0e 	orr.w	lr, r6, lr
 801ab44:	f10c 0601 	add.w	r6, ip, #1
 801ab48:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801ab4c:	0976      	lsrs	r6, r6, #5
 801ab4e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ab52:	9a02      	ldr	r2, [sp, #8]
 801ab54:	ea4e 0e06 	orr.w	lr, lr, r6
 801ab58:	f825 e002 	strh.w	lr, [r5, r2]
 801ab5c:	e7b3      	b.n	801aac6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801ab5e:	f04f 0800 	mov.w	r8, #0
 801ab62:	eba3 0208 	sub.w	r2, r3, r8
 801ab66:	2a00      	cmp	r2, #0
 801ab68:	f77f af3e 	ble.w	801a9e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ab6c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801ab70:	1404      	asrs	r4, r0, #16
 801ab72:	140a      	asrs	r2, r1, #16
 801ab74:	fb06 4202 	mla	r2, r6, r2, r4
 801ab78:	9c01      	ldr	r4, [sp, #4]
 801ab7a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801ab7e:	0e22      	lsrs	r2, r4, #24
 801ab80:	d016      	beq.n	801abb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801ab82:	9e04      	ldr	r6, [sp, #16]
 801ab84:	4372      	muls	r2, r6
 801ab86:	1c56      	adds	r6, r2, #1
 801ab88:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801ab8c:	1212      	asrs	r2, r2, #8
 801ab8e:	2aff      	cmp	r2, #255	; 0xff
 801ab90:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801ab94:	d113      	bne.n	801abbe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801ab96:	0962      	lsrs	r2, r4, #5
 801ab98:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801ab9c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aba0:	f026 0607 	bic.w	r6, r6, #7
 801aba4:	4316      	orrs	r6, r2
 801aba6:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801abaa:	4326      	orrs	r6, r4
 801abac:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801abb0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801abb2:	4410      	add	r0, r2
 801abb4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801abb6:	f108 0801 	add.w	r8, r8, #1
 801abba:	4411      	add	r1, r2
 801abbc:	e7d1      	b.n	801ab62 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801abbe:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801abc2:	fa1f fa82 	uxth.w	sl, r2
 801abc6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801abca:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801abce:	43d2      	mvns	r2, r2
 801abd0:	b2d2      	uxtb	r2, r2
 801abd2:	fb17 f70a 	smulbb	r7, r7, sl
 801abd6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801abda:	fb0c 7c02 	mla	ip, ip, r2, r7
 801abde:	b2e4      	uxtb	r4, r4
 801abe0:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801abe4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801abe8:	fa5f fe8e 	uxtb.w	lr, lr
 801abec:	fb14 f40a 	smulbb	r4, r4, sl
 801abf0:	fb0e 4402 	mla	r4, lr, r2, r4
 801abf4:	b2f6      	uxtb	r6, r6
 801abf6:	fa1f fc8c 	uxth.w	ip, ip
 801abfa:	fb16 f60a 	smulbb	r6, r6, sl
 801abfe:	b2a4      	uxth	r4, r4
 801ac00:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ac04:	fb07 6702 	mla	r7, r7, r2, r6
 801ac08:	f10c 0201 	add.w	r2, ip, #1
 801ac0c:	1c66      	adds	r6, r4, #1
 801ac0e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801ac12:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801ac16:	b2bf      	uxth	r7, r7
 801ac18:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ac1c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ac20:	ea46 0c0c 	orr.w	ip, r6, ip
 801ac24:	1c7e      	adds	r6, r7, #1
 801ac26:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801ac2a:	0976      	lsrs	r6, r6, #5
 801ac2c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ac30:	ea4c 0c06 	orr.w	ip, ip, r6
 801ac34:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801ac38:	e7ba      	b.n	801abb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801ac3a:	b007      	add	sp, #28
 801ac3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ac40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ac40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac44:	b085      	sub	sp, #20
 801ac46:	468b      	mov	fp, r1
 801ac48:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ac4a:	9203      	str	r2, [sp, #12]
 801ac4c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ac50:	6841      	ldr	r1, [r0, #4]
 801ac52:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801ac56:	fb01 2404 	mla	r4, r1, r4, r2
 801ac5a:	6802      	ldr	r2, [r0, #0]
 801ac5c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ac60:	f8d8 2000 	ldr.w	r2, [r8]
 801ac64:	9201      	str	r2, [sp, #4]
 801ac66:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ac6a:	f1bb 0f00 	cmp.w	fp, #0
 801ac6e:	dc03      	bgt.n	801ac78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801ac70:	9a03      	ldr	r2, [sp, #12]
 801ac72:	2a00      	cmp	r2, #0
 801ac74:	f340 814f 	ble.w	801af16 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801ac78:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ac7a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801ac7e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801ac82:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ac86:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ac88:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ac8c:	2b00      	cmp	r3, #0
 801ac8e:	dd0e      	ble.n	801acae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ac90:	1408      	asrs	r0, r1, #16
 801ac92:	d405      	bmi.n	801aca0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ac94:	42b8      	cmp	r0, r7
 801ac96:	da03      	bge.n	801aca0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ac98:	1410      	asrs	r0, r2, #16
 801ac9a:	d401      	bmi.n	801aca0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ac9c:	42b0      	cmp	r0, r6
 801ac9e:	db07      	blt.n	801acb0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801aca0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801aca2:	4401      	add	r1, r0
 801aca4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801aca6:	3b01      	subs	r3, #1
 801aca8:	4402      	add	r2, r0
 801acaa:	3402      	adds	r4, #2
 801acac:	e7ee      	b.n	801ac8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801acae:	d017      	beq.n	801ace0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801acb0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801acb2:	1e58      	subs	r0, r3, #1
 801acb4:	fb05 1500 	mla	r5, r5, r0, r1
 801acb8:	142d      	asrs	r5, r5, #16
 801acba:	d409      	bmi.n	801acd0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801acbc:	42bd      	cmp	r5, r7
 801acbe:	da07      	bge.n	801acd0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801acc0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801acc2:	fb05 2000 	mla	r0, r5, r0, r2
 801acc6:	1400      	asrs	r0, r0, #16
 801acc8:	d402      	bmi.n	801acd0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801acca:	42b0      	cmp	r0, r6
 801accc:	f2c0 80ba 	blt.w	801ae44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801acd0:	2600      	movs	r6, #0
 801acd2:	1998      	adds	r0, r3, r6
 801acd4:	2800      	cmp	r0, #0
 801acd6:	dc3e      	bgt.n	801ad56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801acd8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801acdc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ace0:	f1bb 0f00 	cmp.w	fp, #0
 801ace4:	f340 8117 	ble.w	801af16 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801ace8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801acec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801acf0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801acf4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801acf6:	f1bb 0b01 	subs.w	fp, fp, #1
 801acfa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801acfe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ad02:	eeb0 6a62 	vmov.f32	s12, s5
 801ad06:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ad0a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad0e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad12:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ad16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad1a:	eeb0 6a43 	vmov.f32	s12, s6
 801ad1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad22:	ee12 2a90 	vmov	r2, s5
 801ad26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad2a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad2e:	ee13 2a10 	vmov	r2, s6
 801ad32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad36:	9311      	str	r3, [sp, #68]	; 0x44
 801ad38:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ad3a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad3e:	9a03      	ldr	r2, [sp, #12]
 801ad40:	9312      	str	r3, [sp, #72]	; 0x48
 801ad42:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ad46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ad48:	eeb0 3a67 	vmov.f32	s6, s15
 801ad4c:	bf08      	it	eq
 801ad4e:	4613      	moveq	r3, r2
 801ad50:	eef0 2a47 	vmov.f32	s5, s14
 801ad54:	e789      	b.n	801ac6a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801ad56:	140f      	asrs	r7, r1, #16
 801ad58:	d424      	bmi.n	801ada4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ad5a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801ad5e:	42bd      	cmp	r5, r7
 801ad60:	dd20      	ble.n	801ada4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ad62:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ad66:	d41d      	bmi.n	801ada4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ad68:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801ad6c:	4560      	cmp	r0, ip
 801ad6e:	dd19      	ble.n	801ada4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ad70:	b22d      	sxth	r5, r5
 801ad72:	fb0c 7505 	mla	r5, ip, r5, r7
 801ad76:	9801      	ldr	r0, [sp, #4]
 801ad78:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801ad7c:	0e07      	lsrs	r7, r0, #24
 801ad7e:	2fff      	cmp	r7, #255	; 0xff
 801ad80:	d116      	bne.n	801adb0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801ad82:	f06f 0501 	mvn.w	r5, #1
 801ad86:	fb05 f706 	mul.w	r7, r5, r6
 801ad8a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801ad8e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801ad92:	0945      	lsrs	r5, r0, #5
 801ad94:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ad98:	ea4c 0505 	orr.w	r5, ip, r5
 801ad9c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801ada0:	4305      	orrs	r5, r0
 801ada2:	53e5      	strh	r5, [r4, r7]
 801ada4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ada6:	4401      	add	r1, r0
 801ada8:	9812      	ldr	r0, [sp, #72]	; 0x48
 801adaa:	3e01      	subs	r6, #1
 801adac:	4402      	add	r2, r0
 801adae:	e790      	b.n	801acd2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801adb0:	b2fd      	uxtb	r5, r7
 801adb2:	2f00      	cmp	r7, #0
 801adb4:	d0f6      	beq.n	801ada4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801adb6:	f06f 0701 	mvn.w	r7, #1
 801adba:	4377      	muls	r7, r6
 801adbc:	fa1f f985 	uxth.w	r9, r5
 801adc0:	f834 e007 	ldrh.w	lr, [r4, r7]
 801adc4:	9702      	str	r7, [sp, #8]
 801adc6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801adca:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801adce:	43ed      	mvns	r5, r5
 801add0:	b2ed      	uxtb	r5, r5
 801add2:	fb17 f709 	smulbb	r7, r7, r9
 801add6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801adda:	fb0c 7c05 	mla	ip, ip, r5, r7
 801adde:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801ade2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801ade6:	b2c0      	uxtb	r0, r0
 801ade8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801adec:	fa5f fe8e 	uxtb.w	lr, lr
 801adf0:	fb10 f009 	smulbb	r0, r0, r9
 801adf4:	fb0e 0005 	mla	r0, lr, r5, r0
 801adf8:	b280      	uxth	r0, r0
 801adfa:	fa1f fc8c 	uxth.w	ip, ip
 801adfe:	fb1a fa09 	smulbb	sl, sl, r9
 801ae02:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ae06:	fb07 a705 	mla	r7, r7, r5, sl
 801ae0a:	f100 0a01 	add.w	sl, r0, #1
 801ae0e:	f10c 0501 	add.w	r5, ip, #1
 801ae12:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801ae16:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ae1a:	b2bf      	uxth	r7, r7
 801ae1c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ae20:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ae24:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ae28:	f107 0a01 	add.w	sl, r7, #1
 801ae2c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ae30:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ae34:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ae38:	9802      	ldr	r0, [sp, #8]
 801ae3a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ae3e:	f824 c000 	strh.w	ip, [r4, r0]
 801ae42:	e7af      	b.n	801ada4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ae44:	f04f 0e00 	mov.w	lr, #0
 801ae48:	eba3 000e 	sub.w	r0, r3, lr
 801ae4c:	2800      	cmp	r0, #0
 801ae4e:	f77f af43 	ble.w	801acd8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ae52:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801ae56:	140d      	asrs	r5, r1, #16
 801ae58:	1410      	asrs	r0, r2, #16
 801ae5a:	fb06 5000 	mla	r0, r6, r0, r5
 801ae5e:	9d01      	ldr	r5, [sp, #4]
 801ae60:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801ae64:	0e2e      	lsrs	r6, r5, #24
 801ae66:	2eff      	cmp	r6, #255	; 0xff
 801ae68:	d112      	bne.n	801ae90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801ae6a:	482c      	ldr	r0, [pc, #176]	; (801af1c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801ae6c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801ae70:	0968      	lsrs	r0, r5, #5
 801ae72:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ae76:	4330      	orrs	r0, r6
 801ae78:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ae7c:	4328      	orrs	r0, r5
 801ae7e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801ae82:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ae84:	4401      	add	r1, r0
 801ae86:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ae88:	f10e 0e01 	add.w	lr, lr, #1
 801ae8c:	4402      	add	r2, r0
 801ae8e:	e7db      	b.n	801ae48 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801ae90:	b2f0      	uxtb	r0, r6
 801ae92:	2e00      	cmp	r6, #0
 801ae94:	d0f5      	beq.n	801ae82 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ae96:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ae9a:	fa1f f980 	uxth.w	r9, r0
 801ae9e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801aea2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801aea6:	43c0      	mvns	r0, r0
 801aea8:	b2c0      	uxtb	r0, r0
 801aeaa:	fb16 f609 	smulbb	r6, r6, r9
 801aeae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801aeb2:	fb07 6700 	mla	r7, r7, r0, r6
 801aeb6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801aeba:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801aebe:	b2ed      	uxtb	r5, r5
 801aec0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801aec4:	fa5f fc8c 	uxtb.w	ip, ip
 801aec8:	fb15 f509 	smulbb	r5, r5, r9
 801aecc:	fb0c 5500 	mla	r5, ip, r0, r5
 801aed0:	b2bf      	uxth	r7, r7
 801aed2:	fb1a fa09 	smulbb	sl, sl, r9
 801aed6:	b2ad      	uxth	r5, r5
 801aed8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801aedc:	fb06 a600 	mla	r6, r6, r0, sl
 801aee0:	1c78      	adds	r0, r7, #1
 801aee2:	f105 0a01 	add.w	sl, r5, #1
 801aee6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801aeea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801aeee:	b2b6      	uxth	r6, r6
 801aef0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801aef4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801aef8:	ea4a 0707 	orr.w	r7, sl, r7
 801aefc:	f106 0a01 	add.w	sl, r6, #1
 801af00:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801af04:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801af08:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801af0c:	ea47 070a 	orr.w	r7, r7, sl
 801af10:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801af14:	e7b5      	b.n	801ae82 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801af16:	b005      	add	sp, #20
 801af18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af1c:	fffff800 	.word	0xfffff800

0801af20 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801af20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af24:	b087      	sub	sp, #28
 801af26:	468b      	mov	fp, r1
 801af28:	9815      	ldr	r0, [sp, #84]	; 0x54
 801af2a:	9203      	str	r2, [sp, #12]
 801af2c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801af30:	9204      	str	r2, [sp, #16]
 801af32:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801af36:	6841      	ldr	r1, [r0, #4]
 801af38:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801af3c:	fb01 2404 	mla	r4, r1, r4, r2
 801af40:	6802      	ldr	r2, [r0, #0]
 801af42:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801af46:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801af4a:	3201      	adds	r2, #1
 801af4c:	f022 0201 	bic.w	r2, r2, #1
 801af50:	9200      	str	r2, [sp, #0]
 801af52:	f8d9 2000 	ldr.w	r2, [r9]
 801af56:	9201      	str	r2, [sp, #4]
 801af58:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801af5c:	f1bb 0f00 	cmp.w	fp, #0
 801af60:	dc03      	bgt.n	801af6a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801af62:	9a03      	ldr	r2, [sp, #12]
 801af64:	2a00      	cmp	r2, #0
 801af66:	f340 8169 	ble.w	801b23c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801af6a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801af6c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801af70:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801af74:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801af78:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801af7a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801af7e:	2b00      	cmp	r3, #0
 801af80:	dd0e      	ble.n	801afa0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801af82:	1402      	asrs	r2, r0, #16
 801af84:	d405      	bmi.n	801af92 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801af86:	42ba      	cmp	r2, r7
 801af88:	da03      	bge.n	801af92 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801af8a:	140a      	asrs	r2, r1, #16
 801af8c:	d401      	bmi.n	801af92 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801af8e:	42b2      	cmp	r2, r6
 801af90:	db07      	blt.n	801afa2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801af92:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801af94:	4410      	add	r0, r2
 801af96:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801af98:	3b01      	subs	r3, #1
 801af9a:	4411      	add	r1, r2
 801af9c:	3402      	adds	r4, #2
 801af9e:	e7ee      	b.n	801af7e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801afa0:	d017      	beq.n	801afd2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801afa2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801afa4:	1e5a      	subs	r2, r3, #1
 801afa6:	fb05 0502 	mla	r5, r5, r2, r0
 801afaa:	142d      	asrs	r5, r5, #16
 801afac:	d409      	bmi.n	801afc2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801afae:	42bd      	cmp	r5, r7
 801afb0:	da07      	bge.n	801afc2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801afb2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801afb4:	fb05 1202 	mla	r2, r5, r2, r1
 801afb8:	1412      	asrs	r2, r2, #16
 801afba:	d402      	bmi.n	801afc2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801afbc:	42b2      	cmp	r2, r6
 801afbe:	f2c0 80c7 	blt.w	801b150 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801afc2:	2700      	movs	r7, #0
 801afc4:	19da      	adds	r2, r3, r7
 801afc6:	2a00      	cmp	r2, #0
 801afc8:	dc3e      	bgt.n	801b048 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801afca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801afce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801afd2:	f1bb 0f00 	cmp.w	fp, #0
 801afd6:	f340 8131 	ble.w	801b23c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801afda:	ee30 0a04 	vadd.f32	s0, s0, s8
 801afde:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801afe2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801afe6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801afe8:	f1bb 0b01 	subs.w	fp, fp, #1
 801afec:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aff0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aff4:	eeb0 6a62 	vmov.f32	s12, s5
 801aff8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801affc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b000:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b004:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b008:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b00c:	eeb0 6a43 	vmov.f32	s12, s6
 801b010:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b014:	ee12 2a90 	vmov	r2, s5
 801b018:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b01c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b020:	ee13 2a10 	vmov	r2, s6
 801b024:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b028:	9313      	str	r3, [sp, #76]	; 0x4c
 801b02a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b02c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b030:	9a03      	ldr	r2, [sp, #12]
 801b032:	9314      	str	r3, [sp, #80]	; 0x50
 801b034:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b038:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b03a:	eeb0 3a67 	vmov.f32	s6, s15
 801b03e:	bf08      	it	eq
 801b040:	4613      	moveq	r3, r2
 801b042:	eef0 2a47 	vmov.f32	s5, s14
 801b046:	e789      	b.n	801af5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b048:	1405      	asrs	r5, r0, #16
 801b04a:	d435      	bmi.n	801b0b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b04c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b050:	42aa      	cmp	r2, r5
 801b052:	dd31      	ble.n	801b0b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b054:	140e      	asrs	r6, r1, #16
 801b056:	d42f      	bmi.n	801b0b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b058:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b05c:	42b2      	cmp	r2, r6
 801b05e:	dd2b      	ble.n	801b0b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b060:	9a00      	ldr	r2, [sp, #0]
 801b062:	fb06 5502 	mla	r5, r6, r2, r5
 801b066:	086a      	lsrs	r2, r5, #1
 801b068:	9e01      	ldr	r6, [sp, #4]
 801b06a:	5cb2      	ldrb	r2, [r6, r2]
 801b06c:	07ee      	lsls	r6, r5, #31
 801b06e:	bf54      	ite	pl
 801b070:	f002 020f 	andpl.w	r2, r2, #15
 801b074:	1112      	asrmi	r2, r2, #4
 801b076:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b07a:	b2d2      	uxtb	r2, r2
 801b07c:	b1e2      	cbz	r2, 801b0b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b07e:	9d04      	ldr	r5, [sp, #16]
 801b080:	436a      	muls	r2, r5
 801b082:	1c55      	adds	r5, r2, #1
 801b084:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801b088:	4d6e      	ldr	r5, [pc, #440]	; (801b244 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801b08a:	682d      	ldr	r5, [r5, #0]
 801b08c:	1212      	asrs	r2, r2, #8
 801b08e:	0a2e      	lsrs	r6, r5, #8
 801b090:	2aff      	cmp	r2, #255	; 0xff
 801b092:	9605      	str	r6, [sp, #20]
 801b094:	d116      	bne.n	801b0c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b096:	f06f 0201 	mvn.w	r2, #1
 801b09a:	fb02 fc07 	mul.w	ip, r2, r7
 801b09e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b0a2:	096a      	lsrs	r2, r5, #5
 801b0a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b0a8:	f026 0607 	bic.w	r6, r6, #7
 801b0ac:	4316      	orrs	r6, r2
 801b0ae:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b0b2:	432e      	orrs	r6, r5
 801b0b4:	f824 600c 	strh.w	r6, [r4, ip]
 801b0b8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b0ba:	4410      	add	r0, r2
 801b0bc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b0be:	3f01      	subs	r7, #1
 801b0c0:	4411      	add	r1, r2
 801b0c2:	e77f      	b.n	801afc4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801b0c4:	f06f 0601 	mvn.w	r6, #1
 801b0c8:	437e      	muls	r6, r7
 801b0ca:	fa1f fa82 	uxth.w	sl, r2
 801b0ce:	f834 8006 	ldrh.w	r8, [r4, r6]
 801b0d2:	9602      	str	r6, [sp, #8]
 801b0d4:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b0d8:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801b0dc:	43d2      	mvns	r2, r2
 801b0de:	b2d2      	uxtb	r2, r2
 801b0e0:	fb1c fc0a 	smulbb	ip, ip, sl
 801b0e4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b0e8:	fb0e ce02 	mla	lr, lr, r2, ip
 801b0ec:	b2ed      	uxtb	r5, r5
 801b0ee:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b0f2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b0f6:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b0fa:	fa5f f888 	uxtb.w	r8, r8
 801b0fe:	fb15 f50a 	smulbb	r5, r5, sl
 801b102:	fb08 5502 	mla	r5, r8, r2, r5
 801b106:	fa1f fe8e 	uxth.w	lr, lr
 801b10a:	fb16 f60a 	smulbb	r6, r6, sl
 801b10e:	b2ad      	uxth	r5, r5
 801b110:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b114:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b118:	f10e 0201 	add.w	r2, lr, #1
 801b11c:	1c6e      	adds	r6, r5, #1
 801b11e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b122:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801b126:	fa1f fc8c 	uxth.w	ip, ip
 801b12a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b12e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b132:	ea46 0e0e 	orr.w	lr, r6, lr
 801b136:	f10c 0601 	add.w	r6, ip, #1
 801b13a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b13e:	0976      	lsrs	r6, r6, #5
 801b140:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b144:	9a02      	ldr	r2, [sp, #8]
 801b146:	ea4e 0e06 	orr.w	lr, lr, r6
 801b14a:	f824 e002 	strh.w	lr, [r4, r2]
 801b14e:	e7b3      	b.n	801b0b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b150:	f04f 0800 	mov.w	r8, #0
 801b154:	eba3 0208 	sub.w	r2, r3, r8
 801b158:	2a00      	cmp	r2, #0
 801b15a:	f77f af36 	ble.w	801afca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801b15e:	9e00      	ldr	r6, [sp, #0]
 801b160:	1402      	asrs	r2, r0, #16
 801b162:	140d      	asrs	r5, r1, #16
 801b164:	fb06 2505 	mla	r5, r6, r5, r2
 801b168:	086a      	lsrs	r2, r5, #1
 801b16a:	9e01      	ldr	r6, [sp, #4]
 801b16c:	5cb2      	ldrb	r2, [r6, r2]
 801b16e:	07ed      	lsls	r5, r5, #31
 801b170:	bf54      	ite	pl
 801b172:	f002 020f 	andpl.w	r2, r2, #15
 801b176:	1112      	asrmi	r2, r2, #4
 801b178:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b17c:	b2d2      	uxtb	r2, r2
 801b17e:	b1c2      	cbz	r2, 801b1b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801b180:	9d04      	ldr	r5, [sp, #16]
 801b182:	436a      	muls	r2, r5
 801b184:	1c55      	adds	r5, r2, #1
 801b186:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801b18a:	4d2e      	ldr	r5, [pc, #184]	; (801b244 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801b18c:	1212      	asrs	r2, r2, #8
 801b18e:	682e      	ldr	r6, [r5, #0]
 801b190:	2aff      	cmp	r2, #255	; 0xff
 801b192:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801b196:	d113      	bne.n	801b1c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801b198:	0972      	lsrs	r2, r6, #5
 801b19a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801b19e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b1a2:	f025 0507 	bic.w	r5, r5, #7
 801b1a6:	4315      	orrs	r5, r2
 801b1a8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801b1ac:	4335      	orrs	r5, r6
 801b1ae:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801b1b2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b1b4:	4410      	add	r0, r2
 801b1b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b1b8:	f108 0801 	add.w	r8, r8, #1
 801b1bc:	4411      	add	r1, r2
 801b1be:	e7c9      	b.n	801b154 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b1c0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801b1c4:	fa1f fa82 	uxth.w	sl, r2
 801b1c8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b1cc:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801b1d0:	43d2      	mvns	r2, r2
 801b1d2:	b2d2      	uxtb	r2, r2
 801b1d4:	fb17 f70a 	smulbb	r7, r7, sl
 801b1d8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b1dc:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b1e0:	b2f6      	uxtb	r6, r6
 801b1e2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b1e6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b1ea:	fa5f fe8e 	uxtb.w	lr, lr
 801b1ee:	fb16 f60a 	smulbb	r6, r6, sl
 801b1f2:	fb0e 6602 	mla	r6, lr, r2, r6
 801b1f6:	b2ed      	uxtb	r5, r5
 801b1f8:	fa1f fc8c 	uxth.w	ip, ip
 801b1fc:	fb15 f50a 	smulbb	r5, r5, sl
 801b200:	b2b6      	uxth	r6, r6
 801b202:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b206:	fb07 5702 	mla	r7, r7, r2, r5
 801b20a:	f10c 0201 	add.w	r2, ip, #1
 801b20e:	1c75      	adds	r5, r6, #1
 801b210:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b214:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801b218:	b2bf      	uxth	r7, r7
 801b21a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b21e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b222:	ea45 0c0c 	orr.w	ip, r5, ip
 801b226:	1c7d      	adds	r5, r7, #1
 801b228:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801b22c:	096d      	lsrs	r5, r5, #5
 801b22e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b232:	ea4c 0c05 	orr.w	ip, ip, r5
 801b236:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801b23a:	e7ba      	b.n	801b1b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801b23c:	b007      	add	sp, #28
 801b23e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b242:	bf00      	nop
 801b244:	20012f3c 	.word	0x20012f3c

0801b248 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b24c:	b087      	sub	sp, #28
 801b24e:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801b55c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801b252:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b254:	9205      	str	r2, [sp, #20]
 801b256:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b25a:	9101      	str	r1, [sp, #4]
 801b25c:	6841      	ldr	r1, [r0, #4]
 801b25e:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801b262:	fb01 2404 	mla	r4, r1, r4, r2
 801b266:	6802      	ldr	r2, [r0, #0]
 801b268:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b26c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801b270:	3201      	adds	r2, #1
 801b272:	f022 0201 	bic.w	r2, r2, #1
 801b276:	9202      	str	r2, [sp, #8]
 801b278:	f8db 2000 	ldr.w	r2, [fp]
 801b27c:	9203      	str	r2, [sp, #12]
 801b27e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b282:	9a01      	ldr	r2, [sp, #4]
 801b284:	2a00      	cmp	r2, #0
 801b286:	dc03      	bgt.n	801b290 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801b288:	9a05      	ldr	r2, [sp, #20]
 801b28a:	2a00      	cmp	r2, #0
 801b28c:	f340 8162 	ble.w	801b554 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801b290:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b292:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801b296:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801b29a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b29e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b2a0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b2a4:	2b00      	cmp	r3, #0
 801b2a6:	dd0e      	ble.n	801b2c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b2a8:	1402      	asrs	r2, r0, #16
 801b2aa:	d405      	bmi.n	801b2b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b2ac:	42ba      	cmp	r2, r7
 801b2ae:	da03      	bge.n	801b2b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b2b0:	140a      	asrs	r2, r1, #16
 801b2b2:	d401      	bmi.n	801b2b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b2b4:	42b2      	cmp	r2, r6
 801b2b6:	db07      	blt.n	801b2c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b2b8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b2ba:	4410      	add	r0, r2
 801b2bc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b2be:	3b01      	subs	r3, #1
 801b2c0:	4411      	add	r1, r2
 801b2c2:	3402      	adds	r4, #2
 801b2c4:	e7ee      	b.n	801b2a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801b2c6:	d017      	beq.n	801b2f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801b2c8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b2ca:	1e5a      	subs	r2, r3, #1
 801b2cc:	fb05 0502 	mla	r5, r5, r2, r0
 801b2d0:	142d      	asrs	r5, r5, #16
 801b2d2:	d409      	bmi.n	801b2e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b2d4:	42bd      	cmp	r5, r7
 801b2d6:	da07      	bge.n	801b2e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b2d8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b2da:	fb05 1202 	mla	r2, r5, r2, r1
 801b2de:	1412      	asrs	r2, r2, #16
 801b2e0:	d402      	bmi.n	801b2e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b2e2:	42b2      	cmp	r2, r6
 801b2e4:	f2c0 80c3 	blt.w	801b46e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801b2e8:	2500      	movs	r5, #0
 801b2ea:	195a      	adds	r2, r3, r5
 801b2ec:	2a00      	cmp	r2, #0
 801b2ee:	dc3f      	bgt.n	801b370 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b2f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b2f4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b2f8:	9b01      	ldr	r3, [sp, #4]
 801b2fa:	2b00      	cmp	r3, #0
 801b2fc:	f340 812a 	ble.w	801b554 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801b300:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b304:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b308:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b30c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b30e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b312:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b316:	eeb0 6a62 	vmov.f32	s12, s5
 801b31a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b31e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b322:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b326:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b32a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b32e:	eeb0 6a43 	vmov.f32	s12, s6
 801b332:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b336:	ee12 2a90 	vmov	r2, s5
 801b33a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b33e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b342:	ee13 2a10 	vmov	r2, s6
 801b346:	9313      	str	r3, [sp, #76]	; 0x4c
 801b348:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b34a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b34e:	9314      	str	r3, [sp, #80]	; 0x50
 801b350:	9b01      	ldr	r3, [sp, #4]
 801b352:	9a05      	ldr	r2, [sp, #20]
 801b354:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b358:	3b01      	subs	r3, #1
 801b35a:	9301      	str	r3, [sp, #4]
 801b35c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b360:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b362:	eeb0 3a67 	vmov.f32	s6, s15
 801b366:	bf08      	it	eq
 801b368:	4613      	moveq	r3, r2
 801b36a:	eef0 2a47 	vmov.f32	s5, s14
 801b36e:	e788      	b.n	801b282 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801b370:	1406      	asrs	r6, r0, #16
 801b372:	d42c      	bmi.n	801b3ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b374:	f8db 2008 	ldr.w	r2, [fp, #8]
 801b378:	42b2      	cmp	r2, r6
 801b37a:	dd28      	ble.n	801b3ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b37c:	140f      	asrs	r7, r1, #16
 801b37e:	d426      	bmi.n	801b3ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b380:	f8db 200c 	ldr.w	r2, [fp, #12]
 801b384:	42ba      	cmp	r2, r7
 801b386:	dd22      	ble.n	801b3ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b388:	9a02      	ldr	r2, [sp, #8]
 801b38a:	fb07 6602 	mla	r6, r7, r2, r6
 801b38e:	0872      	lsrs	r2, r6, #1
 801b390:	9f03      	ldr	r7, [sp, #12]
 801b392:	5cba      	ldrb	r2, [r7, r2]
 801b394:	07f6      	lsls	r6, r6, #31
 801b396:	bf54      	ite	pl
 801b398:	f002 020f 	andpl.w	r2, r2, #15
 801b39c:	1112      	asrmi	r2, r2, #4
 801b39e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b3a2:	b2d2      	uxtb	r2, r2
 801b3a4:	2aff      	cmp	r2, #255	; 0xff
 801b3a6:	d118      	bne.n	801b3da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801b3a8:	f8d8 2000 	ldr.w	r2, [r8]
 801b3ac:	f06f 0601 	mvn.w	r6, #1
 801b3b0:	fb06 f705 	mul.w	r7, r6, r5
 801b3b4:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801b3b8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801b3bc:	0956      	lsrs	r6, r2, #5
 801b3be:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b3c2:	ea4c 0606 	orr.w	r6, ip, r6
 801b3c6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b3ca:	4316      	orrs	r6, r2
 801b3cc:	53e6      	strh	r6, [r4, r7]
 801b3ce:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b3d0:	4410      	add	r0, r2
 801b3d2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b3d4:	3d01      	subs	r5, #1
 801b3d6:	4411      	add	r1, r2
 801b3d8:	e787      	b.n	801b2ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b3da:	2a00      	cmp	r2, #0
 801b3dc:	d0f7      	beq.n	801b3ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b3de:	f06f 0601 	mvn.w	r6, #1
 801b3e2:	436e      	muls	r6, r5
 801b3e4:	f8d8 c000 	ldr.w	ip, [r8]
 801b3e8:	f834 e006 	ldrh.w	lr, [r4, r6]
 801b3ec:	9604      	str	r6, [sp, #16]
 801b3ee:	fa1f f982 	uxth.w	r9, r2
 801b3f2:	ea4f 272e 	mov.w	r7, lr, asr #8
 801b3f6:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801b3fa:	43d2      	mvns	r2, r2
 801b3fc:	b2d2      	uxtb	r2, r2
 801b3fe:	fb16 f609 	smulbb	r6, r6, r9
 801b402:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b406:	fb07 6702 	mla	r7, r7, r2, r6
 801b40a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801b40e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b412:	fa5f fc8c 	uxtb.w	ip, ip
 801b416:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b41a:	fa5f fe8e 	uxtb.w	lr, lr
 801b41e:	fb1c fc09 	smulbb	ip, ip, r9
 801b422:	fb0e cc02 	mla	ip, lr, r2, ip
 801b426:	b2bf      	uxth	r7, r7
 801b428:	fb1a fa09 	smulbb	sl, sl, r9
 801b42c:	fa1f fc8c 	uxth.w	ip, ip
 801b430:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b434:	fb06 a602 	mla	r6, r6, r2, sl
 801b438:	1c7a      	adds	r2, r7, #1
 801b43a:	f10c 0a01 	add.w	sl, ip, #1
 801b43e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b442:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801b446:	b2b6      	uxth	r6, r6
 801b448:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b44c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b450:	ea4a 0707 	orr.w	r7, sl, r7
 801b454:	f106 0a01 	add.w	sl, r6, #1
 801b458:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b45c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b460:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b464:	9a04      	ldr	r2, [sp, #16]
 801b466:	ea47 070a 	orr.w	r7, r7, sl
 801b46a:	52a7      	strh	r7, [r4, r2]
 801b46c:	e7af      	b.n	801b3ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b46e:	f04f 0e00 	mov.w	lr, #0
 801b472:	eba3 020e 	sub.w	r2, r3, lr
 801b476:	2a00      	cmp	r2, #0
 801b478:	f77f af3a 	ble.w	801b2f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801b47c:	9e02      	ldr	r6, [sp, #8]
 801b47e:	1402      	asrs	r2, r0, #16
 801b480:	140d      	asrs	r5, r1, #16
 801b482:	fb06 2505 	mla	r5, r6, r5, r2
 801b486:	086a      	lsrs	r2, r5, #1
 801b488:	9e03      	ldr	r6, [sp, #12]
 801b48a:	5cb2      	ldrb	r2, [r6, r2]
 801b48c:	07ed      	lsls	r5, r5, #31
 801b48e:	bf54      	ite	pl
 801b490:	f002 020f 	andpl.w	r2, r2, #15
 801b494:	1112      	asrmi	r2, r2, #4
 801b496:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b49a:	b2d2      	uxtb	r2, r2
 801b49c:	2aff      	cmp	r2, #255	; 0xff
 801b49e:	d115      	bne.n	801b4cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801b4a0:	f8d8 5000 	ldr.w	r5, [r8]
 801b4a4:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801b4a8:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801b4ac:	096a      	lsrs	r2, r5, #5
 801b4ae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b4b2:	4332      	orrs	r2, r6
 801b4b4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b4b8:	432a      	orrs	r2, r5
 801b4ba:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801b4be:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b4c0:	4410      	add	r0, r2
 801b4c2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b4c4:	f10e 0e01 	add.w	lr, lr, #1
 801b4c8:	4411      	add	r1, r2
 801b4ca:	e7d2      	b.n	801b472 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801b4cc:	2a00      	cmp	r2, #0
 801b4ce:	d0f6      	beq.n	801b4be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b4d0:	f8d8 7000 	ldr.w	r7, [r8]
 801b4d4:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801b4d8:	fa1f f982 	uxth.w	r9, r2
 801b4dc:	ea4f 262c 	mov.w	r6, ip, asr #8
 801b4e0:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801b4e4:	43d2      	mvns	r2, r2
 801b4e6:	b2d2      	uxtb	r2, r2
 801b4e8:	fb15 f509 	smulbb	r5, r5, r9
 801b4ec:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b4f0:	fb06 5602 	mla	r6, r6, r2, r5
 801b4f4:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801b4f8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801b4fc:	b2ff      	uxtb	r7, r7
 801b4fe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b502:	fa5f fc8c 	uxtb.w	ip, ip
 801b506:	fb17 f709 	smulbb	r7, r7, r9
 801b50a:	fb0c 7702 	mla	r7, ip, r2, r7
 801b50e:	b2b6      	uxth	r6, r6
 801b510:	fb1a fa09 	smulbb	sl, sl, r9
 801b514:	b2bf      	uxth	r7, r7
 801b516:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b51a:	fb05 a502 	mla	r5, r5, r2, sl
 801b51e:	1c72      	adds	r2, r6, #1
 801b520:	f107 0a01 	add.w	sl, r7, #1
 801b524:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801b528:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b52c:	b2ad      	uxth	r5, r5
 801b52e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b532:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b536:	ea4a 0606 	orr.w	r6, sl, r6
 801b53a:	f105 0a01 	add.w	sl, r5, #1
 801b53e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b542:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b546:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b54a:	ea46 060a 	orr.w	r6, r6, sl
 801b54e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801b552:	e7b4      	b.n	801b4be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b554:	b007      	add	sp, #28
 801b556:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b55a:	bf00      	nop
 801b55c:	20012f3c 	.word	0x20012f3c

0801b560 <_ZN8touchgfx8LCD16bppD1Ev>:
 801b560:	4770      	bx	lr

0801b562 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801b562:	4770      	bx	lr

0801b564 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801b564:	4770      	bx	lr

0801b566 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801b566:	4770      	bx	lr

0801b568 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801b568:	4770      	bx	lr

0801b56a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801b56a:	4770      	bx	lr

0801b56c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801b56c:	4770      	bx	lr

0801b56e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801b56e:	4770      	bx	lr

0801b570 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801b570:	4770      	bx	lr

0801b572 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801b572:	4770      	bx	lr

0801b574 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801b574:	4770      	bx	lr

0801b576 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801b576:	4770      	bx	lr

0801b578 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801b578:	4770      	bx	lr

0801b57a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801b57a:	4770      	bx	lr

0801b57c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801b57c:	4770      	bx	lr

0801b57e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801b57e:	4770      	bx	lr

0801b580 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801b580:	4770      	bx	lr

0801b582 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801b582:	4770      	bx	lr

0801b584 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801b584:	4770      	bx	lr

0801b586 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801b586:	4770      	bx	lr

0801b588 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801b588:	4770      	bx	lr

0801b58a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801b58a:	4770      	bx	lr

0801b58c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801b58c:	4770      	bx	lr

0801b58e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801b58e:	4770      	bx	lr

0801b590 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801b590:	4770      	bx	lr

0801b592 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801b592:	4770      	bx	lr

0801b594 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801b594:	4770      	bx	lr

0801b596 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801b596:	4770      	bx	lr

0801b598 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801b598:	4770      	bx	lr

0801b59a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801b59a:	4770      	bx	lr

0801b59c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801b59c:	4770      	bx	lr

0801b59e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801b59e:	4770      	bx	lr

0801b5a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801b5a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b5a4:	b088      	sub	sp, #32
 801b5a6:	ac08      	add	r4, sp, #32
 801b5a8:	4606      	mov	r6, r0
 801b5aa:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801b5ae:	4620      	mov	r0, r4
 801b5b0:	4688      	mov	r8, r1
 801b5b2:	4691      	mov	r9, r2
 801b5b4:	f7fd fc62 	bl	8018e7c <_ZNK8touchgfx6Bitmap7getDataEv>
 801b5b8:	6833      	ldr	r3, [r6, #0]
 801b5ba:	4605      	mov	r5, r0
 801b5bc:	4620      	mov	r0, r4
 801b5be:	699f      	ldr	r7, [r3, #24]
 801b5c0:	f7fd fb70 	bl	8018ca4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801b5c4:	4682      	mov	sl, r0
 801b5c6:	4620      	mov	r0, r4
 801b5c8:	f7fd fba0 	bl	8018d0c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801b5cc:	9500      	str	r5, [sp, #0]
 801b5ce:	e9cd a001 	strd	sl, r0, [sp, #4]
 801b5d2:	464b      	mov	r3, r9
 801b5d4:	a806      	add	r0, sp, #24
 801b5d6:	4642      	mov	r2, r8
 801b5d8:	4631      	mov	r1, r6
 801b5da:	47b8      	blx	r7
 801b5dc:	4628      	mov	r0, r5
 801b5de:	b008      	add	sp, #32
 801b5e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801b5e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801b5e4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801b5e8:	2300      	movs	r3, #0
 801b5ea:	9300      	str	r3, [sp, #0]
 801b5ec:	4b3d      	ldr	r3, [pc, #244]	; (801b6e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801b5ee:	781b      	ldrb	r3, [r3, #0]
 801b5f0:	2b00      	cmp	r3, #0
 801b5f2:	d137      	bne.n	801b664 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801b5f4:	4a3c      	ldr	r2, [pc, #240]	; (801b6e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b5f6:	f9b2 2000 	ldrsh.w	r2, [r2]
 801b5fa:	f8ad 2004 	strh.w	r2, [sp, #4]
 801b5fe:	2b00      	cmp	r3, #0
 801b600:	d132      	bne.n	801b668 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801b602:	4b3a      	ldr	r3, [pc, #232]	; (801b6ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801b604:	f9b3 3000 	ldrsh.w	r3, [r3]
 801b608:	6808      	ldr	r0, [r1, #0]
 801b60a:	6849      	ldr	r1, [r1, #4]
 801b60c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801b610:	ac02      	add	r4, sp, #8
 801b612:	ab02      	add	r3, sp, #8
 801b614:	c303      	stmia	r3!, {r0, r1}
 801b616:	4669      	mov	r1, sp
 801b618:	4620      	mov	r0, r4
 801b61a:	f7f9 fdc1 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b61e:	4668      	mov	r0, sp
 801b620:	f7f9 fd7a 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b624:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801b628:	f8bd 2000 	ldrh.w	r2, [sp]
 801b62c:	4d30      	ldr	r5, [pc, #192]	; (801b6f0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801b62e:	4413      	add	r3, r2
 801b630:	f8ad 3008 	strh.w	r3, [sp, #8]
 801b634:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801b638:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801b63c:	6828      	ldr	r0, [r5, #0]
 801b63e:	4413      	add	r3, r2
 801b640:	f8ad 300a 	strh.w	r3, [sp, #10]
 801b644:	6803      	ldr	r3, [r0, #0]
 801b646:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b648:	4798      	blx	r3
 801b64a:	f010 0f01 	tst.w	r0, #1
 801b64e:	462f      	mov	r7, r5
 801b650:	d00c      	beq.n	801b66c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801b652:	6828      	ldr	r0, [r5, #0]
 801b654:	6803      	ldr	r3, [r0, #0]
 801b656:	e894 0006 	ldmia.w	r4, {r1, r2}
 801b65a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801b65c:	4798      	blx	r3
 801b65e:	b004      	add	sp, #16
 801b660:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b664:	4a21      	ldr	r2, [pc, #132]	; (801b6ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801b666:	e7c6      	b.n	801b5f6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801b668:	4b1f      	ldr	r3, [pc, #124]	; (801b6e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b66a:	e7cb      	b.n	801b604 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801b66c:	6838      	ldr	r0, [r7, #0]
 801b66e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801b672:	6803      	ldr	r3, [r0, #0]
 801b674:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801b678:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b67a:	4798      	blx	r3
 801b67c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801b680:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801b684:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801b688:	fb16 3602 	smlabb	r6, r6, r2, r3
 801b68c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b690:	6838      	ldr	r0, [r7, #0]
 801b692:	6803      	ldr	r3, [r0, #0]
 801b694:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b696:	4798      	blx	r3
 801b698:	4a13      	ldr	r2, [pc, #76]	; (801b6e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b69a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801b69e:	8813      	ldrh	r3, [r2, #0]
 801b6a0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801b6a4:	fb03 1404 	mla	r4, r3, r4, r1
 801b6a8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b6ac:	435d      	muls	r5, r3
 801b6ae:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b6b2:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801b6b6:	4691      	mov	r9, r2
 801b6b8:	6838      	ldr	r0, [r7, #0]
 801b6ba:	42ac      	cmp	r4, r5
 801b6bc:	6803      	ldr	r3, [r0, #0]
 801b6be:	d20e      	bcs.n	801b6de <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801b6c0:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801b6c4:	4632      	mov	r2, r6
 801b6c6:	4643      	mov	r3, r8
 801b6c8:	4621      	mov	r1, r4
 801b6ca:	47d0      	blx	sl
 801b6cc:	f8b9 3000 	ldrh.w	r3, [r9]
 801b6d0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b6d4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801b6d8:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b6dc:	e7ec      	b.n	801b6b8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801b6de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b6e0:	4798      	blx	r3
 801b6e2:	e7bc      	b.n	801b65e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801b6e4:	20012f24 	.word	0x20012f24
 801b6e8:	20012f26 	.word	0x20012f26
 801b6ec:	20012f28 	.word	0x20012f28
 801b6f0:	20012f2c 	.word	0x20012f2c

0801b6f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801b6f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b6f8:	b08b      	sub	sp, #44	; 0x2c
 801b6fa:	460f      	mov	r7, r1
 801b6fc:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801b700:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801b704:	4616      	mov	r6, r2
 801b706:	f1bb 0f00 	cmp.w	fp, #0
 801b70a:	d04a      	beq.n	801b7a2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801b70c:	6810      	ldr	r0, [r2, #0]
 801b70e:	6851      	ldr	r1, [r2, #4]
 801b710:	ad06      	add	r5, sp, #24
 801b712:	c503      	stmia	r5!, {r0, r1}
 801b714:	6818      	ldr	r0, [r3, #0]
 801b716:	6859      	ldr	r1, [r3, #4]
 801b718:	ad08      	add	r5, sp, #32
 801b71a:	c503      	stmia	r5!, {r0, r1}
 801b71c:	a806      	add	r0, sp, #24
 801b71e:	f7f9 fcfb 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b722:	4631      	mov	r1, r6
 801b724:	a808      	add	r0, sp, #32
 801b726:	f7f9 fd3b 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b72a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801b72e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801b732:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801b736:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801b73a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801b73e:	fb16 2103 	smlabb	r1, r6, r3, r2
 801b742:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801b746:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801b74a:	4f5f      	ldr	r7, [pc, #380]	; (801b8c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b74c:	440a      	add	r2, r1
 801b74e:	f8ad 2020 	strh.w	r2, [sp, #32]
 801b752:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801b756:	6838      	ldr	r0, [r7, #0]
 801b758:	4413      	add	r3, r2
 801b75a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801b75e:	6803      	ldr	r3, [r0, #0]
 801b760:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b762:	4798      	blx	r3
 801b764:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b768:	46b9      	mov	r9, r7
 801b76a:	d11d      	bne.n	801b7a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801b76c:	b9fc      	cbnz	r4, 801b7ae <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b76e:	f010 0f01 	tst.w	r0, #1
 801b772:	d01c      	beq.n	801b7ae <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b774:	f8d9 0000 	ldr.w	r0, [r9]
 801b778:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801b77c:	6801      	ldr	r1, [r0, #0]
 801b77e:	f8cd b00c 	str.w	fp, [sp, #12]
 801b782:	2700      	movs	r7, #0
 801b784:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801b788:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801b78c:	9402      	str	r4, [sp, #8]
 801b78e:	b2ad      	uxth	r5, r5
 801b790:	fa1f f488 	uxth.w	r4, r8
 801b794:	9501      	str	r5, [sp, #4]
 801b796:	9400      	str	r4, [sp, #0]
 801b798:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801b79a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801b79e:	4631      	mov	r1, r6
 801b7a0:	47a0      	blx	r4
 801b7a2:	b00b      	add	sp, #44	; 0x2c
 801b7a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b7a8:	f010 0f04 	tst.w	r0, #4
 801b7ac:	e7e1      	b.n	801b772 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801b7ae:	f8d9 0000 	ldr.w	r0, [r9]
 801b7b2:	6803      	ldr	r3, [r0, #0]
 801b7b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b7b6:	4798      	blx	r3
 801b7b8:	4b44      	ldr	r3, [pc, #272]	; (801b8cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801b7ba:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801b7be:	881a      	ldrh	r2, [r3, #0]
 801b7c0:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801b7c4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b7c8:	fb02 1404 	mla	r4, r2, r4, r1
 801b7cc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b7d0:	469a      	mov	sl, r3
 801b7d2:	fb05 f502 	mul.w	r5, r5, r2
 801b7d6:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801b7da:	d059      	beq.n	801b890 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801b7dc:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801b7e0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b7e4:	fa1f f28b 	uxth.w	r2, fp
 801b7e8:	fa1f f989 	uxth.w	r9, r9
 801b7ec:	469e      	mov	lr, r3
 801b7ee:	42ac      	cmp	r4, r5
 801b7f0:	d264      	bcs.n	801b8bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b7f2:	eb04 0a07 	add.w	sl, r4, r7
 801b7f6:	4554      	cmp	r4, sl
 801b7f8:	d23d      	bcs.n	801b876 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801b7fa:	8821      	ldrh	r1, [r4, #0]
 801b7fc:	f836 3b02 	ldrh.w	r3, [r6], #2
 801b800:	1208      	asrs	r0, r1, #8
 801b802:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801b806:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b80a:	fb10 f009 	smulbb	r0, r0, r9
 801b80e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801b812:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b816:	00c9      	lsls	r1, r1, #3
 801b818:	fb0c 0c02 	mla	ip, ip, r2, r0
 801b81c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b820:	10d8      	asrs	r0, r3, #3
 801b822:	b2c9      	uxtb	r1, r1
 801b824:	00db      	lsls	r3, r3, #3
 801b826:	fa1f fc8c 	uxth.w	ip, ip
 801b82a:	fb1b fb09 	smulbb	fp, fp, r9
 801b82e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b832:	b2db      	uxtb	r3, r3
 801b834:	fb11 f109 	smulbb	r1, r1, r9
 801b838:	fb00 b002 	mla	r0, r0, r2, fp
 801b83c:	fb03 1302 	mla	r3, r3, r2, r1
 801b840:	f10c 0b01 	add.w	fp, ip, #1
 801b844:	b29b      	uxth	r3, r3
 801b846:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801b84a:	b280      	uxth	r0, r0
 801b84c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801b850:	f103 0c01 	add.w	ip, r3, #1
 801b854:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b858:	1c43      	adds	r3, r0, #1
 801b85a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b85e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b862:	0940      	lsrs	r0, r0, #5
 801b864:	ea4c 0c0b 	orr.w	ip, ip, fp
 801b868:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b86c:	ea4c 0c00 	orr.w	ip, ip, r0
 801b870:	f824 cb02 	strh.w	ip, [r4], #2
 801b874:	e7bf      	b.n	801b7f6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801b876:	f8be 3000 	ldrh.w	r3, [lr]
 801b87a:	eba3 0308 	sub.w	r3, r3, r8
 801b87e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b882:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b886:	eba3 0308 	sub.w	r3, r3, r8
 801b88a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b88e:	e7ae      	b.n	801b7ee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801b890:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b894:	f8d9 0000 	ldr.w	r0, [r9]
 801b898:	42ac      	cmp	r4, r5
 801b89a:	6803      	ldr	r3, [r0, #0]
 801b89c:	d20e      	bcs.n	801b8bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b89e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801b8a2:	4632      	mov	r2, r6
 801b8a4:	463b      	mov	r3, r7
 801b8a6:	4621      	mov	r1, r4
 801b8a8:	47c0      	blx	r8
 801b8aa:	f8ba 3000 	ldrh.w	r3, [sl]
 801b8ae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b8b2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b8b6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b8ba:	e7eb      	b.n	801b894 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801b8bc:	4b02      	ldr	r3, [pc, #8]	; (801b8c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b8be:	6818      	ldr	r0, [r3, #0]
 801b8c0:	6803      	ldr	r3, [r0, #0]
 801b8c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b8c4:	4798      	blx	r3
 801b8c6:	e76c      	b.n	801b7a2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801b8c8:	20012f2c 	.word	0x20012f2c
 801b8cc:	20012f26 	.word	0x20012f26

0801b8d0 <_ZN8touchgfx8LCD16bppD0Ev>:
 801b8d0:	b510      	push	{r4, lr}
 801b8d2:	2184      	movs	r1, #132	; 0x84
 801b8d4:	4604      	mov	r4, r0
 801b8d6:	f00d fe4a 	bl	802956e <_ZdlPvj>
 801b8da:	4620      	mov	r0, r4
 801b8dc:	bd10      	pop	{r4, pc}

0801b8de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801b8de:	b510      	push	{r4, lr}
 801b8e0:	2104      	movs	r1, #4
 801b8e2:	4604      	mov	r4, r0
 801b8e4:	f00d fe43 	bl	802956e <_ZdlPvj>
 801b8e8:	4620      	mov	r0, r4
 801b8ea:	bd10      	pop	{r4, pc}

0801b8ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801b8ec:	b510      	push	{r4, lr}
 801b8ee:	2104      	movs	r1, #4
 801b8f0:	4604      	mov	r4, r0
 801b8f2:	f00d fe3c 	bl	802956e <_ZdlPvj>
 801b8f6:	4620      	mov	r0, r4
 801b8f8:	bd10      	pop	{r4, pc}

0801b8fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801b8fa:	b510      	push	{r4, lr}
 801b8fc:	f640 0144 	movw	r1, #2116	; 0x844
 801b900:	4604      	mov	r4, r0
 801b902:	f00d fe34 	bl	802956e <_ZdlPvj>
 801b906:	4620      	mov	r0, r4
 801b908:	bd10      	pop	{r4, pc}

0801b90a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b90a:	b510      	push	{r4, lr}
 801b90c:	2104      	movs	r1, #4
 801b90e:	4604      	mov	r4, r0
 801b910:	f00d fe2d 	bl	802956e <_ZdlPvj>
 801b914:	4620      	mov	r0, r4
 801b916:	bd10      	pop	{r4, pc}

0801b918 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b918:	b510      	push	{r4, lr}
 801b91a:	2104      	movs	r1, #4
 801b91c:	4604      	mov	r4, r0
 801b91e:	f00d fe26 	bl	802956e <_ZdlPvj>
 801b922:	4620      	mov	r0, r4
 801b924:	bd10      	pop	{r4, pc}

0801b926 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b926:	b510      	push	{r4, lr}
 801b928:	2104      	movs	r1, #4
 801b92a:	4604      	mov	r4, r0
 801b92c:	f00d fe1f 	bl	802956e <_ZdlPvj>
 801b930:	4620      	mov	r0, r4
 801b932:	bd10      	pop	{r4, pc}

0801b934 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b934:	b510      	push	{r4, lr}
 801b936:	2104      	movs	r1, #4
 801b938:	4604      	mov	r4, r0
 801b93a:	f00d fe18 	bl	802956e <_ZdlPvj>
 801b93e:	4620      	mov	r0, r4
 801b940:	bd10      	pop	{r4, pc}

0801b942 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b942:	b510      	push	{r4, lr}
 801b944:	2104      	movs	r1, #4
 801b946:	4604      	mov	r4, r0
 801b948:	f00d fe11 	bl	802956e <_ZdlPvj>
 801b94c:	4620      	mov	r0, r4
 801b94e:	bd10      	pop	{r4, pc}

0801b950 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801b950:	b510      	push	{r4, lr}
 801b952:	2104      	movs	r1, #4
 801b954:	4604      	mov	r4, r0
 801b956:	f00d fe0a 	bl	802956e <_ZdlPvj>
 801b95a:	4620      	mov	r0, r4
 801b95c:	bd10      	pop	{r4, pc}

0801b95e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b95e:	b510      	push	{r4, lr}
 801b960:	2104      	movs	r1, #4
 801b962:	4604      	mov	r4, r0
 801b964:	f00d fe03 	bl	802956e <_ZdlPvj>
 801b968:	4620      	mov	r0, r4
 801b96a:	bd10      	pop	{r4, pc}

0801b96c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801b96c:	b510      	push	{r4, lr}
 801b96e:	2104      	movs	r1, #4
 801b970:	4604      	mov	r4, r0
 801b972:	f00d fdfc 	bl	802956e <_ZdlPvj>
 801b976:	4620      	mov	r0, r4
 801b978:	bd10      	pop	{r4, pc}

0801b97a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b97a:	b510      	push	{r4, lr}
 801b97c:	2104      	movs	r1, #4
 801b97e:	4604      	mov	r4, r0
 801b980:	f00d fdf5 	bl	802956e <_ZdlPvj>
 801b984:	4620      	mov	r0, r4
 801b986:	bd10      	pop	{r4, pc}

0801b988 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b988:	b510      	push	{r4, lr}
 801b98a:	2104      	movs	r1, #4
 801b98c:	4604      	mov	r4, r0
 801b98e:	f00d fdee 	bl	802956e <_ZdlPvj>
 801b992:	4620      	mov	r0, r4
 801b994:	bd10      	pop	{r4, pc}

0801b996 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b996:	b510      	push	{r4, lr}
 801b998:	2104      	movs	r1, #4
 801b99a:	4604      	mov	r4, r0
 801b99c:	f00d fde7 	bl	802956e <_ZdlPvj>
 801b9a0:	4620      	mov	r0, r4
 801b9a2:	bd10      	pop	{r4, pc}

0801b9a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b9a4:	b510      	push	{r4, lr}
 801b9a6:	2104      	movs	r1, #4
 801b9a8:	4604      	mov	r4, r0
 801b9aa:	f00d fde0 	bl	802956e <_ZdlPvj>
 801b9ae:	4620      	mov	r0, r4
 801b9b0:	bd10      	pop	{r4, pc}

0801b9b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b9b2:	b510      	push	{r4, lr}
 801b9b4:	2104      	movs	r1, #4
 801b9b6:	4604      	mov	r4, r0
 801b9b8:	f00d fdd9 	bl	802956e <_ZdlPvj>
 801b9bc:	4620      	mov	r0, r4
 801b9be:	bd10      	pop	{r4, pc}

0801b9c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b9c0:	b510      	push	{r4, lr}
 801b9c2:	2104      	movs	r1, #4
 801b9c4:	4604      	mov	r4, r0
 801b9c6:	f00d fdd2 	bl	802956e <_ZdlPvj>
 801b9ca:	4620      	mov	r0, r4
 801b9cc:	bd10      	pop	{r4, pc}

0801b9ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b9ce:	b510      	push	{r4, lr}
 801b9d0:	2104      	movs	r1, #4
 801b9d2:	4604      	mov	r4, r0
 801b9d4:	f00d fdcb 	bl	802956e <_ZdlPvj>
 801b9d8:	4620      	mov	r0, r4
 801b9da:	bd10      	pop	{r4, pc}

0801b9dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b9dc:	b510      	push	{r4, lr}
 801b9de:	2104      	movs	r1, #4
 801b9e0:	4604      	mov	r4, r0
 801b9e2:	f00d fdc4 	bl	802956e <_ZdlPvj>
 801b9e6:	4620      	mov	r0, r4
 801b9e8:	bd10      	pop	{r4, pc}

0801b9ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b9ea:	b510      	push	{r4, lr}
 801b9ec:	2104      	movs	r1, #4
 801b9ee:	4604      	mov	r4, r0
 801b9f0:	f00d fdbd 	bl	802956e <_ZdlPvj>
 801b9f4:	4620      	mov	r0, r4
 801b9f6:	bd10      	pop	{r4, pc}

0801b9f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b9f8:	b510      	push	{r4, lr}
 801b9fa:	2104      	movs	r1, #4
 801b9fc:	4604      	mov	r4, r0
 801b9fe:	f00d fdb6 	bl	802956e <_ZdlPvj>
 801ba02:	4620      	mov	r0, r4
 801ba04:	bd10      	pop	{r4, pc}

0801ba06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ba06:	b510      	push	{r4, lr}
 801ba08:	2104      	movs	r1, #4
 801ba0a:	4604      	mov	r4, r0
 801ba0c:	f00d fdaf 	bl	802956e <_ZdlPvj>
 801ba10:	4620      	mov	r0, r4
 801ba12:	bd10      	pop	{r4, pc}

0801ba14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ba14:	b510      	push	{r4, lr}
 801ba16:	2104      	movs	r1, #4
 801ba18:	4604      	mov	r4, r0
 801ba1a:	f00d fda8 	bl	802956e <_ZdlPvj>
 801ba1e:	4620      	mov	r0, r4
 801ba20:	bd10      	pop	{r4, pc}

0801ba22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ba22:	b510      	push	{r4, lr}
 801ba24:	2104      	movs	r1, #4
 801ba26:	4604      	mov	r4, r0
 801ba28:	f00d fda1 	bl	802956e <_ZdlPvj>
 801ba2c:	4620      	mov	r0, r4
 801ba2e:	bd10      	pop	{r4, pc}

0801ba30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ba30:	b510      	push	{r4, lr}
 801ba32:	2104      	movs	r1, #4
 801ba34:	4604      	mov	r4, r0
 801ba36:	f00d fd9a 	bl	802956e <_ZdlPvj>
 801ba3a:	4620      	mov	r0, r4
 801ba3c:	bd10      	pop	{r4, pc}

0801ba3e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ba3e:	b510      	push	{r4, lr}
 801ba40:	2104      	movs	r1, #4
 801ba42:	4604      	mov	r4, r0
 801ba44:	f00d fd93 	bl	802956e <_ZdlPvj>
 801ba48:	4620      	mov	r0, r4
 801ba4a:	bd10      	pop	{r4, pc}

0801ba4c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ba4c:	b510      	push	{r4, lr}
 801ba4e:	2104      	movs	r1, #4
 801ba50:	4604      	mov	r4, r0
 801ba52:	f00d fd8c 	bl	802956e <_ZdlPvj>
 801ba56:	4620      	mov	r0, r4
 801ba58:	bd10      	pop	{r4, pc}

0801ba5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801ba5a:	b510      	push	{r4, lr}
 801ba5c:	2104      	movs	r1, #4
 801ba5e:	4604      	mov	r4, r0
 801ba60:	f00d fd85 	bl	802956e <_ZdlPvj>
 801ba64:	4620      	mov	r0, r4
 801ba66:	bd10      	pop	{r4, pc}

0801ba68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801ba68:	b510      	push	{r4, lr}
 801ba6a:	2104      	movs	r1, #4
 801ba6c:	4604      	mov	r4, r0
 801ba6e:	f00d fd7e 	bl	802956e <_ZdlPvj>
 801ba72:	4620      	mov	r0, r4
 801ba74:	bd10      	pop	{r4, pc}

0801ba76 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801ba76:	b510      	push	{r4, lr}
 801ba78:	2104      	movs	r1, #4
 801ba7a:	4604      	mov	r4, r0
 801ba7c:	f00d fd77 	bl	802956e <_ZdlPvj>
 801ba80:	4620      	mov	r0, r4
 801ba82:	bd10      	pop	{r4, pc}

0801ba84 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801ba84:	b510      	push	{r4, lr}
 801ba86:	2104      	movs	r1, #4
 801ba88:	4604      	mov	r4, r0
 801ba8a:	f00d fd70 	bl	802956e <_ZdlPvj>
 801ba8e:	4620      	mov	r0, r4
 801ba90:	bd10      	pop	{r4, pc}
	...

0801ba94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801ba94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba98:	b08f      	sub	sp, #60	; 0x3c
 801ba9a:	461c      	mov	r4, r3
 801ba9c:	9205      	str	r2, [sp, #20]
 801ba9e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801baa2:	9100      	str	r1, [sp, #0]
 801baa4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801baa6:	9201      	str	r2, [sp, #4]
 801baa8:	2a00      	cmp	r2, #0
 801baaa:	f000 8115 	beq.w	801bcd8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801baae:	6820      	ldr	r0, [r4, #0]
 801bab0:	6861      	ldr	r1, [r4, #4]
 801bab2:	aa0a      	add	r2, sp, #40	; 0x28
 801bab4:	c203      	stmia	r2!, {r0, r1}
 801bab6:	6818      	ldr	r0, [r3, #0]
 801bab8:	6859      	ldr	r1, [r3, #4]
 801baba:	aa0c      	add	r2, sp, #48	; 0x30
 801babc:	c203      	stmia	r2!, {r0, r1}
 801babe:	a80a      	add	r0, sp, #40	; 0x28
 801bac0:	f7f9 fb2a 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bac4:	4621      	mov	r1, r4
 801bac6:	a80c      	add	r0, sp, #48	; 0x30
 801bac8:	f7f9 fb6a 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bacc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801bad0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801bad4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801bad8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801badc:	bfde      	ittt	le
 801bade:	b2b3      	uxthle	r3, r6
 801bae0:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801bae4:	fb92 f3f3 	sdivle	r3, r2, r3
 801bae8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801baec:	bfc8      	it	gt
 801baee:	2301      	movgt	r3, #1
 801baf0:	fb92 f1f3 	sdiv	r1, r2, r3
 801baf4:	fa1f fc81 	uxth.w	ip, r1
 801baf8:	fb0c 2413 	mls	r4, ip, r3, r2
 801bafc:	fb14 f406 	smulbb	r4, r4, r6
 801bb00:	441d      	add	r5, r3
 801bb02:	4404      	add	r4, r0
 801bb04:	4661      	mov	r1, ip
 801bb06:	3d01      	subs	r5, #1
 801bb08:	b2a4      	uxth	r4, r4
 801bb0a:	fb95 f5f3 	sdiv	r5, r5, r3
 801bb0e:	b131      	cbz	r1, 801bb1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801bb10:	9b05      	ldr	r3, [sp, #20]
 801bb12:	9900      	ldr	r1, [sp, #0]
 801bb14:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801bb18:	ba1b      	rev	r3, r3
 801bb1a:	4419      	add	r1, r3
 801bb1c:	9100      	str	r1, [sp, #0]
 801bb1e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801bb22:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801bb26:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801bb2a:	4418      	add	r0, r3
 801bb2c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801bb30:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801bb34:	441a      	add	r2, r3
 801bb36:	4b6a      	ldr	r3, [pc, #424]	; (801bce0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801bb38:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801bb3c:	6818      	ldr	r0, [r3, #0]
 801bb3e:	6803      	ldr	r3, [r0, #0]
 801bb40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bb42:	4798      	blx	r3
 801bb44:	4967      	ldr	r1, [pc, #412]	; (801bce4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801bb46:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801bb4a:	880b      	ldrh	r3, [r1, #0]
 801bb4c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801bb50:	9109      	str	r1, [sp, #36]	; 0x24
 801bb52:	fb03 c202 	mla	r2, r3, r2, ip
 801bb56:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801bb5a:	4373      	muls	r3, r6
 801bb5c:	b2ad      	uxth	r5, r5
 801bb5e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801bb62:	00ad      	lsls	r5, r5, #2
 801bb64:	9306      	str	r3, [sp, #24]
 801bb66:	1d2b      	adds	r3, r5, #4
 801bb68:	9307      	str	r3, [sp, #28]
 801bb6a:	9b01      	ldr	r3, [sp, #4]
 801bb6c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801bb70:	9103      	str	r1, [sp, #12]
 801bb72:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801bb76:	2c00      	cmp	r4, #0
 801bb78:	bf0c      	ite	eq
 801bb7a:	46c6      	moveq	lr, r8
 801bb7c:	f04f 0e00 	movne.w	lr, #0
 801bb80:	2300      	movs	r3, #0
 801bb82:	b292      	uxth	r2, r2
 801bb84:	fa1f fe8e 	uxth.w	lr, lr
 801bb88:	9302      	str	r3, [sp, #8]
 801bb8a:	9204      	str	r2, [sp, #16]
 801bb8c:	9a06      	ldr	r2, [sp, #24]
 801bb8e:	4282      	cmp	r2, r0
 801bb90:	f240 809d 	bls.w	801bcce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801bb94:	b963      	cbnz	r3, 801bbb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801bb96:	9b00      	ldr	r3, [sp, #0]
 801bb98:	781a      	ldrb	r2, [r3, #0]
 801bb9a:	0993      	lsrs	r3, r2, #6
 801bb9c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801bba0:	9202      	str	r2, [sp, #8]
 801bba2:	1e5a      	subs	r2, r3, #1
 801bba4:	2a02      	cmp	r2, #2
 801bba6:	d815      	bhi.n	801bbd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801bba8:	9a00      	ldr	r2, [sp, #0]
 801bbaa:	3201      	adds	r2, #1
 801bbac:	9200      	str	r2, [sp, #0]
 801bbae:	b29b      	uxth	r3, r3
 801bbb0:	b1b4      	cbz	r4, 801bbe0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801bbb2:	429c      	cmp	r4, r3
 801bbb4:	bf95      	itete	ls
 801bbb6:	1b1c      	subls	r4, r3, r4
 801bbb8:	1ae4      	subhi	r4, r4, r3
 801bbba:	fa1f fa84 	uxthls.w	sl, r4
 801bbbe:	b2a4      	uxthhi	r4, r4
 801bbc0:	bf87      	ittee	hi
 801bbc2:	4671      	movhi	r1, lr
 801bbc4:	f04f 0a00 	movhi.w	sl, #0
 801bbc8:	fa1f f188 	uxthls.w	r1, r8
 801bbcc:	2400      	movls	r4, #0
 801bbce:	4653      	mov	r3, sl
 801bbd0:	468e      	mov	lr, r1
 801bbd2:	e7db      	b.n	801bb8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801bbd4:	9a00      	ldr	r2, [sp, #0]
 801bbd6:	9b00      	ldr	r3, [sp, #0]
 801bbd8:	3202      	adds	r2, #2
 801bbda:	785b      	ldrb	r3, [r3, #1]
 801bbdc:	9200      	str	r2, [sp, #0]
 801bbde:	e7e7      	b.n	801bbb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801bbe0:	2202      	movs	r2, #2
 801bbe2:	4615      	mov	r5, r2
 801bbe4:	9907      	ldr	r1, [sp, #28]
 801bbe6:	9a02      	ldr	r2, [sp, #8]
 801bbe8:	fb15 1202 	smlabb	r2, r5, r2, r1
 801bbec:	9905      	ldr	r1, [sp, #20]
 801bbee:	4573      	cmp	r3, lr
 801bbf0:	f831 c002 	ldrh.w	ip, [r1, r2]
 801bbf4:	9a01      	ldr	r2, [sp, #4]
 801bbf6:	bf2b      	itete	cs
 801bbf8:	eba3 0a0e 	subcs.w	sl, r3, lr
 801bbfc:	ebae 0103 	subcc.w	r1, lr, r3
 801bc00:	46f1      	movcs	r9, lr
 801bc02:	4699      	movcc	r9, r3
 801bc04:	bf27      	ittee	cs
 801bc06:	fa1f fa8a 	uxthcs.w	sl, sl
 801bc0a:	4621      	movcs	r1, r4
 801bc0c:	b289      	uxthcc	r1, r1
 801bc0e:	46a2      	movcc	sl, r4
 801bc10:	2aff      	cmp	r2, #255	; 0xff
 801bc12:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801bc16:	d105      	bne.n	801bc24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801bc18:	4481      	add	r9, r0
 801bc1a:	4581      	cmp	r9, r0
 801bc1c:	d045      	beq.n	801bcaa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801bc1e:	f820 cb02 	strh.w	ip, [r0], #2
 801bc22:	e7fa      	b.n	801bc1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801bc24:	9d03      	ldr	r5, [sp, #12]
 801bc26:	ea4f 222c 	mov.w	r2, ip, asr #8
 801bc2a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801bc2e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801bc32:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bc36:	436a      	muls	r2, r5
 801bc38:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801bc3c:	fa5f fc8c 	uxtb.w	ip, ip
 801bc40:	9208      	str	r2, [sp, #32]
 801bc42:	fb0b fb05 	mul.w	fp, fp, r5
 801bc46:	fb0c fc05 	mul.w	ip, ip, r5
 801bc4a:	4481      	add	r9, r0
 801bc4c:	4581      	cmp	r9, r0
 801bc4e:	d02c      	beq.n	801bcaa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801bc50:	8802      	ldrh	r2, [r0, #0]
 801bc52:	9d04      	ldr	r5, [sp, #16]
 801bc54:	9f04      	ldr	r7, [sp, #16]
 801bc56:	1216      	asrs	r6, r2, #8
 801bc58:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bc5c:	fb16 f605 	smulbb	r6, r6, r5
 801bc60:	9d08      	ldr	r5, [sp, #32]
 801bc62:	442e      	add	r6, r5
 801bc64:	10d5      	asrs	r5, r2, #3
 801bc66:	00d2      	lsls	r2, r2, #3
 801bc68:	b2d2      	uxtb	r2, r2
 801bc6a:	fb12 f207 	smulbb	r2, r2, r7
 801bc6e:	b2b6      	uxth	r6, r6
 801bc70:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bc74:	4462      	add	r2, ip
 801bc76:	fb15 f507 	smulbb	r5, r5, r7
 801bc7a:	b292      	uxth	r2, r2
 801bc7c:	1c77      	adds	r7, r6, #1
 801bc7e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801bc82:	1c57      	adds	r7, r2, #1
 801bc84:	445d      	add	r5, fp
 801bc86:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801bc8a:	b2ad      	uxth	r5, r5
 801bc8c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bc90:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bc94:	4316      	orrs	r6, r2
 801bc96:	1c6a      	adds	r2, r5, #1
 801bc98:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801bc9c:	096d      	lsrs	r5, r5, #5
 801bc9e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bca2:	432e      	orrs	r6, r5
 801bca4:	f820 6b02 	strh.w	r6, [r0], #2
 801bca8:	e7d0      	b.n	801bc4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801bcaa:	4573      	cmp	r3, lr
 801bcac:	d38f      	bcc.n	801bbce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801bcae:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801bcb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bcb4:	fa1f f188 	uxth.w	r1, r8
 801bcb8:	1a64      	subs	r4, r4, r1
 801bcba:	881b      	ldrh	r3, [r3, #0]
 801bcbc:	b2a4      	uxth	r4, r4
 801bcbe:	2c00      	cmp	r4, #0
 801bcc0:	eba3 0308 	sub.w	r3, r3, r8
 801bcc4:	bf18      	it	ne
 801bcc6:	2100      	movne	r1, #0
 801bcc8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bccc:	e77f      	b.n	801bbce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801bcce:	4b04      	ldr	r3, [pc, #16]	; (801bce0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801bcd0:	6818      	ldr	r0, [r3, #0]
 801bcd2:	6803      	ldr	r3, [r0, #0]
 801bcd4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bcd6:	4798      	blx	r3
 801bcd8:	b00f      	add	sp, #60	; 0x3c
 801bcda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bcde:	bf00      	nop
 801bce0:	20012f2c 	.word	0x20012f2c
 801bce4:	20012f26 	.word	0x20012f26

0801bce8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801bce8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bcec:	b09f      	sub	sp, #124	; 0x7c
 801bcee:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801bcf2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801bcf6:	9209      	str	r2, [sp, #36]	; 0x24
 801bcf8:	461d      	mov	r5, r3
 801bcfa:	4604      	mov	r4, r0
 801bcfc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bcfe:	2a00      	cmp	r2, #0
 801bd00:	f000 81eb 	beq.w	801c0da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801bd04:	6828      	ldr	r0, [r5, #0]
 801bd06:	6869      	ldr	r1, [r5, #4]
 801bd08:	aa1a      	add	r2, sp, #104	; 0x68
 801bd0a:	c203      	stmia	r2!, {r0, r1}
 801bd0c:	6818      	ldr	r0, [r3, #0]
 801bd0e:	6859      	ldr	r1, [r3, #4]
 801bd10:	aa1c      	add	r2, sp, #112	; 0x70
 801bd12:	c203      	stmia	r2!, {r0, r1}
 801bd14:	a81a      	add	r0, sp, #104	; 0x68
 801bd16:	f7f9 f9ff 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bd1a:	4629      	mov	r1, r5
 801bd1c:	a81c      	add	r0, sp, #112	; 0x70
 801bd1e:	f7f9 fa3f 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bd22:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801bd26:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801bd2a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801bd2e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801bd32:	bfd7      	itett	le
 801bd34:	b29a      	uxthle	r2, r3
 801bd36:	2201      	movgt	r2, #1
 801bd38:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801bd3c:	fb91 f2f2 	sdivle	r2, r1, r2
 801bd40:	9202      	str	r2, [sp, #8]
 801bd42:	9802      	ldr	r0, [sp, #8]
 801bd44:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801bd48:	fb92 f0f0 	sdiv	r0, r2, r0
 801bd4c:	b280      	uxth	r0, r0
 801bd4e:	9010      	str	r0, [sp, #64]	; 0x40
 801bd50:	9902      	ldr	r1, [sp, #8]
 801bd52:	9802      	ldr	r0, [sp, #8]
 801bd54:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801bd56:	4488      	add	r8, r1
 801bd58:	fb05 2510 	mls	r5, r5, r0, r2
 801bd5c:	fb15 f503 	smulbb	r5, r5, r3
 801bd60:	f108 38ff 	add.w	r8, r8, #4294967295
 801bd64:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801bd68:	fb98 f8f1 	sdiv	r8, r8, r1
 801bd6c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801bd70:	440d      	add	r5, r1
 801bd72:	4419      	add	r1, r3
 801bd74:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801bd78:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801bd7c:	441a      	add	r2, r3
 801bd7e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801bd82:	9304      	str	r3, [sp, #16]
 801bd84:	4b95      	ldr	r3, [pc, #596]	; (801bfdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801bd86:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801bd8a:	6818      	ldr	r0, [r3, #0]
 801bd8c:	6803      	ldr	r3, [r0, #0]
 801bd8e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bd90:	4798      	blx	r3
 801bd92:	4b93      	ldr	r3, [pc, #588]	; (801bfe0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801bd94:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801bd98:	881a      	ldrh	r2, [r3, #0]
 801bd9a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801bd9e:	9318      	str	r3, [sp, #96]	; 0x60
 801bda0:	fb02 7101 	mla	r1, r2, r1, r7
 801bda4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801bda8:	4356      	muls	r6, r2
 801bdaa:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801bdae:	f108 0801 	add.w	r8, r8, #1
 801bdb2:	920a      	str	r2, [sp, #40]	; 0x28
 801bdb4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bdb6:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801bdba:	930f      	str	r3, [sp, #60]	; 0x3c
 801bdbc:	fa1f f888 	uxth.w	r8, r8
 801bdc0:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801bdc4:	f108 0204 	add.w	r2, r8, #4
 801bdc8:	9211      	str	r2, [sp, #68]	; 0x44
 801bdca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bdcc:	4b85      	ldr	r3, [pc, #532]	; (801bfe4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801bdce:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801bdd2:	b2ad      	uxth	r5, r5
 801bdd4:	9215      	str	r2, [sp, #84]	; 0x54
 801bdd6:	2d00      	cmp	r5, #0
 801bdd8:	9a04      	ldr	r2, [sp, #16]
 801bdda:	f04f 0100 	mov.w	r1, #0
 801bdde:	bf18      	it	ne
 801bde0:	2200      	movne	r2, #0
 801bde2:	1b1b      	subs	r3, r3, r4
 801bde4:	b292      	uxth	r2, r2
 801bde6:	910d      	str	r1, [sp, #52]	; 0x34
 801bde8:	9319      	str	r3, [sp, #100]	; 0x64
 801bdea:	9910      	ldr	r1, [sp, #64]	; 0x40
 801bdec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bdee:	fa11 f383 	uxtah	r3, r1, r3
 801bdf2:	9914      	ldr	r1, [sp, #80]	; 0x50
 801bdf4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801bdf8:	3304      	adds	r3, #4
 801bdfa:	9306      	str	r3, [sp, #24]
 801bdfc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bdfe:	4283      	cmp	r3, r0
 801be00:	f240 8166 	bls.w	801c0d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801be04:	9902      	ldr	r1, [sp, #8]
 801be06:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801be0a:	fbb5 f3f3 	udiv	r3, r5, r3
 801be0e:	1acb      	subs	r3, r1, r3
 801be10:	b29b      	uxth	r3, r3
 801be12:	9316      	str	r3, [sp, #88]	; 0x58
 801be14:	9b06      	ldr	r3, [sp, #24]
 801be16:	9e06      	ldr	r6, [sp, #24]
 801be18:	7859      	ldrb	r1, [r3, #1]
 801be1a:	789b      	ldrb	r3, [r3, #2]
 801be1c:	7836      	ldrb	r6, [r6, #0]
 801be1e:	9612      	str	r6, [sp, #72]	; 0x48
 801be20:	021b      	lsls	r3, r3, #8
 801be22:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801be26:	9906      	ldr	r1, [sp, #24]
 801be28:	78c9      	ldrb	r1, [r1, #3]
 801be2a:	430b      	orrs	r3, r1
 801be2c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801be2e:	3601      	adds	r6, #1
 801be30:	4419      	add	r1, r3
 801be32:	9605      	str	r6, [sp, #20]
 801be34:	1c4e      	adds	r6, r1, #1
 801be36:	9603      	str	r6, [sp, #12]
 801be38:	7849      	ldrb	r1, [r1, #1]
 801be3a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801be3c:	0209      	lsls	r1, r1, #8
 801be3e:	5cf3      	ldrb	r3, [r6, r3]
 801be40:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801be44:	4319      	orrs	r1, r3
 801be46:	b28b      	uxth	r3, r1
 801be48:	930c      	str	r3, [sp, #48]	; 0x30
 801be4a:	2300      	movs	r3, #0
 801be4c:	f04f 0a01 	mov.w	sl, #1
 801be50:	9307      	str	r3, [sp, #28]
 801be52:	469c      	mov	ip, r3
 801be54:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801be58:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801be5c:	46d3      	mov	fp, sl
 801be5e:	4657      	mov	r7, sl
 801be60:	930e      	str	r3, [sp, #56]	; 0x38
 801be62:	2d00      	cmp	r5, #0
 801be64:	d07e      	beq.n	801bf64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801be66:	42af      	cmp	r7, r5
 801be68:	d26e      	bcs.n	801bf48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801be6a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801be6c:	9201      	str	r2, [sp, #4]
 801be6e:	1bed      	subs	r5, r5, r7
 801be70:	4283      	cmp	r3, r0
 801be72:	b2ad      	uxth	r5, r5
 801be74:	d802      	bhi.n	801be7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801be76:	e073      	b.n	801bf60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801be78:	2b00      	cmp	r3, #0
 801be7a:	d15f      	bne.n	801bf3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801be7c:	9b03      	ldr	r3, [sp, #12]
 801be7e:	785b      	ldrb	r3, [r3, #1]
 801be80:	f1cb 0207 	rsb	r2, fp, #7
 801be84:	4093      	lsls	r3, r2
 801be86:	005b      	lsls	r3, r3, #1
 801be88:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801be8c:	9b03      	ldr	r3, [sp, #12]
 801be8e:	781b      	ldrb	r3, [r3, #0]
 801be90:	fa43 f30b 	asr.w	r3, r3, fp
 801be94:	b2db      	uxtb	r3, r3
 801be96:	4313      	orrs	r3, r2
 801be98:	f10b 0201 	add.w	r2, fp, #1
 801be9c:	fa5f fb82 	uxtb.w	fp, r2
 801bea0:	9a03      	ldr	r2, [sp, #12]
 801bea2:	f1bb 0f08 	cmp.w	fp, #8
 801bea6:	bf15      	itete	ne
 801bea8:	3201      	addne	r2, #1
 801beaa:	3202      	addeq	r2, #2
 801beac:	9203      	strne	r2, [sp, #12]
 801beae:	9203      	streq	r2, [sp, #12]
 801beb0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801beb2:	b29f      	uxth	r7, r3
 801beb4:	bf08      	it	eq
 801beb6:	f04f 0b00 	moveq.w	fp, #0
 801beba:	42ba      	cmp	r2, r7
 801bebc:	d309      	bcc.n	801bed2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801bebe:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801bec2:	2301      	movs	r3, #1
 801bec4:	9a05      	ldr	r2, [sp, #20]
 801bec6:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801beca:	d30e      	bcc.n	801beea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801becc:	469a      	mov	sl, r3
 801bece:	2600      	movs	r6, #0
 801bed0:	e035      	b.n	801bf3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801bed2:	9b05      	ldr	r3, [sp, #20]
 801bed4:	429f      	cmp	r7, r3
 801bed6:	d318      	bcc.n	801bf0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801bed8:	eb04 030a 	add.w	r3, r4, sl
 801bedc:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801bee0:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801bee4:	f10a 0301 	add.w	r3, sl, #1
 801bee8:	b29b      	uxth	r3, r3
 801beea:	9a05      	ldr	r2, [sp, #20]
 801beec:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801bef0:	990c      	ldr	r1, [sp, #48]	; 0x30
 801bef2:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801bef6:	7116      	strb	r6, [r2, #4]
 801bef8:	f10a 0601 	add.w	r6, sl, #1
 801befc:	80d1      	strh	r1, [r2, #6]
 801befe:	7156      	strb	r6, [r2, #5]
 801bf00:	9a05      	ldr	r2, [sp, #20]
 801bf02:	3201      	adds	r2, #1
 801bf04:	b292      	uxth	r2, r2
 801bf06:	9205      	str	r2, [sp, #20]
 801bf08:	e7e0      	b.n	801becc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801bf0a:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801bf0e:	463a      	mov	r2, r7
 801bf10:	795b      	ldrb	r3, [r3, #5]
 801bf12:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801bf16:	4426      	add	r6, r4
 801bf18:	9919      	ldr	r1, [sp, #100]	; 0x64
 801bf1a:	eb01 0c06 	add.w	ip, r1, r6
 801bf1e:	f1bc 0f00 	cmp.w	ip, #0
 801bf22:	dd07      	ble.n	801bf34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801bf24:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801bf28:	f892 c004 	ldrb.w	ip, [r2, #4]
 801bf2c:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801bf30:	88d2      	ldrh	r2, [r2, #6]
 801bf32:	e7f1      	b.n	801bf18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801bf34:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801bf38:	b29b      	uxth	r3, r3
 801bf3a:	e7c3      	b.n	801bec4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801bf3c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801bf3e:	970c      	str	r7, [sp, #48]	; 0x30
 801bf40:	9a01      	ldr	r2, [sp, #4]
 801bf42:	46b4      	mov	ip, r6
 801bf44:	461f      	mov	r7, r3
 801bf46:	e78c      	b.n	801be62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801bf48:	1b7b      	subs	r3, r7, r5
 801bf4a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801bf4e:	9201      	str	r2, [sp, #4]
 801bf50:	eb0c 0605 	add.w	r6, ip, r5
 801bf54:	b29b      	uxth	r3, r3
 801bf56:	b2b6      	uxth	r6, r6
 801bf58:	2500      	movs	r5, #0
 801bf5a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801bf5c:	4282      	cmp	r2, r0
 801bf5e:	d88b      	bhi.n	801be78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801bf60:	9a01      	ldr	r2, [sp, #4]
 801bf62:	e74b      	b.n	801bdfc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801bf64:	4297      	cmp	r7, r2
 801bf66:	d332      	bcc.n	801bfce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801bf68:	1abb      	subs	r3, r7, r2
 801bf6a:	b29b      	uxth	r3, r3
 801bf6c:	9208      	str	r2, [sp, #32]
 801bf6e:	9501      	str	r5, [sp, #4]
 801bf70:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bf72:	29ff      	cmp	r1, #255	; 0xff
 801bf74:	9908      	ldr	r1, [sp, #32]
 801bf76:	eb0c 0601 	add.w	r6, ip, r1
 801bf7a:	d135      	bne.n	801bfe8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801bf7c:	f1a0 0e02 	sub.w	lr, r0, #2
 801bf80:	b2b6      	uxth	r6, r6
 801bf82:	45b4      	cmp	ip, r6
 801bf84:	f040 808c 	bne.w	801c0a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801bf88:	9908      	ldr	r1, [sp, #32]
 801bf8a:	4297      	cmp	r7, r2
 801bf8c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801bf90:	d3e2      	bcc.n	801bf58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801bf92:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801bf94:	9904      	ldr	r1, [sp, #16]
 801bf96:	8812      	ldrh	r2, [r2, #0]
 801bf98:	1a52      	subs	r2, r2, r1
 801bf9a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801bf9e:	9a07      	ldr	r2, [sp, #28]
 801bfa0:	9916      	ldr	r1, [sp, #88]	; 0x58
 801bfa2:	3201      	adds	r2, #1
 801bfa4:	428a      	cmp	r2, r1
 801bfa6:	9207      	str	r2, [sp, #28]
 801bfa8:	f040 8087 	bne.w	801c0ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801bfac:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801bfb0:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801bfb4:	9b04      	ldr	r3, [sp, #16]
 801bfb6:	1bed      	subs	r5, r5, r7
 801bfb8:	b2ad      	uxth	r5, r5
 801bfba:	2d00      	cmp	r5, #0
 801bfbc:	bf08      	it	eq
 801bfbe:	461a      	moveq	r2, r3
 801bfc0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bfc2:	bf18      	it	ne
 801bfc4:	2200      	movne	r2, #0
 801bfc6:	3301      	adds	r3, #1
 801bfc8:	930d      	str	r3, [sp, #52]	; 0x34
 801bfca:	b292      	uxth	r2, r2
 801bfcc:	e70d      	b.n	801bdea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801bfce:	1bd1      	subs	r1, r2, r7
 801bfd0:	b28b      	uxth	r3, r1
 801bfd2:	9301      	str	r3, [sp, #4]
 801bfd4:	9708      	str	r7, [sp, #32]
 801bfd6:	462b      	mov	r3, r5
 801bfd8:	e7ca      	b.n	801bf70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801bfda:	bf00      	nop
 801bfdc:	20012f2c 	.word	0x20012f2c
 801bfe0:	20012f26 	.word	0x20012f26
 801bfe4:	fffff7fb 	.word	0xfffff7fb
 801bfe8:	b2b6      	uxth	r6, r6
 801bfea:	900b      	str	r0, [sp, #44]	; 0x2c
 801bfec:	45b4      	cmp	ip, r6
 801bfee:	d0cb      	beq.n	801bf88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801bff0:	f10c 0101 	add.w	r1, ip, #1
 801bff4:	44a4      	add	ip, r4
 801bff6:	9117      	str	r1, [sp, #92]	; 0x5c
 801bff8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801bffc:	9911      	ldr	r1, [sp, #68]	; 0x44
 801bffe:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801c002:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c004:	f8b1 c000 	ldrh.w	ip, [r1]
 801c008:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c00a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801c00e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c012:	fb1e fe01 	smulbb	lr, lr, r1
 801c016:	ea4f 2825 	mov.w	r8, r5, asr #8
 801c01a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c01c:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801c020:	fb08 e801 	mla	r8, r8, r1, lr
 801c024:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801c028:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c02a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c02e:	fb19 f901 	smulbb	r9, r9, r1
 801c032:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801c036:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c038:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c03c:	fb0e 9e01 	mla	lr, lr, r1, r9
 801c040:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c044:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c046:	fa5f fc8c 	uxtb.w	ip, ip
 801c04a:	fb1c fc01 	smulbb	ip, ip, r1
 801c04e:	00ed      	lsls	r5, r5, #3
 801c050:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c052:	b2ed      	uxtb	r5, r5
 801c054:	fb05 c501 	mla	r5, r5, r1, ip
 801c058:	fa1f f888 	uxth.w	r8, r8
 801c05c:	fa1f fe8e 	uxth.w	lr, lr
 801c060:	b2ad      	uxth	r5, r5
 801c062:	f108 0c01 	add.w	ip, r8, #1
 801c066:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801c06a:	f10e 0901 	add.w	r9, lr, #1
 801c06e:	f105 0c01 	add.w	ip, r5, #1
 801c072:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801c076:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801c07a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c07e:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801c082:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c086:	ea4c 0808 	orr.w	r8, ip, r8
 801c08a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c08c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801c090:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c094:	ea48 0809 	orr.w	r8, r8, r9
 801c098:	f821 8b02 	strh.w	r8, [r1], #2
 801c09c:	910b      	str	r1, [sp, #44]	; 0x2c
 801c09e:	e7a5      	b.n	801bfec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801c0a0:	f10c 0801 	add.w	r8, ip, #1
 801c0a4:	44a4      	add	ip, r4
 801c0a6:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c0a8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801c0ac:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801c0b0:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801c0b4:	fa1f fc88 	uxth.w	ip, r8
 801c0b8:	e763      	b.n	801bf82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801c0ba:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c0be:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c0c2:	1aad      	subs	r5, r5, r2
 801c0c4:	b2ad      	uxth	r5, r5
 801c0c6:	2d00      	cmp	r5, #0
 801c0c8:	bf18      	it	ne
 801c0ca:	2200      	movne	r2, #0
 801c0cc:	9201      	str	r2, [sp, #4]
 801c0ce:	e744      	b.n	801bf5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801c0d0:	4b03      	ldr	r3, [pc, #12]	; (801c0e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801c0d2:	6818      	ldr	r0, [r3, #0]
 801c0d4:	6803      	ldr	r3, [r0, #0]
 801c0d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c0d8:	4798      	blx	r3
 801c0da:	b01f      	add	sp, #124	; 0x7c
 801c0dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c0e0:	20012f2c 	.word	0x20012f2c

0801c0e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801c0e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c0e8:	b08f      	sub	sp, #60	; 0x3c
 801c0ea:	461c      	mov	r4, r3
 801c0ec:	9203      	str	r2, [sp, #12]
 801c0ee:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c0f2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c0f4:	9202      	str	r2, [sp, #8]
 801c0f6:	460f      	mov	r7, r1
 801c0f8:	2a00      	cmp	r2, #0
 801c0fa:	f000 8128 	beq.w	801c34e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801c0fe:	6820      	ldr	r0, [r4, #0]
 801c100:	6861      	ldr	r1, [r4, #4]
 801c102:	aa0a      	add	r2, sp, #40	; 0x28
 801c104:	c203      	stmia	r2!, {r0, r1}
 801c106:	6818      	ldr	r0, [r3, #0]
 801c108:	6859      	ldr	r1, [r3, #4]
 801c10a:	aa0c      	add	r2, sp, #48	; 0x30
 801c10c:	c203      	stmia	r2!, {r0, r1}
 801c10e:	a80a      	add	r0, sp, #40	; 0x28
 801c110:	f7f9 f802 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c114:	4621      	mov	r1, r4
 801c116:	a80c      	add	r0, sp, #48	; 0x30
 801c118:	f7f9 f842 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c11c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c120:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801c124:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801c128:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c12c:	bfde      	ittt	le
 801c12e:	b2b3      	uxthle	r3, r6
 801c130:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c134:	fb92 f3f3 	sdivle	r3, r2, r3
 801c138:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c13c:	bfc8      	it	gt
 801c13e:	2301      	movgt	r3, #1
 801c140:	fb92 f1f3 	sdiv	r1, r2, r3
 801c144:	fa1f fc81 	uxth.w	ip, r1
 801c148:	fb0c 2413 	mls	r4, ip, r3, r2
 801c14c:	fb14 f406 	smulbb	r4, r4, r6
 801c150:	441d      	add	r5, r3
 801c152:	4404      	add	r4, r0
 801c154:	4661      	mov	r1, ip
 801c156:	3d01      	subs	r5, #1
 801c158:	b2a4      	uxth	r4, r4
 801c15a:	fb95 f5f3 	sdiv	r5, r5, r3
 801c15e:	b121      	cbz	r1, 801c16a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801c160:	9b03      	ldr	r3, [sp, #12]
 801c162:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c166:	ba1b      	rev	r3, r3
 801c168:	441f      	add	r7, r3
 801c16a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c16e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801c172:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c176:	4418      	add	r0, r3
 801c178:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c17c:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801c180:	441a      	add	r2, r3
 801c182:	4b74      	ldr	r3, [pc, #464]	; (801c354 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801c184:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801c188:	6818      	ldr	r0, [r3, #0]
 801c18a:	6803      	ldr	r3, [r0, #0]
 801c18c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c18e:	4798      	blx	r3
 801c190:	4a71      	ldr	r2, [pc, #452]	; (801c358 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801c192:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801c196:	8813      	ldrh	r3, [r2, #0]
 801c198:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801c19c:	9209      	str	r2, [sp, #36]	; 0x24
 801c19e:	fb03 c101 	mla	r1, r3, r1, ip
 801c1a2:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c1a6:	4373      	muls	r3, r6
 801c1a8:	b2ad      	uxth	r5, r5
 801c1aa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c1ae:	00ad      	lsls	r5, r5, #2
 801c1b0:	2c00      	cmp	r4, #0
 801c1b2:	9304      	str	r3, [sp, #16]
 801c1b4:	f105 0304 	add.w	r3, r5, #4
 801c1b8:	9305      	str	r3, [sp, #20]
 801c1ba:	bf0c      	ite	eq
 801c1bc:	46c8      	moveq	r8, r9
 801c1be:	f04f 0800 	movne.w	r8, #0
 801c1c2:	2300      	movs	r3, #0
 801c1c4:	fa1f f888 	uxth.w	r8, r8
 801c1c8:	9301      	str	r3, [sp, #4]
 801c1ca:	9a04      	ldr	r2, [sp, #16]
 801c1cc:	4282      	cmp	r2, r0
 801c1ce:	f240 80b9 	bls.w	801c344 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801c1d2:	b95b      	cbnz	r3, 801c1ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801c1d4:	783a      	ldrb	r2, [r7, #0]
 801c1d6:	0993      	lsrs	r3, r2, #6
 801c1d8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c1dc:	9201      	str	r2, [sp, #4]
 801c1de:	1e5a      	subs	r2, r3, #1
 801c1e0:	2a02      	cmp	r2, #2
 801c1e2:	bf8d      	iteet	hi
 801c1e4:	787b      	ldrbhi	r3, [r7, #1]
 801c1e6:	3701      	addls	r7, #1
 801c1e8:	b29b      	uxthls	r3, r3
 801c1ea:	3702      	addhi	r7, #2
 801c1ec:	b184      	cbz	r4, 801c210 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801c1ee:	429c      	cmp	r4, r3
 801c1f0:	bf95      	itete	ls
 801c1f2:	1b1c      	subls	r4, r3, r4
 801c1f4:	1ae4      	subhi	r4, r4, r3
 801c1f6:	fa1f fa84 	uxthls.w	sl, r4
 801c1fa:	b2a4      	uxthhi	r4, r4
 801c1fc:	bf87      	ittee	hi
 801c1fe:	46c4      	movhi	ip, r8
 801c200:	f04f 0a00 	movhi.w	sl, #0
 801c204:	fa1f fc89 	uxthls.w	ip, r9
 801c208:	2400      	movls	r4, #0
 801c20a:	4653      	mov	r3, sl
 801c20c:	46e0      	mov	r8, ip
 801c20e:	e7dc      	b.n	801c1ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801c210:	2204      	movs	r2, #4
 801c212:	4615      	mov	r5, r2
 801c214:	9905      	ldr	r1, [sp, #20]
 801c216:	9a01      	ldr	r2, [sp, #4]
 801c218:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c21c:	9903      	ldr	r1, [sp, #12]
 801c21e:	588a      	ldr	r2, [r1, r2]
 801c220:	4543      	cmp	r3, r8
 801c222:	bf27      	ittee	cs
 801c224:	eba3 0a08 	subcs.w	sl, r3, r8
 801c228:	46c6      	movcs	lr, r8
 801c22a:	eba8 0c03 	subcc.w	ip, r8, r3
 801c22e:	469e      	movcc	lr, r3
 801c230:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801c234:	bf27      	ittee	cs
 801c236:	fa1f fa8a 	uxthcs.w	sl, sl
 801c23a:	46a4      	movcs	ip, r4
 801c23c:	fa1f fc8c 	uxthcc.w	ip, ip
 801c240:	46a2      	movcc	sl, r4
 801c242:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801c246:	2900      	cmp	r1, #0
 801c248:	d066      	beq.n	801c318 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801c24a:	29ff      	cmp	r1, #255	; 0xff
 801c24c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801c250:	d114      	bne.n	801c27c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801c252:	9d02      	ldr	r5, [sp, #8]
 801c254:	2dff      	cmp	r5, #255	; 0xff
 801c256:	d111      	bne.n	801c27c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801c258:	0951      	lsrs	r1, r2, #5
 801c25a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c25e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c262:	f026 0607 	bic.w	r6, r6, #7
 801c266:	430e      	orrs	r6, r1
 801c268:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c26c:	4316      	orrs	r6, r2
 801c26e:	b2b6      	uxth	r6, r6
 801c270:	4486      	add	lr, r0
 801c272:	4586      	cmp	lr, r0
 801c274:	d051      	beq.n	801c31a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c276:	f820 6b02 	strh.w	r6, [r0], #2
 801c27a:	e7fa      	b.n	801c272 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801c27c:	9d02      	ldr	r5, [sp, #8]
 801c27e:	4369      	muls	r1, r5
 801c280:	1c4d      	adds	r5, r1, #1
 801c282:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801c286:	122d      	asrs	r5, r5, #8
 801c288:	ea6f 0b05 	mvn.w	fp, r5
 801c28c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801c290:	b2ad      	uxth	r5, r5
 801c292:	b2f6      	uxtb	r6, r6
 801c294:	b2d2      	uxtb	r2, r2
 801c296:	fb11 f105 	smulbb	r1, r1, r5
 801c29a:	fb16 f605 	smulbb	r6, r6, r5
 801c29e:	fb12 f205 	smulbb	r2, r2, r5
 801c2a2:	b289      	uxth	r1, r1
 801c2a4:	b2b6      	uxth	r6, r6
 801c2a6:	b292      	uxth	r2, r2
 801c2a8:	9106      	str	r1, [sp, #24]
 801c2aa:	9607      	str	r6, [sp, #28]
 801c2ac:	9208      	str	r2, [sp, #32]
 801c2ae:	4486      	add	lr, r0
 801c2b0:	fa5f fb8b 	uxtb.w	fp, fp
 801c2b4:	4586      	cmp	lr, r0
 801c2b6:	d030      	beq.n	801c31a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c2b8:	8802      	ldrh	r2, [r0, #0]
 801c2ba:	9906      	ldr	r1, [sp, #24]
 801c2bc:	1216      	asrs	r6, r2, #8
 801c2be:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c2c2:	10d5      	asrs	r5, r2, #3
 801c2c4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c2c8:	fb06 160b 	mla	r6, r6, fp, r1
 801c2cc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c2d0:	9907      	ldr	r1, [sp, #28]
 801c2d2:	00d2      	lsls	r2, r2, #3
 801c2d4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c2d8:	fb05 150b 	mla	r5, r5, fp, r1
 801c2dc:	b2d2      	uxtb	r2, r2
 801c2de:	9908      	ldr	r1, [sp, #32]
 801c2e0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c2e4:	b2b6      	uxth	r6, r6
 801c2e6:	fb02 120b 	mla	r2, r2, fp, r1
 801c2ea:	b292      	uxth	r2, r2
 801c2ec:	1c71      	adds	r1, r6, #1
 801c2ee:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801c2f2:	1c51      	adds	r1, r2, #1
 801c2f4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c2f8:	b2ad      	uxth	r5, r5
 801c2fa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c2fe:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c302:	4316      	orrs	r6, r2
 801c304:	1c6a      	adds	r2, r5, #1
 801c306:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801c30a:	096d      	lsrs	r5, r5, #5
 801c30c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c310:	432e      	orrs	r6, r5
 801c312:	f820 6b02 	strh.w	r6, [r0], #2
 801c316:	e7cd      	b.n	801c2b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801c318:	4470      	add	r0, lr
 801c31a:	4543      	cmp	r3, r8
 801c31c:	f4ff af75 	bcc.w	801c20a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801c320:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801c324:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c326:	fa1f fc89 	uxth.w	ip, r9
 801c32a:	eba4 040c 	sub.w	r4, r4, ip
 801c32e:	881b      	ldrh	r3, [r3, #0]
 801c330:	b2a4      	uxth	r4, r4
 801c332:	2c00      	cmp	r4, #0
 801c334:	eba3 0309 	sub.w	r3, r3, r9
 801c338:	bf18      	it	ne
 801c33a:	f04f 0c00 	movne.w	ip, #0
 801c33e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c342:	e762      	b.n	801c20a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801c344:	4b03      	ldr	r3, [pc, #12]	; (801c354 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801c346:	6818      	ldr	r0, [r3, #0]
 801c348:	6803      	ldr	r3, [r0, #0]
 801c34a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c34c:	4798      	blx	r3
 801c34e:	b00f      	add	sp, #60	; 0x3c
 801c350:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c354:	20012f2c 	.word	0x20012f2c
 801c358:	20012f26 	.word	0x20012f26

0801c35c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c35c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c360:	b093      	sub	sp, #76	; 0x4c
 801c362:	461c      	mov	r4, r3
 801c364:	9205      	str	r2, [sp, #20]
 801c366:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801c36a:	9101      	str	r1, [sp, #4]
 801c36c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c36e:	9202      	str	r2, [sp, #8]
 801c370:	2a00      	cmp	r2, #0
 801c372:	f000 812c 	beq.w	801c5ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c376:	6820      	ldr	r0, [r4, #0]
 801c378:	6861      	ldr	r1, [r4, #4]
 801c37a:	aa0e      	add	r2, sp, #56	; 0x38
 801c37c:	c203      	stmia	r2!, {r0, r1}
 801c37e:	6818      	ldr	r0, [r3, #0]
 801c380:	6859      	ldr	r1, [r3, #4]
 801c382:	aa10      	add	r2, sp, #64	; 0x40
 801c384:	c203      	stmia	r2!, {r0, r1}
 801c386:	a80e      	add	r0, sp, #56	; 0x38
 801c388:	f7f8 fec6 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c38c:	4621      	mov	r1, r4
 801c38e:	a810      	add	r0, sp, #64	; 0x40
 801c390:	f7f8 ff06 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c394:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801c398:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801c39c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801c3a0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c3a4:	bfde      	ittt	le
 801c3a6:	b2b3      	uxthle	r3, r6
 801c3a8:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c3ac:	fb92 f3f3 	sdivle	r3, r2, r3
 801c3b0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801c3b4:	bfc8      	it	gt
 801c3b6:	2301      	movgt	r3, #1
 801c3b8:	fb92 f1f3 	sdiv	r1, r2, r3
 801c3bc:	fa1f fc81 	uxth.w	ip, r1
 801c3c0:	fb0c 2413 	mls	r4, ip, r3, r2
 801c3c4:	fb14 f406 	smulbb	r4, r4, r6
 801c3c8:	441d      	add	r5, r3
 801c3ca:	4404      	add	r4, r0
 801c3cc:	4661      	mov	r1, ip
 801c3ce:	3d01      	subs	r5, #1
 801c3d0:	b2a4      	uxth	r4, r4
 801c3d2:	fb95 f5f3 	sdiv	r5, r5, r3
 801c3d6:	b131      	cbz	r1, 801c3e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801c3d8:	9b05      	ldr	r3, [sp, #20]
 801c3da:	9901      	ldr	r1, [sp, #4]
 801c3dc:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c3e0:	ba1b      	rev	r3, r3
 801c3e2:	4419      	add	r1, r3
 801c3e4:	9101      	str	r1, [sp, #4]
 801c3e6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801c3ea:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801c3ee:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801c3f2:	4418      	add	r0, r3
 801c3f4:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801c3f8:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801c3fc:	441a      	add	r2, r3
 801c3fe:	4b75      	ldr	r3, [pc, #468]	; (801c5d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801c400:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801c404:	6818      	ldr	r0, [r3, #0]
 801c406:	6803      	ldr	r3, [r0, #0]
 801c408:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c40a:	4798      	blx	r3
 801c40c:	4972      	ldr	r1, [pc, #456]	; (801c5d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801c40e:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801c412:	880b      	ldrh	r3, [r1, #0]
 801c414:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801c418:	910d      	str	r1, [sp, #52]	; 0x34
 801c41a:	fb03 c202 	mla	r2, r3, r2, ip
 801c41e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c422:	4373      	muls	r3, r6
 801c424:	b2ad      	uxth	r5, r5
 801c426:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c42a:	00ad      	lsls	r5, r5, #2
 801c42c:	9308      	str	r3, [sp, #32]
 801c42e:	1d2b      	adds	r3, r5, #4
 801c430:	9309      	str	r3, [sp, #36]	; 0x24
 801c432:	9b02      	ldr	r3, [sp, #8]
 801c434:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801c438:	9106      	str	r1, [sp, #24]
 801c43a:	43da      	mvns	r2, r3
 801c43c:	2c00      	cmp	r4, #0
 801c43e:	bf0c      	ite	eq
 801c440:	46dc      	moveq	ip, fp
 801c442:	f04f 0c00 	movne.w	ip, #0
 801c446:	2300      	movs	r3, #0
 801c448:	b2d2      	uxtb	r2, r2
 801c44a:	fa1f fc8c 	uxth.w	ip, ip
 801c44e:	9303      	str	r3, [sp, #12]
 801c450:	9207      	str	r2, [sp, #28]
 801c452:	9a08      	ldr	r2, [sp, #32]
 801c454:	4282      	cmp	r2, r0
 801c456:	f240 80b5 	bls.w	801c5c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801c45a:	b963      	cbnz	r3, 801c476 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801c45c:	9b01      	ldr	r3, [sp, #4]
 801c45e:	781a      	ldrb	r2, [r3, #0]
 801c460:	0993      	lsrs	r3, r2, #6
 801c462:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c466:	9203      	str	r2, [sp, #12]
 801c468:	1e5a      	subs	r2, r3, #1
 801c46a:	2a02      	cmp	r2, #2
 801c46c:	d815      	bhi.n	801c49a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801c46e:	9a01      	ldr	r2, [sp, #4]
 801c470:	3201      	adds	r2, #1
 801c472:	9201      	str	r2, [sp, #4]
 801c474:	b29b      	uxth	r3, r3
 801c476:	b1b4      	cbz	r4, 801c4a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801c478:	429c      	cmp	r4, r3
 801c47a:	bf95      	itete	ls
 801c47c:	1b1c      	subls	r4, r3, r4
 801c47e:	1ae4      	subhi	r4, r4, r3
 801c480:	fa1f f884 	uxthls.w	r8, r4
 801c484:	b2a4      	uxthhi	r4, r4
 801c486:	bf87      	ittee	hi
 801c488:	4666      	movhi	r6, ip
 801c48a:	f04f 0800 	movhi.w	r8, #0
 801c48e:	fa1f f68b 	uxthls.w	r6, fp
 801c492:	2400      	movls	r4, #0
 801c494:	4643      	mov	r3, r8
 801c496:	46b4      	mov	ip, r6
 801c498:	e7db      	b.n	801c452 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801c49a:	9a01      	ldr	r2, [sp, #4]
 801c49c:	9b01      	ldr	r3, [sp, #4]
 801c49e:	3202      	adds	r2, #2
 801c4a0:	785b      	ldrb	r3, [r3, #1]
 801c4a2:	9201      	str	r2, [sp, #4]
 801c4a4:	e7e7      	b.n	801c476 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801c4a6:	2203      	movs	r2, #3
 801c4a8:	4615      	mov	r5, r2
 801c4aa:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c4ac:	9a03      	ldr	r2, [sp, #12]
 801c4ae:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c4b2:	9905      	ldr	r1, [sp, #20]
 801c4b4:	4563      	cmp	r3, ip
 801c4b6:	eb01 0502 	add.w	r5, r1, r2
 801c4ba:	9902      	ldr	r1, [sp, #8]
 801c4bc:	bf29      	itett	cs
 801c4be:	eba3 080c 	subcs.w	r8, r3, ip
 801c4c2:	ebac 0603 	subcc.w	r6, ip, r3
 801c4c6:	fa1f f888 	uxthcs.w	r8, r8
 801c4ca:	46e1      	movcs	r9, ip
 801c4cc:	bf2f      	iteee	cs
 801c4ce:	4626      	movcs	r6, r4
 801c4d0:	b2b6      	uxthcc	r6, r6
 801c4d2:	4699      	movcc	r9, r3
 801c4d4:	46a0      	movcc	r8, r4
 801c4d6:	29ff      	cmp	r1, #255	; 0xff
 801c4d8:	d04a      	beq.n	801c570 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801c4da:	9f06      	ldr	r7, [sp, #24]
 801c4dc:	78a9      	ldrb	r1, [r5, #2]
 801c4de:	9004      	str	r0, [sp, #16]
 801c4e0:	4379      	muls	r1, r7
 801c4e2:	910a      	str	r1, [sp, #40]	; 0x28
 801c4e4:	7869      	ldrb	r1, [r5, #1]
 801c4e6:	4379      	muls	r1, r7
 801c4e8:	910b      	str	r1, [sp, #44]	; 0x2c
 801c4ea:	9905      	ldr	r1, [sp, #20]
 801c4ec:	5c8a      	ldrb	r2, [r1, r2]
 801c4ee:	437a      	muls	r2, r7
 801c4f0:	920c      	str	r2, [sp, #48]	; 0x30
 801c4f2:	46ca      	mov	sl, r9
 801c4f4:	f1ba 0f00 	cmp.w	sl, #0
 801c4f8:	d03d      	beq.n	801c576 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801c4fa:	9a04      	ldr	r2, [sp, #16]
 801c4fc:	9f07      	ldr	r7, [sp, #28]
 801c4fe:	8812      	ldrh	r2, [r2, #0]
 801c500:	1215      	asrs	r5, r2, #8
 801c502:	46be      	mov	lr, r7
 801c504:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c508:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801c50a:	10d1      	asrs	r1, r2, #3
 801c50c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801c510:	fb05 750e 	mla	r5, r5, lr, r7
 801c514:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c518:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801c51a:	00d2      	lsls	r2, r2, #3
 801c51c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801c520:	fb01 710e 	mla	r1, r1, lr, r7
 801c524:	b2d2      	uxtb	r2, r2
 801c526:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801c528:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c52c:	b2ad      	uxth	r5, r5
 801c52e:	fb02 720e 	mla	r2, r2, lr, r7
 801c532:	b292      	uxth	r2, r2
 801c534:	f105 0e01 	add.w	lr, r5, #1
 801c538:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801c53c:	f102 0e01 	add.w	lr, r2, #1
 801c540:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801c544:	b289      	uxth	r1, r1
 801c546:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c54a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c54e:	4315      	orrs	r5, r2
 801c550:	1c4a      	adds	r2, r1, #1
 801c552:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c556:	0949      	lsrs	r1, r1, #5
 801c558:	9a04      	ldr	r2, [sp, #16]
 801c55a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c55e:	430d      	orrs	r5, r1
 801c560:	f822 5b02 	strh.w	r5, [r2], #2
 801c564:	f10a 3aff 	add.w	sl, sl, #4294967295
 801c568:	9204      	str	r2, [sp, #16]
 801c56a:	fa1f fa8a 	uxth.w	sl, sl
 801c56e:	e7c1      	b.n	801c4f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801c570:	4649      	mov	r1, r9
 801c572:	4686      	mov	lr, r0
 801c574:	b999      	cbnz	r1, 801c59e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c576:	4563      	cmp	r3, ip
 801c578:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801c57c:	d38a      	bcc.n	801c494 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801c57e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801c582:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c584:	fa1f f68b 	uxth.w	r6, fp
 801c588:	1ba4      	subs	r4, r4, r6
 801c58a:	881b      	ldrh	r3, [r3, #0]
 801c58c:	b2a4      	uxth	r4, r4
 801c58e:	2c00      	cmp	r4, #0
 801c590:	eba3 030b 	sub.w	r3, r3, fp
 801c594:	bf18      	it	ne
 801c596:	2600      	movne	r6, #0
 801c598:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c59c:	e77a      	b.n	801c494 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801c59e:	78aa      	ldrb	r2, [r5, #2]
 801c5a0:	4f0e      	ldr	r7, [pc, #56]	; (801c5dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801c5a2:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801c5a6:	786a      	ldrb	r2, [r5, #1]
 801c5a8:	00d2      	lsls	r2, r2, #3
 801c5aa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c5ae:	ea4a 0202 	orr.w	r2, sl, r2
 801c5b2:	f895 a000 	ldrb.w	sl, [r5]
 801c5b6:	3901      	subs	r1, #1
 801c5b8:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801c5bc:	f82e 2b02 	strh.w	r2, [lr], #2
 801c5c0:	b289      	uxth	r1, r1
 801c5c2:	e7d7      	b.n	801c574 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801c5c4:	4b03      	ldr	r3, [pc, #12]	; (801c5d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801c5c6:	6818      	ldr	r0, [r3, #0]
 801c5c8:	6803      	ldr	r3, [r0, #0]
 801c5ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c5cc:	4798      	blx	r3
 801c5ce:	b013      	add	sp, #76	; 0x4c
 801c5d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c5d4:	20012f2c 	.word	0x20012f2c
 801c5d8:	20012f26 	.word	0x20012f26
 801c5dc:	fffff800 	.word	0xfffff800

0801c5e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801c5e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c5e4:	b09d      	sub	sp, #116	; 0x74
 801c5e6:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801c5ea:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801c5ee:	920e      	str	r2, [sp, #56]	; 0x38
 801c5f0:	461c      	mov	r4, r3
 801c5f2:	4683      	mov	fp, r0
 801c5f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c5f6:	2a00      	cmp	r2, #0
 801c5f8:	f000 81e0 	beq.w	801c9bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801c5fc:	6820      	ldr	r0, [r4, #0]
 801c5fe:	6861      	ldr	r1, [r4, #4]
 801c600:	aa18      	add	r2, sp, #96	; 0x60
 801c602:	c203      	stmia	r2!, {r0, r1}
 801c604:	6818      	ldr	r0, [r3, #0]
 801c606:	6859      	ldr	r1, [r3, #4]
 801c608:	aa1a      	add	r2, sp, #104	; 0x68
 801c60a:	c203      	stmia	r2!, {r0, r1}
 801c60c:	a818      	add	r0, sp, #96	; 0x60
 801c60e:	f7f8 fd83 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c612:	4621      	mov	r1, r4
 801c614:	a81a      	add	r0, sp, #104	; 0x68
 801c616:	f7f8 fdc3 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c61a:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801c61e:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801c622:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c626:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c62a:	bfd7      	itett	le
 801c62c:	b29a      	uxthle	r2, r3
 801c62e:	2201      	movgt	r2, #1
 801c630:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c634:	fb91 f2f2 	sdivle	r2, r1, r2
 801c638:	9202      	str	r2, [sp, #8]
 801c63a:	9802      	ldr	r0, [sp, #8]
 801c63c:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801c640:	fb92 f0f0 	sdiv	r0, r2, r0
 801c644:	b280      	uxth	r0, r0
 801c646:	900f      	str	r0, [sp, #60]	; 0x3c
 801c648:	9902      	ldr	r1, [sp, #8]
 801c64a:	9802      	ldr	r0, [sp, #8]
 801c64c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c64e:	440c      	add	r4, r1
 801c650:	fb05 2510 	mls	r5, r5, r0, r2
 801c654:	fb15 f503 	smulbb	r5, r5, r3
 801c658:	3c01      	subs	r4, #1
 801c65a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801c65e:	fb94 f4f1 	sdiv	r4, r4, r1
 801c662:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801c666:	440d      	add	r5, r1
 801c668:	4419      	add	r1, r3
 801c66a:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801c66e:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801c672:	441a      	add	r2, r3
 801c674:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c678:	9306      	str	r3, [sp, #24]
 801c67a:	4bb3      	ldr	r3, [pc, #716]	; (801c948 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801c67c:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801c680:	6818      	ldr	r0, [r3, #0]
 801c682:	6803      	ldr	r3, [r0, #0]
 801c684:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c686:	4798      	blx	r3
 801c688:	4bb0      	ldr	r3, [pc, #704]	; (801c94c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801c68a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801c68e:	881a      	ldrh	r2, [r3, #0]
 801c690:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801c694:	9316      	str	r3, [sp, #88]	; 0x58
 801c696:	fb02 7101 	mla	r1, r2, r1, r7
 801c69a:	3401      	adds	r4, #1
 801c69c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801c6a0:	b2a4      	uxth	r4, r4
 801c6a2:	4356      	muls	r6, r2
 801c6a4:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801c6a8:	00a4      	lsls	r4, r4, #2
 801c6aa:	920a      	str	r2, [sp, #40]	; 0x28
 801c6ac:	1d22      	adds	r2, r4, #4
 801c6ae:	b2ad      	uxth	r5, r5
 801c6b0:	9213      	str	r2, [sp, #76]	; 0x4c
 801c6b2:	4ba7      	ldr	r3, [pc, #668]	; (801c950 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801c6b4:	9a06      	ldr	r2, [sp, #24]
 801c6b6:	2d00      	cmp	r5, #0
 801c6b8:	bf0c      	ite	eq
 801c6ba:	4611      	moveq	r1, r2
 801c6bc:	2100      	movne	r1, #0
 801c6be:	2200      	movs	r2, #0
 801c6c0:	eba3 030b 	sub.w	r3, r3, fp
 801c6c4:	b289      	uxth	r1, r1
 801c6c6:	920d      	str	r2, [sp, #52]	; 0x34
 801c6c8:	9317      	str	r3, [sp, #92]	; 0x5c
 801c6ca:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c6cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c6ce:	fa12 f383 	uxtah	r3, r2, r3
 801c6d2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c6d4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c6d8:	3304      	adds	r3, #4
 801c6da:	9308      	str	r3, [sp, #32]
 801c6dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c6de:	4543      	cmp	r3, r8
 801c6e0:	f240 8167 	bls.w	801c9b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801c6e4:	9a02      	ldr	r2, [sp, #8]
 801c6e6:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801c6ea:	fbb5 f3f3 	udiv	r3, r5, r3
 801c6ee:	1ad3      	subs	r3, r2, r3
 801c6f0:	b29b      	uxth	r3, r3
 801c6f2:	9314      	str	r3, [sp, #80]	; 0x50
 801c6f4:	9b08      	ldr	r3, [sp, #32]
 801c6f6:	9808      	ldr	r0, [sp, #32]
 801c6f8:	785a      	ldrb	r2, [r3, #1]
 801c6fa:	789b      	ldrb	r3, [r3, #2]
 801c6fc:	7800      	ldrb	r0, [r0, #0]
 801c6fe:	9010      	str	r0, [sp, #64]	; 0x40
 801c700:	021b      	lsls	r3, r3, #8
 801c702:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c706:	9a08      	ldr	r2, [sp, #32]
 801c708:	78d2      	ldrb	r2, [r2, #3]
 801c70a:	4313      	orrs	r3, r2
 801c70c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c70e:	3001      	adds	r0, #1
 801c710:	441a      	add	r2, r3
 801c712:	9007      	str	r0, [sp, #28]
 801c714:	1c50      	adds	r0, r2, #1
 801c716:	9005      	str	r0, [sp, #20]
 801c718:	7852      	ldrb	r2, [r2, #1]
 801c71a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c71c:	0212      	lsls	r2, r2, #8
 801c71e:	5cc3      	ldrb	r3, [r0, r3]
 801c720:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801c724:	431a      	orrs	r2, r3
 801c726:	b293      	uxth	r3, r2
 801c728:	930b      	str	r3, [sp, #44]	; 0x2c
 801c72a:	2300      	movs	r3, #0
 801c72c:	9309      	str	r3, [sp, #36]	; 0x24
 801c72e:	2301      	movs	r3, #1
 801c730:	9301      	str	r3, [sp, #4]
 801c732:	9304      	str	r3, [sp, #16]
 801c734:	2300      	movs	r3, #0
 801c736:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801c73a:	9303      	str	r3, [sp, #12]
 801c73c:	f04f 0e01 	mov.w	lr, #1
 801c740:	2d00      	cmp	r5, #0
 801c742:	d07c      	beq.n	801c83e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801c744:	45ae      	cmp	lr, r5
 801c746:	d26b      	bcs.n	801c820 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801c748:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c74a:	eba5 050e 	sub.w	r5, r5, lr
 801c74e:	4543      	cmp	r3, r8
 801c750:	b2ad      	uxth	r5, r5
 801c752:	460c      	mov	r4, r1
 801c754:	d802      	bhi.n	801c75c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801c756:	e070      	b.n	801c83a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801c758:	2b00      	cmp	r3, #0
 801c75a:	d15c      	bne.n	801c816 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c75c:	9b05      	ldr	r3, [sp, #20]
 801c75e:	9a04      	ldr	r2, [sp, #16]
 801c760:	785b      	ldrb	r3, [r3, #1]
 801c762:	9904      	ldr	r1, [sp, #16]
 801c764:	f1c2 0207 	rsb	r2, r2, #7
 801c768:	4093      	lsls	r3, r2
 801c76a:	005b      	lsls	r3, r3, #1
 801c76c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c770:	9b05      	ldr	r3, [sp, #20]
 801c772:	781b      	ldrb	r3, [r3, #0]
 801c774:	410b      	asrs	r3, r1
 801c776:	3101      	adds	r1, #1
 801c778:	b2c9      	uxtb	r1, r1
 801c77a:	2908      	cmp	r1, #8
 801c77c:	9104      	str	r1, [sp, #16]
 801c77e:	9905      	ldr	r1, [sp, #20]
 801c780:	bf0a      	itet	eq
 801c782:	3102      	addeq	r1, #2
 801c784:	3101      	addne	r1, #1
 801c786:	9105      	streq	r1, [sp, #20]
 801c788:	b2db      	uxtb	r3, r3
 801c78a:	bf0a      	itet	eq
 801c78c:	2100      	moveq	r1, #0
 801c78e:	9105      	strne	r1, [sp, #20]
 801c790:	9104      	streq	r1, [sp, #16]
 801c792:	4313      	orrs	r3, r2
 801c794:	9910      	ldr	r1, [sp, #64]	; 0x40
 801c796:	b29a      	uxth	r2, r3
 801c798:	4291      	cmp	r1, r2
 801c79a:	d30a      	bcc.n	801c7b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801c79c:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801c7a0:	2301      	movs	r3, #1
 801c7a2:	9907      	ldr	r1, [sp, #28]
 801c7a4:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801c7a8:	d30f      	bcc.n	801c7ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c7aa:	2100      	movs	r1, #0
 801c7ac:	9301      	str	r3, [sp, #4]
 801c7ae:	9103      	str	r1, [sp, #12]
 801c7b0:	e032      	b.n	801c818 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801c7b2:	9b07      	ldr	r3, [sp, #28]
 801c7b4:	429a      	cmp	r2, r3
 801c7b6:	d318      	bcc.n	801c7ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801c7b8:	9b01      	ldr	r3, [sp, #4]
 801c7ba:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801c7be:	445b      	add	r3, fp
 801c7c0:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801c7c4:	9b01      	ldr	r3, [sp, #4]
 801c7c6:	3301      	adds	r3, #1
 801c7c8:	b29b      	uxth	r3, r3
 801c7ca:	9907      	ldr	r1, [sp, #28]
 801c7cc:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801c7d0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c7d4:	7108      	strb	r0, [r1, #4]
 801c7d6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c7d8:	80c8      	strh	r0, [r1, #6]
 801c7da:	9801      	ldr	r0, [sp, #4]
 801c7dc:	3001      	adds	r0, #1
 801c7de:	7148      	strb	r0, [r1, #5]
 801c7e0:	9907      	ldr	r1, [sp, #28]
 801c7e2:	3101      	adds	r1, #1
 801c7e4:	b289      	uxth	r1, r1
 801c7e6:	9107      	str	r1, [sp, #28]
 801c7e8:	e7df      	b.n	801c7aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801c7ea:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801c7ee:	4611      	mov	r1, r2
 801c7f0:	795b      	ldrb	r3, [r3, #5]
 801c7f2:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801c7f6:	4458      	add	r0, fp
 801c7f8:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801c7fa:	4406      	add	r6, r0
 801c7fc:	2e00      	cmp	r6, #0
 801c7fe:	dd06      	ble.n	801c80e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801c800:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c804:	790e      	ldrb	r6, [r1, #4]
 801c806:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801c80a:	88c9      	ldrh	r1, [r1, #6]
 801c80c:	e7f4      	b.n	801c7f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801c80e:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801c812:	b29b      	uxth	r3, r3
 801c814:	e7c5      	b.n	801c7a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801c816:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c818:	920b      	str	r2, [sp, #44]	; 0x2c
 801c81a:	4621      	mov	r1, r4
 801c81c:	469e      	mov	lr, r3
 801c81e:	e78f      	b.n	801c740 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801c820:	9a03      	ldr	r2, [sp, #12]
 801c822:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c826:	442a      	add	r2, r5
 801c828:	ebae 0305 	sub.w	r3, lr, r5
 801c82c:	b292      	uxth	r2, r2
 801c82e:	b29b      	uxth	r3, r3
 801c830:	9203      	str	r2, [sp, #12]
 801c832:	2500      	movs	r5, #0
 801c834:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c836:	4542      	cmp	r2, r8
 801c838:	d88e      	bhi.n	801c758 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801c83a:	4621      	mov	r1, r4
 801c83c:	e74e      	b.n	801c6dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801c83e:	458e      	cmp	lr, r1
 801c840:	bf29      	itett	cs
 801c842:	ebae 0301 	subcs.w	r3, lr, r1
 801c846:	eba1 040e 	subcc.w	r4, r1, lr
 801c84a:	b29b      	uxthcs	r3, r3
 801c84c:	910c      	strcs	r1, [sp, #48]	; 0x30
 801c84e:	bf2f      	iteee	cs
 801c850:	462c      	movcs	r4, r5
 801c852:	b2a4      	uxthcc	r4, r4
 801c854:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801c858:	462b      	movcc	r3, r5
 801c85a:	f04f 0900 	mov.w	r9, #0
 801c85e:	9a03      	ldr	r2, [sp, #12]
 801c860:	980c      	ldr	r0, [sp, #48]	; 0x30
 801c862:	444a      	add	r2, r9
 801c864:	4548      	cmp	r0, r9
 801c866:	b292      	uxth	r2, r2
 801c868:	d074      	beq.n	801c954 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801c86a:	445a      	add	r2, fp
 801c86c:	2004      	movs	r0, #4
 801c86e:	4605      	mov	r5, r0
 801c870:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801c874:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c876:	fb15 0202 	smlabb	r2, r5, r2, r0
 801c87a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c87c:	5880      	ldr	r0, [r0, r2]
 801c87e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801c882:	d014      	beq.n	801c8ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c884:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801c888:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801c88c:	d112      	bne.n	801c8b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c88e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c890:	2aff      	cmp	r2, #255	; 0xff
 801c892:	d10f      	bne.n	801c8b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c894:	0942      	lsrs	r2, r0, #5
 801c896:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801c89a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c89e:	f025 0507 	bic.w	r5, r5, #7
 801c8a2:	4315      	orrs	r5, r2
 801c8a4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c8a8:	4305      	orrs	r5, r0
 801c8aa:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801c8ae:	f109 0901 	add.w	r9, r9, #1
 801c8b2:	e7d4      	b.n	801c85e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801c8b4:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801c8b8:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c8bc:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801c8c0:	9215      	str	r2, [sp, #84]	; 0x54
 801c8c2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c8c4:	fb02 fa0a 	mul.w	sl, r2, sl
 801c8c8:	f10a 0201 	add.w	r2, sl, #1
 801c8cc:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801c8d0:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c8d4:	1212      	asrs	r2, r2, #8
 801c8d6:	fa1f fa82 	uxth.w	sl, r2
 801c8da:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801c8de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c8e2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c8e6:	43d2      	mvns	r2, r2
 801c8e8:	b2d2      	uxtb	r2, r2
 801c8ea:	fb16 f60a 	smulbb	r6, r6, sl
 801c8ee:	fa5f fc8c 	uxtb.w	ip, ip
 801c8f2:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c8f6:	b2c0      	uxtb	r0, r0
 801c8f8:	fb07 6702 	mla	r7, r7, r2, r6
 801c8fc:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801c900:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801c902:	fb10 f00a 	smulbb	r0, r0, sl
 801c906:	fb0c 0002 	mla	r0, ip, r2, r0
 801c90a:	b2ed      	uxtb	r5, r5
 801c90c:	b2bf      	uxth	r7, r7
 801c90e:	fb15 f50a 	smulbb	r5, r5, sl
 801c912:	b280      	uxth	r0, r0
 801c914:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c918:	fb06 5602 	mla	r6, r6, r2, r5
 801c91c:	1c7a      	adds	r2, r7, #1
 801c91e:	1c45      	adds	r5, r0, #1
 801c920:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c924:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c928:	b2b6      	uxth	r6, r6
 801c92a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c92e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c932:	432f      	orrs	r7, r5
 801c934:	1c75      	adds	r5, r6, #1
 801c936:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c93a:	096d      	lsrs	r5, r5, #5
 801c93c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c940:	432f      	orrs	r7, r5
 801c942:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801c946:	e7b2      	b.n	801c8ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c948:	20012f2c 	.word	0x20012f2c
 801c94c:	20012f26 	.word	0x20012f26
 801c950:	fffff7fb 	.word	0xfffff7fb
 801c954:	9203      	str	r2, [sp, #12]
 801c956:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c958:	458e      	cmp	lr, r1
 801c95a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c95e:	f4ff af68 	bcc.w	801c832 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801c962:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801c964:	9906      	ldr	r1, [sp, #24]
 801c966:	8812      	ldrh	r2, [r2, #0]
 801c968:	1a52      	subs	r2, r2, r1
 801c96a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c96e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c970:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c972:	3201      	adds	r2, #1
 801c974:	428a      	cmp	r2, r1
 801c976:	9209      	str	r2, [sp, #36]	; 0x24
 801c978:	d111      	bne.n	801c99e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801c97a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801c97e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801c982:	9b06      	ldr	r3, [sp, #24]
 801c984:	eba5 0509 	sub.w	r5, r5, r9
 801c988:	b2ad      	uxth	r5, r5
 801c98a:	2d00      	cmp	r5, #0
 801c98c:	bf08      	it	eq
 801c98e:	4619      	moveq	r1, r3
 801c990:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c992:	bf18      	it	ne
 801c994:	2100      	movne	r1, #0
 801c996:	3301      	adds	r3, #1
 801c998:	930d      	str	r3, [sp, #52]	; 0x34
 801c99a:	b289      	uxth	r1, r1
 801c99c:	e695      	b.n	801c6ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801c99e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c9a2:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801c9a6:	1b2d      	subs	r5, r5, r4
 801c9a8:	b2ad      	uxth	r5, r5
 801c9aa:	2d00      	cmp	r5, #0
 801c9ac:	bf18      	it	ne
 801c9ae:	2400      	movne	r4, #0
 801c9b0:	e740      	b.n	801c834 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801c9b2:	4b04      	ldr	r3, [pc, #16]	; (801c9c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801c9b4:	6818      	ldr	r0, [r3, #0]
 801c9b6:	6803      	ldr	r3, [r0, #0]
 801c9b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c9ba:	4798      	blx	r3
 801c9bc:	b01d      	add	sp, #116	; 0x74
 801c9be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c9c2:	bf00      	nop
 801c9c4:	20012f2c 	.word	0x20012f2c

0801c9c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c9c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c9cc:	b09f      	sub	sp, #124	; 0x7c
 801c9ce:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c9d2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c9d6:	920a      	str	r2, [sp, #40]	; 0x28
 801c9d8:	461d      	mov	r5, r3
 801c9da:	4604      	mov	r4, r0
 801c9dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c9de:	2a00      	cmp	r2, #0
 801c9e0:	f000 81fa 	beq.w	801cdd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801c9e4:	6828      	ldr	r0, [r5, #0]
 801c9e6:	6869      	ldr	r1, [r5, #4]
 801c9e8:	aa1a      	add	r2, sp, #104	; 0x68
 801c9ea:	c203      	stmia	r2!, {r0, r1}
 801c9ec:	6818      	ldr	r0, [r3, #0]
 801c9ee:	6859      	ldr	r1, [r3, #4]
 801c9f0:	aa1c      	add	r2, sp, #112	; 0x70
 801c9f2:	c203      	stmia	r2!, {r0, r1}
 801c9f4:	a81a      	add	r0, sp, #104	; 0x68
 801c9f6:	f7f8 fb8f 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c9fa:	4629      	mov	r1, r5
 801c9fc:	a81c      	add	r0, sp, #112	; 0x70
 801c9fe:	f7f8 fbcf 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ca02:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801ca06:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801ca0a:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801ca0e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801ca12:	bfd7      	itett	le
 801ca14:	b29a      	uxthle	r2, r3
 801ca16:	2201      	movgt	r2, #1
 801ca18:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801ca1c:	fb91 f2f2 	sdivle	r2, r1, r2
 801ca20:	9201      	str	r2, [sp, #4]
 801ca22:	9801      	ldr	r0, [sp, #4]
 801ca24:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801ca28:	fb92 f0f0 	sdiv	r0, r2, r0
 801ca2c:	b280      	uxth	r0, r0
 801ca2e:	9010      	str	r0, [sp, #64]	; 0x40
 801ca30:	9901      	ldr	r1, [sp, #4]
 801ca32:	9801      	ldr	r0, [sp, #4]
 801ca34:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ca36:	440e      	add	r6, r1
 801ca38:	fb05 2510 	mls	r5, r5, r0, r2
 801ca3c:	fb15 f503 	smulbb	r5, r5, r3
 801ca40:	3e01      	subs	r6, #1
 801ca42:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801ca46:	fb96 f6f1 	sdiv	r6, r6, r1
 801ca4a:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801ca4e:	440d      	add	r5, r1
 801ca50:	4419      	add	r1, r3
 801ca52:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801ca56:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801ca5a:	441a      	add	r2, r3
 801ca5c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801ca60:	9304      	str	r3, [sp, #16]
 801ca62:	4b96      	ldr	r3, [pc, #600]	; (801ccbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801ca64:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801ca68:	6818      	ldr	r0, [r3, #0]
 801ca6a:	6803      	ldr	r3, [r0, #0]
 801ca6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ca6e:	4798      	blx	r3
 801ca70:	4b93      	ldr	r3, [pc, #588]	; (801ccc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801ca72:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801ca76:	881a      	ldrh	r2, [r3, #0]
 801ca78:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801ca7c:	9318      	str	r3, [sp, #96]	; 0x60
 801ca7e:	fb02 c101 	mla	r1, r2, r1, ip
 801ca82:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801ca86:	4357      	muls	r7, r2
 801ca88:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801ca8c:	3601      	adds	r6, #1
 801ca8e:	920b      	str	r2, [sp, #44]	; 0x2c
 801ca90:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ca92:	4b8c      	ldr	r3, [pc, #560]	; (801ccc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801ca94:	b2b6      	uxth	r6, r6
 801ca96:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801ca9a:	1d32      	adds	r2, r6, #4
 801ca9c:	9206      	str	r2, [sp, #24]
 801ca9e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801caa0:	43d2      	mvns	r2, r2
 801caa2:	b2d2      	uxtb	r2, r2
 801caa4:	b2ad      	uxth	r5, r5
 801caa6:	9215      	str	r2, [sp, #84]	; 0x54
 801caa8:	9a04      	ldr	r2, [sp, #16]
 801caaa:	2d00      	cmp	r5, #0
 801caac:	bf0c      	ite	eq
 801caae:	4611      	moveq	r1, r2
 801cab0:	2100      	movne	r1, #0
 801cab2:	2200      	movs	r2, #0
 801cab4:	1b1b      	subs	r3, r3, r4
 801cab6:	b289      	uxth	r1, r1
 801cab8:	920d      	str	r2, [sp, #52]	; 0x34
 801caba:	9319      	str	r3, [sp, #100]	; 0x64
 801cabc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cabe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cac0:	fa12 f383 	uxtah	r3, r2, r3
 801cac4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cac6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801caca:	3304      	adds	r3, #4
 801cacc:	9307      	str	r3, [sp, #28]
 801cace:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cad0:	455b      	cmp	r3, fp
 801cad2:	f240 817c 	bls.w	801cdce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801cad6:	9a01      	ldr	r2, [sp, #4]
 801cad8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801cadc:	fbb5 f3f3 	udiv	r3, r5, r3
 801cae0:	1ad3      	subs	r3, r2, r3
 801cae2:	b29b      	uxth	r3, r3
 801cae4:	9316      	str	r3, [sp, #88]	; 0x58
 801cae6:	9b07      	ldr	r3, [sp, #28]
 801cae8:	9807      	ldr	r0, [sp, #28]
 801caea:	785a      	ldrb	r2, [r3, #1]
 801caec:	789b      	ldrb	r3, [r3, #2]
 801caee:	7800      	ldrb	r0, [r0, #0]
 801caf0:	9011      	str	r0, [sp, #68]	; 0x44
 801caf2:	021b      	lsls	r3, r3, #8
 801caf4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801caf8:	9a07      	ldr	r2, [sp, #28]
 801cafa:	78d2      	ldrb	r2, [r2, #3]
 801cafc:	4313      	orrs	r3, r2
 801cafe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cb00:	3001      	adds	r0, #1
 801cb02:	441a      	add	r2, r3
 801cb04:	9005      	str	r0, [sp, #20]
 801cb06:	1c50      	adds	r0, r2, #1
 801cb08:	9003      	str	r0, [sp, #12]
 801cb0a:	7852      	ldrb	r2, [r2, #1]
 801cb0c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cb0e:	0212      	lsls	r2, r2, #8
 801cb10:	5cc3      	ldrb	r3, [r0, r3]
 801cb12:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801cb16:	431a      	orrs	r2, r3
 801cb18:	b293      	uxth	r3, r2
 801cb1a:	930c      	str	r3, [sp, #48]	; 0x30
 801cb1c:	2300      	movs	r3, #0
 801cb1e:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801cb22:	9308      	str	r3, [sp, #32]
 801cb24:	461a      	mov	r2, r3
 801cb26:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801cb2a:	930e      	str	r3, [sp, #56]	; 0x38
 801cb2c:	f04f 0801 	mov.w	r8, #1
 801cb30:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801cb34:	f8cd 8008 	str.w	r8, [sp, #8]
 801cb38:	46c4      	mov	ip, r8
 801cb3a:	930f      	str	r3, [sp, #60]	; 0x3c
 801cb3c:	2d00      	cmp	r5, #0
 801cb3e:	d07c      	beq.n	801cc3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801cb40:	45ac      	cmp	ip, r5
 801cb42:	d26c      	bcs.n	801cc1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801cb44:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cb46:	eba5 050c 	sub.w	r5, r5, ip
 801cb4a:	455b      	cmp	r3, fp
 801cb4c:	b2ad      	uxth	r5, r5
 801cb4e:	4608      	mov	r0, r1
 801cb50:	d802      	bhi.n	801cb58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801cb52:	e070      	b.n	801cc36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801cb54:	2b00      	cmp	r3, #0
 801cb56:	d15c      	bne.n	801cc12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801cb58:	9b03      	ldr	r3, [sp, #12]
 801cb5a:	9a02      	ldr	r2, [sp, #8]
 801cb5c:	785b      	ldrb	r3, [r3, #1]
 801cb5e:	9902      	ldr	r1, [sp, #8]
 801cb60:	f1c2 0207 	rsb	r2, r2, #7
 801cb64:	4093      	lsls	r3, r2
 801cb66:	005b      	lsls	r3, r3, #1
 801cb68:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801cb6c:	9b03      	ldr	r3, [sp, #12]
 801cb6e:	781b      	ldrb	r3, [r3, #0]
 801cb70:	410b      	asrs	r3, r1
 801cb72:	3101      	adds	r1, #1
 801cb74:	b2c9      	uxtb	r1, r1
 801cb76:	2908      	cmp	r1, #8
 801cb78:	9102      	str	r1, [sp, #8]
 801cb7a:	9903      	ldr	r1, [sp, #12]
 801cb7c:	bf0a      	itet	eq
 801cb7e:	3102      	addeq	r1, #2
 801cb80:	3101      	addne	r1, #1
 801cb82:	9103      	streq	r1, [sp, #12]
 801cb84:	b2db      	uxtb	r3, r3
 801cb86:	bf0a      	itet	eq
 801cb88:	2100      	moveq	r1, #0
 801cb8a:	9103      	strne	r1, [sp, #12]
 801cb8c:	9102      	streq	r1, [sp, #8]
 801cb8e:	4313      	orrs	r3, r2
 801cb90:	9911      	ldr	r1, [sp, #68]	; 0x44
 801cb92:	b29a      	uxth	r2, r3
 801cb94:	4291      	cmp	r1, r2
 801cb96:	d30a      	bcc.n	801cbae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801cb98:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801cb9c:	2301      	movs	r3, #1
 801cb9e:	9905      	ldr	r1, [sp, #20]
 801cba0:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801cba4:	d30f      	bcc.n	801cbc6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801cba6:	2100      	movs	r1, #0
 801cba8:	4698      	mov	r8, r3
 801cbaa:	9100      	str	r1, [sp, #0]
 801cbac:	e032      	b.n	801cc14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801cbae:	9b05      	ldr	r3, [sp, #20]
 801cbb0:	429a      	cmp	r2, r3
 801cbb2:	d318      	bcc.n	801cbe6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801cbb4:	eb04 0308 	add.w	r3, r4, r8
 801cbb8:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801cbbc:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801cbc0:	f108 0301 	add.w	r3, r8, #1
 801cbc4:	b29b      	uxth	r3, r3
 801cbc6:	9905      	ldr	r1, [sp, #20]
 801cbc8:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801cbcc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801cbd0:	710e      	strb	r6, [r1, #4]
 801cbd2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801cbd4:	80ce      	strh	r6, [r1, #6]
 801cbd6:	f108 0601 	add.w	r6, r8, #1
 801cbda:	714e      	strb	r6, [r1, #5]
 801cbdc:	9905      	ldr	r1, [sp, #20]
 801cbde:	3101      	adds	r1, #1
 801cbe0:	b289      	uxth	r1, r1
 801cbe2:	9105      	str	r1, [sp, #20]
 801cbe4:	e7df      	b.n	801cba6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801cbe6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801cbea:	4611      	mov	r1, r2
 801cbec:	795b      	ldrb	r3, [r3, #5]
 801cbee:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801cbf2:	4426      	add	r6, r4
 801cbf4:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801cbf6:	4437      	add	r7, r6
 801cbf8:	2f00      	cmp	r7, #0
 801cbfa:	dd06      	ble.n	801cc0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801cbfc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801cc00:	790f      	ldrb	r7, [r1, #4]
 801cc02:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801cc06:	88c9      	ldrh	r1, [r1, #6]
 801cc08:	e7f4      	b.n	801cbf4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801cc0a:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801cc0e:	b29b      	uxth	r3, r3
 801cc10:	e7c5      	b.n	801cb9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801cc12:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801cc14:	920c      	str	r2, [sp, #48]	; 0x30
 801cc16:	4601      	mov	r1, r0
 801cc18:	9a00      	ldr	r2, [sp, #0]
 801cc1a:	469c      	mov	ip, r3
 801cc1c:	e78e      	b.n	801cb3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801cc1e:	1957      	adds	r7, r2, r5
 801cc20:	ebac 0305 	sub.w	r3, ip, r5
 801cc24:	b2ba      	uxth	r2, r7
 801cc26:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801cc2a:	9200      	str	r2, [sp, #0]
 801cc2c:	b29b      	uxth	r3, r3
 801cc2e:	2500      	movs	r5, #0
 801cc30:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801cc32:	455a      	cmp	r2, fp
 801cc34:	d88e      	bhi.n	801cb54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801cc36:	4601      	mov	r1, r0
 801cc38:	e749      	b.n	801cace <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801cc3a:	458c      	cmp	ip, r1
 801cc3c:	bf2c      	ite	cs
 801cc3e:	4628      	movcs	r0, r5
 801cc40:	462b      	movcc	r3, r5
 801cc42:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801cc44:	bf27      	ittee	cs
 801cc46:	9109      	strcs	r1, [sp, #36]	; 0x24
 801cc48:	ebac 0301 	subcs.w	r3, ip, r1
 801cc4c:	eba1 000c 	subcc.w	r0, r1, ip
 801cc50:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801cc54:	bf2c      	ite	cs
 801cc56:	b29b      	uxthcs	r3, r3
 801cc58:	b280      	uxthcc	r0, r0
 801cc5a:	2dff      	cmp	r5, #255	; 0xff
 801cc5c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801cc5e:	eb02 0705 	add.w	r7, r2, r5
 801cc62:	b2bd      	uxth	r5, r7
 801cc64:	9500      	str	r5, [sp, #0]
 801cc66:	d12f      	bne.n	801ccc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801cc68:	465e      	mov	r6, fp
 801cc6a:	9d00      	ldr	r5, [sp, #0]
 801cc6c:	42aa      	cmp	r2, r5
 801cc6e:	f040 8084 	bne.w	801cd7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801cc72:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801cc74:	458c      	cmp	ip, r1
 801cc76:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801cc7a:	d3d8      	bcc.n	801cc2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801cc7c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801cc7e:	9904      	ldr	r1, [sp, #16]
 801cc80:	8812      	ldrh	r2, [r2, #0]
 801cc82:	1a52      	subs	r2, r2, r1
 801cc84:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801cc88:	9a08      	ldr	r2, [sp, #32]
 801cc8a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801cc8c:	3201      	adds	r2, #1
 801cc8e:	428a      	cmp	r2, r1
 801cc90:	9208      	str	r2, [sp, #32]
 801cc92:	f040 8092 	bne.w	801cdba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801cc96:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801cc9a:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801cc9e:	9b04      	ldr	r3, [sp, #16]
 801cca0:	eba5 050c 	sub.w	r5, r5, ip
 801cca4:	b2ad      	uxth	r5, r5
 801cca6:	2d00      	cmp	r5, #0
 801cca8:	bf08      	it	eq
 801ccaa:	4619      	moveq	r1, r3
 801ccac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ccae:	bf18      	it	ne
 801ccb0:	2100      	movne	r1, #0
 801ccb2:	3301      	adds	r3, #1
 801ccb4:	930d      	str	r3, [sp, #52]	; 0x34
 801ccb6:	b289      	uxth	r1, r1
 801ccb8:	e700      	b.n	801cabc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801ccba:	bf00      	nop
 801ccbc:	20012f2c 	.word	0x20012f2c
 801ccc0:	20012f26 	.word	0x20012f26
 801ccc4:	fffff7fb 	.word	0xfffff7fb
 801ccc8:	46d9      	mov	r9, fp
 801ccca:	9d00      	ldr	r5, [sp, #0]
 801cccc:	42aa      	cmp	r2, r5
 801ccce:	d0d0      	beq.n	801cc72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801ccd0:	1c55      	adds	r5, r2, #1
 801ccd2:	4422      	add	r2, r4
 801ccd4:	9517      	str	r5, [sp, #92]	; 0x5c
 801ccd6:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801ccda:	9a06      	ldr	r2, [sp, #24]
 801ccdc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801cce0:	4472      	add	r2, lr
 801cce2:	9212      	str	r2, [sp, #72]	; 0x48
 801cce4:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801cce6:	f8b9 2000 	ldrh.w	r2, [r9]
 801ccea:	f897 a002 	ldrb.w	sl, [r7, #2]
 801ccee:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801ccf0:	1216      	asrs	r6, r2, #8
 801ccf2:	fb1a fa07 	smulbb	sl, sl, r7
 801ccf6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ccfa:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801ccfc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cd00:	fb06 a607 	mla	r6, r6, r7, sl
 801cd04:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801cd06:	f897 a001 	ldrb.w	sl, [r7, #1]
 801cd0a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801cd0c:	10d5      	asrs	r5, r2, #3
 801cd0e:	fb1a fa07 	smulbb	sl, sl, r7
 801cd12:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cd16:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801cd18:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cd1c:	fb05 a507 	mla	r5, r5, r7, sl
 801cd20:	9f06      	ldr	r7, [sp, #24]
 801cd22:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801cd26:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801cd28:	00d2      	lsls	r2, r2, #3
 801cd2a:	fb1e fe07 	smulbb	lr, lr, r7
 801cd2e:	b2d2      	uxtb	r2, r2
 801cd30:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801cd32:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cd36:	b2b6      	uxth	r6, r6
 801cd38:	fb02 e207 	mla	r2, r2, r7, lr
 801cd3c:	b292      	uxth	r2, r2
 801cd3e:	b2ad      	uxth	r5, r5
 801cd40:	f106 0a01 	add.w	sl, r6, #1
 801cd44:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801cd48:	f102 0e01 	add.w	lr, r2, #1
 801cd4c:	f105 0a01 	add.w	sl, r5, #1
 801cd50:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801cd54:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801cd58:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801cd5c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801cd60:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cd64:	ea4e 0606 	orr.w	r6, lr, r6
 801cd68:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801cd6c:	ea46 060a 	orr.w	r6, r6, sl
 801cd70:	f829 6b02 	strh.w	r6, [r9], #2
 801cd74:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801cd78:	e7a7      	b.n	801ccca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801cd7a:	f102 0e01 	add.w	lr, r2, #1
 801cd7e:	4422      	add	r2, r4
 801cd80:	9f06      	ldr	r7, [sp, #24]
 801cd82:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801cd86:	9a06      	ldr	r2, [sp, #24]
 801cd88:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801cd8c:	eb02 0a05 	add.w	sl, r2, r5
 801cd90:	4a13      	ldr	r2, [pc, #76]	; (801cde0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801cd92:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801cd96:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801cd9a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801cd9e:	00d2      	lsls	r2, r2, #3
 801cda0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cda4:	ea49 0202 	orr.w	r2, r9, r2
 801cda8:	f817 9005 	ldrb.w	r9, [r7, r5]
 801cdac:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801cdb0:	f826 2b02 	strh.w	r2, [r6], #2
 801cdb4:	fa1f f28e 	uxth.w	r2, lr
 801cdb8:	e757      	b.n	801cc6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801cdba:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801cdbe:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801cdc2:	1a2d      	subs	r5, r5, r0
 801cdc4:	b2ad      	uxth	r5, r5
 801cdc6:	2d00      	cmp	r5, #0
 801cdc8:	bf18      	it	ne
 801cdca:	2000      	movne	r0, #0
 801cdcc:	e730      	b.n	801cc30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801cdce:	4b05      	ldr	r3, [pc, #20]	; (801cde4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801cdd0:	6818      	ldr	r0, [r3, #0]
 801cdd2:	6803      	ldr	r3, [r0, #0]
 801cdd4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cdd6:	4798      	blx	r3
 801cdd8:	b01f      	add	sp, #124	; 0x7c
 801cdda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cdde:	bf00      	nop
 801cde0:	fffff800 	.word	0xfffff800
 801cde4:	20012f2c 	.word	0x20012f2c

0801cde8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801cde8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cdec:	b091      	sub	sp, #68	; 0x44
 801cdee:	469b      	mov	fp, r3
 801cdf0:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801cdf4:	4616      	mov	r6, r2
 801cdf6:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801cdfa:	f9b3 2000 	ldrsh.w	r2, [r3]
 801cdfe:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801ce02:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801ce06:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801ce0a:	4604      	mov	r4, r0
 801ce0c:	460d      	mov	r5, r1
 801ce0e:	4640      	mov	r0, r8
 801ce10:	4659      	mov	r1, fp
 801ce12:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801ce16:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801ce1a:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801ce1e:	f7f3 fa1d 	bl	801025c <_ZN8touchgfx4RectaNERKS0_>
 801ce22:	4631      	mov	r1, r6
 801ce24:	4640      	mov	r0, r8
 801ce26:	f7f3 fa19 	bl	801025c <_ZN8touchgfx4RectaNERKS0_>
 801ce2a:	4b74      	ldr	r3, [pc, #464]	; (801cffc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801ce2c:	8818      	ldrh	r0, [r3, #0]
 801ce2e:	4b74      	ldr	r3, [pc, #464]	; (801d000 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801ce30:	8819      	ldrh	r1, [r3, #0]
 801ce32:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801ce36:	2b00      	cmp	r3, #0
 801ce38:	b202      	sxth	r2, r0
 801ce3a:	b20e      	sxth	r6, r1
 801ce3c:	da07      	bge.n	801ce4e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801ce3e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801ce42:	4463      	add	r3, ip
 801ce44:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801ce48:	2300      	movs	r3, #0
 801ce4a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801ce4e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801ce52:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801ce56:	1ad2      	subs	r2, r2, r3
 801ce58:	4594      	cmp	ip, r2
 801ce5a:	bfc4      	itt	gt
 801ce5c:	1ac2      	subgt	r2, r0, r3
 801ce5e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801ce62:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801ce66:	2a00      	cmp	r2, #0
 801ce68:	da07      	bge.n	801ce7a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801ce6a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801ce6e:	4462      	add	r2, ip
 801ce70:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801ce74:	2200      	movs	r2, #0
 801ce76:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801ce7a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801ce7e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801ce82:	eba6 060a 	sub.w	r6, r6, sl
 801ce86:	42b2      	cmp	r2, r6
 801ce88:	bfc4      	itt	gt
 801ce8a:	eba1 020a 	subgt.w	r2, r1, sl
 801ce8e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801ce92:	4a5c      	ldr	r2, [pc, #368]	; (801d004 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801ce94:	7812      	ldrb	r2, [r2, #0]
 801ce96:	b9a2      	cbnz	r2, 801cec2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801ce98:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801ce9c:	4286      	cmp	r6, r0
 801ce9e:	4640      	mov	r0, r8
 801cea0:	9303      	str	r3, [sp, #12]
 801cea2:	bf14      	ite	ne
 801cea4:	2600      	movne	r6, #0
 801cea6:	2601      	moveq	r6, #1
 801cea8:	f7f3 fa1b 	bl	80102e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801ceac:	9b03      	ldr	r3, [sp, #12]
 801ceae:	b160      	cbz	r0, 801ceca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801ceb0:	2300      	movs	r3, #0
 801ceb2:	8023      	strh	r3, [r4, #0]
 801ceb4:	8063      	strh	r3, [r4, #2]
 801ceb6:	80a3      	strh	r3, [r4, #4]
 801ceb8:	4620      	mov	r0, r4
 801ceba:	80e3      	strh	r3, [r4, #6]
 801cebc:	b011      	add	sp, #68	; 0x44
 801cebe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cec2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801cec6:	428e      	cmp	r6, r1
 801cec8:	e7e9      	b.n	801ce9e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801ceca:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801cece:	9205      	str	r2, [sp, #20]
 801ced0:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801ced4:	9206      	str	r2, [sp, #24]
 801ced6:	f8bb 2000 	ldrh.w	r2, [fp]
 801ceda:	900e      	str	r0, [sp, #56]	; 0x38
 801cedc:	1a9b      	subs	r3, r3, r2
 801cede:	b21b      	sxth	r3, r3
 801cee0:	9303      	str	r3, [sp, #12]
 801cee2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801cee6:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801ceea:	ebaa 0a03 	sub.w	sl, sl, r3
 801ceee:	fa0f f38a 	sxth.w	r3, sl
 801cef2:	9304      	str	r3, [sp, #16]
 801cef4:	9b03      	ldr	r3, [sp, #12]
 801cef6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801cefa:	9b04      	ldr	r3, [sp, #16]
 801cefc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801cf00:	9b05      	ldr	r3, [sp, #20]
 801cf02:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801cf06:	a90e      	add	r1, sp, #56	; 0x38
 801cf08:	9b06      	ldr	r3, [sp, #24]
 801cf0a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801cf0e:	a80c      	add	r0, sp, #48	; 0x30
 801cf10:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801cf14:	f7f8 f944 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cf18:	4640      	mov	r0, r8
 801cf1a:	f7f8 f8fd 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf1e:	a80e      	add	r0, sp, #56	; 0x38
 801cf20:	f7f8 f8fa 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf24:	4b38      	ldr	r3, [pc, #224]	; (801d008 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801cf26:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801cf2a:	881b      	ldrh	r3, [r3, #0]
 801cf2c:	9307      	str	r3, [sp, #28]
 801cf2e:	682b      	ldr	r3, [r5, #0]
 801cf30:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801d00c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801cf34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801cf36:	4628      	mov	r0, r5
 801cf38:	4798      	blx	r3
 801cf3a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801cf3e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801cf42:	4681      	mov	r9, r0
 801cf44:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801cf48:	f8db 0000 	ldr.w	r0, [fp]
 801cf4c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801cf4e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801cf52:	6803      	ldr	r3, [r0, #0]
 801cf54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801cf56:	4798      	blx	r3
 801cf58:	4607      	mov	r7, r0
 801cf5a:	f8db 0000 	ldr.w	r0, [fp]
 801cf5e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801cf62:	6803      	ldr	r3, [r0, #0]
 801cf64:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801cf68:	9109      	str	r1, [sp, #36]	; 0x24
 801cf6a:	9208      	str	r2, [sp, #32]
 801cf6c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cf6e:	4798      	blx	r3
 801cf70:	f010 0f01 	tst.w	r0, #1
 801cf74:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801cf78:	d012      	beq.n	801cfa0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801cf7a:	f8db 0000 	ldr.w	r0, [fp]
 801cf7e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801cf82:	6803      	ldr	r3, [r0, #0]
 801cf84:	9200      	str	r2, [sp, #0]
 801cf86:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801cf88:	e898 0006 	ldmia.w	r8, {r1, r2}
 801cf8c:	462b      	mov	r3, r5
 801cf8e:	47b0      	blx	r6
 801cf90:	9b03      	ldr	r3, [sp, #12]
 801cf92:	8023      	strh	r3, [r4, #0]
 801cf94:	9b04      	ldr	r3, [sp, #16]
 801cf96:	8063      	strh	r3, [r4, #2]
 801cf98:	9b05      	ldr	r3, [sp, #20]
 801cf9a:	80a3      	strh	r3, [r4, #4]
 801cf9c:	9b06      	ldr	r3, [sp, #24]
 801cf9e:	e78b      	b.n	801ceb8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801cfa0:	fb09 f202 	mul.w	r2, r9, r2
 801cfa4:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801cfa8:	440f      	add	r7, r1
 801cfaa:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801cfae:	b166      	cbz	r6, 801cfca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801cfb0:	9a07      	ldr	r2, [sp, #28]
 801cfb2:	4592      	cmp	sl, r2
 801cfb4:	d109      	bne.n	801cfca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801cfb6:	f8db 0000 	ldr.w	r0, [fp]
 801cfba:	6802      	ldr	r2, [r0, #0]
 801cfbc:	fb09 f303 	mul.w	r3, r9, r3
 801cfc0:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801cfc2:	4629      	mov	r1, r5
 801cfc4:	463a      	mov	r2, r7
 801cfc6:	47b0      	blx	r6
 801cfc8:	e7e2      	b.n	801cf90 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801cfca:	fb0a f303 	mul.w	r3, sl, r3
 801cfce:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801d00c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801cfd2:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801cfd6:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801cfda:	4545      	cmp	r5, r8
 801cfdc:	d2d8      	bcs.n	801cf90 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801cfde:	f8db 0000 	ldr.w	r0, [fp]
 801cfe2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801cfe6:	6802      	ldr	r2, [r0, #0]
 801cfe8:	4629      	mov	r1, r5
 801cfea:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801cfee:	005b      	lsls	r3, r3, #1
 801cff0:	463a      	mov	r2, r7
 801cff2:	47d0      	blx	sl
 801cff4:	444f      	add	r7, r9
 801cff6:	4435      	add	r5, r6
 801cff8:	e7ef      	b.n	801cfda <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801cffa:	bf00      	nop
 801cffc:	20012f20 	.word	0x20012f20
 801d000:	20012f22 	.word	0x20012f22
 801d004:	20012f24 	.word	0x20012f24
 801d008:	20012f26 	.word	0x20012f26
 801d00c:	20012f2c 	.word	0x20012f2c

0801d010 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801d010:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d012:	4606      	mov	r6, r0
 801d014:	b087      	sub	sp, #28
 801d016:	460c      	mov	r4, r1
 801d018:	4617      	mov	r7, r2
 801d01a:	461d      	mov	r5, r3
 801d01c:	b333      	cbz	r3, 801d06c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d01e:	4608      	mov	r0, r1
 801d020:	f7f3 f95f 	bl	80102e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d024:	bb10      	cbnz	r0, 801d06c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d026:	6820      	ldr	r0, [r4, #0]
 801d028:	6861      	ldr	r1, [r4, #4]
 801d02a:	4c1c      	ldr	r4, [pc, #112]	; (801d09c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801d02c:	ab04      	add	r3, sp, #16
 801d02e:	c303      	stmia	r3!, {r0, r1}
 801d030:	a804      	add	r0, sp, #16
 801d032:	f7f8 f871 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d036:	6820      	ldr	r0, [r4, #0]
 801d038:	6803      	ldr	r3, [r0, #0]
 801d03a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d03c:	4798      	blx	r3
 801d03e:	2dff      	cmp	r5, #255	; 0xff
 801d040:	d016      	beq.n	801d070 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801d042:	f010 0f08 	tst.w	r0, #8
 801d046:	6820      	ldr	r0, [r4, #0]
 801d048:	d015      	beq.n	801d076 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801d04a:	2400      	movs	r4, #0
 801d04c:	6801      	ldr	r1, [r0, #0]
 801d04e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801d052:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d056:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801d05a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801d05e:	9401      	str	r4, [sp, #4]
 801d060:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801d064:	9400      	str	r4, [sp, #0]
 801d066:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801d068:	4639      	mov	r1, r7
 801d06a:	47a0      	blx	r4
 801d06c:	b007      	add	sp, #28
 801d06e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d070:	f010 0f02 	tst.w	r0, #2
 801d074:	e7e7      	b.n	801d046 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801d076:	6803      	ldr	r3, [r0, #0]
 801d078:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d07a:	4798      	blx	r3
 801d07c:	4b08      	ldr	r3, [pc, #32]	; (801d0a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801d07e:	881a      	ldrh	r2, [r3, #0]
 801d080:	6833      	ldr	r3, [r6, #0]
 801d082:	e9cd 7500 	strd	r7, r5, [sp]
 801d086:	4601      	mov	r1, r0
 801d088:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801d08a:	4630      	mov	r0, r6
 801d08c:	ab04      	add	r3, sp, #16
 801d08e:	47a8      	blx	r5
 801d090:	6820      	ldr	r0, [r4, #0]
 801d092:	6803      	ldr	r3, [r0, #0]
 801d094:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d096:	4798      	blx	r3
 801d098:	e7e8      	b.n	801d06c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d09a:	bf00      	nop
 801d09c:	20012f2c 	.word	0x20012f2c
 801d0a0:	20012f26 	.word	0x20012f26

0801d0a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801d0a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d0a8:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801d0ac:	9e08      	ldr	r6, [sp, #32]
 801d0ae:	4688      	mov	r8, r1
 801d0b0:	4614      	mov	r4, r2
 801d0b2:	461d      	mov	r5, r3
 801d0b4:	2f00      	cmp	r7, #0
 801d0b6:	f000 80a9 	beq.w	801d20c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d0ba:	4618      	mov	r0, r3
 801d0bc:	f7f3 f911 	bl	80102e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d0c0:	2800      	cmp	r0, #0
 801d0c2:	f040 80a3 	bne.w	801d20c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d0c6:	f9b5 1000 	ldrsh.w	r1, [r5]
 801d0ca:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801d0ce:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801d0d2:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801d0d6:	fb04 1303 	mla	r3, r4, r3, r1
 801d0da:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801d0de:	4365      	muls	r5, r4
 801d0e0:	2fff      	cmp	r7, #255	; 0xff
 801d0e2:	eba4 0200 	sub.w	r2, r4, r0
 801d0e6:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801d0ea:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801d0ee:	d04a      	beq.n	801d186 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801d0f0:	b2bc      	uxth	r4, r7
 801d0f2:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801d0f6:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801d0fa:	fa5f f788 	uxtb.w	r7, r8
 801d0fe:	b2f3      	uxtb	r3, r6
 801d100:	0040      	lsls	r0, r0, #1
 801d102:	fb0e fe04 	mul.w	lr, lr, r4
 801d106:	4367      	muls	r7, r4
 801d108:	4363      	muls	r3, r4
 801d10a:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801d10e:	fa1f fc8c 	uxth.w	ip, ip
 801d112:	42a9      	cmp	r1, r5
 801d114:	d27a      	bcs.n	801d20c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d116:	eb01 0900 	add.w	r9, r1, r0
 801d11a:	4549      	cmp	r1, r9
 801d11c:	d231      	bcs.n	801d182 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801d11e:	880a      	ldrh	r2, [r1, #0]
 801d120:	1214      	asrs	r4, r2, #8
 801d122:	10d6      	asrs	r6, r2, #3
 801d124:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801d128:	00d2      	lsls	r2, r2, #3
 801d12a:	b2d2      	uxtb	r2, r2
 801d12c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801d130:	fb14 f40c 	smulbb	r4, r4, ip
 801d134:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d138:	4474      	add	r4, lr
 801d13a:	fb12 f20c 	smulbb	r2, r2, ip
 801d13e:	b2a4      	uxth	r4, r4
 801d140:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d144:	441a      	add	r2, r3
 801d146:	b292      	uxth	r2, r2
 801d148:	f104 0a01 	add.w	sl, r4, #1
 801d14c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d150:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801d154:	fb16 f60c 	smulbb	r6, r6, ip
 801d158:	f102 0a01 	add.w	sl, r2, #1
 801d15c:	443e      	add	r6, r7
 801d15e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801d162:	b2b6      	uxth	r6, r6
 801d164:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801d168:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d16c:	4322      	orrs	r2, r4
 801d16e:	1c74      	adds	r4, r6, #1
 801d170:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801d174:	0976      	lsrs	r6, r6, #5
 801d176:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d17a:	4332      	orrs	r2, r6
 801d17c:	f821 2b02 	strh.w	r2, [r1], #2
 801d180:	e7cb      	b.n	801d11a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801d182:	4441      	add	r1, r8
 801d184:	e7c5      	b.n	801d112 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801d186:	4f22      	ldr	r7, [pc, #136]	; (801d210 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801d188:	0973      	lsrs	r3, r6, #5
 801d18a:	ea08 0707 	and.w	r7, r8, r7
 801d18e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d192:	433b      	orrs	r3, r7
 801d194:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801d198:	4333      	orrs	r3, r6
 801d19a:	07e7      	lsls	r7, r4, #31
 801d19c:	b29b      	uxth	r3, r3
 801d19e:	d50b      	bpl.n	801d1b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801d1a0:	0040      	lsls	r0, r0, #1
 801d1a2:	0052      	lsls	r2, r2, #1
 801d1a4:	42a9      	cmp	r1, r5
 801d1a6:	d231      	bcs.n	801d20c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d1a8:	180c      	adds	r4, r1, r0
 801d1aa:	42a1      	cmp	r1, r4
 801d1ac:	d202      	bcs.n	801d1b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801d1ae:	f821 3b02 	strh.w	r3, [r1], #2
 801d1b2:	e7fa      	b.n	801d1aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801d1b4:	4411      	add	r1, r2
 801d1b6:	e7f5      	b.n	801d1a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801d1b8:	078e      	lsls	r6, r1, #30
 801d1ba:	d008      	beq.n	801d1ce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801d1bc:	0066      	lsls	r6, r4, #1
 801d1be:	460a      	mov	r2, r1
 801d1c0:	42aa      	cmp	r2, r5
 801d1c2:	d202      	bcs.n	801d1ca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801d1c4:	8013      	strh	r3, [r2, #0]
 801d1c6:	4432      	add	r2, r6
 801d1c8:	e7fa      	b.n	801d1c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801d1ca:	3102      	adds	r1, #2
 801d1cc:	3801      	subs	r0, #1
 801d1ce:	07c2      	lsls	r2, r0, #31
 801d1d0:	d50b      	bpl.n	801d1ea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801d1d2:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801d1d6:	3a01      	subs	r2, #1
 801d1d8:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801d1dc:	0066      	lsls	r6, r4, #1
 801d1de:	42aa      	cmp	r2, r5
 801d1e0:	d202      	bcs.n	801d1e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801d1e2:	8013      	strh	r3, [r2, #0]
 801d1e4:	4432      	add	r2, r6
 801d1e6:	e7fa      	b.n	801d1de <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801d1e8:	3801      	subs	r0, #1
 801d1ea:	b178      	cbz	r0, 801d20c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d1ec:	1040      	asrs	r0, r0, #1
 801d1ee:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801d1f2:	0080      	lsls	r0, r0, #2
 801d1f4:	0064      	lsls	r4, r4, #1
 801d1f6:	42a9      	cmp	r1, r5
 801d1f8:	d208      	bcs.n	801d20c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d1fa:	180e      	adds	r6, r1, r0
 801d1fc:	460a      	mov	r2, r1
 801d1fe:	42b2      	cmp	r2, r6
 801d200:	d202      	bcs.n	801d208 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801d202:	f842 3b04 	str.w	r3, [r2], #4
 801d206:	e7fa      	b.n	801d1fe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801d208:	4421      	add	r1, r4
 801d20a:	e7f4      	b.n	801d1f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801d20c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d210:	00fff800 	.word	0x00fff800

0801d214 <_ZN8touchgfx8LCD16bppC1Ev>:
 801d214:	2200      	movs	r2, #0
 801d216:	4912      	ldr	r1, [pc, #72]	; (801d260 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801d218:	6042      	str	r2, [r0, #4]
 801d21a:	6001      	str	r1, [r0, #0]
 801d21c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801d220:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801d224:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801d228:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801d22c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801d230:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801d234:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801d238:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801d23c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801d240:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801d244:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801d248:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801d24c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801d250:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801d254:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801d258:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801d25c:	4770      	bx	lr
 801d25e:	bf00      	nop
 801d260:	0802ed58 	.word	0x0802ed58

0801d264 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801d264:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d268:	460d      	mov	r5, r1
 801d26a:	b08d      	sub	sp, #52	; 0x34
 801d26c:	4604      	mov	r4, r0
 801d26e:	6808      	ldr	r0, [r1, #0]
 801d270:	6849      	ldr	r1, [r1, #4]
 801d272:	4699      	mov	r9, r3
 801d274:	ab08      	add	r3, sp, #32
 801d276:	c303      	stmia	r3!, {r0, r1}
 801d278:	6810      	ldr	r0, [r2, #0]
 801d27a:	6851      	ldr	r1, [r2, #4]
 801d27c:	ab0a      	add	r3, sp, #40	; 0x28
 801d27e:	c303      	stmia	r3!, {r0, r1}
 801d280:	a808      	add	r0, sp, #32
 801d282:	f7f7 ff49 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d286:	4629      	mov	r1, r5
 801d288:	a80a      	add	r0, sp, #40	; 0x28
 801d28a:	f7f7 ff89 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d28e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801d292:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801d296:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801d29a:	4d63      	ldr	r5, [pc, #396]	; (801d428 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801d29c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801d2a0:	6828      	ldr	r0, [r5, #0]
 801d2a2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801d2a6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d2aa:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801d2ae:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801d2b2:	440a      	add	r2, r1
 801d2b4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801d2b8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801d2bc:	4413      	add	r3, r2
 801d2be:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801d2c2:	6803      	ldr	r3, [r0, #0]
 801d2c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d2c6:	4798      	blx	r3
 801d2c8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d2cc:	d119      	bne.n	801d302 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801d2ce:	f010 0f20 	tst.w	r0, #32
 801d2d2:	6828      	ldr	r0, [r5, #0]
 801d2d4:	d018      	beq.n	801d308 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801d2d6:	2500      	movs	r5, #0
 801d2d8:	6801      	ldr	r1, [r0, #0]
 801d2da:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801d2de:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801d2e2:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801d2e6:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801d2ea:	9502      	str	r5, [sp, #8]
 801d2ec:	b2b6      	uxth	r6, r6
 801d2ee:	fa1f f588 	uxth.w	r5, r8
 801d2f2:	9601      	str	r6, [sp, #4]
 801d2f4:	9500      	str	r5, [sp, #0]
 801d2f6:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801d2f8:	4621      	mov	r1, r4
 801d2fa:	47a8      	blx	r5
 801d2fc:	b00d      	add	sp, #52	; 0x34
 801d2fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d302:	f010 0f40 	tst.w	r0, #64	; 0x40
 801d306:	e7e4      	b.n	801d2d2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801d308:	6803      	ldr	r3, [r0, #0]
 801d30a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d30c:	4798      	blx	r3
 801d30e:	4947      	ldr	r1, [pc, #284]	; (801d42c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801d310:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d314:	880b      	ldrh	r3, [r1, #0]
 801d316:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801d31a:	fb03 5202 	mla	r2, r3, r2, r5
 801d31e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d322:	4373      	muls	r3, r6
 801d324:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d328:	9307      	str	r3, [sp, #28]
 801d32a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d32e:	9306      	str	r3, [sp, #24]
 801d330:	468a      	mov	sl, r1
 801d332:	9b07      	ldr	r3, [sp, #28]
 801d334:	4298      	cmp	r0, r3
 801d336:	d270      	bcs.n	801d41a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801d338:	9b06      	ldr	r3, [sp, #24]
 801d33a:	4621      	mov	r1, r4
 801d33c:	eb00 0b03 	add.w	fp, r0, r3
 801d340:	4558      	cmp	r0, fp
 801d342:	d25d      	bcs.n	801d400 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801d344:	f851 4b04 	ldr.w	r4, [r1], #4
 801d348:	0e23      	lsrs	r3, r4, #24
 801d34a:	d014      	beq.n	801d376 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801d34c:	2bff      	cmp	r3, #255	; 0xff
 801d34e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801d352:	d112      	bne.n	801d37a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801d354:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d358:	d10f      	bne.n	801d37a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801d35a:	0963      	lsrs	r3, r4, #5
 801d35c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801d360:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d364:	f02c 0c07 	bic.w	ip, ip, #7
 801d368:	ea43 0c0c 	orr.w	ip, r3, ip
 801d36c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801d370:	ea4c 0404 	orr.w	r4, ip, r4
 801d374:	8004      	strh	r4, [r0, #0]
 801d376:	3002      	adds	r0, #2
 801d378:	e7e2      	b.n	801d340 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801d37a:	fb09 f303 	mul.w	r3, r9, r3
 801d37e:	8807      	ldrh	r7, [r0, #0]
 801d380:	1c5a      	adds	r2, r3, #1
 801d382:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801d386:	1212      	asrs	r2, r2, #8
 801d388:	123e      	asrs	r6, r7, #8
 801d38a:	b293      	uxth	r3, r2
 801d38c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801d390:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d394:	43d2      	mvns	r2, r2
 801d396:	b2d2      	uxtb	r2, r2
 801d398:	10fd      	asrs	r5, r7, #3
 801d39a:	fb1e fe03 	smulbb	lr, lr, r3
 801d39e:	00ff      	lsls	r7, r7, #3
 801d3a0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d3a4:	fb06 e602 	mla	r6, r6, r2, lr
 801d3a8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d3ac:	b2ff      	uxtb	r7, r7
 801d3ae:	fa5f fc8c 	uxtb.w	ip, ip
 801d3b2:	b2e4      	uxtb	r4, r4
 801d3b4:	b2b6      	uxth	r6, r6
 801d3b6:	fb1c fc03 	smulbb	ip, ip, r3
 801d3ba:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d3be:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801d3c2:	fb14 f403 	smulbb	r4, r4, r3
 801d3c6:	fb05 c502 	mla	r5, r5, r2, ip
 801d3ca:	f106 0e01 	add.w	lr, r6, #1
 801d3ce:	fb07 4702 	mla	r7, r7, r2, r4
 801d3d2:	b2ad      	uxth	r5, r5
 801d3d4:	b2bf      	uxth	r7, r7
 801d3d6:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801d3da:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801d3de:	f105 0c01 	add.w	ip, r5, #1
 801d3e2:	1c7e      	adds	r6, r7, #1
 801d3e4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801d3e8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d3ec:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801d3f0:	096d      	lsrs	r5, r5, #5
 801d3f2:	ea46 060e 	orr.w	r6, r6, lr
 801d3f6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d3fa:	432e      	orrs	r6, r5
 801d3fc:	8006      	strh	r6, [r0, #0]
 801d3fe:	e7ba      	b.n	801d376 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801d400:	f8ba 3000 	ldrh.w	r3, [sl]
 801d404:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801d408:	eba3 0308 	sub.w	r3, r3, r8
 801d40c:	eba4 0408 	sub.w	r4, r4, r8
 801d410:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d414:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801d418:	e78b      	b.n	801d332 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801d41a:	4b03      	ldr	r3, [pc, #12]	; (801d428 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801d41c:	6818      	ldr	r0, [r3, #0]
 801d41e:	6803      	ldr	r3, [r0, #0]
 801d420:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d422:	4798      	blx	r3
 801d424:	e76a      	b.n	801d2fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801d426:	bf00      	nop
 801d428:	20012f2c 	.word	0x20012f2c
 801d42c:	20012f26 	.word	0x20012f26

0801d430 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801d430:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d434:	460c      	mov	r4, r1
 801d436:	b085      	sub	sp, #20
 801d438:	6810      	ldr	r0, [r2, #0]
 801d43a:	6851      	ldr	r1, [r2, #4]
 801d43c:	466d      	mov	r5, sp
 801d43e:	c503      	stmia	r5!, {r0, r1}
 801d440:	6818      	ldr	r0, [r3, #0]
 801d442:	6859      	ldr	r1, [r3, #4]
 801d444:	4616      	mov	r6, r2
 801d446:	c503      	stmia	r5!, {r0, r1}
 801d448:	4668      	mov	r0, sp
 801d44a:	f7f7 fe65 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d44e:	4631      	mov	r1, r6
 801d450:	a802      	add	r0, sp, #8
 801d452:	f7f7 fea5 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d456:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801d45a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801d45e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801d462:	4d28      	ldr	r5, [pc, #160]	; (801d504 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801d464:	4e28      	ldr	r6, [pc, #160]	; (801d508 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801d466:	6828      	ldr	r0, [r5, #0]
 801d468:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801d46c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801d470:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d474:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801d478:	f8bd 1000 	ldrh.w	r1, [sp]
 801d47c:	440a      	add	r2, r1
 801d47e:	f8ad 2008 	strh.w	r2, [sp, #8]
 801d482:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801d486:	4413      	add	r3, r2
 801d488:	f8ad 300a 	strh.w	r3, [sp, #10]
 801d48c:	6803      	ldr	r3, [r0, #0]
 801d48e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d490:	4798      	blx	r3
 801d492:	8833      	ldrh	r3, [r6, #0]
 801d494:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801d498:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801d49c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801d50c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801d4a0:	fb03 1202 	mla	r2, r3, r2, r1
 801d4a4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d4a8:	fb08 f303 	mul.w	r3, r8, r3
 801d4ac:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d4b0:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801d4b4:	4298      	cmp	r0, r3
 801d4b6:	d21d      	bcs.n	801d4f4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801d4b8:	eb00 080c 	add.w	r8, r0, ip
 801d4bc:	4540      	cmp	r0, r8
 801d4be:	d20f      	bcs.n	801d4e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801d4c0:	f854 1b04 	ldr.w	r1, [r4], #4
 801d4c4:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801d4c8:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801d4cc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d4d0:	ea42 0209 	orr.w	r2, r2, r9
 801d4d4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801d4d8:	430a      	orrs	r2, r1
 801d4da:	f820 2b02 	strh.w	r2, [r0], #2
 801d4de:	e7ed      	b.n	801d4bc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801d4e0:	8832      	ldrh	r2, [r6, #0]
 801d4e2:	1bd2      	subs	r2, r2, r7
 801d4e4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d4e8:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801d4ec:	1bd2      	subs	r2, r2, r7
 801d4ee:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801d4f2:	e7df      	b.n	801d4b4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801d4f4:	6828      	ldr	r0, [r5, #0]
 801d4f6:	6803      	ldr	r3, [r0, #0]
 801d4f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d4fa:	4798      	blx	r3
 801d4fc:	b005      	add	sp, #20
 801d4fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d502:	bf00      	nop
 801d504:	20012f2c 	.word	0x20012f2c
 801d508:	20012f26 	.word	0x20012f26
 801d50c:	fffff800 	.word	0xfffff800

0801d510 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801d510:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d514:	460e      	mov	r6, r1
 801d516:	b08e      	sub	sp, #56	; 0x38
 801d518:	4604      	mov	r4, r0
 801d51a:	6808      	ldr	r0, [r1, #0]
 801d51c:	6849      	ldr	r1, [r1, #4]
 801d51e:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801d6f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801d522:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801d6fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801d526:	461d      	mov	r5, r3
 801d528:	ab0a      	add	r3, sp, #40	; 0x28
 801d52a:	c303      	stmia	r3!, {r0, r1}
 801d52c:	6810      	ldr	r0, [r2, #0]
 801d52e:	6851      	ldr	r1, [r2, #4]
 801d530:	ab0c      	add	r3, sp, #48	; 0x30
 801d532:	c303      	stmia	r3!, {r0, r1}
 801d534:	a80a      	add	r0, sp, #40	; 0x28
 801d536:	f7f7 fdef 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d53a:	4631      	mov	r1, r6
 801d53c:	a80c      	add	r0, sp, #48	; 0x30
 801d53e:	f7f7 fe2f 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d542:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801d546:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801d54a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801d54e:	f8d8 0000 	ldr.w	r0, [r8]
 801d552:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801d556:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801d55a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d55e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801d562:	440c      	add	r4, r1
 801d564:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801d568:	440a      	add	r2, r1
 801d56a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801d56e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801d572:	4413      	add	r3, r2
 801d574:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801d578:	6803      	ldr	r3, [r0, #0]
 801d57a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d57c:	4798      	blx	r3
 801d57e:	2dff      	cmp	r5, #255	; 0xff
 801d580:	d124      	bne.n	801d5cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801d582:	f010 0f01 	tst.w	r0, #1
 801d586:	f8d8 0000 	ldr.w	r0, [r8]
 801d58a:	d022      	beq.n	801d5d2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801d58c:	2100      	movs	r1, #0
 801d58e:	f8d0 c000 	ldr.w	ip, [r0]
 801d592:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801d596:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801d59a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801d59e:	f04f 0e01 	mov.w	lr, #1
 801d5a2:	f8cd e018 	str.w	lr, [sp, #24]
 801d5a6:	f8b9 e000 	ldrh.w	lr, [r9]
 801d5aa:	9503      	str	r5, [sp, #12]
 801d5ac:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801d5b0:	b2b6      	uxth	r6, r6
 801d5b2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801d5b6:	9102      	str	r1, [sp, #8]
 801d5b8:	b2bf      	uxth	r7, r7
 801d5ba:	9601      	str	r6, [sp, #4]
 801d5bc:	9700      	str	r7, [sp, #0]
 801d5be:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801d5c2:	4621      	mov	r1, r4
 801d5c4:	47a8      	blx	r5
 801d5c6:	b00e      	add	sp, #56	; 0x38
 801d5c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d5cc:	f010 0f04 	tst.w	r0, #4
 801d5d0:	e7d9      	b.n	801d586 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801d5d2:	6803      	ldr	r3, [r0, #0]
 801d5d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d5d6:	4798      	blx	r3
 801d5d8:	f8b9 3000 	ldrh.w	r3, [r9]
 801d5dc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d5e0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801d5e4:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801d5e8:	fb03 1202 	mla	r2, r3, r2, r1
 801d5ec:	ebac 0c07 	sub.w	ip, ip, r7
 801d5f0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d5f4:	435e      	muls	r6, r3
 801d5f6:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801d5fa:	2dff      	cmp	r5, #255	; 0xff
 801d5fc:	eba3 0707 	sub.w	r7, r3, r7
 801d600:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801d604:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801d608:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801d60c:	d049      	beq.n	801d6a2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801d60e:	43eb      	mvns	r3, r5
 801d610:	fa1f f985 	uxth.w	r9, r5
 801d614:	b2db      	uxtb	r3, r3
 801d616:	42b0      	cmp	r0, r6
 801d618:	d266      	bcs.n	801d6e8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d61a:	eb00 0a0e 	add.w	sl, r0, lr
 801d61e:	4550      	cmp	r0, sl
 801d620:	4621      	mov	r1, r4
 801d622:	f104 0403 	add.w	r4, r4, #3
 801d626:	d25b      	bcs.n	801d6e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801d628:	8802      	ldrh	r2, [r0, #0]
 801d62a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d62e:	ea4f 2822 	mov.w	r8, r2, asr #8
 801d632:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801d636:	fb11 f109 	smulbb	r1, r1, r9
 801d63a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801d63e:	10d5      	asrs	r5, r2, #3
 801d640:	fb08 1803 	mla	r8, r8, r3, r1
 801d644:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801d648:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d64c:	fb11 f109 	smulbb	r1, r1, r9
 801d650:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d654:	fb05 1503 	mla	r5, r5, r3, r1
 801d658:	00d2      	lsls	r2, r2, #3
 801d65a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d65e:	b2d2      	uxtb	r2, r2
 801d660:	fb11 f109 	smulbb	r1, r1, r9
 801d664:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d668:	fa1f f888 	uxth.w	r8, r8
 801d66c:	fb02 1203 	mla	r2, r2, r3, r1
 801d670:	b292      	uxth	r2, r2
 801d672:	f108 0101 	add.w	r1, r8, #1
 801d676:	b2ad      	uxth	r5, r5
 801d678:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801d67c:	1c51      	adds	r1, r2, #1
 801d67e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d682:	1c69      	adds	r1, r5, #1
 801d684:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d688:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801d68c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d690:	096d      	lsrs	r5, r5, #5
 801d692:	ea42 0208 	orr.w	r2, r2, r8
 801d696:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d69a:	432a      	orrs	r2, r5
 801d69c:	f820 2b02 	strh.w	r2, [r0], #2
 801d6a0:	e7bd      	b.n	801d61e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801d6a2:	4a14      	ldr	r2, [pc, #80]	; (801d6f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801d6a4:	42b0      	cmp	r0, r6
 801d6a6:	d21f      	bcs.n	801d6e8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d6a8:	eb00 050e 	add.w	r5, r0, lr
 801d6ac:	42a8      	cmp	r0, r5
 801d6ae:	4621      	mov	r1, r4
 801d6b0:	f104 0403 	add.w	r4, r4, #3
 801d6b4:	d210      	bcs.n	801d6d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801d6b6:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801d6ba:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d6be:	00db      	lsls	r3, r3, #3
 801d6c0:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801d6c4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d6c8:	430b      	orrs	r3, r1
 801d6ca:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d6ce:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801d6d2:	f820 3b02 	strh.w	r3, [r0], #2
 801d6d6:	e7e9      	b.n	801d6ac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801d6d8:	4438      	add	r0, r7
 801d6da:	eb01 040c 	add.w	r4, r1, ip
 801d6de:	e7e1      	b.n	801d6a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801d6e0:	4438      	add	r0, r7
 801d6e2:	eb01 040c 	add.w	r4, r1, ip
 801d6e6:	e796      	b.n	801d616 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801d6e8:	4b03      	ldr	r3, [pc, #12]	; (801d6f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801d6ea:	6818      	ldr	r0, [r3, #0]
 801d6ec:	6803      	ldr	r3, [r0, #0]
 801d6ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d6f0:	4798      	blx	r3
 801d6f2:	e768      	b.n	801d5c6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801d6f4:	fffff800 	.word	0xfffff800
 801d6f8:	20012f2c 	.word	0x20012f2c
 801d6fc:	20012f26 	.word	0x20012f26

0801d700 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801d700:	b4f0      	push	{r4, r5, r6, r7}
 801d702:	4616      	mov	r6, r2
 801d704:	2e01      	cmp	r6, #1
 801d706:	461c      	mov	r4, r3
 801d708:	460d      	mov	r5, r1
 801d70a:	9a04      	ldr	r2, [sp, #16]
 801d70c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801d710:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801d714:	d012      	beq.n	801d73c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801d716:	d303      	bcc.n	801d720 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801d718:	2e02      	cmp	r6, #2
 801d71a:	d00a      	beq.n	801d732 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801d71c:	bcf0      	pop	{r4, r5, r6, r7}
 801d71e:	4770      	bx	lr
 801d720:	6805      	ldr	r5, [r0, #0]
 801d722:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801d726:	68ed      	ldr	r5, [r5, #12]
 801d728:	4613      	mov	r3, r2
 801d72a:	46ac      	mov	ip, r5
 801d72c:	4622      	mov	r2, r4
 801d72e:	bcf0      	pop	{r4, r5, r6, r7}
 801d730:	4760      	bx	ip
 801d732:	4621      	mov	r1, r4
 801d734:	4628      	mov	r0, r5
 801d736:	bcf0      	pop	{r4, r5, r6, r7}
 801d738:	f7ff bd94 	b.w	801d264 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d73c:	4621      	mov	r1, r4
 801d73e:	4628      	mov	r0, r5
 801d740:	bcf0      	pop	{r4, r5, r6, r7}
 801d742:	f7ff bee5 	b.w	801d510 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801d748 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801d748:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d74c:	4681      	mov	r9, r0
 801d74e:	b093      	sub	sp, #76	; 0x4c
 801d750:	6810      	ldr	r0, [r2, #0]
 801d752:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801d756:	4f6d      	ldr	r7, [pc, #436]	; (801d90c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801d758:	4688      	mov	r8, r1
 801d75a:	6851      	ldr	r1, [r2, #4]
 801d75c:	ac0e      	add	r4, sp, #56	; 0x38
 801d75e:	c403      	stmia	r4!, {r0, r1}
 801d760:	6818      	ldr	r0, [r3, #0]
 801d762:	6859      	ldr	r1, [r3, #4]
 801d764:	ac10      	add	r4, sp, #64	; 0x40
 801d766:	4616      	mov	r6, r2
 801d768:	c403      	stmia	r4!, {r0, r1}
 801d76a:	a80e      	add	r0, sp, #56	; 0x38
 801d76c:	f7f7 fcd4 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d770:	4631      	mov	r1, r6
 801d772:	a810      	add	r0, sp, #64	; 0x40
 801d774:	f7f7 fd14 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d778:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801d77c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801d780:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801d784:	4e62      	ldr	r6, [pc, #392]	; (801d910 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d786:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801d78a:	6830      	ldr	r0, [r6, #0]
 801d78c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801d790:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d794:	4489      	add	r9, r1
 801d796:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801d79a:	440a      	add	r2, r1
 801d79c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801d7a0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d7a4:	4413      	add	r3, r2
 801d7a6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801d7aa:	6803      	ldr	r3, [r0, #0]
 801d7ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d7ae:	4798      	blx	r3
 801d7b0:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d7b4:	6830      	ldr	r0, [r6, #0]
 801d7b6:	d01d      	beq.n	801d7f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801d7b8:	2200      	movs	r2, #0
 801d7ba:	6801      	ldr	r1, [r0, #0]
 801d7bc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801d7c0:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d7c4:	220b      	movs	r2, #11
 801d7c6:	9207      	str	r2, [sp, #28]
 801d7c8:	883a      	ldrh	r2, [r7, #0]
 801d7ca:	9206      	str	r2, [sp, #24]
 801d7cc:	2201      	movs	r2, #1
 801d7ce:	e9cd a204 	strd	sl, r2, [sp, #16]
 801d7d2:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801d7d6:	9203      	str	r2, [sp, #12]
 801d7d8:	b2a4      	uxth	r4, r4
 801d7da:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801d7de:	9200      	str	r2, [sp, #0]
 801d7e0:	b2ad      	uxth	r5, r5
 801d7e2:	9502      	str	r5, [sp, #8]
 801d7e4:	9401      	str	r4, [sp, #4]
 801d7e6:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801d7e8:	4642      	mov	r2, r8
 801d7ea:	4649      	mov	r1, r9
 801d7ec:	47a0      	blx	r4
 801d7ee:	b013      	add	sp, #76	; 0x4c
 801d7f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d7f4:	6803      	ldr	r3, [r0, #0]
 801d7f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d7f8:	4798      	blx	r3
 801d7fa:	883b      	ldrh	r3, [r7, #0]
 801d7fc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801d800:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801d804:	fb03 1202 	mla	r2, r3, r2, r1
 801d808:	435d      	muls	r5, r3
 801d80a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d80e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801d812:	920c      	str	r2, [sp, #48]	; 0x30
 801d814:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801d818:	1b12      	subs	r2, r2, r4
 801d81a:	920d      	str	r2, [sp, #52]	; 0x34
 801d81c:	0062      	lsls	r2, r4, #1
 801d81e:	1b1c      	subs	r4, r3, r4
 801d820:	0063      	lsls	r3, r4, #1
 801d822:	920a      	str	r2, [sp, #40]	; 0x28
 801d824:	930b      	str	r3, [sp, #44]	; 0x2c
 801d826:	f04f 0e04 	mov.w	lr, #4
 801d82a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d82c:	4298      	cmp	r0, r3
 801d82e:	d266      	bcs.n	801d8fe <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801d830:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d832:	eb00 0b03 	add.w	fp, r0, r3
 801d836:	4558      	cmp	r0, fp
 801d838:	d25c      	bcs.n	801d8f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801d83a:	f819 3b01 	ldrb.w	r3, [r9], #1
 801d83e:	fb1e e303 	smlabb	r3, lr, r3, lr
 801d842:	f858 2003 	ldr.w	r2, [r8, r3]
 801d846:	0e11      	lsrs	r1, r2, #24
 801d848:	d012      	beq.n	801d870 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d84a:	29ff      	cmp	r1, #255	; 0xff
 801d84c:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801d850:	d110      	bne.n	801d874 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d852:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d856:	d10d      	bne.n	801d874 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d858:	0953      	lsrs	r3, r2, #5
 801d85a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801d85e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d862:	f027 0707 	bic.w	r7, r7, #7
 801d866:	431f      	orrs	r7, r3
 801d868:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d86c:	433a      	orrs	r2, r7
 801d86e:	8002      	strh	r2, [r0, #0]
 801d870:	3002      	adds	r0, #2
 801d872:	e7e0      	b.n	801d836 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801d874:	fb0a f101 	mul.w	r1, sl, r1
 801d878:	8806      	ldrh	r6, [r0, #0]
 801d87a:	1c4b      	adds	r3, r1, #1
 801d87c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801d880:	1235      	asrs	r5, r6, #8
 801d882:	10f4      	asrs	r4, r6, #3
 801d884:	121b      	asrs	r3, r3, #8
 801d886:	00f6      	lsls	r6, r6, #3
 801d888:	b299      	uxth	r1, r3
 801d88a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801d88e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d892:	b2f6      	uxtb	r6, r6
 801d894:	43db      	mvns	r3, r3
 801d896:	b2d2      	uxtb	r2, r2
 801d898:	b2db      	uxtb	r3, r3
 801d89a:	fb1c fc01 	smulbb	ip, ip, r1
 801d89e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d8a2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d8a6:	fb12 f201 	smulbb	r2, r2, r1
 801d8aa:	fb05 c503 	mla	r5, r5, r3, ip
 801d8ae:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801d8b2:	b2ff      	uxtb	r7, r7
 801d8b4:	fb06 2203 	mla	r2, r6, r3, r2
 801d8b8:	b2ad      	uxth	r5, r5
 801d8ba:	fb17 f701 	smulbb	r7, r7, r1
 801d8be:	b292      	uxth	r2, r2
 801d8c0:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801d8c4:	fb04 7403 	mla	r4, r4, r3, r7
 801d8c8:	f105 0c01 	add.w	ip, r5, #1
 801d8cc:	1c57      	adds	r7, r2, #1
 801d8ce:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d8d2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d8d6:	b2a4      	uxth	r4, r4
 801d8d8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d8dc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d8e0:	433d      	orrs	r5, r7
 801d8e2:	1c67      	adds	r7, r4, #1
 801d8e4:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801d8e8:	0964      	lsrs	r4, r4, #5
 801d8ea:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801d8ee:	4325      	orrs	r5, r4
 801d8f0:	8005      	strh	r5, [r0, #0]
 801d8f2:	e7bd      	b.n	801d870 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d8f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d8f6:	4418      	add	r0, r3
 801d8f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d8fa:	4499      	add	r9, r3
 801d8fc:	e795      	b.n	801d82a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801d8fe:	4b04      	ldr	r3, [pc, #16]	; (801d910 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d900:	6818      	ldr	r0, [r3, #0]
 801d902:	6803      	ldr	r3, [r0, #0]
 801d904:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d906:	4798      	blx	r3
 801d908:	e771      	b.n	801d7ee <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801d90a:	bf00      	nop
 801d90c:	20012f26 	.word	0x20012f26
 801d910:	20012f2c 	.word	0x20012f2c

0801d914 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801d914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d918:	b087      	sub	sp, #28
 801d91a:	4680      	mov	r8, r0
 801d91c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801d920:	460d      	mov	r5, r1
 801d922:	4614      	mov	r4, r2
 801d924:	2e00      	cmp	r6, #0
 801d926:	f000 80b9 	beq.w	801da9c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801d92a:	6810      	ldr	r0, [r2, #0]
 801d92c:	6851      	ldr	r1, [r2, #4]
 801d92e:	af02      	add	r7, sp, #8
 801d930:	c703      	stmia	r7!, {r0, r1}
 801d932:	6818      	ldr	r0, [r3, #0]
 801d934:	6859      	ldr	r1, [r3, #4]
 801d936:	af04      	add	r7, sp, #16
 801d938:	c703      	stmia	r7!, {r0, r1}
 801d93a:	a802      	add	r0, sp, #8
 801d93c:	f7f7 fbec 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d940:	4621      	mov	r1, r4
 801d942:	a804      	add	r0, sp, #16
 801d944:	f7f7 fc2c 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d948:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d94c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d950:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801d954:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801d958:	fb14 2103 	smlabb	r1, r4, r3, r2
 801d95c:	eb08 0401 	add.w	r4, r8, r1
 801d960:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d964:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d968:	440a      	add	r2, r1
 801d96a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d96e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d972:	4413      	add	r3, r2
 801d974:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d978:	4b4a      	ldr	r3, [pc, #296]	; (801daa4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d97a:	6818      	ldr	r0, [r3, #0]
 801d97c:	6803      	ldr	r3, [r0, #0]
 801d97e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d980:	4798      	blx	r3
 801d982:	4b49      	ldr	r3, [pc, #292]	; (801daa8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801d984:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801d988:	881a      	ldrh	r2, [r3, #0]
 801d98a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801d98e:	2eff      	cmp	r6, #255	; 0xff
 801d990:	fb02 c101 	mla	r1, r2, r1, ip
 801d994:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d998:	fb02 f207 	mul.w	r2, r2, r7
 801d99c:	f105 0104 	add.w	r1, r5, #4
 801d9a0:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801d9a4:	461d      	mov	r5, r3
 801d9a6:	d05a      	beq.n	801da5e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801d9a8:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801d9ac:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d9b0:	b2b6      	uxth	r6, r6
 801d9b2:	fa1f fe8e 	uxth.w	lr, lr
 801d9b6:	9301      	str	r3, [sp, #4]
 801d9b8:	4282      	cmp	r2, r0
 801d9ba:	d96a      	bls.n	801da92 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d9bc:	eb00 0b0a 	add.w	fp, r0, sl
 801d9c0:	4583      	cmp	fp, r0
 801d9c2:	d940      	bls.n	801da46 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801d9c4:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d9c8:	8805      	ldrh	r5, [r0, #0]
 801d9ca:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d9ce:	122f      	asrs	r7, r5, #8
 801d9d0:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d9d4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d9d8:	fb17 f70e 	smulbb	r7, r7, lr
 801d9dc:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d9e0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d9e4:	00ed      	lsls	r5, r5, #3
 801d9e6:	fb0c 7c06 	mla	ip, ip, r6, r7
 801d9ea:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d9ee:	10df      	asrs	r7, r3, #3
 801d9f0:	b2ed      	uxtb	r5, r5
 801d9f2:	00db      	lsls	r3, r3, #3
 801d9f4:	fa1f fc8c 	uxth.w	ip, ip
 801d9f8:	fb19 f90e 	smulbb	r9, r9, lr
 801d9fc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801da00:	b2db      	uxtb	r3, r3
 801da02:	fb15 f50e 	smulbb	r5, r5, lr
 801da06:	fb07 9706 	mla	r7, r7, r6, r9
 801da0a:	fb03 5306 	mla	r3, r3, r6, r5
 801da0e:	f10c 0901 	add.w	r9, ip, #1
 801da12:	b29b      	uxth	r3, r3
 801da14:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801da18:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801da1c:	f103 0c01 	add.w	ip, r3, #1
 801da20:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801da24:	b2bf      	uxth	r7, r7
 801da26:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801da2a:	ea4c 0c09 	orr.w	ip, ip, r9
 801da2e:	f107 0901 	add.w	r9, r7, #1
 801da32:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801da36:	097f      	lsrs	r7, r7, #5
 801da38:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801da3c:	ea4c 0c07 	orr.w	ip, ip, r7
 801da40:	f820 cb02 	strh.w	ip, [r0], #2
 801da44:	e7bc      	b.n	801d9c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801da46:	9b01      	ldr	r3, [sp, #4]
 801da48:	881b      	ldrh	r3, [r3, #0]
 801da4a:	eba3 0308 	sub.w	r3, r3, r8
 801da4e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801da52:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801da56:	eba3 0308 	sub.w	r3, r3, r8
 801da5a:	441c      	add	r4, r3
 801da5c:	e7ac      	b.n	801d9b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801da5e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801da62:	4282      	cmp	r2, r0
 801da64:	d915      	bls.n	801da92 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801da66:	eb00 060a 	add.w	r6, r0, sl
 801da6a:	4286      	cmp	r6, r0
 801da6c:	d906      	bls.n	801da7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801da6e:	f814 3b01 	ldrb.w	r3, [r4], #1
 801da72:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801da76:	f820 3b02 	strh.w	r3, [r0], #2
 801da7a:	e7f6      	b.n	801da6a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801da7c:	882b      	ldrh	r3, [r5, #0]
 801da7e:	eba3 0308 	sub.w	r3, r3, r8
 801da82:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801da86:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801da8a:	eba3 0308 	sub.w	r3, r3, r8
 801da8e:	441c      	add	r4, r3
 801da90:	e7e7      	b.n	801da62 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801da92:	4b04      	ldr	r3, [pc, #16]	; (801daa4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801da94:	6818      	ldr	r0, [r3, #0]
 801da96:	6803      	ldr	r3, [r0, #0]
 801da98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801da9a:	4798      	blx	r3
 801da9c:	b007      	add	sp, #28
 801da9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801daa2:	bf00      	nop
 801daa4:	20012f2c 	.word	0x20012f2c
 801daa8:	20012f26 	.word	0x20012f26

0801daac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801daac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dab0:	b091      	sub	sp, #68	; 0x44
 801dab2:	4680      	mov	r8, r0
 801dab4:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801dab8:	460f      	mov	r7, r1
 801daba:	4614      	mov	r4, r2
 801dabc:	2d00      	cmp	r5, #0
 801dabe:	d051      	beq.n	801db64 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801dac0:	6810      	ldr	r0, [r2, #0]
 801dac2:	6851      	ldr	r1, [r2, #4]
 801dac4:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801dcc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801dac8:	ae0c      	add	r6, sp, #48	; 0x30
 801daca:	c603      	stmia	r6!, {r0, r1}
 801dacc:	6818      	ldr	r0, [r3, #0]
 801dace:	6859      	ldr	r1, [r3, #4]
 801dad0:	ae0e      	add	r6, sp, #56	; 0x38
 801dad2:	c603      	stmia	r6!, {r0, r1}
 801dad4:	a80c      	add	r0, sp, #48	; 0x30
 801dad6:	f7f7 fb1f 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dada:	4621      	mov	r1, r4
 801dadc:	a80e      	add	r0, sp, #56	; 0x38
 801dade:	f7f7 fb5f 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dae2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801dae6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801daea:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801daee:	f8d9 0000 	ldr.w	r0, [r9]
 801daf2:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801daf6:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801dafa:	fb11 2103 	smlabb	r1, r1, r3, r2
 801dafe:	eb08 0401 	add.w	r4, r8, r1
 801db02:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801db06:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801dccc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801db0a:	440a      	add	r2, r1
 801db0c:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801db10:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801db14:	4413      	add	r3, r2
 801db16:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801db1a:	6803      	ldr	r3, [r0, #0]
 801db1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801db1e:	4798      	blx	r3
 801db20:	f010 0f80 	tst.w	r0, #128	; 0x80
 801db24:	f8d9 0000 	ldr.w	r0, [r9]
 801db28:	d01f      	beq.n	801db6a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801db2a:	2200      	movs	r2, #0
 801db2c:	6801      	ldr	r1, [r0, #0]
 801db2e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801db32:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801db36:	220b      	movs	r2, #11
 801db38:	9207      	str	r2, [sp, #28]
 801db3a:	f8b8 2000 	ldrh.w	r2, [r8]
 801db3e:	9206      	str	r2, [sp, #24]
 801db40:	2201      	movs	r2, #1
 801db42:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801db46:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801db4a:	9203      	str	r2, [sp, #12]
 801db4c:	fa1f f28a 	uxth.w	r2, sl
 801db50:	9202      	str	r2, [sp, #8]
 801db52:	b2b6      	uxth	r6, r6
 801db54:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801db58:	9200      	str	r2, [sp, #0]
 801db5a:	9601      	str	r6, [sp, #4]
 801db5c:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801db5e:	463a      	mov	r2, r7
 801db60:	4621      	mov	r1, r4
 801db62:	47a8      	blx	r5
 801db64:	b011      	add	sp, #68	; 0x44
 801db66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801db6a:	6803      	ldr	r3, [r0, #0]
 801db6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801db6e:	4798      	blx	r3
 801db70:	f8b8 2000 	ldrh.w	r2, [r8]
 801db74:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801db78:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801db7c:	2dff      	cmp	r5, #255	; 0xff
 801db7e:	fb02 1303 	mla	r3, r2, r3, r1
 801db82:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801db86:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801db8a:	fb0a fa02 	mul.w	sl, sl, r2
 801db8e:	d062      	beq.n	801dc56 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801db90:	ea6f 0c05 	mvn.w	ip, r5
 801db94:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801db98:	930a      	str	r3, [sp, #40]	; 0x28
 801db9a:	b2ad      	uxth	r5, r5
 801db9c:	fa5f fc8c 	uxtb.w	ip, ip
 801dba0:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801dba4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dba6:	4298      	cmp	r0, r3
 801dba8:	f080 8085 	bcs.w	801dcb6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801dbac:	eb00 0b09 	add.w	fp, r0, r9
 801dbb0:	4558      	cmp	r0, fp
 801dbb2:	d246      	bcs.n	801dc42 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801dbb4:	f814 eb01 	ldrb.w	lr, [r4], #1
 801dbb8:	2303      	movs	r3, #3
 801dbba:	2204      	movs	r2, #4
 801dbbc:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801dbc0:	eb07 0a0e 	add.w	sl, r7, lr
 801dbc4:	8803      	ldrh	r3, [r0, #0]
 801dbc6:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801dbca:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801dbce:	1219      	asrs	r1, r3, #8
 801dbd0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801dbd4:	fb18 f805 	smulbb	r8, r8, r5
 801dbd8:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801dbdc:	10da      	asrs	r2, r3, #3
 801dbde:	fb01 810c 	mla	r1, r1, ip, r8
 801dbe2:	00db      	lsls	r3, r3, #3
 801dbe4:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801dbe8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801dbec:	b2db      	uxtb	r3, r3
 801dbee:	fb18 f805 	smulbb	r8, r8, r5
 801dbf2:	fb1e fe05 	smulbb	lr, lr, r5
 801dbf6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801dbfa:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801dbfe:	b289      	uxth	r1, r1
 801dc00:	fb02 820c 	mla	r2, r2, ip, r8
 801dc04:	fb03 e30c 	mla	r3, r3, ip, lr
 801dc08:	b292      	uxth	r2, r2
 801dc0a:	b29b      	uxth	r3, r3
 801dc0c:	f101 0801 	add.w	r8, r1, #1
 801dc10:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801dc14:	f103 0e01 	add.w	lr, r3, #1
 801dc18:	f102 0801 	add.w	r8, r2, #1
 801dc1c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801dc20:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801dc24:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801dc28:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801dc2c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801dc30:	ea4e 0101 	orr.w	r1, lr, r1
 801dc34:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801dc38:	ea41 0108 	orr.w	r1, r1, r8
 801dc3c:	f820 1b02 	strh.w	r1, [r0], #2
 801dc40:	e7b6      	b.n	801dbb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801dc42:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801dc44:	881b      	ldrh	r3, [r3, #0]
 801dc46:	1b9b      	subs	r3, r3, r6
 801dc48:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dc4c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801dc50:	1b9b      	subs	r3, r3, r6
 801dc52:	441c      	add	r4, r3
 801dc54:	e7a6      	b.n	801dba4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801dc56:	491b      	ldr	r1, [pc, #108]	; (801dcc4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801dc58:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801dc5c:	2203      	movs	r2, #3
 801dc5e:	2504      	movs	r5, #4
 801dc60:	4550      	cmp	r0, sl
 801dc62:	d228      	bcs.n	801dcb6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801dc64:	eb00 0c09 	add.w	ip, r0, r9
 801dc68:	4560      	cmp	r0, ip
 801dc6a:	4623      	mov	r3, r4
 801dc6c:	d219      	bcs.n	801dca2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801dc6e:	f893 e000 	ldrb.w	lr, [r3]
 801dc72:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801dc76:	eb07 0b0e 	add.w	fp, r7, lr
 801dc7a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801dc7e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801dc82:	f89b b001 	ldrb.w	fp, [fp, #1]
 801dc86:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801dc8a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801dc8e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801dc92:	ea43 030b 	orr.w	r3, r3, fp
 801dc96:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801dc9a:	3401      	adds	r4, #1
 801dc9c:	f820 3b02 	strh.w	r3, [r0], #2
 801dca0:	e7e2      	b.n	801dc68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801dca2:	f8b8 3000 	ldrh.w	r3, [r8]
 801dca6:	1b9b      	subs	r3, r3, r6
 801dca8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dcac:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801dcb0:	1b9b      	subs	r3, r3, r6
 801dcb2:	441c      	add	r4, r3
 801dcb4:	e7d4      	b.n	801dc60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801dcb6:	4b04      	ldr	r3, [pc, #16]	; (801dcc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801dcb8:	6818      	ldr	r0, [r3, #0]
 801dcba:	6803      	ldr	r3, [r0, #0]
 801dcbc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dcbe:	4798      	blx	r3
 801dcc0:	e750      	b.n	801db64 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801dcc2:	bf00      	nop
 801dcc4:	fffff800 	.word	0xfffff800
 801dcc8:	20012f2c 	.word	0x20012f2c
 801dccc:	20012f26 	.word	0x20012f26

0801dcd0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801dcd0:	b4f0      	push	{r4, r5, r6, r7}
 801dcd2:	460c      	mov	r4, r1
 801dcd4:	4611      	mov	r1, r2
 801dcd6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801dcda:	780f      	ldrb	r7, [r1, #0]
 801dcdc:	784e      	ldrb	r6, [r1, #1]
 801dcde:	2f01      	cmp	r7, #1
 801dce0:	461a      	mov	r2, r3
 801dce2:	9b04      	ldr	r3, [sp, #16]
 801dce4:	d036      	beq.n	801dd54 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801dce6:	d31e      	bcc.n	801dd26 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801dce8:	2f02      	cmp	r7, #2
 801dcea:	d14a      	bne.n	801dd82 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801dcec:	2e03      	cmp	r6, #3
 801dcee:	d848      	bhi.n	801dd82 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801dcf0:	e8df f006 	tbb	[pc, r6]
 801dcf4:	16140702 	.word	0x16140702
 801dcf8:	9504      	str	r5, [sp, #16]
 801dcfa:	4620      	mov	r0, r4
 801dcfc:	bcf0      	pop	{r4, r5, r6, r7}
 801dcfe:	f7ff be09 	b.w	801d914 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801dd02:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801dd04:	2800      	cmp	r0, #0
 801dd06:	d03c      	beq.n	801dd82 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801dd08:	6806      	ldr	r6, [r0, #0]
 801dd0a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801dd0e:	68b5      	ldr	r5, [r6, #8]
 801dd10:	4613      	mov	r3, r2
 801dd12:	46ac      	mov	ip, r5
 801dd14:	460a      	mov	r2, r1
 801dd16:	4621      	mov	r1, r4
 801dd18:	bcf0      	pop	{r4, r5, r6, r7}
 801dd1a:	4760      	bx	ip
 801dd1c:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801dd1e:	e7f1      	b.n	801dd04 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801dd20:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801dd24:	e7ee      	b.n	801dd04 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801dd26:	2e03      	cmp	r6, #3
 801dd28:	d82b      	bhi.n	801dd82 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801dd2a:	e8df f006 	tbb	[pc, r6]
 801dd2e:	0702      	.short	0x0702
 801dd30:	100e      	.short	0x100e
 801dd32:	9504      	str	r5, [sp, #16]
 801dd34:	4620      	mov	r0, r4
 801dd36:	bcf0      	pop	{r4, r5, r6, r7}
 801dd38:	f7ff bd06 	b.w	801d748 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801dd3c:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801dd3e:	b300      	cbz	r0, 801dd82 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801dd40:	6806      	ldr	r6, [r0, #0]
 801dd42:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801dd46:	68f5      	ldr	r5, [r6, #12]
 801dd48:	e7e2      	b.n	801dd10 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801dd4a:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801dd4c:	e7f7      	b.n	801dd3e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801dd4e:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801dd52:	e7f4      	b.n	801dd3e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801dd54:	2e03      	cmp	r6, #3
 801dd56:	d814      	bhi.n	801dd82 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801dd58:	e8df f006 	tbb	[pc, r6]
 801dd5c:	100e0702 	.word	0x100e0702
 801dd60:	9504      	str	r5, [sp, #16]
 801dd62:	4620      	mov	r0, r4
 801dd64:	bcf0      	pop	{r4, r5, r6, r7}
 801dd66:	f7ff bea1 	b.w	801daac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801dd6a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801dd6c:	b148      	cbz	r0, 801dd82 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801dd6e:	6806      	ldr	r6, [r0, #0]
 801dd70:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801dd74:	6935      	ldr	r5, [r6, #16]
 801dd76:	e7cb      	b.n	801dd10 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801dd78:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801dd7a:	e7f7      	b.n	801dd6c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801dd7c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801dd80:	e7f4      	b.n	801dd6c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801dd82:	bcf0      	pop	{r4, r5, r6, r7}
 801dd84:	4770      	bx	lr
	...

0801dd88 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801dd88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd8c:	4604      	mov	r4, r0
 801dd8e:	b087      	sub	sp, #28
 801dd90:	6810      	ldr	r0, [r2, #0]
 801dd92:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801dd96:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801dfd0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801dd9a:	460e      	mov	r6, r1
 801dd9c:	6851      	ldr	r1, [r2, #4]
 801dd9e:	ad02      	add	r5, sp, #8
 801dda0:	c503      	stmia	r5!, {r0, r1}
 801dda2:	6818      	ldr	r0, [r3, #0]
 801dda4:	6859      	ldr	r1, [r3, #4]
 801dda6:	ad04      	add	r5, sp, #16
 801dda8:	4617      	mov	r7, r2
 801ddaa:	c503      	stmia	r5!, {r0, r1}
 801ddac:	a802      	add	r0, sp, #8
 801ddae:	f7f7 f9b3 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ddb2:	4639      	mov	r1, r7
 801ddb4:	a804      	add	r0, sp, #16
 801ddb6:	f7f7 f9f3 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ddba:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801ddbe:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ddc2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801ddc6:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801ddca:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801ddce:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ddd2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801ddd6:	440e      	add	r6, r1
 801ddd8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801dddc:	440a      	add	r2, r1
 801ddde:	f8ad 2010 	strh.w	r2, [sp, #16]
 801dde2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801dde6:	4413      	add	r3, r2
 801dde8:	f8ad 3012 	strh.w	r3, [sp, #18]
 801ddec:	4b77      	ldr	r3, [pc, #476]	; (801dfcc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801ddee:	6818      	ldr	r0, [r3, #0]
 801ddf0:	6803      	ldr	r3, [r0, #0]
 801ddf2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ddf4:	4798      	blx	r3
 801ddf6:	f8b9 b000 	ldrh.w	fp, [r9]
 801ddfa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ddfe:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801de02:	fb0b 2303 	mla	r3, fp, r3, r2
 801de06:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801de0a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801de0e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801de12:	fb05 f50b 	mul.w	r5, r5, fp
 801de16:	9300      	str	r3, [sp, #0]
 801de18:	d069      	beq.n	801deee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801de1a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801de1e:	4558      	cmp	r0, fp
 801de20:	f080 80cc 	bcs.w	801dfbc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801de24:	9b00      	ldr	r3, [sp, #0]
 801de26:	18c3      	adds	r3, r0, r3
 801de28:	9301      	str	r3, [sp, #4]
 801de2a:	4631      	mov	r1, r6
 801de2c:	9b01      	ldr	r3, [sp, #4]
 801de2e:	4298      	cmp	r0, r3
 801de30:	d24f      	bcs.n	801ded2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801de32:	f811 2b01 	ldrb.w	r2, [r1], #1
 801de36:	2a00      	cmp	r2, #0
 801de38:	d048      	beq.n	801decc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801de3a:	fb0a f202 	mul.w	r2, sl, r2
 801de3e:	1c53      	adds	r3, r2, #1
 801de40:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801de44:	121b      	asrs	r3, r3, #8
 801de46:	d041      	beq.n	801decc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801de48:	8802      	ldrh	r2, [r0, #0]
 801de4a:	f8b4 c000 	ldrh.w	ip, [r4]
 801de4e:	b29e      	uxth	r6, r3
 801de50:	1215      	asrs	r5, r2, #8
 801de52:	43db      	mvns	r3, r3
 801de54:	b2db      	uxtb	r3, r3
 801de56:	ea4f 272c 	mov.w	r7, ip, asr #8
 801de5a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801de5e:	fb15 f503 	smulbb	r5, r5, r3
 801de62:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801de66:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801de6a:	00d2      	lsls	r2, r2, #3
 801de6c:	fb07 5706 	mla	r7, r7, r6, r5
 801de70:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801de74:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801de78:	b2d2      	uxtb	r2, r2
 801de7a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801de7e:	b2bf      	uxth	r7, r7
 801de80:	fb1e fe03 	smulbb	lr, lr, r3
 801de84:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801de88:	fa5f fc8c 	uxtb.w	ip, ip
 801de8c:	fb12 f203 	smulbb	r2, r2, r3
 801de90:	fb05 e506 	mla	r5, r5, r6, lr
 801de94:	fb0c 2c06 	mla	ip, ip, r6, r2
 801de98:	f107 0e01 	add.w	lr, r7, #1
 801de9c:	fa1f fc8c 	uxth.w	ip, ip
 801dea0:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801dea4:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801dea8:	f10c 0701 	add.w	r7, ip, #1
 801deac:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801deb0:	b2ad      	uxth	r5, r5
 801deb2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801deb6:	ea47 070e 	orr.w	r7, r7, lr
 801deba:	f105 0e01 	add.w	lr, r5, #1
 801debe:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801dec2:	096d      	lsrs	r5, r5, #5
 801dec4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dec8:	432f      	orrs	r7, r5
 801deca:	8007      	strh	r7, [r0, #0]
 801decc:	3002      	adds	r0, #2
 801dece:	3402      	adds	r4, #2
 801ded0:	e7ac      	b.n	801de2c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801ded2:	f8b9 3000 	ldrh.w	r3, [r9]
 801ded6:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801deda:	eba3 0308 	sub.w	r3, r3, r8
 801dede:	eba6 0608 	sub.w	r6, r6, r8
 801dee2:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801dee6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801deea:	440e      	add	r6, r1
 801deec:	e797      	b.n	801de1e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801deee:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801def2:	42a8      	cmp	r0, r5
 801def4:	d262      	bcs.n	801dfbc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801def6:	9b00      	ldr	r3, [sp, #0]
 801def8:	4631      	mov	r1, r6
 801defa:	eb00 0b03 	add.w	fp, r0, r3
 801defe:	4558      	cmp	r0, fp
 801df00:	d24e      	bcs.n	801dfa0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801df02:	f811 3b01 	ldrb.w	r3, [r1], #1
 801df06:	b12b      	cbz	r3, 801df14 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801df08:	2bff      	cmp	r3, #255	; 0xff
 801df0a:	f8b4 e000 	ldrh.w	lr, [r4]
 801df0e:	d104      	bne.n	801df1a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801df10:	f8a0 e000 	strh.w	lr, [r0]
 801df14:	3002      	adds	r0, #2
 801df16:	3402      	adds	r4, #2
 801df18:	e7f1      	b.n	801defe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801df1a:	8802      	ldrh	r2, [r0, #0]
 801df1c:	b29f      	uxth	r7, r3
 801df1e:	1216      	asrs	r6, r2, #8
 801df20:	43db      	mvns	r3, r3
 801df22:	b2db      	uxtb	r3, r3
 801df24:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801df28:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801df2c:	fb16 f603 	smulbb	r6, r6, r3
 801df30:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801df34:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801df38:	00d2      	lsls	r2, r2, #3
 801df3a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801df3e:	b2d2      	uxtb	r2, r2
 801df40:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801df44:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801df48:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801df4c:	fb1a fa03 	smulbb	sl, sl, r3
 801df50:	fa1f fc8c 	uxth.w	ip, ip
 801df54:	fb12 f303 	smulbb	r3, r2, r3
 801df58:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801df5c:	fa5f fe8e 	uxtb.w	lr, lr
 801df60:	fb06 a607 	mla	r6, r6, r7, sl
 801df64:	f10c 0201 	add.w	r2, ip, #1
 801df68:	fb0e 3307 	mla	r3, lr, r7, r3
 801df6c:	b2b6      	uxth	r6, r6
 801df6e:	b29b      	uxth	r3, r3
 801df70:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801df74:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801df78:	f106 0a01 	add.w	sl, r6, #1
 801df7c:	f103 0c01 	add.w	ip, r3, #1
 801df80:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801df84:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801df88:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801df8c:	0976      	lsrs	r6, r6, #5
 801df8e:	ea4c 0c02 	orr.w	ip, ip, r2
 801df92:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801df96:	ea4c 0c06 	orr.w	ip, ip, r6
 801df9a:	f8a0 c000 	strh.w	ip, [r0]
 801df9e:	e7b9      	b.n	801df14 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801dfa0:	f8b9 3000 	ldrh.w	r3, [r9]
 801dfa4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801dfa8:	eba3 0308 	sub.w	r3, r3, r8
 801dfac:	eba6 0608 	sub.w	r6, r6, r8
 801dfb0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801dfb4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dfb8:	440e      	add	r6, r1
 801dfba:	e79a      	b.n	801def2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801dfbc:	4b03      	ldr	r3, [pc, #12]	; (801dfcc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801dfbe:	6818      	ldr	r0, [r3, #0]
 801dfc0:	6803      	ldr	r3, [r0, #0]
 801dfc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dfc4:	4798      	blx	r3
 801dfc6:	b007      	add	sp, #28
 801dfc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dfcc:	20012f2c 	.word	0x20012f2c
 801dfd0:	20012f26 	.word	0x20012f26

0801dfd4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801dfd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dfd8:	b089      	sub	sp, #36	; 0x24
 801dfda:	4682      	mov	sl, r0
 801dfdc:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801dfe0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801dfe2:	460f      	mov	r7, r1
 801dfe4:	4691      	mov	r9, r2
 801dfe6:	4698      	mov	r8, r3
 801dfe8:	2e00      	cmp	r6, #0
 801dfea:	d03d      	beq.n	801e068 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dfec:	4608      	mov	r0, r1
 801dfee:	f7fa fe59 	bl	8018ca4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801dff2:	4605      	mov	r5, r0
 801dff4:	4638      	mov	r0, r7
 801dff6:	f7fa fe89 	bl	8018d0c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801dffa:	f8ad 000e 	strh.w	r0, [sp, #14]
 801dffe:	4638      	mov	r0, r7
 801e000:	f8ad 9008 	strh.w	r9, [sp, #8]
 801e004:	f8ad 500c 	strh.w	r5, [sp, #12]
 801e008:	f8ad 800a 	strh.w	r8, [sp, #10]
 801e00c:	f7fa ff36 	bl	8018e7c <_ZNK8touchgfx6Bitmap7getDataEv>
 801e010:	4605      	mov	r5, r0
 801e012:	4638      	mov	r0, r7
 801e014:	f7fa ff62 	bl	8018edc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801e018:	4681      	mov	r9, r0
 801e01a:	4638      	mov	r0, r7
 801e01c:	f7fa ffb2 	bl	8018f84 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801e020:	280b      	cmp	r0, #11
 801e022:	d821      	bhi.n	801e068 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e024:	e8df f000 	tbb	[pc, r0]
 801e028:	2006aebe 	.word	0x2006aebe
 801e02c:	20202020 	.word	0x20202020
 801e030:	b5202020 	.word	0xb5202020
 801e034:	4bb0      	ldr	r3, [pc, #704]	; (801e2f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801e036:	6818      	ldr	r0, [r3, #0]
 801e038:	6803      	ldr	r3, [r0, #0]
 801e03a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e03c:	4798      	blx	r3
 801e03e:	2eff      	cmp	r6, #255	; 0xff
 801e040:	d101      	bne.n	801e046 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801e042:	0683      	lsls	r3, r0, #26
 801e044:	d506      	bpl.n	801e054 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801e046:	4633      	mov	r3, r6
 801e048:	4622      	mov	r2, r4
 801e04a:	a902      	add	r1, sp, #8
 801e04c:	4628      	mov	r0, r5
 801e04e:	f7ff f909 	bl	801d264 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e052:	e009      	b.n	801e068 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e054:	4638      	mov	r0, r7
 801e056:	f7fa fed9 	bl	8018e0c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801e05a:	b940      	cbnz	r0, 801e06e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801e05c:	4623      	mov	r3, r4
 801e05e:	aa02      	add	r2, sp, #8
 801e060:	4629      	mov	r1, r5
 801e062:	4650      	mov	r0, sl
 801e064:	f7ff f9e4 	bl	801d430 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801e068:	b009      	add	sp, #36	; 0x24
 801e06a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e06e:	f10d 0818 	add.w	r8, sp, #24
 801e072:	4639      	mov	r1, r7
 801e074:	4640      	mov	r0, r8
 801e076:	f7fa fe7d 	bl	8018d74 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801e07a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801e07e:	af04      	add	r7, sp, #16
 801e080:	e887 0003 	stmia.w	r7, {r0, r1}
 801e084:	4638      	mov	r0, r7
 801e086:	4621      	mov	r1, r4
 801e088:	f7f2 f8e8 	bl	801025c <_ZN8touchgfx4RectaNERKS0_>
 801e08c:	4638      	mov	r0, r7
 801e08e:	f7f2 f928 	bl	80102e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e092:	2800      	cmp	r0, #0
 801e094:	d1d7      	bne.n	801e046 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801e096:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e09a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801e09e:	4293      	cmp	r3, r2
 801e0a0:	dd12      	ble.n	801e0c8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801e0a2:	1a9b      	subs	r3, r3, r2
 801e0a4:	f9b4 0000 	ldrsh.w	r0, [r4]
 801e0a8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e0ac:	f8ad 0018 	strh.w	r0, [sp, #24]
 801e0b0:	f8ad 201a 	strh.w	r2, [sp, #26]
 801e0b4:	f8ad 101c 	strh.w	r1, [sp, #28]
 801e0b8:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e0bc:	4642      	mov	r2, r8
 801e0be:	4633      	mov	r3, r6
 801e0c0:	a902      	add	r1, sp, #8
 801e0c2:	4628      	mov	r0, r5
 801e0c4:	f7ff f8ce 	bl	801d264 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e0c8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801e0cc:	f9b4 2000 	ldrsh.w	r2, [r4]
 801e0d0:	4293      	cmp	r3, r2
 801e0d2:	dd12      	ble.n	801e0fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801e0d4:	1a9b      	subs	r3, r3, r2
 801e0d6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801e0da:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801e0de:	f8ad 2018 	strh.w	r2, [sp, #24]
 801e0e2:	f8ad 001a 	strh.w	r0, [sp, #26]
 801e0e6:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e0ea:	f8ad 101e 	strh.w	r1, [sp, #30]
 801e0ee:	23ff      	movs	r3, #255	; 0xff
 801e0f0:	4642      	mov	r2, r8
 801e0f2:	a902      	add	r1, sp, #8
 801e0f4:	4628      	mov	r0, r5
 801e0f6:	f7ff f8b5 	bl	801d264 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e0fa:	463b      	mov	r3, r7
 801e0fc:	aa02      	add	r2, sp, #8
 801e0fe:	4629      	mov	r1, r5
 801e100:	4650      	mov	r0, sl
 801e102:	f7ff f995 	bl	801d430 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801e106:	88a2      	ldrh	r2, [r4, #4]
 801e108:	8823      	ldrh	r3, [r4, #0]
 801e10a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801e10e:	4413      	add	r3, r2
 801e110:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e114:	440a      	add	r2, r1
 801e116:	b29b      	uxth	r3, r3
 801e118:	b292      	uxth	r2, r2
 801e11a:	b211      	sxth	r1, r2
 801e11c:	b218      	sxth	r0, r3
 801e11e:	4288      	cmp	r0, r1
 801e120:	dd12      	ble.n	801e148 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801e122:	1a9b      	subs	r3, r3, r2
 801e124:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801e128:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801e12c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801e130:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e134:	f8ad 001e 	strh.w	r0, [sp, #30]
 801e138:	23ff      	movs	r3, #255	; 0xff
 801e13a:	4642      	mov	r2, r8
 801e13c:	a902      	add	r1, sp, #8
 801e13e:	4628      	mov	r0, r5
 801e140:	f8ad 601a 	strh.w	r6, [sp, #26]
 801e144:	f7ff f88e 	bl	801d264 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e148:	88e2      	ldrh	r2, [r4, #6]
 801e14a:	8863      	ldrh	r3, [r4, #2]
 801e14c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801e150:	4413      	add	r3, r2
 801e152:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801e156:	440a      	add	r2, r1
 801e158:	b29b      	uxth	r3, r3
 801e15a:	b292      	uxth	r2, r2
 801e15c:	b211      	sxth	r1, r2
 801e15e:	b218      	sxth	r0, r3
 801e160:	4288      	cmp	r0, r1
 801e162:	dd81      	ble.n	801e068 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e164:	1a9b      	subs	r3, r3, r2
 801e166:	f9b4 6000 	ldrsh.w	r6, [r4]
 801e16a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801e16e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e172:	f8ad 6018 	strh.w	r6, [sp, #24]
 801e176:	f8ad 101a 	strh.w	r1, [sp, #26]
 801e17a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801e17e:	23ff      	movs	r3, #255	; 0xff
 801e180:	4642      	mov	r2, r8
 801e182:	e762      	b.n	801e04a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801e184:	4633      	mov	r3, r6
 801e186:	4622      	mov	r2, r4
 801e188:	a902      	add	r1, sp, #8
 801e18a:	4628      	mov	r0, r5
 801e18c:	f7ff f9c0 	bl	801d510 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801e190:	e76a      	b.n	801e068 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e192:	e9cd 4600 	strd	r4, r6, [sp]
 801e196:	ab02      	add	r3, sp, #8
 801e198:	464a      	mov	r2, r9
 801e19a:	4629      	mov	r1, r5
 801e19c:	4650      	mov	r0, sl
 801e19e:	f7ff fd97 	bl	801dcd0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801e1a2:	e761      	b.n	801e068 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e1a4:	4638      	mov	r0, r7
 801e1a6:	f7fa fe31 	bl	8018e0c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801e1aa:	b950      	cbnz	r0, 801e1c2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801e1ac:	e9cd 6000 	strd	r6, r0, [sp]
 801e1b0:	f8da 3000 	ldr.w	r3, [sl]
 801e1b4:	aa02      	add	r2, sp, #8
 801e1b6:	68de      	ldr	r6, [r3, #12]
 801e1b8:	4629      	mov	r1, r5
 801e1ba:	4623      	mov	r3, r4
 801e1bc:	4650      	mov	r0, sl
 801e1be:	47b0      	blx	r6
 801e1c0:	e752      	b.n	801e068 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e1c2:	f10d 0818 	add.w	r8, sp, #24
 801e1c6:	4639      	mov	r1, r7
 801e1c8:	4640      	mov	r0, r8
 801e1ca:	f7fa fdd3 	bl	8018d74 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801e1ce:	e898 0003 	ldmia.w	r8, {r0, r1}
 801e1d2:	af04      	add	r7, sp, #16
 801e1d4:	e887 0003 	stmia.w	r7, {r0, r1}
 801e1d8:	4638      	mov	r0, r7
 801e1da:	4621      	mov	r1, r4
 801e1dc:	f7f2 f83e 	bl	801025c <_ZN8touchgfx4RectaNERKS0_>
 801e1e0:	4638      	mov	r0, r7
 801e1e2:	f7f2 f87e 	bl	80102e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e1e6:	b138      	cbz	r0, 801e1f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801e1e8:	9600      	str	r6, [sp, #0]
 801e1ea:	4623      	mov	r3, r4
 801e1ec:	aa02      	add	r2, sp, #8
 801e1ee:	4649      	mov	r1, r9
 801e1f0:	4628      	mov	r0, r5
 801e1f2:	f7ff fdc9 	bl	801dd88 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e1f6:	e737      	b.n	801e068 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e1f8:	e9cd 6000 	strd	r6, r0, [sp]
 801e1fc:	f8da 3000 	ldr.w	r3, [sl]
 801e200:	aa02      	add	r2, sp, #8
 801e202:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801e206:	4629      	mov	r1, r5
 801e208:	463b      	mov	r3, r7
 801e20a:	4650      	mov	r0, sl
 801e20c:	47d8      	blx	fp
 801e20e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e212:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801e216:	4293      	cmp	r3, r2
 801e218:	dd13      	ble.n	801e242 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801e21a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801e21e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e222:	f8ad 0018 	strh.w	r0, [sp, #24]
 801e226:	1a9b      	subs	r3, r3, r2
 801e228:	f8ad 201a 	strh.w	r2, [sp, #26]
 801e22c:	f8ad 101c 	strh.w	r1, [sp, #28]
 801e230:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e234:	9600      	str	r6, [sp, #0]
 801e236:	4643      	mov	r3, r8
 801e238:	aa02      	add	r2, sp, #8
 801e23a:	4649      	mov	r1, r9
 801e23c:	4628      	mov	r0, r5
 801e23e:	f7ff fda3 	bl	801dd88 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e242:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801e246:	f9b4 2000 	ldrsh.w	r2, [r4]
 801e24a:	4293      	cmp	r3, r2
 801e24c:	dd13      	ble.n	801e276 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801e24e:	1a9b      	subs	r3, r3, r2
 801e250:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801e254:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801e258:	f8ad 2018 	strh.w	r2, [sp, #24]
 801e25c:	f8ad 001a 	strh.w	r0, [sp, #26]
 801e260:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e264:	f8ad 101e 	strh.w	r1, [sp, #30]
 801e268:	9600      	str	r6, [sp, #0]
 801e26a:	4643      	mov	r3, r8
 801e26c:	aa02      	add	r2, sp, #8
 801e26e:	4649      	mov	r1, r9
 801e270:	4628      	mov	r0, r5
 801e272:	f7ff fd89 	bl	801dd88 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e276:	88a2      	ldrh	r2, [r4, #4]
 801e278:	8823      	ldrh	r3, [r4, #0]
 801e27a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801e27e:	4413      	add	r3, r2
 801e280:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e284:	440a      	add	r2, r1
 801e286:	b29b      	uxth	r3, r3
 801e288:	b292      	uxth	r2, r2
 801e28a:	b211      	sxth	r1, r2
 801e28c:	b218      	sxth	r0, r3
 801e28e:	4288      	cmp	r0, r1
 801e290:	dd13      	ble.n	801e2ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801e292:	1a9b      	subs	r3, r3, r2
 801e294:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801e298:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801e29c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801e2a0:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e2a4:	f8ad 001e 	strh.w	r0, [sp, #30]
 801e2a8:	9600      	str	r6, [sp, #0]
 801e2aa:	4643      	mov	r3, r8
 801e2ac:	aa02      	add	r2, sp, #8
 801e2ae:	4649      	mov	r1, r9
 801e2b0:	4628      	mov	r0, r5
 801e2b2:	f8ad 701a 	strh.w	r7, [sp, #26]
 801e2b6:	f7ff fd67 	bl	801dd88 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e2ba:	88e2      	ldrh	r2, [r4, #6]
 801e2bc:	8863      	ldrh	r3, [r4, #2]
 801e2be:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801e2c2:	4413      	add	r3, r2
 801e2c4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801e2c8:	440a      	add	r2, r1
 801e2ca:	b29b      	uxth	r3, r3
 801e2cc:	b292      	uxth	r2, r2
 801e2ce:	b211      	sxth	r1, r2
 801e2d0:	b218      	sxth	r0, r3
 801e2d2:	4288      	cmp	r0, r1
 801e2d4:	f77f aec8 	ble.w	801e068 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e2d8:	f9b4 7000 	ldrsh.w	r7, [r4]
 801e2dc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801e2e0:	f8ad 7018 	strh.w	r7, [sp, #24]
 801e2e4:	1a9b      	subs	r3, r3, r2
 801e2e6:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e2ea:	f8ad 101a 	strh.w	r1, [sp, #26]
 801e2ee:	f8ad 001c 	strh.w	r0, [sp, #28]
 801e2f2:	9600      	str	r6, [sp, #0]
 801e2f4:	4643      	mov	r3, r8
 801e2f6:	e779      	b.n	801e1ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801e2f8:	20012f2c 	.word	0x20012f2c

0801e2fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801e2fc:	b180      	cbz	r0, 801e320 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801e2fe:	2903      	cmp	r1, #3
 801e300:	d81c      	bhi.n	801e33c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801e302:	e8df f001 	tbb	[pc, r1]
 801e306:	1d02      	.short	0x1d02
 801e308:	1f08      	.short	0x1f08
 801e30a:	4b10      	ldr	r3, [pc, #64]	; (801e34c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801e30c:	8818      	ldrh	r0, [r3, #0]
 801e30e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e312:	4240      	negs	r0, r0
 801e314:	4770      	bx	lr
 801e316:	4b0d      	ldr	r3, [pc, #52]	; (801e34c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801e318:	8818      	ldrh	r0, [r3, #0]
 801e31a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e31e:	4770      	bx	lr
 801e320:	2903      	cmp	r1, #3
 801e322:	d80b      	bhi.n	801e33c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801e324:	a301      	add	r3, pc, #4	; (adr r3, 801e32c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801e326:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801e32a:	bf00      	nop
 801e32c:	0801e341 	.word	0x0801e341
 801e330:	0801e317 	.word	0x0801e317
 801e334:	0801e345 	.word	0x0801e345
 801e338:	0801e30b 	.word	0x0801e30b
 801e33c:	2000      	movs	r0, #0
 801e33e:	4770      	bx	lr
 801e340:	2001      	movs	r0, #1
 801e342:	4770      	bx	lr
 801e344:	f04f 30ff 	mov.w	r0, #4294967295
 801e348:	4770      	bx	lr
 801e34a:	bf00      	nop
 801e34c:	20012f26 	.word	0x20012f26

0801e350 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801e350:	b180      	cbz	r0, 801e374 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801e352:	2903      	cmp	r1, #3
 801e354:	d81c      	bhi.n	801e390 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801e356:	e8df f001 	tbb	[pc, r1]
 801e35a:	021d      	.short	0x021d
 801e35c:	071f      	.short	0x071f
 801e35e:	4b10      	ldr	r3, [pc, #64]	; (801e3a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801e360:	8818      	ldrh	r0, [r3, #0]
 801e362:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e366:	4770      	bx	lr
 801e368:	4b0d      	ldr	r3, [pc, #52]	; (801e3a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801e36a:	8818      	ldrh	r0, [r3, #0]
 801e36c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801e370:	4240      	negs	r0, r0
 801e372:	4770      	bx	lr
 801e374:	2903      	cmp	r1, #3
 801e376:	d80b      	bhi.n	801e390 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801e378:	a301      	add	r3, pc, #4	; (adr r3, 801e380 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801e37a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801e37e:	bf00      	nop
 801e380:	0801e35f 	.word	0x0801e35f
 801e384:	0801e399 	.word	0x0801e399
 801e388:	0801e369 	.word	0x0801e369
 801e38c:	0801e395 	.word	0x0801e395
 801e390:	2000      	movs	r0, #0
 801e392:	4770      	bx	lr
 801e394:	2001      	movs	r0, #1
 801e396:	4770      	bx	lr
 801e398:	f04f 30ff 	mov.w	r0, #4294967295
 801e39c:	4770      	bx	lr
 801e39e:	bf00      	nop
 801e3a0:	20012f26 	.word	0x20012f26

0801e3a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801e3a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e3a8:	b099      	sub	sp, #100	; 0x64
 801e3aa:	910b      	str	r1, [sp, #44]	; 0x2c
 801e3ac:	a914      	add	r1, sp, #80	; 0x50
 801e3ae:	e881 000c 	stmia.w	r1, {r2, r3}
 801e3b2:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801e3b6:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801e3ba:	f891 900d 	ldrb.w	r9, [r1, #13]
 801e3be:	9309      	str	r3, [sp, #36]	; 0x24
 801e3c0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801e3c4:	9310      	str	r3, [sp, #64]	; 0x40
 801e3c6:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801e3ca:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801e3ce:	930c      	str	r3, [sp, #48]	; 0x30
 801e3d0:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801e3d4:	798f      	ldrb	r7, [r1, #6]
 801e3d6:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801e3da:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801e3de:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801e3e2:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801e3e6:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801e3ea:	431f      	orrs	r7, r3
 801e3ec:	f000 8195 	beq.w	801e71a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e3f0:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801e3f4:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801e3f8:	f891 9007 	ldrb.w	r9, [r1, #7]
 801e3fc:	ea59 0903 	orrs.w	r9, r9, r3
 801e400:	f000 818b 	beq.w	801e71a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e404:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801e408:	b29b      	uxth	r3, r3
 801e40a:	2d00      	cmp	r5, #0
 801e40c:	f000 812e 	beq.w	801e66c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801e410:	1aed      	subs	r5, r5, r3
 801e412:	b2ad      	uxth	r5, r5
 801e414:	042b      	lsls	r3, r5, #16
 801e416:	d502      	bpl.n	801e41e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801e418:	1b64      	subs	r4, r4, r5
 801e41a:	b224      	sxth	r4, r4
 801e41c:	2500      	movs	r5, #0
 801e41e:	f9b2 1000 	ldrsh.w	r1, [r2]
 801e422:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801e426:	428c      	cmp	r4, r1
 801e428:	b28b      	uxth	r3, r1
 801e42a:	bfbf      	itttt	lt
 801e42c:	18ed      	addlt	r5, r5, r3
 801e42e:	1b2c      	sublt	r4, r5, r4
 801e430:	b2a5      	uxthlt	r5, r4
 801e432:	460c      	movlt	r4, r1
 801e434:	8891      	ldrh	r1, [r2, #4]
 801e436:	440b      	add	r3, r1
 801e438:	b21b      	sxth	r3, r3
 801e43a:	930f      	str	r3, [sp, #60]	; 0x3c
 801e43c:	88d3      	ldrh	r3, [r2, #6]
 801e43e:	8852      	ldrh	r2, [r2, #2]
 801e440:	4413      	add	r3, r2
 801e442:	b21b      	sxth	r3, r3
 801e444:	930d      	str	r3, [sp, #52]	; 0x34
 801e446:	4bbe      	ldr	r3, [pc, #760]	; (801e740 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801e448:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e44a:	f893 b000 	ldrb.w	fp, [r3]
 801e44e:	f10b 3cff 	add.w	ip, fp, #4294967295
 801e452:	f1dc 0300 	rsbs	r3, ip, #0
 801e456:	eb43 030c 	adc.w	r3, r3, ip
 801e45a:	930e      	str	r3, [sp, #56]	; 0x38
 801e45c:	4621      	mov	r1, r4
 801e45e:	4653      	mov	r3, sl
 801e460:	a814      	add	r0, sp, #80	; 0x50
 801e462:	f7f6 fcce 	bl	8014e02 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801e466:	4621      	mov	r1, r4
 801e468:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801e46c:	4653      	mov	r3, sl
 801e46e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e470:	a814      	add	r0, sp, #80	; 0x50
 801e472:	f7f6 fce3 	bl	8014e3c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801e476:	a918      	add	r1, sp, #96	; 0x60
 801e478:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801e47c:	a817      	add	r0, sp, #92	; 0x5c
 801e47e:	f7f6 fe09 	bl	8015094 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801e482:	f1ba 0f00 	cmp.w	sl, #0
 801e486:	f040 80f4 	bne.w	801e672 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801e48a:	f1bb 0f01 	cmp.w	fp, #1
 801e48e:	f040 80f8 	bne.w	801e682 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801e492:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e494:	2b00      	cmp	r3, #0
 801e496:	f040 8145 	bne.w	801e724 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801e49a:	b2ba      	uxth	r2, r7
 801e49c:	b905      	cbnz	r5, 801e4a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801e49e:	b16e      	cbz	r6, 801e4bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801e4a0:	fb06 5302 	mla	r3, r6, r2, r5
 801e4a4:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801e4a6:	fb08 f303 	mul.w	r3, r8, r3
 801e4aa:	4631      	mov	r1, r6
 801e4ac:	f003 0607 	and.w	r6, r3, #7
 801e4b0:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801e4b4:	9328      	str	r3, [sp, #160]	; 0xa0
 801e4b6:	eba9 0301 	sub.w	r3, r9, r1
 801e4ba:	930a      	str	r3, [sp, #40]	; 0x28
 801e4bc:	4651      	mov	r1, sl
 801e4be:	980e      	ldr	r0, [sp, #56]	; 0x38
 801e4c0:	f7ff ff1c 	bl	801e2fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801e4c4:	4681      	mov	r9, r0
 801e4c6:	980e      	ldr	r0, [sp, #56]	; 0x38
 801e4c8:	f7ff ff42 	bl	801e350 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801e4cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e4ce:	9909      	ldr	r1, [sp, #36]	; 0x24
 801e4d0:	eba3 0a01 	sub.w	sl, r3, r1
 801e4d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e4d6:	459a      	cmp	sl, r3
 801e4d8:	bfa8      	it	ge
 801e4da:	469a      	movge	sl, r3
 801e4dc:	f1ba 0f00 	cmp.w	sl, #0
 801e4e0:	4683      	mov	fp, r0
 801e4e2:	f340 811a 	ble.w	801e71a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e4e6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e4e8:	1b64      	subs	r4, r4, r5
 801e4ea:	1b1c      	subs	r4, r3, r4
 801e4ec:	42bc      	cmp	r4, r7
 801e4ee:	bfd4      	ite	le
 801e4f0:	ebc5 0504 	rsble	r5, r5, r4
 801e4f4:	ebc5 0507 	rsbgt	r5, r5, r7
 801e4f8:	2d00      	cmp	r5, #0
 801e4fa:	f340 810e 	ble.w	801e71a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e4fe:	1b52      	subs	r2, r2, r5
 801e500:	fb08 f302 	mul.w	r3, r8, r2
 801e504:	930f      	str	r3, [sp, #60]	; 0x3c
 801e506:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e508:	2b00      	cmp	r3, #0
 801e50a:	f040 8116 	bne.w	801e73a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801e50e:	4b8d      	ldr	r3, [pc, #564]	; (801e744 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801e510:	6818      	ldr	r0, [r3, #0]
 801e512:	6803      	ldr	r3, [r0, #0]
 801e514:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e516:	4798      	blx	r3
 801e518:	2301      	movs	r3, #1
 801e51a:	fa03 f308 	lsl.w	r3, r3, r8
 801e51e:	4a8a      	ldr	r2, [pc, #552]	; (801e748 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801e520:	3b01      	subs	r3, #1
 801e522:	b2db      	uxtb	r3, r3
 801e524:	8811      	ldrh	r1, [r2, #0]
 801e526:	930e      	str	r3, [sp, #56]	; 0x38
 801e528:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801e52c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801e530:	fb01 2303 	mla	r3, r1, r3, r2
 801e534:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e538:	930a      	str	r3, [sp, #40]	; 0x28
 801e53a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e53c:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801e540:	9313      	str	r3, [sp, #76]	; 0x4c
 801e542:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e544:	0a19      	lsrs	r1, r3, #8
 801e546:	b2cb      	uxtb	r3, r1
 801e548:	9312      	str	r3, [sp, #72]	; 0x48
 801e54a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e54c:	b2db      	uxtb	r3, r3
 801e54e:	9311      	str	r3, [sp, #68]	; 0x44
 801e550:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e552:	095a      	lsrs	r2, r3, #5
 801e554:	4b7d      	ldr	r3, [pc, #500]	; (801e74c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801e556:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e55a:	400b      	ands	r3, r1
 801e55c:	4313      	orrs	r3, r2
 801e55e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801e560:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e564:	4313      	orrs	r3, r2
 801e566:	b29b      	uxth	r3, r3
 801e568:	9310      	str	r3, [sp, #64]	; 0x40
 801e56a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e56c:	781a      	ldrb	r2, [r3, #0]
 801e56e:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801e572:	4132      	asrs	r2, r6
 801e574:	fb05 b919 	mls	r9, r5, r9, fp
 801e578:	fb03 fb05 	mul.w	fp, r3, r5
 801e57c:	b2d2      	uxtb	r2, r2
 801e57e:	930d      	str	r3, [sp, #52]	; 0x34
 801e580:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801e584:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801e588:	f0c0 80f5 	bcc.w	801e776 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801e58c:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801e590:	46ae      	mov	lr, r5
 801e592:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801e596:	f0c0 80dd 	bcc.w	801e754 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801e59a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e59c:	4013      	ands	r3, r2
 801e59e:	d055      	beq.n	801e64c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801e5a0:	20ff      	movs	r0, #255	; 0xff
 801e5a2:	990e      	ldr	r1, [sp, #56]	; 0x38
 801e5a4:	fb90 f1f1 	sdiv	r1, r0, r1
 801e5a8:	434b      	muls	r3, r1
 801e5aa:	2bfe      	cmp	r3, #254	; 0xfe
 801e5ac:	dd03      	ble.n	801e5b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801e5ae:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e5b0:	4281      	cmp	r1, r0
 801e5b2:	f000 80cd 	beq.w	801e750 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801e5b6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e5b8:	f8bc 4000 	ldrh.w	r4, [ip]
 801e5bc:	fb11 f303 	smulbb	r3, r1, r3
 801e5c0:	b29b      	uxth	r3, r3
 801e5c2:	1c59      	adds	r1, r3, #1
 801e5c4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e5c8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e5cc:	b29f      	uxth	r7, r3
 801e5ce:	43db      	mvns	r3, r3
 801e5d0:	b2db      	uxtb	r3, r3
 801e5d2:	9309      	str	r3, [sp, #36]	; 0x24
 801e5d4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801e5d6:	1220      	asrs	r0, r4, #8
 801e5d8:	fb13 f907 	smulbb	r9, r3, r7
 801e5dc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e5e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e5e2:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801e5e6:	fb00 9003 	mla	r0, r0, r3, r9
 801e5ea:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e5ec:	10e1      	asrs	r1, r4, #3
 801e5ee:	fb13 f907 	smulbb	r9, r3, r7
 801e5f2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e5f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e5f8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801e5fc:	fb01 9103 	mla	r1, r1, r3, r9
 801e600:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e602:	00e4      	lsls	r4, r4, #3
 801e604:	fb13 f707 	smulbb	r7, r3, r7
 801e608:	b2e4      	uxtb	r4, r4
 801e60a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e60c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e610:	fb04 7403 	mla	r4, r4, r3, r7
 801e614:	b280      	uxth	r0, r0
 801e616:	b2a4      	uxth	r4, r4
 801e618:	1c43      	adds	r3, r0, #1
 801e61a:	f104 0901 	add.w	r9, r4, #1
 801e61e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e622:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801e626:	b289      	uxth	r1, r1
 801e628:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801e62c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e630:	ea49 0000 	orr.w	r0, r9, r0
 801e634:	f101 0901 	add.w	r9, r1, #1
 801e638:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801e63c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e640:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e644:	ea40 0009 	orr.w	r0, r0, r9
 801e648:	f8ac 0000 	strh.w	r0, [ip]
 801e64c:	4446      	add	r6, r8
 801e64e:	b2b6      	uxth	r6, r6
 801e650:	2e07      	cmp	r6, #7
 801e652:	bf81      	itttt	hi
 801e654:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801e656:	785a      	ldrbhi	r2, [r3, #1]
 801e658:	3301      	addhi	r3, #1
 801e65a:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801e65c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e65e:	bf9a      	itte	ls
 801e660:	fa42 f208 	asrls.w	r2, r2, r8
 801e664:	b2d2      	uxtbls	r2, r2
 801e666:	2600      	movhi	r6, #0
 801e668:	449c      	add	ip, r3
 801e66a:	e792      	b.n	801e592 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801e66c:	441c      	add	r4, r3
 801e66e:	b224      	sxth	r4, r4
 801e670:	e6d5      	b.n	801e41e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801e672:	f1ba 0f01 	cmp.w	sl, #1
 801e676:	f47f af0c 	bne.w	801e492 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e67a:	f1bb 0f01 	cmp.w	fp, #1
 801e67e:	f47f af08 	bne.w	801e492 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e682:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801e744 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801e686:	f8db 0000 	ldr.w	r0, [fp]
 801e68a:	6803      	ldr	r3, [r0, #0]
 801e68c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e68e:	4798      	blx	r3
 801e690:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801e694:	465a      	mov	r2, fp
 801e696:	d006      	beq.n	801e6a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e698:	f1b8 0f04 	cmp.w	r8, #4
 801e69c:	d140      	bne.n	801e720 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801e69e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e6a0:	3300      	adds	r3, #0
 801e6a2:	bf18      	it	ne
 801e6a4:	2301      	movne	r3, #1
 801e6a6:	0580      	lsls	r0, r0, #22
 801e6a8:	d56e      	bpl.n	801e788 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801e6aa:	f1b8 0f08 	cmp.w	r8, #8
 801e6ae:	d16b      	bne.n	801e788 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801e6b0:	2b00      	cmp	r3, #0
 801e6b2:	bf0c      	ite	eq
 801e6b4:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801e6b8:	f44f 7180 	movne.w	r1, #256	; 0x100
 801e6bc:	2d00      	cmp	r5, #0
 801e6be:	f47f aee8 	bne.w	801e492 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e6c2:	2e00      	cmp	r6, #0
 801e6c4:	f47f aee5 	bne.w	801e492 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e6c8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801e6ca:	19e3      	adds	r3, r4, r7
 801e6cc:	4283      	cmp	r3, r0
 801e6ce:	f73f aee0 	bgt.w	801e492 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e6d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e6d4:	980d      	ldr	r0, [sp, #52]	; 0x34
 801e6d6:	444b      	add	r3, r9
 801e6d8:	4283      	cmp	r3, r0
 801e6da:	f73f aeda 	bgt.w	801e492 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e6de:	6810      	ldr	r0, [r2, #0]
 801e6e0:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801e6e4:	6804      	ldr	r4, [r0, #0]
 801e6e6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801e6ea:	b2bf      	uxth	r7, r7
 801e6ec:	f1b8 0f08 	cmp.w	r8, #8
 801e6f0:	f04f 0500 	mov.w	r5, #0
 801e6f4:	bf18      	it	ne
 801e6f6:	3701      	addne	r7, #1
 801e6f8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801e6fc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e6fe:	9104      	str	r1, [sp, #16]
 801e700:	bf18      	it	ne
 801e702:	f027 0701 	bicne.w	r7, r7, #1
 801e706:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e708:	bf18      	it	ne
 801e70a:	b2bf      	uxthne	r7, r7
 801e70c:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801e710:	e9cd 7900 	strd	r7, r9, [sp]
 801e714:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801e716:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801e718:	47a0      	blx	r4
 801e71a:	b019      	add	sp, #100	; 0x64
 801e71c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e720:	2300      	movs	r3, #0
 801e722:	e7c0      	b.n	801e6a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e724:	2208      	movs	r2, #8
 801e726:	fb92 f3f8 	sdiv	r3, r2, r8
 801e72a:	1e5a      	subs	r2, r3, #1
 801e72c:	443a      	add	r2, r7
 801e72e:	fb92 f2f3 	sdiv	r2, r2, r3
 801e732:	fb12 f203 	smulbb	r2, r2, r3
 801e736:	b292      	uxth	r2, r2
 801e738:	e6b0      	b.n	801e49c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801e73a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801e73c:	e6ec      	b.n	801e518 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801e73e:	bf00      	nop
 801e740:	20012f24 	.word	0x20012f24
 801e744:	20012f2c 	.word	0x20012f2c
 801e748:	20012f26 	.word	0x20012f26
 801e74c:	00fff800 	.word	0x00fff800
 801e750:	9810      	ldr	r0, [sp, #64]	; 0x40
 801e752:	e779      	b.n	801e648 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801e754:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e756:	b153      	cbz	r3, 801e76e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801e758:	441e      	add	r6, r3
 801e75a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e75c:	b2b6      	uxth	r6, r6
 801e75e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801e762:	f006 0607 	and.w	r6, r6, #7
 801e766:	781a      	ldrb	r2, [r3, #0]
 801e768:	9328      	str	r3, [sp, #160]	; 0xa0
 801e76a:	4132      	asrs	r2, r6
 801e76c:	b2d2      	uxtb	r2, r2
 801e76e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e770:	445b      	add	r3, fp
 801e772:	930a      	str	r3, [sp, #40]	; 0x28
 801e774:	e706      	b.n	801e584 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801e776:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e778:	2b00      	cmp	r3, #0
 801e77a:	d1ce      	bne.n	801e71a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e77c:	4b05      	ldr	r3, [pc, #20]	; (801e794 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801e77e:	6818      	ldr	r0, [r3, #0]
 801e780:	6803      	ldr	r3, [r0, #0]
 801e782:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e784:	4798      	blx	r3
 801e786:	e7c8      	b.n	801e71a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e788:	2b00      	cmp	r3, #0
 801e78a:	f43f ae82 	beq.w	801e492 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e78e:	f44f 7180 	mov.w	r1, #256	; 0x100
 801e792:	e793      	b.n	801e6bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801e794:	20012f2c 	.word	0x20012f2c

0801e798 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801e798:	b538      	push	{r3, r4, r5, lr}
 801e79a:	4c15      	ldr	r4, [pc, #84]	; (801e7f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801e79c:	7823      	ldrb	r3, [r4, #0]
 801e79e:	f3bf 8f5b 	dmb	ish
 801e7a2:	07da      	lsls	r2, r3, #31
 801e7a4:	4605      	mov	r5, r0
 801e7a6:	d40b      	bmi.n	801e7c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e7a8:	4620      	mov	r0, r4
 801e7aa:	f00a fee2 	bl	8029572 <__cxa_guard_acquire>
 801e7ae:	b138      	cbz	r0, 801e7c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e7b0:	4620      	mov	r0, r4
 801e7b2:	f00a feea 	bl	802958a <__cxa_guard_release>
 801e7b6:	4a0f      	ldr	r2, [pc, #60]	; (801e7f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e7b8:	490f      	ldr	r1, [pc, #60]	; (801e7f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801e7ba:	4810      	ldr	r0, [pc, #64]	; (801e7fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e7bc:	f00a fed2 	bl	8029564 <__aeabi_atexit>
 801e7c0:	4c0f      	ldr	r4, [pc, #60]	; (801e800 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801e7c2:	7823      	ldrb	r3, [r4, #0]
 801e7c4:	f3bf 8f5b 	dmb	ish
 801e7c8:	07db      	lsls	r3, r3, #31
 801e7ca:	d40b      	bmi.n	801e7e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e7cc:	4620      	mov	r0, r4
 801e7ce:	f00a fed0 	bl	8029572 <__cxa_guard_acquire>
 801e7d2:	b138      	cbz	r0, 801e7e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e7d4:	4620      	mov	r0, r4
 801e7d6:	f00a fed8 	bl	802958a <__cxa_guard_release>
 801e7da:	4a06      	ldr	r2, [pc, #24]	; (801e7f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e7dc:	4909      	ldr	r1, [pc, #36]	; (801e804 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801e7de:	480a      	ldr	r0, [pc, #40]	; (801e808 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e7e0:	f00a fec0 	bl	8029564 <__aeabi_atexit>
 801e7e4:	4b05      	ldr	r3, [pc, #20]	; (801e7fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e7e6:	612b      	str	r3, [r5, #16]
 801e7e8:	4b07      	ldr	r3, [pc, #28]	; (801e808 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e7ea:	616b      	str	r3, [r5, #20]
 801e7ec:	bd38      	pop	{r3, r4, r5, pc}
 801e7ee:	bf00      	nop
 801e7f0:	2001300c 	.word	0x2001300c
 801e7f4:	20000000 	.word	0x20000000
 801e7f8:	0801b59b 	.word	0x0801b59b
 801e7fc:	200000d4 	.word	0x200000d4
 801e800:	20013010 	.word	0x20013010
 801e804:	0801b599 	.word	0x0801b599
 801e808:	200000d8 	.word	0x200000d8

0801e80c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801e80c:	b538      	push	{r3, r4, r5, lr}
 801e80e:	4c15      	ldr	r4, [pc, #84]	; (801e864 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801e810:	7823      	ldrb	r3, [r4, #0]
 801e812:	f3bf 8f5b 	dmb	ish
 801e816:	07da      	lsls	r2, r3, #31
 801e818:	4605      	mov	r5, r0
 801e81a:	d40b      	bmi.n	801e834 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e81c:	4620      	mov	r0, r4
 801e81e:	f00a fea8 	bl	8029572 <__cxa_guard_acquire>
 801e822:	b138      	cbz	r0, 801e834 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e824:	4620      	mov	r0, r4
 801e826:	f00a feb0 	bl	802958a <__cxa_guard_release>
 801e82a:	4a0f      	ldr	r2, [pc, #60]	; (801e868 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e82c:	490f      	ldr	r1, [pc, #60]	; (801e86c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801e82e:	4810      	ldr	r0, [pc, #64]	; (801e870 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e830:	f00a fe98 	bl	8029564 <__aeabi_atexit>
 801e834:	4c0f      	ldr	r4, [pc, #60]	; (801e874 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801e836:	7823      	ldrb	r3, [r4, #0]
 801e838:	f3bf 8f5b 	dmb	ish
 801e83c:	07db      	lsls	r3, r3, #31
 801e83e:	d40b      	bmi.n	801e858 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e840:	4620      	mov	r0, r4
 801e842:	f00a fe96 	bl	8029572 <__cxa_guard_acquire>
 801e846:	b138      	cbz	r0, 801e858 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e848:	4620      	mov	r0, r4
 801e84a:	f00a fe9e 	bl	802958a <__cxa_guard_release>
 801e84e:	4a06      	ldr	r2, [pc, #24]	; (801e868 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e850:	4909      	ldr	r1, [pc, #36]	; (801e878 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801e852:	480a      	ldr	r0, [pc, #40]	; (801e87c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e854:	f00a fe86 	bl	8029564 <__aeabi_atexit>
 801e858:	4b05      	ldr	r3, [pc, #20]	; (801e870 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e85a:	60ab      	str	r3, [r5, #8]
 801e85c:	4b07      	ldr	r3, [pc, #28]	; (801e87c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e85e:	60eb      	str	r3, [r5, #12]
 801e860:	bd38      	pop	{r3, r4, r5, pc}
 801e862:	bf00      	nop
 801e864:	20012fe4 	.word	0x20012fe4
 801e868:	20000000 	.word	0x20000000
 801e86c:	0801b59f 	.word	0x0801b59f
 801e870:	200000ac 	.word	0x200000ac
 801e874:	20012fe8 	.word	0x20012fe8
 801e878:	0801b59d 	.word	0x0801b59d
 801e87c:	200000b0 	.word	0x200000b0

0801e880 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801e880:	b510      	push	{r4, lr}
 801e882:	4604      	mov	r4, r0
 801e884:	f7ff ff88 	bl	801e798 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801e888:	4620      	mov	r0, r4
 801e88a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e88e:	f7ff bfbd 	b.w	801e80c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801e894 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801e894:	b538      	push	{r3, r4, r5, lr}
 801e896:	4c15      	ldr	r4, [pc, #84]	; (801e8ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801e898:	7823      	ldrb	r3, [r4, #0]
 801e89a:	f3bf 8f5b 	dmb	ish
 801e89e:	07da      	lsls	r2, r3, #31
 801e8a0:	4605      	mov	r5, r0
 801e8a2:	d40b      	bmi.n	801e8bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e8a4:	4620      	mov	r0, r4
 801e8a6:	f00a fe64 	bl	8029572 <__cxa_guard_acquire>
 801e8aa:	b138      	cbz	r0, 801e8bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e8ac:	4620      	mov	r0, r4
 801e8ae:	f00a fe6c 	bl	802958a <__cxa_guard_release>
 801e8b2:	4a0f      	ldr	r2, [pc, #60]	; (801e8f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e8b4:	490f      	ldr	r1, [pc, #60]	; (801e8f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801e8b6:	4810      	ldr	r0, [pc, #64]	; (801e8f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e8b8:	f00a fe54 	bl	8029564 <__aeabi_atexit>
 801e8bc:	4c0f      	ldr	r4, [pc, #60]	; (801e8fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801e8be:	7823      	ldrb	r3, [r4, #0]
 801e8c0:	f3bf 8f5b 	dmb	ish
 801e8c4:	07db      	lsls	r3, r3, #31
 801e8c6:	d40b      	bmi.n	801e8e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e8c8:	4620      	mov	r0, r4
 801e8ca:	f00a fe52 	bl	8029572 <__cxa_guard_acquire>
 801e8ce:	b138      	cbz	r0, 801e8e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e8d0:	4620      	mov	r0, r4
 801e8d2:	f00a fe5a 	bl	802958a <__cxa_guard_release>
 801e8d6:	4a06      	ldr	r2, [pc, #24]	; (801e8f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e8d8:	4909      	ldr	r1, [pc, #36]	; (801e900 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801e8da:	480a      	ldr	r0, [pc, #40]	; (801e904 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e8dc:	f00a fe42 	bl	8029564 <__aeabi_atexit>
 801e8e0:	4b05      	ldr	r3, [pc, #20]	; (801e8f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e8e2:	622b      	str	r3, [r5, #32]
 801e8e4:	4b07      	ldr	r3, [pc, #28]	; (801e904 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e8e6:	626b      	str	r3, [r5, #36]	; 0x24
 801e8e8:	bd38      	pop	{r3, r4, r5, pc}
 801e8ea:	bf00      	nop
 801e8ec:	20013014 	.word	0x20013014
 801e8f0:	20000000 	.word	0x20000000
 801e8f4:	0801b593 	.word	0x0801b593
 801e8f8:	200000dc 	.word	0x200000dc
 801e8fc:	20013018 	.word	0x20013018
 801e900:	0801b591 	.word	0x0801b591
 801e904:	200000e0 	.word	0x200000e0

0801e908 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801e908:	b538      	push	{r3, r4, r5, lr}
 801e90a:	4c15      	ldr	r4, [pc, #84]	; (801e960 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801e90c:	7823      	ldrb	r3, [r4, #0]
 801e90e:	f3bf 8f5b 	dmb	ish
 801e912:	07da      	lsls	r2, r3, #31
 801e914:	4605      	mov	r5, r0
 801e916:	d40b      	bmi.n	801e930 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e918:	4620      	mov	r0, r4
 801e91a:	f00a fe2a 	bl	8029572 <__cxa_guard_acquire>
 801e91e:	b138      	cbz	r0, 801e930 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e920:	4620      	mov	r0, r4
 801e922:	f00a fe32 	bl	802958a <__cxa_guard_release>
 801e926:	4a0f      	ldr	r2, [pc, #60]	; (801e964 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e928:	490f      	ldr	r1, [pc, #60]	; (801e968 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801e92a:	4810      	ldr	r0, [pc, #64]	; (801e96c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e92c:	f00a fe1a 	bl	8029564 <__aeabi_atexit>
 801e930:	4c0f      	ldr	r4, [pc, #60]	; (801e970 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801e932:	7823      	ldrb	r3, [r4, #0]
 801e934:	f3bf 8f5b 	dmb	ish
 801e938:	07db      	lsls	r3, r3, #31
 801e93a:	d40b      	bmi.n	801e954 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e93c:	4620      	mov	r0, r4
 801e93e:	f00a fe18 	bl	8029572 <__cxa_guard_acquire>
 801e942:	b138      	cbz	r0, 801e954 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e944:	4620      	mov	r0, r4
 801e946:	f00a fe20 	bl	802958a <__cxa_guard_release>
 801e94a:	4a06      	ldr	r2, [pc, #24]	; (801e964 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e94c:	4909      	ldr	r1, [pc, #36]	; (801e974 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801e94e:	480a      	ldr	r0, [pc, #40]	; (801e978 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e950:	f00a fe08 	bl	8029564 <__aeabi_atexit>
 801e954:	4b05      	ldr	r3, [pc, #20]	; (801e96c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e956:	61ab      	str	r3, [r5, #24]
 801e958:	4b07      	ldr	r3, [pc, #28]	; (801e978 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e95a:	61eb      	str	r3, [r5, #28]
 801e95c:	bd38      	pop	{r3, r4, r5, pc}
 801e95e:	bf00      	nop
 801e960:	20012fec 	.word	0x20012fec
 801e964:	20000000 	.word	0x20000000
 801e968:	0801b597 	.word	0x0801b597
 801e96c:	200000b4 	.word	0x200000b4
 801e970:	20012ff0 	.word	0x20012ff0
 801e974:	0801b595 	.word	0x0801b595
 801e978:	200000b8 	.word	0x200000b8

0801e97c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801e97c:	b510      	push	{r4, lr}
 801e97e:	4604      	mov	r4, r0
 801e980:	f7ff ff88 	bl	801e894 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801e984:	4620      	mov	r0, r4
 801e986:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e98a:	f7ff bfbd 	b.w	801e908 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801e990 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801e990:	b538      	push	{r3, r4, r5, lr}
 801e992:	4c15      	ldr	r4, [pc, #84]	; (801e9e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801e994:	7823      	ldrb	r3, [r4, #0]
 801e996:	f3bf 8f5b 	dmb	ish
 801e99a:	07da      	lsls	r2, r3, #31
 801e99c:	4605      	mov	r5, r0
 801e99e:	d40b      	bmi.n	801e9b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e9a0:	4620      	mov	r0, r4
 801e9a2:	f00a fde6 	bl	8029572 <__cxa_guard_acquire>
 801e9a6:	b138      	cbz	r0, 801e9b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e9a8:	4620      	mov	r0, r4
 801e9aa:	f00a fdee 	bl	802958a <__cxa_guard_release>
 801e9ae:	4a0f      	ldr	r2, [pc, #60]	; (801e9ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e9b0:	490f      	ldr	r1, [pc, #60]	; (801e9f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801e9b2:	4810      	ldr	r0, [pc, #64]	; (801e9f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e9b4:	f00a fdd6 	bl	8029564 <__aeabi_atexit>
 801e9b8:	4c0f      	ldr	r4, [pc, #60]	; (801e9f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801e9ba:	7823      	ldrb	r3, [r4, #0]
 801e9bc:	f3bf 8f5b 	dmb	ish
 801e9c0:	07db      	lsls	r3, r3, #31
 801e9c2:	d40b      	bmi.n	801e9dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e9c4:	4620      	mov	r0, r4
 801e9c6:	f00a fdd4 	bl	8029572 <__cxa_guard_acquire>
 801e9ca:	b138      	cbz	r0, 801e9dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e9cc:	4620      	mov	r0, r4
 801e9ce:	f00a fddc 	bl	802958a <__cxa_guard_release>
 801e9d2:	4a06      	ldr	r2, [pc, #24]	; (801e9ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e9d4:	4909      	ldr	r1, [pc, #36]	; (801e9fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801e9d6:	480a      	ldr	r0, [pc, #40]	; (801ea00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e9d8:	f00a fdc4 	bl	8029564 <__aeabi_atexit>
 801e9dc:	4b05      	ldr	r3, [pc, #20]	; (801e9f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e9de:	632b      	str	r3, [r5, #48]	; 0x30
 801e9e0:	4b07      	ldr	r3, [pc, #28]	; (801ea00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e9e2:	636b      	str	r3, [r5, #52]	; 0x34
 801e9e4:	bd38      	pop	{r3, r4, r5, pc}
 801e9e6:	bf00      	nop
 801e9e8:	20013024 	.word	0x20013024
 801e9ec:	20000000 	.word	0x20000000
 801e9f0:	0801b58b 	.word	0x0801b58b
 801e9f4:	200000ec 	.word	0x200000ec
 801e9f8:	20013028 	.word	0x20013028
 801e9fc:	0801b589 	.word	0x0801b589
 801ea00:	200000f0 	.word	0x200000f0

0801ea04 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801ea04:	b538      	push	{r3, r4, r5, lr}
 801ea06:	4c15      	ldr	r4, [pc, #84]	; (801ea5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801ea08:	7823      	ldrb	r3, [r4, #0]
 801ea0a:	f3bf 8f5b 	dmb	ish
 801ea0e:	07da      	lsls	r2, r3, #31
 801ea10:	4605      	mov	r5, r0
 801ea12:	d40b      	bmi.n	801ea2c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801ea14:	4620      	mov	r0, r4
 801ea16:	f00a fdac 	bl	8029572 <__cxa_guard_acquire>
 801ea1a:	b138      	cbz	r0, 801ea2c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801ea1c:	4620      	mov	r0, r4
 801ea1e:	f00a fdb4 	bl	802958a <__cxa_guard_release>
 801ea22:	4a0f      	ldr	r2, [pc, #60]	; (801ea60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801ea24:	490f      	ldr	r1, [pc, #60]	; (801ea64 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801ea26:	4810      	ldr	r0, [pc, #64]	; (801ea68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801ea28:	f00a fd9c 	bl	8029564 <__aeabi_atexit>
 801ea2c:	4c0f      	ldr	r4, [pc, #60]	; (801ea6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801ea2e:	7823      	ldrb	r3, [r4, #0]
 801ea30:	f3bf 8f5b 	dmb	ish
 801ea34:	07db      	lsls	r3, r3, #31
 801ea36:	d40b      	bmi.n	801ea50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801ea38:	4620      	mov	r0, r4
 801ea3a:	f00a fd9a 	bl	8029572 <__cxa_guard_acquire>
 801ea3e:	b138      	cbz	r0, 801ea50 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801ea40:	4620      	mov	r0, r4
 801ea42:	f00a fda2 	bl	802958a <__cxa_guard_release>
 801ea46:	4a06      	ldr	r2, [pc, #24]	; (801ea60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801ea48:	4909      	ldr	r1, [pc, #36]	; (801ea70 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801ea4a:	480a      	ldr	r0, [pc, #40]	; (801ea74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801ea4c:	f00a fd8a 	bl	8029564 <__aeabi_atexit>
 801ea50:	4b05      	ldr	r3, [pc, #20]	; (801ea68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801ea52:	62ab      	str	r3, [r5, #40]	; 0x28
 801ea54:	4b07      	ldr	r3, [pc, #28]	; (801ea74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801ea56:	62eb      	str	r3, [r5, #44]	; 0x2c
 801ea58:	bd38      	pop	{r3, r4, r5, pc}
 801ea5a:	bf00      	nop
 801ea5c:	20012ff4 	.word	0x20012ff4
 801ea60:	20000000 	.word	0x20000000
 801ea64:	0801b58f 	.word	0x0801b58f
 801ea68:	200000bc 	.word	0x200000bc
 801ea6c:	20012ff8 	.word	0x20012ff8
 801ea70:	0801b58d 	.word	0x0801b58d
 801ea74:	200000c0 	.word	0x200000c0

0801ea78 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801ea78:	b510      	push	{r4, lr}
 801ea7a:	4604      	mov	r4, r0
 801ea7c:	f7ff ff88 	bl	801e990 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801ea80:	4620      	mov	r0, r4
 801ea82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ea86:	f7ff bfbd 	b.w	801ea04 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801ea8c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801ea8c:	b538      	push	{r3, r4, r5, lr}
 801ea8e:	4c15      	ldr	r4, [pc, #84]	; (801eae4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801ea90:	7823      	ldrb	r3, [r4, #0]
 801ea92:	f3bf 8f5b 	dmb	ish
 801ea96:	07da      	lsls	r2, r3, #31
 801ea98:	4605      	mov	r5, r0
 801ea9a:	d40b      	bmi.n	801eab4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801ea9c:	4620      	mov	r0, r4
 801ea9e:	f00a fd68 	bl	8029572 <__cxa_guard_acquire>
 801eaa2:	b138      	cbz	r0, 801eab4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801eaa4:	4620      	mov	r0, r4
 801eaa6:	f00a fd70 	bl	802958a <__cxa_guard_release>
 801eaaa:	4a0f      	ldr	r2, [pc, #60]	; (801eae8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801eaac:	490f      	ldr	r1, [pc, #60]	; (801eaec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801eaae:	4810      	ldr	r0, [pc, #64]	; (801eaf0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801eab0:	f00a fd58 	bl	8029564 <__aeabi_atexit>
 801eab4:	4c0f      	ldr	r4, [pc, #60]	; (801eaf4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801eab6:	7823      	ldrb	r3, [r4, #0]
 801eab8:	f3bf 8f5b 	dmb	ish
 801eabc:	07db      	lsls	r3, r3, #31
 801eabe:	d40b      	bmi.n	801ead8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801eac0:	4620      	mov	r0, r4
 801eac2:	f00a fd56 	bl	8029572 <__cxa_guard_acquire>
 801eac6:	b138      	cbz	r0, 801ead8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801eac8:	4620      	mov	r0, r4
 801eaca:	f00a fd5e 	bl	802958a <__cxa_guard_release>
 801eace:	4a06      	ldr	r2, [pc, #24]	; (801eae8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801ead0:	4909      	ldr	r1, [pc, #36]	; (801eaf8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801ead2:	480a      	ldr	r0, [pc, #40]	; (801eafc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801ead4:	f00a fd46 	bl	8029564 <__aeabi_atexit>
 801ead8:	4b05      	ldr	r3, [pc, #20]	; (801eaf0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801eada:	652b      	str	r3, [r5, #80]	; 0x50
 801eadc:	4b07      	ldr	r3, [pc, #28]	; (801eafc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801eade:	656b      	str	r3, [r5, #84]	; 0x54
 801eae0:	bd38      	pop	{r3, r4, r5, pc}
 801eae2:	bf00      	nop
 801eae4:	2001302c 	.word	0x2001302c
 801eae8:	20000000 	.word	0x20000000
 801eaec:	0801b57b 	.word	0x0801b57b
 801eaf0:	200000f4 	.word	0x200000f4
 801eaf4:	20013030 	.word	0x20013030
 801eaf8:	0801b579 	.word	0x0801b579
 801eafc:	200000f8 	.word	0x200000f8

0801eb00 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801eb00:	b538      	push	{r3, r4, r5, lr}
 801eb02:	4c15      	ldr	r4, [pc, #84]	; (801eb58 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801eb04:	7823      	ldrb	r3, [r4, #0]
 801eb06:	f3bf 8f5b 	dmb	ish
 801eb0a:	07da      	lsls	r2, r3, #31
 801eb0c:	4605      	mov	r5, r0
 801eb0e:	d40b      	bmi.n	801eb28 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801eb10:	4620      	mov	r0, r4
 801eb12:	f00a fd2e 	bl	8029572 <__cxa_guard_acquire>
 801eb16:	b138      	cbz	r0, 801eb28 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801eb18:	4620      	mov	r0, r4
 801eb1a:	f00a fd36 	bl	802958a <__cxa_guard_release>
 801eb1e:	4a0f      	ldr	r2, [pc, #60]	; (801eb5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801eb20:	490f      	ldr	r1, [pc, #60]	; (801eb60 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801eb22:	4810      	ldr	r0, [pc, #64]	; (801eb64 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801eb24:	f00a fd1e 	bl	8029564 <__aeabi_atexit>
 801eb28:	4c0f      	ldr	r4, [pc, #60]	; (801eb68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801eb2a:	7823      	ldrb	r3, [r4, #0]
 801eb2c:	f3bf 8f5b 	dmb	ish
 801eb30:	07db      	lsls	r3, r3, #31
 801eb32:	d40b      	bmi.n	801eb4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801eb34:	4620      	mov	r0, r4
 801eb36:	f00a fd1c 	bl	8029572 <__cxa_guard_acquire>
 801eb3a:	b138      	cbz	r0, 801eb4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801eb3c:	4620      	mov	r0, r4
 801eb3e:	f00a fd24 	bl	802958a <__cxa_guard_release>
 801eb42:	4a06      	ldr	r2, [pc, #24]	; (801eb5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801eb44:	4909      	ldr	r1, [pc, #36]	; (801eb6c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801eb46:	480a      	ldr	r0, [pc, #40]	; (801eb70 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801eb48:	f00a fd0c 	bl	8029564 <__aeabi_atexit>
 801eb4c:	4b05      	ldr	r3, [pc, #20]	; (801eb64 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801eb4e:	64ab      	str	r3, [r5, #72]	; 0x48
 801eb50:	4b07      	ldr	r3, [pc, #28]	; (801eb70 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801eb52:	64eb      	str	r3, [r5, #76]	; 0x4c
 801eb54:	bd38      	pop	{r3, r4, r5, pc}
 801eb56:	bf00      	nop
 801eb58:	20013034 	.word	0x20013034
 801eb5c:	20000000 	.word	0x20000000
 801eb60:	0801b57f 	.word	0x0801b57f
 801eb64:	200000fc 	.word	0x200000fc
 801eb68:	20013038 	.word	0x20013038
 801eb6c:	0801b57d 	.word	0x0801b57d
 801eb70:	20000100 	.word	0x20000100

0801eb74 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801eb74:	b538      	push	{r3, r4, r5, lr}
 801eb76:	4c15      	ldr	r4, [pc, #84]	; (801ebcc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801eb78:	7823      	ldrb	r3, [r4, #0]
 801eb7a:	f3bf 8f5b 	dmb	ish
 801eb7e:	07da      	lsls	r2, r3, #31
 801eb80:	4605      	mov	r5, r0
 801eb82:	d40b      	bmi.n	801eb9c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801eb84:	4620      	mov	r0, r4
 801eb86:	f00a fcf4 	bl	8029572 <__cxa_guard_acquire>
 801eb8a:	b138      	cbz	r0, 801eb9c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801eb8c:	4620      	mov	r0, r4
 801eb8e:	f00a fcfc 	bl	802958a <__cxa_guard_release>
 801eb92:	4a0f      	ldr	r2, [pc, #60]	; (801ebd0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801eb94:	490f      	ldr	r1, [pc, #60]	; (801ebd4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801eb96:	4810      	ldr	r0, [pc, #64]	; (801ebd8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801eb98:	f00a fce4 	bl	8029564 <__aeabi_atexit>
 801eb9c:	4c0f      	ldr	r4, [pc, #60]	; (801ebdc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801eb9e:	7823      	ldrb	r3, [r4, #0]
 801eba0:	f3bf 8f5b 	dmb	ish
 801eba4:	07db      	lsls	r3, r3, #31
 801eba6:	d40b      	bmi.n	801ebc0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801eba8:	4620      	mov	r0, r4
 801ebaa:	f00a fce2 	bl	8029572 <__cxa_guard_acquire>
 801ebae:	b138      	cbz	r0, 801ebc0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801ebb0:	4620      	mov	r0, r4
 801ebb2:	f00a fcea 	bl	802958a <__cxa_guard_release>
 801ebb6:	4a06      	ldr	r2, [pc, #24]	; (801ebd0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801ebb8:	4909      	ldr	r1, [pc, #36]	; (801ebe0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801ebba:	480a      	ldr	r0, [pc, #40]	; (801ebe4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801ebbc:	f00a fcd2 	bl	8029564 <__aeabi_atexit>
 801ebc0:	4b05      	ldr	r3, [pc, #20]	; (801ebd8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801ebc2:	642b      	str	r3, [r5, #64]	; 0x40
 801ebc4:	4b07      	ldr	r3, [pc, #28]	; (801ebe4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801ebc6:	646b      	str	r3, [r5, #68]	; 0x44
 801ebc8:	bd38      	pop	{r3, r4, r5, pc}
 801ebca:	bf00      	nop
 801ebcc:	20012ffc 	.word	0x20012ffc
 801ebd0:	20000000 	.word	0x20000000
 801ebd4:	0801b583 	.word	0x0801b583
 801ebd8:	200000c4 	.word	0x200000c4
 801ebdc:	20013000 	.word	0x20013000
 801ebe0:	0801b581 	.word	0x0801b581
 801ebe4:	200000c8 	.word	0x200000c8

0801ebe8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801ebe8:	b538      	push	{r3, r4, r5, lr}
 801ebea:	4c15      	ldr	r4, [pc, #84]	; (801ec40 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801ebec:	7823      	ldrb	r3, [r4, #0]
 801ebee:	f3bf 8f5b 	dmb	ish
 801ebf2:	07da      	lsls	r2, r3, #31
 801ebf4:	4605      	mov	r5, r0
 801ebf6:	d40b      	bmi.n	801ec10 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801ebf8:	4620      	mov	r0, r4
 801ebfa:	f00a fcba 	bl	8029572 <__cxa_guard_acquire>
 801ebfe:	b138      	cbz	r0, 801ec10 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801ec00:	4620      	mov	r0, r4
 801ec02:	f00a fcc2 	bl	802958a <__cxa_guard_release>
 801ec06:	4a0f      	ldr	r2, [pc, #60]	; (801ec44 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801ec08:	490f      	ldr	r1, [pc, #60]	; (801ec48 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801ec0a:	4810      	ldr	r0, [pc, #64]	; (801ec4c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801ec0c:	f00a fcaa 	bl	8029564 <__aeabi_atexit>
 801ec10:	4c0f      	ldr	r4, [pc, #60]	; (801ec50 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801ec12:	7823      	ldrb	r3, [r4, #0]
 801ec14:	f3bf 8f5b 	dmb	ish
 801ec18:	07db      	lsls	r3, r3, #31
 801ec1a:	d40b      	bmi.n	801ec34 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801ec1c:	4620      	mov	r0, r4
 801ec1e:	f00a fca8 	bl	8029572 <__cxa_guard_acquire>
 801ec22:	b138      	cbz	r0, 801ec34 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801ec24:	4620      	mov	r0, r4
 801ec26:	f00a fcb0 	bl	802958a <__cxa_guard_release>
 801ec2a:	4a06      	ldr	r2, [pc, #24]	; (801ec44 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801ec2c:	4909      	ldr	r1, [pc, #36]	; (801ec54 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801ec2e:	480a      	ldr	r0, [pc, #40]	; (801ec58 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801ec30:	f00a fc98 	bl	8029564 <__aeabi_atexit>
 801ec34:	4b05      	ldr	r3, [pc, #20]	; (801ec4c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801ec36:	63ab      	str	r3, [r5, #56]	; 0x38
 801ec38:	4b07      	ldr	r3, [pc, #28]	; (801ec58 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801ec3a:	63eb      	str	r3, [r5, #60]	; 0x3c
 801ec3c:	bd38      	pop	{r3, r4, r5, pc}
 801ec3e:	bf00      	nop
 801ec40:	2001301c 	.word	0x2001301c
 801ec44:	20000000 	.word	0x20000000
 801ec48:	0801b587 	.word	0x0801b587
 801ec4c:	200000e4 	.word	0x200000e4
 801ec50:	20013020 	.word	0x20013020
 801ec54:	0801b585 	.word	0x0801b585
 801ec58:	200000e8 	.word	0x200000e8

0801ec5c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801ec5c:	b510      	push	{r4, lr}
 801ec5e:	4604      	mov	r4, r0
 801ec60:	f7ff ff14 	bl	801ea8c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801ec64:	4620      	mov	r0, r4
 801ec66:	f7ff ff85 	bl	801eb74 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801ec6a:	4620      	mov	r0, r4
 801ec6c:	f7ff ff48 	bl	801eb00 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801ec70:	4620      	mov	r0, r4
 801ec72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ec76:	f7ff bfb7 	b.w	801ebe8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801ec7c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801ec7c:	b538      	push	{r3, r4, r5, lr}
 801ec7e:	4c15      	ldr	r4, [pc, #84]	; (801ecd4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801ec80:	7823      	ldrb	r3, [r4, #0]
 801ec82:	f3bf 8f5b 	dmb	ish
 801ec86:	07da      	lsls	r2, r3, #31
 801ec88:	4605      	mov	r5, r0
 801ec8a:	d40b      	bmi.n	801eca4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801ec8c:	4620      	mov	r0, r4
 801ec8e:	f00a fc70 	bl	8029572 <__cxa_guard_acquire>
 801ec92:	b138      	cbz	r0, 801eca4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801ec94:	4620      	mov	r0, r4
 801ec96:	f00a fc78 	bl	802958a <__cxa_guard_release>
 801ec9a:	4a0f      	ldr	r2, [pc, #60]	; (801ecd8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801ec9c:	490f      	ldr	r1, [pc, #60]	; (801ecdc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801ec9e:	4810      	ldr	r0, [pc, #64]	; (801ece0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801eca0:	f00a fc60 	bl	8029564 <__aeabi_atexit>
 801eca4:	4c0f      	ldr	r4, [pc, #60]	; (801ece4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801eca6:	7823      	ldrb	r3, [r4, #0]
 801eca8:	f3bf 8f5b 	dmb	ish
 801ecac:	07db      	lsls	r3, r3, #31
 801ecae:	d40b      	bmi.n	801ecc8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801ecb0:	4620      	mov	r0, r4
 801ecb2:	f00a fc5e 	bl	8029572 <__cxa_guard_acquire>
 801ecb6:	b138      	cbz	r0, 801ecc8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801ecb8:	4620      	mov	r0, r4
 801ecba:	f00a fc66 	bl	802958a <__cxa_guard_release>
 801ecbe:	4a06      	ldr	r2, [pc, #24]	; (801ecd8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801ecc0:	4909      	ldr	r1, [pc, #36]	; (801ece8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801ecc2:	480a      	ldr	r0, [pc, #40]	; (801ecec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801ecc4:	f00a fc4e 	bl	8029564 <__aeabi_atexit>
 801ecc8:	4b05      	ldr	r3, [pc, #20]	; (801ece0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801ecca:	662b      	str	r3, [r5, #96]	; 0x60
 801eccc:	4b07      	ldr	r3, [pc, #28]	; (801ecec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801ecce:	666b      	str	r3, [r5, #100]	; 0x64
 801ecd0:	bd38      	pop	{r3, r4, r5, pc}
 801ecd2:	bf00      	nop
 801ecd4:	20013004 	.word	0x20013004
 801ecd8:	20000000 	.word	0x20000000
 801ecdc:	0801b573 	.word	0x0801b573
 801ece0:	200000cc 	.word	0x200000cc
 801ece4:	20013008 	.word	0x20013008
 801ece8:	0801b571 	.word	0x0801b571
 801ecec:	200000d0 	.word	0x200000d0

0801ecf0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801ecf0:	b538      	push	{r3, r4, r5, lr}
 801ecf2:	4c15      	ldr	r4, [pc, #84]	; (801ed48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801ecf4:	7823      	ldrb	r3, [r4, #0]
 801ecf6:	f3bf 8f5b 	dmb	ish
 801ecfa:	07da      	lsls	r2, r3, #31
 801ecfc:	4605      	mov	r5, r0
 801ecfe:	d40b      	bmi.n	801ed18 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801ed00:	4620      	mov	r0, r4
 801ed02:	f00a fc36 	bl	8029572 <__cxa_guard_acquire>
 801ed06:	b138      	cbz	r0, 801ed18 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801ed08:	4620      	mov	r0, r4
 801ed0a:	f00a fc3e 	bl	802958a <__cxa_guard_release>
 801ed0e:	4a0f      	ldr	r2, [pc, #60]	; (801ed4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801ed10:	490f      	ldr	r1, [pc, #60]	; (801ed50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801ed12:	4810      	ldr	r0, [pc, #64]	; (801ed54 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801ed14:	f00a fc26 	bl	8029564 <__aeabi_atexit>
 801ed18:	4c0f      	ldr	r4, [pc, #60]	; (801ed58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801ed1a:	7823      	ldrb	r3, [r4, #0]
 801ed1c:	f3bf 8f5b 	dmb	ish
 801ed20:	07db      	lsls	r3, r3, #31
 801ed22:	d40b      	bmi.n	801ed3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801ed24:	4620      	mov	r0, r4
 801ed26:	f00a fc24 	bl	8029572 <__cxa_guard_acquire>
 801ed2a:	b138      	cbz	r0, 801ed3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801ed2c:	4620      	mov	r0, r4
 801ed2e:	f00a fc2c 	bl	802958a <__cxa_guard_release>
 801ed32:	4a06      	ldr	r2, [pc, #24]	; (801ed4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801ed34:	4909      	ldr	r1, [pc, #36]	; (801ed5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801ed36:	480a      	ldr	r0, [pc, #40]	; (801ed60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801ed38:	f00a fc14 	bl	8029564 <__aeabi_atexit>
 801ed3c:	4b05      	ldr	r3, [pc, #20]	; (801ed54 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801ed3e:	65ab      	str	r3, [r5, #88]	; 0x58
 801ed40:	4b07      	ldr	r3, [pc, #28]	; (801ed60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801ed42:	65eb      	str	r3, [r5, #92]	; 0x5c
 801ed44:	bd38      	pop	{r3, r4, r5, pc}
 801ed46:	bf00      	nop
 801ed48:	20012fdc 	.word	0x20012fdc
 801ed4c:	20000000 	.word	0x20000000
 801ed50:	0801b577 	.word	0x0801b577
 801ed54:	200000a4 	.word	0x200000a4
 801ed58:	20012fe0 	.word	0x20012fe0
 801ed5c:	0801b575 	.word	0x0801b575
 801ed60:	200000a8 	.word	0x200000a8

0801ed64 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801ed64:	b510      	push	{r4, lr}
 801ed66:	4604      	mov	r4, r0
 801ed68:	f7ff ff88 	bl	801ec7c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801ed6c:	4620      	mov	r0, r4
 801ed6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ed72:	f7ff bfbd 	b.w	801ecf0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801ed78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801ed78:	b538      	push	{r3, r4, r5, lr}
 801ed7a:	4c15      	ldr	r4, [pc, #84]	; (801edd0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801ed7c:	7823      	ldrb	r3, [r4, #0]
 801ed7e:	f3bf 8f5b 	dmb	ish
 801ed82:	07da      	lsls	r2, r3, #31
 801ed84:	4605      	mov	r5, r0
 801ed86:	d40b      	bmi.n	801eda0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801ed88:	4620      	mov	r0, r4
 801ed8a:	f00a fbf2 	bl	8029572 <__cxa_guard_acquire>
 801ed8e:	b138      	cbz	r0, 801eda0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801ed90:	4620      	mov	r0, r4
 801ed92:	f00a fbfa 	bl	802958a <__cxa_guard_release>
 801ed96:	4a0f      	ldr	r2, [pc, #60]	; (801edd4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801ed98:	490f      	ldr	r1, [pc, #60]	; (801edd8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801ed9a:	4810      	ldr	r0, [pc, #64]	; (801eddc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801ed9c:	f00a fbe2 	bl	8029564 <__aeabi_atexit>
 801eda0:	4c0f      	ldr	r4, [pc, #60]	; (801ede0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801eda2:	7823      	ldrb	r3, [r4, #0]
 801eda4:	f3bf 8f5b 	dmb	ish
 801eda8:	07db      	lsls	r3, r3, #31
 801edaa:	d40b      	bmi.n	801edc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801edac:	4620      	mov	r0, r4
 801edae:	f00a fbe0 	bl	8029572 <__cxa_guard_acquire>
 801edb2:	b138      	cbz	r0, 801edc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801edb4:	4620      	mov	r0, r4
 801edb6:	f00a fbe8 	bl	802958a <__cxa_guard_release>
 801edba:	4a06      	ldr	r2, [pc, #24]	; (801edd4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801edbc:	4909      	ldr	r1, [pc, #36]	; (801ede4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801edbe:	480a      	ldr	r0, [pc, #40]	; (801ede8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801edc0:	f00a fbd0 	bl	8029564 <__aeabi_atexit>
 801edc4:	4b05      	ldr	r3, [pc, #20]	; (801eddc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801edc6:	672b      	str	r3, [r5, #112]	; 0x70
 801edc8:	4b07      	ldr	r3, [pc, #28]	; (801ede8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801edca:	676b      	str	r3, [r5, #116]	; 0x74
 801edcc:	bd38      	pop	{r3, r4, r5, pc}
 801edce:	bf00      	nop
 801edd0:	20012fd4 	.word	0x20012fd4
 801edd4:	20000000 	.word	0x20000000
 801edd8:	0801b56b 	.word	0x0801b56b
 801eddc:	2000009c 	.word	0x2000009c
 801ede0:	20012fd8 	.word	0x20012fd8
 801ede4:	0801b569 	.word	0x0801b569
 801ede8:	200000a0 	.word	0x200000a0

0801edec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801edec:	b538      	push	{r3, r4, r5, lr}
 801edee:	4c15      	ldr	r4, [pc, #84]	; (801ee44 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801edf0:	7823      	ldrb	r3, [r4, #0]
 801edf2:	f3bf 8f5b 	dmb	ish
 801edf6:	07da      	lsls	r2, r3, #31
 801edf8:	4605      	mov	r5, r0
 801edfa:	d40b      	bmi.n	801ee14 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801edfc:	4620      	mov	r0, r4
 801edfe:	f00a fbb8 	bl	8029572 <__cxa_guard_acquire>
 801ee02:	b138      	cbz	r0, 801ee14 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801ee04:	4620      	mov	r0, r4
 801ee06:	f00a fbc0 	bl	802958a <__cxa_guard_release>
 801ee0a:	4a0f      	ldr	r2, [pc, #60]	; (801ee48 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801ee0c:	490f      	ldr	r1, [pc, #60]	; (801ee4c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801ee0e:	4810      	ldr	r0, [pc, #64]	; (801ee50 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801ee10:	f00a fba8 	bl	8029564 <__aeabi_atexit>
 801ee14:	4c0f      	ldr	r4, [pc, #60]	; (801ee54 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801ee16:	7823      	ldrb	r3, [r4, #0]
 801ee18:	f3bf 8f5b 	dmb	ish
 801ee1c:	07db      	lsls	r3, r3, #31
 801ee1e:	d40b      	bmi.n	801ee38 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801ee20:	4620      	mov	r0, r4
 801ee22:	f00a fba6 	bl	8029572 <__cxa_guard_acquire>
 801ee26:	b138      	cbz	r0, 801ee38 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801ee28:	4620      	mov	r0, r4
 801ee2a:	f00a fbae 	bl	802958a <__cxa_guard_release>
 801ee2e:	4a06      	ldr	r2, [pc, #24]	; (801ee48 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801ee30:	4909      	ldr	r1, [pc, #36]	; (801ee58 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801ee32:	480a      	ldr	r0, [pc, #40]	; (801ee5c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801ee34:	f00a fb96 	bl	8029564 <__aeabi_atexit>
 801ee38:	4b05      	ldr	r3, [pc, #20]	; (801ee50 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801ee3a:	66ab      	str	r3, [r5, #104]	; 0x68
 801ee3c:	4b07      	ldr	r3, [pc, #28]	; (801ee5c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801ee3e:	66eb      	str	r3, [r5, #108]	; 0x6c
 801ee40:	bd38      	pop	{r3, r4, r5, pc}
 801ee42:	bf00      	nop
 801ee44:	20012fcc 	.word	0x20012fcc
 801ee48:	20000000 	.word	0x20000000
 801ee4c:	0801b56f 	.word	0x0801b56f
 801ee50:	20000094 	.word	0x20000094
 801ee54:	20012fd0 	.word	0x20012fd0
 801ee58:	0801b56d 	.word	0x0801b56d
 801ee5c:	20000098 	.word	0x20000098

0801ee60 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801ee60:	b510      	push	{r4, lr}
 801ee62:	4604      	mov	r4, r0
 801ee64:	f7ff ff88 	bl	801ed78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801ee68:	4620      	mov	r0, r4
 801ee6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ee6e:	f7ff bfbd 	b.w	801edec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801ee72 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801ee72:	b510      	push	{r4, lr}
 801ee74:	4604      	mov	r4, r0
 801ee76:	f7ff fff3 	bl	801ee60 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801ee7a:	4620      	mov	r0, r4
 801ee7c:	f7ff ff72 	bl	801ed64 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801ee80:	4620      	mov	r0, r4
 801ee82:	f7ff fdf9 	bl	801ea78 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801ee86:	4620      	mov	r0, r4
 801ee88:	f7ff fcfa 	bl	801e880 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801ee8c:	4620      	mov	r0, r4
 801ee8e:	f7ff fd75 	bl	801e97c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801ee92:	4620      	mov	r0, r4
 801ee94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ee98:	f7ff bee0 	b.w	801ec5c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801ee9c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801ee9c:	b538      	push	{r3, r4, r5, lr}
 801ee9e:	4c0b      	ldr	r4, [pc, #44]	; (801eecc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801eea0:	7823      	ldrb	r3, [r4, #0]
 801eea2:	f3bf 8f5b 	dmb	ish
 801eea6:	07db      	lsls	r3, r3, #31
 801eea8:	4605      	mov	r5, r0
 801eeaa:	d40b      	bmi.n	801eec4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801eeac:	4620      	mov	r0, r4
 801eeae:	f00a fb60 	bl	8029572 <__cxa_guard_acquire>
 801eeb2:	b138      	cbz	r0, 801eec4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801eeb4:	4620      	mov	r0, r4
 801eeb6:	f00a fb68 	bl	802958a <__cxa_guard_release>
 801eeba:	4a05      	ldr	r2, [pc, #20]	; (801eed0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801eebc:	4905      	ldr	r1, [pc, #20]	; (801eed4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801eebe:	4806      	ldr	r0, [pc, #24]	; (801eed8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801eec0:	f00a fb50 	bl	8029564 <__aeabi_atexit>
 801eec4:	4b04      	ldr	r3, [pc, #16]	; (801eed8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801eec6:	67ab      	str	r3, [r5, #120]	; 0x78
 801eec8:	bd38      	pop	{r3, r4, r5, pc}
 801eeca:	bf00      	nop
 801eecc:	20012fc0 	.word	0x20012fc0
 801eed0:	20000000 	.word	0x20000000
 801eed4:	0801b567 	.word	0x0801b567
 801eed8:	2000008c 	.word	0x2000008c

0801eedc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801eedc:	b538      	push	{r3, r4, r5, lr}
 801eede:	4c0b      	ldr	r4, [pc, #44]	; (801ef0c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801eee0:	7823      	ldrb	r3, [r4, #0]
 801eee2:	f3bf 8f5b 	dmb	ish
 801eee6:	07db      	lsls	r3, r3, #31
 801eee8:	4605      	mov	r5, r0
 801eeea:	d40b      	bmi.n	801ef04 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801eeec:	4620      	mov	r0, r4
 801eeee:	f00a fb40 	bl	8029572 <__cxa_guard_acquire>
 801eef2:	b138      	cbz	r0, 801ef04 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801eef4:	4620      	mov	r0, r4
 801eef6:	f00a fb48 	bl	802958a <__cxa_guard_release>
 801eefa:	4a05      	ldr	r2, [pc, #20]	; (801ef10 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801eefc:	4905      	ldr	r1, [pc, #20]	; (801ef14 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801eefe:	4806      	ldr	r0, [pc, #24]	; (801ef18 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801ef00:	f00a fb30 	bl	8029564 <__aeabi_atexit>
 801ef04:	4b04      	ldr	r3, [pc, #16]	; (801ef18 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801ef06:	67eb      	str	r3, [r5, #124]	; 0x7c
 801ef08:	bd38      	pop	{r3, r4, r5, pc}
 801ef0a:	bf00      	nop
 801ef0c:	20012fc4 	.word	0x20012fc4
 801ef10:	20000000 	.word	0x20000000
 801ef14:	0801b565 	.word	0x0801b565
 801ef18:	20000090 	.word	0x20000090

0801ef1c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801ef1c:	b570      	push	{r4, r5, r6, lr}
 801ef1e:	4d0d      	ldr	r5, [pc, #52]	; (801ef54 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801ef20:	4c0d      	ldr	r4, [pc, #52]	; (801ef58 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801ef22:	782b      	ldrb	r3, [r5, #0]
 801ef24:	f3bf 8f5b 	dmb	ish
 801ef28:	f013 0f01 	tst.w	r3, #1
 801ef2c:	4606      	mov	r6, r0
 801ef2e:	d10d      	bne.n	801ef4c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801ef30:	4628      	mov	r0, r5
 801ef32:	f00a fb1e 	bl	8029572 <__cxa_guard_acquire>
 801ef36:	b148      	cbz	r0, 801ef4c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801ef38:	4b08      	ldr	r3, [pc, #32]	; (801ef5c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801ef3a:	6023      	str	r3, [r4, #0]
 801ef3c:	4628      	mov	r0, r5
 801ef3e:	f00a fb24 	bl	802958a <__cxa_guard_release>
 801ef42:	4a07      	ldr	r2, [pc, #28]	; (801ef60 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801ef44:	4907      	ldr	r1, [pc, #28]	; (801ef64 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801ef46:	4620      	mov	r0, r4
 801ef48:	f00a fb0c 	bl	8029564 <__aeabi_atexit>
 801ef4c:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801ef50:	bd70      	pop	{r4, r5, r6, pc}
 801ef52:	bf00      	nop
 801ef54:	20012fc8 	.word	0x20012fc8
 801ef58:	2001303c 	.word	0x2001303c
 801ef5c:	0802eb0c 	.word	0x0802eb0c
 801ef60:	20000000 	.word	0x20000000
 801ef64:	0801b563 	.word	0x0801b563

0801ef68 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801ef68:	b510      	push	{r4, lr}
 801ef6a:	4604      	mov	r4, r0
 801ef6c:	f7ff ff96 	bl	801ee9c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801ef70:	4620      	mov	r0, r4
 801ef72:	f7ff ffb3 	bl	801eedc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801ef76:	4620      	mov	r0, r4
 801ef78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ef7c:	f7ff bfce 	b.w	801ef1c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801ef80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801ef80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef84:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801ef88:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801ef8c:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801ef90:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801ef94:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801ef98:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801ef9c:	8808      	ldrh	r0, [r1, #0]
 801ef9e:	fb05 4c0e 	mla	ip, r5, lr, r4
 801efa2:	2d00      	cmp	r5, #0
 801efa4:	eb02 0a0c 	add.w	sl, r2, ip
 801efa8:	f2c0 80b0 	blt.w	801f10c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801efac:	45ab      	cmp	fp, r5
 801efae:	f340 80ad 	ble.w	801f10c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801efb2:	2c00      	cmp	r4, #0
 801efb4:	f2c0 80a8 	blt.w	801f108 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801efb8:	45a6      	cmp	lr, r4
 801efba:	f340 80a5 	ble.w	801f108 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801efbe:	f812 200c 	ldrb.w	r2, [r2, ip]
 801efc2:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801efc6:	1c62      	adds	r2, r4, #1
 801efc8:	f100 80a3 	bmi.w	801f112 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801efcc:	4596      	cmp	lr, r2
 801efce:	f340 80a0 	ble.w	801f112 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801efd2:	f1b9 0f00 	cmp.w	r9, #0
 801efd6:	f000 809c 	beq.w	801f112 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801efda:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801efde:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801efe2:	3501      	adds	r5, #1
 801efe4:	f100 8099 	bmi.w	801f11a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801efe8:	45ab      	cmp	fp, r5
 801efea:	f340 8096 	ble.w	801f11a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801efee:	2f00      	cmp	r7, #0
 801eff0:	f000 8093 	beq.w	801f11a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801eff4:	2c00      	cmp	r4, #0
 801eff6:	f2c0 808e 	blt.w	801f116 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801effa:	45a6      	cmp	lr, r4
 801effc:	f340 808b 	ble.w	801f116 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801f000:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801f004:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801f008:	3401      	adds	r4, #1
 801f00a:	f100 8089 	bmi.w	801f120 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f00e:	45a6      	cmp	lr, r4
 801f010:	f340 8086 	ble.w	801f120 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f014:	f1b9 0f00 	cmp.w	r9, #0
 801f018:	f000 8082 	beq.w	801f120 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f01c:	44d6      	add	lr, sl
 801f01e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f022:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801f026:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801f02a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f02e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801f032:	fb19 fe07 	smulbb	lr, r9, r7
 801f036:	ea44 0808 	orr.w	r8, r4, r8
 801f03a:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801f03e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801f042:	f1c7 0210 	rsb	r2, r7, #16
 801f046:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f04a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f04e:	ea44 0c0c 	orr.w	ip, r4, ip
 801f052:	eba2 0209 	sub.w	r2, r2, r9
 801f056:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801f05a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801f05e:	fb04 f40c 	mul.w	r4, r4, ip
 801f062:	fb02 4808 	mla	r8, r2, r8, r4
 801f066:	041a      	lsls	r2, r3, #16
 801f068:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f06c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f070:	4313      	orrs	r3, r2
 801f072:	042a      	lsls	r2, r5, #16
 801f074:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f078:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f07c:	fb0e 8303 	mla	r3, lr, r3, r8
 801f080:	432a      	orrs	r2, r5
 801f082:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801f086:	fb07 3202 	mla	r2, r7, r2, r3
 801f08a:	0d53      	lsrs	r3, r2, #21
 801f08c:	0952      	lsrs	r2, r2, #5
 801f08e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f092:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f096:	431a      	orrs	r2, r3
 801f098:	b293      	uxth	r3, r2
 801f09a:	b2b4      	uxth	r4, r6
 801f09c:	1202      	asrs	r2, r0, #8
 801f09e:	43f6      	mvns	r6, r6
 801f0a0:	b2f6      	uxtb	r6, r6
 801f0a2:	121d      	asrs	r5, r3, #8
 801f0a4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f0a8:	fb12 f206 	smulbb	r2, r2, r6
 801f0ac:	10c7      	asrs	r7, r0, #3
 801f0ae:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f0b2:	00c0      	lsls	r0, r0, #3
 801f0b4:	fb05 2504 	mla	r5, r5, r4, r2
 801f0b8:	b2c0      	uxtb	r0, r0
 801f0ba:	10da      	asrs	r2, r3, #3
 801f0bc:	00db      	lsls	r3, r3, #3
 801f0be:	b2db      	uxtb	r3, r3
 801f0c0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f0c4:	fb10 f006 	smulbb	r0, r0, r6
 801f0c8:	b2ad      	uxth	r5, r5
 801f0ca:	fb03 0004 	mla	r0, r3, r4, r0
 801f0ce:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f0d2:	fb17 f706 	smulbb	r7, r7, r6
 801f0d6:	b280      	uxth	r0, r0
 801f0d8:	1c6b      	adds	r3, r5, #1
 801f0da:	fb02 7204 	mla	r2, r2, r4, r7
 801f0de:	b292      	uxth	r2, r2
 801f0e0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f0e4:	1c43      	adds	r3, r0, #1
 801f0e6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801f0ea:	1c50      	adds	r0, r2, #1
 801f0ec:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801f0f0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f0f4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f0f8:	0952      	lsrs	r2, r2, #5
 801f0fa:	432b      	orrs	r3, r5
 801f0fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f100:	4313      	orrs	r3, r2
 801f102:	800b      	strh	r3, [r1, #0]
 801f104:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f108:	4680      	mov	r8, r0
 801f10a:	e75c      	b.n	801efc6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801f10c:	4684      	mov	ip, r0
 801f10e:	4680      	mov	r8, r0
 801f110:	e767      	b.n	801efe2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801f112:	4684      	mov	ip, r0
 801f114:	e765      	b.n	801efe2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801f116:	4605      	mov	r5, r0
 801f118:	e776      	b.n	801f008 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801f11a:	4603      	mov	r3, r0
 801f11c:	4605      	mov	r5, r0
 801f11e:	e782      	b.n	801f026 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801f120:	4603      	mov	r3, r0
 801f122:	e780      	b.n	801f026 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801f124 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f124:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f128:	b099      	sub	sp, #100	; 0x64
 801f12a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801f12e:	9215      	str	r2, [sp, #84]	; 0x54
 801f130:	9309      	str	r3, [sp, #36]	; 0x24
 801f132:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801f134:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801f138:	930d      	str	r3, [sp, #52]	; 0x34
 801f13a:	910c      	str	r1, [sp, #48]	; 0x30
 801f13c:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801f140:	9016      	str	r0, [sp, #88]	; 0x58
 801f142:	6850      	ldr	r0, [r2, #4]
 801f144:	6812      	ldr	r2, [r2, #0]
 801f146:	fb00 1303 	mla	r3, r0, r3, r1
 801f14a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801f14e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f150:	681b      	ldr	r3, [r3, #0]
 801f152:	930b      	str	r3, [sp, #44]	; 0x2c
 801f154:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f156:	685e      	ldr	r6, [r3, #4]
 801f158:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f15a:	43db      	mvns	r3, r3
 801f15c:	b2db      	uxtb	r3, r3
 801f15e:	3604      	adds	r6, #4
 801f160:	930a      	str	r3, [sp, #40]	; 0x28
 801f162:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f164:	2b00      	cmp	r3, #0
 801f166:	dc03      	bgt.n	801f170 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801f168:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801f16a:	2b00      	cmp	r3, #0
 801f16c:	f340 8225 	ble.w	801f5ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801f170:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f172:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f176:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f17a:	1e48      	subs	r0, r1, #1
 801f17c:	1e57      	subs	r7, r2, #1
 801f17e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f180:	2b00      	cmp	r3, #0
 801f182:	f340 80e3 	ble.w	801f34c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801f186:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801f18a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f18e:	d406      	bmi.n	801f19e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f190:	4584      	cmp	ip, r0
 801f192:	da04      	bge.n	801f19e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f194:	2b00      	cmp	r3, #0
 801f196:	db02      	blt.n	801f19e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f198:	42bb      	cmp	r3, r7
 801f19a:	f2c0 80d8 	blt.w	801f34e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f19e:	f11c 0c01 	adds.w	ip, ip, #1
 801f1a2:	f100 80c9 	bmi.w	801f338 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f1a6:	4561      	cmp	r1, ip
 801f1a8:	f2c0 80c6 	blt.w	801f338 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f1ac:	3301      	adds	r3, #1
 801f1ae:	f100 80c3 	bmi.w	801f338 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f1b2:	429a      	cmp	r2, r3
 801f1b4:	f2c0 80c0 	blt.w	801f338 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f1b8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f1bc:	4647      	mov	r7, r8
 801f1be:	f1bb 0f00 	cmp.w	fp, #0
 801f1c2:	f340 80e3 	ble.w	801f38c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801f1c6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801f1c8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f1ca:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f1ce:	689b      	ldr	r3, [r3, #8]
 801f1d0:	ea5f 422a 	movs.w	r2, sl, asr #16
 801f1d4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801f1d8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801f1dc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f1e0:	f100 8121 	bmi.w	801f426 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f1e4:	f103 39ff 	add.w	r9, r3, #4294967295
 801f1e8:	454a      	cmp	r2, r9
 801f1ea:	f280 811c 	bge.w	801f426 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f1ee:	f1bc 0f00 	cmp.w	ip, #0
 801f1f2:	f2c0 8118 	blt.w	801f426 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f1f6:	f10e 39ff 	add.w	r9, lr, #4294967295
 801f1fa:	45cc      	cmp	ip, r9
 801f1fc:	f280 8113 	bge.w	801f426 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f200:	b21b      	sxth	r3, r3
 801f202:	fb0c 2203 	mla	r2, ip, r3, r2
 801f206:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f208:	eb04 0902 	add.w	r9, r4, r2
 801f20c:	5ca2      	ldrb	r2, [r4, r2]
 801f20e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801f212:	2800      	cmp	r0, #0
 801f214:	f000 80fe 	beq.w	801f414 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801f218:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f21c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801f220:	9211      	str	r2, [sp, #68]	; 0x44
 801f222:	b151      	cbz	r1, 801f23a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f224:	eb09 0203 	add.w	r2, r9, r3
 801f228:	f819 3003 	ldrb.w	r3, [r9, r3]
 801f22c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f230:	930f      	str	r3, [sp, #60]	; 0x3c
 801f232:	7853      	ldrb	r3, [r2, #1]
 801f234:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f238:	9312      	str	r3, [sp, #72]	; 0x48
 801f23a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f23c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f23e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f242:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f246:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f24a:	ea4c 0c03 	orr.w	ip, ip, r3
 801f24e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f250:	041b      	lsls	r3, r3, #16
 801f252:	fb10 f201 	smulbb	r2, r0, r1
 801f256:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801f25a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f25e:	10d2      	asrs	r2, r2, #3
 801f260:	4323      	orrs	r3, r4
 801f262:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801f266:	4353      	muls	r3, r2
 801f268:	fb09 330c 	mla	r3, r9, ip, r3
 801f26c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801f270:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f274:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f278:	ea4c 0e0e 	orr.w	lr, ip, lr
 801f27c:	f1c1 0c10 	rsb	ip, r1, #16
 801f280:	ebac 0c00 	sub.w	ip, ip, r0
 801f284:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f288:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801f28c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f28e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f290:	0418      	lsls	r0, r3, #16
 801f292:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f296:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f29a:	4318      	orrs	r0, r3
 801f29c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801f2a0:	fb02 c200 	mla	r2, r2, r0, ip
 801f2a4:	0d53      	lsrs	r3, r2, #21
 801f2a6:	0952      	lsrs	r2, r2, #5
 801f2a8:	8838      	ldrh	r0, [r7, #0]
 801f2aa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f2ae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f2b2:	431a      	orrs	r2, r3
 801f2b4:	b292      	uxth	r2, r2
 801f2b6:	1201      	asrs	r1, r0, #8
 801f2b8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801f2bc:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801f2c0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f2c4:	fb11 f104 	smulbb	r1, r1, r4
 801f2c8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801f2cc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f2d0:	00c0      	lsls	r0, r0, #3
 801f2d2:	fb0c 1c03 	mla	ip, ip, r3, r1
 801f2d6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f2da:	10d1      	asrs	r1, r2, #3
 801f2dc:	b2c0      	uxtb	r0, r0
 801f2de:	00d2      	lsls	r2, r2, #3
 801f2e0:	b2d2      	uxtb	r2, r2
 801f2e2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f2e6:	fb1e fe04 	smulbb	lr, lr, r4
 801f2ea:	fb10 f004 	smulbb	r0, r0, r4
 801f2ee:	fa1f fc8c 	uxth.w	ip, ip
 801f2f2:	fb01 e103 	mla	r1, r1, r3, lr
 801f2f6:	fb02 0303 	mla	r3, r2, r3, r0
 801f2fa:	b29a      	uxth	r2, r3
 801f2fc:	f10c 0301 	add.w	r3, ip, #1
 801f300:	b289      	uxth	r1, r1
 801f302:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f306:	1c53      	adds	r3, r2, #1
 801f308:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f30c:	1c4a      	adds	r2, r1, #1
 801f30e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f312:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801f316:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f31a:	0949      	lsrs	r1, r1, #5
 801f31c:	ea43 030c 	orr.w	r3, r3, ip
 801f320:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f324:	430b      	orrs	r3, r1
 801f326:	803b      	strh	r3, [r7, #0]
 801f328:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f32a:	449a      	add	sl, r3
 801f32c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f32e:	3702      	adds	r7, #2
 801f330:	441d      	add	r5, r3
 801f332:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f336:	e742      	b.n	801f1be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f338:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f33a:	449a      	add	sl, r3
 801f33c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f33e:	441d      	add	r5, r3
 801f340:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f342:	3b01      	subs	r3, #1
 801f344:	9309      	str	r3, [sp, #36]	; 0x24
 801f346:	f108 0802 	add.w	r8, r8, #2
 801f34a:	e718      	b.n	801f17e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801f34c:	d023      	beq.n	801f396 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801f34e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f350:	9825      	ldr	r0, [sp, #148]	; 0x94
 801f352:	3b01      	subs	r3, #1
 801f354:	fb00 a003 	mla	r0, r0, r3, sl
 801f358:	1400      	asrs	r0, r0, #16
 801f35a:	f53f af2d 	bmi.w	801f1b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f35e:	3901      	subs	r1, #1
 801f360:	4288      	cmp	r0, r1
 801f362:	f6bf af29 	bge.w	801f1b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f366:	9926      	ldr	r1, [sp, #152]	; 0x98
 801f368:	fb01 5303 	mla	r3, r1, r3, r5
 801f36c:	141b      	asrs	r3, r3, #16
 801f36e:	f53f af23 	bmi.w	801f1b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f372:	3a01      	subs	r2, #1
 801f374:	4293      	cmp	r3, r2
 801f376:	f6bf af1f 	bge.w	801f1b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f37a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801f37e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801f382:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801f386:	f1be 0f00 	cmp.w	lr, #0
 801f38a:	dc6c      	bgt.n	801f466 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801f38c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f38e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801f392:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801f396:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f398:	2b00      	cmp	r3, #0
 801f39a:	f340 810e 	ble.w	801f5ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801f39e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f3a2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f3a6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f3aa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801f3ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f3b0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f3b4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f3b8:	eef0 6a62 	vmov.f32	s13, s5
 801f3bc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f3c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f3c4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f3c8:	ee16 aa90 	vmov	sl, s13
 801f3cc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f3d0:	eef0 6a43 	vmov.f32	s13, s6
 801f3d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f3d8:	ee12 2a90 	vmov	r2, s5
 801f3dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f3e0:	fb92 f3f3 	sdiv	r3, r2, r3
 801f3e4:	ee13 2a10 	vmov	r2, s6
 801f3e8:	9325      	str	r3, [sp, #148]	; 0x94
 801f3ea:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801f3ec:	fb92 f3f3 	sdiv	r3, r2, r3
 801f3f0:	9326      	str	r3, [sp, #152]	; 0x98
 801f3f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f3f4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801f3f6:	3b01      	subs	r3, #1
 801f3f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f3fc:	930c      	str	r3, [sp, #48]	; 0x30
 801f3fe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801f400:	bf08      	it	eq
 801f402:	4613      	moveq	r3, r2
 801f404:	ee16 5a90 	vmov	r5, s13
 801f408:	9309      	str	r3, [sp, #36]	; 0x24
 801f40a:	eeb0 3a67 	vmov.f32	s6, s15
 801f40e:	eef0 2a47 	vmov.f32	s5, s14
 801f412:	e6a6      	b.n	801f162 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801f414:	2900      	cmp	r1, #0
 801f416:	f43f af10 	beq.w	801f23a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f41a:	f819 3003 	ldrb.w	r3, [r9, r3]
 801f41e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f422:	930f      	str	r3, [sp, #60]	; 0x3c
 801f424:	e709      	b.n	801f23a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f426:	f112 0901 	adds.w	r9, r2, #1
 801f42a:	f53f af7d 	bmi.w	801f328 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f42e:	454b      	cmp	r3, r9
 801f430:	f6ff af7a 	blt.w	801f328 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f434:	f11c 0901 	adds.w	r9, ip, #1
 801f438:	f53f af76 	bmi.w	801f328 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f43c:	45ce      	cmp	lr, r9
 801f43e:	f6ff af73 	blt.w	801f328 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f442:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801f444:	9202      	str	r2, [sp, #8]
 801f446:	b21b      	sxth	r3, r3
 801f448:	fa0f f28e 	sxth.w	r2, lr
 801f44c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801f450:	e9cd c003 	strd	ip, r0, [sp, #12]
 801f454:	9201      	str	r2, [sp, #4]
 801f456:	9300      	str	r3, [sp, #0]
 801f458:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f45a:	9816      	ldr	r0, [sp, #88]	; 0x58
 801f45c:	4633      	mov	r3, r6
 801f45e:	4639      	mov	r1, r7
 801f460:	f7ff fd8e 	bl	801ef80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801f464:	e760      	b.n	801f328 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801f466:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f468:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f46a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f46e:	ea4f 422a 	mov.w	r2, sl, asr #16
 801f472:	1429      	asrs	r1, r5, #16
 801f474:	fb03 2101 	mla	r1, r3, r1, r2
 801f478:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f47a:	440a      	add	r2, r1
 801f47c:	5c61      	ldrb	r1, [r4, r1]
 801f47e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801f482:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801f486:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801f48a:	f1bc 0f00 	cmp.w	ip, #0
 801f48e:	f000 808c 	beq.w	801f5aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801f492:	7857      	ldrb	r7, [r2, #1]
 801f494:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801f498:	9413      	str	r4, [sp, #76]	; 0x4c
 801f49a:	b140      	cbz	r0, 801f4ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f49c:	18d7      	adds	r7, r2, r3
 801f49e:	5cd3      	ldrb	r3, [r2, r3]
 801f4a0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f4a4:	9310      	str	r3, [sp, #64]	; 0x40
 801f4a6:	787b      	ldrb	r3, [r7, #1]
 801f4a8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f4ac:	9314      	str	r3, [sp, #80]	; 0x50
 801f4ae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801f4b0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f4b2:	fb1c f200 	smulbb	r2, ip, r0
 801f4b6:	041f      	lsls	r7, r3, #16
 801f4b8:	10d2      	asrs	r2, r2, #3
 801f4ba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f4be:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801f4c2:	431f      	orrs	r7, r3
 801f4c4:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801f4c8:	9317      	str	r3, [sp, #92]	; 0x5c
 801f4ca:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801f4cc:	041b      	lsls	r3, r3, #16
 801f4ce:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801f4d2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f4d6:	ea43 030b 	orr.w	r3, r3, fp
 801f4da:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801f4dc:	4353      	muls	r3, r2
 801f4de:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f4e2:	fb04 3707 	mla	r7, r4, r7, r3
 801f4e6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f4ea:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801f4ee:	ea43 0b01 	orr.w	fp, r3, r1
 801f4f2:	f1c0 0110 	rsb	r1, r0, #16
 801f4f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f4f8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f4fa:	eba1 0c0c 	sub.w	ip, r1, ip
 801f4fe:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f502:	fb0c 770b 	mla	r7, ip, fp, r7
 801f506:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f50a:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801f50e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f512:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f516:	ea4c 0c0b 	orr.w	ip, ip, fp
 801f51a:	fb02 770c 	mla	r7, r2, ip, r7
 801f51e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801f520:	0d79      	lsrs	r1, r7, #21
 801f522:	097f      	lsrs	r7, r7, #5
 801f524:	8812      	ldrh	r2, [r2, #0]
 801f526:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f52a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801f52e:	430f      	orrs	r7, r1
 801f530:	b2bb      	uxth	r3, r7
 801f532:	1211      	asrs	r1, r2, #8
 801f534:	1218      	asrs	r0, r3, #8
 801f536:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f53a:	fb11 f104 	smulbb	r1, r1, r4
 801f53e:	10d7      	asrs	r7, r2, #3
 801f540:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f544:	00d2      	lsls	r2, r2, #3
 801f546:	fb00 1009 	mla	r0, r0, r9, r1
 801f54a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f54e:	10d9      	asrs	r1, r3, #3
 801f550:	b2d2      	uxtb	r2, r2
 801f552:	00db      	lsls	r3, r3, #3
 801f554:	fb17 f704 	smulbb	r7, r7, r4
 801f558:	fb12 f204 	smulbb	r2, r2, r4
 801f55c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f560:	b2db      	uxtb	r3, r3
 801f562:	b280      	uxth	r0, r0
 801f564:	fb01 7109 	mla	r1, r1, r9, r7
 801f568:	fb03 2309 	mla	r3, r3, r9, r2
 801f56c:	b29b      	uxth	r3, r3
 801f56e:	b289      	uxth	r1, r1
 801f570:	1c42      	adds	r2, r0, #1
 801f572:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f576:	1c4f      	adds	r7, r1, #1
 801f578:	1c5a      	adds	r2, r3, #1
 801f57a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f57e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801f582:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f586:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f58a:	0949      	lsrs	r1, r1, #5
 801f58c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f58e:	4310      	orrs	r0, r2
 801f590:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f594:	4308      	orrs	r0, r1
 801f596:	f823 0b02 	strh.w	r0, [r3], #2
 801f59a:	930e      	str	r3, [sp, #56]	; 0x38
 801f59c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801f59e:	449a      	add	sl, r3
 801f5a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f5a2:	f10e 3eff 	add.w	lr, lr, #4294967295
 801f5a6:	441d      	add	r5, r3
 801f5a8:	e6ed      	b.n	801f386 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801f5aa:	2800      	cmp	r0, #0
 801f5ac:	f43f af7f 	beq.w	801f4ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f5b0:	5cd3      	ldrb	r3, [r2, r3]
 801f5b2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f5b6:	9310      	str	r3, [sp, #64]	; 0x40
 801f5b8:	e779      	b.n	801f4ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801f5ba:	b019      	add	sp, #100	; 0x64
 801f5bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f5c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801f5c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f5c4:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801f5c8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801f5cc:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801f5d0:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801f5d4:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801f5d8:	8808      	ldrh	r0, [r1, #0]
 801f5da:	fb08 470e 	mla	r7, r8, lr, r4
 801f5de:	f1b8 0f00 	cmp.w	r8, #0
 801f5e2:	eb02 0907 	add.w	r9, r2, r7
 801f5e6:	db67      	blt.n	801f6b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801f5e8:	45c2      	cmp	sl, r8
 801f5ea:	dd65      	ble.n	801f6b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801f5ec:	2c00      	cmp	r4, #0
 801f5ee:	db61      	blt.n	801f6b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801f5f0:	45a6      	cmp	lr, r4
 801f5f2:	dd5f      	ble.n	801f6b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801f5f4:	5dd2      	ldrb	r2, [r2, r7]
 801f5f6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801f5fa:	1c62      	adds	r2, r4, #1
 801f5fc:	d45f      	bmi.n	801f6be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f5fe:	4596      	cmp	lr, r2
 801f600:	dd5d      	ble.n	801f6be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f602:	2d00      	cmp	r5, #0
 801f604:	d05b      	beq.n	801f6be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f606:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f60a:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801f60e:	f118 0801 	adds.w	r8, r8, #1
 801f612:	d458      	bmi.n	801f6c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f614:	45c2      	cmp	sl, r8
 801f616:	dd56      	ble.n	801f6c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f618:	2e00      	cmp	r6, #0
 801f61a:	d054      	beq.n	801f6c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f61c:	2c00      	cmp	r4, #0
 801f61e:	db50      	blt.n	801f6c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801f620:	45a6      	cmp	lr, r4
 801f622:	dd4e      	ble.n	801f6c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801f624:	f819 200e 	ldrb.w	r2, [r9, lr]
 801f628:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801f62c:	3401      	adds	r4, #1
 801f62e:	d407      	bmi.n	801f640 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f630:	45a6      	cmp	lr, r4
 801f632:	dd05      	ble.n	801f640 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f634:	b125      	cbz	r5, 801f640 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f636:	44ce      	add	lr, r9
 801f638:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801f63c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801f640:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801f644:	fb15 f406 	smulbb	r4, r5, r6
 801f648:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f64c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801f650:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f654:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801f658:	ea43 0c0c 	orr.w	ip, r3, ip
 801f65c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801f660:	f1c6 0310 	rsb	r3, r6, #16
 801f664:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801f668:	1b5b      	subs	r3, r3, r5
 801f66a:	ea4e 0707 	orr.w	r7, lr, r7
 801f66e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801f672:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801f676:	437d      	muls	r5, r7
 801f678:	fb03 5c0c 	mla	ip, r3, ip, r5
 801f67c:	0403      	lsls	r3, r0, #16
 801f67e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f682:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f686:	4318      	orrs	r0, r3
 801f688:	0413      	lsls	r3, r2, #16
 801f68a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f68e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f692:	4313      	orrs	r3, r2
 801f694:	fb04 c000 	mla	r0, r4, r0, ip
 801f698:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801f69c:	fb06 0003 	mla	r0, r6, r3, r0
 801f6a0:	0d43      	lsrs	r3, r0, #21
 801f6a2:	0940      	lsrs	r0, r0, #5
 801f6a4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f6a8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f6ac:	4318      	orrs	r0, r3
 801f6ae:	8008      	strh	r0, [r1, #0]
 801f6b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f6b4:	4684      	mov	ip, r0
 801f6b6:	e7a0      	b.n	801f5fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801f6b8:	4607      	mov	r7, r0
 801f6ba:	4684      	mov	ip, r0
 801f6bc:	e7a7      	b.n	801f60e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801f6be:	4607      	mov	r7, r0
 801f6c0:	e7a5      	b.n	801f60e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801f6c2:	4602      	mov	r2, r0
 801f6c4:	e7b2      	b.n	801f62c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801f6c6:	4602      	mov	r2, r0
 801f6c8:	e7ba      	b.n	801f640 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801f6ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f6ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f6ce:	b093      	sub	sp, #76	; 0x4c
 801f6d0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801f6d4:	920f      	str	r2, [sp, #60]	; 0x3c
 801f6d6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f6d8:	9108      	str	r1, [sp, #32]
 801f6da:	9306      	str	r3, [sp, #24]
 801f6dc:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801f6e0:	9010      	str	r0, [sp, #64]	; 0x40
 801f6e2:	6850      	ldr	r0, [r2, #4]
 801f6e4:	6812      	ldr	r2, [r2, #0]
 801f6e6:	fb00 1303 	mla	r3, r0, r3, r1
 801f6ea:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f6ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f6f0:	681b      	ldr	r3, [r3, #0]
 801f6f2:	9307      	str	r3, [sp, #28]
 801f6f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f6f6:	685f      	ldr	r7, [r3, #4]
 801f6f8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801f6fc:	3704      	adds	r7, #4
 801f6fe:	9b08      	ldr	r3, [sp, #32]
 801f700:	2b00      	cmp	r3, #0
 801f702:	dc03      	bgt.n	801f70c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f704:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f706:	2b00      	cmp	r3, #0
 801f708:	f340 81b2 	ble.w	801fa70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f70c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f70e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f712:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f716:	1e48      	subs	r0, r1, #1
 801f718:	f102 3cff 	add.w	ip, r2, #4294967295
 801f71c:	9b06      	ldr	r3, [sp, #24]
 801f71e:	2b00      	cmp	r3, #0
 801f720:	f340 80a9 	ble.w	801f876 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801f724:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f728:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f72c:	d406      	bmi.n	801f73c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f72e:	4586      	cmp	lr, r0
 801f730:	da04      	bge.n	801f73c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f732:	2b00      	cmp	r3, #0
 801f734:	db02      	blt.n	801f73c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f736:	4563      	cmp	r3, ip
 801f738:	f2c0 809e 	blt.w	801f878 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f73c:	f11e 0e01 	adds.w	lr, lr, #1
 801f740:	f100 808f 	bmi.w	801f862 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f744:	4571      	cmp	r1, lr
 801f746:	f2c0 808c 	blt.w	801f862 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f74a:	3301      	adds	r3, #1
 801f74c:	f100 8089 	bmi.w	801f862 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f750:	429a      	cmp	r2, r3
 801f752:	f2c0 8086 	blt.w	801f862 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f756:	f8dd b018 	ldr.w	fp, [sp, #24]
 801f75a:	46c8      	mov	r8, r9
 801f75c:	f1bb 0f00 	cmp.w	fp, #0
 801f760:	f340 80a6 	ble.w	801f8b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801f764:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801f766:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f768:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f76c:	689b      	ldr	r3, [r3, #8]
 801f76e:	1422      	asrs	r2, r4, #16
 801f770:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f774:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f778:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f77c:	f100 80e3 	bmi.w	801f946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f780:	f103 3aff 	add.w	sl, r3, #4294967295
 801f784:	4552      	cmp	r2, sl
 801f786:	f280 80de 	bge.w	801f946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f78a:	f1bc 0f00 	cmp.w	ip, #0
 801f78e:	f2c0 80da 	blt.w	801f946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f792:	f10e 3aff 	add.w	sl, lr, #4294967295
 801f796:	45d4      	cmp	ip, sl
 801f798:	f280 80d5 	bge.w	801f946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f79c:	b21b      	sxth	r3, r3
 801f79e:	fb0c 2203 	mla	r2, ip, r3, r2
 801f7a2:	9d07      	ldr	r5, [sp, #28]
 801f7a4:	eb05 0a02 	add.w	sl, r5, r2
 801f7a8:	5caa      	ldrb	r2, [r5, r2]
 801f7aa:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801f7ae:	2800      	cmp	r0, #0
 801f7b0:	f000 80c0 	beq.w	801f934 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801f7b4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f7b8:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801f7bc:	920b      	str	r2, [sp, #44]	; 0x2c
 801f7be:	b151      	cbz	r1, 801f7d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f7c0:	eb0a 0203 	add.w	r2, sl, r3
 801f7c4:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f7c8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f7cc:	9309      	str	r3, [sp, #36]	; 0x24
 801f7ce:	7853      	ldrb	r3, [r2, #1]
 801f7d0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f7d4:	930c      	str	r3, [sp, #48]	; 0x30
 801f7d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f7d8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f7da:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f7de:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f7e2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f7e6:	ea4c 0c03 	orr.w	ip, ip, r3
 801f7ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f7ec:	041b      	lsls	r3, r3, #16
 801f7ee:	fb10 f201 	smulbb	r2, r0, r1
 801f7f2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f7f6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f7fa:	10d2      	asrs	r2, r2, #3
 801f7fc:	432b      	orrs	r3, r5
 801f7fe:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801f802:	4353      	muls	r3, r2
 801f804:	fb0a 330c 	mla	r3, sl, ip, r3
 801f808:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801f80c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f810:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f814:	ea4c 0e0e 	orr.w	lr, ip, lr
 801f818:	f1c1 0c10 	rsb	ip, r1, #16
 801f81c:	ebac 0c00 	sub.w	ip, ip, r0
 801f820:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f824:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801f828:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f82a:	0418      	lsls	r0, r3, #16
 801f82c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f830:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f834:	4318      	orrs	r0, r3
 801f836:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801f83a:	fb02 c200 	mla	r2, r2, r0, ip
 801f83e:	0d53      	lsrs	r3, r2, #21
 801f840:	0952      	lsrs	r2, r2, #5
 801f842:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f846:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f84a:	431a      	orrs	r2, r3
 801f84c:	f8a8 2000 	strh.w	r2, [r8]
 801f850:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f852:	441c      	add	r4, r3
 801f854:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f856:	f108 0802 	add.w	r8, r8, #2
 801f85a:	441e      	add	r6, r3
 801f85c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f860:	e77c      	b.n	801f75c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f862:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f864:	441c      	add	r4, r3
 801f866:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f868:	441e      	add	r6, r3
 801f86a:	9b06      	ldr	r3, [sp, #24]
 801f86c:	3b01      	subs	r3, #1
 801f86e:	9306      	str	r3, [sp, #24]
 801f870:	f109 0902 	add.w	r9, r9, #2
 801f874:	e752      	b.n	801f71c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f876:	d020      	beq.n	801f8ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801f878:	9b06      	ldr	r3, [sp, #24]
 801f87a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f87c:	3b01      	subs	r3, #1
 801f87e:	fb00 4003 	mla	r0, r0, r3, r4
 801f882:	1400      	asrs	r0, r0, #16
 801f884:	f53f af67 	bmi.w	801f756 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f888:	3901      	subs	r1, #1
 801f88a:	4288      	cmp	r0, r1
 801f88c:	f6bf af63 	bge.w	801f756 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f890:	9920      	ldr	r1, [sp, #128]	; 0x80
 801f892:	fb01 6303 	mla	r3, r1, r3, r6
 801f896:	141b      	asrs	r3, r3, #16
 801f898:	f53f af5d 	bmi.w	801f756 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f89c:	3a01      	subs	r2, #1
 801f89e:	4293      	cmp	r3, r2
 801f8a0:	f6bf af59 	bge.w	801f756 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f8a4:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801f8a8:	46ca      	mov	sl, r9
 801f8aa:	f1b8 0f00 	cmp.w	r8, #0
 801f8ae:	dc67      	bgt.n	801f980 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801f8b0:	9b06      	ldr	r3, [sp, #24]
 801f8b2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f8b6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f8ba:	9b08      	ldr	r3, [sp, #32]
 801f8bc:	2b00      	cmp	r3, #0
 801f8be:	f340 80d7 	ble.w	801fa70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f8c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f8c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f8ca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f8ce:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f8d0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f8d4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f8d8:	eeb0 6a62 	vmov.f32	s12, s5
 801f8dc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f8e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f8e4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f8e8:	ee16 4a10 	vmov	r4, s12
 801f8ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f8f0:	eeb0 6a43 	vmov.f32	s12, s6
 801f8f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f8f8:	ee12 2a90 	vmov	r2, s5
 801f8fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f900:	fb92 f3f3 	sdiv	r3, r2, r3
 801f904:	ee13 2a10 	vmov	r2, s6
 801f908:	931f      	str	r3, [sp, #124]	; 0x7c
 801f90a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f90c:	fb92 f3f3 	sdiv	r3, r2, r3
 801f910:	9320      	str	r3, [sp, #128]	; 0x80
 801f912:	9b08      	ldr	r3, [sp, #32]
 801f914:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f916:	3b01      	subs	r3, #1
 801f918:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f91c:	9308      	str	r3, [sp, #32]
 801f91e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f920:	bf08      	it	eq
 801f922:	4613      	moveq	r3, r2
 801f924:	ee16 6a10 	vmov	r6, s12
 801f928:	9306      	str	r3, [sp, #24]
 801f92a:	eeb0 3a67 	vmov.f32	s6, s15
 801f92e:	eef0 2a47 	vmov.f32	s5, s14
 801f932:	e6e4      	b.n	801f6fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f934:	2900      	cmp	r1, #0
 801f936:	f43f af4e 	beq.w	801f7d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f93a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f93e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f942:	9309      	str	r3, [sp, #36]	; 0x24
 801f944:	e747      	b.n	801f7d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f946:	f112 0a01 	adds.w	sl, r2, #1
 801f94a:	d481      	bmi.n	801f850 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f94c:	4553      	cmp	r3, sl
 801f94e:	f6ff af7f 	blt.w	801f850 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f952:	f11c 0a01 	adds.w	sl, ip, #1
 801f956:	f53f af7b 	bmi.w	801f850 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f95a:	45d6      	cmp	lr, sl
 801f95c:	f6ff af78 	blt.w	801f850 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f960:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801f964:	b21b      	sxth	r3, r3
 801f966:	fa0f f28e 	sxth.w	r2, lr
 801f96a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801f96e:	9201      	str	r2, [sp, #4]
 801f970:	9300      	str	r3, [sp, #0]
 801f972:	9a07      	ldr	r2, [sp, #28]
 801f974:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f976:	463b      	mov	r3, r7
 801f978:	4641      	mov	r1, r8
 801f97a:	f7ff fe21 	bl	801f5c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801f97e:	e767      	b.n	801f850 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f980:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f982:	9d07      	ldr	r5, [sp, #28]
 801f984:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f988:	1422      	asrs	r2, r4, #16
 801f98a:	1431      	asrs	r1, r6, #16
 801f98c:	fb03 2101 	mla	r1, r3, r1, r2
 801f990:	9a07      	ldr	r2, [sp, #28]
 801f992:	440a      	add	r2, r1
 801f994:	5c69      	ldrb	r1, [r5, r1]
 801f996:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801f99a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f99e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801f9a2:	f1be 0f00 	cmp.w	lr, #0
 801f9a6:	d05c      	beq.n	801fa62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f9a8:	f892 c001 	ldrb.w	ip, [r2, #1]
 801f9ac:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801f9b0:	950d      	str	r5, [sp, #52]	; 0x34
 801f9b2:	b150      	cbz	r0, 801f9ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f9b4:	eb02 0c03 	add.w	ip, r2, r3
 801f9b8:	5cd3      	ldrb	r3, [r2, r3]
 801f9ba:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f9be:	930a      	str	r3, [sp, #40]	; 0x28
 801f9c0:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801f9c4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f9c8:	930e      	str	r3, [sp, #56]	; 0x38
 801f9ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f9cc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f9ce:	fb1e f200 	smulbb	r2, lr, r0
 801f9d2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f9d6:	10d2      	asrs	r2, r2, #3
 801f9d8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f9dc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f9e0:	ea4c 0c03 	orr.w	ip, ip, r3
 801f9e4:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801f9e8:	9311      	str	r3, [sp, #68]	; 0x44
 801f9ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f9ec:	041b      	lsls	r3, r3, #16
 801f9ee:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801f9f2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f9f6:	ea43 030b 	orr.w	r3, r3, fp
 801f9fa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f9fc:	4353      	muls	r3, r2
 801f9fe:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801fa02:	fb05 3c0c 	mla	ip, r5, ip, r3
 801fa06:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801fa0a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801fa0e:	ea43 0b01 	orr.w	fp, r3, r1
 801fa12:	f1c0 0110 	rsb	r1, r0, #16
 801fa16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fa18:	eba1 0e0e 	sub.w	lr, r1, lr
 801fa1c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801fa20:	fb0e cc0b 	mla	ip, lr, fp, ip
 801fa24:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801fa28:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801fa2c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801fa30:	ea4b 0e0e 	orr.w	lr, fp, lr
 801fa34:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801fa38:	fb02 cc0e 	mla	ip, r2, lr, ip
 801fa3c:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801fa40:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801fa44:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fa48:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801fa4c:	ea43 0c0c 	orr.w	ip, r3, ip
 801fa50:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fa52:	f82a cb02 	strh.w	ip, [sl], #2
 801fa56:	441c      	add	r4, r3
 801fa58:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fa5a:	f108 38ff 	add.w	r8, r8, #4294967295
 801fa5e:	441e      	add	r6, r3
 801fa60:	e723      	b.n	801f8aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801fa62:	2800      	cmp	r0, #0
 801fa64:	d0b1      	beq.n	801f9ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801fa66:	5cd3      	ldrb	r3, [r2, r3]
 801fa68:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801fa6c:	930a      	str	r3, [sp, #40]	; 0x28
 801fa6e:	e7ac      	b.n	801f9ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801fa70:	b013      	add	sp, #76	; 0x4c
 801fa72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fa76 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801fa76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa7a:	880d      	ldrh	r5, [r1, #0]
 801fa7c:	b087      	sub	sp, #28
 801fa7e:	10ef      	asrs	r7, r5, #3
 801fa80:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801fa84:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801fa88:	00ed      	lsls	r5, r5, #3
 801fa8a:	9701      	str	r7, [sp, #4]
 801fa8c:	b2ed      	uxtb	r5, r5
 801fa8e:	9502      	str	r5, [sp, #8]
 801fa90:	9d01      	ldr	r5, [sp, #4]
 801fa92:	9103      	str	r1, [sp, #12]
 801fa94:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801fa98:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801fa9c:	9902      	ldr	r1, [sp, #8]
 801fa9e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801faa2:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801faa6:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801faaa:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801faae:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801fab2:	022d      	lsls	r5, r5, #8
 801fab4:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801fab8:	fb06 0709 	mla	r7, r6, r9, r0
 801fabc:	430d      	orrs	r5, r1
 801fabe:	2e00      	cmp	r6, #0
 801fac0:	eb02 0c07 	add.w	ip, r2, r7
 801fac4:	9505      	str	r5, [sp, #20]
 801fac6:	f2c0 80b6 	blt.w	801fc36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801faca:	45b3      	cmp	fp, r6
 801facc:	f340 80b3 	ble.w	801fc36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801fad0:	2800      	cmp	r0, #0
 801fad2:	f2c0 80ae 	blt.w	801fc32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801fad6:	4581      	cmp	r9, r0
 801fad8:	f340 80ab 	ble.w	801fc32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801fadc:	5dd7      	ldrb	r7, [r2, r7]
 801fade:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801fae2:	441f      	add	r7, r3
 801fae4:	1c42      	adds	r2, r0, #1
 801fae6:	f100 80a9 	bmi.w	801fc3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801faea:	4591      	cmp	r9, r2
 801faec:	f340 80a6 	ble.w	801fc3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801faf0:	2c00      	cmp	r4, #0
 801faf2:	f000 80a3 	beq.w	801fc3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801faf6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801fafa:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801fafe:	441d      	add	r5, r3
 801fb00:	3601      	adds	r6, #1
 801fb02:	f100 809f 	bmi.w	801fc44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801fb06:	45b3      	cmp	fp, r6
 801fb08:	f340 809c 	ble.w	801fc44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801fb0c:	f1be 0f00 	cmp.w	lr, #0
 801fb10:	f000 8098 	beq.w	801fc44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801fb14:	2800      	cmp	r0, #0
 801fb16:	f2c0 8093 	blt.w	801fc40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801fb1a:	4581      	cmp	r9, r0
 801fb1c:	f340 8090 	ble.w	801fc40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801fb20:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801fb24:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fb28:	441e      	add	r6, r3
 801fb2a:	3001      	adds	r0, #1
 801fb2c:	f100 808d 	bmi.w	801fc4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801fb30:	4581      	cmp	r9, r0
 801fb32:	f340 808a 	ble.w	801fc4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801fb36:	2c00      	cmp	r4, #0
 801fb38:	f000 8087 	beq.w	801fc4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801fb3c:	44e1      	add	r9, ip
 801fb3e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801fb42:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fb46:	4413      	add	r3, r2
 801fb48:	b2a4      	uxth	r4, r4
 801fb4a:	fa1f fe8e 	uxth.w	lr, lr
 801fb4e:	fb04 fb0e 	mul.w	fp, r4, lr
 801fb52:	0124      	lsls	r4, r4, #4
 801fb54:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801fb58:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801fb5c:	eba4 040b 	sub.w	r4, r4, fp
 801fb60:	fa1f f08e 	uxth.w	r0, lr
 801fb64:	b2a2      	uxth	r2, r4
 801fb66:	78ac      	ldrb	r4, [r5, #2]
 801fb68:	f897 c002 	ldrb.w	ip, [r7, #2]
 801fb6c:	9901      	ldr	r1, [sp, #4]
 801fb6e:	eba9 0900 	sub.w	r9, r9, r0
 801fb72:	fa1f f989 	uxth.w	r9, r9
 801fb76:	4354      	muls	r4, r2
 801fb78:	fb09 440c 	mla	r4, r9, ip, r4
 801fb7c:	f896 c002 	ldrb.w	ip, [r6, #2]
 801fb80:	fb00 440c 	mla	r4, r0, ip, r4
 801fb84:	f893 c002 	ldrb.w	ip, [r3, #2]
 801fb88:	fa1f fe88 	uxth.w	lr, r8
 801fb8c:	ea6f 0808 	mvn.w	r8, r8
 801fb90:	fa5f f888 	uxtb.w	r8, r8
 801fb94:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801fb98:	fb1a fa08 	smulbb	sl, sl, r8
 801fb9c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801fba0:	fb0c ac0e 	mla	ip, ip, lr, sl
 801fba4:	f895 a001 	ldrb.w	sl, [r5, #1]
 801fba8:	787c      	ldrb	r4, [r7, #1]
 801fbaa:	782d      	ldrb	r5, [r5, #0]
 801fbac:	783f      	ldrb	r7, [r7, #0]
 801fbae:	fb02 fa0a 	mul.w	sl, r2, sl
 801fbb2:	fb09 aa04 	mla	sl, r9, r4, sl
 801fbb6:	7874      	ldrb	r4, [r6, #1]
 801fbb8:	436a      	muls	r2, r5
 801fbba:	7835      	ldrb	r5, [r6, #0]
 801fbbc:	fb00 aa04 	mla	sl, r0, r4, sl
 801fbc0:	fb09 2207 	mla	r2, r9, r7, r2
 801fbc4:	785c      	ldrb	r4, [r3, #1]
 801fbc6:	781b      	ldrb	r3, [r3, #0]
 801fbc8:	fb00 2005 	mla	r0, r0, r5, r2
 801fbcc:	fb0b a404 	mla	r4, fp, r4, sl
 801fbd0:	fb0b 0b03 	mla	fp, fp, r3, r0
 801fbd4:	9b02      	ldr	r3, [sp, #8]
 801fbd6:	fb11 fa08 	smulbb	sl, r1, r8
 801fbda:	fa1f fc8c 	uxth.w	ip, ip
 801fbde:	fb13 f808 	smulbb	r8, r3, r8
 801fbe2:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801fbe6:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801fbea:	fb04 a40e 	mla	r4, r4, lr, sl
 801fbee:	f10c 0301 	add.w	r3, ip, #1
 801fbf2:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801fbf6:	fa1f fe8e 	uxth.w	lr, lr
 801fbfa:	b2a4      	uxth	r4, r4
 801fbfc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801fc00:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801fc04:	f104 0a01 	add.w	sl, r4, #1
 801fc08:	f10e 0c01 	add.w	ip, lr, #1
 801fc0c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801fc10:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801fc14:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801fc18:	0964      	lsrs	r4, r4, #5
 801fc1a:	ea4c 0c03 	orr.w	ip, ip, r3
 801fc1e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801fc22:	9b03      	ldr	r3, [sp, #12]
 801fc24:	ea4c 0c04 	orr.w	ip, ip, r4
 801fc28:	f8a3 c000 	strh.w	ip, [r3]
 801fc2c:	b007      	add	sp, #28
 801fc2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fc32:	af05      	add	r7, sp, #20
 801fc34:	e756      	b.n	801fae4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801fc36:	ad05      	add	r5, sp, #20
 801fc38:	462f      	mov	r7, r5
 801fc3a:	e761      	b.n	801fb00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801fc3c:	ad05      	add	r5, sp, #20
 801fc3e:	e75f      	b.n	801fb00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801fc40:	ae05      	add	r6, sp, #20
 801fc42:	e772      	b.n	801fb2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801fc44:	ab05      	add	r3, sp, #20
 801fc46:	461e      	mov	r6, r3
 801fc48:	e77e      	b.n	801fb48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801fc4a:	ab05      	add	r3, sp, #20
 801fc4c:	e77c      	b.n	801fb48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801fc4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fc4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc52:	b095      	sub	sp, #84	; 0x54
 801fc54:	9212      	str	r2, [sp, #72]	; 0x48
 801fc56:	9309      	str	r3, [sp, #36]	; 0x24
 801fc58:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801fc5a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801fc5e:	930f      	str	r3, [sp, #60]	; 0x3c
 801fc60:	910e      	str	r1, [sp, #56]	; 0x38
 801fc62:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801fc66:	9013      	str	r0, [sp, #76]	; 0x4c
 801fc68:	6850      	ldr	r0, [r2, #4]
 801fc6a:	6812      	ldr	r2, [r2, #0]
 801fc6c:	fb00 1303 	mla	r3, r0, r3, r1
 801fc70:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fc74:	930a      	str	r3, [sp, #40]	; 0x28
 801fc76:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fc78:	681b      	ldr	r3, [r3, #0]
 801fc7a:	930d      	str	r3, [sp, #52]	; 0x34
 801fc7c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fc7e:	685c      	ldr	r4, [r3, #4]
 801fc80:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fc82:	43db      	mvns	r3, r3
 801fc84:	b2db      	uxtb	r3, r3
 801fc86:	3404      	adds	r4, #4
 801fc88:	930b      	str	r3, [sp, #44]	; 0x2c
 801fc8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fc8c:	2b00      	cmp	r3, #0
 801fc8e:	dc03      	bgt.n	801fc98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801fc90:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801fc92:	2b00      	cmp	r3, #0
 801fc94:	f340 8255 	ble.w	8020142 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801fc98:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fc9a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fc9e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fca2:	1e48      	subs	r0, r1, #1
 801fca4:	1e55      	subs	r5, r2, #1
 801fca6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fca8:	2b00      	cmp	r3, #0
 801fcaa:	f340 80f9 	ble.w	801fea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801fcae:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801fcb0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fcb2:	1436      	asrs	r6, r6, #16
 801fcb4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801fcb8:	d406      	bmi.n	801fcc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fcba:	4286      	cmp	r6, r0
 801fcbc:	da04      	bge.n	801fcc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fcbe:	2b00      	cmp	r3, #0
 801fcc0:	db02      	blt.n	801fcc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fcc2:	42ab      	cmp	r3, r5
 801fcc4:	f2c0 80ed 	blt.w	801fea2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801fcc8:	3601      	adds	r6, #1
 801fcca:	f100 80da 	bmi.w	801fe82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fcce:	42b1      	cmp	r1, r6
 801fcd0:	f2c0 80d7 	blt.w	801fe82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fcd4:	3301      	adds	r3, #1
 801fcd6:	f100 80d4 	bmi.w	801fe82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fcda:	429a      	cmp	r2, r3
 801fcdc:	f2c0 80d1 	blt.w	801fe82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fce0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fce2:	9311      	str	r3, [sp, #68]	; 0x44
 801fce4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fce6:	930c      	str	r3, [sp, #48]	; 0x30
 801fce8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fcea:	2b00      	cmp	r3, #0
 801fcec:	f340 80fa 	ble.w	801fee4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801fcf0:	9826      	ldr	r0, [sp, #152]	; 0x98
 801fcf2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fcf4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801fcf6:	68c6      	ldr	r6, [r0, #12]
 801fcf8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801fcfa:	141d      	asrs	r5, r3, #16
 801fcfc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801fd00:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fd02:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801fd04:	1400      	asrs	r0, r0, #16
 801fd06:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801fd0a:	6892      	ldr	r2, [r2, #8]
 801fd0c:	f100 813e 	bmi.w	801ff8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fd10:	1e57      	subs	r7, r2, #1
 801fd12:	42b8      	cmp	r0, r7
 801fd14:	f280 813a 	bge.w	801ff8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fd18:	2d00      	cmp	r5, #0
 801fd1a:	f2c0 8137 	blt.w	801ff8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fd1e:	1e77      	subs	r7, r6, #1
 801fd20:	42bd      	cmp	r5, r7
 801fd22:	f280 8133 	bge.w	801ff8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801fd26:	b212      	sxth	r2, r2
 801fd28:	fb05 0002 	mla	r0, r5, r2, r0
 801fd2c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801fd2e:	f815 a000 	ldrb.w	sl, [r5, r0]
 801fd32:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801fd36:	182e      	adds	r6, r5, r0
 801fd38:	eb04 050a 	add.w	r5, r4, sl
 801fd3c:	2b00      	cmp	r3, #0
 801fd3e:	f000 8117 	beq.w	801ff70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801fd42:	f896 c001 	ldrb.w	ip, [r6, #1]
 801fd46:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801fd4a:	44a4      	add	ip, r4
 801fd4c:	2900      	cmp	r1, #0
 801fd4e:	f000 8117 	beq.w	801ff80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801fd52:	18b0      	adds	r0, r6, r2
 801fd54:	5cb2      	ldrb	r2, [r6, r2]
 801fd56:	7840      	ldrb	r0, [r0, #1]
 801fd58:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fd5c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fd60:	4422      	add	r2, r4
 801fd62:	4420      	add	r0, r4
 801fd64:	b29b      	uxth	r3, r3
 801fd66:	b289      	uxth	r1, r1
 801fd68:	fb03 f901 	mul.w	r9, r3, r1
 801fd6c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fd70:	011b      	lsls	r3, r3, #4
 801fd72:	b289      	uxth	r1, r1
 801fd74:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801fd78:	f895 b002 	ldrb.w	fp, [r5, #2]
 801fd7c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801fd7e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801fd82:	f8b6 e000 	ldrh.w	lr, [r6]
 801fd86:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801fd8a:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801fd8e:	eba3 0309 	sub.w	r3, r3, r9
 801fd92:	b29b      	uxth	r3, r3
 801fd94:	eba8 0801 	sub.w	r8, r8, r1
 801fd98:	fa1f f888 	uxth.w	r8, r8
 801fd9c:	435f      	muls	r7, r3
 801fd9e:	fb08 770b 	mla	r7, r8, fp, r7
 801fda2:	f892 b002 	ldrb.w	fp, [r2, #2]
 801fda6:	9310      	str	r3, [sp, #64]	; 0x40
 801fda8:	fb01 770b 	mla	r7, r1, fp, r7
 801fdac:	f890 b002 	ldrb.w	fp, [r0, #2]
 801fdb0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fdb2:	fb09 770b 	mla	r7, r9, fp, r7
 801fdb6:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801fdba:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801fdbe:	fb1b fb03 	smulbb	fp, fp, r3
 801fdc2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801fdc6:	fb07 b706 	mla	r7, r7, r6, fp
 801fdca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fdcc:	f895 b001 	ldrb.w	fp, [r5, #1]
 801fdd0:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801fdd4:	f89c c000 	ldrb.w	ip, [ip]
 801fdd8:	435d      	muls	r5, r3
 801fdda:	fb08 550b 	mla	r5, r8, fp, r5
 801fdde:	f892 b001 	ldrb.w	fp, [r2, #1]
 801fde2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fde4:	fb01 550b 	mla	r5, r1, fp, r5
 801fde8:	f890 b001 	ldrb.w	fp, [r0, #1]
 801fdec:	fb09 550b 	mla	r5, r9, fp, r5
 801fdf0:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801fdf4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801fdf8:	fb1b fb03 	smulbb	fp, fp, r3
 801fdfc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fdfe:	fb03 f30c 	mul.w	r3, r3, ip
 801fe02:	f892 c000 	ldrb.w	ip, [r2]
 801fe06:	fb08 330a 	mla	r3, r8, sl, r3
 801fe0a:	fb01 330c 	mla	r3, r1, ip, r3
 801fe0e:	f890 c000 	ldrb.w	ip, [r0]
 801fe12:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fe16:	fb09 3c0c 	mla	ip, r9, ip, r3
 801fe1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fe1c:	fa5f fe8e 	uxtb.w	lr, lr
 801fe20:	b2bf      	uxth	r7, r7
 801fe22:	fb1e fe03 	smulbb	lr, lr, r3
 801fe26:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801fe2a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801fe2e:	fb05 b506 	mla	r5, r5, r6, fp
 801fe32:	1c7b      	adds	r3, r7, #1
 801fe34:	fb0c e606 	mla	r6, ip, r6, lr
 801fe38:	b2ad      	uxth	r5, r5
 801fe3a:	b2b6      	uxth	r6, r6
 801fe3c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801fe40:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801fe44:	f105 0b01 	add.w	fp, r5, #1
 801fe48:	1c77      	adds	r7, r6, #1
 801fe4a:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801fe4e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801fe52:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fe56:	096d      	lsrs	r5, r5, #5
 801fe58:	431f      	orrs	r7, r3
 801fe5a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fe5e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fe60:	433d      	orrs	r5, r7
 801fe62:	801d      	strh	r5, [r3, #0]
 801fe64:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fe66:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801fe68:	3302      	adds	r3, #2
 801fe6a:	930c      	str	r3, [sp, #48]	; 0x30
 801fe6c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fe6e:	4413      	add	r3, r2
 801fe70:	931f      	str	r3, [sp, #124]	; 0x7c
 801fe72:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801fe74:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fe76:	4413      	add	r3, r2
 801fe78:	9320      	str	r3, [sp, #128]	; 0x80
 801fe7a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fe7c:	3b01      	subs	r3, #1
 801fe7e:	9311      	str	r3, [sp, #68]	; 0x44
 801fe80:	e732      	b.n	801fce8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801fe82:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fe84:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801fe86:	4433      	add	r3, r6
 801fe88:	931f      	str	r3, [sp, #124]	; 0x7c
 801fe8a:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801fe8c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fe8e:	4433      	add	r3, r6
 801fe90:	9320      	str	r3, [sp, #128]	; 0x80
 801fe92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fe94:	3b01      	subs	r3, #1
 801fe96:	9309      	str	r3, [sp, #36]	; 0x24
 801fe98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fe9a:	3302      	adds	r3, #2
 801fe9c:	930a      	str	r3, [sp, #40]	; 0x28
 801fe9e:	e702      	b.n	801fca6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801fea0:	d027      	beq.n	801fef2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801fea2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fea4:	9821      	ldr	r0, [sp, #132]	; 0x84
 801fea6:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801fea8:	3b01      	subs	r3, #1
 801feaa:	fb00 5003 	mla	r0, r0, r3, r5
 801feae:	1400      	asrs	r0, r0, #16
 801feb0:	f53f af16 	bmi.w	801fce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801feb4:	3901      	subs	r1, #1
 801feb6:	4288      	cmp	r0, r1
 801feb8:	f6bf af12 	bge.w	801fce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801febc:	9922      	ldr	r1, [sp, #136]	; 0x88
 801febe:	9820      	ldr	r0, [sp, #128]	; 0x80
 801fec0:	fb01 0303 	mla	r3, r1, r3, r0
 801fec4:	141b      	asrs	r3, r3, #16
 801fec6:	f53f af0b 	bmi.w	801fce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801feca:	3a01      	subs	r2, #1
 801fecc:	4293      	cmp	r3, r2
 801fece:	f6bf af07 	bge.w	801fce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fed2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fed4:	9311      	str	r3, [sp, #68]	; 0x44
 801fed6:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801feda:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fedc:	930c      	str	r3, [sp, #48]	; 0x30
 801fede:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fee0:	2b00      	cmp	r3, #0
 801fee2:	dc70      	bgt.n	801ffc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801fee4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fee6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fee8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801feec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fef0:	930a      	str	r3, [sp, #40]	; 0x28
 801fef2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fef4:	2b00      	cmp	r3, #0
 801fef6:	f340 8124 	ble.w	8020142 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801fefa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fefe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ff02:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ff06:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ff08:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ff0c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ff10:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ff14:	eef0 6a62 	vmov.f32	s13, s5
 801ff18:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ff1c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff20:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ff24:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801ff28:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ff2c:	eef0 6a43 	vmov.f32	s13, s6
 801ff30:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ff34:	ee12 2a90 	vmov	r2, s5
 801ff38:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ff3c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff40:	ee13 2a10 	vmov	r2, s6
 801ff44:	9321      	str	r3, [sp, #132]	; 0x84
 801ff46:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ff48:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff4c:	9322      	str	r3, [sp, #136]	; 0x88
 801ff4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ff50:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ff52:	3b01      	subs	r3, #1
 801ff54:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff58:	930e      	str	r3, [sp, #56]	; 0x38
 801ff5a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ff5c:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801ff60:	bf08      	it	eq
 801ff62:	4613      	moveq	r3, r2
 801ff64:	9309      	str	r3, [sp, #36]	; 0x24
 801ff66:	eeb0 3a67 	vmov.f32	s6, s15
 801ff6a:	eef0 2a47 	vmov.f32	s5, s14
 801ff6e:	e68c      	b.n	801fc8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ff70:	b149      	cbz	r1, 801ff86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801ff72:	5cb2      	ldrb	r2, [r6, r2]
 801ff74:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ff78:	4422      	add	r2, r4
 801ff7a:	4628      	mov	r0, r5
 801ff7c:	46ac      	mov	ip, r5
 801ff7e:	e6f1      	b.n	801fd64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ff80:	4628      	mov	r0, r5
 801ff82:	462a      	mov	r2, r5
 801ff84:	e6ee      	b.n	801fd64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ff86:	4628      	mov	r0, r5
 801ff88:	462a      	mov	r2, r5
 801ff8a:	e7f7      	b.n	801ff7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801ff8c:	1c47      	adds	r7, r0, #1
 801ff8e:	f53f af69 	bmi.w	801fe64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ff92:	42ba      	cmp	r2, r7
 801ff94:	f6ff af66 	blt.w	801fe64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ff98:	1c6f      	adds	r7, r5, #1
 801ff9a:	f53f af63 	bmi.w	801fe64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ff9e:	42be      	cmp	r6, r7
 801ffa0:	f6ff af60 	blt.w	801fe64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ffa4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801ffa6:	9002      	str	r0, [sp, #8]
 801ffa8:	b236      	sxth	r6, r6
 801ffaa:	b212      	sxth	r2, r2
 801ffac:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801ffb0:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801ffb4:	9200      	str	r2, [sp, #0]
 801ffb6:	9601      	str	r6, [sp, #4]
 801ffb8:	4623      	mov	r3, r4
 801ffba:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801ffbe:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ffc0:	f7ff fd59 	bl	801fa76 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801ffc4:	e74e      	b.n	801fe64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801ffc6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801ffc8:	9820      	ldr	r0, [sp, #128]	; 0x80
 801ffca:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801ffcc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ffce:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801ffd2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801ffd4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801ffd8:	142d      	asrs	r5, r5, #16
 801ffda:	1400      	asrs	r0, r0, #16
 801ffdc:	fb02 5000 	mla	r0, r2, r0, r5
 801ffe0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ffe2:	f815 9000 	ldrb.w	r9, [r5, r0]
 801ffe6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801ffea:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801ffee:	182e      	adds	r6, r5, r0
 801fff0:	eb04 0509 	add.w	r5, r4, r9
 801fff4:	2b00      	cmp	r3, #0
 801fff6:	f000 8096 	beq.w	8020126 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801fffa:	7877      	ldrb	r7, [r6, #1]
 801fffc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020000:	4427      	add	r7, r4
 8020002:	2900      	cmp	r1, #0
 8020004:	f000 8097 	beq.w	8020136 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8020008:	18b0      	adds	r0, r6, r2
 802000a:	5cb2      	ldrb	r2, [r6, r2]
 802000c:	7840      	ldrb	r0, [r0, #1]
 802000e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020012:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020016:	4422      	add	r2, r4
 8020018:	4420      	add	r0, r4
 802001a:	b29b      	uxth	r3, r3
 802001c:	b289      	uxth	r1, r1
 802001e:	fb03 f801 	mul.w	r8, r3, r1
 8020022:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8020024:	f895 b002 	ldrb.w	fp, [r5, #2]
 8020028:	f8b6 c000 	ldrh.w	ip, [r6]
 802002c:	78be      	ldrb	r6, [r7, #2]
 802002e:	f814 9009 	ldrb.w	r9, [r4, r9]
 8020032:	011b      	lsls	r3, r3, #4
 8020034:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8020038:	b289      	uxth	r1, r1
 802003a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802003e:	eba3 0308 	sub.w	r3, r3, r8
 8020042:	b29b      	uxth	r3, r3
 8020044:	ebae 0e01 	sub.w	lr, lr, r1
 8020048:	fa1f fe8e 	uxth.w	lr, lr
 802004c:	435e      	muls	r6, r3
 802004e:	fb0e 660b 	mla	r6, lr, fp, r6
 8020052:	f892 b002 	ldrb.w	fp, [r2, #2]
 8020056:	9310      	str	r3, [sp, #64]	; 0x40
 8020058:	fb01 660b 	mla	r6, r1, fp, r6
 802005c:	f890 b002 	ldrb.w	fp, [r0, #2]
 8020060:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020062:	fb08 660b 	mla	r6, r8, fp, r6
 8020066:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 802006a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802006e:	fb1b fb03 	smulbb	fp, fp, r3
 8020072:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020076:	fb06 b60a 	mla	r6, r6, sl, fp
 802007a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802007c:	f895 b001 	ldrb.w	fp, [r5, #1]
 8020080:	787d      	ldrb	r5, [r7, #1]
 8020082:	783f      	ldrb	r7, [r7, #0]
 8020084:	435d      	muls	r5, r3
 8020086:	fb0e 550b 	mla	r5, lr, fp, r5
 802008a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802008e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020090:	fb01 550b 	mla	r5, r1, fp, r5
 8020094:	f890 b001 	ldrb.w	fp, [r0, #1]
 8020098:	fb08 550b 	mla	r5, r8, fp, r5
 802009c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80200a0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80200a4:	fb1b fb03 	smulbb	fp, fp, r3
 80200a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80200aa:	437b      	muls	r3, r7
 80200ac:	7817      	ldrb	r7, [r2, #0]
 80200ae:	fb0e 3309 	mla	r3, lr, r9, r3
 80200b2:	fb01 3307 	mla	r3, r1, r7, r3
 80200b6:	7807      	ldrb	r7, [r0, #0]
 80200b8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80200bc:	fb08 3707 	mla	r7, r8, r7, r3
 80200c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80200c2:	fa5f fc8c 	uxtb.w	ip, ip
 80200c6:	fb1c fc03 	smulbb	ip, ip, r3
 80200ca:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80200ce:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80200d2:	fb05 b50a 	mla	r5, r5, sl, fp
 80200d6:	fb07 c70a 	mla	r7, r7, sl, ip
 80200da:	b2b6      	uxth	r6, r6
 80200dc:	b2ad      	uxth	r5, r5
 80200de:	b2bf      	uxth	r7, r7
 80200e0:	1c73      	adds	r3, r6, #1
 80200e2:	1c7a      	adds	r2, r7, #1
 80200e4:	f105 0b01 	add.w	fp, r5, #1
 80200e8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80200ec:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80200f0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80200f4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80200f8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80200fc:	096d      	lsrs	r5, r5, #5
 80200fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020100:	4316      	orrs	r6, r2
 8020102:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020106:	432e      	orrs	r6, r5
 8020108:	f823 6b02 	strh.w	r6, [r3], #2
 802010c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802010e:	930c      	str	r3, [sp, #48]	; 0x30
 8020110:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020112:	4413      	add	r3, r2
 8020114:	931f      	str	r3, [sp, #124]	; 0x7c
 8020116:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020118:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802011a:	4413      	add	r3, r2
 802011c:	9320      	str	r3, [sp, #128]	; 0x80
 802011e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020120:	3b01      	subs	r3, #1
 8020122:	9311      	str	r3, [sp, #68]	; 0x44
 8020124:	e6db      	b.n	801fede <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8020126:	b149      	cbz	r1, 802013c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8020128:	5cb2      	ldrb	r2, [r6, r2]
 802012a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802012e:	4422      	add	r2, r4
 8020130:	4628      	mov	r0, r5
 8020132:	462f      	mov	r7, r5
 8020134:	e771      	b.n	802001a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8020136:	4628      	mov	r0, r5
 8020138:	462a      	mov	r2, r5
 802013a:	e76e      	b.n	802001a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 802013c:	4628      	mov	r0, r5
 802013e:	462a      	mov	r2, r5
 8020140:	e7f7      	b.n	8020132 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8020142:	b015      	add	sp, #84	; 0x54
 8020144:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020148 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8020148:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802014c:	880f      	ldrh	r7, [r1, #0]
 802014e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8020152:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8020156:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 802015a:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802015e:	023c      	lsls	r4, r7, #8
 8020160:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8020164:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8020168:	017c      	lsls	r4, r7, #5
 802016a:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 802016e:	00ff      	lsls	r7, r7, #3
 8020170:	ea4b 0404 	orr.w	r4, fp, r4
 8020174:	b2ff      	uxtb	r7, r7
 8020176:	fb05 ca0e 	mla	sl, r5, lr, ip
 802017a:	4327      	orrs	r7, r4
 802017c:	2d00      	cmp	r5, #0
 802017e:	eb02 080a 	add.w	r8, r2, sl
 8020182:	9701      	str	r7, [sp, #4]
 8020184:	db7e      	blt.n	8020284 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8020186:	45a9      	cmp	r9, r5
 8020188:	dd7c      	ble.n	8020284 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 802018a:	f1bc 0f00 	cmp.w	ip, #0
 802018e:	db77      	blt.n	8020280 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020190:	45e6      	cmp	lr, ip
 8020192:	dd75      	ble.n	8020280 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020194:	f812 700a 	ldrb.w	r7, [r2, sl]
 8020198:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802019c:	441f      	add	r7, r3
 802019e:	f11c 0201 	adds.w	r2, ip, #1
 80201a2:	d472      	bmi.n	802028a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80201a4:	4596      	cmp	lr, r2
 80201a6:	dd70      	ble.n	802028a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80201a8:	2800      	cmp	r0, #0
 80201aa:	d06e      	beq.n	802028a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80201ac:	f898 4001 	ldrb.w	r4, [r8, #1]
 80201b0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80201b4:	441c      	add	r4, r3
 80201b6:	3501      	adds	r5, #1
 80201b8:	d46b      	bmi.n	8020292 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80201ba:	45a9      	cmp	r9, r5
 80201bc:	dd69      	ble.n	8020292 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80201be:	2e00      	cmp	r6, #0
 80201c0:	d067      	beq.n	8020292 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80201c2:	f1bc 0f00 	cmp.w	ip, #0
 80201c6:	db62      	blt.n	802028e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80201c8:	45e6      	cmp	lr, ip
 80201ca:	dd60      	ble.n	802028e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80201cc:	f818 500e 	ldrb.w	r5, [r8, lr]
 80201d0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80201d4:	441d      	add	r5, r3
 80201d6:	f11c 0201 	adds.w	r2, ip, #1
 80201da:	d45d      	bmi.n	8020298 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80201dc:	4596      	cmp	lr, r2
 80201de:	dd5b      	ble.n	8020298 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80201e0:	2800      	cmp	r0, #0
 80201e2:	d059      	beq.n	8020298 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80201e4:	44c6      	add	lr, r8
 80201e6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80201ea:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80201ee:	4413      	add	r3, r2
 80201f0:	b280      	uxth	r0, r0
 80201f2:	b2b2      	uxth	r2, r6
 80201f4:	fb00 f602 	mul.w	r6, r0, r2
 80201f8:	0100      	lsls	r0, r0, #4
 80201fa:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 80201fe:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8020202:	1b80      	subs	r0, r0, r6
 8020204:	fa1f fc82 	uxth.w	ip, r2
 8020208:	b282      	uxth	r2, r0
 802020a:	78a0      	ldrb	r0, [r4, #2]
 802020c:	f897 e002 	ldrb.w	lr, [r7, #2]
 8020210:	f897 9000 	ldrb.w	r9, [r7]
 8020214:	787f      	ldrb	r7, [r7, #1]
 8020216:	eba8 080c 	sub.w	r8, r8, ip
 802021a:	fa1f f888 	uxth.w	r8, r8
 802021e:	4350      	muls	r0, r2
 8020220:	fb08 0e0e 	mla	lr, r8, lr, r0
 8020224:	78a8      	ldrb	r0, [r5, #2]
 8020226:	fb0c e000 	mla	r0, ip, r0, lr
 802022a:	f893 e002 	ldrb.w	lr, [r3, #2]
 802022e:	fb06 0e0e 	mla	lr, r6, lr, r0
 8020232:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8020236:	f894 e000 	ldrb.w	lr, [r4]
 802023a:	fb02 fe0e 	mul.w	lr, r2, lr
 802023e:	fb08 e909 	mla	r9, r8, r9, lr
 8020242:	f895 e000 	ldrb.w	lr, [r5]
 8020246:	fb0c 990e 	mla	r9, ip, lr, r9
 802024a:	f893 e000 	ldrb.w	lr, [r3]
 802024e:	785b      	ldrb	r3, [r3, #1]
 8020250:	fb06 9e0e 	mla	lr, r6, lr, r9
 8020254:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020258:	ea4e 0e00 	orr.w	lr, lr, r0
 802025c:	7860      	ldrb	r0, [r4, #1]
 802025e:	4350      	muls	r0, r2
 8020260:	786a      	ldrb	r2, [r5, #1]
 8020262:	fb08 0007 	mla	r0, r8, r7, r0
 8020266:	fb0c 0202 	mla	r2, ip, r2, r0
 802026a:	fb06 2303 	mla	r3, r6, r3, r2
 802026e:	095b      	lsrs	r3, r3, #5
 8020270:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020274:	ea4e 0303 	orr.w	r3, lr, r3
 8020278:	800b      	strh	r3, [r1, #0]
 802027a:	b003      	add	sp, #12
 802027c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020280:	af01      	add	r7, sp, #4
 8020282:	e78c      	b.n	802019e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8020284:	ac01      	add	r4, sp, #4
 8020286:	4627      	mov	r7, r4
 8020288:	e795      	b.n	80201b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802028a:	ac01      	add	r4, sp, #4
 802028c:	e793      	b.n	80201b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802028e:	ad01      	add	r5, sp, #4
 8020290:	e7a1      	b.n	80201d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8020292:	ab01      	add	r3, sp, #4
 8020294:	461d      	mov	r5, r3
 8020296:	e7ab      	b.n	80201f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8020298:	ab01      	add	r3, sp, #4
 802029a:	e7a9      	b.n	80201f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0802029c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802029c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80202a0:	b08f      	sub	sp, #60	; 0x3c
 80202a2:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 80202a6:	920c      	str	r2, [sp, #48]	; 0x30
 80202a8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80202aa:	910a      	str	r1, [sp, #40]	; 0x28
 80202ac:	9306      	str	r3, [sp, #24]
 80202ae:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 80202b2:	900d      	str	r0, [sp, #52]	; 0x34
 80202b4:	6850      	ldr	r0, [r2, #4]
 80202b6:	6812      	ldr	r2, [r2, #0]
 80202b8:	fb00 1303 	mla	r3, r0, r3, r1
 80202bc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80202c0:	9307      	str	r3, [sp, #28]
 80202c2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80202c4:	681b      	ldr	r3, [r3, #0]
 80202c6:	9308      	str	r3, [sp, #32]
 80202c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80202ca:	685c      	ldr	r4, [r3, #4]
 80202cc:	3404      	adds	r4, #4
 80202ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80202d0:	2b00      	cmp	r3, #0
 80202d2:	dc03      	bgt.n	80202dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80202d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80202d6:	2b00      	cmp	r3, #0
 80202d8:	f340 81d6 	ble.w	8020688 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80202dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80202de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80202e2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80202e6:	1e48      	subs	r0, r1, #1
 80202e8:	1e56      	subs	r6, r2, #1
 80202ea:	9b06      	ldr	r3, [sp, #24]
 80202ec:	2b00      	cmp	r3, #0
 80202ee:	f340 80b7 	ble.w	8020460 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 80202f2:	ea5f 472b 	movs.w	r7, fp, asr #16
 80202f6:	ea4f 4325 	mov.w	r3, r5, asr #16
 80202fa:	d406      	bmi.n	802030a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80202fc:	4287      	cmp	r7, r0
 80202fe:	da04      	bge.n	802030a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020300:	2b00      	cmp	r3, #0
 8020302:	db02      	blt.n	802030a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020304:	42b3      	cmp	r3, r6
 8020306:	f2c0 80ac 	blt.w	8020462 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802030a:	3701      	adds	r7, #1
 802030c:	f100 809d 	bmi.w	802044a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020310:	42b9      	cmp	r1, r7
 8020312:	f2c0 809a 	blt.w	802044a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020316:	3301      	adds	r3, #1
 8020318:	f100 8097 	bmi.w	802044a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 802031c:	429a      	cmp	r2, r3
 802031e:	f2c0 8094 	blt.w	802044a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020322:	9b06      	ldr	r3, [sp, #24]
 8020324:	930b      	str	r3, [sp, #44]	; 0x2c
 8020326:	9b07      	ldr	r3, [sp, #28]
 8020328:	9309      	str	r3, [sp, #36]	; 0x24
 802032a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802032c:	2b00      	cmp	r3, #0
 802032e:	f340 80b5 	ble.w	802049c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020332:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020334:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020336:	68c7      	ldr	r7, [r0, #12]
 8020338:	6892      	ldr	r2, [r2, #8]
 802033a:	ea5f 402b 	movs.w	r0, fp, asr #16
 802033e:	ea4f 4625 	mov.w	r6, r5, asr #16
 8020342:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020346:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802034a:	f100 80fb 	bmi.w	8020544 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802034e:	f102 3cff 	add.w	ip, r2, #4294967295
 8020352:	4560      	cmp	r0, ip
 8020354:	f280 80f6 	bge.w	8020544 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020358:	2e00      	cmp	r6, #0
 802035a:	f2c0 80f3 	blt.w	8020544 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802035e:	f107 3cff 	add.w	ip, r7, #4294967295
 8020362:	4566      	cmp	r6, ip
 8020364:	f280 80ee 	bge.w	8020544 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020368:	b212      	sxth	r2, r2
 802036a:	fb06 0002 	mla	r0, r6, r2, r0
 802036e:	9e08      	ldr	r6, [sp, #32]
 8020370:	1837      	adds	r7, r6, r0
 8020372:	5c30      	ldrb	r0, [r6, r0]
 8020374:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8020378:	eb04 0c08 	add.w	ip, r4, r8
 802037c:	2b00      	cmp	r3, #0
 802037e:	f000 80d3 	beq.w	8020528 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8020382:	787e      	ldrb	r6, [r7, #1]
 8020384:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020388:	4426      	add	r6, r4
 802038a:	2900      	cmp	r1, #0
 802038c:	f000 80d4 	beq.w	8020538 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8020390:	18b8      	adds	r0, r7, r2
 8020392:	5cba      	ldrb	r2, [r7, r2]
 8020394:	7840      	ldrb	r0, [r0, #1]
 8020396:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802039a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802039e:	4422      	add	r2, r4
 80203a0:	4420      	add	r0, r4
 80203a2:	b29b      	uxth	r3, r3
 80203a4:	b289      	uxth	r1, r1
 80203a6:	fb03 f901 	mul.w	r9, r3, r1
 80203aa:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80203ae:	011b      	lsls	r3, r3, #4
 80203b0:	b289      	uxth	r1, r1
 80203b2:	78b7      	ldrb	r7, [r6, #2]
 80203b4:	f89c a002 	ldrb.w	sl, [ip, #2]
 80203b8:	f89c c001 	ldrb.w	ip, [ip, #1]
 80203bc:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80203c0:	eba3 0309 	sub.w	r3, r3, r9
 80203c4:	b29b      	uxth	r3, r3
 80203c6:	ebae 0e01 	sub.w	lr, lr, r1
 80203ca:	fa1f fe8e 	uxth.w	lr, lr
 80203ce:	435f      	muls	r7, r3
 80203d0:	fb0e 770a 	mla	r7, lr, sl, r7
 80203d4:	f892 a002 	ldrb.w	sl, [r2, #2]
 80203d8:	fb01 770a 	mla	r7, r1, sl, r7
 80203dc:	f890 a002 	ldrb.w	sl, [r0, #2]
 80203e0:	fb09 7a0a 	mla	sl, r9, sl, r7
 80203e4:	f814 7008 	ldrb.w	r7, [r4, r8]
 80203e8:	f896 8000 	ldrb.w	r8, [r6]
 80203ec:	7876      	ldrb	r6, [r6, #1]
 80203ee:	fb03 f808 	mul.w	r8, r3, r8
 80203f2:	fb0e 8807 	mla	r8, lr, r7, r8
 80203f6:	7817      	ldrb	r7, [r2, #0]
 80203f8:	fb01 8807 	mla	r8, r1, r7, r8
 80203fc:	7807      	ldrb	r7, [r0, #0]
 80203fe:	fb09 8707 	mla	r7, r9, r7, r8
 8020402:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020406:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802040a:	ea47 070a 	orr.w	r7, r7, sl
 802040e:	4373      	muls	r3, r6
 8020410:	f892 a001 	ldrb.w	sl, [r2, #1]
 8020414:	fb0e 330c 	mla	r3, lr, ip, r3
 8020418:	fb01 310a 	mla	r1, r1, sl, r3
 802041c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020420:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020422:	fb09 1a0a 	mla	sl, r9, sl, r1
 8020426:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 802042a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 802042e:	ea47 070a 	orr.w	r7, r7, sl
 8020432:	801f      	strh	r7, [r3, #0]
 8020434:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020436:	3302      	adds	r3, #2
 8020438:	9309      	str	r3, [sp, #36]	; 0x24
 802043a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802043c:	449b      	add	fp, r3
 802043e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020440:	441d      	add	r5, r3
 8020442:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020444:	3b01      	subs	r3, #1
 8020446:	930b      	str	r3, [sp, #44]	; 0x2c
 8020448:	e76f      	b.n	802032a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802044a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802044c:	449b      	add	fp, r3
 802044e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020450:	441d      	add	r5, r3
 8020452:	9b06      	ldr	r3, [sp, #24]
 8020454:	3b01      	subs	r3, #1
 8020456:	9306      	str	r3, [sp, #24]
 8020458:	9b07      	ldr	r3, [sp, #28]
 802045a:	3302      	adds	r3, #2
 802045c:	9307      	str	r3, [sp, #28]
 802045e:	e744      	b.n	80202ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020460:	d023      	beq.n	80204aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8020462:	9b06      	ldr	r3, [sp, #24]
 8020464:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8020466:	3b01      	subs	r3, #1
 8020468:	fb00 b003 	mla	r0, r0, r3, fp
 802046c:	1400      	asrs	r0, r0, #16
 802046e:	f53f af58 	bmi.w	8020322 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020472:	3901      	subs	r1, #1
 8020474:	4288      	cmp	r0, r1
 8020476:	f6bf af54 	bge.w	8020322 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802047a:	991c      	ldr	r1, [sp, #112]	; 0x70
 802047c:	fb01 5303 	mla	r3, r1, r3, r5
 8020480:	141b      	asrs	r3, r3, #16
 8020482:	f53f af4e 	bmi.w	8020322 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020486:	3a01      	subs	r2, #1
 8020488:	4293      	cmp	r3, r2
 802048a:	f6bf af4a 	bge.w	8020322 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802048e:	9b06      	ldr	r3, [sp, #24]
 8020490:	9309      	str	r3, [sp, #36]	; 0x24
 8020492:	9b07      	ldr	r3, [sp, #28]
 8020494:	930b      	str	r3, [sp, #44]	; 0x2c
 8020496:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020498:	2b00      	cmp	r3, #0
 802049a:	dc70      	bgt.n	802057e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 802049c:	9b06      	ldr	r3, [sp, #24]
 802049e:	9a07      	ldr	r2, [sp, #28]
 80204a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80204a4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80204a8:	9307      	str	r3, [sp, #28]
 80204aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80204ac:	2b00      	cmp	r3, #0
 80204ae:	f340 80eb 	ble.w	8020688 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80204b2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80204b6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80204ba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80204be:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80204c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80204c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80204c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80204cc:	eef0 6a62 	vmov.f32	s13, s5
 80204d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80204d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80204d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80204dc:	ee16 ba90 	vmov	fp, s13
 80204e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80204e4:	eef0 6a43 	vmov.f32	s13, s6
 80204e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80204ec:	ee12 2a90 	vmov	r2, s5
 80204f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80204f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80204f8:	ee13 2a10 	vmov	r2, s6
 80204fc:	931b      	str	r3, [sp, #108]	; 0x6c
 80204fe:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020500:	fb92 f3f3 	sdiv	r3, r2, r3
 8020504:	931c      	str	r3, [sp, #112]	; 0x70
 8020506:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020508:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802050a:	3b01      	subs	r3, #1
 802050c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020510:	930a      	str	r3, [sp, #40]	; 0x28
 8020512:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020514:	bf08      	it	eq
 8020516:	4613      	moveq	r3, r2
 8020518:	ee16 5a90 	vmov	r5, s13
 802051c:	9306      	str	r3, [sp, #24]
 802051e:	eeb0 3a67 	vmov.f32	s6, s15
 8020522:	eef0 2a47 	vmov.f32	s5, s14
 8020526:	e6d2      	b.n	80202ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8020528:	b149      	cbz	r1, 802053e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 802052a:	5cba      	ldrb	r2, [r7, r2]
 802052c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020530:	4422      	add	r2, r4
 8020532:	4660      	mov	r0, ip
 8020534:	4666      	mov	r6, ip
 8020536:	e734      	b.n	80203a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020538:	4660      	mov	r0, ip
 802053a:	4662      	mov	r2, ip
 802053c:	e731      	b.n	80203a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 802053e:	4660      	mov	r0, ip
 8020540:	4662      	mov	r2, ip
 8020542:	e7f7      	b.n	8020534 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8020544:	f110 0c01 	adds.w	ip, r0, #1
 8020548:	f53f af74 	bmi.w	8020434 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802054c:	4562      	cmp	r2, ip
 802054e:	f6ff af71 	blt.w	8020434 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020552:	f116 0c01 	adds.w	ip, r6, #1
 8020556:	f53f af6d 	bmi.w	8020434 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802055a:	4567      	cmp	r7, ip
 802055c:	f6ff af6a 	blt.w	8020434 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020560:	b23f      	sxth	r7, r7
 8020562:	b212      	sxth	r2, r2
 8020564:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8020568:	e9cd 0602 	strd	r0, r6, [sp, #8]
 802056c:	9200      	str	r2, [sp, #0]
 802056e:	9701      	str	r7, [sp, #4]
 8020570:	4623      	mov	r3, r4
 8020572:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8020576:	980d      	ldr	r0, [sp, #52]	; 0x34
 8020578:	f7ff fde6 	bl	8020148 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 802057c:	e75a      	b.n	8020434 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802057e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020580:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020584:	ea4f 462b 	mov.w	r6, fp, asr #16
 8020588:	1428      	asrs	r0, r5, #16
 802058a:	fb02 6000 	mla	r0, r2, r0, r6
 802058e:	9e08      	ldr	r6, [sp, #32]
 8020590:	f816 8000 	ldrb.w	r8, [r6, r0]
 8020594:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020598:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 802059c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80205a0:	1837      	adds	r7, r6, r0
 80205a2:	eb04 0c08 	add.w	ip, r4, r8
 80205a6:	2b00      	cmp	r3, #0
 80205a8:	d060      	beq.n	802066c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 80205aa:	787e      	ldrb	r6, [r7, #1]
 80205ac:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80205b0:	4426      	add	r6, r4
 80205b2:	2900      	cmp	r1, #0
 80205b4:	d062      	beq.n	802067c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 80205b6:	18b8      	adds	r0, r7, r2
 80205b8:	5cba      	ldrb	r2, [r7, r2]
 80205ba:	7840      	ldrb	r0, [r0, #1]
 80205bc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80205c0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80205c4:	4422      	add	r2, r4
 80205c6:	4420      	add	r0, r4
 80205c8:	b29b      	uxth	r3, r3
 80205ca:	b289      	uxth	r1, r1
 80205cc:	fb03 f901 	mul.w	r9, r3, r1
 80205d0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80205d4:	011b      	lsls	r3, r3, #4
 80205d6:	b289      	uxth	r1, r1
 80205d8:	78b7      	ldrb	r7, [r6, #2]
 80205da:	f89c a002 	ldrb.w	sl, [ip, #2]
 80205de:	f89c c001 	ldrb.w	ip, [ip, #1]
 80205e2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80205e6:	eba3 0309 	sub.w	r3, r3, r9
 80205ea:	b29b      	uxth	r3, r3
 80205ec:	ebae 0e01 	sub.w	lr, lr, r1
 80205f0:	fa1f fe8e 	uxth.w	lr, lr
 80205f4:	435f      	muls	r7, r3
 80205f6:	fb0e 770a 	mla	r7, lr, sl, r7
 80205fa:	f892 a002 	ldrb.w	sl, [r2, #2]
 80205fe:	fb01 770a 	mla	r7, r1, sl, r7
 8020602:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020606:	fb09 7a0a 	mla	sl, r9, sl, r7
 802060a:	f814 7008 	ldrb.w	r7, [r4, r8]
 802060e:	f896 8000 	ldrb.w	r8, [r6]
 8020612:	7876      	ldrb	r6, [r6, #1]
 8020614:	fb03 f808 	mul.w	r8, r3, r8
 8020618:	fb0e 8807 	mla	r8, lr, r7, r8
 802061c:	7817      	ldrb	r7, [r2, #0]
 802061e:	fb01 8807 	mla	r8, r1, r7, r8
 8020622:	7807      	ldrb	r7, [r0, #0]
 8020624:	fb09 8707 	mla	r7, r9, r7, r8
 8020628:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 802062c:	4373      	muls	r3, r6
 802062e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020632:	7856      	ldrb	r6, [r2, #1]
 8020634:	ea47 070a 	orr.w	r7, r7, sl
 8020638:	fb0e 330c 	mla	r3, lr, ip, r3
 802063c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020640:	fb01 3306 	mla	r3, r1, r6, r3
 8020644:	fb09 3a0a 	mla	sl, r9, sl, r3
 8020648:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 802064c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802064e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020652:	ea47 070a 	orr.w	r7, r7, sl
 8020656:	f823 7b02 	strh.w	r7, [r3], #2
 802065a:	930b      	str	r3, [sp, #44]	; 0x2c
 802065c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802065e:	449b      	add	fp, r3
 8020660:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020662:	441d      	add	r5, r3
 8020664:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020666:	3b01      	subs	r3, #1
 8020668:	9309      	str	r3, [sp, #36]	; 0x24
 802066a:	e714      	b.n	8020496 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 802066c:	b149      	cbz	r1, 8020682 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802066e:	5cba      	ldrb	r2, [r7, r2]
 8020670:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020674:	4422      	add	r2, r4
 8020676:	4660      	mov	r0, ip
 8020678:	4666      	mov	r6, ip
 802067a:	e7a5      	b.n	80205c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802067c:	4660      	mov	r0, ip
 802067e:	4662      	mov	r2, ip
 8020680:	e7a2      	b.n	80205c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020682:	4660      	mov	r0, ip
 8020684:	4662      	mov	r2, ip
 8020686:	e7f7      	b.n	8020678 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8020688:	b00f      	add	sp, #60	; 0x3c
 802068a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802068e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 802068e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020692:	b085      	sub	sp, #20
 8020694:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8020698:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 802069c:	9102      	str	r1, [sp, #8]
 802069e:	2c00      	cmp	r4, #0
 80206a0:	fb04 710c 	mla	r1, r4, ip, r7
 80206a4:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80206a8:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80206ac:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80206b0:	eb02 0e01 	add.w	lr, r2, r1
 80206b4:	f2c0 8122 	blt.w	80208fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80206b8:	45a0      	cmp	r8, r4
 80206ba:	f340 811f 	ble.w	80208fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80206be:	2f00      	cmp	r7, #0
 80206c0:	f2c0 811a 	blt.w	80208f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80206c4:	45bc      	cmp	ip, r7
 80206c6:	f340 8117 	ble.w	80208f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80206ca:	5c52      	ldrb	r2, [r2, r1]
 80206cc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80206d0:	1c7a      	adds	r2, r7, #1
 80206d2:	f100 8116 	bmi.w	8020902 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80206d6:	4594      	cmp	ip, r2
 80206d8:	f340 8113 	ble.w	8020902 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80206dc:	2e00      	cmp	r6, #0
 80206de:	f000 8112 	beq.w	8020906 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 80206e2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80206e6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80206ea:	3401      	adds	r4, #1
 80206ec:	f100 810f 	bmi.w	802090e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80206f0:	45a0      	cmp	r8, r4
 80206f2:	f340 810c 	ble.w	802090e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80206f6:	2800      	cmp	r0, #0
 80206f8:	f000 810c 	beq.w	8020914 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 80206fc:	2f00      	cmp	r7, #0
 80206fe:	f2c0 8104 	blt.w	802090a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8020702:	45bc      	cmp	ip, r7
 8020704:	f340 8101 	ble.w	802090a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8020708:	f81e 200c 	ldrb.w	r2, [lr, ip]
 802070c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8020710:	3701      	adds	r7, #1
 8020712:	f100 8102 	bmi.w	802091a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8020716:	45bc      	cmp	ip, r7
 8020718:	f340 80ff 	ble.w	802091a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 802071c:	2e00      	cmp	r6, #0
 802071e:	f000 80fe 	beq.w	802091e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8020722:	44f4      	add	ip, lr
 8020724:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8020728:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 802072c:	b2b6      	uxth	r6, r6
 802072e:	b280      	uxth	r0, r0
 8020730:	fb00 fe06 	mul.w	lr, r0, r6
 8020734:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8020738:	0136      	lsls	r6, r6, #4
 802073a:	eba6 070e 	sub.w	r7, r6, lr
 802073e:	b280      	uxth	r0, r0
 8020740:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8020744:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020748:	b2bf      	uxth	r7, r7
 802074a:	1a1b      	subs	r3, r3, r0
 802074c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020750:	b29b      	uxth	r3, r3
 8020752:	fb0a f607 	mul.w	r6, sl, r7
 8020756:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802075a:	fb0b 6603 	mla	r6, fp, r3, r6
 802075e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8020762:	fb00 6609 	mla	r6, r0, r9, r6
 8020766:	fb0e 6608 	mla	r6, lr, r8, r6
 802076a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802076e:	9600      	str	r6, [sp, #0]
 8020770:	2e00      	cmp	r6, #0
 8020772:	f000 80be 	beq.w	80208f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8020776:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802077a:	fb0b fc0c 	mul.w	ip, fp, ip
 802077e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8020782:	fb0b f505 	mul.w	r5, fp, r5
 8020786:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802078a:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 802078e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020792:	44dc      	add	ip, fp
 8020794:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020798:	9501      	str	r5, [sp, #4]
 802079a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802079e:	9503      	str	r5, [sp, #12]
 80207a0:	9d01      	ldr	r5, [sp, #4]
 80207a2:	9e02      	ldr	r6, [sp, #8]
 80207a4:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80207a8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80207ac:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80207b0:	fb0a fc0c 	mul.w	ip, sl, ip
 80207b4:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80207b8:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80207bc:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80207c0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80207c4:	4465      	add	r5, ip
 80207c6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80207ca:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80207ce:	fb09 fc0c 	mul.w	ip, r9, ip
 80207d2:	fb09 f904 	mul.w	r9, r9, r4
 80207d6:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80207da:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80207de:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80207e2:	fb08 f404 	mul.w	r4, r8, r4
 80207e6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80207ea:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80207ee:	fb08 f802 	mul.w	r8, r8, r2
 80207f2:	fb0a fa01 	mul.w	sl, sl, r1
 80207f6:	0a22      	lsrs	r2, r4, #8
 80207f8:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80207fc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020800:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8020804:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8020808:	4414      	add	r4, r2
 802080a:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802080e:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8020812:	0a2d      	lsrs	r5, r5, #8
 8020814:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8020818:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802081c:	9a03      	ldr	r2, [sp, #12]
 802081e:	8836      	ldrh	r6, [r6, #0]
 8020820:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020824:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020828:	437d      	muls	r5, r7
 802082a:	4461      	add	r1, ip
 802082c:	0a24      	lsrs	r4, r4, #8
 802082e:	fb02 5503 	mla	r5, r2, r3, r5
 8020832:	0a09      	lsrs	r1, r1, #8
 8020834:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8020838:	fb04 540e 	mla	r4, r4, lr, r5
 802083c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020840:	fb01 4100 	mla	r1, r1, r0, r4
 8020844:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020848:	0a09      	lsrs	r1, r1, #8
 802084a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802084e:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8020852:	fb07 f70a 	mul.w	r7, r7, sl
 8020856:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802085a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802085e:	fb03 7101 	mla	r1, r3, r1, r7
 8020862:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020866:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802086a:	fb0e 1e08 	mla	lr, lr, r8, r1
 802086e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8020872:	fb00 e101 	mla	r1, r0, r1, lr
 8020876:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 802087a:	9a00      	ldr	r2, [sp, #0]
 802087c:	b287      	uxth	r7, r0
 802087e:	437a      	muls	r2, r7
 8020880:	0a09      	lsrs	r1, r1, #8
 8020882:	1c53      	adds	r3, r2, #1
 8020884:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020888:	4321      	orrs	r1, r4
 802088a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802088e:	1235      	asrs	r5, r6, #8
 8020890:	0c0a      	lsrs	r2, r1, #16
 8020892:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8020896:	b2db      	uxtb	r3, r3
 8020898:	fb12 f207 	smulbb	r2, r2, r7
 802089c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80208a0:	fb05 2503 	mla	r5, r5, r3, r2
 80208a4:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80208a8:	10f2      	asrs	r2, r6, #3
 80208aa:	b2c8      	uxtb	r0, r1
 80208ac:	00f6      	lsls	r6, r6, #3
 80208ae:	fb14 f407 	smulbb	r4, r4, r7
 80208b2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80208b6:	b2f6      	uxtb	r6, r6
 80208b8:	fb10 f007 	smulbb	r0, r0, r7
 80208bc:	fb02 4203 	mla	r2, r2, r3, r4
 80208c0:	b2ad      	uxth	r5, r5
 80208c2:	fb06 0303 	mla	r3, r6, r3, r0
 80208c6:	b299      	uxth	r1, r3
 80208c8:	b294      	uxth	r4, r2
 80208ca:	1c6b      	adds	r3, r5, #1
 80208cc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80208d0:	1c62      	adds	r2, r4, #1
 80208d2:	1c4b      	adds	r3, r1, #1
 80208d4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80208d8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80208dc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80208e0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80208e4:	0952      	lsrs	r2, r2, #5
 80208e6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80208ea:	432b      	orrs	r3, r5
 80208ec:	4313      	orrs	r3, r2
 80208ee:	9a02      	ldr	r2, [sp, #8]
 80208f0:	8013      	strh	r3, [r2, #0]
 80208f2:	b005      	add	sp, #20
 80208f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80208f8:	2500      	movs	r5, #0
 80208fa:	e6e9      	b.n	80206d0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 80208fc:	2100      	movs	r1, #0
 80208fe:	460d      	mov	r5, r1
 8020900:	e6f3      	b.n	80206ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8020902:	2100      	movs	r1, #0
 8020904:	e6f1      	b.n	80206ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8020906:	4631      	mov	r1, r6
 8020908:	e6ef      	b.n	80206ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802090a:	2400      	movs	r4, #0
 802090c:	e700      	b.n	8020710 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802090e:	2200      	movs	r2, #0
 8020910:	4614      	mov	r4, r2
 8020912:	e70b      	b.n	802072c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8020914:	4602      	mov	r2, r0
 8020916:	4604      	mov	r4, r0
 8020918:	e708      	b.n	802072c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802091a:	2200      	movs	r2, #0
 802091c:	e706      	b.n	802072c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802091e:	4632      	mov	r2, r6
 8020920:	e704      	b.n	802072c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08020922 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020922:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020926:	b09f      	sub	sp, #124	; 0x7c
 8020928:	921b      	str	r2, [sp, #108]	; 0x6c
 802092a:	9309      	str	r3, [sp, #36]	; 0x24
 802092c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 802092e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8020932:	931c      	str	r3, [sp, #112]	; 0x70
 8020934:	9119      	str	r1, [sp, #100]	; 0x64
 8020936:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 802093a:	901d      	str	r0, [sp, #116]	; 0x74
 802093c:	6850      	ldr	r0, [r2, #4]
 802093e:	6812      	ldr	r2, [r2, #0]
 8020940:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8020942:	fb00 1303 	mla	r3, r0, r3, r1
 8020946:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802094a:	930c      	str	r3, [sp, #48]	; 0x30
 802094c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802094e:	681b      	ldr	r3, [r3, #0]
 8020950:	9312      	str	r3, [sp, #72]	; 0x48
 8020952:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020954:	685e      	ldr	r6, [r3, #4]
 8020956:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 802095a:	930d      	str	r3, [sp, #52]	; 0x34
 802095c:	3604      	adds	r6, #4
 802095e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020960:	2b00      	cmp	r3, #0
 8020962:	dc03      	bgt.n	802096c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020964:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020966:	2b00      	cmp	r3, #0
 8020968:	f340 8388 	ble.w	802107c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802096c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802096e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020972:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020976:	1e48      	subs	r0, r1, #1
 8020978:	1e57      	subs	r7, r2, #1
 802097a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802097c:	2b00      	cmp	r3, #0
 802097e:	f340 8195 	ble.w	8020cac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020982:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020984:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020988:	ea4f 4325 	mov.w	r3, r5, asr #16
 802098c:	d406      	bmi.n	802099c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802098e:	4584      	cmp	ip, r0
 8020990:	da04      	bge.n	802099c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020992:	2b00      	cmp	r3, #0
 8020994:	db02      	blt.n	802099c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020996:	42bb      	cmp	r3, r7
 8020998:	f2c0 8189 	blt.w	8020cae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 802099c:	f11c 0c01 	adds.w	ip, ip, #1
 80209a0:	f100 8177 	bmi.w	8020c92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80209a4:	4561      	cmp	r1, ip
 80209a6:	f2c0 8174 	blt.w	8020c92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80209aa:	3301      	adds	r3, #1
 80209ac:	f100 8171 	bmi.w	8020c92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80209b0:	429a      	cmp	r2, r3
 80209b2:	f2c0 816e 	blt.w	8020c92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80209b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80209b8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80209ba:	931a      	str	r3, [sp, #104]	; 0x68
 80209bc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80209be:	2b00      	cmp	r3, #0
 80209c0:	f340 8193 	ble.w	8020cea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80209c4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80209c6:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80209ca:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80209cc:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80209d0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80209d2:	141b      	asrs	r3, r3, #16
 80209d4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80209d8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80209dc:	f100 81d6 	bmi.w	8020d8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80209e0:	f100 38ff 	add.w	r8, r0, #4294967295
 80209e4:	4543      	cmp	r3, r8
 80209e6:	f280 81d1 	bge.w	8020d8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80209ea:	f1bc 0f00 	cmp.w	ip, #0
 80209ee:	f2c0 81cd 	blt.w	8020d8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80209f2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80209f6:	45c4      	cmp	ip, r8
 80209f8:	f280 81c8 	bge.w	8020d8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80209fc:	b200      	sxth	r0, r0
 80209fe:	fb0c 3300 	mla	r3, ip, r0, r3
 8020a02:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020a04:	eb04 0803 	add.w	r8, r4, r3
 8020a08:	5ce3      	ldrb	r3, [r4, r3]
 8020a0a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020a0e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8020a12:	2a00      	cmp	r2, #0
 8020a14:	f000 81af 	beq.w	8020d76 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020a18:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020a1c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020a20:	940e      	str	r4, [sp, #56]	; 0x38
 8020a22:	0e24      	lsrs	r4, r4, #24
 8020a24:	9415      	str	r4, [sp, #84]	; 0x54
 8020a26:	b179      	cbz	r1, 8020a48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020a28:	eb08 0c00 	add.w	ip, r8, r0
 8020a2c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020a30:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020a34:	900a      	str	r0, [sp, #40]	; 0x28
 8020a36:	0e00      	lsrs	r0, r0, #24
 8020a38:	9013      	str	r0, [sp, #76]	; 0x4c
 8020a3a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8020a3e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020a42:	900f      	str	r0, [sp, #60]	; 0x3c
 8020a44:	0e00      	lsrs	r0, r0, #24
 8020a46:	9016      	str	r0, [sp, #88]	; 0x58
 8020a48:	b292      	uxth	r2, r2
 8020a4a:	b289      	uxth	r1, r1
 8020a4c:	fb02 f901 	mul.w	r9, r2, r1
 8020a50:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020a54:	0112      	lsls	r2, r2, #4
 8020a56:	eba2 0809 	sub.w	r8, r2, r9
 8020a5a:	b289      	uxth	r1, r1
 8020a5c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020a60:	9815      	ldr	r0, [sp, #84]	; 0x54
 8020a62:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020a64:	fa1f f888 	uxth.w	r8, r8
 8020a68:	1a52      	subs	r2, r2, r1
 8020a6a:	b292      	uxth	r2, r2
 8020a6c:	fb08 f000 	mul.w	r0, r8, r0
 8020a70:	fb02 000e 	mla	r0, r2, lr, r0
 8020a74:	fb01 0004 	mla	r0, r1, r4, r0
 8020a78:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020a7a:	fb09 0004 	mla	r0, r9, r4, r0
 8020a7e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8020a82:	2800      	cmp	r0, #0
 8020a84:	f000 80fa 	beq.w	8020c7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020a88:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020a8c:	d01b      	beq.n	8020ac6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020a8e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020a92:	fb0e fa0a 	mul.w	sl, lr, sl
 8020a96:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020a9a:	fb0e fe03 	mul.w	lr, lr, r3
 8020a9e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020aa2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020aa6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020aaa:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020aae:	4453      	add	r3, sl
 8020ab0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020ab4:	0a1b      	lsrs	r3, r3, #8
 8020ab6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020aba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020abe:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020ac2:	ea43 030c 	orr.w	r3, r3, ip
 8020ac6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020ac8:	2cff      	cmp	r4, #255	; 0xff
 8020aca:	d021      	beq.n	8020b10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020acc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020ace:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020ad2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020ad4:	fb04 fb0b 	mul.w	fp, r4, fp
 8020ad8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020ada:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020ade:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020ae0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020ae4:	fb04 fa0a 	mul.w	sl, r4, sl
 8020ae8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020aec:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020af0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020af4:	44de      	add	lr, fp
 8020af6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020afa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020afe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020b02:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020b06:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020b0a:	ea4e 040a 	orr.w	r4, lr, sl
 8020b0e:	940e      	str	r4, [sp, #56]	; 0x38
 8020b10:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020b12:	2cff      	cmp	r4, #255	; 0xff
 8020b14:	d021      	beq.n	8020b5a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8020b16:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020b18:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020b1c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020b1e:	fb04 fb0b 	mul.w	fp, r4, fp
 8020b22:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020b24:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020b28:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020b2a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020b2e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020b32:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020b36:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020b3a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020b3e:	44de      	add	lr, fp
 8020b40:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020b44:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020b48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020b4c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020b50:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020b54:	ea4e 040a 	orr.w	r4, lr, sl
 8020b58:	940a      	str	r4, [sp, #40]	; 0x28
 8020b5a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020b5c:	2cff      	cmp	r4, #255	; 0xff
 8020b5e:	d021      	beq.n	8020ba4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8020b60:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020b62:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020b66:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020b68:	fb04 fb0b 	mul.w	fp, r4, fp
 8020b6c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020b6e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020b72:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020b74:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020b78:	fb04 fa0a 	mul.w	sl, r4, sl
 8020b7c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020b80:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020b84:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020b88:	44de      	add	lr, fp
 8020b8a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020b8e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020b92:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020b96:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020b9a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020b9e:	ea4e 040a 	orr.w	r4, lr, sl
 8020ba2:	940f      	str	r4, [sp, #60]	; 0x3c
 8020ba4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020ba6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020baa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020bac:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020bb0:	fb08 fc0c 	mul.w	ip, r8, ip
 8020bb4:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020bb8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020bbc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020bbe:	fb01 cc0e 	mla	ip, r1, lr, ip
 8020bc2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020bc6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020bc8:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020bcc:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8020bd0:	fb08 f80e 	mul.w	r8, r8, lr
 8020bd4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020bd8:	fb02 8303 	mla	r3, r2, r3, r8
 8020bdc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020bde:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020be0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020be4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020be6:	fb01 330a 	mla	r3, r1, sl, r3
 8020bea:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8020bee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8020bf0:	fb09 3901 	mla	r9, r9, r1, r3
 8020bf4:	4342      	muls	r2, r0
 8020bf6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020bfa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020bfe:	883b      	ldrh	r3, [r7, #0]
 8020c00:	1c50      	adds	r0, r2, #1
 8020c02:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020c06:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020c0a:	ea4c 0c09 	orr.w	ip, ip, r9
 8020c0e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8020c12:	1219      	asrs	r1, r3, #8
 8020c14:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8020c18:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8020c1c:	b2c0      	uxtb	r0, r0
 8020c1e:	fb12 f204 	smulbb	r2, r2, r4
 8020c22:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020c26:	fb01 2100 	mla	r1, r1, r0, r2
 8020c2a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8020c2e:	10da      	asrs	r2, r3, #3
 8020c30:	fa5f fc8c 	uxtb.w	ip, ip
 8020c34:	00db      	lsls	r3, r3, #3
 8020c36:	fb1c fc04 	smulbb	ip, ip, r4
 8020c3a:	b2db      	uxtb	r3, r3
 8020c3c:	b289      	uxth	r1, r1
 8020c3e:	fb03 c300 	mla	r3, r3, r0, ip
 8020c42:	fa1f fc83 	uxth.w	ip, r3
 8020c46:	1c4b      	adds	r3, r1, #1
 8020c48:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020c4c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020c50:	fb1e fe04 	smulbb	lr, lr, r4
 8020c54:	f10c 0301 	add.w	r3, ip, #1
 8020c58:	fb02 e200 	mla	r2, r2, r0, lr
 8020c5c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020c60:	b292      	uxth	r2, r2
 8020c62:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8020c66:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020c6a:	430b      	orrs	r3, r1
 8020c6c:	1c51      	adds	r1, r2, #1
 8020c6e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020c72:	0952      	lsrs	r2, r2, #5
 8020c74:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020c78:	4313      	orrs	r3, r2
 8020c7a:	803b      	strh	r3, [r7, #0]
 8020c7c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020c7e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020c80:	441a      	add	r2, r3
 8020c82:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020c84:	9229      	str	r2, [sp, #164]	; 0xa4
 8020c86:	441d      	add	r5, r3
 8020c88:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8020c8a:	3b01      	subs	r3, #1
 8020c8c:	3702      	adds	r7, #2
 8020c8e:	931a      	str	r3, [sp, #104]	; 0x68
 8020c90:	e694      	b.n	80209bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020c92:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020c94:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020c96:	441c      	add	r4, r3
 8020c98:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020c9a:	9429      	str	r4, [sp, #164]	; 0xa4
 8020c9c:	441d      	add	r5, r3
 8020c9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020ca0:	3b01      	subs	r3, #1
 8020ca2:	9309      	str	r3, [sp, #36]	; 0x24
 8020ca4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020ca6:	3302      	adds	r3, #2
 8020ca8:	930c      	str	r3, [sp, #48]	; 0x30
 8020caa:	e666      	b.n	802097a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020cac:	d024      	beq.n	8020cf8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8020cae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020cb0:	982b      	ldr	r0, [sp, #172]	; 0xac
 8020cb2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020cb4:	3b01      	subs	r3, #1
 8020cb6:	fb00 4003 	mla	r0, r0, r3, r4
 8020cba:	1400      	asrs	r0, r0, #16
 8020cbc:	f53f ae7b 	bmi.w	80209b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020cc0:	3901      	subs	r1, #1
 8020cc2:	4288      	cmp	r0, r1
 8020cc4:	f6bf ae77 	bge.w	80209b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020cc8:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8020cca:	fb01 5303 	mla	r3, r1, r3, r5
 8020cce:	141b      	asrs	r3, r3, #16
 8020cd0:	f53f ae71 	bmi.w	80209b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020cd4:	3a01      	subs	r2, #1
 8020cd6:	4293      	cmp	r3, r2
 8020cd8:	f6bf ae6d 	bge.w	80209b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020cdc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8020ce0:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8020ce4:	f1bb 0f00 	cmp.w	fp, #0
 8020ce8:	dc70      	bgt.n	8020dcc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8020cea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020cec:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020cf0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020cf2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020cf6:	930c      	str	r3, [sp, #48]	; 0x30
 8020cf8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020cfa:	2b00      	cmp	r3, #0
 8020cfc:	f340 81be 	ble.w	802107c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8020d00:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020d04:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020d08:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020d0c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020d0e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020d12:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020d16:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020d1a:	eef0 6a62 	vmov.f32	s13, s5
 8020d1e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020d22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d26:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020d2a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8020d2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020d32:	eef0 6a43 	vmov.f32	s13, s6
 8020d36:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020d3a:	ee12 2a90 	vmov	r2, s5
 8020d3e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020d42:	fb92 f3f3 	sdiv	r3, r2, r3
 8020d46:	ee13 2a10 	vmov	r2, s6
 8020d4a:	932b      	str	r3, [sp, #172]	; 0xac
 8020d4c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020d4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020d52:	932c      	str	r3, [sp, #176]	; 0xb0
 8020d54:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020d56:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8020d58:	3b01      	subs	r3, #1
 8020d5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d5e:	9319      	str	r3, [sp, #100]	; 0x64
 8020d60:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020d62:	bf08      	it	eq
 8020d64:	4613      	moveq	r3, r2
 8020d66:	ee16 5a90 	vmov	r5, s13
 8020d6a:	9309      	str	r3, [sp, #36]	; 0x24
 8020d6c:	eeb0 3a67 	vmov.f32	s6, s15
 8020d70:	eef0 2a47 	vmov.f32	s5, s14
 8020d74:	e5f3      	b.n	802095e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020d76:	2900      	cmp	r1, #0
 8020d78:	f43f ae66 	beq.w	8020a48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020d7c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020d80:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020d84:	900a      	str	r0, [sp, #40]	; 0x28
 8020d86:	0e00      	lsrs	r0, r0, #24
 8020d88:	9013      	str	r0, [sp, #76]	; 0x4c
 8020d8a:	e65d      	b.n	8020a48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020d8c:	f113 0801 	adds.w	r8, r3, #1
 8020d90:	f53f af74 	bmi.w	8020c7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020d94:	4540      	cmp	r0, r8
 8020d96:	f6ff af71 	blt.w	8020c7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020d9a:	f11c 0801 	adds.w	r8, ip, #1
 8020d9e:	f53f af6d 	bmi.w	8020c7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020da2:	45c6      	cmp	lr, r8
 8020da4:	f6ff af6a 	blt.w	8020c7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020da8:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8020daa:	9302      	str	r3, [sp, #8]
 8020dac:	b200      	sxth	r0, r0
 8020dae:	fa0f f38e 	sxth.w	r3, lr
 8020db2:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020db6:	e9cd c203 	strd	ip, r2, [sp, #12]
 8020dba:	9301      	str	r3, [sp, #4]
 8020dbc:	9000      	str	r0, [sp, #0]
 8020dbe:	4633      	mov	r3, r6
 8020dc0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020dc2:	981d      	ldr	r0, [sp, #116]	; 0x74
 8020dc4:	4639      	mov	r1, r7
 8020dc6:	f7ff fc62 	bl	802068e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8020dca:	e757      	b.n	8020c7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020dcc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020dce:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020dd0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020dd4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020dd6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020dda:	1427      	asrs	r7, r4, #16
 8020ddc:	142b      	asrs	r3, r5, #16
 8020dde:	fb01 7303 	mla	r3, r1, r3, r7
 8020de2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020de4:	18e7      	adds	r7, r4, r3
 8020de6:	5ce3      	ldrb	r3, [r4, r3]
 8020de8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020dec:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020df0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020df4:	2a00      	cmp	r2, #0
 8020df6:	f000 8137 	beq.w	8021068 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020dfa:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020dfe:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020e02:	9410      	str	r4, [sp, #64]	; 0x40
 8020e04:	0e24      	lsrs	r4, r4, #24
 8020e06:	9417      	str	r4, [sp, #92]	; 0x5c
 8020e08:	b170      	cbz	r0, 8020e28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020e0a:	eb07 0e01 	add.w	lr, r7, r1
 8020e0e:	5c79      	ldrb	r1, [r7, r1]
 8020e10:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020e14:	910b      	str	r1, [sp, #44]	; 0x2c
 8020e16:	0e09      	lsrs	r1, r1, #24
 8020e18:	9114      	str	r1, [sp, #80]	; 0x50
 8020e1a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020e1e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020e22:	9111      	str	r1, [sp, #68]	; 0x44
 8020e24:	0e09      	lsrs	r1, r1, #24
 8020e26:	9118      	str	r1, [sp, #96]	; 0x60
 8020e28:	b292      	uxth	r2, r2
 8020e2a:	b280      	uxth	r0, r0
 8020e2c:	fb02 f800 	mul.w	r8, r2, r0
 8020e30:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020e34:	0112      	lsls	r2, r2, #4
 8020e36:	eba2 0e08 	sub.w	lr, r2, r8
 8020e3a:	b280      	uxth	r0, r0
 8020e3c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020e40:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8020e42:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020e44:	fa1f fe8e 	uxth.w	lr, lr
 8020e48:	1a12      	subs	r2, r2, r0
 8020e4a:	b292      	uxth	r2, r2
 8020e4c:	fb0e f101 	mul.w	r1, lr, r1
 8020e50:	fb02 110c 	mla	r1, r2, ip, r1
 8020e54:	fb00 1104 	mla	r1, r0, r4, r1
 8020e58:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020e5a:	fb08 1104 	mla	r1, r8, r4, r1
 8020e5e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020e62:	2900      	cmp	r1, #0
 8020e64:	f000 80f5 	beq.w	8021052 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020e68:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020e6c:	d019      	beq.n	8020ea2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8020e6e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020e72:	fb0c fa0a 	mul.w	sl, ip, sl
 8020e76:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020e7a:	fb0c fc03 	mul.w	ip, ip, r3
 8020e7e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020e82:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020e86:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020e8a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020e8e:	4453      	add	r3, sl
 8020e90:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020e94:	0a1b      	lsrs	r3, r3, #8
 8020e96:	0a3f      	lsrs	r7, r7, #8
 8020e98:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020e9c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020ea0:	433b      	orrs	r3, r7
 8020ea2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020ea4:	2cff      	cmp	r4, #255	; 0xff
 8020ea6:	d020      	beq.n	8020eea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8020ea8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020eaa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020eae:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020eb0:	4367      	muls	r7, r4
 8020eb2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020eb4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020eb8:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020eba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020ebe:	fb04 fa0a 	mul.w	sl, r4, sl
 8020ec2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020ec6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020eca:	44bc      	add	ip, r7
 8020ecc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020ed0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020ed4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020ed8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020edc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020ee0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020ee4:	ea4c 040a 	orr.w	r4, ip, sl
 8020ee8:	9410      	str	r4, [sp, #64]	; 0x40
 8020eea:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020eec:	2cff      	cmp	r4, #255	; 0xff
 8020eee:	d020      	beq.n	8020f32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8020ef0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020ef2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020ef6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020ef8:	4367      	muls	r7, r4
 8020efa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020efc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020f00:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020f02:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020f06:	fb04 fa0a 	mul.w	sl, r4, sl
 8020f0a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020f0e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020f12:	44bc      	add	ip, r7
 8020f14:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020f18:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020f1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020f20:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020f24:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020f28:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020f2c:	ea4c 040a 	orr.w	r4, ip, sl
 8020f30:	940b      	str	r4, [sp, #44]	; 0x2c
 8020f32:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020f34:	2cff      	cmp	r4, #255	; 0xff
 8020f36:	d020      	beq.n	8020f7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8020f38:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020f3a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020f3e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020f40:	4367      	muls	r7, r4
 8020f42:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020f44:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020f48:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020f4a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020f4e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020f52:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020f56:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020f5a:	44bc      	add	ip, r7
 8020f5c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020f60:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020f64:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020f68:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020f6c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020f70:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020f74:	ea4c 040a 	orr.w	r4, ip, sl
 8020f78:	9411      	str	r4, [sp, #68]	; 0x44
 8020f7a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020f7c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020f80:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020f82:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8020f86:	fb0e f707 	mul.w	r7, lr, r7
 8020f8a:	fb02 770c 	mla	r7, r2, ip, r7
 8020f8e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020f92:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020f94:	fb00 770c 	mla	r7, r0, ip, r7
 8020f98:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020f9c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020f9e:	fb08 770c 	mla	r7, r8, ip, r7
 8020fa2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8020fa6:	fb0e fe0c 	mul.w	lr, lr, ip
 8020faa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020fae:	fb02 e303 	mla	r3, r2, r3, lr
 8020fb2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020fb4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020fb6:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020fba:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8020fbc:	fb00 330a 	mla	r3, r0, sl, r3
 8020fc0:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8020fc4:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020fc8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020fca:	f8b9 0000 	ldrh.w	r0, [r9]
 8020fce:	434b      	muls	r3, r1
 8020fd0:	0a3f      	lsrs	r7, r7, #8
 8020fd2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020fd6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020fda:	1c59      	adds	r1, r3, #1
 8020fdc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020fe0:	ea47 070c 	orr.w	r7, r7, ip
 8020fe4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020fe8:	1202      	asrs	r2, r0, #8
 8020fea:	0c3b      	lsrs	r3, r7, #16
 8020fec:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8020ff0:	b2c9      	uxtb	r1, r1
 8020ff2:	fb13 f304 	smulbb	r3, r3, r4
 8020ff6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020ffa:	fb02 3201 	mla	r2, r2, r1, r3
 8020ffe:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8021002:	10c3      	asrs	r3, r0, #3
 8021004:	b2ff      	uxtb	r7, r7
 8021006:	00c0      	lsls	r0, r0, #3
 8021008:	b292      	uxth	r2, r2
 802100a:	fb1c fc04 	smulbb	ip, ip, r4
 802100e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021012:	b2c0      	uxtb	r0, r0
 8021014:	fb17 f704 	smulbb	r7, r7, r4
 8021018:	fb03 c301 	mla	r3, r3, r1, ip
 802101c:	fb00 7001 	mla	r0, r0, r1, r7
 8021020:	f102 0c01 	add.w	ip, r2, #1
 8021024:	b280      	uxth	r0, r0
 8021026:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 802102a:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 802102e:	1c42      	adds	r2, r0, #1
 8021030:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8021034:	b29b      	uxth	r3, r3
 8021036:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802103a:	ea42 020c 	orr.w	r2, r2, ip
 802103e:	f103 0c01 	add.w	ip, r3, #1
 8021042:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8021046:	095b      	lsrs	r3, r3, #5
 8021048:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802104c:	431a      	orrs	r2, r3
 802104e:	f8a9 2000 	strh.w	r2, [r9]
 8021052:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021054:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021056:	441a      	add	r2, r3
 8021058:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802105a:	9229      	str	r2, [sp, #164]	; 0xa4
 802105c:	f109 0902 	add.w	r9, r9, #2
 8021060:	441d      	add	r5, r3
 8021062:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021066:	e63d      	b.n	8020ce4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8021068:	2800      	cmp	r0, #0
 802106a:	f43f aedd 	beq.w	8020e28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802106e:	5c79      	ldrb	r1, [r7, r1]
 8021070:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021074:	910b      	str	r1, [sp, #44]	; 0x2c
 8021076:	0e09      	lsrs	r1, r1, #24
 8021078:	9114      	str	r1, [sp, #80]	; 0x50
 802107a:	e6d5      	b.n	8020e28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802107c:	b01f      	add	sp, #124	; 0x7c
 802107e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021082 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8021082:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021086:	b089      	sub	sp, #36	; 0x24
 8021088:	9101      	str	r1, [sp, #4]
 802108a:	9801      	ldr	r0, [sp, #4]
 802108c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8021090:	8800      	ldrh	r0, [r0, #0]
 8021092:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8021096:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 802109a:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802109e:	1206      	asrs	r6, r0, #8
 80210a0:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 80210a4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80210a8:	9602      	str	r6, [sp, #8]
 80210aa:	10c6      	asrs	r6, r0, #3
 80210ac:	00c0      	lsls	r0, r0, #3
 80210ae:	b2c0      	uxtb	r0, r0
 80210b0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80210b4:	9004      	str	r0, [sp, #16]
 80210b6:	2f00      	cmp	r7, #0
 80210b8:	fb07 100c 	mla	r0, r7, ip, r1
 80210bc:	9603      	str	r6, [sp, #12]
 80210be:	eb02 0e00 	add.w	lr, r2, r0
 80210c2:	f2c0 810a 	blt.w	80212da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80210c6:	45b8      	cmp	r8, r7
 80210c8:	f340 8107 	ble.w	80212da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80210cc:	2900      	cmp	r1, #0
 80210ce:	f2c0 8102 	blt.w	80212d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80210d2:	458c      	cmp	ip, r1
 80210d4:	f340 80ff 	ble.w	80212d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80210d8:	5c12      	ldrb	r2, [r2, r0]
 80210da:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80210de:	1c4a      	adds	r2, r1, #1
 80210e0:	f100 80fe 	bmi.w	80212e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80210e4:	4594      	cmp	ip, r2
 80210e6:	f340 80fb 	ble.w	80212e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80210ea:	2d00      	cmp	r5, #0
 80210ec:	f000 80fa 	beq.w	80212e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 80210f0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80210f4:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80210f8:	3701      	adds	r7, #1
 80210fa:	f100 80f7 	bmi.w	80212ec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80210fe:	45b8      	cmp	r8, r7
 8021100:	f340 80f4 	ble.w	80212ec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8021104:	2c00      	cmp	r4, #0
 8021106:	f000 80f4 	beq.w	80212f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 802110a:	2900      	cmp	r1, #0
 802110c:	eb0e 020c 	add.w	r2, lr, ip
 8021110:	f2c0 80ea 	blt.w	80212e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8021114:	458c      	cmp	ip, r1
 8021116:	f340 80e7 	ble.w	80212e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 802111a:	f81e 700c 	ldrb.w	r7, [lr, ip]
 802111e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8021122:	3101      	adds	r1, #1
 8021124:	f100 80e8 	bmi.w	80212f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8021128:	458c      	cmp	ip, r1
 802112a:	f340 80e5 	ble.w	80212f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 802112e:	2d00      	cmp	r5, #0
 8021130:	f000 80e4 	beq.w	80212fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8021134:	7852      	ldrb	r2, [r2, #1]
 8021136:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 802113a:	0e0b      	lsrs	r3, r1, #24
 802113c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8021140:	9300      	str	r3, [sp, #0]
 8021142:	b2a4      	uxth	r4, r4
 8021144:	b2ab      	uxth	r3, r5
 8021146:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 802114a:	fb03 f904 	mul.w	r9, r3, r4
 802114e:	fb0a f505 	mul.w	r5, sl, r5
 8021152:	011b      	lsls	r3, r3, #4
 8021154:	eba3 0e09 	sub.w	lr, r3, r9
 8021158:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 802115c:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8021160:	0a28      	lsrs	r0, r5, #8
 8021162:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021166:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 802116a:	4405      	add	r5, r0
 802116c:	0a2d      	lsrs	r5, r5, #8
 802116e:	fb0a f303 	mul.w	r3, sl, r3
 8021172:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8021176:	9005      	str	r0, [sp, #20]
 8021178:	f503 7080 	add.w	r0, r3, #256	; 0x100
 802117c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8021180:	0a1b      	lsrs	r3, r3, #8
 8021182:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8021186:	9306      	str	r3, [sp, #24]
 8021188:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 802118c:	fb0b f303 	mul.w	r3, fp, r3
 8021190:	0a1d      	lsrs	r5, r3, #8
 8021192:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021196:	ea4f 6817 	mov.w	r8, r7, lsr #24
 802119a:	fb0b f606 	mul.w	r6, fp, r6
 802119e:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80211a2:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80211a6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80211aa:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80211ae:	fb08 f707 	mul.w	r7, r8, r7
 80211b2:	441d      	add	r5, r3
 80211b4:	f506 7380 	add.w	r3, r6, #256	; 0x100
 80211b8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80211bc:	f507 7380 	add.w	r3, r7, #256	; 0x100
 80211c0:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80211c4:	fb08 fc0c 	mul.w	ip, r8, ip
 80211c8:	0a1b      	lsrs	r3, r3, #8
 80211ca:	9307      	str	r3, [sp, #28]
 80211cc:	ea4f 201c 	mov.w	r0, ip, lsr #8
 80211d0:	0e0b      	lsrs	r3, r1, #24
 80211d2:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 80211d6:	435f      	muls	r7, r3
 80211d8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80211dc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80211e0:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 80211e4:	4460      	add	r0, ip
 80211e6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80211ea:	b2a4      	uxth	r4, r4
 80211ec:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80211f0:	0a2d      	lsrs	r5, r5, #8
 80211f2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80211f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80211fa:	fa1f fe8e 	uxth.w	lr, lr
 80211fe:	4359      	muls	r1, r3
 8021200:	1b12      	subs	r2, r2, r4
 8021202:	9b05      	ldr	r3, [sp, #20]
 8021204:	44bc      	add	ip, r7
 8021206:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802120a:	b292      	uxth	r2, r2
 802120c:	fb05 f50e 	mul.w	r5, r5, lr
 8021210:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021214:	fb03 5502 	mla	r5, r3, r2, r5
 8021218:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802121c:	9b06      	ldr	r3, [sp, #24]
 802121e:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8021222:	0a36      	lsrs	r6, r6, #8
 8021224:	0a00      	lsrs	r0, r0, #8
 8021226:	fb0c 5509 	mla	r5, ip, r9, r5
 802122a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802122e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8021232:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021236:	fb00 5504 	mla	r5, r0, r4, r5
 802123a:	fb0e f606 	mul.w	r6, lr, r6
 802123e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8021242:	0a09      	lsrs	r1, r1, #8
 8021244:	9b07      	ldr	r3, [sp, #28]
 8021246:	fb02 6000 	mla	r0, r2, r0, r6
 802124a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802124e:	fb09 0001 	mla	r0, r9, r1, r0
 8021252:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021256:	fb0e fe0b 	mul.w	lr, lr, fp
 802125a:	fb04 0003 	mla	r0, r4, r3, r0
 802125e:	fb02 e20a 	mla	r2, r2, sl, lr
 8021262:	9b00      	ldr	r3, [sp, #0]
 8021264:	fb04 2408 	mla	r4, r4, r8, r2
 8021268:	fb09 4903 	mla	r9, r9, r3, r4
 802126c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8021270:	9b02      	ldr	r3, [sp, #8]
 8021272:	9a04      	ldr	r2, [sp, #16]
 8021274:	fa5f f989 	uxtb.w	r9, r9
 8021278:	fb03 f109 	mul.w	r1, r3, r9
 802127c:	9b03      	ldr	r3, [sp, #12]
 802127e:	0a2d      	lsrs	r5, r5, #8
 8021280:	0a00      	lsrs	r0, r0, #8
 8021282:	fb03 f309 	mul.w	r3, r3, r9
 8021286:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 802128a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802128e:	4305      	orrs	r5, r0
 8021290:	fb02 f909 	mul.w	r9, r2, r9
 8021294:	1c58      	adds	r0, r3, #1
 8021296:	1c4a      	adds	r2, r1, #1
 8021298:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802129c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80212a0:	0a2b      	lsrs	r3, r5, #8
 80212a2:	0c2a      	lsrs	r2, r5, #16
 80212a4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80212a8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80212ac:	00db      	lsls	r3, r3, #3
 80212ae:	0212      	lsls	r2, r2, #8
 80212b0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80212b4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80212b8:	4313      	orrs	r3, r2
 80212ba:	f109 0201 	add.w	r2, r9, #1
 80212be:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 80212c2:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 80212c6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80212ca:	431d      	orrs	r5, r3
 80212cc:	9b01      	ldr	r3, [sp, #4]
 80212ce:	801d      	strh	r5, [r3, #0]
 80212d0:	b009      	add	sp, #36	; 0x24
 80212d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80212d6:	2000      	movs	r0, #0
 80212d8:	e701      	b.n	80210de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 80212da:	2600      	movs	r6, #0
 80212dc:	4630      	mov	r0, r6
 80212de:	e70b      	b.n	80210f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80212e0:	2600      	movs	r6, #0
 80212e2:	e709      	b.n	80210f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80212e4:	462e      	mov	r6, r5
 80212e6:	e707      	b.n	80210f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80212e8:	2700      	movs	r7, #0
 80212ea:	e71a      	b.n	8021122 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 80212ec:	2100      	movs	r1, #0
 80212ee:	460f      	mov	r7, r1
 80212f0:	e723      	b.n	802113a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80212f2:	4621      	mov	r1, r4
 80212f4:	4627      	mov	r7, r4
 80212f6:	e720      	b.n	802113a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80212f8:	2100      	movs	r1, #0
 80212fa:	e71e      	b.n	802113a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80212fc:	4629      	mov	r1, r5
 80212fe:	e71c      	b.n	802113a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08021300 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021304:	b09b      	sub	sp, #108	; 0x6c
 8021306:	9218      	str	r2, [sp, #96]	; 0x60
 8021308:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802130a:	9116      	str	r1, [sp, #88]	; 0x58
 802130c:	9307      	str	r3, [sp, #28]
 802130e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8021312:	9019      	str	r0, [sp, #100]	; 0x64
 8021314:	6850      	ldr	r0, [r2, #4]
 8021316:	6812      	ldr	r2, [r2, #0]
 8021318:	9d26      	ldr	r5, [sp, #152]	; 0x98
 802131a:	fb00 1303 	mla	r3, r0, r3, r1
 802131e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021322:	930a      	str	r3, [sp, #40]	; 0x28
 8021324:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021326:	681b      	ldr	r3, [r3, #0]
 8021328:	930f      	str	r3, [sp, #60]	; 0x3c
 802132a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802132c:	685e      	ldr	r6, [r3, #4]
 802132e:	3604      	adds	r6, #4
 8021330:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021332:	2b00      	cmp	r3, #0
 8021334:	dc03      	bgt.n	802133e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8021336:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021338:	2b00      	cmp	r3, #0
 802133a:	f340 8373 	ble.w	8021a24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 802133e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021340:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021344:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021348:	1e48      	subs	r0, r1, #1
 802134a:	1e57      	subs	r7, r2, #1
 802134c:	9b07      	ldr	r3, [sp, #28]
 802134e:	2b00      	cmp	r3, #0
 8021350:	f340 8190 	ble.w	8021674 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8021354:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021356:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802135a:	ea4f 4325 	mov.w	r3, r5, asr #16
 802135e:	d406      	bmi.n	802136e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021360:	4584      	cmp	ip, r0
 8021362:	da04      	bge.n	802136e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021364:	2b00      	cmp	r3, #0
 8021366:	db02      	blt.n	802136e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021368:	42bb      	cmp	r3, r7
 802136a:	f2c0 8184 	blt.w	8021676 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 802136e:	f11c 0c01 	adds.w	ip, ip, #1
 8021372:	f100 8172 	bmi.w	802165a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021376:	4561      	cmp	r1, ip
 8021378:	f2c0 816f 	blt.w	802165a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802137c:	3301      	adds	r3, #1
 802137e:	f100 816c 	bmi.w	802165a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021382:	429a      	cmp	r2, r3
 8021384:	f2c0 8169 	blt.w	802165a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021388:	9b07      	ldr	r3, [sp, #28]
 802138a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802138c:	9317      	str	r3, [sp, #92]	; 0x5c
 802138e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021390:	2b00      	cmp	r3, #0
 8021392:	f340 818e 	ble.w	80216b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8021396:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021398:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802139c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802139e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 80213a2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80213a4:	141b      	asrs	r3, r3, #16
 80213a6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80213aa:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80213ae:	f100 81d1 	bmi.w	8021754 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80213b2:	f101 38ff 	add.w	r8, r1, #4294967295
 80213b6:	4543      	cmp	r3, r8
 80213b8:	f280 81cc 	bge.w	8021754 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80213bc:	f1bc 0f00 	cmp.w	ip, #0
 80213c0:	f2c0 81c8 	blt.w	8021754 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80213c4:	f10e 38ff 	add.w	r8, lr, #4294967295
 80213c8:	45c4      	cmp	ip, r8
 80213ca:	f280 81c3 	bge.w	8021754 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80213ce:	b209      	sxth	r1, r1
 80213d0:	fb0c 3301 	mla	r3, ip, r1, r3
 80213d4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80213d6:	eb04 0803 	add.w	r8, r4, r3
 80213da:	5ce3      	ldrb	r3, [r4, r3]
 80213dc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80213e0:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80213e4:	2a00      	cmp	r2, #0
 80213e6:	f000 81aa 	beq.w	802173e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 80213ea:	f898 c001 	ldrb.w	ip, [r8, #1]
 80213ee:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80213f2:	940b      	str	r4, [sp, #44]	; 0x2c
 80213f4:	0e24      	lsrs	r4, r4, #24
 80213f6:	9412      	str	r4, [sp, #72]	; 0x48
 80213f8:	b178      	cbz	r0, 802141a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80213fa:	eb08 0c01 	add.w	ip, r8, r1
 80213fe:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021402:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021406:	9108      	str	r1, [sp, #32]
 8021408:	0e09      	lsrs	r1, r1, #24
 802140a:	9110      	str	r1, [sp, #64]	; 0x40
 802140c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8021410:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021414:	910c      	str	r1, [sp, #48]	; 0x30
 8021416:	0e09      	lsrs	r1, r1, #24
 8021418:	9113      	str	r1, [sp, #76]	; 0x4c
 802141a:	b292      	uxth	r2, r2
 802141c:	b280      	uxth	r0, r0
 802141e:	fb02 f900 	mul.w	r9, r2, r0
 8021422:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021426:	0112      	lsls	r2, r2, #4
 8021428:	eba2 0809 	sub.w	r8, r2, r9
 802142c:	b280      	uxth	r0, r0
 802142e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021432:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021434:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021436:	fa1f f888 	uxth.w	r8, r8
 802143a:	1a12      	subs	r2, r2, r0
 802143c:	b292      	uxth	r2, r2
 802143e:	fb08 f101 	mul.w	r1, r8, r1
 8021442:	fb02 110e 	mla	r1, r2, lr, r1
 8021446:	fb00 1104 	mla	r1, r0, r4, r1
 802144a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802144c:	fb09 1104 	mla	r1, r9, r4, r1
 8021450:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021454:	2900      	cmp	r1, #0
 8021456:	f000 80f5 	beq.w	8021644 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802145a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802145e:	d01b      	beq.n	8021498 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021460:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021464:	fb0e fa0a 	mul.w	sl, lr, sl
 8021468:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802146c:	fb0e fe03 	mul.w	lr, lr, r3
 8021470:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021474:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021478:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802147c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021480:	4453      	add	r3, sl
 8021482:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021486:	0a1b      	lsrs	r3, r3, #8
 8021488:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802148c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021490:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021494:	ea43 030c 	orr.w	r3, r3, ip
 8021498:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802149a:	2cff      	cmp	r4, #255	; 0xff
 802149c:	d021      	beq.n	80214e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 802149e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80214a0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80214a4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80214a6:	fb04 fb0b 	mul.w	fp, r4, fp
 80214aa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80214ac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80214b0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80214b2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80214b6:	fb04 fa0a 	mul.w	sl, r4, sl
 80214ba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80214be:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80214c2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80214c6:	44de      	add	lr, fp
 80214c8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80214cc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80214d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80214d4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80214d8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80214dc:	ea4e 040a 	orr.w	r4, lr, sl
 80214e0:	940b      	str	r4, [sp, #44]	; 0x2c
 80214e2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80214e4:	2cff      	cmp	r4, #255	; 0xff
 80214e6:	d021      	beq.n	802152c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 80214e8:	9c08      	ldr	r4, [sp, #32]
 80214ea:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80214ee:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80214f0:	fb04 fb0b 	mul.w	fp, r4, fp
 80214f4:	9c08      	ldr	r4, [sp, #32]
 80214f6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80214fa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80214fc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021500:	fb04 fa0a 	mul.w	sl, r4, sl
 8021504:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021508:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802150c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021510:	44de      	add	lr, fp
 8021512:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021516:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802151a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802151e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021522:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021526:	ea4e 040a 	orr.w	r4, lr, sl
 802152a:	9408      	str	r4, [sp, #32]
 802152c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802152e:	2cff      	cmp	r4, #255	; 0xff
 8021530:	d021      	beq.n	8021576 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021532:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021534:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021538:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802153a:	fb04 fb0b 	mul.w	fp, r4, fp
 802153e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021540:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021544:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021546:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802154a:	fb04 fa0a 	mul.w	sl, r4, sl
 802154e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021552:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021556:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802155a:	44de      	add	lr, fp
 802155c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021560:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021564:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021568:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802156c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021570:	ea4e 040a 	orr.w	r4, lr, sl
 8021574:	940c      	str	r4, [sp, #48]	; 0x30
 8021576:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021578:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802157c:	9c08      	ldr	r4, [sp, #32]
 802157e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021582:	fb08 fc0c 	mul.w	ip, r8, ip
 8021586:	fb02 cc0e 	mla	ip, r2, lr, ip
 802158a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802158e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021590:	fb00 cc0e 	mla	ip, r0, lr, ip
 8021594:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021598:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802159a:	fb09 cc0e 	mla	ip, r9, lr, ip
 802159e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80215a2:	fb08 f80e 	mul.w	r8, r8, lr
 80215a6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80215aa:	fb02 8303 	mla	r3, r2, r3, r8
 80215ae:	9a08      	ldr	r2, [sp, #32]
 80215b0:	f8b7 8000 	ldrh.w	r8, [r7]
 80215b4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80215b8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80215ba:	fb00 330a 	mla	r3, r0, sl, r3
 80215be:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80215c2:	fb09 3900 	mla	r9, r9, r0, r3
 80215c6:	43c9      	mvns	r1, r1
 80215c8:	ea4f 2228 	mov.w	r2, r8, asr #8
 80215cc:	fa5f fe81 	uxtb.w	lr, r1
 80215d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80215d4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80215d8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80215dc:	fb02 f20e 	mul.w	r2, r2, lr
 80215e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80215e4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80215e8:	ea4c 0c09 	orr.w	ip, ip, r9
 80215ec:	1c53      	adds	r3, r2, #1
 80215ee:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80215f2:	ea4f 00e8 	mov.w	r0, r8, asr #3
 80215f6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80215fa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80215fe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021602:	4a63      	ldr	r2, [pc, #396]	; (8021790 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8021604:	fb00 f00e 	mul.w	r0, r0, lr
 8021608:	b2db      	uxtb	r3, r3
 802160a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 802160e:	1c43      	adds	r3, r0, #1
 8021610:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021614:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8021618:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 802161c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021620:	b2c9      	uxtb	r1, r1
 8021622:	00db      	lsls	r3, r3, #3
 8021624:	fb01 f10e 	mul.w	r1, r1, lr
 8021628:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802162c:	4313      	orrs	r3, r2
 802162e:	1c4a      	adds	r2, r1, #1
 8021630:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021634:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021638:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 802163c:	ea4c 0c03 	orr.w	ip, ip, r3
 8021640:	f8a7 c000 	strh.w	ip, [r7]
 8021644:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021646:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021648:	441a      	add	r2, r3
 802164a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802164c:	9225      	str	r2, [sp, #148]	; 0x94
 802164e:	441d      	add	r5, r3
 8021650:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021652:	3b01      	subs	r3, #1
 8021654:	3702      	adds	r7, #2
 8021656:	9317      	str	r3, [sp, #92]	; 0x5c
 8021658:	e699      	b.n	802138e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802165a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802165c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 802165e:	441c      	add	r4, r3
 8021660:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021662:	9425      	str	r4, [sp, #148]	; 0x94
 8021664:	441d      	add	r5, r3
 8021666:	9b07      	ldr	r3, [sp, #28]
 8021668:	3b01      	subs	r3, #1
 802166a:	9307      	str	r3, [sp, #28]
 802166c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802166e:	3302      	adds	r3, #2
 8021670:	930a      	str	r3, [sp, #40]	; 0x28
 8021672:	e66b      	b.n	802134c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8021674:	d024      	beq.n	80216c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8021676:	9b07      	ldr	r3, [sp, #28]
 8021678:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802167a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 802167c:	3b01      	subs	r3, #1
 802167e:	fb00 4003 	mla	r0, r0, r3, r4
 8021682:	1400      	asrs	r0, r0, #16
 8021684:	f53f ae80 	bmi.w	8021388 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021688:	3901      	subs	r1, #1
 802168a:	4288      	cmp	r0, r1
 802168c:	f6bf ae7c 	bge.w	8021388 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021690:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021692:	fb01 5303 	mla	r3, r1, r3, r5
 8021696:	141b      	asrs	r3, r3, #16
 8021698:	f53f ae76 	bmi.w	8021388 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802169c:	3a01      	subs	r2, #1
 802169e:	4293      	cmp	r3, r2
 80216a0:	f6bf ae72 	bge.w	8021388 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80216a4:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80216a8:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80216ac:	f1bb 0f00 	cmp.w	fp, #0
 80216b0:	dc70      	bgt.n	8021794 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80216b2:	9b07      	ldr	r3, [sp, #28]
 80216b4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80216b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80216ba:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80216be:	930a      	str	r3, [sp, #40]	; 0x28
 80216c0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80216c2:	2b00      	cmp	r3, #0
 80216c4:	f340 81ae 	ble.w	8021a24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80216c8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80216cc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80216d0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80216d4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80216d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80216da:	ee31 1a05 	vadd.f32	s2, s2, s10
 80216de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80216e2:	eef0 6a62 	vmov.f32	s13, s5
 80216e6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80216ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80216ee:	ee77 2a62 	vsub.f32	s5, s14, s5
 80216f2:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80216f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80216fa:	eef0 6a43 	vmov.f32	s13, s6
 80216fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021702:	ee12 2a90 	vmov	r2, s5
 8021706:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802170a:	fb92 f3f3 	sdiv	r3, r2, r3
 802170e:	ee13 2a10 	vmov	r2, s6
 8021712:	9327      	str	r3, [sp, #156]	; 0x9c
 8021714:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021716:	fb92 f3f3 	sdiv	r3, r2, r3
 802171a:	9328      	str	r3, [sp, #160]	; 0xa0
 802171c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802171e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8021720:	3b01      	subs	r3, #1
 8021722:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021726:	9316      	str	r3, [sp, #88]	; 0x58
 8021728:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802172a:	bf08      	it	eq
 802172c:	4613      	moveq	r3, r2
 802172e:	ee16 5a90 	vmov	r5, s13
 8021732:	9307      	str	r3, [sp, #28]
 8021734:	eeb0 3a67 	vmov.f32	s6, s15
 8021738:	eef0 2a47 	vmov.f32	s5, s14
 802173c:	e5f8      	b.n	8021330 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 802173e:	2800      	cmp	r0, #0
 8021740:	f43f ae6b 	beq.w	802141a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021744:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021748:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802174c:	9108      	str	r1, [sp, #32]
 802174e:	0e09      	lsrs	r1, r1, #24
 8021750:	9110      	str	r1, [sp, #64]	; 0x40
 8021752:	e662      	b.n	802141a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021754:	f113 0801 	adds.w	r8, r3, #1
 8021758:	f53f af74 	bmi.w	8021644 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802175c:	4541      	cmp	r1, r8
 802175e:	f6ff af71 	blt.w	8021644 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021762:	f11c 0801 	adds.w	r8, ip, #1
 8021766:	f53f af6d 	bmi.w	8021644 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802176a:	45c6      	cmp	lr, r8
 802176c:	f6ff af6a 	blt.w	8021644 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021770:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8021774:	b209      	sxth	r1, r1
 8021776:	fa0f f38e 	sxth.w	r3, lr
 802177a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 802177e:	9301      	str	r3, [sp, #4]
 8021780:	9100      	str	r1, [sp, #0]
 8021782:	4633      	mov	r3, r6
 8021784:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021786:	9819      	ldr	r0, [sp, #100]	; 0x64
 8021788:	4639      	mov	r1, r7
 802178a:	f7ff fc7a 	bl	8021082 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 802178e:	e759      	b.n	8021644 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021790:	fffff800 	.word	0xfffff800
 8021794:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021796:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021798:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802179c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802179e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80217a2:	1427      	asrs	r7, r4, #16
 80217a4:	142b      	asrs	r3, r5, #16
 80217a6:	fb01 7303 	mla	r3, r1, r3, r7
 80217aa:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80217ac:	18e7      	adds	r7, r4, r3
 80217ae:	5ce3      	ldrb	r3, [r4, r3]
 80217b0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80217b4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80217b8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80217bc:	2a00      	cmp	r2, #0
 80217be:	f000 8127 	beq.w	8021a10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80217c2:	f897 e001 	ldrb.w	lr, [r7, #1]
 80217c6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80217ca:	940d      	str	r4, [sp, #52]	; 0x34
 80217cc:	0e24      	lsrs	r4, r4, #24
 80217ce:	9414      	str	r4, [sp, #80]	; 0x50
 80217d0:	b170      	cbz	r0, 80217f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80217d2:	eb07 0e01 	add.w	lr, r7, r1
 80217d6:	5c79      	ldrb	r1, [r7, r1]
 80217d8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80217dc:	9109      	str	r1, [sp, #36]	; 0x24
 80217de:	0e09      	lsrs	r1, r1, #24
 80217e0:	9111      	str	r1, [sp, #68]	; 0x44
 80217e2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80217e6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80217ea:	910e      	str	r1, [sp, #56]	; 0x38
 80217ec:	0e09      	lsrs	r1, r1, #24
 80217ee:	9115      	str	r1, [sp, #84]	; 0x54
 80217f0:	b292      	uxth	r2, r2
 80217f2:	b280      	uxth	r0, r0
 80217f4:	fb02 f800 	mul.w	r8, r2, r0
 80217f8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80217fc:	0112      	lsls	r2, r2, #4
 80217fe:	eba2 0e08 	sub.w	lr, r2, r8
 8021802:	b280      	uxth	r0, r0
 8021804:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8021808:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802180a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802180c:	fa1f fe8e 	uxth.w	lr, lr
 8021810:	1a09      	subs	r1, r1, r0
 8021812:	b289      	uxth	r1, r1
 8021814:	fb0e f202 	mul.w	r2, lr, r2
 8021818:	fb01 220c 	mla	r2, r1, ip, r2
 802181c:	fb00 2204 	mla	r2, r0, r4, r2
 8021820:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021822:	fb08 2204 	mla	r2, r8, r4, r2
 8021826:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802182a:	2a00      	cmp	r2, #0
 802182c:	f000 80e5 	beq.w	80219fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8021830:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8021834:	d019      	beq.n	802186a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8021836:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802183a:	fb0c fa0a 	mul.w	sl, ip, sl
 802183e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021842:	fb0c fc03 	mul.w	ip, ip, r3
 8021846:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802184a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802184e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021852:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8021856:	4453      	add	r3, sl
 8021858:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802185c:	0a1b      	lsrs	r3, r3, #8
 802185e:	0a3f      	lsrs	r7, r7, #8
 8021860:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021864:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021868:	433b      	orrs	r3, r7
 802186a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802186c:	2cff      	cmp	r4, #255	; 0xff
 802186e:	d020      	beq.n	80218b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8021870:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021872:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021876:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021878:	4367      	muls	r7, r4
 802187a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802187c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021880:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021882:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021886:	fb04 fa0a 	mul.w	sl, r4, sl
 802188a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802188e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021892:	44bc      	add	ip, r7
 8021894:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021898:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802189c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80218a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80218a4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80218a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80218ac:	ea4c 040a 	orr.w	r4, ip, sl
 80218b0:	940d      	str	r4, [sp, #52]	; 0x34
 80218b2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80218b4:	2cff      	cmp	r4, #255	; 0xff
 80218b6:	d020      	beq.n	80218fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80218b8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80218ba:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80218be:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80218c0:	4367      	muls	r7, r4
 80218c2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80218c4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80218c8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80218ca:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80218ce:	fb04 fa0a 	mul.w	sl, r4, sl
 80218d2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80218d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80218da:	44bc      	add	ip, r7
 80218dc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80218e0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80218e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80218e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80218ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80218f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80218f4:	ea4c 040a 	orr.w	r4, ip, sl
 80218f8:	9409      	str	r4, [sp, #36]	; 0x24
 80218fa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80218fc:	2cff      	cmp	r4, #255	; 0xff
 80218fe:	d020      	beq.n	8021942 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8021900:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021902:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021906:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021908:	4367      	muls	r7, r4
 802190a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802190c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021910:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021912:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021916:	fb04 fa0a 	mul.w	sl, r4, sl
 802191a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802191e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021922:	44bc      	add	ip, r7
 8021924:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021928:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802192c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021930:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021934:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021938:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802193c:	ea4c 040a 	orr.w	r4, ip, sl
 8021940:	940e      	str	r4, [sp, #56]	; 0x38
 8021942:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021944:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021948:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802194a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802194e:	fb0e f707 	mul.w	r7, lr, r7
 8021952:	fb01 770c 	mla	r7, r1, ip, r7
 8021956:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802195a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802195c:	fb00 770c 	mla	r7, r0, ip, r7
 8021960:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021964:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021966:	fb08 770c 	mla	r7, r8, ip, r7
 802196a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802196e:	fb0e fe0c 	mul.w	lr, lr, ip
 8021972:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021976:	fb01 e303 	mla	r3, r1, r3, lr
 802197a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802197c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8021980:	990e      	ldr	r1, [sp, #56]	; 0x38
 8021982:	fb00 330a 	mla	r3, r0, sl, r3
 8021986:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802198a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802198e:	f8b9 3000 	ldrh.w	r3, [r9]
 8021992:	43d2      	mvns	r2, r2
 8021994:	1218      	asrs	r0, r3, #8
 8021996:	b2d2      	uxtb	r2, r2
 8021998:	10d9      	asrs	r1, r3, #3
 802199a:	0a3f      	lsrs	r7, r7, #8
 802199c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80219a0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80219a4:	00db      	lsls	r3, r3, #3
 80219a6:	4350      	muls	r0, r2
 80219a8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80219ac:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80219b0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80219b4:	b2db      	uxtb	r3, r3
 80219b6:	ea47 070c 	orr.w	r7, r7, ip
 80219ba:	4351      	muls	r1, r2
 80219bc:	4353      	muls	r3, r2
 80219be:	1c42      	adds	r2, r0, #1
 80219c0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80219c4:	0c3a      	lsrs	r2, r7, #16
 80219c6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80219ca:	4a18      	ldr	r2, [pc, #96]	; (8021a2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80219cc:	b2c0      	uxtb	r0, r0
 80219ce:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80219d2:	1c4a      	adds	r2, r1, #1
 80219d4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80219d8:	0a3a      	lsrs	r2, r7, #8
 80219da:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80219de:	00c9      	lsls	r1, r1, #3
 80219e0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80219e4:	4301      	orrs	r1, r0
 80219e6:	1c58      	adds	r0, r3, #1
 80219e8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80219ec:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80219f0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80219f4:	4308      	orrs	r0, r1
 80219f6:	f8a9 0000 	strh.w	r0, [r9]
 80219fa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80219fc:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80219fe:	441a      	add	r2, r3
 8021a00:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021a02:	9225      	str	r2, [sp, #148]	; 0x94
 8021a04:	f109 0902 	add.w	r9, r9, #2
 8021a08:	441d      	add	r5, r3
 8021a0a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021a0e:	e64d      	b.n	80216ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8021a10:	2800      	cmp	r0, #0
 8021a12:	f43f aeed 	beq.w	80217f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8021a16:	5c79      	ldrb	r1, [r7, r1]
 8021a18:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021a1c:	9109      	str	r1, [sp, #36]	; 0x24
 8021a1e:	0e09      	lsrs	r1, r1, #24
 8021a20:	9111      	str	r1, [sp, #68]	; 0x44
 8021a22:	e6e5      	b.n	80217f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8021a24:	b01b      	add	sp, #108	; 0x6c
 8021a26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021a2a:	bf00      	nop
 8021a2c:	fffff800 	.word	0xfffff800

08021a30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8021a30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a34:	b085      	sub	sp, #20
 8021a36:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8021a3a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021a3e:	9103      	str	r1, [sp, #12]
 8021a40:	fb00 7406 	mla	r4, r0, r6, r7
 8021a44:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8021a48:	2800      	cmp	r0, #0
 8021a4a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8021a4e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8021a52:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8021a56:	9501      	str	r5, [sp, #4]
 8021a58:	eb03 0904 	add.w	r9, r3, r4
 8021a5c:	f2c0 8150 	blt.w	8021d00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021a60:	4583      	cmp	fp, r0
 8021a62:	f340 814d 	ble.w	8021d00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021a66:	2f00      	cmp	r7, #0
 8021a68:	f2c0 8146 	blt.w	8021cf8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8021a6c:	42be      	cmp	r6, r7
 8021a6e:	f340 8143 	ble.w	8021cf8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8021a72:	f813 c004 	ldrb.w	ip, [r3, r4]
 8021a76:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8021a7a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021a7e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8021a82:	4355      	muls	r5, r2
 8021a84:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021a88:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8021a8c:	fb0c f203 	mul.w	r2, ip, r3
 8021a90:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021a94:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021a98:	441d      	add	r5, r3
 8021a9a:	f102 0320 	add.w	r3, r2, #32
 8021a9e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021aa2:	0a1b      	lsrs	r3, r3, #8
 8021aa4:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021aa8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021aac:	431c      	orrs	r4, r3
 8021aae:	1c7b      	adds	r3, r7, #1
 8021ab0:	f100 812b 	bmi.w	8021d0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8021ab4:	429e      	cmp	r6, r3
 8021ab6:	f340 8128 	ble.w	8021d0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8021aba:	2900      	cmp	r1, #0
 8021abc:	f000 8128 	beq.w	8021d10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8021ac0:	9a01      	ldr	r2, [sp, #4]
 8021ac2:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021ac6:	8855      	ldrh	r5, [r2, #2]
 8021ac8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021acc:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8021ad0:	fb08 f802 	mul.w	r8, r8, r2
 8021ad4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021ad8:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8021adc:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021ae0:	435d      	muls	r5, r3
 8021ae2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021ae6:	44d0      	add	r8, sl
 8021ae8:	f105 0a20 	add.w	sl, r5, #32
 8021aec:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021af0:	0a2d      	lsrs	r5, r5, #8
 8021af2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021af6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021afa:	432a      	orrs	r2, r5
 8021afc:	3001      	adds	r0, #1
 8021afe:	f100 810d 	bmi.w	8021d1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8021b02:	4583      	cmp	fp, r0
 8021b04:	f340 810a 	ble.w	8021d1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8021b08:	f1be 0f00 	cmp.w	lr, #0
 8021b0c:	f000 810b 	beq.w	8021d26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8021b10:	2f00      	cmp	r7, #0
 8021b12:	f2c0 8100 	blt.w	8021d16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8021b16:	42be      	cmp	r6, r7
 8021b18:	f340 80fd 	ble.w	8021d16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8021b1c:	9801      	ldr	r0, [sp, #4]
 8021b1e:	f819 5006 	ldrb.w	r5, [r9, r6]
 8021b22:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8021b26:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021b2a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8021b2e:	fb0a fa00 	mul.w	sl, sl, r0
 8021b32:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8021b36:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8021b3a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021b3e:	fb05 f808 	mul.w	r8, r5, r8
 8021b42:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8021b46:	4482      	add	sl, r0
 8021b48:	f108 0020 	add.w	r0, r8, #32
 8021b4c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021b50:	0a00      	lsrs	r0, r0, #8
 8021b52:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021b56:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021b5a:	ea4b 0b00 	orr.w	fp, fp, r0
 8021b5e:	3701      	adds	r7, #1
 8021b60:	f100 80e6 	bmi.w	8021d30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021b64:	42be      	cmp	r6, r7
 8021b66:	f340 80e3 	ble.w	8021d30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021b6a:	2900      	cmp	r1, #0
 8021b6c:	f000 80e3 	beq.w	8021d36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8021b70:	3601      	adds	r6, #1
 8021b72:	9801      	ldr	r0, [sp, #4]
 8021b74:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021b78:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021b7c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021b80:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8021b84:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021b88:	fb09 f906 	mul.w	r9, r9, r6
 8021b8c:	fb07 f800 	mul.w	r8, r7, r0
 8021b90:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8021b94:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021b98:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8021b9c:	44d1      	add	r9, sl
 8021b9e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8021ba2:	f108 0020 	add.w	r0, r8, #32
 8021ba6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021baa:	0a00      	lsrs	r0, r0, #8
 8021bac:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021bb0:	4330      	orrs	r0, r6
 8021bb2:	b28e      	uxth	r6, r1
 8021bb4:	fa1f f98e 	uxth.w	r9, lr
 8021bb8:	fb06 f809 	mul.w	r8, r6, r9
 8021bbc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021bc0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021bc4:	0136      	lsls	r6, r6, #4
 8021bc6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021bca:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8021bce:	9601      	str	r6, [sp, #4]
 8021bd0:	ea4a 0404 	orr.w	r4, sl, r4
 8021bd4:	fa1f f689 	uxth.w	r6, r9
 8021bd8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021bdc:	fb11 f90e 	smulbb	r9, r1, lr
 8021be0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8021be4:	9602      	str	r6, [sp, #8]
 8021be6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021bea:	4626      	mov	r6, r4
 8021bec:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021bf0:	f1ce 0410 	rsb	r4, lr, #16
 8021bf4:	1a64      	subs	r4, r4, r1
 8021bf6:	ea4a 0202 	orr.w	r2, sl, r2
 8021bfa:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021bfe:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021c02:	434a      	muls	r2, r1
 8021c04:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021c08:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021c0c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021c10:	fb04 2406 	mla	r4, r4, r6, r2
 8021c14:	ea4a 0000 	orr.w	r0, sl, r0
 8021c18:	fb09 4200 	mla	r2, r9, r0, r4
 8021c1c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021c20:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021c24:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021c28:	ea44 0b0b 	orr.w	fp, r4, fp
 8021c2c:	9c01      	ldr	r4, [sp, #4]
 8021c2e:	9e02      	ldr	r6, [sp, #8]
 8021c30:	9903      	ldr	r1, [sp, #12]
 8021c32:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8021c36:	1ba4      	subs	r4, r4, r6
 8021c38:	9e01      	ldr	r6, [sp, #4]
 8021c3a:	8808      	ldrh	r0, [r1, #0]
 8021c3c:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8021c40:	eba6 0608 	sub.w	r6, r6, r8
 8021c44:	b2b6      	uxth	r6, r6
 8021c46:	b2a4      	uxth	r4, r4
 8021c48:	4373      	muls	r3, r6
 8021c4a:	fb0c 3304 	mla	r3, ip, r4, r3
 8021c4e:	9c02      	ldr	r4, [sp, #8]
 8021c50:	fb04 3505 	mla	r5, r4, r5, r3
 8021c54:	fb08 5707 	mla	r7, r8, r7, r5
 8021c58:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021c5c:	b289      	uxth	r1, r1
 8021c5e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021c62:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021c66:	434f      	muls	r7, r1
 8021c68:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021c6c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021c70:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021c74:	1c7b      	adds	r3, r7, #1
 8021c76:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021c7a:	ea42 0e0e 	orr.w	lr, r2, lr
 8021c7e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8021c82:	fa1f f28e 	uxth.w	r2, lr
 8021c86:	1203      	asrs	r3, r0, #8
 8021c88:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8021c8c:	b2ff      	uxtb	r7, r7
 8021c8e:	1215      	asrs	r5, r2, #8
 8021c90:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021c94:	fb13 f307 	smulbb	r3, r3, r7
 8021c98:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021c9c:	fb05 3501 	mla	r5, r5, r1, r3
 8021ca0:	10c3      	asrs	r3, r0, #3
 8021ca2:	10d4      	asrs	r4, r2, #3
 8021ca4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021ca8:	fb13 f307 	smulbb	r3, r3, r7
 8021cac:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8021cb0:	fb04 3401 	mla	r4, r4, r1, r3
 8021cb4:	00c3      	lsls	r3, r0, #3
 8021cb6:	00d2      	lsls	r2, r2, #3
 8021cb8:	b2db      	uxtb	r3, r3
 8021cba:	fb13 f307 	smulbb	r3, r3, r7
 8021cbe:	b2d2      	uxtb	r2, r2
 8021cc0:	fb02 3101 	mla	r1, r2, r1, r3
 8021cc4:	b2ad      	uxth	r5, r5
 8021cc6:	b289      	uxth	r1, r1
 8021cc8:	b2a4      	uxth	r4, r4
 8021cca:	1c6b      	adds	r3, r5, #1
 8021ccc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021cd0:	1c62      	adds	r2, r4, #1
 8021cd2:	1c4b      	adds	r3, r1, #1
 8021cd4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021cd8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021cdc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021ce0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021ce4:	0964      	lsrs	r4, r4, #5
 8021ce6:	432b      	orrs	r3, r5
 8021ce8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8021cec:	9a03      	ldr	r2, [sp, #12]
 8021cee:	4323      	orrs	r3, r4
 8021cf0:	8013      	strh	r3, [r2, #0]
 8021cf2:	b005      	add	sp, #20
 8021cf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021cf8:	f04f 0c00 	mov.w	ip, #0
 8021cfc:	4664      	mov	r4, ip
 8021cfe:	e6d6      	b.n	8021aae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8021d00:	2300      	movs	r3, #0
 8021d02:	469c      	mov	ip, r3
 8021d04:	461a      	mov	r2, r3
 8021d06:	461c      	mov	r4, r3
 8021d08:	e6f8      	b.n	8021afc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021d0a:	2300      	movs	r3, #0
 8021d0c:	461a      	mov	r2, r3
 8021d0e:	e6f5      	b.n	8021afc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021d10:	460b      	mov	r3, r1
 8021d12:	460a      	mov	r2, r1
 8021d14:	e6f2      	b.n	8021afc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021d16:	2500      	movs	r5, #0
 8021d18:	46ab      	mov	fp, r5
 8021d1a:	e720      	b.n	8021b5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8021d1c:	2700      	movs	r7, #0
 8021d1e:	463d      	mov	r5, r7
 8021d20:	4638      	mov	r0, r7
 8021d22:	46bb      	mov	fp, r7
 8021d24:	e745      	b.n	8021bb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021d26:	4677      	mov	r7, lr
 8021d28:	4675      	mov	r5, lr
 8021d2a:	4670      	mov	r0, lr
 8021d2c:	46f3      	mov	fp, lr
 8021d2e:	e740      	b.n	8021bb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021d30:	2700      	movs	r7, #0
 8021d32:	4638      	mov	r0, r7
 8021d34:	e73d      	b.n	8021bb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021d36:	460f      	mov	r7, r1
 8021d38:	4608      	mov	r0, r1
 8021d3a:	e73a      	b.n	8021bb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08021d3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021d3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021d40:	b097      	sub	sp, #92	; 0x5c
 8021d42:	9214      	str	r2, [sp, #80]	; 0x50
 8021d44:	9308      	str	r3, [sp, #32]
 8021d46:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021d48:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021d4c:	9312      	str	r3, [sp, #72]	; 0x48
 8021d4e:	9111      	str	r1, [sp, #68]	; 0x44
 8021d50:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8021d54:	9015      	str	r0, [sp, #84]	; 0x54
 8021d56:	6850      	ldr	r0, [r2, #4]
 8021d58:	6812      	ldr	r2, [r2, #0]
 8021d5a:	fb00 1303 	mla	r3, r0, r3, r1
 8021d5e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021d62:	9309      	str	r3, [sp, #36]	; 0x24
 8021d64:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021d66:	681b      	ldr	r3, [r3, #0]
 8021d68:	930b      	str	r3, [sp, #44]	; 0x2c
 8021d6a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021d6c:	685b      	ldr	r3, [r3, #4]
 8021d6e:	930c      	str	r3, [sp, #48]	; 0x30
 8021d70:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8021d74:	930a      	str	r3, [sp, #40]	; 0x28
 8021d76:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021d78:	2b00      	cmp	r3, #0
 8021d7a:	dc03      	bgt.n	8021d84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021d7c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8021d7e:	2b00      	cmp	r3, #0
 8021d80:	f340 83cb 	ble.w	802251a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021d84:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021d86:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021d8a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021d8e:	1e48      	subs	r0, r1, #1
 8021d90:	1e55      	subs	r5, r2, #1
 8021d92:	9b08      	ldr	r3, [sp, #32]
 8021d94:	2b00      	cmp	r3, #0
 8021d96:	f340 81a3 	ble.w	80220e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8021d9a:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8021d9c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021d9e:	1436      	asrs	r6, r6, #16
 8021da0:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021da4:	d406      	bmi.n	8021db4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021da6:	4286      	cmp	r6, r0
 8021da8:	da04      	bge.n	8021db4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021daa:	2b00      	cmp	r3, #0
 8021dac:	db02      	blt.n	8021db4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021dae:	42ab      	cmp	r3, r5
 8021db0:	f2c0 8197 	blt.w	80220e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8021db4:	3601      	adds	r6, #1
 8021db6:	f100 8184 	bmi.w	80220c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021dba:	42b1      	cmp	r1, r6
 8021dbc:	f2c0 8181 	blt.w	80220c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021dc0:	3301      	adds	r3, #1
 8021dc2:	f100 817e 	bmi.w	80220c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021dc6:	429a      	cmp	r2, r3
 8021dc8:	f2c0 817b 	blt.w	80220c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021dcc:	9b08      	ldr	r3, [sp, #32]
 8021dce:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8021dd0:	9313      	str	r3, [sp, #76]	; 0x4c
 8021dd2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021dd6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021dd8:	2b00      	cmp	r3, #0
 8021dda:	f340 81a4 	ble.w	8022126 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8021dde:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021de0:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8021de2:	1418      	asrs	r0, r3, #16
 8021de4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021de6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021dea:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021dec:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021df0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021df2:	142d      	asrs	r5, r5, #16
 8021df4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021df8:	f100 81f8 	bmi.w	80221ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021dfc:	f102 3eff 	add.w	lr, r2, #4294967295
 8021e00:	4575      	cmp	r5, lr
 8021e02:	f280 81f3 	bge.w	80221ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021e06:	2800      	cmp	r0, #0
 8021e08:	f2c0 81f0 	blt.w	80221ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021e0c:	f103 3eff 	add.w	lr, r3, #4294967295
 8021e10:	4570      	cmp	r0, lr
 8021e12:	f280 81eb 	bge.w	80221ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021e16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021e18:	b212      	sxth	r2, r2
 8021e1a:	fb00 5002 	mla	r0, r0, r2, r5
 8021e1e:	fa1f fe81 	uxth.w	lr, r1
 8021e22:	eb03 0a00 	add.w	sl, r3, r0
 8021e26:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021e2a:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021e2e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021e32:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8021e36:	b29b      	uxth	r3, r3
 8021e38:	f1bc 0f00 	cmp.w	ip, #0
 8021e3c:	f000 81b9 	beq.w	80221b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8021e40:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021e44:	940d      	str	r4, [sp, #52]	; 0x34
 8021e46:	eb0a 0b02 	add.w	fp, sl, r2
 8021e4a:	fa1f fa8c 	uxth.w	sl, ip
 8021e4e:	fb0a fe0e 	mul.w	lr, sl, lr
 8021e52:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021e56:	fa1f fa8a 	uxth.w	sl, sl
 8021e5a:	eba5 050e 	sub.w	r5, r5, lr
 8021e5e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021e62:	940e      	str	r4, [sp, #56]	; 0x38
 8021e64:	eba3 030a 	sub.w	r3, r3, sl
 8021e68:	b2ad      	uxth	r5, r5
 8021e6a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021e6c:	b29b      	uxth	r3, r3
 8021e6e:	fb08 f505 	mul.w	r5, r8, r5
 8021e72:	fb09 5303 	mla	r3, r9, r3, r5
 8021e76:	fb0a 3304 	mla	r3, sl, r4, r3
 8021e7a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021e7c:	fb0e 3304 	mla	r3, lr, r4, r3
 8021e80:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021e84:	2b00      	cmp	r3, #0
 8021e86:	f000 810f 	beq.w	80220a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021e8a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021e8c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021e90:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021e94:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021e98:	f000 8190 	beq.w	80221bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8021e9c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021ea0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021ea4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021ea8:	fb09 f000 	mul.w	r0, r9, r0
 8021eac:	fb0a fe0e 	mul.w	lr, sl, lr
 8021eb0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021eb4:	f100 0b20 	add.w	fp, r0, #32
 8021eb8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021ebc:	44ce      	add	lr, r9
 8021ebe:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8021ec2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021ec6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021eca:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021ece:	ea4e 0909 	orr.w	r9, lr, r9
 8021ed2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021ed6:	8868      	ldrh	r0, [r5, #2]
 8021ed8:	d019      	beq.n	8021f0e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8021eda:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021ede:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021ee2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021ee6:	fb08 f800 	mul.w	r8, r8, r0
 8021eea:	fb0a fe0e 	mul.w	lr, sl, lr
 8021eee:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8021ef2:	f108 0b20 	add.w	fp, r8, #32
 8021ef6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021efa:	4486      	add	lr, r0
 8021efc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021f00:	0a00      	lsrs	r0, r0, #8
 8021f02:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021f06:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021f0a:	ea4e 0000 	orr.w	r0, lr, r0
 8021f0e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8021f12:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021f16:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021f1a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021f1e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021f22:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021f26:	ea4e 0909 	orr.w	r9, lr, r9
 8021f2a:	ea4a 0000 	orr.w	r0, sl, r0
 8021f2e:	f1bc 0f00 	cmp.w	ip, #0
 8021f32:	f000 8145 	beq.w	80221c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8021f36:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8021f3a:	3a01      	subs	r2, #1
 8021f3c:	0052      	lsls	r2, r2, #1
 8021f3e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021f40:	3202      	adds	r2, #2
 8021f42:	2cff      	cmp	r4, #255	; 0xff
 8021f44:	eb05 0e02 	add.w	lr, r5, r2
 8021f48:	5aaa      	ldrh	r2, [r5, r2]
 8021f4a:	d018      	beq.n	8021f7e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8021f4c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021f50:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021f54:	fb04 fa02 	mul.w	sl, r4, r2
 8021f58:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021f5c:	fb08 f805 	mul.w	r8, r8, r5
 8021f60:	f10a 0520 	add.w	r5, sl, #32
 8021f64:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021f68:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021f6c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021f70:	4442      	add	r2, r8
 8021f72:	0a2d      	lsrs	r5, r5, #8
 8021f74:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021f78:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021f7c:	432a      	orrs	r2, r5
 8021f7e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021f80:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021f84:	2cff      	cmp	r4, #255	; 0xff
 8021f86:	d01a      	beq.n	8021fbe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021f88:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8021f8c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021f90:	fb04 fa05 	mul.w	sl, r4, r5
 8021f94:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021f98:	fb08 f80e 	mul.w	r8, r8, lr
 8021f9c:	f10a 0e20 	add.w	lr, sl, #32
 8021fa0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021fa4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021fa8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021fac:	4445      	add	r5, r8
 8021fae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021fb2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021fb6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8021fba:	ea45 050e 	orr.w	r5, r5, lr
 8021fbe:	fb1c fe01 	smulbb	lr, ip, r1
 8021fc2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021fc6:	f1cc 0810 	rsb	r8, ip, #16
 8021fca:	eba8 0801 	sub.w	r8, r8, r1
 8021fce:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021fd2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021fd6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021fda:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021fde:	4341      	muls	r1, r0
 8021fe0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021fe4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021fe8:	ea4a 0202 	orr.w	r2, sl, r2
 8021fec:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021ff0:	fb09 1108 	mla	r1, r9, r8, r1
 8021ff4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021ff8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021ffc:	fb0c 1102 	mla	r1, ip, r2, r1
 8022000:	ea4b 0505 	orr.w	r5, fp, r5
 8022004:	fb0e 1e05 	mla	lr, lr, r5, r1
 8022008:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802200c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022010:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022014:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022018:	ea42 0e0e 	orr.w	lr, r2, lr
 802201c:	fa1f f28e 	uxth.w	r2, lr
 8022020:	2bff      	cmp	r3, #255	; 0xff
 8022022:	d103      	bne.n	802202c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8022024:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022026:	29ff      	cmp	r1, #255	; 0xff
 8022028:	f000 80de 	beq.w	80221e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 802202c:	990a      	ldr	r1, [sp, #40]	; 0x28
 802202e:	8838      	ldrh	r0, [r7, #0]
 8022030:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022032:	434b      	muls	r3, r1
 8022034:	f103 0c01 	add.w	ip, r3, #1
 8022038:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 802203c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022040:	fa5f fc83 	uxtb.w	ip, r3
 8022044:	1203      	asrs	r3, r0, #8
 8022046:	1215      	asrs	r5, r2, #8
 8022048:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802204c:	fb13 f30c 	smulbb	r3, r3, ip
 8022050:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022054:	fb05 3501 	mla	r5, r5, r1, r3
 8022058:	10c3      	asrs	r3, r0, #3
 802205a:	10d1      	asrs	r1, r2, #3
 802205c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022060:	fb13 f30c 	smulbb	r3, r3, ip
 8022064:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022068:	fb01 3104 	mla	r1, r1, r4, r3
 802206c:	00c3      	lsls	r3, r0, #3
 802206e:	00d2      	lsls	r2, r2, #3
 8022070:	b2db      	uxtb	r3, r3
 8022072:	b2d2      	uxtb	r2, r2
 8022074:	fb13 f30c 	smulbb	r3, r3, ip
 8022078:	b2ad      	uxth	r5, r5
 802207a:	fb02 3304 	mla	r3, r2, r4, r3
 802207e:	b29a      	uxth	r2, r3
 8022080:	1c6b      	adds	r3, r5, #1
 8022082:	b289      	uxth	r1, r1
 8022084:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022088:	1c53      	adds	r3, r2, #1
 802208a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802208e:	1c4a      	adds	r2, r1, #1
 8022090:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022094:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022098:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802209c:	0949      	lsrs	r1, r1, #5
 802209e:	432b      	orrs	r3, r5
 80220a0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80220a4:	430b      	orrs	r3, r1
 80220a6:	803b      	strh	r3, [r7, #0]
 80220a8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80220aa:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80220ac:	4413      	add	r3, r2
 80220ae:	9321      	str	r3, [sp, #132]	; 0x84
 80220b0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80220b2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80220b4:	441a      	add	r2, r3
 80220b6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80220b8:	9222      	str	r2, [sp, #136]	; 0x88
 80220ba:	3b01      	subs	r3, #1
 80220bc:	3702      	adds	r7, #2
 80220be:	9313      	str	r3, [sp, #76]	; 0x4c
 80220c0:	e689      	b.n	8021dd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80220c2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80220c4:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 80220c6:	9c22      	ldr	r4, [sp, #136]	; 0x88
 80220c8:	4433      	add	r3, r6
 80220ca:	9321      	str	r3, [sp, #132]	; 0x84
 80220cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80220ce:	441c      	add	r4, r3
 80220d0:	9b08      	ldr	r3, [sp, #32]
 80220d2:	9422      	str	r4, [sp, #136]	; 0x88
 80220d4:	3b01      	subs	r3, #1
 80220d6:	9308      	str	r3, [sp, #32]
 80220d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80220da:	3302      	adds	r3, #2
 80220dc:	9309      	str	r3, [sp, #36]	; 0x24
 80220de:	e658      	b.n	8021d92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80220e0:	d028      	beq.n	8022134 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80220e2:	9b08      	ldr	r3, [sp, #32]
 80220e4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80220e6:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80220e8:	3b01      	subs	r3, #1
 80220ea:	fb00 5003 	mla	r0, r0, r3, r5
 80220ee:	1400      	asrs	r0, r0, #16
 80220f0:	f53f ae6c 	bmi.w	8021dcc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80220f4:	3901      	subs	r1, #1
 80220f6:	4288      	cmp	r0, r1
 80220f8:	f6bf ae68 	bge.w	8021dcc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80220fc:	9924      	ldr	r1, [sp, #144]	; 0x90
 80220fe:	9822      	ldr	r0, [sp, #136]	; 0x88
 8022100:	fb01 0303 	mla	r3, r1, r3, r0
 8022104:	141b      	asrs	r3, r3, #16
 8022106:	f53f ae61 	bmi.w	8021dcc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802210a:	3a01      	subs	r2, #1
 802210c:	4293      	cmp	r3, r2
 802210e:	f6bf ae5d 	bge.w	8021dcc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022112:	9b08      	ldr	r3, [sp, #32]
 8022114:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8022118:	9313      	str	r3, [sp, #76]	; 0x4c
 802211a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802211e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022120:	2b00      	cmp	r3, #0
 8022122:	f300 8082 	bgt.w	802222a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8022126:	9b08      	ldr	r3, [sp, #32]
 8022128:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802212c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802212e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022132:	9309      	str	r3, [sp, #36]	; 0x24
 8022134:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022136:	2b00      	cmp	r3, #0
 8022138:	f340 81ef 	ble.w	802251a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 802213c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022140:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022144:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022148:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802214a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802214e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022152:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022156:	eef0 6a62 	vmov.f32	s13, s5
 802215a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802215e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022162:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022166:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 802216a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802216e:	eef0 6a43 	vmov.f32	s13, s6
 8022172:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022176:	ee12 2a90 	vmov	r2, s5
 802217a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802217e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022182:	ee13 2a10 	vmov	r2, s6
 8022186:	9323      	str	r3, [sp, #140]	; 0x8c
 8022188:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802218a:	fb92 f3f3 	sdiv	r3, r2, r3
 802218e:	9324      	str	r3, [sp, #144]	; 0x90
 8022190:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022192:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022194:	3b01      	subs	r3, #1
 8022196:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802219a:	9311      	str	r3, [sp, #68]	; 0x44
 802219c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802219e:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 80221a2:	bf08      	it	eq
 80221a4:	4613      	moveq	r3, r2
 80221a6:	9308      	str	r3, [sp, #32]
 80221a8:	eeb0 3a67 	vmov.f32	s6, s15
 80221ac:	eef0 2a47 	vmov.f32	s5, s14
 80221b0:	e5e1      	b.n	8021d76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80221b2:	fb08 f505 	mul.w	r5, r8, r5
 80221b6:	fb09 5303 	mla	r3, r9, r3, r5
 80221ba:	e661      	b.n	8021e80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 80221bc:	4681      	mov	r9, r0
 80221be:	e688      	b.n	8021ed2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80221c0:	f1c1 0210 	rsb	r2, r1, #16
 80221c4:	4341      	muls	r1, r0
 80221c6:	fb09 1902 	mla	r9, r9, r2, r1
 80221ca:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80221ce:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80221d2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80221d6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80221da:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80221de:	ea42 0909 	orr.w	r9, r2, r9
 80221e2:	fa1f f289 	uxth.w	r2, r9
 80221e6:	e71b      	b.n	8022020 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80221e8:	803a      	strh	r2, [r7, #0]
 80221ea:	e75d      	b.n	80220a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80221ec:	f115 0e01 	adds.w	lr, r5, #1
 80221f0:	f53f af5a 	bmi.w	80220a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80221f4:	4572      	cmp	r2, lr
 80221f6:	f6ff af57 	blt.w	80220a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80221fa:	f110 0e01 	adds.w	lr, r0, #1
 80221fe:	f53f af53 	bmi.w	80220a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022202:	4573      	cmp	r3, lr
 8022204:	f6ff af50 	blt.w	80220a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022208:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802220a:	9502      	str	r5, [sp, #8]
 802220c:	b21b      	sxth	r3, r3
 802220e:	b212      	sxth	r2, r2
 8022210:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8022214:	9301      	str	r3, [sp, #4]
 8022216:	9200      	str	r2, [sp, #0]
 8022218:	e9cd c405 	strd	ip, r4, [sp, #20]
 802221c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8022220:	4639      	mov	r1, r7
 8022222:	9815      	ldr	r0, [sp, #84]	; 0x54
 8022224:	f7ff fc04 	bl	8021a30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8022228:	e73e      	b.n	80220a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802222a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802222c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022230:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022232:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8022236:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022238:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802223c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802223e:	141f      	asrs	r7, r3, #16
 8022240:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022242:	141b      	asrs	r3, r3, #16
 8022244:	fb01 3707 	mla	r7, r1, r7, r3
 8022248:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802224a:	fa1f fc82 	uxth.w	ip, r2
 802224e:	eb03 0a07 	add.w	sl, r3, r7
 8022252:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8022256:	f813 9007 	ldrb.w	r9, [r3, r7]
 802225a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802225e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022262:	b29b      	uxth	r3, r3
 8022264:	2d00      	cmp	r5, #0
 8022266:	f000 813d 	beq.w	80224e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 802226a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802226e:	940f      	str	r4, [sp, #60]	; 0x3c
 8022270:	eb0a 0b01 	add.w	fp, sl, r1
 8022274:	fa1f fa85 	uxth.w	sl, r5
 8022278:	fb0a fc0c 	mul.w	ip, sl, ip
 802227c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022280:	fa1f fa8a 	uxth.w	sl, sl
 8022284:	eba0 000c 	sub.w	r0, r0, ip
 8022288:	eba3 030a 	sub.w	r3, r3, sl
 802228c:	b280      	uxth	r0, r0
 802228e:	fb08 f000 	mul.w	r0, r8, r0
 8022292:	b29b      	uxth	r3, r3
 8022294:	fb09 0303 	mla	r3, r9, r3, r0
 8022298:	980f      	ldr	r0, [sp, #60]	; 0x3c
 802229a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802229e:	9410      	str	r4, [sp, #64]	; 0x40
 80222a0:	fb0a 3300 	mla	r3, sl, r0, r3
 80222a4:	fb0c 3304 	mla	r3, ip, r4, r3
 80222a8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80222ac:	2b00      	cmp	r3, #0
 80222ae:	f000 810b 	beq.w	80224c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80222b2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80222b4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80222b6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80222ba:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80222be:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80222c2:	f000 8114 	beq.w	80224ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 80222c6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80222ca:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80222ce:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80222d2:	fb09 f707 	mul.w	r7, r9, r7
 80222d6:	fb0a fc0c 	mul.w	ip, sl, ip
 80222da:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80222de:	f107 0b20 	add.w	fp, r7, #32
 80222e2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80222e6:	44cc      	add	ip, r9
 80222e8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80222ec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80222f0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80222f4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80222f8:	ea4c 0909 	orr.w	r9, ip, r9
 80222fc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022300:	8847      	ldrh	r7, [r0, #2]
 8022302:	d019      	beq.n	8022338 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8022304:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022308:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802230c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022310:	fb08 f807 	mul.w	r8, r8, r7
 8022314:	fb0a fc0c 	mul.w	ip, sl, ip
 8022318:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 802231c:	f108 0b20 	add.w	fp, r8, #32
 8022320:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022324:	44bc      	add	ip, r7
 8022326:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 802232a:	0a3f      	lsrs	r7, r7, #8
 802232c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022330:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022334:	ea4c 0707 	orr.w	r7, ip, r7
 8022338:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 802233c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022340:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022344:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022348:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802234c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022350:	ea4c 0909 	orr.w	r9, ip, r9
 8022354:	ea4a 0707 	orr.w	r7, sl, r7
 8022358:	2d00      	cmp	r5, #0
 802235a:	f000 80ca 	beq.w	80224f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 802235e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022362:	3901      	subs	r1, #1
 8022364:	0049      	lsls	r1, r1, #1
 8022366:	3102      	adds	r1, #2
 8022368:	eb00 0c01 	add.w	ip, r0, r1
 802236c:	5a41      	ldrh	r1, [r0, r1]
 802236e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022370:	28ff      	cmp	r0, #255	; 0xff
 8022372:	d019      	beq.n	80223a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8022374:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022376:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 802237a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802237e:	fb04 fa01 	mul.w	sl, r4, r1
 8022382:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022386:	fb08 f800 	mul.w	r8, r8, r0
 802238a:	f10a 0020 	add.w	r0, sl, #32
 802238e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022392:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022396:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802239a:	4441      	add	r1, r8
 802239c:	0a00      	lsrs	r0, r0, #8
 802239e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80223a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80223a6:	4301      	orrs	r1, r0
 80223a8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80223aa:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80223ae:	2cff      	cmp	r4, #255	; 0xff
 80223b0:	d01a      	beq.n	80223e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 80223b2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80223b6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80223ba:	fb04 fa00 	mul.w	sl, r4, r0
 80223be:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80223c2:	fb08 f80c 	mul.w	r8, r8, ip
 80223c6:	f10a 0c20 	add.w	ip, sl, #32
 80223ca:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80223ce:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80223d2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80223d6:	4440      	add	r0, r8
 80223d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80223dc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80223e0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80223e4:	ea40 000c 	orr.w	r0, r0, ip
 80223e8:	fb15 fc02 	smulbb	ip, r5, r2
 80223ec:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80223f0:	f1c5 0810 	rsb	r8, r5, #16
 80223f4:	eba8 0802 	sub.w	r8, r8, r2
 80223f8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80223fc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022400:	437a      	muls	r2, r7
 8022402:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022406:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 802240a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802240e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022412:	fb09 2208 	mla	r2, r9, r8, r2
 8022416:	ea4a 0101 	orr.w	r1, sl, r1
 802241a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802241e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022422:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022426:	fb05 2201 	mla	r2, r5, r1, r2
 802242a:	ea4b 0000 	orr.w	r0, fp, r0
 802242e:	fb0c 2200 	mla	r2, ip, r0, r2
 8022432:	0d57      	lsrs	r7, r2, #21
 8022434:	0952      	lsrs	r2, r2, #5
 8022436:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802243a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802243e:	433a      	orrs	r2, r7
 8022440:	2bff      	cmp	r3, #255	; 0xff
 8022442:	b292      	uxth	r2, r2
 8022444:	d102      	bne.n	802244c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022446:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022448:	29ff      	cmp	r1, #255	; 0xff
 802244a:	d063      	beq.n	8022514 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 802244c:	980a      	ldr	r0, [sp, #40]	; 0x28
 802244e:	f8be 1000 	ldrh.w	r1, [lr]
 8022452:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022454:	4343      	muls	r3, r0
 8022456:	1c58      	adds	r0, r3, #1
 8022458:	eb00 2323 	add.w	r3, r0, r3, asr #8
 802245c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022460:	1208      	asrs	r0, r1, #8
 8022462:	b2db      	uxtb	r3, r3
 8022464:	1215      	asrs	r5, r2, #8
 8022466:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802246a:	fb10 f003 	smulbb	r0, r0, r3
 802246e:	10cf      	asrs	r7, r1, #3
 8022470:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022474:	00c9      	lsls	r1, r1, #3
 8022476:	fb05 0504 	mla	r5, r5, r4, r0
 802247a:	b2c9      	uxtb	r1, r1
 802247c:	10d0      	asrs	r0, r2, #3
 802247e:	00d2      	lsls	r2, r2, #3
 8022480:	fb11 f103 	smulbb	r1, r1, r3
 8022484:	b2d2      	uxtb	r2, r2
 8022486:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802248a:	fb02 1204 	mla	r2, r2, r4, r1
 802248e:	fb17 f703 	smulbb	r7, r7, r3
 8022492:	b2ad      	uxth	r5, r5
 8022494:	b292      	uxth	r2, r2
 8022496:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802249a:	fb00 7004 	mla	r0, r0, r4, r7
 802249e:	1c6b      	adds	r3, r5, #1
 80224a0:	1c57      	adds	r7, r2, #1
 80224a2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80224a6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80224aa:	b280      	uxth	r0, r0
 80224ac:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80224b0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80224b4:	433d      	orrs	r5, r7
 80224b6:	1c47      	adds	r7, r0, #1
 80224b8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80224bc:	097f      	lsrs	r7, r7, #5
 80224be:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80224c2:	433d      	orrs	r5, r7
 80224c4:	f8ae 5000 	strh.w	r5, [lr]
 80224c8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80224ca:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80224cc:	4413      	add	r3, r2
 80224ce:	9321      	str	r3, [sp, #132]	; 0x84
 80224d0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80224d2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80224d4:	441a      	add	r2, r3
 80224d6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80224d8:	9222      	str	r2, [sp, #136]	; 0x88
 80224da:	3b01      	subs	r3, #1
 80224dc:	f10e 0e02 	add.w	lr, lr, #2
 80224e0:	9313      	str	r3, [sp, #76]	; 0x4c
 80224e2:	e61c      	b.n	802211e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 80224e4:	fb08 f000 	mul.w	r0, r8, r0
 80224e8:	fb09 0303 	mla	r3, r9, r3, r0
 80224ec:	e6dc      	b.n	80222a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 80224ee:	46b9      	mov	r9, r7
 80224f0:	e704      	b.n	80222fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 80224f2:	f1c2 0110 	rsb	r1, r2, #16
 80224f6:	437a      	muls	r2, r7
 80224f8:	fb09 2901 	mla	r9, r9, r1, r2
 80224fc:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022500:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022504:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022508:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802250c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022510:	4302      	orrs	r2, r0
 8022512:	e795      	b.n	8022440 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8022514:	f8ae 2000 	strh.w	r2, [lr]
 8022518:	e7d6      	b.n	80224c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802251a:	b017      	add	sp, #92	; 0x5c
 802251c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022520 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022524:	b085      	sub	sp, #20
 8022526:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 802252a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802252e:	9103      	str	r1, [sp, #12]
 8022530:	fb00 7406 	mla	r4, r0, r6, r7
 8022534:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8022538:	2800      	cmp	r0, #0
 802253a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802253e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022542:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022546:	9501      	str	r5, [sp, #4]
 8022548:	eb02 0904 	add.w	r9, r2, r4
 802254c:	f2c0 8141 	blt.w	80227d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022550:	4583      	cmp	fp, r0
 8022552:	f340 813e 	ble.w	80227d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022556:	2f00      	cmp	r7, #0
 8022558:	f2c0 8137 	blt.w	80227ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 802255c:	42be      	cmp	r6, r7
 802255e:	f340 8134 	ble.w	80227ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022562:	f812 c004 	ldrb.w	ip, [r2, r4]
 8022566:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 802256a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802256e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022572:	4355      	muls	r5, r2
 8022574:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022578:	f64f 041f 	movw	r4, #63519	; 0xf81f
 802257c:	fb0c f203 	mul.w	r2, ip, r3
 8022580:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022584:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022588:	441d      	add	r5, r3
 802258a:	f102 0320 	add.w	r3, r2, #32
 802258e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022592:	0a1b      	lsrs	r3, r3, #8
 8022594:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022598:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802259c:	431c      	orrs	r4, r3
 802259e:	1c7b      	adds	r3, r7, #1
 80225a0:	f100 811c 	bmi.w	80227dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80225a4:	429e      	cmp	r6, r3
 80225a6:	f340 8119 	ble.w	80227dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80225aa:	2900      	cmp	r1, #0
 80225ac:	f000 8119 	beq.w	80227e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 80225b0:	9a01      	ldr	r2, [sp, #4]
 80225b2:	f899 3001 	ldrb.w	r3, [r9, #1]
 80225b6:	8855      	ldrh	r5, [r2, #2]
 80225b8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80225bc:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80225c0:	fb08 f802 	mul.w	r8, r8, r2
 80225c4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80225c8:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80225cc:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80225d0:	435d      	muls	r5, r3
 80225d2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80225d6:	44d0      	add	r8, sl
 80225d8:	f105 0a20 	add.w	sl, r5, #32
 80225dc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80225e0:	0a2d      	lsrs	r5, r5, #8
 80225e2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80225e6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80225ea:	432a      	orrs	r2, r5
 80225ec:	3001      	adds	r0, #1
 80225ee:	f100 80fe 	bmi.w	80227ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80225f2:	4583      	cmp	fp, r0
 80225f4:	f340 80fb 	ble.w	80227ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80225f8:	f1be 0f00 	cmp.w	lr, #0
 80225fc:	f000 80fc 	beq.w	80227f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8022600:	2f00      	cmp	r7, #0
 8022602:	f2c0 80f1 	blt.w	80227e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022606:	42be      	cmp	r6, r7
 8022608:	f340 80ee 	ble.w	80227e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 802260c:	9801      	ldr	r0, [sp, #4]
 802260e:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022612:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022616:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 802261a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 802261e:	fb0a fa00 	mul.w	sl, sl, r0
 8022622:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022626:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 802262a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802262e:	fb05 f808 	mul.w	r8, r5, r8
 8022632:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022636:	4482      	add	sl, r0
 8022638:	f108 0020 	add.w	r0, r8, #32
 802263c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022640:	0a00      	lsrs	r0, r0, #8
 8022642:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022646:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802264a:	ea4b 0b00 	orr.w	fp, fp, r0
 802264e:	3701      	adds	r7, #1
 8022650:	f100 80d7 	bmi.w	8022802 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022654:	42be      	cmp	r6, r7
 8022656:	f340 80d4 	ble.w	8022802 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 802265a:	2900      	cmp	r1, #0
 802265c:	f000 80d4 	beq.w	8022808 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8022660:	3601      	adds	r6, #1
 8022662:	9801      	ldr	r0, [sp, #4]
 8022664:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022668:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 802266c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022670:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022674:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022678:	fb09 f906 	mul.w	r9, r9, r6
 802267c:	fb07 f800 	mul.w	r8, r7, r0
 8022680:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022684:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022688:	f609 0901 	addw	r9, r9, #2049	; 0x801
 802268c:	44d1      	add	r9, sl
 802268e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022692:	f108 0020 	add.w	r0, r8, #32
 8022696:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802269a:	0a00      	lsrs	r0, r0, #8
 802269c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80226a0:	4330      	orrs	r0, r6
 80226a2:	b28e      	uxth	r6, r1
 80226a4:	fa1f f98e 	uxth.w	r9, lr
 80226a8:	fb06 f809 	mul.w	r8, r6, r9
 80226ac:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80226b0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80226b4:	0136      	lsls	r6, r6, #4
 80226b6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80226ba:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80226be:	9601      	str	r6, [sp, #4]
 80226c0:	ea4a 0404 	orr.w	r4, sl, r4
 80226c4:	fa1f f689 	uxth.w	r6, r9
 80226c8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80226cc:	fb11 f90e 	smulbb	r9, r1, lr
 80226d0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80226d4:	9602      	str	r6, [sp, #8]
 80226d6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80226da:	4626      	mov	r6, r4
 80226dc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80226e0:	f1ce 0410 	rsb	r4, lr, #16
 80226e4:	1a64      	subs	r4, r4, r1
 80226e6:	ea4a 0202 	orr.w	r2, sl, r2
 80226ea:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80226ee:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80226f2:	434a      	muls	r2, r1
 80226f4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80226f8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80226fc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022700:	fb04 2406 	mla	r4, r4, r6, r2
 8022704:	ea4a 0000 	orr.w	r0, sl, r0
 8022708:	fb09 4200 	mla	r2, r9, r0, r4
 802270c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022710:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022714:	9801      	ldr	r0, [sp, #4]
 8022716:	9903      	ldr	r1, [sp, #12]
 8022718:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 802271c:	ea44 0b0b 	orr.w	fp, r4, fp
 8022720:	9c02      	ldr	r4, [sp, #8]
 8022722:	8809      	ldrh	r1, [r1, #0]
 8022724:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8022728:	1b00      	subs	r0, r0, r4
 802272a:	9c01      	ldr	r4, [sp, #4]
 802272c:	eba4 0608 	sub.w	r6, r4, r8
 8022730:	b2b6      	uxth	r6, r6
 8022732:	b280      	uxth	r0, r0
 8022734:	4373      	muls	r3, r6
 8022736:	fb0c 3300 	mla	r3, ip, r0, r3
 802273a:	9802      	ldr	r0, [sp, #8]
 802273c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022740:	fb00 3505 	mla	r5, r0, r5, r3
 8022744:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022748:	fb08 5707 	mla	r7, r8, r7, r5
 802274c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022750:	120b      	asrs	r3, r1, #8
 8022752:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022756:	ea6f 2727 	mvn.w	r7, r7, asr #8
 802275a:	b2ff      	uxtb	r7, r7
 802275c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022760:	10c8      	asrs	r0, r1, #3
 8022762:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022766:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802276a:	00c9      	lsls	r1, r1, #3
 802276c:	437b      	muls	r3, r7
 802276e:	ea42 0e0e 	orr.w	lr, r2, lr
 8022772:	b2c9      	uxtb	r1, r1
 8022774:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022778:	fa1f f28e 	uxth.w	r2, lr
 802277c:	4378      	muls	r0, r7
 802277e:	434f      	muls	r7, r1
 8022780:	1c59      	adds	r1, r3, #1
 8022782:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8022786:	1213      	asrs	r3, r2, #8
 8022788:	f023 0307 	bic.w	r3, r3, #7
 802278c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022790:	1c41      	adds	r1, r0, #1
 8022792:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022796:	10d1      	asrs	r1, r2, #3
 8022798:	f021 0103 	bic.w	r1, r1, #3
 802279c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80227a0:	021b      	lsls	r3, r3, #8
 80227a2:	00c9      	lsls	r1, r1, #3
 80227a4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80227a8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80227ac:	430b      	orrs	r3, r1
 80227ae:	1c79      	adds	r1, r7, #1
 80227b0:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80227b4:	00d2      	lsls	r2, r2, #3
 80227b6:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80227ba:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80227be:	431a      	orrs	r2, r3
 80227c0:	9b03      	ldr	r3, [sp, #12]
 80227c2:	801a      	strh	r2, [r3, #0]
 80227c4:	b005      	add	sp, #20
 80227c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80227ca:	f04f 0c00 	mov.w	ip, #0
 80227ce:	4664      	mov	r4, ip
 80227d0:	e6e5      	b.n	802259e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80227d2:	2300      	movs	r3, #0
 80227d4:	469c      	mov	ip, r3
 80227d6:	461a      	mov	r2, r3
 80227d8:	461c      	mov	r4, r3
 80227da:	e707      	b.n	80225ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80227dc:	2300      	movs	r3, #0
 80227de:	461a      	mov	r2, r3
 80227e0:	e704      	b.n	80225ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80227e2:	460b      	mov	r3, r1
 80227e4:	460a      	mov	r2, r1
 80227e6:	e701      	b.n	80225ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80227e8:	2500      	movs	r5, #0
 80227ea:	46ab      	mov	fp, r5
 80227ec:	e72f      	b.n	802264e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 80227ee:	2700      	movs	r7, #0
 80227f0:	463d      	mov	r5, r7
 80227f2:	4638      	mov	r0, r7
 80227f4:	46bb      	mov	fp, r7
 80227f6:	e754      	b.n	80226a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80227f8:	4677      	mov	r7, lr
 80227fa:	4675      	mov	r5, lr
 80227fc:	4670      	mov	r0, lr
 80227fe:	46f3      	mov	fp, lr
 8022800:	e74f      	b.n	80226a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022802:	2700      	movs	r7, #0
 8022804:	4638      	mov	r0, r7
 8022806:	e74c      	b.n	80226a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022808:	460f      	mov	r7, r1
 802280a:	4608      	mov	r0, r1
 802280c:	e749      	b.n	80226a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08022810 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022814:	b093      	sub	sp, #76	; 0x4c
 8022816:	9210      	str	r2, [sp, #64]	; 0x40
 8022818:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802281a:	910e      	str	r1, [sp, #56]	; 0x38
 802281c:	9306      	str	r3, [sp, #24]
 802281e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8022822:	9011      	str	r0, [sp, #68]	; 0x44
 8022824:	6850      	ldr	r0, [r2, #4]
 8022826:	6812      	ldr	r2, [r2, #0]
 8022828:	fb00 1303 	mla	r3, r0, r3, r1
 802282c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022830:	9307      	str	r3, [sp, #28]
 8022832:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022834:	681b      	ldr	r3, [r3, #0]
 8022836:	9308      	str	r3, [sp, #32]
 8022838:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802283a:	685b      	ldr	r3, [r3, #4]
 802283c:	9309      	str	r3, [sp, #36]	; 0x24
 802283e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022840:	2b00      	cmp	r3, #0
 8022842:	dc03      	bgt.n	802284c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8022844:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022846:	2b00      	cmp	r3, #0
 8022848:	f340 83b4 	ble.w	8022fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 802284c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802284e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022852:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022856:	1e48      	subs	r0, r1, #1
 8022858:	1e55      	subs	r5, r2, #1
 802285a:	9b06      	ldr	r3, [sp, #24]
 802285c:	2b00      	cmp	r3, #0
 802285e:	f340 8163 	ble.w	8022b28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8022862:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8022864:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022866:	1436      	asrs	r6, r6, #16
 8022868:	ea4f 4323 	mov.w	r3, r3, asr #16
 802286c:	d406      	bmi.n	802287c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802286e:	4286      	cmp	r6, r0
 8022870:	da04      	bge.n	802287c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022872:	2b00      	cmp	r3, #0
 8022874:	db02      	blt.n	802287c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022876:	42ab      	cmp	r3, r5
 8022878:	f2c0 8157 	blt.w	8022b2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 802287c:	3601      	adds	r6, #1
 802287e:	f100 8144 	bmi.w	8022b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022882:	42b1      	cmp	r1, r6
 8022884:	f2c0 8141 	blt.w	8022b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022888:	3301      	adds	r3, #1
 802288a:	f100 813e 	bmi.w	8022b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802288e:	429a      	cmp	r2, r3
 8022890:	f2c0 813b 	blt.w	8022b0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022894:	9b06      	ldr	r3, [sp, #24]
 8022896:	9f07      	ldr	r7, [sp, #28]
 8022898:	930f      	str	r3, [sp, #60]	; 0x3c
 802289a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802289e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80228a0:	2b00      	cmp	r3, #0
 80228a2:	f340 8164 	ble.w	8022b6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80228a6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80228a8:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80228aa:	1418      	asrs	r0, r3, #16
 80228ac:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80228ae:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80228b2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80228b4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80228b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80228ba:	142d      	asrs	r5, r5, #16
 80228bc:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80228c0:	f100 81ee 	bmi.w	8022ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80228c4:	f102 3eff 	add.w	lr, r2, #4294967295
 80228c8:	4575      	cmp	r5, lr
 80228ca:	f280 81e9 	bge.w	8022ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80228ce:	2800      	cmp	r0, #0
 80228d0:	f2c0 81e6 	blt.w	8022ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80228d4:	f103 3eff 	add.w	lr, r3, #4294967295
 80228d8:	4570      	cmp	r0, lr
 80228da:	f280 81e1 	bge.w	8022ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80228de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80228e0:	b212      	sxth	r2, r2
 80228e2:	fb00 5002 	mla	r0, r0, r2, r5
 80228e6:	fa1f fe81 	uxth.w	lr, r1
 80228ea:	eb03 0a00 	add.w	sl, r3, r0
 80228ee:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80228f2:	f813 9000 	ldrb.w	r9, [r3, r0]
 80228f6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80228fa:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80228fe:	b29b      	uxth	r3, r3
 8022900:	f1bc 0f00 	cmp.w	ip, #0
 8022904:	f000 8179 	beq.w	8022bfa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8022908:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802290c:	940a      	str	r4, [sp, #40]	; 0x28
 802290e:	eb0a 0b02 	add.w	fp, sl, r2
 8022912:	fa1f fa8c 	uxth.w	sl, ip
 8022916:	fb0a fe0e 	mul.w	lr, sl, lr
 802291a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802291e:	fa1f fa8a 	uxth.w	sl, sl
 8022922:	eba5 050e 	sub.w	r5, r5, lr
 8022926:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802292a:	940b      	str	r4, [sp, #44]	; 0x2c
 802292c:	eba3 030a 	sub.w	r3, r3, sl
 8022930:	b2ad      	uxth	r5, r5
 8022932:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022934:	b29b      	uxth	r3, r3
 8022936:	fb08 f505 	mul.w	r5, r8, r5
 802293a:	fb09 5303 	mla	r3, r9, r3, r5
 802293e:	fb0a 3304 	mla	r3, sl, r4, r3
 8022942:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022944:	fb0e 3304 	mla	r3, lr, r4, r3
 8022948:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802294c:	2b00      	cmp	r3, #0
 802294e:	f000 80cf 	beq.w	8022af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022952:	9c08      	ldr	r4, [sp, #32]
 8022954:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022958:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802295c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022960:	f000 8150 	beq.w	8022c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8022964:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022968:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802296c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022970:	fb09 f000 	mul.w	r0, r9, r0
 8022974:	fb0a fe0e 	mul.w	lr, sl, lr
 8022978:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802297c:	f100 0b20 	add.w	fp, r0, #32
 8022980:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8022984:	44ce      	add	lr, r9
 8022986:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802298a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802298e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022992:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022996:	ea4e 0909 	orr.w	r9, lr, r9
 802299a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802299e:	8868      	ldrh	r0, [r5, #2]
 80229a0:	d019      	beq.n	80229d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80229a2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80229a6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80229aa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80229ae:	fb08 f800 	mul.w	r8, r8, r0
 80229b2:	fb0a fe0e 	mul.w	lr, sl, lr
 80229b6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80229ba:	f108 0b20 	add.w	fp, r8, #32
 80229be:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80229c2:	4486      	add	lr, r0
 80229c4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80229c8:	0a00      	lsrs	r0, r0, #8
 80229ca:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80229ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80229d2:	ea4e 0000 	orr.w	r0, lr, r0
 80229d6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80229da:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80229de:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80229e2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80229e6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80229ea:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80229ee:	ea4e 0909 	orr.w	r9, lr, r9
 80229f2:	ea4a 0000 	orr.w	r0, sl, r0
 80229f6:	f1bc 0f00 	cmp.w	ip, #0
 80229fa:	f000 8105 	beq.w	8022c08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80229fe:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8022a02:	3a01      	subs	r2, #1
 8022a04:	0052      	lsls	r2, r2, #1
 8022a06:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022a08:	3202      	adds	r2, #2
 8022a0a:	2cff      	cmp	r4, #255	; 0xff
 8022a0c:	eb05 0e02 	add.w	lr, r5, r2
 8022a10:	5aaa      	ldrh	r2, [r5, r2]
 8022a12:	d018      	beq.n	8022a46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8022a14:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8022a18:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022a1c:	fb04 fa02 	mul.w	sl, r4, r2
 8022a20:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022a24:	fb08 f805 	mul.w	r8, r8, r5
 8022a28:	f10a 0520 	add.w	r5, sl, #32
 8022a2c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8022a30:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8022a34:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022a38:	4442      	add	r2, r8
 8022a3a:	0a2d      	lsrs	r5, r5, #8
 8022a3c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022a40:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022a44:	432a      	orrs	r2, r5
 8022a46:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022a48:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8022a4c:	2cff      	cmp	r4, #255	; 0xff
 8022a4e:	d01a      	beq.n	8022a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8022a50:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8022a54:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022a58:	fb04 fa05 	mul.w	sl, r4, r5
 8022a5c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022a60:	fb08 f80e 	mul.w	r8, r8, lr
 8022a64:	f10a 0e20 	add.w	lr, sl, #32
 8022a68:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8022a6c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022a70:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022a74:	4445      	add	r5, r8
 8022a76:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022a7a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8022a7e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8022a82:	ea45 050e 	orr.w	r5, r5, lr
 8022a86:	fb1c fe01 	smulbb	lr, ip, r1
 8022a8a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8022a8e:	f1cc 0810 	rsb	r8, ip, #16
 8022a92:	eba8 0801 	sub.w	r8, r8, r1
 8022a96:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022a9a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8022a9e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8022aa2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8022aa6:	4341      	muls	r1, r0
 8022aa8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022aac:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022ab0:	ea4a 0202 	orr.w	r2, sl, r2
 8022ab4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8022ab8:	fb09 1108 	mla	r1, r9, r8, r1
 8022abc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022ac0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022ac4:	fb0c 1102 	mla	r1, ip, r2, r1
 8022ac8:	ea4b 0505 	orr.w	r5, fp, r5
 8022acc:	fb0e 1e05 	mla	lr, lr, r5, r1
 8022ad0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022ad4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022ad8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022adc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022ae0:	ea42 0e0e 	orr.w	lr, r2, lr
 8022ae4:	fa1f f28e 	uxth.w	r2, lr
 8022ae8:	2bff      	cmp	r3, #255	; 0xff
 8022aea:	f040 80a1 	bne.w	8022c30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8022aee:	803a      	strh	r2, [r7, #0]
 8022af0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022af2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8022af4:	4413      	add	r3, r2
 8022af6:	931d      	str	r3, [sp, #116]	; 0x74
 8022af8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8022afa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022afc:	441a      	add	r2, r3
 8022afe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022b00:	921e      	str	r2, [sp, #120]	; 0x78
 8022b02:	3b01      	subs	r3, #1
 8022b04:	3702      	adds	r7, #2
 8022b06:	930f      	str	r3, [sp, #60]	; 0x3c
 8022b08:	e6c9      	b.n	802289e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022b0a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022b0c:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8022b0e:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8022b10:	4433      	add	r3, r6
 8022b12:	931d      	str	r3, [sp, #116]	; 0x74
 8022b14:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022b16:	441c      	add	r4, r3
 8022b18:	9b06      	ldr	r3, [sp, #24]
 8022b1a:	941e      	str	r4, [sp, #120]	; 0x78
 8022b1c:	3b01      	subs	r3, #1
 8022b1e:	9306      	str	r3, [sp, #24]
 8022b20:	9b07      	ldr	r3, [sp, #28]
 8022b22:	3302      	adds	r3, #2
 8022b24:	9307      	str	r3, [sp, #28]
 8022b26:	e698      	b.n	802285a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8022b28:	d028      	beq.n	8022b7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022b2a:	9b06      	ldr	r3, [sp, #24]
 8022b2c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022b2e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8022b30:	3b01      	subs	r3, #1
 8022b32:	fb00 5003 	mla	r0, r0, r3, r5
 8022b36:	1400      	asrs	r0, r0, #16
 8022b38:	f53f aeac 	bmi.w	8022894 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022b3c:	3901      	subs	r1, #1
 8022b3e:	4288      	cmp	r0, r1
 8022b40:	f6bf aea8 	bge.w	8022894 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022b44:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022b46:	981e      	ldr	r0, [sp, #120]	; 0x78
 8022b48:	fb01 0303 	mla	r3, r1, r3, r0
 8022b4c:	141b      	asrs	r3, r3, #16
 8022b4e:	f53f aea1 	bmi.w	8022894 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022b52:	3a01      	subs	r2, #1
 8022b54:	4293      	cmp	r3, r2
 8022b56:	f6bf ae9d 	bge.w	8022894 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022b5a:	9b06      	ldr	r3, [sp, #24]
 8022b5c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8022b60:	930f      	str	r3, [sp, #60]	; 0x3c
 8022b62:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022b66:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022b68:	2b00      	cmp	r3, #0
 8022b6a:	f300 80b6 	bgt.w	8022cda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8022b6e:	9b06      	ldr	r3, [sp, #24]
 8022b70:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022b74:	9b07      	ldr	r3, [sp, #28]
 8022b76:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022b7a:	9307      	str	r3, [sp, #28]
 8022b7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022b7e:	2b00      	cmp	r3, #0
 8022b80:	f340 8218 	ble.w	8022fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8022b84:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022b88:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022b8c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022b90:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022b92:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022b96:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022b9a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022b9e:	eef0 6a62 	vmov.f32	s13, s5
 8022ba2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022ba6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022baa:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022bae:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8022bb2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022bb6:	eef0 6a43 	vmov.f32	s13, s6
 8022bba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022bbe:	ee12 2a90 	vmov	r2, s5
 8022bc2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022bc6:	fb92 f3f3 	sdiv	r3, r2, r3
 8022bca:	ee13 2a10 	vmov	r2, s6
 8022bce:	931f      	str	r3, [sp, #124]	; 0x7c
 8022bd0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022bd2:	fb92 f3f3 	sdiv	r3, r2, r3
 8022bd6:	9320      	str	r3, [sp, #128]	; 0x80
 8022bd8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022bda:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022bdc:	3b01      	subs	r3, #1
 8022bde:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022be2:	930e      	str	r3, [sp, #56]	; 0x38
 8022be4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022be6:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8022bea:	bf08      	it	eq
 8022bec:	4613      	moveq	r3, r2
 8022bee:	9306      	str	r3, [sp, #24]
 8022bf0:	eeb0 3a67 	vmov.f32	s6, s15
 8022bf4:	eef0 2a47 	vmov.f32	s5, s14
 8022bf8:	e621      	b.n	802283e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8022bfa:	fb08 f505 	mul.w	r5, r8, r5
 8022bfe:	fb09 5303 	mla	r3, r9, r3, r5
 8022c02:	e6a1      	b.n	8022948 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8022c04:	4681      	mov	r9, r0
 8022c06:	e6c8      	b.n	802299a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8022c08:	f1c1 0210 	rsb	r2, r1, #16
 8022c0c:	4341      	muls	r1, r0
 8022c0e:	fb09 1902 	mla	r9, r9, r2, r1
 8022c12:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022c16:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022c1a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022c1e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022c22:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022c26:	ea42 0909 	orr.w	r9, r2, r9
 8022c2a:	fa1f f289 	uxth.w	r2, r9
 8022c2e:	e75b      	b.n	8022ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022c30:	f8b7 c000 	ldrh.w	ip, [r7]
 8022c34:	43db      	mvns	r3, r3
 8022c36:	ea4f 202c 	mov.w	r0, ip, asr #8
 8022c3a:	fa5f fe83 	uxtb.w	lr, r3
 8022c3e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022c42:	fb00 f00e 	mul.w	r0, r0, lr
 8022c46:	1c41      	adds	r1, r0, #1
 8022c48:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022c4c:	1211      	asrs	r1, r2, #8
 8022c4e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8022c52:	f021 0107 	bic.w	r1, r1, #7
 8022c56:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022c5a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022c5e:	48d7      	ldr	r0, [pc, #860]	; (8022fbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022c60:	fb05 f50e 	mul.w	r5, r5, lr
 8022c64:	b2c9      	uxtb	r1, r1
 8022c66:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8022c6a:	1c69      	adds	r1, r5, #1
 8022c6c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8022c70:	10d1      	asrs	r1, r2, #3
 8022c72:	f021 0103 	bic.w	r1, r1, #3
 8022c76:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8022c7a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022c7e:	b2db      	uxtb	r3, r3
 8022c80:	00c9      	lsls	r1, r1, #3
 8022c82:	fb03 f30e 	mul.w	r3, r3, lr
 8022c86:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022c8a:	4301      	orrs	r1, r0
 8022c8c:	1c58      	adds	r0, r3, #1
 8022c8e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022c92:	00d2      	lsls	r2, r2, #3
 8022c94:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022c98:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022c9c:	430a      	orrs	r2, r1
 8022c9e:	e726      	b.n	8022aee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8022ca0:	f115 0e01 	adds.w	lr, r5, #1
 8022ca4:	f53f af24 	bmi.w	8022af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022ca8:	4572      	cmp	r2, lr
 8022caa:	f6ff af21 	blt.w	8022af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022cae:	f110 0e01 	adds.w	lr, r0, #1
 8022cb2:	f53f af1d 	bmi.w	8022af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022cb6:	4573      	cmp	r3, lr
 8022cb8:	f6ff af1a 	blt.w	8022af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022cbc:	b21b      	sxth	r3, r3
 8022cbe:	b212      	sxth	r2, r2
 8022cc0:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8022cc4:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8022cc8:	9301      	str	r3, [sp, #4]
 8022cca:	9200      	str	r2, [sp, #0]
 8022ccc:	4639      	mov	r1, r7
 8022cce:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8022cd2:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022cd4:	f7ff fc24 	bl	8022520 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022cd8:	e70a      	b.n	8022af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022cda:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022cdc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022ce0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022ce2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8022ce6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022ce8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022cec:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022cee:	141f      	asrs	r7, r3, #16
 8022cf0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022cf2:	141b      	asrs	r3, r3, #16
 8022cf4:	fb01 3707 	mla	r7, r1, r7, r3
 8022cf8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022cfa:	fa1f fc82 	uxth.w	ip, r2
 8022cfe:	eb03 0a07 	add.w	sl, r3, r7
 8022d02:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8022d06:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022d0a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022d0e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022d12:	b29b      	uxth	r3, r3
 8022d14:	2d00      	cmp	r5, #0
 8022d16:	f000 80fe 	beq.w	8022f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8022d1a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022d1e:	940c      	str	r4, [sp, #48]	; 0x30
 8022d20:	eb0a 0b01 	add.w	fp, sl, r1
 8022d24:	fa1f fa85 	uxth.w	sl, r5
 8022d28:	fb0a fc0c 	mul.w	ip, sl, ip
 8022d2c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022d30:	fa1f fa8a 	uxth.w	sl, sl
 8022d34:	eba0 000c 	sub.w	r0, r0, ip
 8022d38:	eba3 030a 	sub.w	r3, r3, sl
 8022d3c:	b280      	uxth	r0, r0
 8022d3e:	fb08 f000 	mul.w	r0, r8, r0
 8022d42:	b29b      	uxth	r3, r3
 8022d44:	fb09 0303 	mla	r3, r9, r3, r0
 8022d48:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022d4a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022d4e:	940d      	str	r4, [sp, #52]	; 0x34
 8022d50:	fb0a 3300 	mla	r3, sl, r0, r3
 8022d54:	fb0c 3304 	mla	r3, ip, r4, r3
 8022d58:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022d5c:	2b00      	cmp	r3, #0
 8022d5e:	f000 80cc 	beq.w	8022efa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8022d62:	9808      	ldr	r0, [sp, #32]
 8022d64:	9c08      	ldr	r4, [sp, #32]
 8022d66:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022d6a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022d6e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022d72:	f000 80d5 	beq.w	8022f20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022d76:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022d7a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022d7e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022d82:	fb09 f707 	mul.w	r7, r9, r7
 8022d86:	fb0a fc0c 	mul.w	ip, sl, ip
 8022d8a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022d8e:	f107 0b20 	add.w	fp, r7, #32
 8022d92:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022d96:	44cc      	add	ip, r9
 8022d98:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022d9c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022da0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022da4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022da8:	ea4c 0909 	orr.w	r9, ip, r9
 8022dac:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022db0:	8847      	ldrh	r7, [r0, #2]
 8022db2:	d019      	beq.n	8022de8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8022db4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022db8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022dbc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022dc0:	fb08 f807 	mul.w	r8, r8, r7
 8022dc4:	fb0a fc0c 	mul.w	ip, sl, ip
 8022dc8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022dcc:	f108 0b20 	add.w	fp, r8, #32
 8022dd0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022dd4:	44bc      	add	ip, r7
 8022dd6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022dda:	0a3f      	lsrs	r7, r7, #8
 8022ddc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022de0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022de4:	ea4c 0707 	orr.w	r7, ip, r7
 8022de8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022dec:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022df0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022df4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022df8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022dfc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022e00:	ea4c 0909 	orr.w	r9, ip, r9
 8022e04:	ea4a 0707 	orr.w	r7, sl, r7
 8022e08:	2d00      	cmp	r5, #0
 8022e0a:	f000 808b 	beq.w	8022f24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8022e0e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022e12:	3901      	subs	r1, #1
 8022e14:	0049      	lsls	r1, r1, #1
 8022e16:	3102      	adds	r1, #2
 8022e18:	eb00 0c01 	add.w	ip, r0, r1
 8022e1c:	5a41      	ldrh	r1, [r0, r1]
 8022e1e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022e20:	28ff      	cmp	r0, #255	; 0xff
 8022e22:	d019      	beq.n	8022e58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8022e24:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022e26:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022e2a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022e2e:	fb04 fa01 	mul.w	sl, r4, r1
 8022e32:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022e36:	fb08 f800 	mul.w	r8, r8, r0
 8022e3a:	f10a 0020 	add.w	r0, sl, #32
 8022e3e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022e42:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022e46:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022e4a:	4441      	add	r1, r8
 8022e4c:	0a00      	lsrs	r0, r0, #8
 8022e4e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022e52:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022e56:	4301      	orrs	r1, r0
 8022e58:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022e5a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022e5e:	2cff      	cmp	r4, #255	; 0xff
 8022e60:	d01a      	beq.n	8022e98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8022e62:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022e66:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022e6a:	fb04 fa00 	mul.w	sl, r4, r0
 8022e6e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022e72:	fb08 f80c 	mul.w	r8, r8, ip
 8022e76:	f10a 0c20 	add.w	ip, sl, #32
 8022e7a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022e7e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022e82:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022e86:	4440      	add	r0, r8
 8022e88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022e8c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022e90:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022e94:	ea40 000c 	orr.w	r0, r0, ip
 8022e98:	fb15 fc02 	smulbb	ip, r5, r2
 8022e9c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022ea0:	f1c5 0810 	rsb	r8, r5, #16
 8022ea4:	eba8 0802 	sub.w	r8, r8, r2
 8022ea8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022eac:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022eb0:	437a      	muls	r2, r7
 8022eb2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022eb6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022eba:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022ebe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022ec2:	fb09 2208 	mla	r2, r9, r8, r2
 8022ec6:	ea4a 0101 	orr.w	r1, sl, r1
 8022eca:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022ece:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022ed2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022ed6:	fb05 2201 	mla	r2, r5, r1, r2
 8022eda:	ea4b 0000 	orr.w	r0, fp, r0
 8022ede:	fb0c 2200 	mla	r2, ip, r0, r2
 8022ee2:	0d57      	lsrs	r7, r2, #21
 8022ee4:	0952      	lsrs	r2, r2, #5
 8022ee6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022eea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022eee:	433a      	orrs	r2, r7
 8022ef0:	2bff      	cmp	r3, #255	; 0xff
 8022ef2:	b292      	uxth	r2, r2
 8022ef4:	d127      	bne.n	8022f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8022ef6:	f8ae 2000 	strh.w	r2, [lr]
 8022efa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022efc:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8022efe:	4413      	add	r3, r2
 8022f00:	931d      	str	r3, [sp, #116]	; 0x74
 8022f02:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8022f04:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022f06:	441a      	add	r2, r3
 8022f08:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022f0a:	921e      	str	r2, [sp, #120]	; 0x78
 8022f0c:	3b01      	subs	r3, #1
 8022f0e:	f10e 0e02 	add.w	lr, lr, #2
 8022f12:	930f      	str	r3, [sp, #60]	; 0x3c
 8022f14:	e627      	b.n	8022b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8022f16:	fb08 f000 	mul.w	r0, r8, r0
 8022f1a:	fb09 0303 	mla	r3, r9, r3, r0
 8022f1e:	e71b      	b.n	8022d58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8022f20:	46b9      	mov	r9, r7
 8022f22:	e743      	b.n	8022dac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8022f24:	f1c2 0110 	rsb	r1, r2, #16
 8022f28:	437a      	muls	r2, r7
 8022f2a:	fb09 2901 	mla	r9, r9, r1, r2
 8022f2e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022f32:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022f36:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022f3a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022f3e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022f42:	4302      	orrs	r2, r0
 8022f44:	e7d4      	b.n	8022ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8022f46:	f8be 7000 	ldrh.w	r7, [lr]
 8022f4a:	4c1c      	ldr	r4, [pc, #112]	; (8022fbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022f4c:	43db      	mvns	r3, r3
 8022f4e:	1238      	asrs	r0, r7, #8
 8022f50:	fa5f fc83 	uxtb.w	ip, r3
 8022f54:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022f58:	10fd      	asrs	r5, r7, #3
 8022f5a:	fb00 f00c 	mul.w	r0, r0, ip
 8022f5e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022f62:	fb05 f10c 	mul.w	r1, r5, ip
 8022f66:	1c45      	adds	r5, r0, #1
 8022f68:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022f6c:	1215      	asrs	r5, r2, #8
 8022f6e:	f025 0507 	bic.w	r5, r5, #7
 8022f72:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022f76:	1c4d      	adds	r5, r1, #1
 8022f78:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8022f7c:	10d1      	asrs	r1, r2, #3
 8022f7e:	f021 0103 	bic.w	r1, r1, #3
 8022f82:	00fb      	lsls	r3, r7, #3
 8022f84:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022f88:	b2db      	uxtb	r3, r3
 8022f8a:	b2c0      	uxtb	r0, r0
 8022f8c:	00c9      	lsls	r1, r1, #3
 8022f8e:	fb03 f30c 	mul.w	r3, r3, ip
 8022f92:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022f96:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8022f9a:	4308      	orrs	r0, r1
 8022f9c:	1c59      	adds	r1, r3, #1
 8022f9e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8022fa2:	00d2      	lsls	r2, r2, #3
 8022fa4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022fa8:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8022fac:	4318      	orrs	r0, r3
 8022fae:	f8ae 0000 	strh.w	r0, [lr]
 8022fb2:	e7a2      	b.n	8022efa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8022fb4:	b013      	add	sp, #76	; 0x4c
 8022fb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022fba:	bf00      	nop
 8022fbc:	fffff800 	.word	0xfffff800

08022fc0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8022fc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022fc4:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8022fc8:	fb05 4c03 	mla	ip, r5, r3, r4
 8022fcc:	2d00      	cmp	r5, #0
 8022fce:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8022fd2:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8022fd6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8022fda:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8022fde:	8808      	ldrh	r0, [r1, #0]
 8022fe0:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8022fe4:	f2c0 80a7 	blt.w	8023136 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022fe8:	45aa      	cmp	sl, r5
 8022fea:	f340 80a4 	ble.w	8023136 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022fee:	2c00      	cmp	r4, #0
 8022ff0:	f2c0 809f 	blt.w	8023132 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022ff4:	42a3      	cmp	r3, r4
 8022ff6:	f340 809c 	ble.w	8023132 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022ffa:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8022ffe:	1c62      	adds	r2, r4, #1
 8023000:	f100 809c 	bmi.w	802313c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023004:	4293      	cmp	r3, r2
 8023006:	f340 8099 	ble.w	802313c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802300a:	f1b9 0f00 	cmp.w	r9, #0
 802300e:	f000 8095 	beq.w	802313c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023012:	f8be c002 	ldrh.w	ip, [lr, #2]
 8023016:	3501      	adds	r5, #1
 8023018:	f100 8094 	bmi.w	8023144 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802301c:	45aa      	cmp	sl, r5
 802301e:	f340 8091 	ble.w	8023144 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023022:	2f00      	cmp	r7, #0
 8023024:	f000 808e 	beq.w	8023144 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023028:	2c00      	cmp	r4, #0
 802302a:	f2c0 8089 	blt.w	8023140 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802302e:	42a3      	cmp	r3, r4
 8023030:	f340 8086 	ble.w	8023140 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8023034:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8023038:	3401      	adds	r4, #1
 802303a:	f100 8086 	bmi.w	802314a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802303e:	42a3      	cmp	r3, r4
 8023040:	f340 8083 	ble.w	802314a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8023044:	f1b9 0f00 	cmp.w	r9, #0
 8023048:	d07f      	beq.n	802314a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802304a:	3301      	adds	r3, #1
 802304c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8023050:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8023054:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023058:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 802305c:	fb19 fe07 	smulbb	lr, r9, r7
 8023060:	ea44 0808 	orr.w	r8, r4, r8
 8023064:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8023068:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802306c:	f1c7 0210 	rsb	r2, r7, #16
 8023070:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023074:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023078:	ea44 0c0c 	orr.w	ip, r4, ip
 802307c:	eba2 0209 	sub.w	r2, r2, r9
 8023080:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8023084:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8023088:	fb04 f40c 	mul.w	r4, r4, ip
 802308c:	fb02 4808 	mla	r8, r2, r8, r4
 8023090:	041a      	lsls	r2, r3, #16
 8023092:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023096:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802309a:	4313      	orrs	r3, r2
 802309c:	042a      	lsls	r2, r5, #16
 802309e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80230a2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80230a6:	fb0e 8303 	mla	r3, lr, r3, r8
 80230aa:	432a      	orrs	r2, r5
 80230ac:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80230b0:	fb07 3202 	mla	r2, r7, r2, r3
 80230b4:	0d53      	lsrs	r3, r2, #21
 80230b6:	0952      	lsrs	r2, r2, #5
 80230b8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80230bc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80230c0:	431a      	orrs	r2, r3
 80230c2:	b293      	uxth	r3, r2
 80230c4:	b2b4      	uxth	r4, r6
 80230c6:	1202      	asrs	r2, r0, #8
 80230c8:	43f6      	mvns	r6, r6
 80230ca:	b2f6      	uxtb	r6, r6
 80230cc:	121d      	asrs	r5, r3, #8
 80230ce:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80230d2:	fb12 f206 	smulbb	r2, r2, r6
 80230d6:	10c7      	asrs	r7, r0, #3
 80230d8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80230dc:	00c0      	lsls	r0, r0, #3
 80230de:	fb05 2504 	mla	r5, r5, r4, r2
 80230e2:	b2c0      	uxtb	r0, r0
 80230e4:	10da      	asrs	r2, r3, #3
 80230e6:	00db      	lsls	r3, r3, #3
 80230e8:	b2db      	uxtb	r3, r3
 80230ea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80230ee:	fb10 f006 	smulbb	r0, r0, r6
 80230f2:	b2ad      	uxth	r5, r5
 80230f4:	fb03 0004 	mla	r0, r3, r4, r0
 80230f8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80230fc:	fb17 f706 	smulbb	r7, r7, r6
 8023100:	b280      	uxth	r0, r0
 8023102:	1c6b      	adds	r3, r5, #1
 8023104:	fb02 7204 	mla	r2, r2, r4, r7
 8023108:	b292      	uxth	r2, r2
 802310a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802310e:	1c43      	adds	r3, r0, #1
 8023110:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8023114:	1c50      	adds	r0, r2, #1
 8023116:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802311a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802311e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023122:	0952      	lsrs	r2, r2, #5
 8023124:	432b      	orrs	r3, r5
 8023126:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802312a:	4313      	orrs	r3, r2
 802312c:	800b      	strh	r3, [r1, #0]
 802312e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023132:	4680      	mov	r8, r0
 8023134:	e763      	b.n	8022ffe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8023136:	4684      	mov	ip, r0
 8023138:	4680      	mov	r8, r0
 802313a:	e76c      	b.n	8023016 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 802313c:	4684      	mov	ip, r0
 802313e:	e76a      	b.n	8023016 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8023140:	4605      	mov	r5, r0
 8023142:	e779      	b.n	8023038 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8023144:	4603      	mov	r3, r0
 8023146:	4605      	mov	r5, r0
 8023148:	e782      	b.n	8023050 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 802314a:	4603      	mov	r3, r0
 802314c:	e780      	b.n	8023050 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0802314e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802314e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023152:	b093      	sub	sp, #76	; 0x4c
 8023154:	461d      	mov	r5, r3
 8023156:	9210      	str	r2, [sp, #64]	; 0x40
 8023158:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802315a:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 802315e:	920b      	str	r2, [sp, #44]	; 0x2c
 8023160:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8023164:	910a      	str	r1, [sp, #40]	; 0x28
 8023166:	6859      	ldr	r1, [r3, #4]
 8023168:	681b      	ldr	r3, [r3, #0]
 802316a:	9011      	str	r0, [sp, #68]	; 0x44
 802316c:	fb01 2707 	mla	r7, r1, r7, r2
 8023170:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8023174:	9307      	str	r3, [sp, #28]
 8023176:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023178:	681b      	ldr	r3, [r3, #0]
 802317a:	9309      	str	r3, [sp, #36]	; 0x24
 802317c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802317e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8023182:	43db      	mvns	r3, r3
 8023184:	b2db      	uxtb	r3, r3
 8023186:	9308      	str	r3, [sp, #32]
 8023188:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802318a:	2b00      	cmp	r3, #0
 802318c:	dc03      	bgt.n	8023196 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802318e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023190:	2b00      	cmp	r3, #0
 8023192:	f340 8203 	ble.w	802359c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023196:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023198:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802319c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80231a0:	1e48      	subs	r0, r1, #1
 80231a2:	f102 3cff 	add.w	ip, r2, #4294967295
 80231a6:	2d00      	cmp	r5, #0
 80231a8:	f340 80da 	ble.w	8023360 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80231ac:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80231b0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80231b4:	d406      	bmi.n	80231c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80231b6:	4586      	cmp	lr, r0
 80231b8:	da04      	bge.n	80231c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80231ba:	2b00      	cmp	r3, #0
 80231bc:	db02      	blt.n	80231c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80231be:	4563      	cmp	r3, ip
 80231c0:	f2c0 80cf 	blt.w	8023362 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80231c4:	f11e 0e01 	adds.w	lr, lr, #1
 80231c8:	f100 80c1 	bmi.w	802334e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80231cc:	4571      	cmp	r1, lr
 80231ce:	f2c0 80be 	blt.w	802334e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80231d2:	3301      	adds	r3, #1
 80231d4:	f100 80bb 	bmi.w	802334e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80231d8:	429a      	cmp	r2, r3
 80231da:	f2c0 80b8 	blt.w	802334e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80231de:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80231e2:	46a9      	mov	r9, r5
 80231e4:	f1b9 0f00 	cmp.w	r9, #0
 80231e8:	f340 80d8 	ble.w	802339c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80231ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80231ee:	1421      	asrs	r1, r4, #16
 80231f0:	ea4f 4026 	mov.w	r0, r6, asr #16
 80231f4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80231f8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80231fc:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023200:	f100 8111 	bmi.w	8023426 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023204:	f10e 3aff 	add.w	sl, lr, #4294967295
 8023208:	4551      	cmp	r1, sl
 802320a:	f280 810c 	bge.w	8023426 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802320e:	2800      	cmp	r0, #0
 8023210:	f2c0 8109 	blt.w	8023426 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023214:	f103 3aff 	add.w	sl, r3, #4294967295
 8023218:	4550      	cmp	r0, sl
 802321a:	f280 8104 	bge.w	8023426 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802321e:	fa0f f38e 	sxth.w	r3, lr
 8023222:	fb00 1103 	mla	r1, r0, r3, r1
 8023226:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023228:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 802322c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8023230:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8023234:	f1bc 0f00 	cmp.w	ip, #0
 8023238:	d007      	beq.n	802324a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 802323a:	005b      	lsls	r3, r3, #1
 802323c:	eb0a 0003 	add.w	r0, sl, r3
 8023240:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8023244:	930c      	str	r3, [sp, #48]	; 0x30
 8023246:	8843      	ldrh	r3, [r0, #2]
 8023248:	930d      	str	r3, [sp, #52]	; 0x34
 802324a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 802324e:	fb12 f30c 	smulbb	r3, r2, ip
 8023252:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023256:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802325a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802325e:	10db      	asrs	r3, r3, #3
 8023260:	ea40 000e 	orr.w	r0, r0, lr
 8023264:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023268:	f1cc 0e10 	rsb	lr, ip, #16
 802326c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023270:	ebae 0e02 	sub.w	lr, lr, r2
 8023274:	ea4a 0101 	orr.w	r1, sl, r1
 8023278:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802327c:	4351      	muls	r1, r2
 802327e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8023280:	9f08      	ldr	r7, [sp, #32]
 8023282:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8023286:	fb0e 1e00 	mla	lr, lr, r0, r1
 802328a:	0410      	lsls	r0, r2, #16
 802328c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023290:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023294:	4310      	orrs	r0, r2
 8023296:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023298:	990c      	ldr	r1, [sp, #48]	; 0x30
 802329a:	0412      	lsls	r2, r2, #16
 802329c:	fb03 e000 	mla	r0, r3, r0, lr
 80232a0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80232a4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80232a8:	ea42 020e 	orr.w	r2, r2, lr
 80232ac:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80232b0:	fb03 0302 	mla	r3, r3, r2, r0
 80232b4:	0d5a      	lsrs	r2, r3, #21
 80232b6:	095b      	lsrs	r3, r3, #5
 80232b8:	f8b8 0000 	ldrh.w	r0, [r8]
 80232bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80232c0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80232c4:	4313      	orrs	r3, r2
 80232c6:	b29b      	uxth	r3, r3
 80232c8:	1201      	asrs	r1, r0, #8
 80232ca:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80232ce:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80232d2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80232d6:	fb11 f107 	smulbb	r1, r1, r7
 80232da:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80232de:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80232e2:	00c0      	lsls	r0, r0, #3
 80232e4:	fb0c 1c02 	mla	ip, ip, r2, r1
 80232e8:	b2c0      	uxtb	r0, r0
 80232ea:	10d9      	asrs	r1, r3, #3
 80232ec:	00db      	lsls	r3, r3, #3
 80232ee:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80232f2:	b2db      	uxtb	r3, r3
 80232f4:	fb10 f007 	smulbb	r0, r0, r7
 80232f8:	fa1f fc8c 	uxth.w	ip, ip
 80232fc:	fb03 0302 	mla	r3, r3, r2, r0
 8023300:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023304:	fb1e fe07 	smulbb	lr, lr, r7
 8023308:	fb01 e102 	mla	r1, r1, r2, lr
 802330c:	b29a      	uxth	r2, r3
 802330e:	f10c 0301 	add.w	r3, ip, #1
 8023312:	b289      	uxth	r1, r1
 8023314:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8023318:	1c53      	adds	r3, r2, #1
 802331a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802331e:	1c4a      	adds	r2, r1, #1
 8023320:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023324:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8023328:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802332c:	0949      	lsrs	r1, r1, #5
 802332e:	ea43 030c 	orr.w	r3, r3, ip
 8023332:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023336:	430b      	orrs	r3, r1
 8023338:	f8a8 3000 	strh.w	r3, [r8]
 802333c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802333e:	441c      	add	r4, r3
 8023340:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023342:	f108 0802 	add.w	r8, r8, #2
 8023346:	441e      	add	r6, r3
 8023348:	f109 39ff 	add.w	r9, r9, #4294967295
 802334c:	e74a      	b.n	80231e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802334e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023350:	441c      	add	r4, r3
 8023352:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023354:	441e      	add	r6, r3
 8023356:	9b07      	ldr	r3, [sp, #28]
 8023358:	3302      	adds	r3, #2
 802335a:	3d01      	subs	r5, #1
 802335c:	9307      	str	r3, [sp, #28]
 802335e:	e722      	b.n	80231a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023360:	d022      	beq.n	80233a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8023362:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023364:	1e6b      	subs	r3, r5, #1
 8023366:	fb00 4003 	mla	r0, r0, r3, r4
 802336a:	1400      	asrs	r0, r0, #16
 802336c:	f53f af37 	bmi.w	80231de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023370:	3901      	subs	r1, #1
 8023372:	4288      	cmp	r0, r1
 8023374:	f6bf af33 	bge.w	80231de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023378:	9920      	ldr	r1, [sp, #128]	; 0x80
 802337a:	fb01 6303 	mla	r3, r1, r3, r6
 802337e:	141b      	asrs	r3, r3, #16
 8023380:	f53f af2d 	bmi.w	80231de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023384:	3a01      	subs	r2, #1
 8023386:	4293      	cmp	r3, r2
 8023388:	f6bf af29 	bge.w	80231de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802338c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8023390:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8023394:	46a8      	mov	r8, r5
 8023396:	f1b8 0f00 	cmp.w	r8, #0
 802339a:	dc5e      	bgt.n	802345a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 802339c:	9b07      	ldr	r3, [sp, #28]
 802339e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80233a2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80233a6:	9307      	str	r3, [sp, #28]
 80233a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80233aa:	2b00      	cmp	r3, #0
 80233ac:	f340 80f6 	ble.w	802359c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80233b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80233b4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80233b8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80233bc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80233be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80233c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80233c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80233ca:	eef0 6a62 	vmov.f32	s13, s5
 80233ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 80233d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80233d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80233da:	ee16 4a90 	vmov	r4, s13
 80233de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80233e2:	eef0 6a43 	vmov.f32	s13, s6
 80233e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80233ea:	ee12 2a90 	vmov	r2, s5
 80233ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80233f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80233f6:	ee13 2a10 	vmov	r2, s6
 80233fa:	931f      	str	r3, [sp, #124]	; 0x7c
 80233fc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80233fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8023402:	9320      	str	r3, [sp, #128]	; 0x80
 8023404:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023406:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023408:	3b01      	subs	r3, #1
 802340a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802340e:	930a      	str	r3, [sp, #40]	; 0x28
 8023410:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023412:	ee16 6a90 	vmov	r6, s13
 8023416:	bf14      	ite	ne
 8023418:	461d      	movne	r5, r3
 802341a:	4615      	moveq	r5, r2
 802341c:	eeb0 3a67 	vmov.f32	s6, s15
 8023420:	eef0 2a47 	vmov.f32	s5, s14
 8023424:	e6b0      	b.n	8023188 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023426:	f111 0a01 	adds.w	sl, r1, #1
 802342a:	d487      	bmi.n	802333c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802342c:	45d6      	cmp	lr, sl
 802342e:	db85      	blt.n	802333c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023430:	f110 0a01 	adds.w	sl, r0, #1
 8023434:	d482      	bmi.n	802333c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023436:	4553      	cmp	r3, sl
 8023438:	db80      	blt.n	802333c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802343a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 802343c:	9101      	str	r1, [sp, #4]
 802343e:	b21b      	sxth	r3, r3
 8023440:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8023444:	9300      	str	r3, [sp, #0]
 8023446:	e9cd c704 	strd	ip, r7, [sp, #16]
 802344a:	fa0f f38e 	sxth.w	r3, lr
 802344e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023450:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023452:	4641      	mov	r1, r8
 8023454:	f7ff fdb4 	bl	8022fc0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8023458:	e770      	b.n	802333c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802345a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802345c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802345e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023462:	1430      	asrs	r0, r6, #16
 8023464:	1423      	asrs	r3, r4, #16
 8023466:	fb01 3000 	mla	r0, r1, r0, r3
 802346a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802346c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8023470:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8023474:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023478:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802347c:	8858      	ldrh	r0, [r3, #2]
 802347e:	f1be 0f00 	cmp.w	lr, #0
 8023482:	d00b      	beq.n	802349c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8023484:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023488:	3901      	subs	r1, #1
 802348a:	0049      	lsls	r1, r1, #1
 802348c:	3102      	adds	r1, #2
 802348e:	eb03 0b01 	add.w	fp, r3, r1
 8023492:	5a5b      	ldrh	r3, [r3, r1]
 8023494:	930e      	str	r3, [sp, #56]	; 0x38
 8023496:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802349a:	930f      	str	r3, [sp, #60]	; 0x3c
 802349c:	ea4f 410c 	mov.w	r1, ip, lsl #16
 80234a0:	fb12 f30e 	smulbb	r3, r2, lr
 80234a4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80234a8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80234ac:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 80234b0:	10db      	asrs	r3, r3, #3
 80234b2:	ea41 010c 	orr.w	r1, r1, ip
 80234b6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80234ba:	f1ce 0c10 	rsb	ip, lr, #16
 80234be:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80234c2:	ebac 0c02 	sub.w	ip, ip, r2
 80234c6:	ea4b 0000 	orr.w	r0, fp, r0
 80234ca:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80234ce:	4350      	muls	r0, r2
 80234d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80234d2:	9f08      	ldr	r7, [sp, #32]
 80234d4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80234d8:	fb0c 0c01 	mla	ip, ip, r1, r0
 80234dc:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80234e0:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 80234e4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80234e6:	980e      	ldr	r0, [sp, #56]	; 0x38
 80234e8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80234ec:	0412      	lsls	r2, r2, #16
 80234ee:	ea4b 0101 	orr.w	r1, fp, r1
 80234f2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80234f6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80234fa:	fb03 c101 	mla	r1, r3, r1, ip
 80234fe:	4302      	orrs	r2, r0
 8023500:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023504:	fb03 1202 	mla	r2, r3, r2, r1
 8023508:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 802350c:	0952      	lsrs	r2, r2, #5
 802350e:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8023512:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8023516:	f8b9 2000 	ldrh.w	r2, [r9]
 802351a:	ea4b 0303 	orr.w	r3, fp, r3
 802351e:	b29b      	uxth	r3, r3
 8023520:	1211      	asrs	r1, r2, #8
 8023522:	1218      	asrs	r0, r3, #8
 8023524:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023528:	fb11 f107 	smulbb	r1, r1, r7
 802352c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8023530:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023534:	00d2      	lsls	r2, r2, #3
 8023536:	fb00 100a 	mla	r0, r0, sl, r1
 802353a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 802353e:	10d9      	asrs	r1, r3, #3
 8023540:	b2d2      	uxtb	r2, r2
 8023542:	00db      	lsls	r3, r3, #3
 8023544:	fb1c fc07 	smulbb	ip, ip, r7
 8023548:	fb12 f207 	smulbb	r2, r2, r7
 802354c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023550:	b2db      	uxtb	r3, r3
 8023552:	b280      	uxth	r0, r0
 8023554:	fb01 c10a 	mla	r1, r1, sl, ip
 8023558:	fb03 230a 	mla	r3, r3, sl, r2
 802355c:	b29b      	uxth	r3, r3
 802355e:	b289      	uxth	r1, r1
 8023560:	1c42      	adds	r2, r0, #1
 8023562:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023566:	f101 0c01 	add.w	ip, r1, #1
 802356a:	1c5a      	adds	r2, r3, #1
 802356c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023570:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8023574:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023576:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802357a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802357e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023582:	4310      	orrs	r0, r2
 8023584:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023588:	441c      	add	r4, r3
 802358a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802358c:	ea40 000c 	orr.w	r0, r0, ip
 8023590:	f829 0b02 	strh.w	r0, [r9], #2
 8023594:	441e      	add	r6, r3
 8023596:	f108 38ff 	add.w	r8, r8, #4294967295
 802359a:	e6fc      	b.n	8023396 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 802359c:	b013      	add	sp, #76	; 0x4c
 802359e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080235a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80235a2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80235a6:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 80235aa:	fb0e 4703 	mla	r7, lr, r3, r4
 80235ae:	f1be 0f00 	cmp.w	lr, #0
 80235b2:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 80235b6:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 80235ba:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 80235be:	8808      	ldrh	r0, [r1, #0]
 80235c0:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 80235c4:	db60      	blt.n	8023688 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80235c6:	45f1      	cmp	r9, lr
 80235c8:	dd5e      	ble.n	8023688 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80235ca:	2c00      	cmp	r4, #0
 80235cc:	db5a      	blt.n	8023684 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80235ce:	42a3      	cmp	r3, r4
 80235d0:	dd58      	ble.n	8023684 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80235d2:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 80235d6:	1c62      	adds	r2, r4, #1
 80235d8:	d459      	bmi.n	802368e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80235da:	4293      	cmp	r3, r2
 80235dc:	dd57      	ble.n	802368e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80235de:	2d00      	cmp	r5, #0
 80235e0:	d055      	beq.n	802368e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80235e2:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 80235e6:	f11e 0e01 	adds.w	lr, lr, #1
 80235ea:	d454      	bmi.n	8023696 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80235ec:	45f1      	cmp	r9, lr
 80235ee:	dd52      	ble.n	8023696 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80235f0:	2e00      	cmp	r6, #0
 80235f2:	d050      	beq.n	8023696 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80235f4:	2c00      	cmp	r4, #0
 80235f6:	db4c      	blt.n	8023692 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80235f8:	42a3      	cmp	r3, r4
 80235fa:	dd4a      	ble.n	8023692 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80235fc:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8023600:	3401      	adds	r4, #1
 8023602:	d405      	bmi.n	8023610 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023604:	42a3      	cmp	r3, r4
 8023606:	dd03      	ble.n	8023610 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023608:	b115      	cbz	r5, 8023610 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802360a:	3301      	adds	r3, #1
 802360c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8023610:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8023614:	fb15 f406 	smulbb	r4, r5, r6
 8023618:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802361c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8023620:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023624:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8023628:	ea43 0c0c 	orr.w	ip, r3, ip
 802362c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023630:	f1c6 0310 	rsb	r3, r6, #16
 8023634:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023638:	1b5b      	subs	r3, r3, r5
 802363a:	ea4e 0707 	orr.w	r7, lr, r7
 802363e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8023642:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8023646:	437d      	muls	r5, r7
 8023648:	fb03 5c0c 	mla	ip, r3, ip, r5
 802364c:	0403      	lsls	r3, r0, #16
 802364e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023652:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023656:	4318      	orrs	r0, r3
 8023658:	0413      	lsls	r3, r2, #16
 802365a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802365e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023662:	4313      	orrs	r3, r2
 8023664:	fb04 c000 	mla	r0, r4, r0, ip
 8023668:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 802366c:	fb06 0003 	mla	r0, r6, r3, r0
 8023670:	0d43      	lsrs	r3, r0, #21
 8023672:	0940      	lsrs	r0, r0, #5
 8023674:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023678:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802367c:	4318      	orrs	r0, r3
 802367e:	8008      	strh	r0, [r1, #0]
 8023680:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023684:	4684      	mov	ip, r0
 8023686:	e7a6      	b.n	80235d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8023688:	4607      	mov	r7, r0
 802368a:	4684      	mov	ip, r0
 802368c:	e7ab      	b.n	80235e6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 802368e:	4607      	mov	r7, r0
 8023690:	e7a9      	b.n	80235e6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023692:	4602      	mov	r2, r0
 8023694:	e7b4      	b.n	8023600 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8023696:	4602      	mov	r2, r0
 8023698:	e7ba      	b.n	8023610 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0802369a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802369a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802369e:	b08f      	sub	sp, #60	; 0x3c
 80236a0:	461d      	mov	r5, r3
 80236a2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80236a4:	920c      	str	r2, [sp, #48]	; 0x30
 80236a6:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 80236aa:	9107      	str	r1, [sp, #28]
 80236ac:	6859      	ldr	r1, [r3, #4]
 80236ae:	681b      	ldr	r3, [r3, #0]
 80236b0:	900d      	str	r0, [sp, #52]	; 0x34
 80236b2:	fb01 2707 	mla	r7, r1, r7, r2
 80236b6:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80236ba:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80236bc:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 80236c0:	f8d3 8000 	ldr.w	r8, [r3]
 80236c4:	9b07      	ldr	r3, [sp, #28]
 80236c6:	2b00      	cmp	r3, #0
 80236c8:	dc03      	bgt.n	80236d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80236ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80236cc:	2b00      	cmp	r3, #0
 80236ce:	f340 8181 	ble.w	80239d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80236d2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80236d4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80236d8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80236dc:	1e48      	subs	r0, r1, #1
 80236de:	f102 3cff 	add.w	ip, r2, #4294967295
 80236e2:	2d00      	cmp	r5, #0
 80236e4:	f340 809b 	ble.w	802381e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 80236e8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80236ec:	ea4f 4326 	mov.w	r3, r6, asr #16
 80236f0:	d406      	bmi.n	8023700 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80236f2:	4586      	cmp	lr, r0
 80236f4:	da04      	bge.n	8023700 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80236f6:	2b00      	cmp	r3, #0
 80236f8:	db02      	blt.n	8023700 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80236fa:	4563      	cmp	r3, ip
 80236fc:	f2c0 8090 	blt.w	8023820 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8023700:	f11e 0e01 	adds.w	lr, lr, #1
 8023704:	f100 8084 	bmi.w	8023810 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023708:	4571      	cmp	r1, lr
 802370a:	f2c0 8081 	blt.w	8023810 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802370e:	3301      	adds	r3, #1
 8023710:	d47e      	bmi.n	8023810 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023712:	429a      	cmp	r2, r3
 8023714:	db7c      	blt.n	8023810 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023716:	46aa      	mov	sl, r5
 8023718:	46b9      	mov	r9, r7
 802371a:	f1ba 0f00 	cmp.w	sl, #0
 802371e:	f340 8099 	ble.w	8023854 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8023722:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023724:	1421      	asrs	r1, r4, #16
 8023726:	ea4f 4026 	mov.w	r0, r6, asr #16
 802372a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802372e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023732:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023736:	f100 80d0 	bmi.w	80238da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802373a:	f10e 3bff 	add.w	fp, lr, #4294967295
 802373e:	4559      	cmp	r1, fp
 8023740:	f280 80cb 	bge.w	80238da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023744:	2800      	cmp	r0, #0
 8023746:	f2c0 80c8 	blt.w	80238da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802374a:	f103 3bff 	add.w	fp, r3, #4294967295
 802374e:	4558      	cmp	r0, fp
 8023750:	f280 80c3 	bge.w	80238da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023754:	fa0f fe8e 	sxth.w	lr, lr
 8023758:	fb00 110e 	mla	r1, r0, lr, r1
 802375c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023760:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8023764:	8841      	ldrh	r1, [r0, #2]
 8023766:	f1bc 0f00 	cmp.w	ip, #0
 802376a:	d00b      	beq.n	8023784 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 802376c:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8023770:	3b01      	subs	r3, #1
 8023772:	005b      	lsls	r3, r3, #1
 8023774:	3302      	adds	r3, #2
 8023776:	eb00 0e03 	add.w	lr, r0, r3
 802377a:	5ac3      	ldrh	r3, [r0, r3]
 802377c:	9308      	str	r3, [sp, #32]
 802377e:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8023782:	9309      	str	r3, [sp, #36]	; 0x24
 8023784:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8023788:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802378c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023790:	ea40 000b 	orr.w	r0, r0, fp
 8023794:	fb12 f30c 	smulbb	r3, r2, ip
 8023798:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802379c:	10db      	asrs	r3, r3, #3
 802379e:	f1cc 0e10 	rsb	lr, ip, #16
 80237a2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80237a6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80237aa:	ebae 0e02 	sub.w	lr, lr, r2
 80237ae:	ea4b 0101 	orr.w	r1, fp, r1
 80237b2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80237b6:	4351      	muls	r1, r2
 80237b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80237ba:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80237be:	fb0e 1e00 	mla	lr, lr, r0, r1
 80237c2:	0410      	lsls	r0, r2, #16
 80237c4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80237c8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80237cc:	4310      	orrs	r0, r2
 80237ce:	9a08      	ldr	r2, [sp, #32]
 80237d0:	9908      	ldr	r1, [sp, #32]
 80237d2:	0412      	lsls	r2, r2, #16
 80237d4:	fb03 e000 	mla	r0, r3, r0, lr
 80237d8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80237dc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80237e0:	ea42 020e 	orr.w	r2, r2, lr
 80237e4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80237e8:	fb03 0302 	mla	r3, r3, r2, r0
 80237ec:	0d5a      	lsrs	r2, r3, #21
 80237ee:	095b      	lsrs	r3, r3, #5
 80237f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80237f4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80237f8:	4313      	orrs	r3, r2
 80237fa:	f8a9 3000 	strh.w	r3, [r9]
 80237fe:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023800:	441c      	add	r4, r3
 8023802:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023804:	f109 0902 	add.w	r9, r9, #2
 8023808:	441e      	add	r6, r3
 802380a:	f10a 3aff 	add.w	sl, sl, #4294967295
 802380e:	e784      	b.n	802371a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8023810:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023812:	441c      	add	r4, r3
 8023814:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023816:	3d01      	subs	r5, #1
 8023818:	441e      	add	r6, r3
 802381a:	3702      	adds	r7, #2
 802381c:	e761      	b.n	80236e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802381e:	d01d      	beq.n	802385c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8023820:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023822:	1e6b      	subs	r3, r5, #1
 8023824:	fb00 4003 	mla	r0, r0, r3, r4
 8023828:	1400      	asrs	r0, r0, #16
 802382a:	f53f af74 	bmi.w	8023716 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802382e:	3901      	subs	r1, #1
 8023830:	4288      	cmp	r0, r1
 8023832:	f6bf af70 	bge.w	8023716 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023836:	991c      	ldr	r1, [sp, #112]	; 0x70
 8023838:	fb01 6303 	mla	r3, r1, r3, r6
 802383c:	141b      	asrs	r3, r3, #16
 802383e:	f53f af6a 	bmi.w	8023716 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023842:	3a01      	subs	r2, #1
 8023844:	4293      	cmp	r3, r2
 8023846:	f6bf af66 	bge.w	8023716 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802384a:	46a9      	mov	r9, r5
 802384c:	46ba      	mov	sl, r7
 802384e:	f1b9 0f00 	cmp.w	r9, #0
 8023852:	dc5a      	bgt.n	802390a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8023854:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023858:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 802385c:	9b07      	ldr	r3, [sp, #28]
 802385e:	2b00      	cmp	r3, #0
 8023860:	f340 80b8 	ble.w	80239d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8023864:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023868:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802386c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023870:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023872:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023876:	ee31 1a05 	vadd.f32	s2, s2, s10
 802387a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802387e:	eef0 6a62 	vmov.f32	s13, s5
 8023882:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023886:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802388a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802388e:	ee16 4a90 	vmov	r4, s13
 8023892:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023896:	eef0 6a43 	vmov.f32	s13, s6
 802389a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802389e:	ee12 2a90 	vmov	r2, s5
 80238a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80238a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80238aa:	ee13 2a10 	vmov	r2, s6
 80238ae:	931b      	str	r3, [sp, #108]	; 0x6c
 80238b0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80238b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80238b6:	931c      	str	r3, [sp, #112]	; 0x70
 80238b8:	9b07      	ldr	r3, [sp, #28]
 80238ba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80238bc:	3b01      	subs	r3, #1
 80238be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80238c2:	9307      	str	r3, [sp, #28]
 80238c4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80238c6:	ee16 6a90 	vmov	r6, s13
 80238ca:	bf14      	ite	ne
 80238cc:	461d      	movne	r5, r3
 80238ce:	4615      	moveq	r5, r2
 80238d0:	eeb0 3a67 	vmov.f32	s6, s15
 80238d4:	eef0 2a47 	vmov.f32	s5, s14
 80238d8:	e6f4      	b.n	80236c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80238da:	f111 0b01 	adds.w	fp, r1, #1
 80238de:	d48e      	bmi.n	80237fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80238e0:	45de      	cmp	lr, fp
 80238e2:	db8c      	blt.n	80237fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80238e4:	f110 0b01 	adds.w	fp, r0, #1
 80238e8:	d489      	bmi.n	80237fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80238ea:	455b      	cmp	r3, fp
 80238ec:	db87      	blt.n	80237fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80238ee:	b21b      	sxth	r3, r3
 80238f0:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80238f4:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 80238f8:	9300      	str	r3, [sp, #0]
 80238fa:	4642      	mov	r2, r8
 80238fc:	fa0f f38e 	sxth.w	r3, lr
 8023900:	4649      	mov	r1, r9
 8023902:	980d      	ldr	r0, [sp, #52]	; 0x34
 8023904:	f7ff fe4d 	bl	80235a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8023908:	e779      	b.n	80237fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802390a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802390c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8023910:	1420      	asrs	r0, r4, #16
 8023912:	1431      	asrs	r1, r6, #16
 8023914:	fb03 0101 	mla	r1, r3, r1, r0
 8023918:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802391c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023920:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8023924:	8841      	ldrh	r1, [r0, #2]
 8023926:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802392a:	f1be 0f00 	cmp.w	lr, #0
 802392e:	d00b      	beq.n	8023948 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8023930:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8023934:	3b01      	subs	r3, #1
 8023936:	005b      	lsls	r3, r3, #1
 8023938:	3302      	adds	r3, #2
 802393a:	eb00 0b03 	add.w	fp, r0, r3
 802393e:	5ac3      	ldrh	r3, [r0, r3]
 8023940:	930a      	str	r3, [sp, #40]	; 0x28
 8023942:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023946:	930b      	str	r3, [sp, #44]	; 0x2c
 8023948:	ea4f 400c 	mov.w	r0, ip, lsl #16
 802394c:	fb12 f30e 	smulbb	r3, r2, lr
 8023950:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023954:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023958:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802395c:	10db      	asrs	r3, r3, #3
 802395e:	ea40 000c 	orr.w	r0, r0, ip
 8023962:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023966:	f1ce 0c10 	rsb	ip, lr, #16
 802396a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802396e:	ebac 0c02 	sub.w	ip, ip, r2
 8023972:	ea4b 0101 	orr.w	r1, fp, r1
 8023976:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802397a:	4351      	muls	r1, r2
 802397c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802397e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8023982:	fb0c 1c00 	mla	ip, ip, r0, r1
 8023986:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802398a:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 802398e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023990:	990a      	ldr	r1, [sp, #40]	; 0x28
 8023992:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023996:	0412      	lsls	r2, r2, #16
 8023998:	ea4b 0000 	orr.w	r0, fp, r0
 802399c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80239a0:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80239a4:	fb03 c000 	mla	r0, r3, r0, ip
 80239a8:	ea42 0b0b 	orr.w	fp, r2, fp
 80239ac:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80239b0:	fb03 000b 	mla	r0, r3, fp, r0
 80239b4:	0d43      	lsrs	r3, r0, #21
 80239b6:	0940      	lsrs	r0, r0, #5
 80239b8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80239bc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80239c0:	4318      	orrs	r0, r3
 80239c2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80239c4:	f82a 0b02 	strh.w	r0, [sl], #2
 80239c8:	441c      	add	r4, r3
 80239ca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80239cc:	f109 39ff 	add.w	r9, r9, #4294967295
 80239d0:	441e      	add	r6, r3
 80239d2:	e73c      	b.n	802384e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80239d4:	b00f      	add	sp, #60	; 0x3c
 80239d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080239da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80239da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80239de:	b085      	sub	sp, #20
 80239e0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80239e4:	9102      	str	r1, [sp, #8]
 80239e6:	2c00      	cmp	r4, #0
 80239e8:	fb04 7103 	mla	r1, r4, r3, r7
 80239ec:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80239f0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80239f4:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80239f8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80239fc:	f2c0 811b 	blt.w	8023c36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8023a00:	45a6      	cmp	lr, r4
 8023a02:	f340 8118 	ble.w	8023c36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8023a06:	2f00      	cmp	r7, #0
 8023a08:	f2c0 8113 	blt.w	8023c32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8023a0c:	42bb      	cmp	r3, r7
 8023a0e:	f340 8110 	ble.w	8023c32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8023a12:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8023a16:	1c7a      	adds	r2, r7, #1
 8023a18:	f100 8110 	bmi.w	8023c3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8023a1c:	4293      	cmp	r3, r2
 8023a1e:	f340 810d 	ble.w	8023c3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8023a22:	2e00      	cmp	r6, #0
 8023a24:	f000 810c 	beq.w	8023c40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8023a28:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023a2c:	3401      	adds	r4, #1
 8023a2e:	f100 810b 	bmi.w	8023c48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8023a32:	45a6      	cmp	lr, r4
 8023a34:	f340 8108 	ble.w	8023c48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8023a38:	2800      	cmp	r0, #0
 8023a3a:	f000 8108 	beq.w	8023c4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8023a3e:	2f00      	cmp	r7, #0
 8023a40:	f2c0 8100 	blt.w	8023c44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8023a44:	42bb      	cmp	r3, r7
 8023a46:	f340 80fd 	ble.w	8023c44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8023a4a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023a4e:	3701      	adds	r7, #1
 8023a50:	f100 8100 	bmi.w	8023c54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8023a54:	42bb      	cmp	r3, r7
 8023a56:	f340 80fd 	ble.w	8023c54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8023a5a:	2e00      	cmp	r6, #0
 8023a5c:	f000 80fc 	beq.w	8023c58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8023a60:	3301      	adds	r3, #1
 8023a62:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8023a66:	b2b6      	uxth	r6, r6
 8023a68:	b280      	uxth	r0, r0
 8023a6a:	fb00 fe06 	mul.w	lr, r0, r6
 8023a6e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023a72:	0136      	lsls	r6, r6, #4
 8023a74:	eba6 070e 	sub.w	r7, r6, lr
 8023a78:	b280      	uxth	r0, r0
 8023a7a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023a7e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023a82:	b2bf      	uxth	r7, r7
 8023a84:	1a1b      	subs	r3, r3, r0
 8023a86:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023a8a:	b29b      	uxth	r3, r3
 8023a8c:	fb0a f607 	mul.w	r6, sl, r7
 8023a90:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023a94:	fb0b 6603 	mla	r6, fp, r3, r6
 8023a98:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023a9c:	fb00 6609 	mla	r6, r0, r9, r6
 8023aa0:	fb0e 6608 	mla	r6, lr, r8, r6
 8023aa4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023aa8:	9600      	str	r6, [sp, #0]
 8023aaa:	2e00      	cmp	r6, #0
 8023aac:	f000 80be 	beq.w	8023c2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8023ab0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023ab4:	fb0b fc0c 	mul.w	ip, fp, ip
 8023ab8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023abc:	fb0b f505 	mul.w	r5, fp, r5
 8023ac0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023ac4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023ac8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023acc:	44dc      	add	ip, fp
 8023ace:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023ad2:	9501      	str	r5, [sp, #4]
 8023ad4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023ad8:	9503      	str	r5, [sp, #12]
 8023ada:	9d01      	ldr	r5, [sp, #4]
 8023adc:	9e02      	ldr	r6, [sp, #8]
 8023ade:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023ae2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023ae6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023aea:	fb0a fc0c 	mul.w	ip, sl, ip
 8023aee:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023af2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023af6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023afa:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023afe:	4465      	add	r5, ip
 8023b00:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023b04:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023b08:	fb09 fc0c 	mul.w	ip, r9, ip
 8023b0c:	fb09 f904 	mul.w	r9, r9, r4
 8023b10:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023b14:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023b18:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023b1c:	fb08 f404 	mul.w	r4, r8, r4
 8023b20:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023b24:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023b28:	fb08 f802 	mul.w	r8, r8, r2
 8023b2c:	fb0a fa01 	mul.w	sl, sl, r1
 8023b30:	0a22      	lsrs	r2, r4, #8
 8023b32:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023b36:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023b3a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023b3e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023b42:	4414      	add	r4, r2
 8023b44:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023b48:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023b4c:	0a2d      	lsrs	r5, r5, #8
 8023b4e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023b52:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023b56:	9a03      	ldr	r2, [sp, #12]
 8023b58:	8836      	ldrh	r6, [r6, #0]
 8023b5a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023b5e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023b62:	437d      	muls	r5, r7
 8023b64:	4461      	add	r1, ip
 8023b66:	0a24      	lsrs	r4, r4, #8
 8023b68:	fb02 5503 	mla	r5, r2, r3, r5
 8023b6c:	0a09      	lsrs	r1, r1, #8
 8023b6e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023b72:	fb04 540e 	mla	r4, r4, lr, r5
 8023b76:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023b7a:	fb01 4100 	mla	r1, r1, r0, r4
 8023b7e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023b82:	0a09      	lsrs	r1, r1, #8
 8023b84:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023b88:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023b8c:	fb07 f70a 	mul.w	r7, r7, sl
 8023b90:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023b94:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023b98:	fb03 7101 	mla	r1, r3, r1, r7
 8023b9c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023ba0:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023ba4:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023ba8:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023bac:	fb00 e101 	mla	r1, r0, r1, lr
 8023bb0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8023bb4:	9a00      	ldr	r2, [sp, #0]
 8023bb6:	b287      	uxth	r7, r0
 8023bb8:	437a      	muls	r2, r7
 8023bba:	0a09      	lsrs	r1, r1, #8
 8023bbc:	1c53      	adds	r3, r2, #1
 8023bbe:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023bc2:	4321      	orrs	r1, r4
 8023bc4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023bc8:	1235      	asrs	r5, r6, #8
 8023bca:	0c0a      	lsrs	r2, r1, #16
 8023bcc:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8023bd0:	b2db      	uxtb	r3, r3
 8023bd2:	fb12 f207 	smulbb	r2, r2, r7
 8023bd6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023bda:	fb05 2503 	mla	r5, r5, r3, r2
 8023bde:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8023be2:	10f2      	asrs	r2, r6, #3
 8023be4:	b2c8      	uxtb	r0, r1
 8023be6:	00f6      	lsls	r6, r6, #3
 8023be8:	fb14 f407 	smulbb	r4, r4, r7
 8023bec:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023bf0:	b2f6      	uxtb	r6, r6
 8023bf2:	fb10 f007 	smulbb	r0, r0, r7
 8023bf6:	fb02 4203 	mla	r2, r2, r3, r4
 8023bfa:	b2ad      	uxth	r5, r5
 8023bfc:	fb06 0303 	mla	r3, r6, r3, r0
 8023c00:	b299      	uxth	r1, r3
 8023c02:	b294      	uxth	r4, r2
 8023c04:	1c6b      	adds	r3, r5, #1
 8023c06:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023c0a:	1c62      	adds	r2, r4, #1
 8023c0c:	1c4b      	adds	r3, r1, #1
 8023c0e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023c12:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8023c16:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023c1a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023c1e:	0952      	lsrs	r2, r2, #5
 8023c20:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023c24:	432b      	orrs	r3, r5
 8023c26:	4313      	orrs	r3, r2
 8023c28:	9a02      	ldr	r2, [sp, #8]
 8023c2a:	8013      	strh	r3, [r2, #0]
 8023c2c:	b005      	add	sp, #20
 8023c2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023c32:	2500      	movs	r5, #0
 8023c34:	e6ef      	b.n	8023a16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8023c36:	2100      	movs	r1, #0
 8023c38:	460d      	mov	r5, r1
 8023c3a:	e6f7      	b.n	8023a2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023c3c:	2100      	movs	r1, #0
 8023c3e:	e6f5      	b.n	8023a2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023c40:	4631      	mov	r1, r6
 8023c42:	e6f3      	b.n	8023a2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023c44:	2400      	movs	r4, #0
 8023c46:	e702      	b.n	8023a4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8023c48:	2200      	movs	r2, #0
 8023c4a:	4614      	mov	r4, r2
 8023c4c:	e70b      	b.n	8023a66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023c4e:	4602      	mov	r2, r0
 8023c50:	4604      	mov	r4, r0
 8023c52:	e708      	b.n	8023a66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023c54:	2200      	movs	r2, #0
 8023c56:	e706      	b.n	8023a66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023c58:	4632      	mov	r2, r6
 8023c5a:	e704      	b.n	8023a66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08023c5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023c5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023c60:	b09d      	sub	sp, #116	; 0x74
 8023c62:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8023c66:	9219      	str	r2, [sp, #100]	; 0x64
 8023c68:	9307      	str	r3, [sp, #28]
 8023c6a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8023c6c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8023c70:	931a      	str	r3, [sp, #104]	; 0x68
 8023c72:	9117      	str	r1, [sp, #92]	; 0x5c
 8023c74:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8023c78:	901b      	str	r0, [sp, #108]	; 0x6c
 8023c7a:	6850      	ldr	r0, [r2, #4]
 8023c7c:	6812      	ldr	r2, [r2, #0]
 8023c7e:	fb00 1303 	mla	r3, r0, r3, r1
 8023c82:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023c86:	930a      	str	r3, [sp, #40]	; 0x28
 8023c88:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023c8a:	681b      	ldr	r3, [r3, #0]
 8023c8c:	9310      	str	r3, [sp, #64]	; 0x40
 8023c8e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8023c92:	930b      	str	r3, [sp, #44]	; 0x2c
 8023c94:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023c96:	2b00      	cmp	r3, #0
 8023c98:	dc03      	bgt.n	8023ca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8023c9a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8023c9c:	2b00      	cmp	r3, #0
 8023c9e:	f340 8375 	ble.w	802438c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023ca2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023ca4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023ca8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023cac:	1e48      	subs	r0, r1, #1
 8023cae:	1e57      	subs	r7, r2, #1
 8023cb0:	9b07      	ldr	r3, [sp, #28]
 8023cb2:	2b00      	cmp	r3, #0
 8023cb4:	f340 818e 	ble.w	8023fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023cb8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023cbc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023cc0:	d406      	bmi.n	8023cd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023cc2:	4584      	cmp	ip, r0
 8023cc4:	da04      	bge.n	8023cd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023cc6:	2b00      	cmp	r3, #0
 8023cc8:	db02      	blt.n	8023cd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023cca:	42bb      	cmp	r3, r7
 8023ccc:	f2c0 8183 	blt.w	8023fd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8023cd0:	f11c 0c01 	adds.w	ip, ip, #1
 8023cd4:	f100 8173 	bmi.w	8023fbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023cd8:	4561      	cmp	r1, ip
 8023cda:	f2c0 8170 	blt.w	8023fbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023cde:	3301      	adds	r3, #1
 8023ce0:	f100 816d 	bmi.w	8023fbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023ce4:	429a      	cmp	r2, r3
 8023ce6:	f2c0 816a 	blt.w	8023fbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023cea:	9b07      	ldr	r3, [sp, #28]
 8023cec:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023cee:	9318      	str	r3, [sp, #96]	; 0x60
 8023cf0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023cf2:	2b00      	cmp	r3, #0
 8023cf4:	f340 818c 	ble.w	8024010 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8023cf8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8023cfa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023cfc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023d00:	689b      	ldr	r3, [r3, #8]
 8023d02:	1422      	asrs	r2, r4, #16
 8023d04:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023d08:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8023d0c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023d10:	f100 81cd 	bmi.w	80240ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023d14:	f103 38ff 	add.w	r8, r3, #4294967295
 8023d18:	4542      	cmp	r2, r8
 8023d1a:	f280 81c8 	bge.w	80240ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023d1e:	f1bc 0f00 	cmp.w	ip, #0
 8023d22:	f2c0 81c4 	blt.w	80240ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023d26:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023d2a:	45c4      	cmp	ip, r8
 8023d2c:	f280 81bf 	bge.w	80240ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023d30:	b21b      	sxth	r3, r3
 8023d32:	fb0c 2203 	mla	r2, ip, r3, r2
 8023d36:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023d38:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023d3c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023d40:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023d44:	2800      	cmp	r0, #0
 8023d46:	f000 81a9 	beq.w	802409c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8023d4a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023d4e:	950c      	str	r5, [sp, #48]	; 0x30
 8023d50:	0e2d      	lsrs	r5, r5, #24
 8023d52:	9513      	str	r5, [sp, #76]	; 0x4c
 8023d54:	b181      	cbz	r1, 8023d78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023d56:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023d5a:	3b01      	subs	r3, #1
 8023d5c:	009b      	lsls	r3, r3, #2
 8023d5e:	3304      	adds	r3, #4
 8023d60:	eb08 0c03 	add.w	ip, r8, r3
 8023d64:	f858 3003 	ldr.w	r3, [r8, r3]
 8023d68:	9308      	str	r3, [sp, #32]
 8023d6a:	0e1b      	lsrs	r3, r3, #24
 8023d6c:	9311      	str	r3, [sp, #68]	; 0x44
 8023d6e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023d72:	930d      	str	r3, [sp, #52]	; 0x34
 8023d74:	0e1b      	lsrs	r3, r3, #24
 8023d76:	9314      	str	r3, [sp, #80]	; 0x50
 8023d78:	b280      	uxth	r0, r0
 8023d7a:	b289      	uxth	r1, r1
 8023d7c:	fb00 f901 	mul.w	r9, r0, r1
 8023d80:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023d84:	0100      	lsls	r0, r0, #4
 8023d86:	eba0 0809 	sub.w	r8, r0, r9
 8023d8a:	b289      	uxth	r1, r1
 8023d8c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023d90:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8023d92:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023d94:	fa1f f888 	uxth.w	r8, r8
 8023d98:	1a5b      	subs	r3, r3, r1
 8023d9a:	b29b      	uxth	r3, r3
 8023d9c:	fb08 f000 	mul.w	r0, r8, r0
 8023da0:	fb03 000e 	mla	r0, r3, lr, r0
 8023da4:	fb01 0005 	mla	r0, r1, r5, r0
 8023da8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023daa:	fb09 0005 	mla	r0, r9, r5, r0
 8023dae:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8023db2:	2800      	cmp	r0, #0
 8023db4:	f000 80fa 	beq.w	8023fac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023db8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023dbc:	d01b      	beq.n	8023df6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8023dbe:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8023dc2:	fb0e fa0a 	mul.w	sl, lr, sl
 8023dc6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023dca:	fb0e fe02 	mul.w	lr, lr, r2
 8023dce:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8023dd2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023dd6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023dda:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023dde:	4452      	add	r2, sl
 8023de0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023de4:	0a12      	lsrs	r2, r2, #8
 8023de6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023dea:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023dee:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023df2:	ea42 020c 	orr.w	r2, r2, ip
 8023df6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023df8:	2dff      	cmp	r5, #255	; 0xff
 8023dfa:	d021      	beq.n	8023e40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8023dfc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023dfe:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023e02:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023e04:	fb05 fb0b 	mul.w	fp, r5, fp
 8023e08:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023e0a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023e0e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023e10:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023e14:	fb05 fa0a 	mul.w	sl, r5, sl
 8023e18:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023e1c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023e20:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023e24:	44de      	add	lr, fp
 8023e26:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023e2a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023e2e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023e32:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023e36:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023e3a:	ea4e 050a 	orr.w	r5, lr, sl
 8023e3e:	950c      	str	r5, [sp, #48]	; 0x30
 8023e40:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023e42:	2dff      	cmp	r5, #255	; 0xff
 8023e44:	d021      	beq.n	8023e8a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8023e46:	9d08      	ldr	r5, [sp, #32]
 8023e48:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023e4c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023e4e:	fb05 fb0b 	mul.w	fp, r5, fp
 8023e52:	9d08      	ldr	r5, [sp, #32]
 8023e54:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023e58:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023e5a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023e5e:	fb05 fa0a 	mul.w	sl, r5, sl
 8023e62:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023e66:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023e6a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023e6e:	44de      	add	lr, fp
 8023e70:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023e74:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023e78:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023e7c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023e80:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023e84:	ea4e 050a 	orr.w	r5, lr, sl
 8023e88:	9508      	str	r5, [sp, #32]
 8023e8a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023e8c:	2dff      	cmp	r5, #255	; 0xff
 8023e8e:	d021      	beq.n	8023ed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8023e90:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023e92:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023e96:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023e98:	fb05 fb0b 	mul.w	fp, r5, fp
 8023e9c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023e9e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023ea2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023ea4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023ea8:	fb05 fa0a 	mul.w	sl, r5, sl
 8023eac:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023eb0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023eb4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023eb8:	44de      	add	lr, fp
 8023eba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023ebe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023ec2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023ec6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023eca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023ece:	ea4e 050a 	orr.w	r5, lr, sl
 8023ed2:	950d      	str	r5, [sp, #52]	; 0x34
 8023ed4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023ed6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023eda:	9d08      	ldr	r5, [sp, #32]
 8023edc:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023ee0:	fb08 fc0c 	mul.w	ip, r8, ip
 8023ee4:	fb03 cc0e 	mla	ip, r3, lr, ip
 8023ee8:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023eec:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023eee:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023ef2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023ef6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023ef8:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023efc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023f00:	fb08 f80e 	mul.w	r8, r8, lr
 8023f04:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023f08:	fb03 8202 	mla	r2, r3, r2, r8
 8023f0c:	9b08      	ldr	r3, [sp, #32]
 8023f0e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023f10:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8023f14:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023f16:	fb01 220a 	mla	r2, r1, sl, r2
 8023f1a:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8023f1e:	fb09 2901 	mla	r9, r9, r1, r2
 8023f22:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023f24:	883b      	ldrh	r3, [r7, #0]
 8023f26:	4342      	muls	r2, r0
 8023f28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023f2c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023f30:	1c50      	adds	r0, r2, #1
 8023f32:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023f36:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023f3a:	ea4c 0c09 	orr.w	ip, ip, r9
 8023f3e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8023f42:	1219      	asrs	r1, r3, #8
 8023f44:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023f48:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023f4c:	b2c0      	uxtb	r0, r0
 8023f4e:	fb12 f205 	smulbb	r2, r2, r5
 8023f52:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023f56:	fb01 2100 	mla	r1, r1, r0, r2
 8023f5a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8023f5e:	10da      	asrs	r2, r3, #3
 8023f60:	fa5f fc8c 	uxtb.w	ip, ip
 8023f64:	00db      	lsls	r3, r3, #3
 8023f66:	fb1c fc05 	smulbb	ip, ip, r5
 8023f6a:	b2db      	uxtb	r3, r3
 8023f6c:	b289      	uxth	r1, r1
 8023f6e:	fb03 c300 	mla	r3, r3, r0, ip
 8023f72:	fa1f fc83 	uxth.w	ip, r3
 8023f76:	1c4b      	adds	r3, r1, #1
 8023f78:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023f7c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023f80:	fb1e fe05 	smulbb	lr, lr, r5
 8023f84:	f10c 0301 	add.w	r3, ip, #1
 8023f88:	fb02 e200 	mla	r2, r2, r0, lr
 8023f8c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8023f90:	b292      	uxth	r2, r2
 8023f92:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8023f96:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023f9a:	430b      	orrs	r3, r1
 8023f9c:	1c51      	adds	r1, r2, #1
 8023f9e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023fa2:	0952      	lsrs	r2, r2, #5
 8023fa4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023fa8:	4313      	orrs	r3, r2
 8023faa:	803b      	strh	r3, [r7, #0]
 8023fac:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023fae:	441c      	add	r4, r3
 8023fb0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023fb2:	441e      	add	r6, r3
 8023fb4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023fb6:	3b01      	subs	r3, #1
 8023fb8:	3702      	adds	r7, #2
 8023fba:	9318      	str	r3, [sp, #96]	; 0x60
 8023fbc:	e698      	b.n	8023cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023fbe:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023fc0:	441c      	add	r4, r3
 8023fc2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023fc4:	441e      	add	r6, r3
 8023fc6:	9b07      	ldr	r3, [sp, #28]
 8023fc8:	3b01      	subs	r3, #1
 8023fca:	9307      	str	r3, [sp, #28]
 8023fcc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023fce:	3302      	adds	r3, #2
 8023fd0:	930a      	str	r3, [sp, #40]	; 0x28
 8023fd2:	e66d      	b.n	8023cb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8023fd4:	d023      	beq.n	802401e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8023fd6:	9b07      	ldr	r3, [sp, #28]
 8023fd8:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8023fda:	3b01      	subs	r3, #1
 8023fdc:	fb00 4003 	mla	r0, r0, r3, r4
 8023fe0:	1400      	asrs	r0, r0, #16
 8023fe2:	f53f ae82 	bmi.w	8023cea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023fe6:	3901      	subs	r1, #1
 8023fe8:	4288      	cmp	r0, r1
 8023fea:	f6bf ae7e 	bge.w	8023cea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023fee:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8023ff0:	fb01 6303 	mla	r3, r1, r3, r6
 8023ff4:	141b      	asrs	r3, r3, #16
 8023ff6:	f53f ae78 	bmi.w	8023cea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023ffa:	3a01      	subs	r2, #1
 8023ffc:	4293      	cmp	r3, r2
 8023ffe:	f6bf ae74 	bge.w	8023cea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024002:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024006:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 802400a:	f1bb 0f00 	cmp.w	fp, #0
 802400e:	dc6c      	bgt.n	80240ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8024010:	9b07      	ldr	r3, [sp, #28]
 8024012:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024016:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024018:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802401c:	930a      	str	r3, [sp, #40]	; 0x28
 802401e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024020:	2b00      	cmp	r3, #0
 8024022:	f340 81b3 	ble.w	802438c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024026:	ee30 0a04 	vadd.f32	s0, s0, s8
 802402a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802402e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024032:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024034:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024038:	ee31 1a05 	vadd.f32	s2, s2, s10
 802403c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024040:	eef0 6a62 	vmov.f32	s13, s5
 8024044:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024048:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802404c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024050:	ee16 4a90 	vmov	r4, s13
 8024054:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024058:	eef0 6a43 	vmov.f32	s13, s6
 802405c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024060:	ee12 2a90 	vmov	r2, s5
 8024064:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024068:	fb92 f3f3 	sdiv	r3, r2, r3
 802406c:	ee13 2a10 	vmov	r2, s6
 8024070:	9329      	str	r3, [sp, #164]	; 0xa4
 8024072:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024074:	fb92 f3f3 	sdiv	r3, r2, r3
 8024078:	932a      	str	r3, [sp, #168]	; 0xa8
 802407a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802407c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802407e:	3b01      	subs	r3, #1
 8024080:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024084:	9317      	str	r3, [sp, #92]	; 0x5c
 8024086:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024088:	bf08      	it	eq
 802408a:	4613      	moveq	r3, r2
 802408c:	ee16 6a90 	vmov	r6, s13
 8024090:	9307      	str	r3, [sp, #28]
 8024092:	eeb0 3a67 	vmov.f32	s6, s15
 8024096:	eef0 2a47 	vmov.f32	s5, s14
 802409a:	e5fb      	b.n	8023c94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802409c:	2900      	cmp	r1, #0
 802409e:	f43f ae6b 	beq.w	8023d78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80240a2:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80240a6:	9308      	str	r3, [sp, #32]
 80240a8:	0e1b      	lsrs	r3, r3, #24
 80240aa:	9311      	str	r3, [sp, #68]	; 0x44
 80240ac:	e664      	b.n	8023d78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80240ae:	f112 0801 	adds.w	r8, r2, #1
 80240b2:	f53f af7b 	bmi.w	8023fac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80240b6:	4543      	cmp	r3, r8
 80240b8:	f6ff af78 	blt.w	8023fac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80240bc:	f11c 0801 	adds.w	r8, ip, #1
 80240c0:	f53f af74 	bmi.w	8023fac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80240c4:	45c6      	cmp	lr, r8
 80240c6:	f6ff af71 	blt.w	8023fac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80240ca:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80240cc:	9201      	str	r2, [sp, #4]
 80240ce:	fa0f f28e 	sxth.w	r2, lr
 80240d2:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80240d6:	e9cd c002 	strd	ip, r0, [sp, #8]
 80240da:	9200      	str	r2, [sp, #0]
 80240dc:	b21b      	sxth	r3, r3
 80240de:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80240e0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80240e2:	4639      	mov	r1, r7
 80240e4:	f7ff fc79 	bl	80239da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80240e8:	e760      	b.n	8023fac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80240ea:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80240ec:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80240ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80240f2:	1427      	asrs	r7, r4, #16
 80240f4:	1433      	asrs	r3, r6, #16
 80240f6:	fb01 7303 	mla	r3, r1, r3, r7
 80240fa:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80240fe:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024102:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024106:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802410a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802410e:	2a00      	cmp	r2, #0
 8024110:	f000 8133 	beq.w	802437a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8024114:	687d      	ldr	r5, [r7, #4]
 8024116:	950e      	str	r5, [sp, #56]	; 0x38
 8024118:	0e2d      	lsrs	r5, r5, #24
 802411a:	9515      	str	r5, [sp, #84]	; 0x54
 802411c:	b178      	cbz	r0, 802413e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802411e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8024122:	3901      	subs	r1, #1
 8024124:	0089      	lsls	r1, r1, #2
 8024126:	3104      	adds	r1, #4
 8024128:	eb07 0e01 	add.w	lr, r7, r1
 802412c:	5879      	ldr	r1, [r7, r1]
 802412e:	9109      	str	r1, [sp, #36]	; 0x24
 8024130:	0e09      	lsrs	r1, r1, #24
 8024132:	9112      	str	r1, [sp, #72]	; 0x48
 8024134:	f8de 1004 	ldr.w	r1, [lr, #4]
 8024138:	910f      	str	r1, [sp, #60]	; 0x3c
 802413a:	0e09      	lsrs	r1, r1, #24
 802413c:	9116      	str	r1, [sp, #88]	; 0x58
 802413e:	b292      	uxth	r2, r2
 8024140:	b280      	uxth	r0, r0
 8024142:	fb02 f800 	mul.w	r8, r2, r0
 8024146:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802414a:	0112      	lsls	r2, r2, #4
 802414c:	eba2 0e08 	sub.w	lr, r2, r8
 8024150:	b280      	uxth	r0, r0
 8024152:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8024156:	9915      	ldr	r1, [sp, #84]	; 0x54
 8024158:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802415a:	fa1f fe8e 	uxth.w	lr, lr
 802415e:	1a12      	subs	r2, r2, r0
 8024160:	b292      	uxth	r2, r2
 8024162:	fb0e f101 	mul.w	r1, lr, r1
 8024166:	fb02 110c 	mla	r1, r2, ip, r1
 802416a:	fb00 1105 	mla	r1, r0, r5, r1
 802416e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024170:	fb08 1105 	mla	r1, r8, r5, r1
 8024174:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024178:	2900      	cmp	r1, #0
 802417a:	f000 80f5 	beq.w	8024368 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802417e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024182:	d019      	beq.n	80241b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8024184:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024188:	fb0c fa0a 	mul.w	sl, ip, sl
 802418c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024190:	fb0c fc03 	mul.w	ip, ip, r3
 8024194:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024198:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802419c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80241a0:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80241a4:	4453      	add	r3, sl
 80241a6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80241aa:	0a1b      	lsrs	r3, r3, #8
 80241ac:	0a3f      	lsrs	r7, r7, #8
 80241ae:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80241b2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80241b6:	433b      	orrs	r3, r7
 80241b8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80241ba:	2dff      	cmp	r5, #255	; 0xff
 80241bc:	d020      	beq.n	8024200 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80241be:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80241c0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80241c4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80241c6:	436f      	muls	r7, r5
 80241c8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80241ca:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80241ce:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80241d0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80241d4:	fb05 fa0a 	mul.w	sl, r5, sl
 80241d8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80241dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80241e0:	44bc      	add	ip, r7
 80241e2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80241e6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80241ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80241ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80241f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80241f6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80241fa:	ea4c 050a 	orr.w	r5, ip, sl
 80241fe:	950e      	str	r5, [sp, #56]	; 0x38
 8024200:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024202:	2dff      	cmp	r5, #255	; 0xff
 8024204:	d020      	beq.n	8024248 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8024206:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024208:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802420c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802420e:	436f      	muls	r7, r5
 8024210:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024212:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024216:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024218:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802421c:	fb05 fa0a 	mul.w	sl, r5, sl
 8024220:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024224:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024228:	44bc      	add	ip, r7
 802422a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802422e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024232:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024236:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802423a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802423e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024242:	ea4c 050a 	orr.w	r5, ip, sl
 8024246:	9509      	str	r5, [sp, #36]	; 0x24
 8024248:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802424a:	2dff      	cmp	r5, #255	; 0xff
 802424c:	d020      	beq.n	8024290 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802424e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024250:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024254:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024256:	436f      	muls	r7, r5
 8024258:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802425a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802425e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024260:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024264:	fb05 fa0a 	mul.w	sl, r5, sl
 8024268:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802426c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024270:	44bc      	add	ip, r7
 8024272:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024276:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802427a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802427e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024282:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024286:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802428a:	ea4c 050a 	orr.w	r5, ip, sl
 802428e:	950f      	str	r5, [sp, #60]	; 0x3c
 8024290:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024292:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024296:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024298:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802429c:	fb0e f707 	mul.w	r7, lr, r7
 80242a0:	fb02 770c 	mla	r7, r2, ip, r7
 80242a4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80242a8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80242aa:	fb00 770c 	mla	r7, r0, ip, r7
 80242ae:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80242b2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80242b4:	fb08 770c 	mla	r7, r8, ip, r7
 80242b8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80242bc:	fb0e fe0c 	mul.w	lr, lr, ip
 80242c0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80242c4:	fb02 e303 	mla	r3, r2, r3, lr
 80242c8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80242ca:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80242cc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80242d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80242d2:	fb00 330a 	mla	r3, r0, sl, r3
 80242d6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80242da:	fb08 3c0c 	mla	ip, r8, ip, r3
 80242de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80242e0:	f8b9 0000 	ldrh.w	r0, [r9]
 80242e4:	4359      	muls	r1, r3
 80242e6:	0a3f      	lsrs	r7, r7, #8
 80242e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80242ec:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80242f0:	1c4b      	adds	r3, r1, #1
 80242f2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80242f6:	ea47 070c 	orr.w	r7, r7, ip
 80242fa:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80242fe:	1202      	asrs	r2, r0, #8
 8024300:	0c3b      	lsrs	r3, r7, #16
 8024302:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8024306:	b2c9      	uxtb	r1, r1
 8024308:	fb13 f305 	smulbb	r3, r3, r5
 802430c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024310:	fb02 3201 	mla	r2, r2, r1, r3
 8024314:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8024318:	10c3      	asrs	r3, r0, #3
 802431a:	b2ff      	uxtb	r7, r7
 802431c:	00c0      	lsls	r0, r0, #3
 802431e:	b2c0      	uxtb	r0, r0
 8024320:	fb17 f705 	smulbb	r7, r7, r5
 8024324:	fb00 7001 	mla	r0, r0, r1, r7
 8024328:	b292      	uxth	r2, r2
 802432a:	fb1c fc05 	smulbb	ip, ip, r5
 802432e:	b280      	uxth	r0, r0
 8024330:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8024334:	fb03 c301 	mla	r3, r3, r1, ip
 8024338:	1c51      	adds	r1, r2, #1
 802433a:	f100 0c01 	add.w	ip, r0, #1
 802433e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024342:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8024346:	b29b      	uxth	r3, r3
 8024348:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802434c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024350:	ea4c 0202 	orr.w	r2, ip, r2
 8024354:	f103 0c01 	add.w	ip, r3, #1
 8024358:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802435c:	095b      	lsrs	r3, r3, #5
 802435e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024362:	431a      	orrs	r2, r3
 8024364:	f8a9 2000 	strh.w	r2, [r9]
 8024368:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802436a:	441c      	add	r4, r3
 802436c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802436e:	f109 0902 	add.w	r9, r9, #2
 8024372:	441e      	add	r6, r3
 8024374:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024378:	e647      	b.n	802400a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802437a:	2800      	cmp	r0, #0
 802437c:	f43f aedf 	beq.w	802413e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024380:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8024384:	9109      	str	r1, [sp, #36]	; 0x24
 8024386:	0e09      	lsrs	r1, r1, #24
 8024388:	9112      	str	r1, [sp, #72]	; 0x48
 802438a:	e6d8      	b.n	802413e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802438c:	b01d      	add	sp, #116	; 0x74
 802438e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024392 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8024392:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024396:	b085      	sub	sp, #20
 8024398:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 802439c:	9102      	str	r1, [sp, #8]
 802439e:	2c00      	cmp	r4, #0
 80243a0:	fb04 7103 	mla	r1, r4, r3, r7
 80243a4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80243a8:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80243ac:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80243b0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80243b4:	f2c0 810c 	blt.w	80245d0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80243b8:	45a6      	cmp	lr, r4
 80243ba:	f340 8109 	ble.w	80245d0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80243be:	2f00      	cmp	r7, #0
 80243c0:	f2c0 8104 	blt.w	80245cc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80243c4:	42bb      	cmp	r3, r7
 80243c6:	f340 8101 	ble.w	80245cc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80243ca:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80243ce:	1c7a      	adds	r2, r7, #1
 80243d0:	f100 8101 	bmi.w	80245d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80243d4:	4293      	cmp	r3, r2
 80243d6:	f340 80fe 	ble.w	80245d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80243da:	2e00      	cmp	r6, #0
 80243dc:	f000 80fd 	beq.w	80245da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 80243e0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80243e4:	3401      	adds	r4, #1
 80243e6:	f100 80fc 	bmi.w	80245e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80243ea:	45a6      	cmp	lr, r4
 80243ec:	f340 80f9 	ble.w	80245e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80243f0:	2800      	cmp	r0, #0
 80243f2:	f000 80f9 	beq.w	80245e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 80243f6:	2f00      	cmp	r7, #0
 80243f8:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 80243fc:	f2c0 80ef 	blt.w	80245de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024400:	42bb      	cmp	r3, r7
 8024402:	f340 80ec 	ble.w	80245de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024406:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802440a:	3701      	adds	r7, #1
 802440c:	f100 80ef 	bmi.w	80245ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024410:	42bb      	cmp	r3, r7
 8024412:	f340 80ec 	ble.w	80245ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024416:	2e00      	cmp	r6, #0
 8024418:	f000 80eb 	beq.w	80245f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 802441c:	6852      	ldr	r2, [r2, #4]
 802441e:	b2b6      	uxth	r6, r6
 8024420:	b280      	uxth	r0, r0
 8024422:	fb00 fe06 	mul.w	lr, r0, r6
 8024426:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802442a:	0136      	lsls	r6, r6, #4
 802442c:	eba6 070e 	sub.w	r7, r6, lr
 8024430:	b280      	uxth	r0, r0
 8024432:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8024436:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802443a:	b2bf      	uxth	r7, r7
 802443c:	1a1b      	subs	r3, r3, r0
 802443e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024442:	b29b      	uxth	r3, r3
 8024444:	fb07 f60a 	mul.w	r6, r7, sl
 8024448:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802444c:	fb0b 6603 	mla	r6, fp, r3, r6
 8024450:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024454:	fb00 6609 	mla	r6, r0, r9, r6
 8024458:	fb0e 6608 	mla	r6, lr, r8, r6
 802445c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024460:	9600      	str	r6, [sp, #0]
 8024462:	2e00      	cmp	r6, #0
 8024464:	f000 80af 	beq.w	80245c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8024468:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802446c:	fb0b fc0c 	mul.w	ip, fp, ip
 8024470:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024474:	fb0b f505 	mul.w	r5, fp, r5
 8024478:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802447c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024480:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024484:	44dc      	add	ip, fp
 8024486:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802448a:	9501      	str	r5, [sp, #4]
 802448c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024490:	9503      	str	r5, [sp, #12]
 8024492:	9d01      	ldr	r5, [sp, #4]
 8024494:	9e02      	ldr	r6, [sp, #8]
 8024496:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802449a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802449e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80244a2:	fb0a fc0c 	mul.w	ip, sl, ip
 80244a6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80244aa:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80244ae:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80244b2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80244b6:	4465      	add	r5, ip
 80244b8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80244bc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80244c0:	fb09 fc0c 	mul.w	ip, r9, ip
 80244c4:	fb09 f904 	mul.w	r9, r9, r4
 80244c8:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80244cc:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80244d0:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80244d4:	fb08 f404 	mul.w	r4, r8, r4
 80244d8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80244dc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80244e0:	fb08 f802 	mul.w	r8, r8, r2
 80244e4:	fb0a fa01 	mul.w	sl, sl, r1
 80244e8:	0a22      	lsrs	r2, r4, #8
 80244ea:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80244ee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80244f2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80244f6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80244fa:	4414      	add	r4, r2
 80244fc:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024500:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8024504:	0a2d      	lsrs	r5, r5, #8
 8024506:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802450a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802450e:	9a03      	ldr	r2, [sp, #12]
 8024510:	8836      	ldrh	r6, [r6, #0]
 8024512:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024516:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802451a:	437d      	muls	r5, r7
 802451c:	4461      	add	r1, ip
 802451e:	0a24      	lsrs	r4, r4, #8
 8024520:	fb02 5503 	mla	r5, r2, r3, r5
 8024524:	0a09      	lsrs	r1, r1, #8
 8024526:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802452a:	fb04 540e 	mla	r4, r4, lr, r5
 802452e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024532:	fb01 4100 	mla	r1, r1, r0, r4
 8024536:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802453a:	0a09      	lsrs	r1, r1, #8
 802453c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024540:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8024544:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024548:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802454c:	fb07 f70a 	mul.w	r7, r7, sl
 8024550:	fb03 7101 	mla	r1, r3, r1, r7
 8024554:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024558:	9b00      	ldr	r3, [sp, #0]
 802455a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802455e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024562:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8024566:	fb00 e101 	mla	r1, r0, r1, lr
 802456a:	43da      	mvns	r2, r3
 802456c:	1233      	asrs	r3, r6, #8
 802456e:	b2d2      	uxtb	r2, r2
 8024570:	10f0      	asrs	r0, r6, #3
 8024572:	0a09      	lsrs	r1, r1, #8
 8024574:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024578:	00f6      	lsls	r6, r6, #3
 802457a:	4353      	muls	r3, r2
 802457c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024580:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024584:	b2f6      	uxtb	r6, r6
 8024586:	4321      	orrs	r1, r4
 8024588:	4350      	muls	r0, r2
 802458a:	4356      	muls	r6, r2
 802458c:	1c5a      	adds	r2, r3, #1
 802458e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024592:	0c0b      	lsrs	r3, r1, #16
 8024594:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024598:	1c42      	adds	r2, r0, #1
 802459a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802459e:	0a0a      	lsrs	r2, r1, #8
 80245a0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80245a4:	021b      	lsls	r3, r3, #8
 80245a6:	00d2      	lsls	r2, r2, #3
 80245a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80245ac:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80245b0:	4313      	orrs	r3, r2
 80245b2:	1c72      	adds	r2, r6, #1
 80245b4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80245b8:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 80245bc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80245c0:	4319      	orrs	r1, r3
 80245c2:	9b02      	ldr	r3, [sp, #8]
 80245c4:	8019      	strh	r1, [r3, #0]
 80245c6:	b005      	add	sp, #20
 80245c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80245cc:	2500      	movs	r5, #0
 80245ce:	e6fe      	b.n	80243ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 80245d0:	2100      	movs	r1, #0
 80245d2:	460d      	mov	r5, r1
 80245d4:	e706      	b.n	80243e4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80245d6:	2100      	movs	r1, #0
 80245d8:	e704      	b.n	80243e4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80245da:	4631      	mov	r1, r6
 80245dc:	e702      	b.n	80243e4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80245de:	2400      	movs	r4, #0
 80245e0:	e713      	b.n	802440a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 80245e2:	2200      	movs	r2, #0
 80245e4:	4614      	mov	r4, r2
 80245e6:	e71a      	b.n	802441e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80245e8:	4602      	mov	r2, r0
 80245ea:	4604      	mov	r4, r0
 80245ec:	e717      	b.n	802441e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80245ee:	2200      	movs	r2, #0
 80245f0:	e715      	b.n	802441e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80245f2:	4632      	mov	r2, r6
 80245f4:	e713      	b.n	802441e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

080245f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80245f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80245fc:	b09b      	sub	sp, #108	; 0x6c
 80245fe:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8024602:	9218      	str	r2, [sp, #96]	; 0x60
 8024604:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024606:	9116      	str	r1, [sp, #88]	; 0x58
 8024608:	9307      	str	r3, [sp, #28]
 802460a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 802460e:	9019      	str	r0, [sp, #100]	; 0x64
 8024610:	6850      	ldr	r0, [r2, #4]
 8024612:	6812      	ldr	r2, [r2, #0]
 8024614:	fb00 1303 	mla	r3, r0, r3, r1
 8024618:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802461c:	930a      	str	r3, [sp, #40]	; 0x28
 802461e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024620:	681b      	ldr	r3, [r3, #0]
 8024622:	930f      	str	r3, [sp, #60]	; 0x3c
 8024624:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024626:	2b00      	cmp	r3, #0
 8024628:	dc03      	bgt.n	8024632 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802462a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802462c:	2b00      	cmp	r3, #0
 802462e:	f340 8386 	ble.w	8024d3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024632:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024634:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024638:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802463c:	1e48      	subs	r0, r1, #1
 802463e:	1e57      	subs	r7, r2, #1
 8024640:	9b07      	ldr	r3, [sp, #28]
 8024642:	2b00      	cmp	r3, #0
 8024644:	f340 8166 	ble.w	8024914 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8024648:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802464c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024650:	d406      	bmi.n	8024660 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024652:	4584      	cmp	ip, r0
 8024654:	da04      	bge.n	8024660 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024656:	2b00      	cmp	r3, #0
 8024658:	db02      	blt.n	8024660 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802465a:	42bb      	cmp	r3, r7
 802465c:	f2c0 815b 	blt.w	8024916 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8024660:	f11c 0c01 	adds.w	ip, ip, #1
 8024664:	f100 814b 	bmi.w	80248fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024668:	4561      	cmp	r1, ip
 802466a:	f2c0 8148 	blt.w	80248fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802466e:	3301      	adds	r3, #1
 8024670:	f100 8145 	bmi.w	80248fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024674:	429a      	cmp	r2, r3
 8024676:	f2c0 8142 	blt.w	80248fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802467a:	9b07      	ldr	r3, [sp, #28]
 802467c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802467e:	9317      	str	r3, [sp, #92]	; 0x5c
 8024680:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024682:	2b00      	cmp	r3, #0
 8024684:	f340 8165 	ble.w	8024952 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024688:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 802468a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802468c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024690:	689b      	ldr	r3, [r3, #8]
 8024692:	1422      	asrs	r2, r4, #16
 8024694:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024698:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802469c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80246a0:	f100 81d5 	bmi.w	8024a4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80246a4:	f103 38ff 	add.w	r8, r3, #4294967295
 80246a8:	4542      	cmp	r2, r8
 80246aa:	f280 81d0 	bge.w	8024a4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80246ae:	f1bc 0f00 	cmp.w	ip, #0
 80246b2:	f2c0 81cc 	blt.w	8024a4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80246b6:	f10e 38ff 	add.w	r8, lr, #4294967295
 80246ba:	45c4      	cmp	ip, r8
 80246bc:	f280 81c7 	bge.w	8024a4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80246c0:	b21b      	sxth	r3, r3
 80246c2:	fb0c 2203 	mla	r2, ip, r3, r2
 80246c6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80246c8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80246cc:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80246d0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80246d4:	2900      	cmp	r1, #0
 80246d6:	f000 8182 	beq.w	80249de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80246da:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80246de:	950b      	str	r5, [sp, #44]	; 0x2c
 80246e0:	0e2d      	lsrs	r5, r5, #24
 80246e2:	9512      	str	r5, [sp, #72]	; 0x48
 80246e4:	b180      	cbz	r0, 8024708 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80246e6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80246ea:	3b01      	subs	r3, #1
 80246ec:	009b      	lsls	r3, r3, #2
 80246ee:	3304      	adds	r3, #4
 80246f0:	eb08 0c03 	add.w	ip, r8, r3
 80246f4:	f858 3003 	ldr.w	r3, [r8, r3]
 80246f8:	9308      	str	r3, [sp, #32]
 80246fa:	0e1b      	lsrs	r3, r3, #24
 80246fc:	9310      	str	r3, [sp, #64]	; 0x40
 80246fe:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8024702:	930c      	str	r3, [sp, #48]	; 0x30
 8024704:	0e1b      	lsrs	r3, r3, #24
 8024706:	9313      	str	r3, [sp, #76]	; 0x4c
 8024708:	b289      	uxth	r1, r1
 802470a:	b280      	uxth	r0, r0
 802470c:	fb01 f900 	mul.w	r9, r1, r0
 8024710:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024714:	0109      	lsls	r1, r1, #4
 8024716:	eba1 0809 	sub.w	r8, r1, r9
 802471a:	b280      	uxth	r0, r0
 802471c:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8024720:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8024722:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024724:	fa1f f888 	uxth.w	r8, r8
 8024728:	1a09      	subs	r1, r1, r0
 802472a:	b289      	uxth	r1, r1
 802472c:	fb08 f303 	mul.w	r3, r8, r3
 8024730:	fb01 330e 	mla	r3, r1, lr, r3
 8024734:	fb00 3305 	mla	r3, r0, r5, r3
 8024738:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802473a:	fb09 3305 	mla	r3, r9, r5, r3
 802473e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024742:	2b00      	cmp	r3, #0
 8024744:	f000 80d2 	beq.w	80248ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024748:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802474c:	d01b      	beq.n	8024786 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802474e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8024752:	fb0e fa0a 	mul.w	sl, lr, sl
 8024756:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802475a:	fb0e fe02 	mul.w	lr, lr, r2
 802475e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8024762:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024766:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802476a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802476e:	4452      	add	r2, sl
 8024770:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024774:	0a12      	lsrs	r2, r2, #8
 8024776:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802477a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802477e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024782:	ea42 020c 	orr.w	r2, r2, ip
 8024786:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024788:	2dff      	cmp	r5, #255	; 0xff
 802478a:	d021      	beq.n	80247d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 802478c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802478e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024792:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024794:	fb05 fb0b 	mul.w	fp, r5, fp
 8024798:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802479a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802479e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80247a0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80247a4:	fb05 fa0a 	mul.w	sl, r5, sl
 80247a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80247ac:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80247b0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80247b4:	44de      	add	lr, fp
 80247b6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80247ba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80247be:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80247c2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80247c6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80247ca:	ea4e 050a 	orr.w	r5, lr, sl
 80247ce:	950b      	str	r5, [sp, #44]	; 0x2c
 80247d0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80247d2:	2dff      	cmp	r5, #255	; 0xff
 80247d4:	d021      	beq.n	802481a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80247d6:	9d08      	ldr	r5, [sp, #32]
 80247d8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80247dc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80247de:	fb05 fb0b 	mul.w	fp, r5, fp
 80247e2:	9d08      	ldr	r5, [sp, #32]
 80247e4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80247e8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80247ea:	fb05 fa0e 	mul.w	sl, r5, lr
 80247ee:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80247f2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80247f6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80247fa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80247fe:	44de      	add	lr, fp
 8024800:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024804:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024808:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802480c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024810:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024814:	ea4e 050a 	orr.w	r5, lr, sl
 8024818:	9508      	str	r5, [sp, #32]
 802481a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802481c:	2dff      	cmp	r5, #255	; 0xff
 802481e:	d021      	beq.n	8024864 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8024820:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024822:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024826:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024828:	fb05 fb0b 	mul.w	fp, r5, fp
 802482c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802482e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024832:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024834:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024838:	fb05 fa0a 	mul.w	sl, r5, sl
 802483c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024840:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024844:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024848:	44de      	add	lr, fp
 802484a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802484e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024852:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024856:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802485a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802485e:	ea4e 050a 	orr.w	r5, lr, sl
 8024862:	950c      	str	r5, [sp, #48]	; 0x30
 8024864:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024866:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802486a:	9d08      	ldr	r5, [sp, #32]
 802486c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8024870:	fb08 fc0c 	mul.w	ip, r8, ip
 8024874:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024878:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802487c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802487e:	fb00 cc0e 	mla	ip, r0, lr, ip
 8024882:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024886:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024888:	fb09 cc0e 	mla	ip, r9, lr, ip
 802488c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024890:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024894:	fb08 f80e 	mul.w	r8, r8, lr
 8024898:	fb01 8202 	mla	r2, r1, r2, r8
 802489c:	9908      	ldr	r1, [sp, #32]
 802489e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80248a2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80248a4:	fb00 220a 	mla	r2, r0, sl, r2
 80248a8:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 80248ac:	fb09 2900 	mla	r9, r9, r0, r2
 80248b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80248b4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80248b8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80248bc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80248c0:	ea4c 0c09 	orr.w	ip, ip, r9
 80248c4:	2bff      	cmp	r3, #255	; 0xff
 80248c6:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80248ca:	f040 8091 	bne.w	80249f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80248ce:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80248d2:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 80248d6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80248da:	f022 0207 	bic.w	r2, r2, #7
 80248de:	431a      	orrs	r2, r3
 80248e0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80248e4:	ea4c 0c02 	orr.w	ip, ip, r2
 80248e8:	f8a7 c000 	strh.w	ip, [r7]
 80248ec:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80248ee:	441c      	add	r4, r3
 80248f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80248f2:	441e      	add	r6, r3
 80248f4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80248f6:	3b01      	subs	r3, #1
 80248f8:	3702      	adds	r7, #2
 80248fa:	9317      	str	r3, [sp, #92]	; 0x5c
 80248fc:	e6c0      	b.n	8024680 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80248fe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024900:	441c      	add	r4, r3
 8024902:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024904:	441e      	add	r6, r3
 8024906:	9b07      	ldr	r3, [sp, #28]
 8024908:	3b01      	subs	r3, #1
 802490a:	9307      	str	r3, [sp, #28]
 802490c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802490e:	3302      	adds	r3, #2
 8024910:	930a      	str	r3, [sp, #40]	; 0x28
 8024912:	e695      	b.n	8024640 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024914:	d024      	beq.n	8024960 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8024916:	9b07      	ldr	r3, [sp, #28]
 8024918:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802491a:	3b01      	subs	r3, #1
 802491c:	fb00 4003 	mla	r0, r0, r3, r4
 8024920:	1400      	asrs	r0, r0, #16
 8024922:	f53f aeaa 	bmi.w	802467a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024926:	3901      	subs	r1, #1
 8024928:	4288      	cmp	r0, r1
 802492a:	f6bf aea6 	bge.w	802467a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802492e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8024930:	fb01 6303 	mla	r3, r1, r3, r6
 8024934:	141b      	asrs	r3, r3, #16
 8024936:	f53f aea0 	bmi.w	802467a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802493a:	3a01      	subs	r2, #1
 802493c:	4293      	cmp	r3, r2
 802493e:	f6bf ae9c 	bge.w	802467a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024942:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024946:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 802494a:	f1bb 0f00 	cmp.w	fp, #0
 802494e:	f300 809a 	bgt.w	8024a86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8024952:	9b07      	ldr	r3, [sp, #28]
 8024954:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024958:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802495a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802495e:	930a      	str	r3, [sp, #40]	; 0x28
 8024960:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024962:	2b00      	cmp	r3, #0
 8024964:	f340 81eb 	ble.w	8024d3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024968:	ee30 0a04 	vadd.f32	s0, s0, s8
 802496c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024970:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024974:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024976:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802497a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802497e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024982:	eef0 6a62 	vmov.f32	s13, s5
 8024986:	ee61 7a27 	vmul.f32	s15, s2, s15
 802498a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802498e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024992:	ee16 4a90 	vmov	r4, s13
 8024996:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802499a:	eef0 6a43 	vmov.f32	s13, s6
 802499e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80249a2:	ee12 2a90 	vmov	r2, s5
 80249a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80249aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80249ae:	ee13 2a10 	vmov	r2, s6
 80249b2:	9327      	str	r3, [sp, #156]	; 0x9c
 80249b4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80249b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80249ba:	9328      	str	r3, [sp, #160]	; 0xa0
 80249bc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80249be:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80249c0:	3b01      	subs	r3, #1
 80249c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80249c6:	9316      	str	r3, [sp, #88]	; 0x58
 80249c8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80249ca:	bf08      	it	eq
 80249cc:	4613      	moveq	r3, r2
 80249ce:	ee16 6a90 	vmov	r6, s13
 80249d2:	9307      	str	r3, [sp, #28]
 80249d4:	eeb0 3a67 	vmov.f32	s6, s15
 80249d8:	eef0 2a47 	vmov.f32	s5, s14
 80249dc:	e622      	b.n	8024624 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80249de:	2800      	cmp	r0, #0
 80249e0:	f43f ae92 	beq.w	8024708 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80249e4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80249e8:	9308      	str	r3, [sp, #32]
 80249ea:	0e1b      	lsrs	r3, r3, #24
 80249ec:	9310      	str	r3, [sp, #64]	; 0x40
 80249ee:	e68b      	b.n	8024708 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80249f0:	8839      	ldrh	r1, [r7, #0]
 80249f2:	4dd4      	ldr	r5, [pc, #848]	; (8024d44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80249f4:	43db      	mvns	r3, r3
 80249f6:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80249fa:	fa5f f883 	uxtb.w	r8, r3
 80249fe:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8024a02:	fb0e fe08 	mul.w	lr, lr, r8
 8024a06:	10c8      	asrs	r0, r1, #3
 8024a08:	00cb      	lsls	r3, r1, #3
 8024a0a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024a0e:	f10e 0101 	add.w	r1, lr, #1
 8024a12:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8024a16:	fb00 f008 	mul.w	r0, r0, r8
 8024a1a:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8024a1e:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8024a22:	f100 0e01 	add.w	lr, r0, #1
 8024a26:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8024a2a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024a2e:	b2db      	uxtb	r3, r3
 8024a30:	b2c9      	uxtb	r1, r1
 8024a32:	00d2      	lsls	r2, r2, #3
 8024a34:	fb03 f308 	mul.w	r3, r3, r8
 8024a38:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8024a3c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024a40:	430a      	orrs	r2, r1
 8024a42:	1c59      	adds	r1, r3, #1
 8024a44:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024a48:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8024a4c:	e748      	b.n	80248e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8024a4e:	f112 0801 	adds.w	r8, r2, #1
 8024a52:	f53f af4b 	bmi.w	80248ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024a56:	4543      	cmp	r3, r8
 8024a58:	f6ff af48 	blt.w	80248ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024a5c:	f11c 0801 	adds.w	r8, ip, #1
 8024a60:	f53f af44 	bmi.w	80248ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024a64:	45c6      	cmp	lr, r8
 8024a66:	f6ff af41 	blt.w	80248ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024a6a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8024a6e:	fa0f f28e 	sxth.w	r2, lr
 8024a72:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8024a76:	9200      	str	r2, [sp, #0]
 8024a78:	b21b      	sxth	r3, r3
 8024a7a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024a7c:	9819      	ldr	r0, [sp, #100]	; 0x64
 8024a7e:	4639      	mov	r1, r7
 8024a80:	f7ff fc87 	bl	8024392 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8024a84:	e732      	b.n	80248ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024a86:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024a88:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024a8a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8024a8e:	1421      	asrs	r1, r4, #16
 8024a90:	1433      	asrs	r3, r6, #16
 8024a92:	fb07 1303 	mla	r3, r7, r3, r1
 8024a96:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8024a98:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8024a9c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024aa0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024aa4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024aa8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024aac:	2a00      	cmp	r2, #0
 8024aae:	f000 8107 	beq.w	8024cc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8024ab2:	684d      	ldr	r5, [r1, #4]
 8024ab4:	950d      	str	r5, [sp, #52]	; 0x34
 8024ab6:	0e2d      	lsrs	r5, r5, #24
 8024ab8:	9514      	str	r5, [sp, #80]	; 0x50
 8024aba:	b178      	cbz	r0, 8024adc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024abc:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8024ac0:	3f01      	subs	r7, #1
 8024ac2:	00bf      	lsls	r7, r7, #2
 8024ac4:	3704      	adds	r7, #4
 8024ac6:	eb01 0e07 	add.w	lr, r1, r7
 8024aca:	59c9      	ldr	r1, [r1, r7]
 8024acc:	9109      	str	r1, [sp, #36]	; 0x24
 8024ace:	0e09      	lsrs	r1, r1, #24
 8024ad0:	9111      	str	r1, [sp, #68]	; 0x44
 8024ad2:	f8de 1004 	ldr.w	r1, [lr, #4]
 8024ad6:	910e      	str	r1, [sp, #56]	; 0x38
 8024ad8:	0e09      	lsrs	r1, r1, #24
 8024ada:	9115      	str	r1, [sp, #84]	; 0x54
 8024adc:	b292      	uxth	r2, r2
 8024ade:	b280      	uxth	r0, r0
 8024ae0:	fb02 f900 	mul.w	r9, r2, r0
 8024ae4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024ae8:	0112      	lsls	r2, r2, #4
 8024aea:	eba2 0e09 	sub.w	lr, r2, r9
 8024aee:	b280      	uxth	r0, r0
 8024af0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8024af4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024af6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024af8:	fa1f fe8e 	uxth.w	lr, lr
 8024afc:	1a09      	subs	r1, r1, r0
 8024afe:	b289      	uxth	r1, r1
 8024b00:	fb0e f202 	mul.w	r2, lr, r2
 8024b04:	fb01 220c 	mla	r2, r1, ip, r2
 8024b08:	fb00 2205 	mla	r2, r0, r5, r2
 8024b0c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024b0e:	fb09 2205 	mla	r2, r9, r5, r2
 8024b12:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8024b16:	2a00      	cmp	r2, #0
 8024b18:	f000 80c9 	beq.w	8024cae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8024b1c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024b20:	d019      	beq.n	8024b56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8024b22:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024b26:	fb0c fa0a 	mul.w	sl, ip, sl
 8024b2a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024b2e:	fb0c fc03 	mul.w	ip, ip, r3
 8024b32:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024b36:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024b3a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024b3e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024b42:	4453      	add	r3, sl
 8024b44:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024b48:	0a1b      	lsrs	r3, r3, #8
 8024b4a:	0a3f      	lsrs	r7, r7, #8
 8024b4c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024b50:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024b54:	433b      	orrs	r3, r7
 8024b56:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024b58:	2dff      	cmp	r5, #255	; 0xff
 8024b5a:	d020      	beq.n	8024b9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8024b5c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024b5e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024b62:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024b64:	436f      	muls	r7, r5
 8024b66:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024b68:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024b6c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024b6e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024b72:	fb05 fa0a 	mul.w	sl, r5, sl
 8024b76:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024b7a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b7e:	44bc      	add	ip, r7
 8024b80:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024b84:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024b88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b90:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b94:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024b98:	ea4c 050a 	orr.w	r5, ip, sl
 8024b9c:	950d      	str	r5, [sp, #52]	; 0x34
 8024b9e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024ba0:	2dff      	cmp	r5, #255	; 0xff
 8024ba2:	d020      	beq.n	8024be6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8024ba4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024ba6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024baa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024bac:	436f      	muls	r7, r5
 8024bae:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024bb0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024bb4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024bb6:	fb05 fa0c 	mul.w	sl, r5, ip
 8024bba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024bbe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024bc2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024bc6:	44bc      	add	ip, r7
 8024bc8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024bcc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024bd0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024bd4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024bd8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024bdc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024be0:	ea4c 050a 	orr.w	r5, ip, sl
 8024be4:	9509      	str	r5, [sp, #36]	; 0x24
 8024be6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024be8:	2dff      	cmp	r5, #255	; 0xff
 8024bea:	d020      	beq.n	8024c2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8024bec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024bee:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024bf2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024bf4:	436f      	muls	r7, r5
 8024bf6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024bf8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024bfc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024bfe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024c02:	fb05 fa0a 	mul.w	sl, r5, sl
 8024c06:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024c0a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024c0e:	44bc      	add	ip, r7
 8024c10:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024c14:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024c18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024c1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024c20:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024c24:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024c28:	ea4c 050a 	orr.w	r5, ip, sl
 8024c2c:	950e      	str	r5, [sp, #56]	; 0x38
 8024c2e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024c30:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024c34:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024c36:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024c3a:	fb0e f707 	mul.w	r7, lr, r7
 8024c3e:	fb01 770c 	mla	r7, r1, ip, r7
 8024c42:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024c46:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024c48:	fb00 770c 	mla	r7, r0, ip, r7
 8024c4c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024c50:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024c52:	fb09 770c 	mla	r7, r9, ip, r7
 8024c56:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024c5a:	fb0e fe0c 	mul.w	lr, lr, ip
 8024c5e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024c62:	fb01 e303 	mla	r3, r1, r3, lr
 8024c66:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024c68:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024c6c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8024c6e:	fb00 330a 	mla	r3, r0, sl, r3
 8024c72:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8024c76:	fb09 3c0c 	mla	ip, r9, ip, r3
 8024c7a:	0a3f      	lsrs	r7, r7, #8
 8024c7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024c80:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024c84:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024c88:	ea47 070c 	orr.w	r7, r7, ip
 8024c8c:	2aff      	cmp	r2, #255	; 0xff
 8024c8e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8024c92:	d11e      	bne.n	8024cd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8024c94:	097a      	lsrs	r2, r7, #5
 8024c96:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8024c9a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024c9e:	f023 0307 	bic.w	r3, r3, #7
 8024ca2:	4313      	orrs	r3, r2
 8024ca4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024ca8:	431f      	orrs	r7, r3
 8024caa:	f8a8 7000 	strh.w	r7, [r8]
 8024cae:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024cb0:	441c      	add	r4, r3
 8024cb2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024cb4:	f108 0802 	add.w	r8, r8, #2
 8024cb8:	441e      	add	r6, r3
 8024cba:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024cbe:	e644      	b.n	802494a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8024cc0:	2800      	cmp	r0, #0
 8024cc2:	f43f af0b 	beq.w	8024adc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024cc6:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8024cca:	9109      	str	r1, [sp, #36]	; 0x24
 8024ccc:	0e09      	lsrs	r1, r1, #24
 8024cce:	9111      	str	r1, [sp, #68]	; 0x44
 8024cd0:	e704      	b.n	8024adc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024cd2:	f8b8 1000 	ldrh.w	r1, [r8]
 8024cd6:	43d2      	mvns	r2, r2
 8024cd8:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8024cdc:	fa5f fe82 	uxtb.w	lr, r2
 8024ce0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8024ce4:	fb0c fc0e 	mul.w	ip, ip, lr
 8024ce8:	10c8      	asrs	r0, r1, #3
 8024cea:	00ca      	lsls	r2, r1, #3
 8024cec:	f10c 0101 	add.w	r1, ip, #1
 8024cf0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024cf4:	0c39      	lsrs	r1, r7, #16
 8024cf6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024cfa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024cfe:	4911      	ldr	r1, [pc, #68]	; (8024d44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8024d00:	fb00 f00e 	mul.w	r0, r0, lr
 8024d04:	fa5f fc8c 	uxtb.w	ip, ip
 8024d08:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8024d0c:	b2d2      	uxtb	r2, r2
 8024d0e:	1c41      	adds	r1, r0, #1
 8024d10:	fb02 f20e 	mul.w	r2, r2, lr
 8024d14:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024d18:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024d1c:	1c51      	adds	r1, r2, #1
 8024d1e:	00c0      	lsls	r0, r0, #3
 8024d20:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024d24:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024d28:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024d2c:	ea4c 0c00 	orr.w	ip, ip, r0
 8024d30:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024d34:	ea47 0c0c 	orr.w	ip, r7, ip
 8024d38:	f8a8 c000 	strh.w	ip, [r8]
 8024d3c:	e7b7      	b.n	8024cae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8024d3e:	b01b      	add	sp, #108	; 0x6c
 8024d40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024d44:	fffff800 	.word	0xfffff800

08024d48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8024d48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024d4c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024d50:	2d00      	cmp	r5, #0
 8024d52:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024d56:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024d5a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024d5e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024d62:	fb05 0e03 	mla	lr, r5, r3, r0
 8024d66:	f2c0 808c 	blt.w	8024e82 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024d6a:	45a9      	cmp	r9, r5
 8024d6c:	f340 8089 	ble.w	8024e82 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024d70:	2800      	cmp	r0, #0
 8024d72:	f2c0 8084 	blt.w	8024e7e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024d76:	4580      	cmp	r8, r0
 8024d78:	f340 8081 	ble.w	8024e7e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024d7c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024d80:	f01e 0f01 	tst.w	lr, #1
 8024d84:	5d16      	ldrb	r6, [r2, r4]
 8024d86:	bf0c      	ite	eq
 8024d88:	f006 060f 	andeq.w	r6, r6, #15
 8024d8c:	1136      	asrne	r6, r6, #4
 8024d8e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024d92:	b2f6      	uxtb	r6, r6
 8024d94:	1c44      	adds	r4, r0, #1
 8024d96:	d477      	bmi.n	8024e88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024d98:	45a0      	cmp	r8, r4
 8024d9a:	dd75      	ble.n	8024e88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024d9c:	2f00      	cmp	r7, #0
 8024d9e:	d075      	beq.n	8024e8c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8024da0:	f10e 0a01 	add.w	sl, lr, #1
 8024da4:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024da8:	f01a 0f01 	tst.w	sl, #1
 8024dac:	5d14      	ldrb	r4, [r2, r4]
 8024dae:	bf0c      	ite	eq
 8024db0:	f004 040f 	andeq.w	r4, r4, #15
 8024db4:	1124      	asrne	r4, r4, #4
 8024db6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024dba:	b2e4      	uxtb	r4, r4
 8024dbc:	3501      	adds	r5, #1
 8024dbe:	d469      	bmi.n	8024e94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024dc0:	45a9      	cmp	r9, r5
 8024dc2:	dd67      	ble.n	8024e94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024dc4:	f1bc 0f00 	cmp.w	ip, #0
 8024dc8:	d067      	beq.n	8024e9a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8024dca:	2800      	cmp	r0, #0
 8024dcc:	db60      	blt.n	8024e90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8024dce:	4580      	cmp	r8, r0
 8024dd0:	dd5e      	ble.n	8024e90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8024dd2:	eb03 090e 	add.w	r9, r3, lr
 8024dd6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024dda:	f019 0f01 	tst.w	r9, #1
 8024dde:	5d55      	ldrb	r5, [r2, r5]
 8024de0:	bf0c      	ite	eq
 8024de2:	f005 050f 	andeq.w	r5, r5, #15
 8024de6:	112d      	asrne	r5, r5, #4
 8024de8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024dec:	b2ed      	uxtb	r5, r5
 8024dee:	3001      	adds	r0, #1
 8024df0:	d456      	bmi.n	8024ea0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8024df2:	4580      	cmp	r8, r0
 8024df4:	dd54      	ble.n	8024ea0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8024df6:	2f00      	cmp	r7, #0
 8024df8:	d054      	beq.n	8024ea4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8024dfa:	3301      	adds	r3, #1
 8024dfc:	449e      	add	lr, r3
 8024dfe:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024e02:	f01e 0f01 	tst.w	lr, #1
 8024e06:	5cd0      	ldrb	r0, [r2, r3]
 8024e08:	bf0c      	ite	eq
 8024e0a:	f000 000f 	andeq.w	r0, r0, #15
 8024e0e:	1100      	asrne	r0, r0, #4
 8024e10:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024e14:	b2c3      	uxtb	r3, r0
 8024e16:	b2ba      	uxth	r2, r7
 8024e18:	fa1f fc8c 	uxth.w	ip, ip
 8024e1c:	fb02 f00c 	mul.w	r0, r2, ip
 8024e20:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024e24:	0112      	lsls	r2, r2, #4
 8024e26:	fa1f fc8c 	uxth.w	ip, ip
 8024e2a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024e2e:	1a12      	subs	r2, r2, r0
 8024e30:	eba7 070c 	sub.w	r7, r7, ip
 8024e34:	b292      	uxth	r2, r2
 8024e36:	b2bf      	uxth	r7, r7
 8024e38:	4362      	muls	r2, r4
 8024e3a:	fb06 2207 	mla	r2, r6, r7, r2
 8024e3e:	fb0c 2505 	mla	r5, ip, r5, r2
 8024e42:	fb00 5303 	mla	r3, r0, r3, r5
 8024e46:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024e4a:	b1b3      	cbz	r3, 8024e7a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024e4c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8024e50:	435a      	muls	r2, r3
 8024e52:	1c53      	adds	r3, r2, #1
 8024e54:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024e58:	4a2d      	ldr	r2, [pc, #180]	; (8024f10 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8024e5a:	121b      	asrs	r3, r3, #8
 8024e5c:	6812      	ldr	r2, [r2, #0]
 8024e5e:	2bff      	cmp	r3, #255	; 0xff
 8024e60:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8024e64:	d120      	bne.n	8024ea8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8024e66:	4b2b      	ldr	r3, [pc, #172]	; (8024f14 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8024e68:	0950      	lsrs	r0, r2, #5
 8024e6a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024e6e:	4033      	ands	r3, r6
 8024e70:	4318      	orrs	r0, r3
 8024e72:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024e76:	4302      	orrs	r2, r0
 8024e78:	800a      	strh	r2, [r1, #0]
 8024e7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024e7e:	2600      	movs	r6, #0
 8024e80:	e788      	b.n	8024d94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8024e82:	2400      	movs	r4, #0
 8024e84:	4626      	mov	r6, r4
 8024e86:	e799      	b.n	8024dbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024e88:	2400      	movs	r4, #0
 8024e8a:	e797      	b.n	8024dbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024e8c:	463c      	mov	r4, r7
 8024e8e:	e795      	b.n	8024dbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024e90:	2500      	movs	r5, #0
 8024e92:	e7ac      	b.n	8024dee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8024e94:	2300      	movs	r3, #0
 8024e96:	461d      	mov	r5, r3
 8024e98:	e7bd      	b.n	8024e16 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024e9a:	4663      	mov	r3, ip
 8024e9c:	4665      	mov	r5, ip
 8024e9e:	e7ba      	b.n	8024e16 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024ea0:	2300      	movs	r3, #0
 8024ea2:	e7b8      	b.n	8024e16 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024ea4:	463b      	mov	r3, r7
 8024ea6:	e7b6      	b.n	8024e16 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024ea8:	880d      	ldrh	r5, [r1, #0]
 8024eaa:	b29f      	uxth	r7, r3
 8024eac:	122c      	asrs	r4, r5, #8
 8024eae:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8024eb2:	43db      	mvns	r3, r3
 8024eb4:	b2db      	uxtb	r3, r3
 8024eb6:	fb10 f007 	smulbb	r0, r0, r7
 8024eba:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024ebe:	fb04 0403 	mla	r4, r4, r3, r0
 8024ec2:	b2f6      	uxtb	r6, r6
 8024ec4:	10e8      	asrs	r0, r5, #3
 8024ec6:	b2d2      	uxtb	r2, r2
 8024ec8:	00ed      	lsls	r5, r5, #3
 8024eca:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024ece:	fb12 f207 	smulbb	r2, r2, r7
 8024ed2:	fb16 f607 	smulbb	r6, r6, r7
 8024ed6:	b2ed      	uxtb	r5, r5
 8024ed8:	b2a4      	uxth	r4, r4
 8024eda:	fb00 6603 	mla	r6, r0, r3, r6
 8024ede:	fb05 2303 	mla	r3, r5, r3, r2
 8024ee2:	b29a      	uxth	r2, r3
 8024ee4:	1c63      	adds	r3, r4, #1
 8024ee6:	b2b0      	uxth	r0, r6
 8024ee8:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024eec:	1c53      	adds	r3, r2, #1
 8024eee:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024ef2:	1c42      	adds	r2, r0, #1
 8024ef4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024ef8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024efc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024f00:	0940      	lsrs	r0, r0, #5
 8024f02:	4323      	orrs	r3, r4
 8024f04:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024f08:	4303      	orrs	r3, r0
 8024f0a:	800b      	strh	r3, [r1, #0]
 8024f0c:	e7b5      	b.n	8024e7a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024f0e:	bf00      	nop
 8024f10:	20012f3c 	.word	0x20012f3c
 8024f14:	00fff800 	.word	0x00fff800

08024f18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024f18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024f1c:	b097      	sub	sp, #92	; 0x5c
 8024f1e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8024f22:	9214      	str	r2, [sp, #80]	; 0x50
 8024f24:	9309      	str	r3, [sp, #36]	; 0x24
 8024f26:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024f28:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8024f2c:	910d      	str	r1, [sp, #52]	; 0x34
 8024f2e:	930f      	str	r3, [sp, #60]	; 0x3c
 8024f30:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8024f34:	9015      	str	r0, [sp, #84]	; 0x54
 8024f36:	6850      	ldr	r0, [r2, #4]
 8024f38:	6812      	ldr	r2, [r2, #0]
 8024f3a:	fb00 1303 	mla	r3, r0, r3, r1
 8024f3e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024f42:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024f44:	689b      	ldr	r3, [r3, #8]
 8024f46:	3301      	adds	r3, #1
 8024f48:	f023 0301 	bic.w	r3, r3, #1
 8024f4c:	930a      	str	r3, [sp, #40]	; 0x28
 8024f4e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024f50:	681f      	ldr	r7, [r3, #0]
 8024f52:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024f54:	2b00      	cmp	r3, #0
 8024f56:	dc03      	bgt.n	8024f60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024f58:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8024f5a:	2b00      	cmp	r3, #0
 8024f5c:	f340 8287 	ble.w	802546e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024f60:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024f62:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024f66:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024f6a:	1e48      	subs	r0, r1, #1
 8024f6c:	f102 3cff 	add.w	ip, r2, #4294967295
 8024f70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024f72:	2b00      	cmp	r3, #0
 8024f74:	f340 80c4 	ble.w	8025100 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8024f78:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024f7c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024f80:	d406      	bmi.n	8024f90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024f82:	4586      	cmp	lr, r0
 8024f84:	da04      	bge.n	8024f90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024f86:	2b00      	cmp	r3, #0
 8024f88:	db02      	blt.n	8024f90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024f8a:	4563      	cmp	r3, ip
 8024f8c:	f2c0 80b9 	blt.w	8025102 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8024f90:	f11e 0e01 	adds.w	lr, lr, #1
 8024f94:	f100 80aa 	bmi.w	80250ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024f98:	4571      	cmp	r1, lr
 8024f9a:	f2c0 80a7 	blt.w	80250ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024f9e:	3301      	adds	r3, #1
 8024fa0:	f100 80a4 	bmi.w	80250ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024fa4:	429a      	cmp	r2, r3
 8024fa6:	f2c0 80a1 	blt.w	80250ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024faa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024fac:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8024fb0:	930e      	str	r3, [sp, #56]	; 0x38
 8024fb2:	46c8      	mov	r8, r9
 8024fb4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024fb6:	2b00      	cmp	r3, #0
 8024fb8:	f340 80c3 	ble.w	8025142 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8024fbc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024fbe:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024fc2:	1423      	asrs	r3, r4, #16
 8024fc4:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024fc8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024fcc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024fd0:	f100 814d 	bmi.w	802526e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024fd4:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024fd8:	455b      	cmp	r3, fp
 8024fda:	f280 8148 	bge.w	802526e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024fde:	2800      	cmp	r0, #0
 8024fe0:	f2c0 8145 	blt.w	802526e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024fe4:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024fe8:	4558      	cmp	r0, fp
 8024fea:	f280 8140 	bge.w	802526e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024fee:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024ff0:	fb00 3305 	mla	r3, r0, r5, r3
 8024ff4:	0858      	lsrs	r0, r3, #1
 8024ff6:	07dd      	lsls	r5, r3, #31
 8024ff8:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024ffc:	bf54      	ite	pl
 8024ffe:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025002:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025006:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802500a:	fa5f fc8c 	uxtb.w	ip, ip
 802500e:	2a00      	cmp	r2, #0
 8025010:	f000 80db 	beq.w	80251ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8025014:	1c58      	adds	r0, r3, #1
 8025016:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802501a:	07c0      	lsls	r0, r0, #31
 802501c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8025020:	bf54      	ite	pl
 8025022:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025026:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802502a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802502e:	fa5f f08e 	uxtb.w	r0, lr
 8025032:	9010      	str	r0, [sp, #64]	; 0x40
 8025034:	b1c9      	cbz	r1, 802506a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025036:	4453      	add	r3, sl
 8025038:	0858      	lsrs	r0, r3, #1
 802503a:	07dd      	lsls	r5, r3, #31
 802503c:	5c38      	ldrb	r0, [r7, r0]
 802503e:	bf54      	ite	pl
 8025040:	f000 000f 	andpl.w	r0, r0, #15
 8025044:	1100      	asrmi	r0, r0, #4
 8025046:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802504a:	3301      	adds	r3, #1
 802504c:	b2c0      	uxtb	r0, r0
 802504e:	900b      	str	r0, [sp, #44]	; 0x2c
 8025050:	0858      	lsrs	r0, r3, #1
 8025052:	07dd      	lsls	r5, r3, #31
 8025054:	f817 e000 	ldrb.w	lr, [r7, r0]
 8025058:	bf54      	ite	pl
 802505a:	f00e 030f 	andpl.w	r3, lr, #15
 802505e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8025062:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025066:	b2db      	uxtb	r3, r3
 8025068:	9311      	str	r3, [sp, #68]	; 0x44
 802506a:	b292      	uxth	r2, r2
 802506c:	b289      	uxth	r1, r1
 802506e:	fb02 f301 	mul.w	r3, r2, r1
 8025072:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025076:	0112      	lsls	r2, r2, #4
 8025078:	b289      	uxth	r1, r1
 802507a:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802507e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025080:	1ad2      	subs	r2, r2, r3
 8025082:	1a40      	subs	r0, r0, r1
 8025084:	b292      	uxth	r2, r2
 8025086:	436a      	muls	r2, r5
 8025088:	b280      	uxth	r0, r0
 802508a:	fb0c 2c00 	mla	ip, ip, r0, r2
 802508e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8025090:	fb01 c102 	mla	r1, r1, r2, ip
 8025094:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8025096:	fb03 1302 	mla	r3, r3, r2, r1
 802509a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802509e:	b1db      	cbz	r3, 80250d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80250a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80250a2:	4353      	muls	r3, r2
 80250a4:	1c5a      	adds	r2, r3, #1
 80250a6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80250aa:	4ac6      	ldr	r2, [pc, #792]	; (80253c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80250ac:	121b      	asrs	r3, r3, #8
 80250ae:	6812      	ldr	r2, [r2, #0]
 80250b0:	2bff      	cmp	r3, #255	; 0xff
 80250b2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80250b6:	f040 8099 	bne.w	80251ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 80250ba:	0953      	lsrs	r3, r2, #5
 80250bc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80250c0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80250c4:	f02c 0c07 	bic.w	ip, ip, #7
 80250c8:	ea43 0c0c 	orr.w	ip, r3, ip
 80250cc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80250d0:	ea4c 0202 	orr.w	r2, ip, r2
 80250d4:	f8a8 2000 	strh.w	r2, [r8]
 80250d8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80250da:	441c      	add	r4, r3
 80250dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80250de:	441e      	add	r6, r3
 80250e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80250e2:	3b01      	subs	r3, #1
 80250e4:	f108 0802 	add.w	r8, r8, #2
 80250e8:	930e      	str	r3, [sp, #56]	; 0x38
 80250ea:	e763      	b.n	8024fb4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80250ec:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80250ee:	441c      	add	r4, r3
 80250f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80250f2:	441e      	add	r6, r3
 80250f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80250f6:	3b01      	subs	r3, #1
 80250f8:	9309      	str	r3, [sp, #36]	; 0x24
 80250fa:	f109 0902 	add.w	r9, r9, #2
 80250fe:	e737      	b.n	8024f70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8025100:	d024      	beq.n	802514c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8025102:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025104:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8025106:	3b01      	subs	r3, #1
 8025108:	fb00 4003 	mla	r0, r0, r3, r4
 802510c:	1400      	asrs	r0, r0, #16
 802510e:	f53f af4c 	bmi.w	8024faa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025112:	3901      	subs	r1, #1
 8025114:	4288      	cmp	r0, r1
 8025116:	f6bf af48 	bge.w	8024faa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802511a:	9924      	ldr	r1, [sp, #144]	; 0x90
 802511c:	fb01 6303 	mla	r3, r1, r3, r6
 8025120:	141b      	asrs	r3, r3, #16
 8025122:	f53f af42 	bmi.w	8024faa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025126:	3a01      	subs	r2, #1
 8025128:	4293      	cmp	r3, r2
 802512a:	f6bf af3e 	bge.w	8024faa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802512e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8025132:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8025136:	930e      	str	r3, [sp, #56]	; 0x38
 8025138:	46c8      	mov	r8, r9
 802513a:	f1bb 0f00 	cmp.w	fp, #0
 802513e:	f300 80b7 	bgt.w	80252b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8025142:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025144:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025148:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802514c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802514e:	2b00      	cmp	r3, #0
 8025150:	f340 818d 	ble.w	802546e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8025154:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025158:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802515c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025160:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025162:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025166:	ee31 1a05 	vadd.f32	s2, s2, s10
 802516a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802516e:	eef0 6a62 	vmov.f32	s13, s5
 8025172:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025176:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802517a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802517e:	ee16 4a90 	vmov	r4, s13
 8025182:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025186:	eef0 6a43 	vmov.f32	s13, s6
 802518a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802518e:	ee12 2a90 	vmov	r2, s5
 8025192:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025196:	fb92 f3f3 	sdiv	r3, r2, r3
 802519a:	ee13 2a10 	vmov	r2, s6
 802519e:	9323      	str	r3, [sp, #140]	; 0x8c
 80251a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80251a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80251a6:	9324      	str	r3, [sp, #144]	; 0x90
 80251a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80251aa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80251ac:	3b01      	subs	r3, #1
 80251ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80251b2:	930d      	str	r3, [sp, #52]	; 0x34
 80251b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80251b6:	bf08      	it	eq
 80251b8:	4613      	moveq	r3, r2
 80251ba:	ee16 6a90 	vmov	r6, s13
 80251be:	9309      	str	r3, [sp, #36]	; 0x24
 80251c0:	eeb0 3a67 	vmov.f32	s6, s15
 80251c4:	eef0 2a47 	vmov.f32	s5, s14
 80251c8:	e6c3      	b.n	8024f52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80251ca:	2900      	cmp	r1, #0
 80251cc:	f43f af4d 	beq.w	802506a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80251d0:	eb0a 0003 	add.w	r0, sl, r3
 80251d4:	0843      	lsrs	r3, r0, #1
 80251d6:	07c0      	lsls	r0, r0, #31
 80251d8:	5cfb      	ldrb	r3, [r7, r3]
 80251da:	bf54      	ite	pl
 80251dc:	f003 030f 	andpl.w	r3, r3, #15
 80251e0:	111b      	asrmi	r3, r3, #4
 80251e2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80251e6:	b2db      	uxtb	r3, r3
 80251e8:	930b      	str	r3, [sp, #44]	; 0x2c
 80251ea:	e73e      	b.n	802506a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80251ec:	f8b8 e000 	ldrh.w	lr, [r8]
 80251f0:	fa1f fb83 	uxth.w	fp, r3
 80251f4:	ea4f 202e 	mov.w	r0, lr, asr #8
 80251f8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80251fc:	43db      	mvns	r3, r3
 80251fe:	b2db      	uxtb	r3, r3
 8025200:	fb11 f10b 	smulbb	r1, r1, fp
 8025204:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025208:	fb00 1003 	mla	r0, r0, r3, r1
 802520c:	fa5f fc8c 	uxtb.w	ip, ip
 8025210:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025214:	b2d2      	uxtb	r2, r2
 8025216:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802521a:	b280      	uxth	r0, r0
 802521c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025220:	fb1c fc0b 	smulbb	ip, ip, fp
 8025224:	fa5f fe8e 	uxtb.w	lr, lr
 8025228:	fb12 fb0b 	smulbb	fp, r2, fp
 802522c:	fb01 cc03 	mla	ip, r1, r3, ip
 8025230:	fb0e bb03 	mla	fp, lr, r3, fp
 8025234:	1c43      	adds	r3, r0, #1
 8025236:	fa1f fc8c 	uxth.w	ip, ip
 802523a:	fa1f fb8b 	uxth.w	fp, fp
 802523e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025242:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8025246:	f10c 0101 	add.w	r1, ip, #1
 802524a:	f10b 0001 	add.w	r0, fp, #1
 802524e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8025252:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025256:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802525a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802525e:	4318      	orrs	r0, r3
 8025260:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025264:	ea40 000c 	orr.w	r0, r0, ip
 8025268:	f8a8 0000 	strh.w	r0, [r8]
 802526c:	e734      	b.n	80250d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802526e:	f113 0b01 	adds.w	fp, r3, #1
 8025272:	f53f af31 	bmi.w	80250d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025276:	45dc      	cmp	ip, fp
 8025278:	f6ff af2e 	blt.w	80250d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802527c:	f110 0b01 	adds.w	fp, r0, #1
 8025280:	f53f af2a 	bmi.w	80250d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025284:	45de      	cmp	lr, fp
 8025286:	f6ff af27 	blt.w	80250d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802528a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802528c:	9302      	str	r3, [sp, #8]
 802528e:	fa0f f38e 	sxth.w	r3, lr
 8025292:	9301      	str	r3, [sp, #4]
 8025294:	fa0f f38c 	sxth.w	r3, ip
 8025298:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802529c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80252a0:	9300      	str	r3, [sp, #0]
 80252a2:	463a      	mov	r2, r7
 80252a4:	4653      	mov	r3, sl
 80252a6:	4641      	mov	r1, r8
 80252a8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80252aa:	f7ff fd4d 	bl	8024d48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80252ae:	e713      	b.n	80250d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80252b0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80252b2:	1422      	asrs	r2, r4, #16
 80252b4:	1433      	asrs	r3, r6, #16
 80252b6:	fb05 2303 	mla	r3, r5, r3, r2
 80252ba:	085a      	lsrs	r2, r3, #1
 80252bc:	07dd      	lsls	r5, r3, #31
 80252be:	5cba      	ldrb	r2, [r7, r2]
 80252c0:	bf54      	ite	pl
 80252c2:	f002 020f 	andpl.w	r2, r2, #15
 80252c6:	1112      	asrmi	r2, r2, #4
 80252c8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80252cc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80252d0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80252d4:	b2d2      	uxtb	r2, r2
 80252d6:	2900      	cmp	r1, #0
 80252d8:	d076      	beq.n	80253c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80252da:	f103 0e01 	add.w	lr, r3, #1
 80252de:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80252e2:	f01e 0f01 	tst.w	lr, #1
 80252e6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80252ea:	bf0c      	ite	eq
 80252ec:	f00c 0c0f 	andeq.w	ip, ip, #15
 80252f0:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80252f4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80252f8:	fa5f f58c 	uxtb.w	r5, ip
 80252fc:	9512      	str	r5, [sp, #72]	; 0x48
 80252fe:	b300      	cbz	r0, 8025342 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025300:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025302:	442b      	add	r3, r5
 8025304:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025308:	07dd      	lsls	r5, r3, #31
 802530a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802530e:	bf54      	ite	pl
 8025310:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025314:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025318:	3301      	adds	r3, #1
 802531a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802531e:	fa5f f58c 	uxtb.w	r5, ip
 8025322:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025326:	950c      	str	r5, [sp, #48]	; 0x30
 8025328:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802532c:	07dd      	lsls	r5, r3, #31
 802532e:	bf54      	ite	pl
 8025330:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025334:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025338:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802533c:	fa5f f38c 	uxtb.w	r3, ip
 8025340:	9313      	str	r3, [sp, #76]	; 0x4c
 8025342:	b289      	uxth	r1, r1
 8025344:	b280      	uxth	r0, r0
 8025346:	fb01 f300 	mul.w	r3, r1, r0
 802534a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802534e:	0109      	lsls	r1, r1, #4
 8025350:	b280      	uxth	r0, r0
 8025352:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8025356:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025358:	1ac9      	subs	r1, r1, r3
 802535a:	ebac 0c00 	sub.w	ip, ip, r0
 802535e:	b289      	uxth	r1, r1
 8025360:	4369      	muls	r1, r5
 8025362:	fa1f fc8c 	uxth.w	ip, ip
 8025366:	fb02 120c 	mla	r2, r2, ip, r1
 802536a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802536c:	fb00 2001 	mla	r0, r0, r1, r2
 8025370:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8025372:	fb03 0302 	mla	r3, r3, r2, r0
 8025376:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802537a:	b1d3      	cbz	r3, 80253b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802537c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802537e:	4353      	muls	r3, r2
 8025380:	1c5a      	adds	r2, r3, #1
 8025382:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025386:	4a0f      	ldr	r2, [pc, #60]	; (80253c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025388:	121b      	asrs	r3, r3, #8
 802538a:	6812      	ldr	r2, [r2, #0]
 802538c:	2bff      	cmp	r3, #255	; 0xff
 802538e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025392:	d12d      	bne.n	80253f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8025394:	0953      	lsrs	r3, r2, #5
 8025396:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802539a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802539e:	f02c 0c07 	bic.w	ip, ip, #7
 80253a2:	ea43 0c0c 	orr.w	ip, r3, ip
 80253a6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80253aa:	ea4c 0202 	orr.w	r2, ip, r2
 80253ae:	f8a8 2000 	strh.w	r2, [r8]
 80253b2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80253b4:	441c      	add	r4, r3
 80253b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80253b8:	f108 0802 	add.w	r8, r8, #2
 80253bc:	441e      	add	r6, r3
 80253be:	f10b 3bff 	add.w	fp, fp, #4294967295
 80253c2:	e6ba      	b.n	802513a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80253c4:	20012f3c 	.word	0x20012f3c
 80253c8:	2800      	cmp	r0, #0
 80253ca:	d0ba      	beq.n	8025342 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80253cc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80253ce:	442b      	add	r3, r5
 80253d0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80253d4:	07db      	lsls	r3, r3, #31
 80253d6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80253da:	bf54      	ite	pl
 80253dc:	f00c 0c0f 	andpl.w	ip, ip, #15
 80253e0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80253e4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80253e8:	fa5f f38c 	uxtb.w	r3, ip
 80253ec:	930c      	str	r3, [sp, #48]	; 0x30
 80253ee:	e7a8      	b.n	8025342 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80253f0:	f8b8 e000 	ldrh.w	lr, [r8]
 80253f4:	fa1f fa83 	uxth.w	sl, r3
 80253f8:	ea4f 202e 	mov.w	r0, lr, asr #8
 80253fc:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025400:	43db      	mvns	r3, r3
 8025402:	b2db      	uxtb	r3, r3
 8025404:	fb11 f10a 	smulbb	r1, r1, sl
 8025408:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802540c:	fb00 1003 	mla	r0, r0, r3, r1
 8025410:	b2d2      	uxtb	r2, r2
 8025412:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025416:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802541a:	fa5f fe8e 	uxtb.w	lr, lr
 802541e:	fb12 f20a 	smulbb	r2, r2, sl
 8025422:	fb0e 2203 	mla	r2, lr, r3, r2
 8025426:	fa5f fc8c 	uxtb.w	ip, ip
 802542a:	b280      	uxth	r0, r0
 802542c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025430:	b292      	uxth	r2, r2
 8025432:	fb1c fc0a 	smulbb	ip, ip, sl
 8025436:	fb01 cc03 	mla	ip, r1, r3, ip
 802543a:	1c43      	adds	r3, r0, #1
 802543c:	1c51      	adds	r1, r2, #1
 802543e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025442:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8025446:	fa1f fc8c 	uxth.w	ip, ip
 802544a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802544e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8025452:	4308      	orrs	r0, r1
 8025454:	f10c 0101 	add.w	r1, ip, #1
 8025458:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802545c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025460:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025464:	ea40 000c 	orr.w	r0, r0, ip
 8025468:	f8a8 0000 	strh.w	r0, [r8]
 802546c:	e7a1      	b.n	80253b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802546e:	b017      	add	sp, #92	; 0x5c
 8025470:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025474 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8025474:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025478:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 802547c:	2d00      	cmp	r5, #0
 802547e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025482:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8025486:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802548a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802548e:	fb05 0e03 	mla	lr, r5, r3, r0
 8025492:	f2c0 80b0 	blt.w	80255f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025496:	45a9      	cmp	r9, r5
 8025498:	f340 80ad 	ble.w	80255f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802549c:	2800      	cmp	r0, #0
 802549e:	f2c0 80a8 	blt.w	80255f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80254a2:	4580      	cmp	r8, r0
 80254a4:	f340 80a5 	ble.w	80255f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80254a8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80254ac:	f01e 0f01 	tst.w	lr, #1
 80254b0:	5d16      	ldrb	r6, [r2, r4]
 80254b2:	bf0c      	ite	eq
 80254b4:	f006 060f 	andeq.w	r6, r6, #15
 80254b8:	1136      	asrne	r6, r6, #4
 80254ba:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80254be:	b2f6      	uxtb	r6, r6
 80254c0:	1c44      	adds	r4, r0, #1
 80254c2:	f100 809b 	bmi.w	80255fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80254c6:	45a0      	cmp	r8, r4
 80254c8:	f340 8098 	ble.w	80255fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80254cc:	2f00      	cmp	r7, #0
 80254ce:	f000 8097 	beq.w	8025600 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 80254d2:	f10e 0a01 	add.w	sl, lr, #1
 80254d6:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80254da:	f01a 0f01 	tst.w	sl, #1
 80254de:	5d14      	ldrb	r4, [r2, r4]
 80254e0:	bf0c      	ite	eq
 80254e2:	f004 040f 	andeq.w	r4, r4, #15
 80254e6:	1124      	asrne	r4, r4, #4
 80254e8:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80254ec:	b2e4      	uxtb	r4, r4
 80254ee:	3501      	adds	r5, #1
 80254f0:	f100 808a 	bmi.w	8025608 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80254f4:	45a9      	cmp	r9, r5
 80254f6:	f340 8087 	ble.w	8025608 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80254fa:	f1bc 0f00 	cmp.w	ip, #0
 80254fe:	f000 8086 	beq.w	802560e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8025502:	2800      	cmp	r0, #0
 8025504:	db7e      	blt.n	8025604 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8025506:	4580      	cmp	r8, r0
 8025508:	dd7c      	ble.n	8025604 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802550a:	eb03 090e 	add.w	r9, r3, lr
 802550e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8025512:	f019 0f01 	tst.w	r9, #1
 8025516:	5d55      	ldrb	r5, [r2, r5]
 8025518:	bf0c      	ite	eq
 802551a:	f005 050f 	andeq.w	r5, r5, #15
 802551e:	112d      	asrne	r5, r5, #4
 8025520:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8025524:	b2ed      	uxtb	r5, r5
 8025526:	3001      	adds	r0, #1
 8025528:	d474      	bmi.n	8025614 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802552a:	4580      	cmp	r8, r0
 802552c:	dd72      	ble.n	8025614 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802552e:	2f00      	cmp	r7, #0
 8025530:	d072      	beq.n	8025618 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8025532:	3301      	adds	r3, #1
 8025534:	449e      	add	lr, r3
 8025536:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802553a:	f01e 0f01 	tst.w	lr, #1
 802553e:	5cd0      	ldrb	r0, [r2, r3]
 8025540:	bf0c      	ite	eq
 8025542:	f000 000f 	andeq.w	r0, r0, #15
 8025546:	1100      	asrne	r0, r0, #4
 8025548:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802554c:	b2c3      	uxtb	r3, r0
 802554e:	b2ba      	uxth	r2, r7
 8025550:	fa1f fc8c 	uxth.w	ip, ip
 8025554:	fb02 f00c 	mul.w	r0, r2, ip
 8025558:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802555c:	0112      	lsls	r2, r2, #4
 802555e:	fa1f fc8c 	uxth.w	ip, ip
 8025562:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8025566:	1a12      	subs	r2, r2, r0
 8025568:	eba7 070c 	sub.w	r7, r7, ip
 802556c:	b292      	uxth	r2, r2
 802556e:	b2bf      	uxth	r7, r7
 8025570:	4362      	muls	r2, r4
 8025572:	fb06 2207 	mla	r2, r6, r7, r2
 8025576:	fb0c 2505 	mla	r5, ip, r5, r2
 802557a:	fb00 5303 	mla	r3, r0, r3, r5
 802557e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025582:	b3a3      	cbz	r3, 80255ee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8025584:	4a25      	ldr	r2, [pc, #148]	; (802561c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8025586:	880e      	ldrh	r6, [r1, #0]
 8025588:	6815      	ldr	r5, [r2, #0]
 802558a:	1234      	asrs	r4, r6, #8
 802558c:	b29a      	uxth	r2, r3
 802558e:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8025592:	43db      	mvns	r3, r3
 8025594:	b2db      	uxtb	r3, r3
 8025596:	fb10 f002 	smulbb	r0, r0, r2
 802559a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802559e:	fb04 0403 	mla	r4, r4, r3, r0
 80255a2:	f3c5 2707 	ubfx	r7, r5, #8, #8
 80255a6:	10f0      	asrs	r0, r6, #3
 80255a8:	b2ed      	uxtb	r5, r5
 80255aa:	00f6      	lsls	r6, r6, #3
 80255ac:	fb17 f702 	smulbb	r7, r7, r2
 80255b0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80255b4:	fb15 f202 	smulbb	r2, r5, r2
 80255b8:	b2f6      	uxtb	r6, r6
 80255ba:	b2a4      	uxth	r4, r4
 80255bc:	fb00 7003 	mla	r0, r0, r3, r7
 80255c0:	fb06 2303 	mla	r3, r6, r3, r2
 80255c4:	b29a      	uxth	r2, r3
 80255c6:	1c63      	adds	r3, r4, #1
 80255c8:	b280      	uxth	r0, r0
 80255ca:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80255ce:	1c53      	adds	r3, r2, #1
 80255d0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80255d4:	1c42      	adds	r2, r0, #1
 80255d6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80255da:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80255de:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80255e2:	0940      	lsrs	r0, r0, #5
 80255e4:	4323      	orrs	r3, r4
 80255e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80255ea:	4303      	orrs	r3, r0
 80255ec:	800b      	strh	r3, [r1, #0]
 80255ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80255f2:	2600      	movs	r6, #0
 80255f4:	e764      	b.n	80254c0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 80255f6:	2400      	movs	r4, #0
 80255f8:	4626      	mov	r6, r4
 80255fa:	e778      	b.n	80254ee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80255fc:	2400      	movs	r4, #0
 80255fe:	e776      	b.n	80254ee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025600:	463c      	mov	r4, r7
 8025602:	e774      	b.n	80254ee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025604:	2500      	movs	r5, #0
 8025606:	e78e      	b.n	8025526 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8025608:	2300      	movs	r3, #0
 802560a:	461d      	mov	r5, r3
 802560c:	e79f      	b.n	802554e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802560e:	4663      	mov	r3, ip
 8025610:	4665      	mov	r5, ip
 8025612:	e79c      	b.n	802554e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025614:	2300      	movs	r3, #0
 8025616:	e79a      	b.n	802554e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025618:	463b      	mov	r3, r7
 802561a:	e798      	b.n	802554e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802561c:	20012f3c 	.word	0x20012f3c

08025620 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025624:	b093      	sub	sp, #76	; 0x4c
 8025626:	461d      	mov	r5, r3
 8025628:	920c      	str	r2, [sp, #48]	; 0x30
 802562a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802562c:	9107      	str	r1, [sp, #28]
 802562e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8025632:	9011      	str	r0, [sp, #68]	; 0x44
 8025634:	6850      	ldr	r0, [r2, #4]
 8025636:	6812      	ldr	r2, [r2, #0]
 8025638:	fb00 1303 	mla	r3, r0, r3, r1
 802563c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025640:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025642:	689b      	ldr	r3, [r3, #8]
 8025644:	3301      	adds	r3, #1
 8025646:	f023 0301 	bic.w	r3, r3, #1
 802564a:	9306      	str	r3, [sp, #24]
 802564c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802564e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8025652:	681f      	ldr	r7, [r3, #0]
 8025654:	9b07      	ldr	r3, [sp, #28]
 8025656:	2b00      	cmp	r3, #0
 8025658:	dc03      	bgt.n	8025662 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802565a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802565c:	2b00      	cmp	r3, #0
 802565e:	f340 8267 	ble.w	8025b30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8025662:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025664:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025668:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802566c:	1e48      	subs	r0, r1, #1
 802566e:	f102 3cff 	add.w	ip, r2, #4294967295
 8025672:	2d00      	cmp	r5, #0
 8025674:	f340 80b8 	ble.w	80257e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025678:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802567c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025680:	d406      	bmi.n	8025690 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025682:	4586      	cmp	lr, r0
 8025684:	da04      	bge.n	8025690 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025686:	2b00      	cmp	r3, #0
 8025688:	db02      	blt.n	8025690 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802568a:	4563      	cmp	r3, ip
 802568c:	f2c0 80ad 	blt.w	80257ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8025690:	f11e 0e01 	adds.w	lr, lr, #1
 8025694:	f100 80a0 	bmi.w	80257d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025698:	4571      	cmp	r1, lr
 802569a:	f2c0 809d 	blt.w	80257d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802569e:	3301      	adds	r3, #1
 80256a0:	f100 809a 	bmi.w	80257d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80256a4:	429a      	cmp	r2, r3
 80256a6:	f2c0 8097 	blt.w	80257d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80256aa:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 80256ae:	9509      	str	r5, [sp, #36]	; 0x24
 80256b0:	46c8      	mov	r8, r9
 80256b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80256b4:	2b00      	cmp	r3, #0
 80256b6:	f340 80b6 	ble.w	8025826 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80256ba:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80256be:	9308      	str	r3, [sp, #32]
 80256c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80256c2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80256c6:	1423      	asrs	r3, r4, #16
 80256c8:	ea4f 4026 	mov.w	r0, r6, asr #16
 80256cc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80256d0:	f100 813e 	bmi.w	8025950 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80256d4:	f10c 3bff 	add.w	fp, ip, #4294967295
 80256d8:	455b      	cmp	r3, fp
 80256da:	f280 8139 	bge.w	8025950 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80256de:	2800      	cmp	r0, #0
 80256e0:	f2c0 8136 	blt.w	8025950 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80256e4:	f10e 3bff 	add.w	fp, lr, #4294967295
 80256e8:	4558      	cmp	r0, fp
 80256ea:	f280 8131 	bge.w	8025950 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80256ee:	9a06      	ldr	r2, [sp, #24]
 80256f0:	fb00 3302 	mla	r3, r0, r2, r3
 80256f4:	0858      	lsrs	r0, r3, #1
 80256f6:	07da      	lsls	r2, r3, #31
 80256f8:	f817 c000 	ldrb.w	ip, [r7, r0]
 80256fc:	9a08      	ldr	r2, [sp, #32]
 80256fe:	bf54      	ite	pl
 8025700:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025704:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025708:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802570c:	fa5f fc8c 	uxtb.w	ip, ip
 8025710:	2a00      	cmp	r2, #0
 8025712:	f000 80cb 	beq.w	80258ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8025716:	1c58      	adds	r0, r3, #1
 8025718:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802571c:	07c0      	lsls	r0, r0, #31
 802571e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8025722:	bf54      	ite	pl
 8025724:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025728:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802572c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8025730:	fa5f fe8e 	uxtb.w	lr, lr
 8025734:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8025738:	b1b9      	cbz	r1, 802576a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802573a:	4453      	add	r3, sl
 802573c:	0858      	lsrs	r0, r3, #1
 802573e:	07da      	lsls	r2, r3, #31
 8025740:	5c38      	ldrb	r0, [r7, r0]
 8025742:	bf54      	ite	pl
 8025744:	f000 000f 	andpl.w	r0, r0, #15
 8025748:	1100      	asrmi	r0, r0, #4
 802574a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802574e:	b2c0      	uxtb	r0, r0
 8025750:	900a      	str	r0, [sp, #40]	; 0x28
 8025752:	1c58      	adds	r0, r3, #1
 8025754:	0843      	lsrs	r3, r0, #1
 8025756:	07c2      	lsls	r2, r0, #31
 8025758:	5cfb      	ldrb	r3, [r7, r3]
 802575a:	bf54      	ite	pl
 802575c:	f003 030f 	andpl.w	r3, r3, #15
 8025760:	111b      	asrmi	r3, r3, #4
 8025762:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025766:	b2db      	uxtb	r3, r3
 8025768:	930e      	str	r3, [sp, #56]	; 0x38
 802576a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802576e:	b289      	uxth	r1, r1
 8025770:	fb02 f301 	mul.w	r3, r2, r1
 8025774:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025778:	0112      	lsls	r2, r2, #4
 802577a:	b289      	uxth	r1, r1
 802577c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8025780:	1a40      	subs	r0, r0, r1
 8025782:	fa1f fe80 	uxth.w	lr, r0
 8025786:	1ad2      	subs	r2, r2, r3
 8025788:	980d      	ldr	r0, [sp, #52]	; 0x34
 802578a:	b292      	uxth	r2, r2
 802578c:	4342      	muls	r2, r0
 802578e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8025792:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8025794:	fb01 c102 	mla	r1, r1, r2, ip
 8025798:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802579a:	fb03 1302 	mla	r3, r3, r2, r1
 802579e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80257a2:	2bff      	cmp	r3, #255	; 0xff
 80257a4:	f040 8093 	bne.w	80258ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80257a8:	4bbe      	ldr	r3, [pc, #760]	; (8025aa4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80257aa:	681a      	ldr	r2, [r3, #0]
 80257ac:	4bbe      	ldr	r3, [pc, #760]	; (8025aa8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80257ae:	0951      	lsrs	r1, r2, #5
 80257b0:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80257b4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80257b8:	430b      	orrs	r3, r1
 80257ba:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80257be:	4313      	orrs	r3, r2
 80257c0:	f8a8 3000 	strh.w	r3, [r8]
 80257c4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80257c6:	441c      	add	r4, r3
 80257c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80257ca:	441e      	add	r6, r3
 80257cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80257ce:	3b01      	subs	r3, #1
 80257d0:	f108 0802 	add.w	r8, r8, #2
 80257d4:	9309      	str	r3, [sp, #36]	; 0x24
 80257d6:	e76c      	b.n	80256b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80257d8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80257da:	441c      	add	r4, r3
 80257dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80257de:	3d01      	subs	r5, #1
 80257e0:	441e      	add	r6, r3
 80257e2:	f109 0902 	add.w	r9, r9, #2
 80257e6:	e744      	b.n	8025672 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80257e8:	d021      	beq.n	802582e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80257ea:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80257ec:	1e6b      	subs	r3, r5, #1
 80257ee:	fb00 4003 	mla	r0, r0, r3, r4
 80257f2:	1400      	asrs	r0, r0, #16
 80257f4:	f53f af59 	bmi.w	80256aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80257f8:	3901      	subs	r1, #1
 80257fa:	4288      	cmp	r0, r1
 80257fc:	f6bf af55 	bge.w	80256aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025800:	9920      	ldr	r1, [sp, #128]	; 0x80
 8025802:	fb01 6303 	mla	r3, r1, r3, r6
 8025806:	141b      	asrs	r3, r3, #16
 8025808:	f53f af4f 	bmi.w	80256aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802580c:	3a01      	subs	r2, #1
 802580e:	4293      	cmp	r3, r2
 8025810:	f6bf af4b 	bge.w	80256aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025814:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8025818:	9308      	str	r3, [sp, #32]
 802581a:	46a8      	mov	r8, r5
 802581c:	46ce      	mov	lr, r9
 802581e:	f1b8 0f00 	cmp.w	r8, #0
 8025822:	f300 80b5 	bgt.w	8025990 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8025826:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802582a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802582e:	9b07      	ldr	r3, [sp, #28]
 8025830:	2b00      	cmp	r3, #0
 8025832:	f340 817d 	ble.w	8025b30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8025836:	ee30 0a04 	vadd.f32	s0, s0, s8
 802583a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802583e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025842:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025844:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025848:	ee31 1a05 	vadd.f32	s2, s2, s10
 802584c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025850:	eef0 6a62 	vmov.f32	s13, s5
 8025854:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025858:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802585c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025860:	ee16 4a90 	vmov	r4, s13
 8025864:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025868:	eef0 6a43 	vmov.f32	s13, s6
 802586c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025870:	ee12 2a90 	vmov	r2, s5
 8025874:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025878:	fb92 f3f3 	sdiv	r3, r2, r3
 802587c:	ee13 2a10 	vmov	r2, s6
 8025880:	931f      	str	r3, [sp, #124]	; 0x7c
 8025882:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025884:	fb92 f3f3 	sdiv	r3, r2, r3
 8025888:	9320      	str	r3, [sp, #128]	; 0x80
 802588a:	9b07      	ldr	r3, [sp, #28]
 802588c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802588e:	3b01      	subs	r3, #1
 8025890:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025894:	9307      	str	r3, [sp, #28]
 8025896:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025898:	ee16 6a90 	vmov	r6, s13
 802589c:	bf14      	ite	ne
 802589e:	461d      	movne	r5, r3
 80258a0:	4615      	moveq	r5, r2
 80258a2:	eeb0 3a67 	vmov.f32	s6, s15
 80258a6:	eef0 2a47 	vmov.f32	s5, s14
 80258aa:	e6d3      	b.n	8025654 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80258ac:	2900      	cmp	r1, #0
 80258ae:	f43f af5c 	beq.w	802576a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80258b2:	eb0a 0003 	add.w	r0, sl, r3
 80258b6:	0843      	lsrs	r3, r0, #1
 80258b8:	07c0      	lsls	r0, r0, #31
 80258ba:	5cfb      	ldrb	r3, [r7, r3]
 80258bc:	bf54      	ite	pl
 80258be:	f003 030f 	andpl.w	r3, r3, #15
 80258c2:	111b      	asrmi	r3, r3, #4
 80258c4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80258c8:	b2db      	uxtb	r3, r3
 80258ca:	930a      	str	r3, [sp, #40]	; 0x28
 80258cc:	e74d      	b.n	802576a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80258ce:	2b00      	cmp	r3, #0
 80258d0:	f43f af78 	beq.w	80257c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80258d4:	4a73      	ldr	r2, [pc, #460]	; (8025aa4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80258d6:	f8b8 c000 	ldrh.w	ip, [r8]
 80258da:	6810      	ldr	r0, [r2, #0]
 80258dc:	fa1f fe83 	uxth.w	lr, r3
 80258e0:	ea4f 212c 	mov.w	r1, ip, asr #8
 80258e4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80258e8:	43db      	mvns	r3, r3
 80258ea:	b2db      	uxtb	r3, r3
 80258ec:	fb12 f20e 	smulbb	r2, r2, lr
 80258f0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80258f4:	fb01 2103 	mla	r1, r1, r3, r2
 80258f8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80258fc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025900:	b2c0      	uxtb	r0, r0
 8025902:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8025906:	fb1b fb0e 	smulbb	fp, fp, lr
 802590a:	b289      	uxth	r1, r1
 802590c:	fb10 fe0e 	smulbb	lr, r0, lr
 8025910:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025914:	fa5f fc8c 	uxtb.w	ip, ip
 8025918:	fb02 b203 	mla	r2, r2, r3, fp
 802591c:	1c48      	adds	r0, r1, #1
 802591e:	fb0c e303 	mla	r3, ip, r3, lr
 8025922:	b292      	uxth	r2, r2
 8025924:	b29b      	uxth	r3, r3
 8025926:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802592a:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 802592e:	f102 0b01 	add.w	fp, r2, #1
 8025932:	1c59      	adds	r1, r3, #1
 8025934:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025938:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802593c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025940:	0952      	lsrs	r2, r2, #5
 8025942:	4301      	orrs	r1, r0
 8025944:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025948:	4311      	orrs	r1, r2
 802594a:	f8a8 1000 	strh.w	r1, [r8]
 802594e:	e739      	b.n	80257c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025950:	f113 0b01 	adds.w	fp, r3, #1
 8025954:	f53f af36 	bmi.w	80257c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025958:	45dc      	cmp	ip, fp
 802595a:	f6ff af33 	blt.w	80257c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802595e:	f110 0b01 	adds.w	fp, r0, #1
 8025962:	f53f af2f 	bmi.w	80257c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025966:	45de      	cmp	lr, fp
 8025968:	f6ff af2c 	blt.w	80257c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802596c:	9a08      	ldr	r2, [sp, #32]
 802596e:	9302      	str	r3, [sp, #8]
 8025970:	fa0f f38e 	sxth.w	r3, lr
 8025974:	9301      	str	r3, [sp, #4]
 8025976:	fa0f f38c 	sxth.w	r3, ip
 802597a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802597e:	9105      	str	r1, [sp, #20]
 8025980:	9300      	str	r3, [sp, #0]
 8025982:	463a      	mov	r2, r7
 8025984:	4653      	mov	r3, sl
 8025986:	4641      	mov	r1, r8
 8025988:	9811      	ldr	r0, [sp, #68]	; 0x44
 802598a:	f7ff fd73 	bl	8025474 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802598e:	e719      	b.n	80257c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025990:	9906      	ldr	r1, [sp, #24]
 8025992:	1422      	asrs	r2, r4, #16
 8025994:	1433      	asrs	r3, r6, #16
 8025996:	fb01 2303 	mla	r3, r1, r3, r2
 802599a:	085a      	lsrs	r2, r3, #1
 802599c:	07d9      	lsls	r1, r3, #31
 802599e:	5cba      	ldrb	r2, [r7, r2]
 80259a0:	bf54      	ite	pl
 80259a2:	f002 020f 	andpl.w	r2, r2, #15
 80259a6:	1112      	asrmi	r2, r2, #4
 80259a8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80259ac:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80259b0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80259b4:	b2d2      	uxtb	r2, r2
 80259b6:	2800      	cmp	r0, #0
 80259b8:	d062      	beq.n	8025a80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80259ba:	f103 0a01 	add.w	sl, r3, #1
 80259be:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80259c2:	f01a 0f01 	tst.w	sl, #1
 80259c6:	5c79      	ldrb	r1, [r7, r1]
 80259c8:	bf0c      	ite	eq
 80259ca:	f001 010f 	andeq.w	r1, r1, #15
 80259ce:	1109      	asrne	r1, r1, #4
 80259d0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80259d4:	b2c9      	uxtb	r1, r1
 80259d6:	910f      	str	r1, [sp, #60]	; 0x3c
 80259d8:	f1bc 0f00 	cmp.w	ip, #0
 80259dc:	d019      	beq.n	8025a12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80259de:	9908      	ldr	r1, [sp, #32]
 80259e0:	440b      	add	r3, r1
 80259e2:	0859      	lsrs	r1, r3, #1
 80259e4:	f013 0f01 	tst.w	r3, #1
 80259e8:	5c79      	ldrb	r1, [r7, r1]
 80259ea:	bf0c      	ite	eq
 80259ec:	f001 010f 	andeq.w	r1, r1, #15
 80259f0:	1109      	asrne	r1, r1, #4
 80259f2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80259f6:	b2c9      	uxtb	r1, r1
 80259f8:	3301      	adds	r3, #1
 80259fa:	910b      	str	r1, [sp, #44]	; 0x2c
 80259fc:	0859      	lsrs	r1, r3, #1
 80259fe:	07db      	lsls	r3, r3, #31
 8025a00:	5c79      	ldrb	r1, [r7, r1]
 8025a02:	bf54      	ite	pl
 8025a04:	f001 010f 	andpl.w	r1, r1, #15
 8025a08:	1109      	asrmi	r1, r1, #4
 8025a0a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025a0e:	b2c9      	uxtb	r1, r1
 8025a10:	9110      	str	r1, [sp, #64]	; 0x40
 8025a12:	b280      	uxth	r0, r0
 8025a14:	fa1f fc8c 	uxth.w	ip, ip
 8025a18:	fb00 f30c 	mul.w	r3, r0, ip
 8025a1c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8025a20:	0100      	lsls	r0, r0, #4
 8025a22:	fa1f fc8c 	uxth.w	ip, ip
 8025a26:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8025a2a:	eba1 010c 	sub.w	r1, r1, ip
 8025a2e:	fa1f fa81 	uxth.w	sl, r1
 8025a32:	1ac0      	subs	r0, r0, r3
 8025a34:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8025a36:	b280      	uxth	r0, r0
 8025a38:	4348      	muls	r0, r1
 8025a3a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8025a3c:	fb02 020a 	mla	r2, r2, sl, r0
 8025a40:	fb0c 2c01 	mla	ip, ip, r1, r2
 8025a44:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8025a46:	fb03 c302 	mla	r3, r3, r2, ip
 8025a4a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025a4e:	2bff      	cmp	r3, #255	; 0xff
 8025a50:	d12c      	bne.n	8025aac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8025a52:	4b14      	ldr	r3, [pc, #80]	; (8025aa4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025a54:	681a      	ldr	r2, [r3, #0]
 8025a56:	4b14      	ldr	r3, [pc, #80]	; (8025aa8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8025a58:	0951      	lsrs	r1, r2, #5
 8025a5a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8025a5e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025a62:	430b      	orrs	r3, r1
 8025a64:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025a68:	4313      	orrs	r3, r2
 8025a6a:	f8ae 3000 	strh.w	r3, [lr]
 8025a6e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025a70:	441c      	add	r4, r3
 8025a72:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025a74:	f10e 0e02 	add.w	lr, lr, #2
 8025a78:	441e      	add	r6, r3
 8025a7a:	f108 38ff 	add.w	r8, r8, #4294967295
 8025a7e:	e6ce      	b.n	802581e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8025a80:	f1bc 0f00 	cmp.w	ip, #0
 8025a84:	d0c5      	beq.n	8025a12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8025a86:	9908      	ldr	r1, [sp, #32]
 8025a88:	440b      	add	r3, r1
 8025a8a:	0859      	lsrs	r1, r3, #1
 8025a8c:	07db      	lsls	r3, r3, #31
 8025a8e:	5c79      	ldrb	r1, [r7, r1]
 8025a90:	bf54      	ite	pl
 8025a92:	f001 010f 	andpl.w	r1, r1, #15
 8025a96:	1109      	asrmi	r1, r1, #4
 8025a98:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025a9c:	b2c9      	uxtb	r1, r1
 8025a9e:	910b      	str	r1, [sp, #44]	; 0x2c
 8025aa0:	e7b7      	b.n	8025a12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8025aa2:	bf00      	nop
 8025aa4:	20012f3c 	.word	0x20012f3c
 8025aa8:	fffff800 	.word	0xfffff800
 8025aac:	2b00      	cmp	r3, #0
 8025aae:	d0de      	beq.n	8025a6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025ab0:	4a21      	ldr	r2, [pc, #132]	; (8025b38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8025ab2:	f8be c000 	ldrh.w	ip, [lr]
 8025ab6:	6810      	ldr	r0, [r2, #0]
 8025ab8:	fa1f fa83 	uxth.w	sl, r3
 8025abc:	ea4f 212c 	mov.w	r1, ip, asr #8
 8025ac0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025ac4:	43db      	mvns	r3, r3
 8025ac6:	b2db      	uxtb	r3, r3
 8025ac8:	fb12 f20a 	smulbb	r2, r2, sl
 8025acc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025ad0:	fb01 2103 	mla	r1, r1, r3, r2
 8025ad4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8025ad8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025adc:	b2c0      	uxtb	r0, r0
 8025ade:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8025ae2:	fa5f fc8c 	uxtb.w	ip, ip
 8025ae6:	fb10 f00a 	smulbb	r0, r0, sl
 8025aea:	fb0c 0003 	mla	r0, ip, r3, r0
 8025aee:	b289      	uxth	r1, r1
 8025af0:	fb1b fb0a 	smulbb	fp, fp, sl
 8025af4:	b280      	uxth	r0, r0
 8025af6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025afa:	fb02 b203 	mla	r2, r2, r3, fp
 8025afe:	1c4b      	adds	r3, r1, #1
 8025b00:	f100 0b01 	add.w	fp, r0, #1
 8025b04:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025b08:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8025b0c:	b292      	uxth	r2, r2
 8025b0e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8025b12:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8025b16:	ea4b 0101 	orr.w	r1, fp, r1
 8025b1a:	f102 0b01 	add.w	fp, r2, #1
 8025b1e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8025b22:	0952      	lsrs	r2, r2, #5
 8025b24:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025b28:	4311      	orrs	r1, r2
 8025b2a:	f8ae 1000 	strh.w	r1, [lr]
 8025b2e:	e79e      	b.n	8025a6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025b30:	b013      	add	sp, #76	; 0x4c
 8025b32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025b36:	bf00      	nop
 8025b38:	20012f3c 	.word	0x20012f3c

08025b3c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8025b3c:	b570      	push	{r4, r5, r6, lr}
 8025b3e:	1208      	asrs	r0, r1, #8
 8025b40:	b29e      	uxth	r6, r3
 8025b42:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8025b46:	1213      	asrs	r3, r2, #8
 8025b48:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025b4c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025b50:	fb13 f305 	smulbb	r3, r3, r5
 8025b54:	fb10 f006 	smulbb	r0, r0, r6
 8025b58:	4418      	add	r0, r3
 8025b5a:	10cc      	asrs	r4, r1, #3
 8025b5c:	10d3      	asrs	r3, r2, #3
 8025b5e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8025b62:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025b66:	fb13 f305 	smulbb	r3, r3, r5
 8025b6a:	fb14 f406 	smulbb	r4, r4, r6
 8025b6e:	00c9      	lsls	r1, r1, #3
 8025b70:	00d2      	lsls	r2, r2, #3
 8025b72:	441c      	add	r4, r3
 8025b74:	b2d2      	uxtb	r2, r2
 8025b76:	b2cb      	uxtb	r3, r1
 8025b78:	fb12 f205 	smulbb	r2, r2, r5
 8025b7c:	b280      	uxth	r0, r0
 8025b7e:	fb13 f306 	smulbb	r3, r3, r6
 8025b82:	4413      	add	r3, r2
 8025b84:	1c42      	adds	r2, r0, #1
 8025b86:	b29b      	uxth	r3, r3
 8025b88:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025b8c:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8025b90:	1c58      	adds	r0, r3, #1
 8025b92:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025b96:	b2a4      	uxth	r4, r4
 8025b98:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025b9c:	4310      	orrs	r0, r2
 8025b9e:	1c62      	adds	r2, r4, #1
 8025ba0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025ba4:	0964      	lsrs	r4, r4, #5
 8025ba6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025baa:	4320      	orrs	r0, r4
 8025bac:	bd70      	pop	{r4, r5, r6, pc}
	...

08025bb0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8025bb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025bb4:	b08f      	sub	sp, #60	; 0x3c
 8025bb6:	461c      	mov	r4, r3
 8025bb8:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8025bbc:	9004      	str	r0, [sp, #16]
 8025bbe:	460d      	mov	r5, r1
 8025bc0:	4616      	mov	r6, r2
 8025bc2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025bc4:	2f00      	cmp	r7, #0
 8025bc6:	f000 80f6 	beq.w	8025db6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8025bca:	6820      	ldr	r0, [r4, #0]
 8025bcc:	6861      	ldr	r1, [r4, #4]
 8025bce:	aa0a      	add	r2, sp, #40	; 0x28
 8025bd0:	c203      	stmia	r2!, {r0, r1}
 8025bd2:	6818      	ldr	r0, [r3, #0]
 8025bd4:	6859      	ldr	r1, [r3, #4]
 8025bd6:	aa0c      	add	r2, sp, #48	; 0x30
 8025bd8:	c203      	stmia	r2!, {r0, r1}
 8025bda:	a80a      	add	r0, sp, #40	; 0x28
 8025bdc:	f7ef fa9c 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025be0:	4621      	mov	r1, r4
 8025be2:	a80c      	add	r0, sp, #48	; 0x30
 8025be4:	f7ef fadc 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025be8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8025bec:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8025bf0:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8025bf4:	f002 0301 	and.w	r3, r2, #1
 8025bf8:	9306      	str	r3, [sp, #24]
 8025bfa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025bfe:	f003 0101 	and.w	r1, r3, #1
 8025c02:	9105      	str	r1, [sp, #20]
 8025c04:	9805      	ldr	r0, [sp, #20]
 8025c06:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8025c0a:	4403      	add	r3, r0
 8025c0c:	fb01 2303 	mla	r3, r1, r3, r2
 8025c10:	f04f 0802 	mov.w	r8, #2
 8025c14:	fb93 f3f8 	sdiv	r3, r3, r8
 8025c18:	441d      	add	r5, r3
 8025c1a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8025c1e:	441a      	add	r2, r3
 8025c20:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8025c24:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025c28:	4419      	add	r1, r3
 8025c2a:	4b64      	ldr	r3, [pc, #400]	; (8025dbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025c2c:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8025c30:	6818      	ldr	r0, [r3, #0]
 8025c32:	6803      	ldr	r3, [r0, #0]
 8025c34:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025c36:	4798      	blx	r3
 8025c38:	4a61      	ldr	r2, [pc, #388]	; (8025dc0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8025c3a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8025c3e:	8813      	ldrh	r3, [r2, #0]
 8025c40:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8025c44:	2fff      	cmp	r7, #255	; 0xff
 8025c46:	fb03 a404 	mla	r4, r3, r4, sl
 8025c4a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025c4e:	f106 0604 	add.w	r6, r6, #4
 8025c52:	4611      	mov	r1, r2
 8025c54:	fb03 fb0b 	mul.w	fp, r3, fp
 8025c58:	d06b      	beq.n	8025d32 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8025c5a:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8025c5e:	9303      	str	r3, [sp, #12]
 8025c60:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8025c64:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025c68:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8025c6c:	9b07      	ldr	r3, [sp, #28]
 8025c6e:	42a3      	cmp	r3, r4
 8025c70:	f240 809c 	bls.w	8025dac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025c74:	9b06      	ldr	r3, [sp, #24]
 8025c76:	2b00      	cmp	r3, #0
 8025c78:	d039      	beq.n	8025cee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8025c7a:	782b      	ldrb	r3, [r5, #0]
 8025c7c:	8822      	ldrh	r2, [r4, #0]
 8025c7e:	9804      	ldr	r0, [sp, #16]
 8025c80:	f003 030f 	and.w	r3, r3, #15
 8025c84:	f105 0801 	add.w	r8, r5, #1
 8025c88:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025c8c:	9b03      	ldr	r3, [sp, #12]
 8025c8e:	9300      	str	r3, [sp, #0]
 8025c90:	463b      	mov	r3, r7
 8025c92:	f7ff ff53 	bl	8025b3c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025c96:	f824 0b02 	strh.w	r0, [r4], #2
 8025c9a:	f109 3bff 	add.w	fp, r9, #4294967295
 8025c9e:	f1bb 0f01 	cmp.w	fp, #1
 8025ca2:	46a2      	mov	sl, r4
 8025ca4:	f104 0404 	add.w	r4, r4, #4
 8025ca8:	dd24      	ble.n	8025cf4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8025caa:	f898 3000 	ldrb.w	r3, [r8]
 8025cae:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8025cb2:	9804      	ldr	r0, [sp, #16]
 8025cb4:	091b      	lsrs	r3, r3, #4
 8025cb6:	f1ab 0b02 	sub.w	fp, fp, #2
 8025cba:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025cbe:	9b03      	ldr	r3, [sp, #12]
 8025cc0:	9300      	str	r3, [sp, #0]
 8025cc2:	463b      	mov	r3, r7
 8025cc4:	f7ff ff3a 	bl	8025b3c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025cc8:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025ccc:	f818 3b01 	ldrb.w	r3, [r8], #1
 8025cd0:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8025cd4:	9804      	ldr	r0, [sp, #16]
 8025cd6:	f003 030f 	and.w	r3, r3, #15
 8025cda:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025cde:	9b03      	ldr	r3, [sp, #12]
 8025ce0:	9300      	str	r3, [sp, #0]
 8025ce2:	463b      	mov	r3, r7
 8025ce4:	f7ff ff2a 	bl	8025b3c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025ce8:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025cec:	e7d7      	b.n	8025c9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8025cee:	46a8      	mov	r8, r5
 8025cf0:	46cb      	mov	fp, r9
 8025cf2:	e7d4      	b.n	8025c9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8025cf4:	d10e      	bne.n	8025d14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8025cf6:	f898 3000 	ldrb.w	r3, [r8]
 8025cfa:	f8ba 2000 	ldrh.w	r2, [sl]
 8025cfe:	9804      	ldr	r0, [sp, #16]
 8025d00:	091b      	lsrs	r3, r3, #4
 8025d02:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025d06:	9b03      	ldr	r3, [sp, #12]
 8025d08:	9300      	str	r3, [sp, #0]
 8025d0a:	463b      	mov	r3, r7
 8025d0c:	f7ff ff16 	bl	8025b3c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025d10:	f82a 0b02 	strh.w	r0, [sl], #2
 8025d14:	9b08      	ldr	r3, [sp, #32]
 8025d16:	9a05      	ldr	r2, [sp, #20]
 8025d18:	881c      	ldrh	r4, [r3, #0]
 8025d1a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025d1e:	eba4 0409 	sub.w	r4, r4, r9
 8025d22:	4413      	add	r3, r2
 8025d24:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8025d28:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025d2a:	fb93 f3f2 	sdiv	r3, r3, r2
 8025d2e:	441d      	add	r5, r3
 8025d30:	e79c      	b.n	8025c6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8025d32:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8025d36:	45a3      	cmp	fp, r4
 8025d38:	d938      	bls.n	8025dac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025d3a:	9b06      	ldr	r3, [sp, #24]
 8025d3c:	b1f3      	cbz	r3, 8025d7c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8025d3e:	782b      	ldrb	r3, [r5, #0]
 8025d40:	f003 030f 	and.w	r3, r3, #15
 8025d44:	1c6a      	adds	r2, r5, #1
 8025d46:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025d4a:	8023      	strh	r3, [r4, #0]
 8025d4c:	f109 30ff 	add.w	r0, r9, #4294967295
 8025d50:	3402      	adds	r4, #2
 8025d52:	2801      	cmp	r0, #1
 8025d54:	4623      	mov	r3, r4
 8025d56:	f104 0404 	add.w	r4, r4, #4
 8025d5a:	dd12      	ble.n	8025d82 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8025d5c:	7813      	ldrb	r3, [r2, #0]
 8025d5e:	091b      	lsrs	r3, r3, #4
 8025d60:	3802      	subs	r0, #2
 8025d62:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025d66:	f824 3c04 	strh.w	r3, [r4, #-4]
 8025d6a:	f812 3b01 	ldrb.w	r3, [r2], #1
 8025d6e:	f003 030f 	and.w	r3, r3, #15
 8025d72:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025d76:	f824 3c02 	strh.w	r3, [r4, #-2]
 8025d7a:	e7ea      	b.n	8025d52 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025d7c:	462a      	mov	r2, r5
 8025d7e:	4648      	mov	r0, r9
 8025d80:	e7e7      	b.n	8025d52 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025d82:	d106      	bne.n	8025d92 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8025d84:	7812      	ldrb	r2, [r2, #0]
 8025d86:	0912      	lsrs	r2, r2, #4
 8025d88:	3302      	adds	r3, #2
 8025d8a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8025d8e:	f823 2c02 	strh.w	r2, [r3, #-2]
 8025d92:	880c      	ldrh	r4, [r1, #0]
 8025d94:	9a05      	ldr	r2, [sp, #20]
 8025d96:	eba4 0409 	sub.w	r4, r4, r9
 8025d9a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8025d9e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025da2:	4413      	add	r3, r2
 8025da4:	fb93 f3f8 	sdiv	r3, r3, r8
 8025da8:	441d      	add	r5, r3
 8025daa:	e7c4      	b.n	8025d36 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8025dac:	4b03      	ldr	r3, [pc, #12]	; (8025dbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025dae:	6818      	ldr	r0, [r3, #0]
 8025db0:	6803      	ldr	r3, [r0, #0]
 8025db2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025db4:	4798      	blx	r3
 8025db6:	b00f      	add	sp, #60	; 0x3c
 8025db8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025dbc:	20012f2c 	.word	0x20012f2c
 8025dc0:	20012f26 	.word	0x20012f26

08025dc4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8025dc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025dc6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8025dca:	2dff      	cmp	r5, #255	; 0xff
 8025dcc:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8025dd0:	d10c      	bne.n	8025dec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8025dd2:	2bff      	cmp	r3, #255	; 0xff
 8025dd4:	d10a      	bne.n	8025dec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8025dd6:	4b25      	ldr	r3, [pc, #148]	; (8025e6c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8025dd8:	0948      	lsrs	r0, r1, #5
 8025dda:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025dde:	403b      	ands	r3, r7
 8025de0:	4318      	orrs	r0, r3
 8025de2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8025de6:	4308      	orrs	r0, r1
 8025de8:	b280      	uxth	r0, r0
 8025dea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025dec:	fb15 f503 	smulbb	r5, r5, r3
 8025df0:	b2ab      	uxth	r3, r5
 8025df2:	1c5d      	adds	r5, r3, #1
 8025df4:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8025df8:	1214      	asrs	r4, r2, #8
 8025dfa:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8025dfe:	fa1f fc85 	uxth.w	ip, r5
 8025e02:	10d6      	asrs	r6, r2, #3
 8025e04:	00d0      	lsls	r0, r2, #3
 8025e06:	43ed      	mvns	r5, r5
 8025e08:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025e0c:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8025e10:	b2eb      	uxtb	r3, r5
 8025e12:	b2c0      	uxtb	r0, r0
 8025e14:	fb12 f20c 	smulbb	r2, r2, ip
 8025e18:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025e1c:	fb04 2403 	mla	r4, r4, r3, r2
 8025e20:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8025e24:	b2c8      	uxtb	r0, r1
 8025e26:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8025e2a:	b2fd      	uxtb	r5, r7
 8025e2c:	fb10 f00c 	smulbb	r0, r0, ip
 8025e30:	b2a4      	uxth	r4, r4
 8025e32:	fb02 0003 	mla	r0, r2, r3, r0
 8025e36:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8025e3a:	fb15 f50c 	smulbb	r5, r5, ip
 8025e3e:	fb06 5503 	mla	r5, r6, r3, r5
 8025e42:	b283      	uxth	r3, r0
 8025e44:	1c60      	adds	r0, r4, #1
 8025e46:	b2ad      	uxth	r5, r5
 8025e48:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8025e4c:	1c58      	adds	r0, r3, #1
 8025e4e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025e52:	1c6b      	adds	r3, r5, #1
 8025e54:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025e58:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025e5c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025e60:	096d      	lsrs	r5, r5, #5
 8025e62:	4320      	orrs	r0, r4
 8025e64:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025e68:	4328      	orrs	r0, r5
 8025e6a:	e7be      	b.n	8025dea <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8025e6c:	00fff800 	.word	0x00fff800

08025e70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8025e70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025e74:	461c      	mov	r4, r3
 8025e76:	b08d      	sub	sp, #52	; 0x34
 8025e78:	460d      	mov	r5, r1
 8025e7a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025e7c:	6861      	ldr	r1, [r4, #4]
 8025e7e:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8025e82:	4680      	mov	r8, r0
 8025e84:	6820      	ldr	r0, [r4, #0]
 8025e86:	4616      	mov	r6, r2
 8025e88:	aa08      	add	r2, sp, #32
 8025e8a:	c203      	stmia	r2!, {r0, r1}
 8025e8c:	6818      	ldr	r0, [r3, #0]
 8025e8e:	6859      	ldr	r1, [r3, #4]
 8025e90:	aa0a      	add	r2, sp, #40	; 0x28
 8025e92:	c203      	stmia	r2!, {r0, r1}
 8025e94:	a808      	add	r0, sp, #32
 8025e96:	f7ef f93f 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025e9a:	4621      	mov	r1, r4
 8025e9c:	a80a      	add	r0, sp, #40	; 0x28
 8025e9e:	f7ef f97f 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025ea2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8025ea6:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8025eaa:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8025eae:	f002 0301 	and.w	r3, r2, #1
 8025eb2:	9303      	str	r3, [sp, #12]
 8025eb4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8025eb8:	f003 0101 	and.w	r1, r3, #1
 8025ebc:	9102      	str	r1, [sp, #8]
 8025ebe:	9802      	ldr	r0, [sp, #8]
 8025ec0:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8025ec4:	4403      	add	r3, r0
 8025ec6:	fb01 2303 	mla	r3, r1, r3, r2
 8025eca:	f04f 0a02 	mov.w	sl, #2
 8025ece:	fb93 f3fa 	sdiv	r3, r3, sl
 8025ed2:	441d      	add	r5, r3
 8025ed4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8025ed8:	441a      	add	r2, r3
 8025eda:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8025ede:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8025ee2:	4a3f      	ldr	r2, [pc, #252]	; (8025fe0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8025ee4:	9205      	str	r2, [sp, #20]
 8025ee6:	4419      	add	r1, r3
 8025ee8:	6810      	ldr	r0, [r2, #0]
 8025eea:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8025eee:	6803      	ldr	r3, [r0, #0]
 8025ef0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025ef2:	4798      	blx	r3
 8025ef4:	4b3b      	ldr	r3, [pc, #236]	; (8025fe4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8025ef6:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8025efa:	8819      	ldrh	r1, [r3, #0]
 8025efc:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8025f00:	fb01 c404 	mla	r4, r1, r4, ip
 8025f04:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025f08:	434f      	muls	r7, r1
 8025f0a:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8025f0e:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8025f12:	3604      	adds	r6, #4
 8025f14:	9204      	str	r2, [sp, #16]
 8025f16:	9b04      	ldr	r3, [sp, #16]
 8025f18:	429c      	cmp	r4, r3
 8025f1a:	d258      	bcs.n	8025fce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8025f1c:	9b03      	ldr	r3, [sp, #12]
 8025f1e:	2b00      	cmp	r3, #0
 8025f20:	d034      	beq.n	8025f8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8025f22:	782b      	ldrb	r3, [r5, #0]
 8025f24:	f003 030f 	and.w	r3, r3, #15
 8025f28:	1c6f      	adds	r7, r5, #1
 8025f2a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025f2e:	0e0b      	lsrs	r3, r1, #24
 8025f30:	d006      	beq.n	8025f40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8025f32:	8822      	ldrh	r2, [r4, #0]
 8025f34:	9300      	str	r3, [sp, #0]
 8025f36:	4640      	mov	r0, r8
 8025f38:	464b      	mov	r3, r9
 8025f3a:	f7ff ff43 	bl	8025dc4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025f3e:	8020      	strh	r0, [r4, #0]
 8025f40:	3402      	adds	r4, #2
 8025f42:	f10b 3aff 	add.w	sl, fp, #4294967295
 8025f46:	f1ba 0f01 	cmp.w	sl, #1
 8025f4a:	dd22      	ble.n	8025f92 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8025f4c:	783b      	ldrb	r3, [r7, #0]
 8025f4e:	091b      	lsrs	r3, r3, #4
 8025f50:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025f54:	0e0b      	lsrs	r3, r1, #24
 8025f56:	d006      	beq.n	8025f66 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8025f58:	8822      	ldrh	r2, [r4, #0]
 8025f5a:	9300      	str	r3, [sp, #0]
 8025f5c:	4640      	mov	r0, r8
 8025f5e:	464b      	mov	r3, r9
 8025f60:	f7ff ff30 	bl	8025dc4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025f64:	8020      	strh	r0, [r4, #0]
 8025f66:	f817 3b01 	ldrb.w	r3, [r7], #1
 8025f6a:	f003 030f 	and.w	r3, r3, #15
 8025f6e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025f72:	0e0b      	lsrs	r3, r1, #24
 8025f74:	d006      	beq.n	8025f84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8025f76:	8862      	ldrh	r2, [r4, #2]
 8025f78:	9300      	str	r3, [sp, #0]
 8025f7a:	4640      	mov	r0, r8
 8025f7c:	464b      	mov	r3, r9
 8025f7e:	f7ff ff21 	bl	8025dc4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025f82:	8060      	strh	r0, [r4, #2]
 8025f84:	3404      	adds	r4, #4
 8025f86:	f1aa 0a02 	sub.w	sl, sl, #2
 8025f8a:	e7dc      	b.n	8025f46 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025f8c:	462f      	mov	r7, r5
 8025f8e:	46da      	mov	sl, fp
 8025f90:	e7d9      	b.n	8025f46 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025f92:	d10d      	bne.n	8025fb0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8025f94:	783b      	ldrb	r3, [r7, #0]
 8025f96:	091b      	lsrs	r3, r3, #4
 8025f98:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025f9c:	0e0b      	lsrs	r3, r1, #24
 8025f9e:	d006      	beq.n	8025fae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8025fa0:	8822      	ldrh	r2, [r4, #0]
 8025fa2:	9300      	str	r3, [sp, #0]
 8025fa4:	4640      	mov	r0, r8
 8025fa6:	464b      	mov	r3, r9
 8025fa8:	f7ff ff0c 	bl	8025dc4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025fac:	8020      	strh	r0, [r4, #0]
 8025fae:	3402      	adds	r4, #2
 8025fb0:	9b06      	ldr	r3, [sp, #24]
 8025fb2:	9a02      	ldr	r2, [sp, #8]
 8025fb4:	881b      	ldrh	r3, [r3, #0]
 8025fb6:	eba3 030b 	sub.w	r3, r3, fp
 8025fba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8025fbe:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8025fc2:	4413      	add	r3, r2
 8025fc4:	9a07      	ldr	r2, [sp, #28]
 8025fc6:	fb93 f3f2 	sdiv	r3, r3, r2
 8025fca:	441d      	add	r5, r3
 8025fcc:	e7a3      	b.n	8025f16 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8025fce:	9b05      	ldr	r3, [sp, #20]
 8025fd0:	6818      	ldr	r0, [r3, #0]
 8025fd2:	6803      	ldr	r3, [r0, #0]
 8025fd4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025fd6:	4798      	blx	r3
 8025fd8:	b00d      	add	sp, #52	; 0x34
 8025fda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025fde:	bf00      	nop
 8025fe0:	20012f2c 	.word	0x20012f2c
 8025fe4:	20012f26 	.word	0x20012f26

08025fe8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8025fe8:	b570      	push	{r4, r5, r6, lr}
 8025fea:	1214      	asrs	r4, r2, #8
 8025fec:	788d      	ldrb	r5, [r1, #2]
 8025fee:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8025ff2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025ff6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025ffa:	fb15 f503 	smulbb	r5, r5, r3
 8025ffe:	fb04 5506 	mla	r5, r4, r6, r5
 8026002:	10d0      	asrs	r0, r2, #3
 8026004:	784c      	ldrb	r4, [r1, #1]
 8026006:	7809      	ldrb	r1, [r1, #0]
 8026008:	00d2      	lsls	r2, r2, #3
 802600a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802600e:	b2d2      	uxtb	r2, r2
 8026010:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8026014:	fb14 f403 	smulbb	r4, r4, r3
 8026018:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 802601c:	fb11 f303 	smulbb	r3, r1, r3
 8026020:	fb00 4406 	mla	r4, r0, r6, r4
 8026024:	fb02 3306 	mla	r3, r2, r6, r3
 8026028:	b2ad      	uxth	r5, r5
 802602a:	b29b      	uxth	r3, r3
 802602c:	b2a4      	uxth	r4, r4
 802602e:	1c68      	adds	r0, r5, #1
 8026030:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8026034:	1c62      	adds	r2, r4, #1
 8026036:	1c58      	adds	r0, r3, #1
 8026038:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802603c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8026040:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8026044:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026048:	0964      	lsrs	r4, r4, #5
 802604a:	4328      	orrs	r0, r5
 802604c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026050:	4320      	orrs	r0, r4
 8026052:	bd70      	pop	{r4, r5, r6, pc}

08026054 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8026054:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026058:	b08f      	sub	sp, #60	; 0x3c
 802605a:	461c      	mov	r4, r3
 802605c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8026060:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026062:	4682      	mov	sl, r0
 8026064:	460e      	mov	r6, r1
 8026066:	4615      	mov	r5, r2
 8026068:	2f00      	cmp	r7, #0
 802606a:	f000 8142 	beq.w	80262f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802606e:	6820      	ldr	r0, [r4, #0]
 8026070:	6861      	ldr	r1, [r4, #4]
 8026072:	aa0a      	add	r2, sp, #40	; 0x28
 8026074:	c203      	stmia	r2!, {r0, r1}
 8026076:	6818      	ldr	r0, [r3, #0]
 8026078:	6859      	ldr	r1, [r3, #4]
 802607a:	aa0c      	add	r2, sp, #48	; 0x30
 802607c:	c203      	stmia	r2!, {r0, r1}
 802607e:	a80a      	add	r0, sp, #40	; 0x28
 8026080:	f7ef f84a 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026084:	4621      	mov	r1, r4
 8026086:	a80c      	add	r0, sp, #48	; 0x30
 8026088:	f7ef f88a 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802608c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8026090:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8026094:	f002 0301 	and.w	r3, r2, #1
 8026098:	9306      	str	r3, [sp, #24]
 802609a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802609e:	f003 0101 	and.w	r1, r3, #1
 80260a2:	9105      	str	r1, [sp, #20]
 80260a4:	9805      	ldr	r0, [sp, #20]
 80260a6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80260aa:	4403      	add	r3, r0
 80260ac:	fb01 2303 	mla	r3, r1, r3, r2
 80260b0:	f04f 0802 	mov.w	r8, #2
 80260b4:	fb93 f3f8 	sdiv	r3, r3, r8
 80260b8:	441e      	add	r6, r3
 80260ba:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80260be:	441a      	add	r2, r3
 80260c0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80260c4:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80260c8:	4419      	add	r1, r3
 80260ca:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80260ce:	9303      	str	r3, [sp, #12]
 80260d0:	4b89      	ldr	r3, [pc, #548]	; (80262f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80260d2:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80260d6:	6818      	ldr	r0, [r3, #0]
 80260d8:	6803      	ldr	r3, [r0, #0]
 80260da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80260dc:	4798      	blx	r3
 80260de:	4a87      	ldr	r2, [pc, #540]	; (80262fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 80260e0:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80260e4:	8813      	ldrh	r3, [r2, #0]
 80260e6:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 80260ea:	2fff      	cmp	r7, #255	; 0xff
 80260ec:	fb03 9404 	mla	r4, r3, r4, r9
 80260f0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80260f4:	f105 0504 	add.w	r5, r5, #4
 80260f8:	4694      	mov	ip, r2
 80260fa:	fb03 f30b 	mul.w	r3, r3, fp
 80260fe:	d071      	beq.n	80261e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8026100:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026104:	43f9      	mvns	r1, r7
 8026106:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802610a:	b2c9      	uxtb	r1, r1
 802610c:	9104      	str	r1, [sp, #16]
 802610e:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8026112:	9b07      	ldr	r3, [sp, #28]
 8026114:	42a3      	cmp	r3, r4
 8026116:	f240 80e7 	bls.w	80262e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802611a:	9b06      	ldr	r3, [sp, #24]
 802611c:	2b00      	cmp	r3, #0
 802611e:	d03d      	beq.n	802619c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8026120:	7831      	ldrb	r1, [r6, #0]
 8026122:	9b04      	ldr	r3, [sp, #16]
 8026124:	8822      	ldrh	r2, [r4, #0]
 8026126:	9300      	str	r3, [sp, #0]
 8026128:	f001 010f 	and.w	r1, r1, #15
 802612c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026130:	463b      	mov	r3, r7
 8026132:	4429      	add	r1, r5
 8026134:	4650      	mov	r0, sl
 8026136:	f7ff ff57 	bl	8025fe8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802613a:	9b03      	ldr	r3, [sp, #12]
 802613c:	f824 0b02 	strh.w	r0, [r4], #2
 8026140:	f106 0801 	add.w	r8, r6, #1
 8026144:	f103 3bff 	add.w	fp, r3, #4294967295
 8026148:	f1bb 0f01 	cmp.w	fp, #1
 802614c:	46a1      	mov	r9, r4
 802614e:	f104 0404 	add.w	r4, r4, #4
 8026152:	dd27      	ble.n	80261a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8026154:	f898 1000 	ldrb.w	r1, [r8]
 8026158:	9b04      	ldr	r3, [sp, #16]
 802615a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802615e:	9300      	str	r3, [sp, #0]
 8026160:	0909      	lsrs	r1, r1, #4
 8026162:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026166:	463b      	mov	r3, r7
 8026168:	4429      	add	r1, r5
 802616a:	4650      	mov	r0, sl
 802616c:	f7ff ff3c 	bl	8025fe8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026170:	f824 0c04 	strh.w	r0, [r4, #-4]
 8026174:	f818 1b01 	ldrb.w	r1, [r8], #1
 8026178:	9b04      	ldr	r3, [sp, #16]
 802617a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802617e:	9300      	str	r3, [sp, #0]
 8026180:	f001 010f 	and.w	r1, r1, #15
 8026184:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026188:	463b      	mov	r3, r7
 802618a:	4429      	add	r1, r5
 802618c:	4650      	mov	r0, sl
 802618e:	f7ff ff2b 	bl	8025fe8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026192:	f1ab 0b02 	sub.w	fp, fp, #2
 8026196:	f824 0c02 	strh.w	r0, [r4, #-2]
 802619a:	e7d5      	b.n	8026148 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802619c:	46b0      	mov	r8, r6
 802619e:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80261a2:	e7d1      	b.n	8026148 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80261a4:	d10f      	bne.n	80261c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 80261a6:	f898 1000 	ldrb.w	r1, [r8]
 80261aa:	9b04      	ldr	r3, [sp, #16]
 80261ac:	f8b9 2000 	ldrh.w	r2, [r9]
 80261b0:	9300      	str	r3, [sp, #0]
 80261b2:	0909      	lsrs	r1, r1, #4
 80261b4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80261b8:	463b      	mov	r3, r7
 80261ba:	4429      	add	r1, r5
 80261bc:	4650      	mov	r0, sl
 80261be:	f7ff ff13 	bl	8025fe8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80261c2:	f829 0b02 	strh.w	r0, [r9], #2
 80261c6:	9b08      	ldr	r3, [sp, #32]
 80261c8:	9a05      	ldr	r2, [sp, #20]
 80261ca:	881c      	ldrh	r4, [r3, #0]
 80261cc:	9b03      	ldr	r3, [sp, #12]
 80261ce:	1ae4      	subs	r4, r4, r3
 80261d0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80261d4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80261d8:	4413      	add	r3, r2
 80261da:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80261dc:	fb93 f3f2 	sdiv	r3, r3, r2
 80261e0:	441e      	add	r6, r3
 80261e2:	e796      	b.n	8026112 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 80261e4:	4f46      	ldr	r7, [pc, #280]	; (8026300 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 80261e6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80261ea:	42a3      	cmp	r3, r4
 80261ec:	d97c      	bls.n	80262e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80261ee:	9a06      	ldr	r2, [sp, #24]
 80261f0:	2a00      	cmp	r2, #0
 80261f2:	d054      	beq.n	802629e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80261f4:	7830      	ldrb	r0, [r6, #0]
 80261f6:	f000 000f 	and.w	r0, r0, #15
 80261fa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80261fe:	eb05 0e00 	add.w	lr, r5, r0
 8026202:	5c28      	ldrb	r0, [r5, r0]
 8026204:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8026208:	f89e e001 	ldrb.w	lr, [lr, #1]
 802620c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026210:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8026214:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026218:	ea42 020e 	orr.w	r2, r2, lr
 802621c:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8026220:	f824 2b02 	strh.w	r2, [r4], #2
 8026224:	9a03      	ldr	r2, [sp, #12]
 8026226:	1c71      	adds	r1, r6, #1
 8026228:	f102 3eff 	add.w	lr, r2, #4294967295
 802622c:	f1be 0f01 	cmp.w	lr, #1
 8026230:	4620      	mov	r0, r4
 8026232:	f104 0404 	add.w	r4, r4, #4
 8026236:	dd36      	ble.n	80262a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8026238:	7808      	ldrb	r0, [r1, #0]
 802623a:	0900      	lsrs	r0, r0, #4
 802623c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026240:	eb05 0a00 	add.w	sl, r5, r0
 8026244:	f1ae 0e02 	sub.w	lr, lr, #2
 8026248:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802624c:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026250:	00d2      	lsls	r2, r2, #3
 8026252:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026256:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802625a:	ea49 0202 	orr.w	r2, r9, r2
 802625e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026262:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026266:	f824 2c04 	strh.w	r2, [r4, #-4]
 802626a:	f811 0b01 	ldrb.w	r0, [r1], #1
 802626e:	f000 000f 	and.w	r0, r0, #15
 8026272:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026276:	eb05 0a00 	add.w	sl, r5, r0
 802627a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802627e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026282:	00d2      	lsls	r2, r2, #3
 8026284:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026288:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802628c:	ea49 0202 	orr.w	r2, r9, r2
 8026290:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026294:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026298:	f824 2c02 	strh.w	r2, [r4, #-2]
 802629c:	e7c6      	b.n	802622c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802629e:	4631      	mov	r1, r6
 80262a0:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80262a4:	e7c2      	b.n	802622c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80262a6:	d111      	bne.n	80262cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 80262a8:	7809      	ldrb	r1, [r1, #0]
 80262aa:	0909      	lsrs	r1, r1, #4
 80262ac:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80262b0:	186c      	adds	r4, r5, r1
 80262b2:	5c69      	ldrb	r1, [r5, r1]
 80262b4:	78a2      	ldrb	r2, [r4, #2]
 80262b6:	7864      	ldrb	r4, [r4, #1]
 80262b8:	00e4      	lsls	r4, r4, #3
 80262ba:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80262be:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80262c2:	4322      	orrs	r2, r4
 80262c4:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80262c8:	f820 2b02 	strh.w	r2, [r0], #2
 80262cc:	9a03      	ldr	r2, [sp, #12]
 80262ce:	f8bc 4000 	ldrh.w	r4, [ip]
 80262d2:	9905      	ldr	r1, [sp, #20]
 80262d4:	1aa4      	subs	r4, r4, r2
 80262d6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80262da:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80262de:	440a      	add	r2, r1
 80262e0:	fb92 f2f8 	sdiv	r2, r2, r8
 80262e4:	4416      	add	r6, r2
 80262e6:	e780      	b.n	80261ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 80262e8:	4b03      	ldr	r3, [pc, #12]	; (80262f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80262ea:	6818      	ldr	r0, [r3, #0]
 80262ec:	6803      	ldr	r3, [r0, #0]
 80262ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80262f0:	4798      	blx	r3
 80262f2:	b00f      	add	sp, #60	; 0x3c
 80262f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80262f8:	20012f2c 	.word	0x20012f2c
 80262fc:	20012f26 	.word	0x20012f26
 8026300:	fffff800 	.word	0xfffff800

08026304 <CRC_Lock>:
 8026304:	b530      	push	{r4, r5, lr}
 8026306:	4a20      	ldr	r2, [pc, #128]	; (8026388 <CRC_Lock+0x84>)
 8026308:	6813      	ldr	r3, [r2, #0]
 802630a:	f023 0301 	bic.w	r3, r3, #1
 802630e:	6013      	str	r3, [r2, #0]
 8026310:	4b1e      	ldr	r3, [pc, #120]	; (802638c <CRC_Lock+0x88>)
 8026312:	681a      	ldr	r2, [r3, #0]
 8026314:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8026318:	4022      	ands	r2, r4
 802631a:	f24c 2540 	movw	r5, #49728	; 0xc240
 802631e:	42aa      	cmp	r2, r5
 8026320:	d005      	beq.n	802632e <CRC_Lock+0x2a>
 8026322:	681b      	ldr	r3, [r3, #0]
 8026324:	f24c 2270 	movw	r2, #49776	; 0xc270
 8026328:	4023      	ands	r3, r4
 802632a:	4293      	cmp	r3, r2
 802632c:	d124      	bne.n	8026378 <CRC_Lock+0x74>
 802632e:	4b18      	ldr	r3, [pc, #96]	; (8026390 <CRC_Lock+0x8c>)
 8026330:	681b      	ldr	r3, [r3, #0]
 8026332:	bb0b      	cbnz	r3, 8026378 <CRC_Lock+0x74>
 8026334:	4b17      	ldr	r3, [pc, #92]	; (8026394 <CRC_Lock+0x90>)
 8026336:	681a      	ldr	r2, [r3, #0]
 8026338:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802633c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8026340:	d00d      	beq.n	802635e <CRC_Lock+0x5a>
 8026342:	681a      	ldr	r2, [r3, #0]
 8026344:	f240 4483 	movw	r4, #1155	; 0x483
 8026348:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802634c:	42a2      	cmp	r2, r4
 802634e:	d006      	beq.n	802635e <CRC_Lock+0x5a>
 8026350:	681b      	ldr	r3, [r3, #0]
 8026352:	f240 4285 	movw	r2, #1157	; 0x485
 8026356:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802635a:	4293      	cmp	r3, r2
 802635c:	d10c      	bne.n	8026378 <CRC_Lock+0x74>
 802635e:	4b0e      	ldr	r3, [pc, #56]	; (8026398 <CRC_Lock+0x94>)
 8026360:	2201      	movs	r2, #1
 8026362:	601a      	str	r2, [r3, #0]
 8026364:	681a      	ldr	r2, [r3, #0]
 8026366:	2a00      	cmp	r2, #0
 8026368:	d1fc      	bne.n	8026364 <CRC_Lock+0x60>
 802636a:	4b0c      	ldr	r3, [pc, #48]	; (802639c <CRC_Lock+0x98>)
 802636c:	6018      	str	r0, [r3, #0]
 802636e:	6818      	ldr	r0, [r3, #0]
 8026370:	1a43      	subs	r3, r0, r1
 8026372:	4258      	negs	r0, r3
 8026374:	4158      	adcs	r0, r3
 8026376:	bd30      	pop	{r4, r5, pc}
 8026378:	4b09      	ldr	r3, [pc, #36]	; (80263a0 <CRC_Lock+0x9c>)
 802637a:	2201      	movs	r2, #1
 802637c:	601a      	str	r2, [r3, #0]
 802637e:	681a      	ldr	r2, [r3, #0]
 8026380:	2a00      	cmp	r2, #0
 8026382:	d1fc      	bne.n	802637e <CRC_Lock+0x7a>
 8026384:	4b07      	ldr	r3, [pc, #28]	; (80263a4 <CRC_Lock+0xa0>)
 8026386:	e7f1      	b.n	802636c <CRC_Lock+0x68>
 8026388:	e0002000 	.word	0xe0002000
 802638c:	e000ed00 	.word	0xe000ed00
 8026390:	e0042000 	.word	0xe0042000
 8026394:	5c001000 	.word	0x5c001000
 8026398:	58024c08 	.word	0x58024c08
 802639c:	58024c00 	.word	0x58024c00
 80263a0:	40023008 	.word	0x40023008
 80263a4:	40023000 	.word	0x40023000

080263a8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80263a8:	6101      	str	r1, [r0, #16]
 80263aa:	4770      	bx	lr

080263ac <_ZN8touchgfx8Gestures4tickEv>:
 80263ac:	7b83      	ldrb	r3, [r0, #14]
 80263ae:	b14b      	cbz	r3, 80263c4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 80263b0:	8903      	ldrh	r3, [r0, #8]
 80263b2:	3301      	adds	r3, #1
 80263b4:	b29b      	uxth	r3, r3
 80263b6:	2b07      	cmp	r3, #7
 80263b8:	8103      	strh	r3, [r0, #8]
 80263ba:	bf81      	itttt	hi
 80263bc:	2300      	movhi	r3, #0
 80263be:	8143      	strhhi	r3, [r0, #10]
 80263c0:	8183      	strhhi	r3, [r0, #12]
 80263c2:	7383      	strbhi	r3, [r0, #14]
 80263c4:	4770      	bx	lr
	...

080263c8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80263c8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80263cc:	4698      	mov	r8, r3
 80263ce:	8883      	ldrh	r3, [r0, #4]
 80263d0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80263d4:	eba8 0303 	sub.w	r3, r8, r3
 80263d8:	b21b      	sxth	r3, r3
 80263da:	4604      	mov	r4, r0
 80263dc:	2b00      	cmp	r3, #0
 80263de:	4617      	mov	r7, r2
 80263e0:	4a18      	ldr	r2, [pc, #96]	; (8026444 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80263e2:	9200      	str	r2, [sp, #0]
 80263e4:	bfb8      	it	lt
 80263e6:	425b      	neglt	r3, r3
 80263e8:	8aa2      	ldrh	r2, [r4, #20]
 80263ea:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80263ee:	f8ad 800a 	strh.w	r8, [sp, #10]
 80263f2:	b21b      	sxth	r3, r3
 80263f4:	460e      	mov	r6, r1
 80263f6:	4293      	cmp	r3, r2
 80263f8:	88c1      	ldrh	r1, [r0, #6]
 80263fa:	f8ad 1008 	strh.w	r1, [sp, #8]
 80263fe:	f04f 0000 	mov.w	r0, #0
 8026402:	f88d 0004 	strb.w	r0, [sp, #4]
 8026406:	f8ad 500c 	strh.w	r5, [sp, #12]
 802640a:	dc07      	bgt.n	802641c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 802640c:	1a69      	subs	r1, r5, r1
 802640e:	b209      	sxth	r1, r1
 8026410:	2900      	cmp	r1, #0
 8026412:	bfb8      	it	lt
 8026414:	4249      	neglt	r1, r1
 8026416:	b209      	sxth	r1, r1
 8026418:	428a      	cmp	r2, r1
 802641a:	da10      	bge.n	802643e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 802641c:	6920      	ldr	r0, [r4, #16]
 802641e:	6803      	ldr	r3, [r0, #0]
 8026420:	4669      	mov	r1, sp
 8026422:	685b      	ldr	r3, [r3, #4]
 8026424:	4798      	blx	r3
 8026426:	eba8 0606 	sub.w	r6, r8, r6
 802642a:	2300      	movs	r3, #0
 802642c:	1bef      	subs	r7, r5, r7
 802642e:	2001      	movs	r0, #1
 8026430:	8123      	strh	r3, [r4, #8]
 8026432:	8166      	strh	r6, [r4, #10]
 8026434:	81a7      	strh	r7, [r4, #12]
 8026436:	f8a4 8004 	strh.w	r8, [r4, #4]
 802643a:	80e5      	strh	r5, [r4, #6]
 802643c:	73a0      	strb	r0, [r4, #14]
 802643e:	b004      	add	sp, #16
 8026440:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026444:	0802ea78 	.word	0x0802ea78

08026448 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8026448:	b5f0      	push	{r4, r5, r6, r7, lr}
 802644a:	461e      	mov	r6, r3
 802644c:	1e4b      	subs	r3, r1, #1
 802644e:	2b01      	cmp	r3, #1
 8026450:	b085      	sub	sp, #20
 8026452:	4604      	mov	r4, r0
 8026454:	460d      	mov	r5, r1
 8026456:	4617      	mov	r7, r2
 8026458:	d84b      	bhi.n	80264f2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802645a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802645e:	1cd3      	adds	r3, r2, #3
 8026460:	b29b      	uxth	r3, r3
 8026462:	2b06      	cmp	r3, #6
 8026464:	d916      	bls.n	8026494 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8026466:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8026508 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802646a:	f8cd c004 	str.w	ip, [sp, #4]
 802646e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026472:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026476:	6900      	ldr	r0, [r0, #16]
 8026478:	f8ad 100c 	strh.w	r1, [sp, #12]
 802647c:	f04f 0c00 	mov.w	ip, #0
 8026480:	f88d c008 	strb.w	ip, [sp, #8]
 8026484:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026488:	f8ad 300e 	strh.w	r3, [sp, #14]
 802648c:	6803      	ldr	r3, [r0, #0]
 802648e:	a901      	add	r1, sp, #4
 8026490:	689b      	ldr	r3, [r3, #8]
 8026492:	4798      	blx	r3
 8026494:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026498:	1cd3      	adds	r3, r2, #3
 802649a:	b29b      	uxth	r3, r3
 802649c:	2b06      	cmp	r3, #6
 802649e:	d916      	bls.n	80264ce <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80264a0:	f8df c064 	ldr.w	ip, [pc, #100]	; 8026508 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80264a4:	f8cd c004 	str.w	ip, [sp, #4]
 80264a8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80264ac:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80264b0:	6920      	ldr	r0, [r4, #16]
 80264b2:	f8ad 100c 	strh.w	r1, [sp, #12]
 80264b6:	f04f 0c01 	mov.w	ip, #1
 80264ba:	f88d c008 	strb.w	ip, [sp, #8]
 80264be:	f8ad 200a 	strh.w	r2, [sp, #10]
 80264c2:	f8ad 300e 	strh.w	r3, [sp, #14]
 80264c6:	6803      	ldr	r3, [r0, #0]
 80264c8:	a901      	add	r1, sp, #4
 80264ca:	689b      	ldr	r3, [r3, #8]
 80264cc:	4798      	blx	r3
 80264ce:	4b0d      	ldr	r3, [pc, #52]	; (8026504 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80264d0:	9301      	str	r3, [sp, #4]
 80264d2:	6920      	ldr	r0, [r4, #16]
 80264d4:	f88d 5008 	strb.w	r5, [sp, #8]
 80264d8:	2300      	movs	r3, #0
 80264da:	f8ad 700a 	strh.w	r7, [sp, #10]
 80264de:	f8ad 600c 	strh.w	r6, [sp, #12]
 80264e2:	f8ad 300e 	strh.w	r3, [sp, #14]
 80264e6:	6803      	ldr	r3, [r0, #0]
 80264e8:	a901      	add	r1, sp, #4
 80264ea:	681b      	ldr	r3, [r3, #0]
 80264ec:	4798      	blx	r3
 80264ee:	b005      	add	sp, #20
 80264f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80264f2:	2900      	cmp	r1, #0
 80264f4:	d1eb      	bne.n	80264ce <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80264f6:	80a2      	strh	r2, [r4, #4]
 80264f8:	80c6      	strh	r6, [r0, #6]
 80264fa:	60a1      	str	r1, [r4, #8]
 80264fc:	81a1      	strh	r1, [r4, #12]
 80264fe:	73a1      	strb	r1, [r4, #14]
 8026500:	e7e5      	b.n	80264ce <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026502:	bf00      	nop
 8026504:	0802ea64 	.word	0x0802ea64
 8026508:	0802ea8c 	.word	0x0802ea8c

0802650c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 802650c:	10c9      	asrs	r1, r1, #3
 802650e:	2900      	cmp	r1, #0
 8026510:	bfb8      	it	lt
 8026512:	4249      	neglt	r1, r1
 8026514:	2801      	cmp	r0, #1
 8026516:	d108      	bne.n	802652a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026518:	f3c1 0008 	ubfx	r0, r1, #0, #9
 802651c:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8026520:	4601      	mov	r1, r0
 8026522:	dd02      	ble.n	802652a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026524:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8026528:	4770      	bx	lr
 802652a:	29ff      	cmp	r1, #255	; 0xff
 802652c:	bfa8      	it	ge
 802652e:	21ff      	movge	r1, #255	; 0xff
 8026530:	4608      	mov	r0, r1
 8026532:	4770      	bx	lr

08026534 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8026534:	b410      	push	{r4}
 8026536:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 802653a:	429c      	cmp	r4, r3
 802653c:	d803      	bhi.n	8026546 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802653e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026542:	f7ed b8ef 	b.w	8013724 <_ZN8touchgfx7Outline6lineToEii>
 8026546:	f85d 4b04 	ldr.w	r4, [sp], #4
 802654a:	4770      	bx	lr

0802654c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 802654c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026550:	b08b      	sub	sp, #44	; 0x2c
 8026552:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8026556:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 802655a:	9308      	str	r3, [sp, #32]
 802655c:	4606      	mov	r6, r0
 802655e:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8026562:	9309      	str	r3, [sp, #36]	; 0x24
 8026564:	468a      	mov	sl, r1
 8026566:	f7ed fa4a 	bl	80139fe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 802656a:	68b5      	ldr	r5, [r6, #8]
 802656c:	4604      	mov	r4, r0
 802656e:	2d00      	cmp	r5, #0
 8026570:	d044      	beq.n	80265fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026572:	6873      	ldr	r3, [r6, #4]
 8026574:	42ab      	cmp	r3, r5
 8026576:	d33d      	bcc.n	80265f4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8026578:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 802657c:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8026580:	eb02 0b03 	add.w	fp, r2, r3
 8026584:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8026588:	fb02 1203 	mla	r2, r2, r3, r1
 802658c:	9205      	str	r2, [sp, #20]
 802658e:	1e6a      	subs	r2, r5, #1
 8026590:	9204      	str	r2, [sp, #16]
 8026592:	f04f 0800 	mov.w	r8, #0
 8026596:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 802659a:	f9b4 7000 	ldrsh.w	r7, [r4]
 802659e:	454b      	cmp	r3, r9
 80265a0:	463a      	mov	r2, r7
 80265a2:	d008      	beq.n	80265b6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 80265a4:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 80265a8:	eb03 0b09 	add.w	fp, r3, r9
 80265ac:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 80265b0:	fb03 1309 	mla	r3, r3, r9, r1
 80265b4:	9305      	str	r3, [sp, #20]
 80265b6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80265ba:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80265be:	4498      	add	r8, r3
 80265c0:	9b04      	ldr	r3, [sp, #16]
 80265c2:	3b01      	subs	r3, #1
 80265c4:	9304      	str	r3, [sp, #16]
 80265c6:	9b04      	ldr	r3, [sp, #16]
 80265c8:	3301      	adds	r3, #1
 80265ca:	d015      	beq.n	80265f8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 80265cc:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 80265d0:	42bb      	cmp	r3, r7
 80265d2:	d117      	bne.n	8026604 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 80265d4:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 80265d8:	9b04      	ldr	r3, [sp, #16]
 80265da:	4548      	cmp	r0, r9
 80265dc:	f103 33ff 	add.w	r3, r3, #4294967295
 80265e0:	d17f      	bne.n	80266e2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 80265e2:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 80265e6:	4401      	add	r1, r0
 80265e8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80265ec:	4480      	add	r8, r0
 80265ee:	e7e9      	b.n	80265c4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 80265f0:	461f      	mov	r7, r3
 80265f2:	e044      	b.n	802667e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 80265f4:	2000      	movs	r0, #0
 80265f6:	e002      	b.n	80265fe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 80265f8:	2900      	cmp	r1, #0
 80265fa:	d16f      	bne.n	80266dc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 80265fc:	2001      	movs	r0, #1
 80265fe:	b00b      	add	sp, #44	; 0x2c
 8026600:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026604:	2900      	cmp	r1, #0
 8026606:	d030      	beq.n	802666a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8026608:	2f00      	cmp	r7, #0
 802660a:	db29      	blt.n	8026660 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802660c:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026610:	42bb      	cmp	r3, r7
 8026612:	dd25      	ble.n	8026660 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026614:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8026618:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 802661c:	f7ff ff76 	bl	802650c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026620:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026622:	fb10 f003 	smulbb	r0, r0, r3
 8026626:	b280      	uxth	r0, r0
 8026628:	1c41      	adds	r1, r0, #1
 802662a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802662e:	1209      	asrs	r1, r1, #8
 8026630:	f011 0fff 	tst.w	r1, #255	; 0xff
 8026634:	d014      	beq.n	8026660 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026636:	9808      	ldr	r0, [sp, #32]
 8026638:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 802663a:	b2c9      	uxtb	r1, r1
 802663c:	b2ba      	uxth	r2, r7
 802663e:	9102      	str	r1, [sp, #8]
 8026640:	2101      	movs	r1, #1
 8026642:	4413      	add	r3, r2
 8026644:	9101      	str	r1, [sp, #4]
 8026646:	4402      	add	r2, r0
 8026648:	fa0f f18b 	sxth.w	r1, fp
 802664c:	f8da 0000 	ldr.w	r0, [sl]
 8026650:	9100      	str	r1, [sp, #0]
 8026652:	6941      	ldr	r1, [r0, #20]
 8026654:	b21b      	sxth	r3, r3
 8026656:	460d      	mov	r5, r1
 8026658:	b212      	sxth	r2, r2
 802665a:	9905      	ldr	r1, [sp, #20]
 802665c:	4650      	mov	r0, sl
 802665e:	47a8      	blx	r5
 8026660:	9b04      	ldr	r3, [sp, #16]
 8026662:	3301      	adds	r3, #1
 8026664:	f107 0201 	add.w	r2, r7, #1
 8026668:	d0c8      	beq.n	80265fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802666a:	f9b4 7000 	ldrsh.w	r7, [r4]
 802666e:	1abb      	subs	r3, r7, r2
 8026670:	2b00      	cmp	r3, #0
 8026672:	dd31      	ble.n	80266d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026674:	2a00      	cmp	r2, #0
 8026676:	dabb      	bge.n	80265f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8026678:	2f00      	cmp	r7, #0
 802667a:	dd2d      	ble.n	80266d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802667c:	2200      	movs	r2, #0
 802667e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026682:	19d1      	adds	r1, r2, r7
 8026684:	4299      	cmp	r1, r3
 8026686:	db02      	blt.n	802668e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8026688:	1a9f      	subs	r7, r3, r2
 802668a:	2f00      	cmp	r7, #0
 802668c:	dd24      	ble.n	80266d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802668e:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8026692:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026696:	f7ff ff39 	bl	802650c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802669a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802669c:	fb10 f003 	smulbb	r0, r0, r3
 80266a0:	b280      	uxth	r0, r0
 80266a2:	1c41      	adds	r1, r0, #1
 80266a4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80266a8:	1209      	asrs	r1, r1, #8
 80266aa:	f011 0fff 	tst.w	r1, #255	; 0xff
 80266ae:	d013      	beq.n	80266d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80266b0:	9808      	ldr	r0, [sp, #32]
 80266b2:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80266b4:	b292      	uxth	r2, r2
 80266b6:	b2c9      	uxtb	r1, r1
 80266b8:	4413      	add	r3, r2
 80266ba:	9102      	str	r1, [sp, #8]
 80266bc:	4402      	add	r2, r0
 80266be:	b23f      	sxth	r7, r7
 80266c0:	f8da 0000 	ldr.w	r0, [sl]
 80266c4:	9701      	str	r7, [sp, #4]
 80266c6:	fa0f f18b 	sxth.w	r1, fp
 80266ca:	9100      	str	r1, [sp, #0]
 80266cc:	6947      	ldr	r7, [r0, #20]
 80266ce:	9905      	ldr	r1, [sp, #20]
 80266d0:	b21b      	sxth	r3, r3
 80266d2:	b212      	sxth	r2, r2
 80266d4:	4650      	mov	r0, sl
 80266d6:	47b8      	blx	r7
 80266d8:	464b      	mov	r3, r9
 80266da:	e75c      	b.n	8026596 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 80266dc:	2f00      	cmp	r7, #0
 80266de:	da95      	bge.n	802660c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 80266e0:	e78c      	b.n	80265fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80266e2:	2900      	cmp	r1, #0
 80266e4:	d0f8      	beq.n	80266d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80266e6:	e78f      	b.n	8026608 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

080266e8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 80266e8:	4b4b      	ldr	r3, [pc, #300]	; (8026818 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 80266ea:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80266ee:	2500      	movs	r5, #0
 80266f0:	f100 0620 	add.w	r6, r0, #32
 80266f4:	4604      	mov	r4, r0
 80266f6:	e9c0 3100 	strd	r3, r1, [r0]
 80266fa:	e9c0 5502 	strd	r5, r5, [r0, #8]
 80266fe:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8026702:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8026706:	f100 0718 	add.w	r7, r0, #24
 802670a:	4630      	mov	r0, r6
 802670c:	4690      	mov	r8, r2
 802670e:	f7ec fb41 	bl	8012d94 <_ZN8touchgfx7OutlineC1Ev>
 8026712:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8026716:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 802671a:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 802671e:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8026722:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8026726:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 802672a:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 802672e:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8026732:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8026736:	f9b8 2000 	ldrsh.w	r2, [r8]
 802673a:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 802673e:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8026742:	9500      	str	r5, [sp, #0]
 8026744:	4410      	add	r0, r2
 8026746:	b280      	uxth	r0, r0
 8026748:	fa0f fa80 	sxth.w	sl, r0
 802674c:	45aa      	cmp	sl, r5
 802674e:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8026752:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8026756:	dd5c      	ble.n	8026812 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026758:	4591      	cmp	r9, r2
 802675a:	dd5a      	ble.n	8026812 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802675c:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8026760:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8026764:	440b      	add	r3, r1
 8026766:	b29b      	uxth	r3, r3
 8026768:	b21d      	sxth	r5, r3
 802676a:	2d00      	cmp	r5, #0
 802676c:	dd51      	ble.n	8026812 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802676e:	458e      	cmp	lr, r1
 8026770:	dd4f      	ble.n	8026812 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026772:	45d1      	cmp	r9, sl
 8026774:	bfb8      	it	lt
 8026776:	fa1f f089 	uxthlt.w	r0, r9
 802677a:	45ae      	cmp	lr, r5
 802677c:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8026780:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8026784:	bfb8      	it	lt
 8026786:	fa1f f38e 	uxthlt.w	r3, lr
 802678a:	1a80      	subs	r0, r0, r2
 802678c:	1a5b      	subs	r3, r3, r1
 802678e:	f8ad 0004 	strh.w	r0, [sp, #4]
 8026792:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026796:	f8ad 2000 	strh.w	r2, [sp]
 802679a:	f8ad 1002 	strh.w	r1, [sp, #2]
 802679e:	466d      	mov	r5, sp
 80267a0:	e895 0003 	ldmia.w	r5, {r0, r1}
 80267a4:	e887 0003 	stmia.w	r7, {r0, r1}
 80267a8:	f8dc 3000 	ldr.w	r3, [ip]
 80267ac:	4660      	mov	r0, ip
 80267ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80267b0:	4639      	mov	r1, r7
 80267b2:	4798      	blx	r3
 80267b4:	6861      	ldr	r1, [r4, #4]
 80267b6:	4628      	mov	r0, r5
 80267b8:	3104      	adds	r1, #4
 80267ba:	f7ee fcf1 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80267be:	4638      	mov	r0, r7
 80267c0:	f7ee fcaa 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80267c4:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80267c8:	f8bd 2000 	ldrh.w	r2, [sp]
 80267cc:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 80267d0:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 80267d4:	4630      	mov	r0, r6
 80267d6:	f7ec fac1 	bl	8012d5c <_ZN8touchgfx7Outline5resetEv>
 80267da:	f9bd 3000 	ldrsh.w	r3, [sp]
 80267de:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 80267e2:	015b      	lsls	r3, r3, #5
 80267e4:	60a3      	str	r3, [r4, #8]
 80267e6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80267ea:	015b      	lsls	r3, r3, #5
 80267ec:	60e3      	str	r3, [r4, #12]
 80267ee:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80267f2:	015b      	lsls	r3, r3, #5
 80267f4:	6123      	str	r3, [r4, #16]
 80267f6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80267fa:	015b      	lsls	r3, r3, #5
 80267fc:	6163      	str	r3, [r4, #20]
 80267fe:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8026802:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8026806:	4620      	mov	r0, r4
 8026808:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 802680c:	b002      	add	sp, #8
 802680e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026812:	2300      	movs	r3, #0
 8026814:	9301      	str	r3, [sp, #4]
 8026816:	e7c2      	b.n	802679e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8026818:	0802edb0 	.word	0x0802edb0

0802681c <_ZN8touchgfx6Canvas5closeEv>:
 802681c:	b538      	push	{r3, r4, r5, lr}
 802681e:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8026822:	4604      	mov	r4, r0
 8026824:	b193      	cbz	r3, 802684c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8026826:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 802682a:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 802682e:	4213      	tst	r3, r2
 8026830:	d10c      	bne.n	802684c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8026832:	f100 0520 	add.w	r5, r0, #32
 8026836:	b123      	cbz	r3, 8026842 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8026838:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 802683c:	4628      	mov	r0, r5
 802683e:	f7ff fe79 	bl	8026534 <_ZN8touchgfx10Rasterizer6lineToEii>
 8026842:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8026846:	4628      	mov	r0, r5
 8026848:	f7ff fe74 	bl	8026534 <_ZN8touchgfx10Rasterizer6lineToEii>
 802684c:	2300      	movs	r3, #0
 802684e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8026852:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8026856:	4298      	cmp	r0, r3
 8026858:	bf34      	ite	cc
 802685a:	2000      	movcc	r0, #0
 802685c:	2001      	movcs	r0, #1
 802685e:	bd38      	pop	{r3, r4, r5, pc}

08026860 <_ZN8touchgfx6Canvas6renderEh>:
 8026860:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8026864:	4604      	mov	r4, r0
 8026866:	6840      	ldr	r0, [r0, #4]
 8026868:	6803      	ldr	r3, [r0, #0]
 802686a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 802686c:	460d      	mov	r5, r1
 802686e:	4798      	blx	r3
 8026870:	fb10 f105 	smulbb	r1, r0, r5
 8026874:	b289      	uxth	r1, r1
 8026876:	1c4d      	adds	r5, r1, #1
 8026878:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802687c:	122d      	asrs	r5, r5, #8
 802687e:	f000 809d 	beq.w	80269bc <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8026882:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8026886:	2b00      	cmp	r3, #0
 8026888:	f000 8098 	beq.w	80269bc <_ZN8touchgfx6Canvas6renderEh+0x15c>
 802688c:	4620      	mov	r0, r4
 802688e:	f7ff ffc5 	bl	802681c <_ZN8touchgfx6Canvas5closeEv>
 8026892:	4607      	mov	r7, r0
 8026894:	2800      	cmp	r0, #0
 8026896:	d048      	beq.n	802692a <_ZN8touchgfx6Canvas6renderEh+0xca>
 8026898:	6863      	ldr	r3, [r4, #4]
 802689a:	4e49      	ldr	r6, [pc, #292]	; (80269c0 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 802689c:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802689e:	6837      	ldr	r7, [r6, #0]
 80268a0:	6803      	ldr	r3, [r0, #0]
 80268a2:	689b      	ldr	r3, [r3, #8]
 80268a4:	4798      	blx	r3
 80268a6:	4601      	mov	r1, r0
 80268a8:	4638      	mov	r0, r7
 80268aa:	f7ea fbc5 	bl	8011038 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80268ae:	4607      	mov	r7, r0
 80268b0:	f7dd f896 	bl	80039e0 <_ZN8touchgfx3HAL3lcdEv>
 80268b4:	6803      	ldr	r3, [r0, #0]
 80268b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80268b8:	4798      	blx	r3
 80268ba:	4680      	mov	r8, r0
 80268bc:	f7dd f890 	bl	80039e0 <_ZN8touchgfx3HAL3lcdEv>
 80268c0:	6803      	ldr	r3, [r0, #0]
 80268c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80268c4:	4798      	blx	r3
 80268c6:	280b      	cmp	r0, #11
 80268c8:	d85d      	bhi.n	8026986 <_ZN8touchgfx6Canvas6renderEh+0x126>
 80268ca:	e8df f000 	tbb	[pc, r0]
 80268ce:	5e53      	.short	0x5e53
 80268d0:	325c066e 	.word	0x325c066e
 80268d4:	67676742 	.word	0x67676742
 80268d8:	6767      	.short	0x6767
 80268da:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80268de:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80268e2:	2208      	movs	r2, #8
 80268e4:	fb91 f2f2 	sdiv	r2, r1, r2
 80268e8:	fb08 2303 	mla	r3, r8, r3, r2
 80268ec:	441f      	add	r7, r3
 80268ee:	424b      	negs	r3, r1
 80268f0:	f003 0307 	and.w	r3, r3, #7
 80268f4:	f001 0107 	and.w	r1, r1, #7
 80268f8:	bf58      	it	pl
 80268fa:	4259      	negpl	r1, r3
 80268fc:	b2c9      	uxtb	r1, r1
 80268fe:	b2ed      	uxtb	r5, r5
 8026900:	e9cd 1500 	strd	r1, r5, [sp]
 8026904:	6860      	ldr	r0, [r4, #4]
 8026906:	463a      	mov	r2, r7
 8026908:	6a81      	ldr	r1, [r0, #40]	; 0x28
 802690a:	fa0f f388 	sxth.w	r3, r8
 802690e:	f104 0020 	add.w	r0, r4, #32
 8026912:	f7ff fe1b 	bl	802654c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8026916:	6863      	ldr	r3, [r4, #4]
 8026918:	4607      	mov	r7, r0
 802691a:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802691c:	6803      	ldr	r3, [r0, #0]
 802691e:	691b      	ldr	r3, [r3, #16]
 8026920:	4798      	blx	r3
 8026922:	6830      	ldr	r0, [r6, #0]
 8026924:	6803      	ldr	r3, [r0, #0]
 8026926:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026928:	4798      	blx	r3
 802692a:	4638      	mov	r0, r7
 802692c:	b002      	add	sp, #8
 802692e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026932:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026936:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802693a:	2204      	movs	r2, #4
 802693c:	fb91 f2f2 	sdiv	r2, r1, r2
 8026940:	fb08 2303 	mla	r3, r8, r3, r2
 8026944:	441f      	add	r7, r3
 8026946:	424b      	negs	r3, r1
 8026948:	f003 0303 	and.w	r3, r3, #3
 802694c:	f001 0103 	and.w	r1, r1, #3
 8026950:	e7d2      	b.n	80268f8 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8026952:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8026956:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802695a:	2900      	cmp	r1, #0
 802695c:	f04f 0202 	mov.w	r2, #2
 8026960:	fb91 f2f2 	sdiv	r2, r1, r2
 8026964:	f001 0101 	and.w	r1, r1, #1
 8026968:	fb08 2303 	mla	r3, r8, r3, r2
 802696c:	441f      	add	r7, r3
 802696e:	bfb8      	it	lt
 8026970:	4249      	neglt	r1, r1
 8026972:	e7c3      	b.n	80268fc <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8026974:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026978:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802697c:	fb08 f303 	mul.w	r3, r8, r3
 8026980:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8026984:	441f      	add	r7, r3
 8026986:	2100      	movs	r1, #0
 8026988:	e7b9      	b.n	80268fe <_ZN8touchgfx6Canvas6renderEh+0x9e>
 802698a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802698e:	fb08 f203 	mul.w	r2, r8, r3
 8026992:	8b23      	ldrh	r3, [r4, #24]
 8026994:	2103      	movs	r1, #3
 8026996:	fb13 2301 	smlabb	r3, r3, r1, r2
 802699a:	e7f3      	b.n	8026984 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802699c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80269a0:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80269a4:	fb08 2303 	mla	r3, r8, r3, r2
 80269a8:	e7ec      	b.n	8026984 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80269aa:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80269ae:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80269b2:	fb08 f303 	mul.w	r3, r8, r3
 80269b6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80269ba:	e7e3      	b.n	8026984 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80269bc:	2701      	movs	r7, #1
 80269be:	e7b4      	b.n	802692a <_ZN8touchgfx6Canvas6renderEh+0xca>
 80269c0:	20012f2c 	.word	0x20012f2c

080269c4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80269c4:	b510      	push	{r4, lr}
 80269c6:	4b07      	ldr	r3, [pc, #28]	; (80269e4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 80269c8:	781b      	ldrb	r3, [r3, #0]
 80269ca:	2b01      	cmp	r3, #1
 80269cc:	d108      	bne.n	80269e0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 80269ce:	6843      	ldr	r3, [r0, #4]
 80269d0:	6814      	ldr	r4, [r2, #0]
 80269d2:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80269d6:	680b      	ldr	r3, [r1, #0]
 80269d8:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80269dc:	6013      	str	r3, [r2, #0]
 80269de:	600c      	str	r4, [r1, #0]
 80269e0:	bd10      	pop	{r4, pc}
 80269e2:	bf00      	nop
 80269e4:	20012f24 	.word	0x20012f24

080269e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80269e8:	b513      	push	{r0, r1, r4, lr}
 80269ea:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80269ee:	4604      	mov	r4, r0
 80269f0:	e9cd 2100 	strd	r2, r1, [sp]
 80269f4:	b9a3      	cbnz	r3, 8026a20 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 80269f6:	466a      	mov	r2, sp
 80269f8:	a901      	add	r1, sp, #4
 80269fa:	4620      	mov	r0, r4
 80269fc:	f7ff ffe2 	bl	80269c4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8026a00:	68a3      	ldr	r3, [r4, #8]
 8026a02:	9901      	ldr	r1, [sp, #4]
 8026a04:	9a00      	ldr	r2, [sp, #0]
 8026a06:	1ac9      	subs	r1, r1, r3
 8026a08:	68e3      	ldr	r3, [r4, #12]
 8026a0a:	9101      	str	r1, [sp, #4]
 8026a0c:	1ad2      	subs	r2, r2, r3
 8026a0e:	2a00      	cmp	r2, #0
 8026a10:	9200      	str	r2, [sp, #0]
 8026a12:	da0b      	bge.n	8026a2c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8026a14:	2301      	movs	r3, #1
 8026a16:	2900      	cmp	r1, #0
 8026a18:	da0e      	bge.n	8026a38 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8026a1a:	f043 0304 	orr.w	r3, r3, #4
 8026a1e:	e013      	b.n	8026a48 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8026a20:	f7ff fefc 	bl	802681c <_ZN8touchgfx6Canvas5closeEv>
 8026a24:	2800      	cmp	r0, #0
 8026a26:	d1e6      	bne.n	80269f6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8026a28:	b002      	add	sp, #8
 8026a2a:	bd10      	pop	{r4, pc}
 8026a2c:	6963      	ldr	r3, [r4, #20]
 8026a2e:	429a      	cmp	r2, r3
 8026a30:	bfac      	ite	ge
 8026a32:	2302      	movge	r3, #2
 8026a34:	2300      	movlt	r3, #0
 8026a36:	e7ee      	b.n	8026a16 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8026a38:	6920      	ldr	r0, [r4, #16]
 8026a3a:	4281      	cmp	r1, r0
 8026a3c:	bfac      	ite	ge
 8026a3e:	2008      	movge	r0, #8
 8026a40:	2000      	movlt	r0, #0
 8026a42:	4318      	orrs	r0, r3
 8026a44:	b2c3      	uxtb	r3, r0
 8026a46:	b158      	cbz	r0, 8026a60 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8026a48:	2200      	movs	r2, #0
 8026a4a:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8026a4e:	9901      	ldr	r1, [sp, #4]
 8026a50:	9a00      	ldr	r2, [sp, #0]
 8026a52:	66a1      	str	r1, [r4, #104]	; 0x68
 8026a54:	66e2      	str	r2, [r4, #108]	; 0x6c
 8026a56:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8026a5a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8026a5e:	e7e3      	b.n	8026a28 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8026a60:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8026a64:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8026a68:	4298      	cmp	r0, r3
 8026a6a:	d803      	bhi.n	8026a74 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8026a6c:	f104 0020 	add.w	r0, r4, #32
 8026a70:	f7ec fe72 	bl	8013758 <_ZN8touchgfx7Outline6moveToEii>
 8026a74:	2301      	movs	r3, #1
 8026a76:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8026a7a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8026a7e:	2300      	movs	r3, #0
 8026a80:	e7e5      	b.n	8026a4e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08026a82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8026a82:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8026a84:	ab02      	add	r3, sp, #8
 8026a86:	4604      	mov	r4, r0
 8026a88:	f843 2d08 	str.w	r2, [r3, #-8]!
 8026a8c:	9101      	str	r1, [sp, #4]
 8026a8e:	461a      	mov	r2, r3
 8026a90:	a901      	add	r1, sp, #4
 8026a92:	f7ff ff97 	bl	80269c4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8026a96:	68a3      	ldr	r3, [r4, #8]
 8026a98:	9901      	ldr	r1, [sp, #4]
 8026a9a:	9a00      	ldr	r2, [sp, #0]
 8026a9c:	1ac9      	subs	r1, r1, r3
 8026a9e:	68e3      	ldr	r3, [r4, #12]
 8026aa0:	9101      	str	r1, [sp, #4]
 8026aa2:	1ad2      	subs	r2, r2, r3
 8026aa4:	2a00      	cmp	r2, #0
 8026aa6:	9200      	str	r2, [sp, #0]
 8026aa8:	db1c      	blt.n	8026ae4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8026aaa:	6963      	ldr	r3, [r4, #20]
 8026aac:	429a      	cmp	r2, r3
 8026aae:	bfac      	ite	ge
 8026ab0:	2002      	movge	r0, #2
 8026ab2:	2000      	movlt	r0, #0
 8026ab4:	2900      	cmp	r1, #0
 8026ab6:	db17      	blt.n	8026ae8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8026ab8:	6923      	ldr	r3, [r4, #16]
 8026aba:	4299      	cmp	r1, r3
 8026abc:	bfac      	ite	ge
 8026abe:	2308      	movge	r3, #8
 8026ac0:	2300      	movlt	r3, #0
 8026ac2:	4303      	orrs	r3, r0
 8026ac4:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8026ac8:	b2dd      	uxtb	r5, r3
 8026aca:	b978      	cbnz	r0, 8026aec <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8026acc:	f104 0020 	add.w	r0, r4, #32
 8026ad0:	f7ff fd30 	bl	8026534 <_ZN8touchgfx10Rasterizer6lineToEii>
 8026ad4:	9b01      	ldr	r3, [sp, #4]
 8026ad6:	65e3      	str	r3, [r4, #92]	; 0x5c
 8026ad8:	9b00      	ldr	r3, [sp, #0]
 8026ada:	6623      	str	r3, [r4, #96]	; 0x60
 8026adc:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8026ae0:	b002      	add	sp, #8
 8026ae2:	bd70      	pop	{r4, r5, r6, pc}
 8026ae4:	2001      	movs	r0, #1
 8026ae6:	e7e5      	b.n	8026ab4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8026ae8:	2304      	movs	r3, #4
 8026aea:	e7ea      	b.n	8026ac2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8026aec:	b113      	cbz	r3, 8026af4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8026aee:	ea10 0305 	ands.w	r3, r0, r5
 8026af2:	d11c      	bne.n	8026b2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8026af4:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8026af8:	f104 0620 	add.w	r6, r4, #32
 8026afc:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8026b00:	b98b      	cbnz	r3, 8026b26 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8026b02:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8026b06:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8026b0a:	4298      	cmp	r0, r3
 8026b0c:	d802      	bhi.n	8026b14 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8026b0e:	4630      	mov	r0, r6
 8026b10:	f7ec fe22 	bl	8013758 <_ZN8touchgfx7Outline6moveToEii>
 8026b14:	2301      	movs	r3, #1
 8026b16:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8026b1a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8026b1e:	e9dd 2100 	ldrd	r2, r1, [sp]
 8026b22:	4630      	mov	r0, r6
 8026b24:	e7d4      	b.n	8026ad0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8026b26:	4630      	mov	r0, r6
 8026b28:	f7ff fd04 	bl	8026534 <_ZN8touchgfx10Rasterizer6lineToEii>
 8026b2c:	e7f7      	b.n	8026b1e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8026b2e:	461d      	mov	r5, r3
 8026b30:	e7d0      	b.n	8026ad4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08026b34 <_ZN8touchgfx6CanvasD1Ev>:
 8026b34:	b510      	push	{r4, lr}
 8026b36:	4b04      	ldr	r3, [pc, #16]	; (8026b48 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8026b38:	4604      	mov	r4, r0
 8026b3a:	f840 3b20 	str.w	r3, [r0], #32
 8026b3e:	f7ec f905 	bl	8012d4c <_ZN8touchgfx7OutlineD1Ev>
 8026b42:	4620      	mov	r0, r4
 8026b44:	bd10      	pop	{r4, pc}
 8026b46:	bf00      	nop
 8026b48:	0802edb0 	.word	0x0802edb0

08026b4c <_ZN8touchgfx6CanvasD0Ev>:
 8026b4c:	b510      	push	{r4, lr}
 8026b4e:	4604      	mov	r4, r0
 8026b50:	f7ff fff0 	bl	8026b34 <_ZN8touchgfx6CanvasD1Ev>
 8026b54:	4620      	mov	r0, r4
 8026b56:	2170      	movs	r1, #112	; 0x70
 8026b58:	f002 fd09 	bl	802956e <_ZdlPvj>
 8026b5c:	4620      	mov	r0, r4
 8026b5e:	bd10      	pop	{r4, pc}

08026b60 <_ZN8touchgfx6CircleD1Ev>:
 8026b60:	4770      	bx	lr

08026b62 <_ZN8touchgfx6CircleD0Ev>:
 8026b62:	b510      	push	{r4, lr}
 8026b64:	2148      	movs	r1, #72	; 0x48
 8026b66:	4604      	mov	r4, r0
 8026b68:	f002 fd01 	bl	802956e <_ZdlPvj>
 8026b6c:	4620      	mov	r0, r4
 8026b6e:	bd10      	pop	{r4, pc}

08026b70 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8026b70:	b508      	push	{r3, lr}
 8026b72:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8026b76:	f7ea fdb5 	bl	80116e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026b7a:	bd08      	pop	{r3, pc}

08026b7c <_ZN8touchgfx6CircleC1Ev>:
 8026b7c:	b510      	push	{r4, lr}
 8026b7e:	4604      	mov	r4, r0
 8026b80:	f7ea fc4c 	bl	801141c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8026b84:	4b08      	ldr	r3, [pc, #32]	; (8026ba8 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8026b86:	6023      	str	r3, [r4, #0]
 8026b88:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8026b8c:	2300      	movs	r3, #0
 8026b8e:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8026b92:	f24b 4205 	movw	r2, #46085	; 0xb405
 8026b96:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8026b9a:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8026b9e:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8026ba2:	60a3      	str	r3, [r4, #8]
 8026ba4:	4620      	mov	r0, r4
 8026ba6:	bd10      	pop	{r4, pc}
 8026ba8:	0802edc4 	.word	0x0802edc4

08026bac <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8026bac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026bb0:	428a      	cmp	r2, r1
 8026bb2:	4680      	mov	r8, r0
 8026bb4:	4610      	mov	r0, r2
 8026bb6:	4699      	mov	r9, r3
 8026bb8:	bfa6      	itte	ge
 8026bba:	460a      	movge	r2, r1
 8026bbc:	4603      	movge	r3, r0
 8026bbe:	460b      	movlt	r3, r1
 8026bc0:	1a99      	subs	r1, r3, r2
 8026bc2:	b085      	sub	sp, #20
 8026bc4:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8026bc8:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8026bcc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8026bce:	bfa4      	itt	ge
 8026bd0:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8026bd4:	2200      	movge	r2, #0
 8026bd6:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8026bda:	9300      	str	r3, [sp, #0]
 8026bdc:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8026be0:	f102 0b01 	add.w	fp, r2, #1
 8026be4:	2c00      	cmp	r4, #0
 8026be6:	f040 80af 	bne.w	8026d48 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8026bea:	4610      	mov	r0, r2
 8026bec:	9201      	str	r2, [sp, #4]
 8026bee:	f7ea fd79 	bl	80116e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026bf2:	a903      	add	r1, sp, #12
 8026bf4:	9003      	str	r0, [sp, #12]
 8026bf6:	4650      	mov	r0, sl
 8026bf8:	f7ea fc3c 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026bfc:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8026c00:	9a01      	ldr	r2, [sp, #4]
 8026c02:	4408      	add	r0, r1
 8026c04:	f8d9 1000 	ldr.w	r1, [r9]
 8026c08:	4281      	cmp	r1, r0
 8026c0a:	bfc8      	it	gt
 8026c0c:	f8c9 0000 	strgt.w	r0, [r9]
 8026c10:	6839      	ldr	r1, [r7, #0]
 8026c12:	4288      	cmp	r0, r1
 8026c14:	bfc8      	it	gt
 8026c16:	6038      	strgt	r0, [r7, #0]
 8026c18:	4610      	mov	r0, r2
 8026c1a:	f7ff ffa9 	bl	8026b70 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026c1e:	a903      	add	r1, sp, #12
 8026c20:	9003      	str	r0, [sp, #12]
 8026c22:	4650      	mov	r0, sl
 8026c24:	f7ea fc26 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026c28:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026c2c:	1a10      	subs	r0, r2, r0
 8026c2e:	6832      	ldr	r2, [r6, #0]
 8026c30:	4282      	cmp	r2, r0
 8026c32:	bfc8      	it	gt
 8026c34:	6030      	strgt	r0, [r6, #0]
 8026c36:	682a      	ldr	r2, [r5, #0]
 8026c38:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8026c3c:	4290      	cmp	r0, r2
 8026c3e:	fb9b f2f1 	sdiv	r2, fp, r1
 8026c42:	fb01 b212 	mls	r2, r1, r2, fp
 8026c46:	eba1 0202 	sub.w	r2, r1, r2
 8026c4a:	bfc8      	it	gt
 8026c4c:	6028      	strgt	r0, [r5, #0]
 8026c4e:	fb92 f0f1 	sdiv	r0, r2, r1
 8026c52:	fb01 2210 	mls	r2, r1, r0, r2
 8026c56:	4493      	add	fp, r2
 8026c58:	9b00      	ldr	r3, [sp, #0]
 8026c5a:	455b      	cmp	r3, fp
 8026c5c:	db2a      	blt.n	8026cb4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 8026c5e:	4658      	mov	r0, fp
 8026c60:	f7ea fd40 	bl	80116e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026c64:	a903      	add	r1, sp, #12
 8026c66:	9003      	str	r0, [sp, #12]
 8026c68:	4650      	mov	r0, sl
 8026c6a:	f7ea fc03 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026c6e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026c72:	4410      	add	r0, r2
 8026c74:	f8d9 2000 	ldr.w	r2, [r9]
 8026c78:	4282      	cmp	r2, r0
 8026c7a:	bfc8      	it	gt
 8026c7c:	f8c9 0000 	strgt.w	r0, [r9]
 8026c80:	683a      	ldr	r2, [r7, #0]
 8026c82:	4290      	cmp	r0, r2
 8026c84:	bfc8      	it	gt
 8026c86:	6038      	strgt	r0, [r7, #0]
 8026c88:	4658      	mov	r0, fp
 8026c8a:	f7ff ff71 	bl	8026b70 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026c8e:	a903      	add	r1, sp, #12
 8026c90:	9003      	str	r0, [sp, #12]
 8026c92:	4650      	mov	r0, sl
 8026c94:	f7ea fbee 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026c98:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026c9c:	1a10      	subs	r0, r2, r0
 8026c9e:	6832      	ldr	r2, [r6, #0]
 8026ca0:	4282      	cmp	r2, r0
 8026ca2:	bfc8      	it	gt
 8026ca4:	6030      	strgt	r0, [r6, #0]
 8026ca6:	682a      	ldr	r2, [r5, #0]
 8026ca8:	4290      	cmp	r0, r2
 8026caa:	bfc8      	it	gt
 8026cac:	6028      	strgt	r0, [r5, #0]
 8026cae:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8026cb2:	e7d1      	b.n	8026c58 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8026cb4:	9b00      	ldr	r3, [sp, #0]
 8026cb6:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8026cba:	455b      	cmp	r3, fp
 8026cbc:	dd27      	ble.n	8026d0e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 8026cbe:	4618      	mov	r0, r3
 8026cc0:	f7ea fd10 	bl	80116e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026cc4:	a903      	add	r1, sp, #12
 8026cc6:	9003      	str	r0, [sp, #12]
 8026cc8:	4650      	mov	r0, sl
 8026cca:	f7ea fbd3 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026cce:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026cd2:	4410      	add	r0, r2
 8026cd4:	f8d9 2000 	ldr.w	r2, [r9]
 8026cd8:	4282      	cmp	r2, r0
 8026cda:	bfc8      	it	gt
 8026cdc:	f8c9 0000 	strgt.w	r0, [r9]
 8026ce0:	683a      	ldr	r2, [r7, #0]
 8026ce2:	4290      	cmp	r0, r2
 8026ce4:	bfc8      	it	gt
 8026ce6:	6038      	strgt	r0, [r7, #0]
 8026ce8:	9800      	ldr	r0, [sp, #0]
 8026cea:	f7ff ff41 	bl	8026b70 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026cee:	a903      	add	r1, sp, #12
 8026cf0:	9003      	str	r0, [sp, #12]
 8026cf2:	4650      	mov	r0, sl
 8026cf4:	f7ea fbbe 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026cf8:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026cfc:	1a10      	subs	r0, r2, r0
 8026cfe:	6832      	ldr	r2, [r6, #0]
 8026d00:	4282      	cmp	r2, r0
 8026d02:	bfc8      	it	gt
 8026d04:	6030      	strgt	r0, [r6, #0]
 8026d06:	682a      	ldr	r2, [r5, #0]
 8026d08:	4290      	cmp	r0, r2
 8026d0a:	bfc8      	it	gt
 8026d0c:	6028      	strgt	r0, [r5, #0]
 8026d0e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026d12:	f8d9 1000 	ldr.w	r1, [r9]
 8026d16:	4291      	cmp	r1, r2
 8026d18:	bfc8      	it	gt
 8026d1a:	f8c9 2000 	strgt.w	r2, [r9]
 8026d1e:	683a      	ldr	r2, [r7, #0]
 8026d20:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8026d24:	429a      	cmp	r2, r3
 8026d26:	bfb8      	it	lt
 8026d28:	603b      	strlt	r3, [r7, #0]
 8026d2a:	6832      	ldr	r2, [r6, #0]
 8026d2c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8026d30:	429a      	cmp	r2, r3
 8026d32:	bfc8      	it	gt
 8026d34:	6033      	strgt	r3, [r6, #0]
 8026d36:	682a      	ldr	r2, [r5, #0]
 8026d38:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8026d3c:	429a      	cmp	r2, r3
 8026d3e:	da00      	bge.n	8026d42 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8026d40:	602b      	str	r3, [r5, #0]
 8026d42:	b005      	add	sp, #20
 8026d44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026d48:	2002      	movs	r0, #2
 8026d4a:	3401      	adds	r4, #1
 8026d4c:	fb94 f4f0 	sdiv	r4, r4, r0
 8026d50:	4610      	mov	r0, r2
 8026d52:	9201      	str	r2, [sp, #4]
 8026d54:	f7ea fcc6 	bl	80116e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026d58:	a903      	add	r1, sp, #12
 8026d5a:	9003      	str	r0, [sp, #12]
 8026d5c:	4650      	mov	r0, sl
 8026d5e:	f7ea fb89 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026d62:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8026d66:	9a01      	ldr	r2, [sp, #4]
 8026d68:	4408      	add	r0, r1
 8026d6a:	f8d9 1000 	ldr.w	r1, [r9]
 8026d6e:	1b03      	subs	r3, r0, r4
 8026d70:	4299      	cmp	r1, r3
 8026d72:	bfc8      	it	gt
 8026d74:	f8c9 3000 	strgt.w	r3, [r9]
 8026d78:	6839      	ldr	r1, [r7, #0]
 8026d7a:	428b      	cmp	r3, r1
 8026d7c:	bfc8      	it	gt
 8026d7e:	603b      	strgt	r3, [r7, #0]
 8026d80:	f8d9 1000 	ldr.w	r1, [r9]
 8026d84:	4420      	add	r0, r4
 8026d86:	4281      	cmp	r1, r0
 8026d88:	bfc8      	it	gt
 8026d8a:	f8c9 0000 	strgt.w	r0, [r9]
 8026d8e:	6839      	ldr	r1, [r7, #0]
 8026d90:	4288      	cmp	r0, r1
 8026d92:	bfc8      	it	gt
 8026d94:	6038      	strgt	r0, [r7, #0]
 8026d96:	4610      	mov	r0, r2
 8026d98:	f7ff feea 	bl	8026b70 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026d9c:	a903      	add	r1, sp, #12
 8026d9e:	9003      	str	r0, [sp, #12]
 8026da0:	4650      	mov	r0, sl
 8026da2:	f7ea fb67 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026da6:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026daa:	1a10      	subs	r0, r2, r0
 8026dac:	6832      	ldr	r2, [r6, #0]
 8026dae:	1b01      	subs	r1, r0, r4
 8026db0:	428a      	cmp	r2, r1
 8026db2:	bfc8      	it	gt
 8026db4:	6031      	strgt	r1, [r6, #0]
 8026db6:	682a      	ldr	r2, [r5, #0]
 8026db8:	4291      	cmp	r1, r2
 8026dba:	bfc8      	it	gt
 8026dbc:	6029      	strgt	r1, [r5, #0]
 8026dbe:	6832      	ldr	r2, [r6, #0]
 8026dc0:	4420      	add	r0, r4
 8026dc2:	4282      	cmp	r2, r0
 8026dc4:	bfc8      	it	gt
 8026dc6:	6030      	strgt	r0, [r6, #0]
 8026dc8:	682a      	ldr	r2, [r5, #0]
 8026dca:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8026dce:	4290      	cmp	r0, r2
 8026dd0:	fb9b f2f1 	sdiv	r2, fp, r1
 8026dd4:	fb01 b212 	mls	r2, r1, r2, fp
 8026dd8:	eba1 0202 	sub.w	r2, r1, r2
 8026ddc:	bfc8      	it	gt
 8026dde:	6028      	strgt	r0, [r5, #0]
 8026de0:	fb92 f0f1 	sdiv	r0, r2, r1
 8026de4:	fb01 2210 	mls	r2, r1, r0, r2
 8026de8:	4493      	add	fp, r2
 8026dea:	9b00      	ldr	r3, [sp, #0]
 8026dec:	455b      	cmp	r3, fp
 8026dee:	db40      	blt.n	8026e72 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8026df0:	4658      	mov	r0, fp
 8026df2:	f7ea fc77 	bl	80116e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026df6:	a903      	add	r1, sp, #12
 8026df8:	9003      	str	r0, [sp, #12]
 8026dfa:	4650      	mov	r0, sl
 8026dfc:	f7ea fb3a 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026e00:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026e04:	4410      	add	r0, r2
 8026e06:	f8d9 2000 	ldr.w	r2, [r9]
 8026e0a:	1b01      	subs	r1, r0, r4
 8026e0c:	428a      	cmp	r2, r1
 8026e0e:	bfc8      	it	gt
 8026e10:	f8c9 1000 	strgt.w	r1, [r9]
 8026e14:	683a      	ldr	r2, [r7, #0]
 8026e16:	4291      	cmp	r1, r2
 8026e18:	bfc8      	it	gt
 8026e1a:	6039      	strgt	r1, [r7, #0]
 8026e1c:	f8d9 2000 	ldr.w	r2, [r9]
 8026e20:	4420      	add	r0, r4
 8026e22:	4282      	cmp	r2, r0
 8026e24:	bfc8      	it	gt
 8026e26:	f8c9 0000 	strgt.w	r0, [r9]
 8026e2a:	683a      	ldr	r2, [r7, #0]
 8026e2c:	4290      	cmp	r0, r2
 8026e2e:	bfc8      	it	gt
 8026e30:	6038      	strgt	r0, [r7, #0]
 8026e32:	4658      	mov	r0, fp
 8026e34:	f7ff fe9c 	bl	8026b70 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026e38:	a903      	add	r1, sp, #12
 8026e3a:	9003      	str	r0, [sp, #12]
 8026e3c:	4650      	mov	r0, sl
 8026e3e:	f7ea fb19 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026e42:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026e46:	1a10      	subs	r0, r2, r0
 8026e48:	6832      	ldr	r2, [r6, #0]
 8026e4a:	1b01      	subs	r1, r0, r4
 8026e4c:	428a      	cmp	r2, r1
 8026e4e:	bfc8      	it	gt
 8026e50:	6031      	strgt	r1, [r6, #0]
 8026e52:	682a      	ldr	r2, [r5, #0]
 8026e54:	4291      	cmp	r1, r2
 8026e56:	bfc8      	it	gt
 8026e58:	6029      	strgt	r1, [r5, #0]
 8026e5a:	6832      	ldr	r2, [r6, #0]
 8026e5c:	4420      	add	r0, r4
 8026e5e:	4282      	cmp	r2, r0
 8026e60:	bfc8      	it	gt
 8026e62:	6030      	strgt	r0, [r6, #0]
 8026e64:	682a      	ldr	r2, [r5, #0]
 8026e66:	4290      	cmp	r0, r2
 8026e68:	bfc8      	it	gt
 8026e6a:	6028      	strgt	r0, [r5, #0]
 8026e6c:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8026e70:	e7bb      	b.n	8026dea <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8026e72:	9b00      	ldr	r3, [sp, #0]
 8026e74:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8026e78:	455b      	cmp	r3, fp
 8026e7a:	f77f af62 	ble.w	8026d42 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8026e7e:	4618      	mov	r0, r3
 8026e80:	f7ea fc30 	bl	80116e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026e84:	a903      	add	r1, sp, #12
 8026e86:	9003      	str	r0, [sp, #12]
 8026e88:	4650      	mov	r0, sl
 8026e8a:	f7ea faf3 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026e8e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026e92:	4410      	add	r0, r2
 8026e94:	f8d9 2000 	ldr.w	r2, [r9]
 8026e98:	1b01      	subs	r1, r0, r4
 8026e9a:	428a      	cmp	r2, r1
 8026e9c:	bfc8      	it	gt
 8026e9e:	f8c9 1000 	strgt.w	r1, [r9]
 8026ea2:	683a      	ldr	r2, [r7, #0]
 8026ea4:	4291      	cmp	r1, r2
 8026ea6:	bfc8      	it	gt
 8026ea8:	6039      	strgt	r1, [r7, #0]
 8026eaa:	f8d9 2000 	ldr.w	r2, [r9]
 8026eae:	4420      	add	r0, r4
 8026eb0:	4282      	cmp	r2, r0
 8026eb2:	bfc8      	it	gt
 8026eb4:	f8c9 0000 	strgt.w	r0, [r9]
 8026eb8:	683b      	ldr	r3, [r7, #0]
 8026eba:	4298      	cmp	r0, r3
 8026ebc:	bfc8      	it	gt
 8026ebe:	6038      	strgt	r0, [r7, #0]
 8026ec0:	9800      	ldr	r0, [sp, #0]
 8026ec2:	f7ff fe55 	bl	8026b70 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026ec6:	a903      	add	r1, sp, #12
 8026ec8:	9003      	str	r0, [sp, #12]
 8026eca:	4650      	mov	r0, sl
 8026ecc:	f7ea fad2 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ed0:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8026ed4:	6832      	ldr	r2, [r6, #0]
 8026ed6:	1a18      	subs	r0, r3, r0
 8026ed8:	1b03      	subs	r3, r0, r4
 8026eda:	429a      	cmp	r2, r3
 8026edc:	bfc8      	it	gt
 8026ede:	6033      	strgt	r3, [r6, #0]
 8026ee0:	682a      	ldr	r2, [r5, #0]
 8026ee2:	4293      	cmp	r3, r2
 8026ee4:	bfc8      	it	gt
 8026ee6:	602b      	strgt	r3, [r5, #0]
 8026ee8:	6833      	ldr	r3, [r6, #0]
 8026eea:	4404      	add	r4, r0
 8026eec:	42a3      	cmp	r3, r4
 8026eee:	bfc8      	it	gt
 8026ef0:	6034      	strgt	r4, [r6, #0]
 8026ef2:	682b      	ldr	r3, [r5, #0]
 8026ef4:	429c      	cmp	r4, r3
 8026ef6:	bfc8      	it	gt
 8026ef8:	602c      	strgt	r4, [r5, #0]
 8026efa:	e722      	b.n	8026d42 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08026efc <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8026efc:	b530      	push	{r4, r5, lr}
 8026efe:	4604      	mov	r4, r0
 8026f00:	4608      	mov	r0, r1
 8026f02:	4611      	mov	r1, r2
 8026f04:	461a      	mov	r2, r3
 8026f06:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8026f0a:	b089      	sub	sp, #36	; 0x24
 8026f0c:	015b      	lsls	r3, r3, #5
 8026f0e:	9304      	str	r3, [sp, #16]
 8026f10:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8026f14:	2500      	movs	r5, #0
 8026f16:	015b      	lsls	r3, r3, #5
 8026f18:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8026f1c:	ab07      	add	r3, sp, #28
 8026f1e:	9302      	str	r3, [sp, #8]
 8026f20:	ab06      	add	r3, sp, #24
 8026f22:	9301      	str	r3, [sp, #4]
 8026f24:	ab05      	add	r3, sp, #20
 8026f26:	9300      	str	r3, [sp, #0]
 8026f28:	ab04      	add	r3, sp, #16
 8026f2a:	9505      	str	r5, [sp, #20]
 8026f2c:	f7ff fe3e 	bl	8026bac <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8026f30:	2520      	movs	r5, #32
 8026f32:	9a04      	ldr	r2, [sp, #16]
 8026f34:	9805      	ldr	r0, [sp, #20]
 8026f36:	fb92 f2f5 	sdiv	r2, r2, r5
 8026f3a:	fb90 f0f5 	sdiv	r0, r0, r5
 8026f3e:	b292      	uxth	r2, r2
 8026f40:	3002      	adds	r0, #2
 8026f42:	1a80      	subs	r0, r0, r2
 8026f44:	9b06      	ldr	r3, [sp, #24]
 8026f46:	9907      	ldr	r1, [sp, #28]
 8026f48:	fb93 f3f5 	sdiv	r3, r3, r5
 8026f4c:	fb91 f1f5 	sdiv	r1, r1, r5
 8026f50:	b29b      	uxth	r3, r3
 8026f52:	3102      	adds	r1, #2
 8026f54:	1ac9      	subs	r1, r1, r3
 8026f56:	3a01      	subs	r2, #1
 8026f58:	3b01      	subs	r3, #1
 8026f5a:	80a0      	strh	r0, [r4, #4]
 8026f5c:	4620      	mov	r0, r4
 8026f5e:	8022      	strh	r2, [r4, #0]
 8026f60:	8063      	strh	r3, [r4, #2]
 8026f62:	80e1      	strh	r1, [r4, #6]
 8026f64:	b009      	add	sp, #36	; 0x24
 8026f66:	bd30      	pop	{r4, r5, pc}

08026f68 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8026f68:	b510      	push	{r4, lr}
 8026f6a:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 8026f6e:	4604      	mov	r4, r0
 8026f70:	f7ff ffc4 	bl	8026efc <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8026f74:	4620      	mov	r0, r4
 8026f76:	bd10      	pop	{r4, pc}

08026f78 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8026f78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026f7a:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 8026f7e:	4606      	mov	r6, r0
 8026f80:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8026f84:	6813      	ldr	r3, [r2, #0]
 8026f86:	42a5      	cmp	r5, r4
 8026f88:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8026f8c:	da2b      	bge.n	8026fe6 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 8026f8e:	42a3      	cmp	r3, r4
 8026f90:	dd14      	ble.n	8026fbc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 8026f92:	b168      	cbz	r0, 8026fb0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026f94:	4267      	negs	r7, r4
 8026f96:	fb97 f2f0 	sdiv	r2, r7, r0
 8026f9a:	fb00 7212 	mls	r2, r0, r2, r7
 8026f9e:	1a82      	subs	r2, r0, r2
 8026fa0:	fb92 f7f0 	sdiv	r7, r2, r0
 8026fa4:	fb00 2017 	mls	r0, r0, r7, r2
 8026fa8:	1a24      	subs	r4, r4, r0
 8026faa:	42ac      	cmp	r4, r5
 8026fac:	bfb8      	it	lt
 8026fae:	462c      	movlt	r4, r5
 8026fb0:	4630      	mov	r0, r6
 8026fb2:	4622      	mov	r2, r4
 8026fb4:	f7ff ffa2 	bl	8026efc <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8026fb8:	4630      	mov	r0, r6
 8026fba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8026fbc:	42ab      	cmp	r3, r5
 8026fbe:	dd0e      	ble.n	8026fde <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8026fc0:	b168      	cbz	r0, 8026fde <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8026fc2:	425f      	negs	r7, r3
 8026fc4:	fb97 f2f0 	sdiv	r2, r7, r0
 8026fc8:	fb00 7212 	mls	r2, r0, r2, r7
 8026fcc:	1a82      	subs	r2, r0, r2
 8026fce:	fb92 f7f0 	sdiv	r7, r2, r0
 8026fd2:	fb00 2017 	mls	r0, r0, r7, r2
 8026fd6:	1a1b      	subs	r3, r3, r0
 8026fd8:	42ab      	cmp	r3, r5
 8026fda:	bfb8      	it	lt
 8026fdc:	462b      	movlt	r3, r5
 8026fde:	4622      	mov	r2, r4
 8026fe0:	461c      	mov	r4, r3
 8026fe2:	4613      	mov	r3, r2
 8026fe4:	e7e4      	b.n	8026fb0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026fe6:	42a3      	cmp	r3, r4
 8026fe8:	da10      	bge.n	802700c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8026fea:	b148      	cbz	r0, 8027000 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8026fec:	fb94 f2f0 	sdiv	r2, r4, r0
 8026ff0:	fb00 4212 	mls	r2, r0, r2, r4
 8026ff4:	1a82      	subs	r2, r0, r2
 8026ff6:	fb92 f7f0 	sdiv	r7, r2, r0
 8026ffa:	fb00 2017 	mls	r0, r0, r7, r2
 8026ffe:	4404      	add	r4, r0
 8027000:	42a5      	cmp	r5, r4
 8027002:	bfa8      	it	ge
 8027004:	4625      	movge	r5, r4
 8027006:	461c      	mov	r4, r3
 8027008:	462b      	mov	r3, r5
 802700a:	e7d1      	b.n	8026fb0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802700c:	42ab      	cmp	r3, r5
 802700e:	dacf      	bge.n	8026fb0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027010:	2800      	cmp	r0, #0
 8027012:	d0cd      	beq.n	8026fb0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027014:	fb93 f2f0 	sdiv	r2, r3, r0
 8027018:	fb00 3212 	mls	r2, r0, r2, r3
 802701c:	1a82      	subs	r2, r0, r2
 802701e:	fb92 f7f0 	sdiv	r7, r2, r0
 8027022:	fb00 2017 	mls	r0, r0, r7, r2
 8027026:	4403      	add	r3, r0
 8027028:	42ab      	cmp	r3, r5
 802702a:	bfa8      	it	ge
 802702c:	462b      	movge	r3, r5
 802702e:	e7bf      	b.n	8026fb0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08027030 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8027030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027034:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8027038:	42ae      	cmp	r6, r5
 802703a:	bfa2      	ittt	ge
 802703c:	4633      	movge	r3, r6
 802703e:	462e      	movge	r6, r5
 8027040:	461d      	movge	r5, r3
 8027042:	1bab      	subs	r3, r5, r6
 8027044:	468b      	mov	fp, r1
 8027046:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8027048:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 802704c:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8027050:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027054:	f04f 0220 	mov.w	r2, #32
 8027058:	b0ab      	sub	sp, #172	; 0xac
 802705a:	4604      	mov	r4, r0
 802705c:	bfa4      	itt	ge
 802705e:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 8027062:	2600      	movge	r6, #0
 8027064:	fb99 f9f2 	sdiv	r9, r9, r2
 8027068:	fb9a faf2 	sdiv	sl, sl, r2
 802706c:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802706e:	2900      	cmp	r1, #0
 8027070:	f000 80f5 	beq.w	802725e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8027074:	f9bb 0000 	ldrsh.w	r0, [fp]
 8027078:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 802707c:	eba9 0700 	sub.w	r7, r9, r0
 8027080:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8027084:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8027088:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 802708c:	ebaa 0802 	sub.w	r8, sl, r2
 8027090:	4407      	add	r7, r0
 8027092:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8027096:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 802709a:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802709e:	b23f      	sxth	r7, r7
 80270a0:	4490      	add	r8, r2
 80270a2:	eba9 0707 	sub.w	r7, r9, r7
 80270a6:	fa0f f888 	sxth.w	r8, r8
 80270aa:	ebaa 0808 	sub.w	r8, sl, r8
 80270ae:	2f00      	cmp	r7, #0
 80270b0:	bfb8      	it	lt
 80270b2:	427f      	neglt	r7, r7
 80270b4:	f1b8 0f00 	cmp.w	r8, #0
 80270b8:	bfb8      	it	lt
 80270ba:	f1c8 0800 	rsblt	r8, r8, #0
 80270be:	45bc      	cmp	ip, r7
 80270c0:	bfcc      	ite	gt
 80270c2:	f10c 0701 	addgt.w	r7, ip, #1
 80270c6:	3701      	addle	r7, #1
 80270c8:	4540      	cmp	r0, r8
 80270ca:	bfc8      	it	gt
 80270cc:	f100 0801 	addgt.w	r8, r0, #1
 80270d0:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 80270d4:	f100 0001 	add.w	r0, r0, #1
 80270d8:	ea4f 0060 	mov.w	r0, r0, asr #1
 80270dc:	f04f 0202 	mov.w	r2, #2
 80270e0:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80270e4:	fb91 f1f2 	sdiv	r1, r1, r2
 80270e8:	eba3 0301 	sub.w	r3, r3, r1
 80270ec:	bfd8      	it	le
 80270ee:	f108 0801 	addle.w	r8, r8, #1
 80270f2:	9201      	str	r2, [sp, #4]
 80270f4:	930d      	str	r3, [sp, #52]	; 0x34
 80270f6:	f7ea fad5 	bl	80116a4 <_ZN8touchgfx7CWRUtil4sineEi>
 80270fa:	a92a      	add	r1, sp, #168	; 0xa8
 80270fc:	fb08 f808 	mul.w	r8, r8, r8
 8027100:	f841 0d70 	str.w	r0, [r1, #-112]!
 8027104:	a80d      	add	r0, sp, #52	; 0x34
 8027106:	f7ea f9b5 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802710a:	fb07 8707 	mla	r7, r7, r7, r8
 802710e:	f04f 0c20 	mov.w	ip, #32
 8027112:	fb90 f0fc 	sdiv	r0, r0, ip
 8027116:	4340      	muls	r0, r0
 8027118:	4287      	cmp	r7, r0
 802711a:	9a01      	ldr	r2, [sp, #4]
 802711c:	da04      	bge.n	8027128 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 802711e:	2401      	movs	r4, #1
 8027120:	4620      	mov	r0, r4
 8027122:	b02b      	add	sp, #172	; 0xac
 8027124:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027128:	6b60      	ldr	r0, [r4, #52]	; 0x34
 802712a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802712c:	fb91 f3f2 	sdiv	r3, r1, r2
 8027130:	4403      	add	r3, r0
 8027132:	fb93 f3fc 	sdiv	r3, r3, ip
 8027136:	f9bb 1000 	ldrsh.w	r1, [fp]
 802713a:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 802713e:	440a      	add	r2, r1
 8027140:	b212      	sxth	r2, r2
 8027142:	454a      	cmp	r2, r9
 8027144:	bfa8      	it	ge
 8027146:	464a      	movge	r2, r9
 8027148:	428a      	cmp	r2, r1
 802714a:	bfac      	ite	ge
 802714c:	eba9 0902 	subge.w	r9, r9, r2
 8027150:	eba9 0901 	sublt.w	r9, r9, r1
 8027154:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8027158:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 802715c:	440a      	add	r2, r1
 802715e:	b212      	sxth	r2, r2
 8027160:	4552      	cmp	r2, sl
 8027162:	bfa8      	it	ge
 8027164:	4652      	movge	r2, sl
 8027166:	428a      	cmp	r2, r1
 8027168:	bfac      	ite	ge
 802716a:	ebaa 0a02 	subge.w	sl, sl, r2
 802716e:	ebaa 0a01 	sublt.w	sl, sl, r1
 8027172:	3301      	adds	r3, #1
 8027174:	fb0a fa0a 	mul.w	sl, sl, sl
 8027178:	fb09 a909 	mla	r9, r9, r9, sl
 802717c:	435b      	muls	r3, r3
 802717e:	4599      	cmp	r9, r3
 8027180:	dccd      	bgt.n	802711e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8027182:	465a      	mov	r2, fp
 8027184:	4621      	mov	r1, r4
 8027186:	a80e      	add	r0, sp, #56	; 0x38
 8027188:	f7ff faae 	bl	80266e8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 802718c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 802718e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8027190:	9209      	str	r2, [sp, #36]	; 0x24
 8027192:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8027196:	930a      	str	r3, [sp, #40]	; 0x28
 8027198:	dd07      	ble.n	80271aa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 802719a:	2102      	movs	r1, #2
 802719c:	fb93 f3f1 	sdiv	r3, r3, r1
 80271a0:	4413      	add	r3, r2
 80271a2:	930a      	str	r3, [sp, #40]	; 0x28
 80271a4:	fb93 f3f1 	sdiv	r3, r3, r1
 80271a8:	9309      	str	r3, [sp, #36]	; 0x24
 80271aa:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80271ae:	4630      	mov	r0, r6
 80271b0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80271b4:	930b      	str	r3, [sp, #44]	; 0x2c
 80271b6:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 80271ba:	f7ea fa93 	bl	80116e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80271be:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 80271c2:	f04f 0a02 	mov.w	sl, #2
 80271c6:	f849 0d74 	str.w	r0, [r9, #-116]!
 80271ca:	a80b      	add	r0, sp, #44	; 0x2c
 80271cc:	4649      	mov	r1, r9
 80271ce:	f7ea f951 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80271d2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80271d4:	fb90 f0fa 	sdiv	r0, r0, sl
 80271d8:	eb00 0b03 	add.w	fp, r0, r3
 80271dc:	4630      	mov	r0, r6
 80271de:	f7ff fcc7 	bl	8026b70 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80271e2:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 80271e6:	017f      	lsls	r7, r7, #5
 80271e8:	f848 0d78 	str.w	r0, [r8, #-120]!
 80271ec:	a80b      	add	r0, sp, #44	; 0x2c
 80271ee:	4641      	mov	r1, r8
 80271f0:	f7ea f940 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80271f4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80271f6:	fb90 f0fa 	sdiv	r0, r0, sl
 80271fa:	4659      	mov	r1, fp
 80271fc:	1a12      	subs	r2, r2, r0
 80271fe:	a80e      	add	r0, sp, #56	; 0x38
 8027200:	f7ff fbf2 	bl	80269e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8027204:	f106 0a20 	add.w	sl, r6, #32
 8027208:	bb67      	cbnz	r7, 8027264 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 802720a:	46b3      	mov	fp, r6
 802720c:	45aa      	cmp	sl, r5
 802720e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8027210:	dc33      	bgt.n	802727a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8027212:	9909      	ldr	r1, [sp, #36]	; 0x24
 8027214:	4650      	mov	r0, sl
 8027216:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 802721a:	920b      	str	r2, [sp, #44]	; 0x2c
 802721c:	f7ea fa62 	bl	80116e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027220:	4641      	mov	r1, r8
 8027222:	900c      	str	r0, [sp, #48]	; 0x30
 8027224:	a80b      	add	r0, sp, #44	; 0x2c
 8027226:	f7ea f925 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802722a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 802722c:	2302      	movs	r3, #2
 802722e:	fb90 f0f3 	sdiv	r0, r0, r3
 8027232:	eb00 0b02 	add.w	fp, r0, r2
 8027236:	4650      	mov	r0, sl
 8027238:	f7ff fc9a 	bl	8026b70 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802723c:	4649      	mov	r1, r9
 802723e:	900d      	str	r0, [sp, #52]	; 0x34
 8027240:	a80b      	add	r0, sp, #44	; 0x2c
 8027242:	f7ea f917 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027246:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027248:	2302      	movs	r3, #2
 802724a:	4659      	mov	r1, fp
 802724c:	fb90 f0f3 	sdiv	r0, r0, r3
 8027250:	1a12      	subs	r2, r2, r0
 8027252:	a80e      	add	r0, sp, #56	; 0x38
 8027254:	46d3      	mov	fp, sl
 8027256:	f7ff fc14 	bl	8026a82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802725a:	44ba      	add	sl, r7
 802725c:	e7d6      	b.n	802720c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 802725e:	fb93 f3f2 	sdiv	r3, r3, r2
 8027262:	e768      	b.n	8027136 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8027264:	fb9a f2f7 	sdiv	r2, sl, r7
 8027268:	fb07 a212 	mls	r2, r7, r2, sl
 802726c:	1aba      	subs	r2, r7, r2
 802726e:	fb92 f1f7 	sdiv	r1, r2, r7
 8027272:	fb07 2211 	mls	r2, r7, r1, r2
 8027276:	4492      	add	sl, r2
 8027278:	e7c7      	b.n	802720a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 802727a:	45ab      	cmp	fp, r5
 802727c:	da23      	bge.n	80272c6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 802727e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027280:	4628      	mov	r0, r5
 8027282:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8027286:	920b      	str	r2, [sp, #44]	; 0x2c
 8027288:	f7ea fa2c 	bl	80116e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802728c:	4641      	mov	r1, r8
 802728e:	900c      	str	r0, [sp, #48]	; 0x30
 8027290:	a80b      	add	r0, sp, #44	; 0x2c
 8027292:	f7ea f8ef 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027296:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027298:	f04f 0a02 	mov.w	sl, #2
 802729c:	fb90 f0fa 	sdiv	r0, r0, sl
 80272a0:	4403      	add	r3, r0
 80272a2:	4628      	mov	r0, r5
 80272a4:	9301      	str	r3, [sp, #4]
 80272a6:	f7ff fc63 	bl	8026b70 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80272aa:	4649      	mov	r1, r9
 80272ac:	900d      	str	r0, [sp, #52]	; 0x34
 80272ae:	a80b      	add	r0, sp, #44	; 0x2c
 80272b0:	f7ea f8e0 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80272b4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80272b6:	9b01      	ldr	r3, [sp, #4]
 80272b8:	fb90 f0fa 	sdiv	r0, r0, sl
 80272bc:	4619      	mov	r1, r3
 80272be:	1a12      	subs	r2, r2, r0
 80272c0:	a80e      	add	r0, sp, #56	; 0x38
 80272c2:	f7ff fbde 	bl	8026a82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80272c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80272c8:	b99b      	cbnz	r3, 80272f2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 80272ca:	1bad      	subs	r5, r5, r6
 80272cc:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 80272d0:	da04      	bge.n	80272dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 80272d2:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 80272d6:	a80e      	add	r0, sp, #56	; 0x38
 80272d8:	f7ff fbd3 	bl	8026a82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80272dc:	21ff      	movs	r1, #255	; 0xff
 80272de:	a80e      	add	r0, sp, #56	; 0x38
 80272e0:	f7ff fabe 	bl	8026860 <_ZN8touchgfx6Canvas6renderEh>
 80272e4:	4604      	mov	r4, r0
 80272e6:	4b8a      	ldr	r3, [pc, #552]	; (8027510 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 80272e8:	930e      	str	r3, [sp, #56]	; 0x38
 80272ea:	a816      	add	r0, sp, #88	; 0x58
 80272ec:	f7eb fd2e 	bl	8012d4c <_ZN8touchgfx7OutlineD1Ev>
 80272f0:	e716      	b.n	8027120 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 80272f2:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 80272f6:	429a      	cmp	r2, r3
 80272f8:	f0c0 8107 	bcc.w	802750a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 80272fc:	1bab      	subs	r3, r5, r6
 80272fe:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8027302:	9301      	str	r3, [sp, #4]
 8027304:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027308:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 802730c:	da43      	bge.n	8027396 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802730e:	4628      	mov	r0, r5
 8027310:	f7ea f9e8 	bl	80116e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027314:	4649      	mov	r1, r9
 8027316:	900d      	str	r0, [sp, #52]	; 0x34
 8027318:	a809      	add	r0, sp, #36	; 0x24
 802731a:	f7ea f8ab 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802731e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027320:	18c3      	adds	r3, r0, r3
 8027322:	4628      	mov	r0, r5
 8027324:	9303      	str	r3, [sp, #12]
 8027326:	f7ff fc23 	bl	8026b70 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802732a:	4649      	mov	r1, r9
 802732c:	900d      	str	r0, [sp, #52]	; 0x34
 802732e:	a809      	add	r0, sp, #36	; 0x24
 8027330:	f7ea f8a0 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027334:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027336:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 802733a:	1a1b      	subs	r3, r3, r0
 802733c:	9302      	str	r3, [sp, #8]
 802733e:	9204      	str	r2, [sp, #16]
 8027340:	eb0a 0305 	add.w	r3, sl, r5
 8027344:	9a04      	ldr	r2, [sp, #16]
 8027346:	4293      	cmp	r3, r2
 8027348:	da25      	bge.n	8027396 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802734a:	4618      	mov	r0, r3
 802734c:	9306      	str	r3, [sp, #24]
 802734e:	f7ea f9c9 	bl	80116e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027352:	4649      	mov	r1, r9
 8027354:	900d      	str	r0, [sp, #52]	; 0x34
 8027356:	a80a      	add	r0, sp, #40	; 0x28
 8027358:	f7ea f88c 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802735c:	9b03      	ldr	r3, [sp, #12]
 802735e:	2202      	movs	r2, #2
 8027360:	fb90 f0f2 	sdiv	r0, r0, r2
 8027364:	18c3      	adds	r3, r0, r3
 8027366:	9305      	str	r3, [sp, #20]
 8027368:	9b06      	ldr	r3, [sp, #24]
 802736a:	9207      	str	r2, [sp, #28]
 802736c:	4618      	mov	r0, r3
 802736e:	f7ff fbff 	bl	8026b70 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027372:	a92a      	add	r1, sp, #168	; 0xa8
 8027374:	f841 0d78 	str.w	r0, [r1, #-120]!
 8027378:	a80a      	add	r0, sp, #40	; 0x28
 802737a:	f7ea f87b 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802737e:	9b02      	ldr	r3, [sp, #8]
 8027380:	9a07      	ldr	r2, [sp, #28]
 8027382:	9905      	ldr	r1, [sp, #20]
 8027384:	fb90 f2f2 	sdiv	r2, r0, r2
 8027388:	a80e      	add	r0, sp, #56	; 0x38
 802738a:	1a9a      	subs	r2, r3, r2
 802738c:	f7ff fb79 	bl	8026a82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027390:	9b06      	ldr	r3, [sp, #24]
 8027392:	4453      	add	r3, sl
 8027394:	e7d6      	b.n	8027344 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8027396:	45ab      	cmp	fp, r5
 8027398:	da25      	bge.n	80273e6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 802739a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802739e:	4628      	mov	r0, r5
 80273a0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80273a4:	930b      	str	r3, [sp, #44]	; 0x2c
 80273a6:	f7ea f99d 	bl	80116e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80273aa:	4641      	mov	r1, r8
 80273ac:	900c      	str	r0, [sp, #48]	; 0x30
 80273ae:	a80b      	add	r0, sp, #44	; 0x2c
 80273b0:	f7ea f860 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80273b4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80273b6:	2202      	movs	r2, #2
 80273b8:	fb90 f0f2 	sdiv	r0, r0, r2
 80273bc:	eb00 0903 	add.w	r9, r0, r3
 80273c0:	4628      	mov	r0, r5
 80273c2:	9202      	str	r2, [sp, #8]
 80273c4:	f7ff fbd4 	bl	8026b70 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80273c8:	a92a      	add	r1, sp, #168	; 0xa8
 80273ca:	f841 0d74 	str.w	r0, [r1, #-116]!
 80273ce:	a80b      	add	r0, sp, #44	; 0x2c
 80273d0:	f7ea f850 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80273d4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80273d6:	9a02      	ldr	r2, [sp, #8]
 80273d8:	fb90 f2f2 	sdiv	r2, r0, r2
 80273dc:	4649      	mov	r1, r9
 80273de:	1a9a      	subs	r2, r3, r2
 80273e0:	a80e      	add	r0, sp, #56	; 0x38
 80273e2:	f7ff fb4e 	bl	8026a82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80273e6:	46d9      	mov	r9, fp
 80273e8:	2502      	movs	r5, #2
 80273ea:	45b1      	cmp	r9, r6
 80273ec:	db25      	blt.n	802743a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 80273ee:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80273f2:	4648      	mov	r0, r9
 80273f4:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80273f8:	930b      	str	r3, [sp, #44]	; 0x2c
 80273fa:	f7ea f973 	bl	80116e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80273fe:	4641      	mov	r1, r8
 8027400:	900c      	str	r0, [sp, #48]	; 0x30
 8027402:	a80b      	add	r0, sp, #44	; 0x2c
 8027404:	f7ea f836 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027408:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802740a:	fb90 f0f5 	sdiv	r0, r0, r5
 802740e:	eb00 0b03 	add.w	fp, r0, r3
 8027412:	4648      	mov	r0, r9
 8027414:	f7ff fbac 	bl	8026b70 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027418:	a90d      	add	r1, sp, #52	; 0x34
 802741a:	900d      	str	r0, [sp, #52]	; 0x34
 802741c:	a80b      	add	r0, sp, #44	; 0x2c
 802741e:	f7ea f829 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027422:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027424:	fb90 f0f5 	sdiv	r0, r0, r5
 8027428:	4659      	mov	r1, fp
 802742a:	1a12      	subs	r2, r2, r0
 802742c:	a80e      	add	r0, sp, #56	; 0x38
 802742e:	46cb      	mov	fp, r9
 8027430:	f7ff fb27 	bl	8026a82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027434:	eba9 0907 	sub.w	r9, r9, r7
 8027438:	e7d7      	b.n	80273ea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 802743a:	455e      	cmp	r6, fp
 802743c:	da22      	bge.n	8027484 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 802743e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027442:	4630      	mov	r0, r6
 8027444:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027448:	930b      	str	r3, [sp, #44]	; 0x2c
 802744a:	f7ea f94b 	bl	80116e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802744e:	4641      	mov	r1, r8
 8027450:	900c      	str	r0, [sp, #48]	; 0x30
 8027452:	a80b      	add	r0, sp, #44	; 0x2c
 8027454:	f7ea f80e 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027458:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 802745a:	2502      	movs	r5, #2
 802745c:	fb90 f0f5 	sdiv	r0, r0, r5
 8027460:	4407      	add	r7, r0
 8027462:	4630      	mov	r0, r6
 8027464:	f7ff fb84 	bl	8026b70 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027468:	a92a      	add	r1, sp, #168	; 0xa8
 802746a:	f841 0d74 	str.w	r0, [r1, #-116]!
 802746e:	a80b      	add	r0, sp, #44	; 0x2c
 8027470:	f7ea f800 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027474:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027476:	fb90 f0f5 	sdiv	r0, r0, r5
 802747a:	4639      	mov	r1, r7
 802747c:	1a12      	subs	r2, r2, r0
 802747e:	a80e      	add	r0, sp, #56	; 0x38
 8027480:	f7ff faff 	bl	8026a82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027484:	9b01      	ldr	r3, [sp, #4]
 8027486:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802748a:	f6bf af27 	bge.w	80272dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802748e:	4630      	mov	r0, r6
 8027490:	f7ea f928 	bl	80116e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027494:	ad2a      	add	r5, sp, #168	; 0xa8
 8027496:	f04f 0b02 	mov.w	fp, #2
 802749a:	f845 0d74 	str.w	r0, [r5, #-116]!
 802749e:	a809      	add	r0, sp, #36	; 0x24
 80274a0:	4629      	mov	r1, r5
 80274a2:	f7e9 ffe7 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80274a6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80274a8:	eb00 0903 	add.w	r9, r0, r3
 80274ac:	4630      	mov	r0, r6
 80274ae:	f7ff fb5f 	bl	8026b70 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80274b2:	4629      	mov	r1, r5
 80274b4:	900d      	str	r0, [sp, #52]	; 0x34
 80274b6:	a809      	add	r0, sp, #36	; 0x24
 80274b8:	f7e9 ffdc 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80274bc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80274be:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 80274c2:	eba3 0800 	sub.w	r8, r3, r0
 80274c6:	4454      	add	r4, sl
 80274c8:	42a6      	cmp	r6, r4
 80274ca:	f77f af07 	ble.w	80272dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 80274ce:	4620      	mov	r0, r4
 80274d0:	f7ea f908 	bl	80116e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80274d4:	4629      	mov	r1, r5
 80274d6:	900d      	str	r0, [sp, #52]	; 0x34
 80274d8:	a80a      	add	r0, sp, #40	; 0x28
 80274da:	f7e9 ffcb 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80274de:	fb90 f0fb 	sdiv	r0, r0, fp
 80274e2:	eb00 0709 	add.w	r7, r0, r9
 80274e6:	4620      	mov	r0, r4
 80274e8:	f7ff fb42 	bl	8026b70 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80274ec:	a90c      	add	r1, sp, #48	; 0x30
 80274ee:	900c      	str	r0, [sp, #48]	; 0x30
 80274f0:	a80a      	add	r0, sp, #40	; 0x28
 80274f2:	f7e9 ffbf 	bl	8011474 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80274f6:	4639      	mov	r1, r7
 80274f8:	fb90 f2fb 	sdiv	r2, r0, fp
 80274fc:	a80e      	add	r0, sp, #56	; 0x38
 80274fe:	eba8 0202 	sub.w	r2, r8, r2
 8027502:	f7ff fabe 	bl	8026a82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027506:	4454      	add	r4, sl
 8027508:	e7de      	b.n	80274c8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 802750a:	2400      	movs	r4, #0
 802750c:	e6eb      	b.n	80272e6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 802750e:	bf00      	nop
 8027510:	0802edb0 	.word	0x0802edb0

08027514 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8027514:	b570      	push	{r4, r5, r6, lr}
 8027516:	790b      	ldrb	r3, [r1, #4]
 8027518:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 802751c:	2b00      	cmp	r3, #0
 802751e:	bf0c      	ite	eq
 8027520:	2301      	moveq	r3, #1
 8027522:	2300      	movne	r3, #0
 8027524:	4604      	mov	r4, r0
 8027526:	460e      	mov	r6, r1
 8027528:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 802752c:	d109      	bne.n	8027542 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 802752e:	b14d      	cbz	r5, 8027544 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8027530:	7933      	ldrb	r3, [r6, #4]
 8027532:	2b01      	cmp	r3, #1
 8027534:	d10c      	bne.n	8027550 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027536:	6823      	ldr	r3, [r4, #0]
 8027538:	4620      	mov	r0, r4
 802753a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802753c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8027540:	4718      	bx	r3
 8027542:	b12d      	cbz	r5, 8027550 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027544:	6823      	ldr	r3, [r4, #0]
 8027546:	4620      	mov	r0, r4
 8027548:	695b      	ldr	r3, [r3, #20]
 802754a:	4798      	blx	r3
 802754c:	2d00      	cmp	r5, #0
 802754e:	d1ef      	bne.n	8027530 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8027550:	bd70      	pop	{r4, r5, r6, pc}

08027552 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8027552:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8027556:	4770      	bx	lr

08027558 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8027558:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 802755c:	4770      	bx	lr

0802755e <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 802755e:	6802      	ldr	r2, [r0, #0]
 8027560:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027564:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027566:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802756a:	4710      	bx	r2

0802756c <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 802756c:	6802      	ldr	r2, [r0, #0]
 802756e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027572:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027574:	eef0 0a40 	vmov.f32	s1, s0
 8027578:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802757c:	4710      	bx	r2

0802757e <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 802757e:	6802      	ldr	r2, [r0, #0]
 8027580:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027584:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027586:	eeb0 1a40 	vmov.f32	s2, s0
 802758a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802758e:	4710      	bx	r2

08027590 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8027590:	6802      	ldr	r2, [r0, #0]
 8027592:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027596:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027598:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802759c:	4710      	bx	r2

0802759e <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 802759e:	6802      	ldr	r2, [r0, #0]
 80275a0:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80275a4:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 80275a6:	eef0 0a40 	vmov.f32	s1, s0
 80275aa:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80275ae:	4710      	bx	r2

080275b0 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 80275b0:	6802      	ldr	r2, [r0, #0]
 80275b2:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80275b6:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 80275b8:	eeb0 1a40 	vmov.f32	s2, s0
 80275bc:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80275c0:	4710      	bx	r2

080275c2 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 80275c2:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80275c6:	4770      	bx	lr

080275c8 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 80275c8:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 80275cc:	4770      	bx	lr

080275ce <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 80275ce:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 80275d2:	4770      	bx	lr

080275d4 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 80275d4:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 80275d8:	4770      	bx	lr

080275da <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 80275da:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 80275de:	4770      	bx	lr

080275e0 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 80275e0:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 80275e4:	4770      	bx	lr

080275e6 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 80275e6:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 80275ea:	4770      	bx	lr

080275ec <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 80275ec:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 80275f0:	4770      	bx	lr

080275f2 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 80275f2:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 80275f6:	4770      	bx	lr

080275f8 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 80275f8:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 80275fc:	4770      	bx	lr

080275fe <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 80275fe:	ee07 2a90 	vmov	s15, r2
 8027602:	6803      	ldr	r3, [r0, #0]
 8027604:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8027608:	ee07 1a90 	vmov	s15, r1
 802760c:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8027610:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8027614:	4718      	bx	r3

08027616 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8027616:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 802761a:	4770      	bx	lr

0802761c <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 802761c:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8027620:	4770      	bx	lr

08027622 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8027622:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8027626:	4770      	bx	lr

08027628 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8027628:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 802762c:	4770      	bx	lr

0802762e <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 802762e:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8027632:	4770      	bx	lr

08027634 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8027634:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8027638:	4770      	bx	lr

0802763a <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 802763a:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 802763e:	4770      	bx	lr

08027640 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8027640:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8027644:	4770      	bx	lr

08027646 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8027646:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 802764a:	4770      	bx	lr

0802764c <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 802764c:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8027650:	4770      	bx	lr

08027652 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8027652:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8027656:	4770      	bx	lr

08027658 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8027658:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 802765c:	4770      	bx	lr

0802765e <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 802765e:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8027662:	4770      	bx	lr

08027664 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8027664:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8027668:	4770      	bx	lr

0802766a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 802766a:	b510      	push	{r4, lr}
 802766c:	ed2d 8b04 	vpush	{d8-d9}
 8027670:	6803      	ldr	r3, [r0, #0]
 8027672:	4604      	mov	r4, r0
 8027674:	699b      	ldr	r3, [r3, #24]
 8027676:	eeb0 8a40 	vmov.f32	s16, s0
 802767a:	eef0 8a60 	vmov.f32	s17, s1
 802767e:	eeb0 9a41 	vmov.f32	s18, s2
 8027682:	4798      	blx	r3
 8027684:	6823      	ldr	r3, [r4, #0]
 8027686:	4620      	mov	r0, r4
 8027688:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 802768a:	eeb0 1a49 	vmov.f32	s2, s18
 802768e:	eef0 0a68 	vmov.f32	s1, s17
 8027692:	eeb0 0a48 	vmov.f32	s0, s16
 8027696:	4798      	blx	r3
 8027698:	ecbd 8b04 	vpop	{d8-d9}
 802769c:	6823      	ldr	r3, [r4, #0]
 802769e:	4620      	mov	r0, r4
 80276a0:	699b      	ldr	r3, [r3, #24]
 80276a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80276a6:	4718      	bx	r3

080276a8 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 80276a8:	b510      	push	{r4, lr}
 80276aa:	ed2d 8b02 	vpush	{d8}
 80276ae:	6803      	ldr	r3, [r0, #0]
 80276b0:	4604      	mov	r4, r0
 80276b2:	699b      	ldr	r3, [r3, #24]
 80276b4:	eeb0 8a40 	vmov.f32	s16, s0
 80276b8:	4798      	blx	r3
 80276ba:	6823      	ldr	r3, [r4, #0]
 80276bc:	4620      	mov	r0, r4
 80276be:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80276c2:	eeb0 0a48 	vmov.f32	s0, s16
 80276c6:	4798      	blx	r3
 80276c8:	ecbd 8b02 	vpop	{d8}
 80276cc:	6823      	ldr	r3, [r4, #0]
 80276ce:	4620      	mov	r0, r4
 80276d0:	699b      	ldr	r3, [r3, #24]
 80276d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80276d6:	4718      	bx	r3

080276d8 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 80276d8:	2200      	movs	r2, #0
 80276da:	8002      	strh	r2, [r0, #0]
 80276dc:	8042      	strh	r2, [r0, #2]
 80276de:	8082      	strh	r2, [r0, #4]
 80276e0:	80c2      	strh	r2, [r0, #6]
 80276e2:	4770      	bx	lr

080276e4 <_ZN8touchgfx13TextureMapperD1Ev>:
 80276e4:	4770      	bx	lr

080276e6 <_ZN8touchgfx13TextureMapperD0Ev>:
 80276e6:	b510      	push	{r4, lr}
 80276e8:	2190      	movs	r1, #144	; 0x90
 80276ea:	4604      	mov	r4, r0
 80276ec:	f001 ff3f 	bl	802956e <_ZdlPvj>
 80276f0:	4620      	mov	r0, r4
 80276f2:	bd10      	pop	{r4, pc}

080276f4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 80276f4:	b538      	push	{r3, r4, r5, lr}
 80276f6:	2500      	movs	r5, #0
 80276f8:	e9c0 5505 	strd	r5, r5, [r0, #20]
 80276fc:	2301      	movs	r3, #1
 80276fe:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8027702:	4b1f      	ldr	r3, [pc, #124]	; (8027780 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8027704:	8085      	strh	r5, [r0, #4]
 8027706:	80c5      	strh	r5, [r0, #6]
 8027708:	8105      	strh	r5, [r0, #8]
 802770a:	8145      	strh	r5, [r0, #10]
 802770c:	8185      	strh	r5, [r0, #12]
 802770e:	81c5      	strh	r5, [r0, #14]
 8027710:	8205      	strh	r5, [r0, #16]
 8027712:	8245      	strh	r5, [r0, #18]
 8027714:	61c5      	str	r5, [r0, #28]
 8027716:	8405      	strh	r5, [r0, #32]
 8027718:	8445      	strh	r5, [r0, #34]	; 0x22
 802771a:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 802771e:	6003      	str	r3, [r0, #0]
 8027720:	880b      	ldrh	r3, [r1, #0]
 8027722:	84c3      	strh	r3, [r0, #38]	; 0x26
 8027724:	23ff      	movs	r3, #255	; 0xff
 8027726:	4604      	mov	r4, r0
 8027728:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 802772c:	f7eb f99f 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8027730:	4b14      	ldr	r3, [pc, #80]	; (8027784 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8027732:	6023      	str	r3, [r4, #0]
 8027734:	2300      	movs	r3, #0
 8027736:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 802773a:	4913      	ldr	r1, [pc, #76]	; (8027788 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 802773c:	62e3      	str	r3, [r4, #44]	; 0x2c
 802773e:	6323      	str	r3, [r4, #48]	; 0x30
 8027740:	6363      	str	r3, [r4, #52]	; 0x34
 8027742:	63a3      	str	r3, [r4, #56]	; 0x38
 8027744:	63e3      	str	r3, [r4, #60]	; 0x3c
 8027746:	6463      	str	r3, [r4, #68]	; 0x44
 8027748:	64a3      	str	r3, [r4, #72]	; 0x48
 802774a:	6523      	str	r3, [r4, #80]	; 0x50
 802774c:	6563      	str	r3, [r4, #84]	; 0x54
 802774e:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027750:	6623      	str	r3, [r4, #96]	; 0x60
 8027752:	66a3      	str	r3, [r4, #104]	; 0x68
 8027754:	66e3      	str	r3, [r4, #108]	; 0x6c
 8027756:	6763      	str	r3, [r4, #116]	; 0x74
 8027758:	67a3      	str	r3, [r4, #120]	; 0x78
 802775a:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 802775e:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8027762:	230c      	movs	r3, #12
 8027764:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8027768:	6422      	str	r2, [r4, #64]	; 0x40
 802776a:	64e1      	str	r1, [r4, #76]	; 0x4c
 802776c:	65a1      	str	r1, [r4, #88]	; 0x58
 802776e:	6662      	str	r2, [r4, #100]	; 0x64
 8027770:	6722      	str	r2, [r4, #112]	; 0x70
 8027772:	67e2      	str	r2, [r4, #124]	; 0x7c
 8027774:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8027778:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 802777c:	4620      	mov	r0, r4
 802777e:	bd38      	pop	{r3, r4, r5, pc}
 8027780:	0802e858 	.word	0x0802e858
 8027784:	0802ee3c 	.word	0x0802ee3c
 8027788:	447a0000 	.word	0x447a0000

0802778c <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 802778c:	b570      	push	{r4, r5, r6, lr}
 802778e:	ed2d 8b04 	vpush	{d8-d9}
 8027792:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8027796:	add0      	add	r5, sp, #832	; 0x340
 8027798:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 802779a:	f825 3d40 	strh.w	r3, [r5, #-64]!
 802779e:	4604      	mov	r4, r0
 80277a0:	4628      	mov	r0, r5
 80277a2:	f7f1 fa7f 	bl	8018ca4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80277a6:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 80277a8:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 80277ac:	4606      	mov	r6, r0
 80277ae:	4628      	mov	r0, r5
 80277b0:	f7f1 faac 	bl	8018d0c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80277b4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80277b8:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 80277bc:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80277be:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 80277c2:	9312      	str	r3, [sp, #72]	; 0x48
 80277c4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80277c8:	1c72      	adds	r2, r6, #1
 80277ca:	3001      	adds	r0, #1
 80277cc:	ee76 5ac7 	vsub.f32	s11, s13, s14
 80277d0:	ee07 2a90 	vmov	s15, r2
 80277d4:	ee06 0a90 	vmov	s13, r0
 80277d8:	ee36 6a47 	vsub.f32	s12, s12, s14
 80277dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80277e0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80277e4:	ee77 7a86 	vadd.f32	s15, s15, s12
 80277e8:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80277ec:	9316      	str	r3, [sp, #88]	; 0x58
 80277ee:	931a      	str	r3, [sp, #104]	; 0x68
 80277f0:	931e      	str	r3, [sp, #120]	; 0x78
 80277f2:	2300      	movs	r3, #0
 80277f4:	9320      	str	r3, [sp, #128]	; 0x80
 80277f6:	9321      	str	r3, [sp, #132]	; 0x84
 80277f8:	9322      	str	r3, [sp, #136]	; 0x88
 80277fa:	9324      	str	r3, [sp, #144]	; 0x90
 80277fc:	9325      	str	r3, [sp, #148]	; 0x94
 80277fe:	9326      	str	r3, [sp, #152]	; 0x98
 8027800:	9328      	str	r3, [sp, #160]	; 0xa0
 8027802:	9329      	str	r3, [sp, #164]	; 0xa4
 8027804:	932a      	str	r3, [sp, #168]	; 0xa8
 8027806:	932c      	str	r3, [sp, #176]	; 0xb0
 8027808:	932d      	str	r3, [sp, #180]	; 0xb4
 802780a:	932e      	str	r3, [sp, #184]	; 0xb8
 802780c:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8027810:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8027814:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8027818:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802781c:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8027820:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8027824:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8027828:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 802782c:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8027830:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8027834:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8027838:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 802783c:	a830      	add	r0, sp, #192	; 0xc0
 802783e:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8027842:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8027846:	f000 fc43 	bl	80280d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802784a:	eeb1 0a49 	vneg.f32	s0, s18
 802784e:	a830      	add	r0, sp, #192	; 0xc0
 8027850:	f000 fd12 	bl	8028278 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027854:	eeb1 0a68 	vneg.f32	s0, s17
 8027858:	f000 fd1c 	bl	8028294 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802785c:	eeb1 0a48 	vneg.f32	s0, s16
 8027860:	f000 fd27 	bl	80282b2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8027864:	a840      	add	r0, sp, #256	; 0x100
 8027866:	f000 fc33 	bl	80280d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802786a:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 802786e:	a840      	add	r0, sp, #256	; 0x100
 8027870:	f000 fc86 	bl	8028180 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8027874:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8027878:	f000 fcac 	bl	80281d4 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 802787c:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8027880:	f000 fcd1 	bl	8028226 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8027884:	a850      	add	r0, sp, #320	; 0x140
 8027886:	f000 fc23 	bl	80280d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802788a:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802788e:	a850      	add	r0, sp, #320	; 0x140
 8027890:	f000 fd1e 	bl	80282d0 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8027894:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8027898:	f000 fd26 	bl	80282e8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 802789c:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80278a0:	f000 fd2f 	bl	8028302 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 80278a4:	a860      	add	r0, sp, #384	; 0x180
 80278a6:	f000 fc13 	bl	80280d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 80278aa:	eeb0 0a49 	vmov.f32	s0, s18
 80278ae:	a860      	add	r0, sp, #384	; 0x180
 80278b0:	f000 fce2 	bl	8028278 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80278b4:	eeb0 0a68 	vmov.f32	s0, s17
 80278b8:	f000 fcec 	bl	8028294 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80278bc:	eeb0 0a48 	vmov.f32	s0, s16
 80278c0:	f000 fcf7 	bl	80282b2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 80278c4:	aa50      	add	r2, sp, #320	; 0x140
 80278c6:	a960      	add	r1, sp, #384	; 0x180
 80278c8:	a8b0      	add	r0, sp, #704	; 0x2c0
 80278ca:	f000 fc1b 	bl	8028104 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80278ce:	4628      	mov	r0, r5
 80278d0:	aa40      	add	r2, sp, #256	; 0x100
 80278d2:	a9b0      	add	r1, sp, #704	; 0x2c0
 80278d4:	f000 fc16 	bl	8028104 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80278d8:	4629      	mov	r1, r5
 80278da:	aa30      	add	r2, sp, #192	; 0xc0
 80278dc:	a870      	add	r0, sp, #448	; 0x1c0
 80278de:	f000 fc11 	bl	8028104 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80278e2:	a880      	add	r0, sp, #512	; 0x200
 80278e4:	f000 fbf4 	bl	80280d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 80278e8:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 80278ec:	a880      	add	r0, sp, #512	; 0x200
 80278ee:	eeb1 0a40 	vneg.f32	s0, s0
 80278f2:	f000 fcc1 	bl	8028278 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80278f6:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 80278fa:	a880      	add	r0, sp, #512	; 0x200
 80278fc:	eeb1 0a40 	vneg.f32	s0, s0
 8027900:	f000 fcc8 	bl	8028294 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8027904:	a890      	add	r0, sp, #576	; 0x240
 8027906:	f000 fbe3 	bl	80280d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802790a:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 802790e:	a890      	add	r0, sp, #576	; 0x240
 8027910:	f000 fc26 	bl	8028160 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8027914:	a8a0      	add	r0, sp, #640	; 0x280
 8027916:	f000 fbdb 	bl	80280d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802791a:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802791e:	a8a0      	add	r0, sp, #640	; 0x280
 8027920:	f000 fcaa 	bl	8028278 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027924:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8027928:	f000 fcb4 	bl	8028294 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802792c:	aa90      	add	r2, sp, #576	; 0x240
 802792e:	a9a0      	add	r1, sp, #640	; 0x280
 8027930:	a8b0      	add	r0, sp, #704	; 0x2c0
 8027932:	f000 fbe7 	bl	8028104 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027936:	4628      	mov	r0, r5
 8027938:	aa80      	add	r2, sp, #512	; 0x200
 802793a:	a9b0      	add	r1, sp, #704	; 0x2c0
 802793c:	f000 fbe2 	bl	8028104 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027940:	4629      	mov	r1, r5
 8027942:	aa70      	add	r2, sp, #448	; 0x1c0
 8027944:	4668      	mov	r0, sp
 8027946:	466d      	mov	r5, sp
 8027948:	f000 fbdc 	bl	8028104 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802794c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802794e:	ae70      	add	r6, sp, #448	; 0x1c0
 8027950:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8027952:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027954:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8027956:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027958:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802795a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802795e:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8027962:	2500      	movs	r5, #0
 8027964:	0129      	lsls	r1, r5, #4
 8027966:	ab20      	add	r3, sp, #128	; 0x80
 8027968:	185e      	adds	r6, r3, r1
 802796a:	ab10      	add	r3, sp, #64	; 0x40
 802796c:	4419      	add	r1, r3
 802796e:	a870      	add	r0, sp, #448	; 0x1c0
 8027970:	f000 fb7e 	bl	8028070 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8027974:	3501      	adds	r5, #1
 8027976:	2d04      	cmp	r5, #4
 8027978:	ed86 0a00 	vstr	s0, [r6]
 802797c:	edc6 0a01 	vstr	s1, [r6, #4]
 8027980:	ed86 1a02 	vstr	s2, [r6, #8]
 8027984:	edc6 1a03 	vstr	s3, [r6, #12]
 8027988:	d1ec      	bne.n	8027964 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 802798a:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 802798e:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8027992:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8027996:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802799a:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802799e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80279a2:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 80279a6:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 80279aa:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80279ae:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80279b2:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 80279b6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80279ba:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 80279be:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80279c2:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 80279c6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80279ca:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 80279ce:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 80279d2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80279d6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80279da:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 80279de:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 80279e2:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 80279e6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80279ea:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 80279ee:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80279f2:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 80279f6:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 80279fa:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80279fe:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8027a02:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8027a06:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8027a0a:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 8027a0e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8027a12:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8027a16:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8027a1a:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8027a1e:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8027a22:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8027a26:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8027a2a:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 8027a2e:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 8027a32:	ecbd 8b04 	vpop	{d8-d9}
 8027a36:	bd70      	pop	{r4, r5, r6, pc}

08027a38 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8027a38:	b510      	push	{r4, lr}
 8027a3a:	4604      	mov	r4, r0
 8027a3c:	f7eb f817 	bl	8012a6e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8027a40:	4620      	mov	r0, r4
 8027a42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027a46:	f7ff bea1 	b.w	802778c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027a4a <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8027a4a:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 8027a4e:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8027a52:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8027a56:	f7ff be99 	b.w	802778c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027a5a <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8027a5a:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 8027a5e:	f7ff be95 	b.w	802778c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027a62 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8027a62:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8027a66:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8027a6a:	f7ff be8f 	b.w	802778c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027a6e <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 8027a6e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8027a72:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027a76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027a7a:	bfd8      	it	le
 8027a7c:	eeb0 0a67 	vmovle.f32	s0, s15
 8027a80:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8027a84:	f7ff be82 	b.w	802778c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027a88 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8027a88:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8027a8c:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8027a90:	f7ff be7c 	b.w	802778c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027a94 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8027a94:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8027a98:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8027a9c:	f7ff be76 	b.w	802778c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027aa0 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8027aa0:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8027aa4:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8027aa8:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8027aac:	f7ff be6e 	b.w	802778c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027ab0 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8027ab0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027ab4:	ed2d 8b04 	vpush	{d8-d9}
 8027ab8:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 8027abc:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8027ac0:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8027ac4:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8027ac8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027acc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027ad0:	bf54      	ite	pl
 8027ad2:	eeb0 0a69 	vmovpl.f32	s0, s19
 8027ad6:	eeb0 0a48 	vmovmi.f32	s0, s16
 8027ada:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8027ade:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027ae2:	bfd8      	it	le
 8027ae4:	eeb0 0a49 	vmovle.f32	s0, s18
 8027ae8:	eef4 8ac0 	vcmpe.f32	s17, s0
 8027aec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027af0:	bfd8      	it	le
 8027af2:	eeb0 0a68 	vmovle.f32	s0, s17
 8027af6:	460c      	mov	r4, r1
 8027af8:	4607      	mov	r7, r0
 8027afa:	f001 fe4f 	bl	802979c <floorf>
 8027afe:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027b02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b06:	bf58      	it	pl
 8027b08:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8027b0c:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027b10:	bf56      	itet	pl
 8027b12:	ee10 3a10 	vmovpl	r3, s0
 8027b16:	2600      	movmi	r6, #0
 8027b18:	b21e      	sxthpl	r6, r3
 8027b1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b1e:	bfd8      	it	le
 8027b20:	eeb0 8a69 	vmovle.f32	s16, s19
 8027b24:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8027b28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b2c:	bf58      	it	pl
 8027b2e:	eeb0 8a49 	vmovpl.f32	s16, s18
 8027b32:	eef4 8ac8 	vcmpe.f32	s17, s16
 8027b36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b3a:	bf54      	ite	pl
 8027b3c:	eeb0 0a68 	vmovpl.f32	s0, s17
 8027b40:	eeb0 0a48 	vmovmi.f32	s0, s16
 8027b44:	f001 fde8 	bl	8029718 <ceilf>
 8027b48:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8027b4c:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8027b50:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8027b54:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8027b58:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8027b5c:	ee07 8a90 	vmov	s15, r8
 8027b60:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027b64:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027b68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b6c:	bfd8      	it	le
 8027b6e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8027b72:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027b76:	bfdc      	itt	le
 8027b78:	ee10 3a10 	vmovle	r3, s0
 8027b7c:	fa0f f883 	sxthle.w	r8, r3
 8027b80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b84:	bf54      	ite	pl
 8027b86:	eeb0 0a69 	vmovpl.f32	s0, s19
 8027b8a:	eeb0 0a48 	vmovmi.f32	s0, s16
 8027b8e:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8027b92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b96:	bfd8      	it	le
 8027b98:	eeb0 0a49 	vmovle.f32	s0, s18
 8027b9c:	eef4 8ac0 	vcmpe.f32	s17, s0
 8027ba0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027ba4:	bfd8      	it	le
 8027ba6:	eeb0 0a68 	vmovle.f32	s0, s17
 8027baa:	f001 fdf7 	bl	802979c <floorf>
 8027bae:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027bb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027bb6:	bf58      	it	pl
 8027bb8:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8027bbc:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027bc0:	bf56      	itet	pl
 8027bc2:	ee10 3a10 	vmovpl	r3, s0
 8027bc6:	2500      	movmi	r5, #0
 8027bc8:	b21d      	sxthpl	r5, r3
 8027bca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027bce:	bfd8      	it	le
 8027bd0:	eeb0 8a69 	vmovle.f32	s16, s19
 8027bd4:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8027bd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027bdc:	bf58      	it	pl
 8027bde:	eeb0 8a49 	vmovpl.f32	s16, s18
 8027be2:	eef4 8ac8 	vcmpe.f32	s17, s16
 8027be6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027bea:	bf54      	ite	pl
 8027bec:	eeb0 0a68 	vmovpl.f32	s0, s17
 8027bf0:	eeb0 0a48 	vmovmi.f32	s0, s16
 8027bf4:	f001 fd90 	bl	8029718 <ceilf>
 8027bf8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8027bfc:	803e      	strh	r6, [r7, #0]
 8027bfe:	ee07 3a90 	vmov	s15, r3
 8027c02:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027c06:	807d      	strh	r5, [r7, #2]
 8027c08:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027c0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027c10:	bfd8      	it	le
 8027c12:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8027c16:	eba8 0606 	sub.w	r6, r8, r6
 8027c1a:	bfdc      	itt	le
 8027c1c:	ee10 3a10 	vmovle	r3, s0
 8027c20:	b21b      	sxthle	r3, r3
 8027c22:	1b5d      	subs	r5, r3, r5
 8027c24:	80be      	strh	r6, [r7, #4]
 8027c26:	80fd      	strh	r5, [r7, #6]
 8027c28:	ecbd 8b04 	vpop	{d8-d9}
 8027c2c:	4638      	mov	r0, r7
 8027c2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08027c32 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 8027c32:	b513      	push	{r0, r1, r4, lr}
 8027c34:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8027c38:	4604      	mov	r4, r0
 8027c3a:	b143      	cbz	r3, 8027c4e <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 8027c3c:	4601      	mov	r1, r0
 8027c3e:	4668      	mov	r0, sp
 8027c40:	f7ff ff36 	bl	8027ab0 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8027c44:	6823      	ldr	r3, [r4, #0]
 8027c46:	4669      	mov	r1, sp
 8027c48:	691b      	ldr	r3, [r3, #16]
 8027c4a:	4620      	mov	r0, r4
 8027c4c:	4798      	blx	r3
 8027c4e:	b002      	add	sp, #8
 8027c50:	bd10      	pop	{r4, pc}

08027c52 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 8027c52:	4603      	mov	r3, r0
 8027c54:	3026      	adds	r0, #38	; 0x26
 8027c56:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8027c5a:	b90b      	cbnz	r3, 8027c60 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8027c5c:	f7ee be38 	b.w	80168d0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8027c60:	f7ee be46 	b.w	80168f0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08027c64 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8027c64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027c68:	ed2d 8b04 	vpush	{d8-d9}
 8027c6c:	4604      	mov	r4, r0
 8027c6e:	469b      	mov	fp, r3
 8027c70:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8027c74:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8027c78:	f9b1 6000 	ldrsh.w	r6, [r1]
 8027c7c:	8888      	ldrh	r0, [r1, #4]
 8027c7e:	b0b3      	sub	sp, #204	; 0xcc
 8027c80:	4430      	add	r0, r6
 8027c82:	b280      	uxth	r0, r0
 8027c84:	9206      	str	r2, [sp, #24]
 8027c86:	fa0f fe80 	sxth.w	lr, r0
 8027c8a:	2200      	movs	r2, #0
 8027c8c:	4596      	cmp	lr, r2
 8027c8e:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8027c92:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8027c96:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 8027c9a:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 8027c9c:	9211      	str	r2, [sp, #68]	; 0x44
 8027c9e:	f340 8129 	ble.w	8027ef4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027ca2:	45b4      	cmp	ip, r6
 8027ca4:	f340 8126 	ble.w	8027ef4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027ca8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8027cac:	88ca      	ldrh	r2, [r1, #6]
 8027cae:	442a      	add	r2, r5
 8027cb0:	b292      	uxth	r2, r2
 8027cb2:	b211      	sxth	r1, r2
 8027cb4:	2900      	cmp	r1, #0
 8027cb6:	f340 811d 	ble.w	8027ef4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027cba:	42ab      	cmp	r3, r5
 8027cbc:	f340 811a 	ble.w	8027ef4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027cc0:	45f4      	cmp	ip, lr
 8027cc2:	bfb8      	it	lt
 8027cc4:	fa1f f08c 	uxthlt.w	r0, ip
 8027cc8:	428b      	cmp	r3, r1
 8027cca:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8027cce:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8027cd2:	bfb8      	it	lt
 8027cd4:	b29a      	uxthlt	r2, r3
 8027cd6:	1b80      	subs	r0, r0, r6
 8027cd8:	1b52      	subs	r2, r2, r5
 8027cda:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 8027cde:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 8027ce2:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8027ce6:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8027cea:	ab11      	add	r3, sp, #68	; 0x44
 8027cec:	e893 0003 	ldmia.w	r3, {r0, r1}
 8027cf0:	6822      	ldr	r2, [r4, #0]
 8027cf2:	9307      	str	r3, [sp, #28]
 8027cf4:	ad13      	add	r5, sp, #76	; 0x4c
 8027cf6:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8027cf8:	e885 0003 	stmia.w	r5, {r0, r1}
 8027cfc:	4629      	mov	r1, r5
 8027cfe:	4620      	mov	r0, r4
 8027d00:	4790      	blx	r2
 8027d02:	4621      	mov	r1, r4
 8027d04:	a815      	add	r0, sp, #84	; 0x54
 8027d06:	f7ee fd3f 	bl	8016788 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8027d0a:	a815      	add	r0, sp, #84	; 0x54
 8027d0c:	f7ed fa04 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027d10:	9b07      	ldr	r3, [sp, #28]
 8027d12:	1d26      	adds	r6, r4, #4
 8027d14:	4618      	mov	r0, r3
 8027d16:	4631      	mov	r1, r6
 8027d18:	f7ed fa42 	bl	80151a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027d1c:	4628      	mov	r0, r5
 8027d1e:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8027d22:	f7ed f9f9 	bl	8015118 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027d26:	4628      	mov	r0, r5
 8027d28:	f7f1 f8a8 	bl	8018e7c <_ZNK8touchgfx6Bitmap7getDataEv>
 8027d2c:	9007      	str	r0, [sp, #28]
 8027d2e:	2800      	cmp	r0, #0
 8027d30:	f000 80db 	beq.w	8027eea <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8027d34:	f8db 2000 	ldr.w	r2, [fp]
 8027d38:	9209      	str	r2, [sp, #36]	; 0x24
 8027d3a:	f8db 2004 	ldr.w	r2, [fp, #4]
 8027d3e:	920a      	str	r2, [sp, #40]	; 0x28
 8027d40:	f8db 2008 	ldr.w	r2, [fp, #8]
 8027d44:	920b      	str	r2, [sp, #44]	; 0x2c
 8027d46:	f8db 200c 	ldr.w	r2, [fp, #12]
 8027d4a:	920c      	str	r2, [sp, #48]	; 0x30
 8027d4c:	f8da 2000 	ldr.w	r2, [sl]
 8027d50:	920d      	str	r2, [sp, #52]	; 0x34
 8027d52:	f8da 2004 	ldr.w	r2, [sl, #4]
 8027d56:	920e      	str	r2, [sp, #56]	; 0x38
 8027d58:	f8da 2008 	ldr.w	r2, [sl, #8]
 8027d5c:	920f      	str	r2, [sp, #60]	; 0x3c
 8027d5e:	f8da 200c 	ldr.w	r2, [sl, #12]
 8027d62:	9210      	str	r2, [sp, #64]	; 0x40
 8027d64:	a90d      	add	r1, sp, #52	; 0x34
 8027d66:	4632      	mov	r2, r6
 8027d68:	a809      	add	r0, sp, #36	; 0x24
 8027d6a:	f7ed f9fd 	bl	8015168 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027d6e:	4632      	mov	r2, r6
 8027d70:	a90e      	add	r1, sp, #56	; 0x38
 8027d72:	a80a      	add	r0, sp, #40	; 0x28
 8027d74:	f7ed f9f8 	bl	8015168 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027d78:	4632      	mov	r2, r6
 8027d7a:	a90f      	add	r1, sp, #60	; 0x3c
 8027d7c:	a80b      	add	r0, sp, #44	; 0x2c
 8027d7e:	f7ed f9f3 	bl	8015168 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027d82:	4632      	mov	r2, r6
 8027d84:	a910      	add	r1, sp, #64	; 0x40
 8027d86:	a80c      	add	r0, sp, #48	; 0x30
 8027d88:	f7ed f9ee 	bl	8015168 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027d8c:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8027d90:	edd7 4a00 	vldr	s9, [r7]
 8027d94:	edd7 5a01 	vldr	s11, [r7, #4]
 8027d98:	ed98 4a00 	vldr	s8, [r8]
 8027d9c:	ed98 5a01 	vldr	s10, [r8, #4]
 8027da0:	ed99 9a00 	vldr	s18, [r9]
 8027da4:	ed99 8a01 	vldr	s16, [r9, #4]
 8027da8:	edd9 8a02 	vldr	s17, [r9, #8]
 8027dac:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8027db0:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8027db4:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8027db8:	eef0 6a67 	vmov.f32	s13, s15
 8027dbc:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8027dc0:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8027dc4:	eeb0 7a67 	vmov.f32	s14, s15
 8027dc8:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8027dcc:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 8027dd0:	eeb0 6a67 	vmov.f32	s12, s15
 8027dd4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027dd8:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8027ddc:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8027de0:	ee16 6a10 	vmov	r6, s12
 8027de4:	eeb0 6a67 	vmov.f32	s12, s15
 8027de8:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027dec:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8027df0:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8027df4:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8027df8:	68ff      	ldr	r7, [r7, #12]
 8027dfa:	9624      	str	r6, [sp, #144]	; 0x90
 8027dfc:	ee16 0a10 	vmov	r0, s12
 8027e00:	eeb0 6a67 	vmov.f32	s12, s15
 8027e04:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027e08:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8027e0c:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8027e10:	ee16 1a10 	vmov	r1, s12
 8027e14:	eeb0 6a67 	vmov.f32	s12, s15
 8027e18:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027e1c:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8027e20:	ee16 2a10 	vmov	r2, s12
 8027e24:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8027e28:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8027e2c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8027e30:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8027e34:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027e38:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8027e3c:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8027e40:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8027e44:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8027e48:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8027e4c:	922d      	str	r2, [sp, #180]	; 0xb4
 8027e4e:	4a2b      	ldr	r2, [pc, #172]	; (8027efc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8027e50:	9b06      	ldr	r3, [sp, #24]
 8027e52:	8812      	ldrh	r2, [r2, #0]
 8027e54:	9317      	str	r3, [sp, #92]	; 0x5c
 8027e56:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8027e5a:	9b07      	ldr	r3, [sp, #28]
 8027e5c:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8027e60:	4628      	mov	r0, r5
 8027e62:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8027e66:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8027e6a:	9218      	str	r2, [sp, #96]	; 0x60
 8027e6c:	9319      	str	r3, [sp, #100]	; 0x64
 8027e6e:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8027e72:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8027e76:	9731      	str	r7, [sp, #196]	; 0xc4
 8027e78:	f7f1 f830 	bl	8018edc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8027e7c:	901a      	str	r0, [sp, #104]	; 0x68
 8027e7e:	4628      	mov	r0, r5
 8027e80:	f7f0 ff10 	bl	8018ca4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027e84:	901b      	str	r0, [sp, #108]	; 0x6c
 8027e86:	4628      	mov	r0, r5
 8027e88:	f7f0 ff40 	bl	8018d0c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8027e8c:	901c      	str	r0, [sp, #112]	; 0x70
 8027e8e:	4628      	mov	r0, r5
 8027e90:	f7f0 ff08 	bl	8018ca4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027e94:	eeb4 9a48 	vcmp.f32	s18, s16
 8027e98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027e9c:	901d      	str	r0, [sp, #116]	; 0x74
 8027e9e:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 8027ea2:	d107      	bne.n	8027eb4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8027ea4:	eeb4 8a68 	vcmp.f32	s16, s17
 8027ea8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027eac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8027eb0:	bf08      	it	eq
 8027eb2:	461e      	moveq	r6, r3
 8027eb4:	4b12      	ldr	r3, [pc, #72]	; (8027f00 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8027eb6:	681b      	ldr	r3, [r3, #0]
 8027eb8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8027ebc:	b10a      	cbz	r2, 8027ec2 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 8027ebe:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8027ec0:	b905      	cbnz	r5, 8027ec4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 8027ec2:	689d      	ldr	r5, [r3, #8]
 8027ec4:	682b      	ldr	r3, [r5, #0]
 8027ec6:	4620      	mov	r0, r4
 8027ec8:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8027eca:	f7ff fec2 	bl	8027c52 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 8027ece:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8027ed2:	9604      	str	r6, [sp, #16]
 8027ed4:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8027ed8:	ab13      	add	r3, sp, #76	; 0x4c
 8027eda:	9301      	str	r3, [sp, #4]
 8027edc:	ab15      	add	r3, sp, #84	; 0x54
 8027ede:	9300      	str	r3, [sp, #0]
 8027ee0:	aa1e      	add	r2, sp, #120	; 0x78
 8027ee2:	ab19      	add	r3, sp, #100	; 0x64
 8027ee4:	a917      	add	r1, sp, #92	; 0x5c
 8027ee6:	4628      	mov	r0, r5
 8027ee8:	47b8      	blx	r7
 8027eea:	b033      	add	sp, #204	; 0xcc
 8027eec:	ecbd 8b04 	vpop	{d8-d9}
 8027ef0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027ef4:	2300      	movs	r3, #0
 8027ef6:	9312      	str	r3, [sp, #72]	; 0x48
 8027ef8:	e6f7      	b.n	8027cea <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8027efa:	bf00      	nop
 8027efc:	20012f26 	.word	0x20012f26
 8027f00:	20012f2c 	.word	0x20012f2c

08027f04 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8027f04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027f08:	ed2d 8b02 	vpush	{d8}
 8027f0c:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8027f10:	b098      	sub	sp, #96	; 0x60
 8027f12:	4604      	mov	r4, r0
 8027f14:	4688      	mov	r8, r1
 8027f16:	2b00      	cmp	r3, #0
 8027f18:	d077      	beq.n	802800a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 8027f1a:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8027f1e:	4628      	mov	r0, r5
 8027f20:	f7f0 fec0 	bl	8018ca4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027f24:	ee07 0a90 	vmov	s15, r0
 8027f28:	4628      	mov	r0, r5
 8027f2a:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 8027f2e:	f7f0 feed 	bl	8018d0c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8027f32:	4b4e      	ldr	r3, [pc, #312]	; (802806c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8027f34:	781b      	ldrb	r3, [r3, #0]
 8027f36:	ee07 0a90 	vmov	s15, r0
 8027f3a:	2b01      	cmp	r3, #1
 8027f3c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8027f40:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8027f44:	d066      	beq.n	8028014 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8027f46:	eeb0 6a47 	vmov.f32	s12, s14
 8027f4a:	ee17 3a10 	vmov	r3, s14
 8027f4e:	eeb0 4a48 	vmov.f32	s8, s16
 8027f52:	eeb0 7a48 	vmov.f32	s14, s16
 8027f56:	eef0 4a67 	vmov.f32	s9, s15
 8027f5a:	eeb0 8a67 	vmov.f32	s16, s15
 8027f5e:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 8027f62:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8027f66:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8027f6a:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 8027f6e:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 8027f72:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8027f76:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8027f78:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8027f7a:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8027f7c:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8027f80:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8027f84:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8027f88:	ee73 1a65 	vsub.f32	s3, s6, s11
 8027f8c:	ee72 6ac5 	vsub.f32	s13, s5, s10
 8027f90:	ee32 1a45 	vsub.f32	s2, s4, s10
 8027f94:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8027f98:	ee73 1ae5 	vsub.f32	s3, s7, s11
 8027f9c:	eee1 6a21 	vfma.f32	s13, s2, s3
 8027fa0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8027fa4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027fa8:	dd3d      	ble.n	8028026 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8027faa:	ed8d 5a04 	vstr	s10, [sp, #16]
 8027fae:	ed8d 2a05 	vstr	s4, [sp, #20]
 8027fb2:	edcd 2a06 	vstr	s5, [sp, #24]
 8027fb6:	f8cd c01c 	str.w	ip, [sp, #28]
 8027fba:	edcd 5a08 	vstr	s11, [sp, #32]
 8027fbe:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 8027fc2:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8027fc6:	970b      	str	r7, [sp, #44]	; 0x2c
 8027fc8:	960c      	str	r6, [sp, #48]	; 0x30
 8027fca:	950d      	str	r5, [sp, #52]	; 0x34
 8027fcc:	920e      	str	r2, [sp, #56]	; 0x38
 8027fce:	900f      	str	r0, [sp, #60]	; 0x3c
 8027fd0:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8027fd4:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8027fd8:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8027fdc:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8027fe0:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8027fe4:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8027fe8:	9316      	str	r3, [sp, #88]	; 0x58
 8027fea:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 8027fee:	ab14      	add	r3, sp, #80	; 0x50
 8027ff0:	9303      	str	r3, [sp, #12]
 8027ff2:	ab10      	add	r3, sp, #64	; 0x40
 8027ff4:	9302      	str	r3, [sp, #8]
 8027ff6:	ab0c      	add	r3, sp, #48	; 0x30
 8027ff8:	9301      	str	r3, [sp, #4]
 8027ffa:	ab08      	add	r3, sp, #32
 8027ffc:	9300      	str	r3, [sp, #0]
 8027ffe:	2200      	movs	r2, #0
 8028000:	ab04      	add	r3, sp, #16
 8028002:	4641      	mov	r1, r8
 8028004:	4620      	mov	r0, r4
 8028006:	f7ff fe2d 	bl	8027c64 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 802800a:	b018      	add	sp, #96	; 0x60
 802800c:	ecbd 8b02 	vpop	{d8}
 8028010:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028014:	eeb0 6a48 	vmov.f32	s12, s16
 8028018:	eef0 4a47 	vmov.f32	s9, s14
 802801c:	ee17 3a90 	vmov	r3, s15
 8028020:	eeb0 4a67 	vmov.f32	s8, s15
 8028024:	e79b      	b.n	8027f5e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8028026:	ed8d 5a05 	vstr	s10, [sp, #20]
 802802a:	ed8d 2a04 	vstr	s4, [sp, #16]
 802802e:	f8cd c018 	str.w	ip, [sp, #24]
 8028032:	edcd 2a07 	vstr	s5, [sp, #28]
 8028036:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 802803a:	ed8d 3a08 	vstr	s6, [sp, #32]
 802803e:	970a      	str	r7, [sp, #40]	; 0x28
 8028040:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8028044:	960d      	str	r6, [sp, #52]	; 0x34
 8028046:	950c      	str	r5, [sp, #48]	; 0x30
 8028048:	900e      	str	r0, [sp, #56]	; 0x38
 802804a:	920f      	str	r2, [sp, #60]	; 0x3c
 802804c:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8028050:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8028054:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8028058:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802805c:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8028060:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8028064:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8028068:	9317      	str	r3, [sp, #92]	; 0x5c
 802806a:	e7c0      	b.n	8027fee <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 802806c:	20012f24 	.word	0x20012f24

08028070 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8028070:	b5f0      	push	{r4, r5, r6, r7, lr}
 8028072:	b08d      	sub	sp, #52	; 0x34
 8028074:	2300      	movs	r3, #0
 8028076:	9304      	str	r3, [sp, #16]
 8028078:	9305      	str	r3, [sp, #20]
 802807a:	9306      	str	r3, [sp, #24]
 802807c:	aa04      	add	r2, sp, #16
 802807e:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8028082:	9307      	str	r3, [sp, #28]
 8028084:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8028088:	4613      	mov	r3, r2
 802808a:	f101 0710 	add.w	r7, r1, #16
 802808e:	eddf 7a0f 	vldr	s15, [pc, #60]	; 80280cc <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 8028092:	460c      	mov	r4, r1
 8028094:	4605      	mov	r5, r0
 8028096:	ecb4 7a01 	vldmia	r4!, {s14}
 802809a:	ecf5 6a01 	vldmia	r5!, {s13}
 802809e:	42bc      	cmp	r4, r7
 80280a0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80280a4:	d1f7      	bne.n	8028096 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 80280a6:	3010      	adds	r0, #16
 80280a8:	42b0      	cmp	r0, r6
 80280aa:	ece2 7a01 	vstmia	r2!, {s15}
 80280ae:	d1ee      	bne.n	802808e <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 80280b0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80280b2:	ac0c      	add	r4, sp, #48	; 0x30
 80280b4:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 80280b8:	ed9d 0a08 	vldr	s0, [sp, #32]
 80280bc:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 80280c0:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 80280c4:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 80280c8:	b00d      	add	sp, #52	; 0x34
 80280ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80280cc:	00000000 	.word	0x00000000

080280d0 <_ZN8touchgfx9Matrix4x4C1Ev>:
 80280d0:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8028100 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 80280d4:	2300      	movs	r3, #0
 80280d6:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80280da:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 80280de:	2200      	movs	r2, #0
 80280e0:	4293      	cmp	r3, r2
 80280e2:	f102 0201 	add.w	r2, r2, #1
 80280e6:	bf14      	ite	ne
 80280e8:	eef0 6a47 	vmovne.f32	s13, s14
 80280ec:	eef0 6a67 	vmoveq.f32	s13, s15
 80280f0:	2a04      	cmp	r2, #4
 80280f2:	ece1 6a01 	vstmia	r1!, {s13}
 80280f6:	d1f3      	bne.n	80280e0 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 80280f8:	3301      	adds	r3, #1
 80280fa:	2b04      	cmp	r3, #4
 80280fc:	d1ed      	bne.n	80280da <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 80280fe:	4770      	bx	lr
 8028100:	00000000 	.word	0x00000000

08028104 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8028104:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028108:	460c      	mov	r4, r1
 802810a:	4605      	mov	r5, r0
 802810c:	4690      	mov	r8, r2
 802810e:	f7ff ffdf 	bl	80280d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 8028112:	4628      	mov	r0, r5
 8028114:	4621      	mov	r1, r4
 8028116:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 802811a:	2300      	movs	r3, #0
 802811c:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802815c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8028120:	eb08 0603 	add.w	r6, r8, r3
 8028124:	460f      	mov	r7, r1
 8028126:	2400      	movs	r4, #0
 8028128:	4632      	mov	r2, r6
 802812a:	ecf7 6a01 	vldmia	r7!, {s13}
 802812e:	ed92 7a00 	vldr	s14, [r2]
 8028132:	3401      	adds	r4, #1
 8028134:	2c04      	cmp	r4, #4
 8028136:	f106 0610 	add.w	r6, r6, #16
 802813a:	eee6 7a87 	vfma.f32	s15, s13, s14
 802813e:	d1f3      	bne.n	8028128 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8028140:	18c2      	adds	r2, r0, r3
 8028142:	3304      	adds	r3, #4
 8028144:	2b10      	cmp	r3, #16
 8028146:	edc2 7a00 	vstr	s15, [r2]
 802814a:	d1e7      	bne.n	802811c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 802814c:	3110      	adds	r1, #16
 802814e:	4561      	cmp	r1, ip
 8028150:	f100 0010 	add.w	r0, r0, #16
 8028154:	d1e1      	bne.n	802811a <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8028156:	4628      	mov	r0, r5
 8028158:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802815c:	00000000 	.word	0x00000000

08028160 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8028160:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028164:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8028168:	f100 0320 	add.w	r3, r0, #32
 802816c:	3030      	adds	r0, #48	; 0x30
 802816e:	ecf3 7a01 	vldmia	r3!, {s15}
 8028172:	ee60 7a27 	vmul.f32	s15, s0, s15
 8028176:	4283      	cmp	r3, r0
 8028178:	edc3 7a03 	vstr	s15, [r3, #12]
 802817c:	d1f7      	bne.n	802816e <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 802817e:	4770      	bx	lr

08028180 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8028180:	b510      	push	{r4, lr}
 8028182:	ed2d 8b02 	vpush	{d8}
 8028186:	4604      	mov	r4, r0
 8028188:	eef0 8a40 	vmov.f32	s17, s0
 802818c:	f001 fa7a 	bl	8029684 <sinf>
 8028190:	eeb0 8a40 	vmov.f32	s16, s0
 8028194:	eeb0 0a68 	vmov.f32	s0, s17
 8028198:	f001 fa30 	bl	80295fc <cosf>
 802819c:	f104 0310 	add.w	r3, r4, #16
 80281a0:	f104 0220 	add.w	r2, r4, #32
 80281a4:	eeb1 6a48 	vneg.f32	s12, s16
 80281a8:	edd3 7a04 	vldr	s15, [r3, #16]
 80281ac:	edd3 6a00 	vldr	s13, [r3]
 80281b0:	ee26 7a27 	vmul.f32	s14, s12, s15
 80281b4:	ee67 7a80 	vmul.f32	s15, s15, s0
 80281b8:	eea6 7a80 	vfma.f32	s14, s13, s0
 80281bc:	eee6 7a88 	vfma.f32	s15, s13, s16
 80281c0:	eca3 7a01 	vstmia	r3!, {s14}
 80281c4:	429a      	cmp	r2, r3
 80281c6:	edc3 7a03 	vstr	s15, [r3, #12]
 80281ca:	d1ed      	bne.n	80281a8 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 80281cc:	ecbd 8b02 	vpop	{d8}
 80281d0:	4620      	mov	r0, r4
 80281d2:	bd10      	pop	{r4, pc}

080281d4 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 80281d4:	b510      	push	{r4, lr}
 80281d6:	ed2d 8b02 	vpush	{d8}
 80281da:	4604      	mov	r4, r0
 80281dc:	eef0 8a40 	vmov.f32	s17, s0
 80281e0:	f001 fa50 	bl	8029684 <sinf>
 80281e4:	eeb0 8a40 	vmov.f32	s16, s0
 80281e8:	eeb0 0a68 	vmov.f32	s0, s17
 80281ec:	f001 fa06 	bl	80295fc <cosf>
 80281f0:	4623      	mov	r3, r4
 80281f2:	f104 0210 	add.w	r2, r4, #16
 80281f6:	eeb1 6a48 	vneg.f32	s12, s16
 80281fa:	edd3 7a08 	vldr	s15, [r3, #32]
 80281fe:	edd3 6a00 	vldr	s13, [r3]
 8028202:	ee27 7a88 	vmul.f32	s14, s15, s16
 8028206:	ee67 7a80 	vmul.f32	s15, s15, s0
 802820a:	eea6 7a80 	vfma.f32	s14, s13, s0
 802820e:	eee6 7a26 	vfma.f32	s15, s12, s13
 8028212:	eca3 7a01 	vstmia	r3!, {s14}
 8028216:	429a      	cmp	r2, r3
 8028218:	edc3 7a07 	vstr	s15, [r3, #28]
 802821c:	d1ed      	bne.n	80281fa <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 802821e:	ecbd 8b02 	vpop	{d8}
 8028222:	4620      	mov	r0, r4
 8028224:	bd10      	pop	{r4, pc}

08028226 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8028226:	b510      	push	{r4, lr}
 8028228:	ed2d 8b02 	vpush	{d8}
 802822c:	4604      	mov	r4, r0
 802822e:	eef0 8a40 	vmov.f32	s17, s0
 8028232:	f001 fa27 	bl	8029684 <sinf>
 8028236:	eeb0 8a40 	vmov.f32	s16, s0
 802823a:	eeb0 0a68 	vmov.f32	s0, s17
 802823e:	f001 f9dd 	bl	80295fc <cosf>
 8028242:	4623      	mov	r3, r4
 8028244:	f104 0210 	add.w	r2, r4, #16
 8028248:	eeb1 6a48 	vneg.f32	s12, s16
 802824c:	edd3 7a04 	vldr	s15, [r3, #16]
 8028250:	edd3 6a00 	vldr	s13, [r3]
 8028254:	ee26 7a27 	vmul.f32	s14, s12, s15
 8028258:	ee67 7a80 	vmul.f32	s15, s15, s0
 802825c:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028260:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028264:	eca3 7a01 	vstmia	r3!, {s14}
 8028268:	429a      	cmp	r2, r3
 802826a:	edc3 7a03 	vstr	s15, [r3, #12]
 802826e:	d1ed      	bne.n	802824c <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8028270:	ecbd 8b02 	vpop	{d8}
 8028274:	4620      	mov	r0, r4
 8028276:	bd10      	pop	{r4, pc}

08028278 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8028278:	4603      	mov	r3, r0
 802827a:	f100 0210 	add.w	r2, r0, #16
 802827e:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8028282:	edd3 7a00 	vldr	s15, [r3]
 8028286:	eee7 7a00 	vfma.f32	s15, s14, s0
 802828a:	ece3 7a01 	vstmia	r3!, {s15}
 802828e:	4293      	cmp	r3, r2
 8028290:	d1f5      	bne.n	802827e <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8028292:	4770      	bx	lr

08028294 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8028294:	f100 0310 	add.w	r3, r0, #16
 8028298:	f100 0220 	add.w	r2, r0, #32
 802829c:	ed93 7a08 	vldr	s14, [r3, #32]
 80282a0:	edd3 7a00 	vldr	s15, [r3]
 80282a4:	eee7 7a00 	vfma.f32	s15, s14, s0
 80282a8:	ece3 7a01 	vstmia	r3!, {s15}
 80282ac:	4293      	cmp	r3, r2
 80282ae:	d1f5      	bne.n	802829c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 80282b0:	4770      	bx	lr

080282b2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 80282b2:	f100 0320 	add.w	r3, r0, #32
 80282b6:	f100 0230 	add.w	r2, r0, #48	; 0x30
 80282ba:	ed93 7a04 	vldr	s14, [r3, #16]
 80282be:	edd3 7a00 	vldr	s15, [r3]
 80282c2:	eee7 7a00 	vfma.f32	s15, s14, s0
 80282c6:	ece3 7a01 	vstmia	r3!, {s15}
 80282ca:	4293      	cmp	r3, r2
 80282cc:	d1f5      	bne.n	80282ba <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 80282ce:	4770      	bx	lr

080282d0 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 80282d0:	4603      	mov	r3, r0
 80282d2:	f100 0210 	add.w	r2, r0, #16
 80282d6:	edd3 7a00 	vldr	s15, [r3]
 80282da:	ee67 7a80 	vmul.f32	s15, s15, s0
 80282de:	ece3 7a01 	vstmia	r3!, {s15}
 80282e2:	4293      	cmp	r3, r2
 80282e4:	d1f7      	bne.n	80282d6 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 80282e6:	4770      	bx	lr

080282e8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 80282e8:	f100 0310 	add.w	r3, r0, #16
 80282ec:	f100 0220 	add.w	r2, r0, #32
 80282f0:	edd3 7a00 	vldr	s15, [r3]
 80282f4:	ee67 7a80 	vmul.f32	s15, s15, s0
 80282f8:	ece3 7a01 	vstmia	r3!, {s15}
 80282fc:	4293      	cmp	r3, r2
 80282fe:	d1f7      	bne.n	80282f0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8028300:	4770      	bx	lr

08028302 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8028302:	f100 0320 	add.w	r3, r0, #32
 8028306:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802830a:	edd3 7a00 	vldr	s15, [r3]
 802830e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028312:	ece3 7a01 	vstmia	r3!, {s15}
 8028316:	4293      	cmp	r3, r2
 8028318:	d1f7      	bne.n	802830a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 802831a:	4770      	bx	lr

0802831c <arm_max_f32>:
 802831c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028320:	1e4f      	subs	r7, r1, #1
 8028322:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8028326:	f100 0e04 	add.w	lr, r0, #4
 802832a:	edd0 7a00 	vldr	s15, [r0]
 802832e:	d058      	beq.n	80283e2 <arm_max_f32+0xc6>
 8028330:	3014      	adds	r0, #20
 8028332:	46c4      	mov	ip, r8
 8028334:	2604      	movs	r6, #4
 8028336:	2400      	movs	r4, #0
 8028338:	ed10 6a04 	vldr	s12, [r0, #-16]
 802833c:	ed50 6a03 	vldr	s13, [r0, #-12]
 8028340:	ed10 7a02 	vldr	s14, [r0, #-8]
 8028344:	ed50 5a01 	vldr	s11, [r0, #-4]
 8028348:	eeb4 6ae7 	vcmpe.f32	s12, s15
 802834c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028350:	bfc8      	it	gt
 8028352:	eef0 7a46 	vmovgt.f32	s15, s12
 8028356:	f1a6 0503 	sub.w	r5, r6, #3
 802835a:	eef4 7ae6 	vcmpe.f32	s15, s13
 802835e:	bfc8      	it	gt
 8028360:	462c      	movgt	r4, r5
 8028362:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028366:	bf48      	it	mi
 8028368:	eef0 7a66 	vmovmi.f32	s15, s13
 802836c:	f1a6 0502 	sub.w	r5, r6, #2
 8028370:	eef4 7ac7 	vcmpe.f32	s15, s14
 8028374:	bf48      	it	mi
 8028376:	462c      	movmi	r4, r5
 8028378:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802837c:	bf48      	it	mi
 802837e:	eef0 7a47 	vmovmi.f32	s15, s14
 8028382:	f106 35ff 	add.w	r5, r6, #4294967295
 8028386:	eef4 7ae5 	vcmpe.f32	s15, s11
 802838a:	bf48      	it	mi
 802838c:	462c      	movmi	r4, r5
 802838e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028392:	bf48      	it	mi
 8028394:	4634      	movmi	r4, r6
 8028396:	bf48      	it	mi
 8028398:	eef0 7a65 	vmovmi.f32	s15, s11
 802839c:	f1bc 0c01 	subs.w	ip, ip, #1
 80283a0:	f106 0604 	add.w	r6, r6, #4
 80283a4:	f100 0010 	add.w	r0, r0, #16
 80283a8:	d1c6      	bne.n	8028338 <arm_max_f32+0x1c>
 80283aa:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 80283ae:	f017 0003 	ands.w	r0, r7, #3
 80283b2:	d018      	beq.n	80283e6 <arm_max_f32+0xca>
 80283b4:	1a08      	subs	r0, r1, r0
 80283b6:	ecbe 7a01 	vldmia	lr!, {s14}
 80283ba:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80283be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80283c2:	bfc8      	it	gt
 80283c4:	4604      	movgt	r4, r0
 80283c6:	f100 0001 	add.w	r0, r0, #1
 80283ca:	bfd8      	it	le
 80283cc:	eeb0 7a67 	vmovle.f32	s14, s15
 80283d0:	4288      	cmp	r0, r1
 80283d2:	eef0 7a47 	vmov.f32	s15, s14
 80283d6:	d1ee      	bne.n	80283b6 <arm_max_f32+0x9a>
 80283d8:	ed82 7a00 	vstr	s14, [r2]
 80283dc:	601c      	str	r4, [r3, #0]
 80283de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80283e2:	4644      	mov	r4, r8
 80283e4:	e7e3      	b.n	80283ae <arm_max_f32+0x92>
 80283e6:	eeb0 7a67 	vmov.f32	s14, s15
 80283ea:	e7f5      	b.n	80283d8 <arm_max_f32+0xbc>

080283ec <arm_rfft_fast_init_f32>:
 80283ec:	084b      	lsrs	r3, r1, #1
 80283ee:	2b80      	cmp	r3, #128	; 0x80
 80283f0:	b410      	push	{r4}
 80283f2:	8201      	strh	r1, [r0, #16]
 80283f4:	8003      	strh	r3, [r0, #0]
 80283f6:	d047      	beq.n	8028488 <arm_rfft_fast_init_f32+0x9c>
 80283f8:	d917      	bls.n	802842a <arm_rfft_fast_init_f32+0x3e>
 80283fa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80283fe:	d03d      	beq.n	802847c <arm_rfft_fast_init_f32+0x90>
 8028400:	d929      	bls.n	8028456 <arm_rfft_fast_init_f32+0x6a>
 8028402:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8028406:	d020      	beq.n	802844a <arm_rfft_fast_init_f32+0x5e>
 8028408:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 802840c:	d113      	bne.n	8028436 <arm_rfft_fast_init_f32+0x4a>
 802840e:	4921      	ldr	r1, [pc, #132]	; (8028494 <arm_rfft_fast_init_f32+0xa8>)
 8028410:	4a21      	ldr	r2, [pc, #132]	; (8028498 <arm_rfft_fast_init_f32+0xac>)
 8028412:	4b22      	ldr	r3, [pc, #136]	; (802849c <arm_rfft_fast_init_f32+0xb0>)
 8028414:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8028418:	8184      	strh	r4, [r0, #12]
 802841a:	6081      	str	r1, [r0, #8]
 802841c:	6042      	str	r2, [r0, #4]
 802841e:	6143      	str	r3, [r0, #20]
 8028420:	2000      	movs	r0, #0
 8028422:	b240      	sxtb	r0, r0
 8028424:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028428:	4770      	bx	lr
 802842a:	2b20      	cmp	r3, #32
 802842c:	d01c      	beq.n	8028468 <arm_rfft_fast_init_f32+0x7c>
 802842e:	2b40      	cmp	r3, #64	; 0x40
 8028430:	d006      	beq.n	8028440 <arm_rfft_fast_init_f32+0x54>
 8028432:	2b10      	cmp	r3, #16
 8028434:	d01d      	beq.n	8028472 <arm_rfft_fast_init_f32+0x86>
 8028436:	20ff      	movs	r0, #255	; 0xff
 8028438:	b240      	sxtb	r0, r0
 802843a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802843e:	4770      	bx	lr
 8028440:	2438      	movs	r4, #56	; 0x38
 8028442:	4917      	ldr	r1, [pc, #92]	; (80284a0 <arm_rfft_fast_init_f32+0xb4>)
 8028444:	4a17      	ldr	r2, [pc, #92]	; (80284a4 <arm_rfft_fast_init_f32+0xb8>)
 8028446:	4b18      	ldr	r3, [pc, #96]	; (80284a8 <arm_rfft_fast_init_f32+0xbc>)
 8028448:	e7e6      	b.n	8028418 <arm_rfft_fast_init_f32+0x2c>
 802844a:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 802844e:	4917      	ldr	r1, [pc, #92]	; (80284ac <arm_rfft_fast_init_f32+0xc0>)
 8028450:	4a17      	ldr	r2, [pc, #92]	; (80284b0 <arm_rfft_fast_init_f32+0xc4>)
 8028452:	4b18      	ldr	r3, [pc, #96]	; (80284b4 <arm_rfft_fast_init_f32+0xc8>)
 8028454:	e7e0      	b.n	8028418 <arm_rfft_fast_init_f32+0x2c>
 8028456:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 802845a:	d1ec      	bne.n	8028436 <arm_rfft_fast_init_f32+0x4a>
 802845c:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8028460:	4915      	ldr	r1, [pc, #84]	; (80284b8 <arm_rfft_fast_init_f32+0xcc>)
 8028462:	4a16      	ldr	r2, [pc, #88]	; (80284bc <arm_rfft_fast_init_f32+0xd0>)
 8028464:	4b16      	ldr	r3, [pc, #88]	; (80284c0 <arm_rfft_fast_init_f32+0xd4>)
 8028466:	e7d7      	b.n	8028418 <arm_rfft_fast_init_f32+0x2c>
 8028468:	2430      	movs	r4, #48	; 0x30
 802846a:	4916      	ldr	r1, [pc, #88]	; (80284c4 <arm_rfft_fast_init_f32+0xd8>)
 802846c:	4a16      	ldr	r2, [pc, #88]	; (80284c8 <arm_rfft_fast_init_f32+0xdc>)
 802846e:	4b17      	ldr	r3, [pc, #92]	; (80284cc <arm_rfft_fast_init_f32+0xe0>)
 8028470:	e7d2      	b.n	8028418 <arm_rfft_fast_init_f32+0x2c>
 8028472:	2414      	movs	r4, #20
 8028474:	4916      	ldr	r1, [pc, #88]	; (80284d0 <arm_rfft_fast_init_f32+0xe4>)
 8028476:	4a17      	ldr	r2, [pc, #92]	; (80284d4 <arm_rfft_fast_init_f32+0xe8>)
 8028478:	4b17      	ldr	r3, [pc, #92]	; (80284d8 <arm_rfft_fast_init_f32+0xec>)
 802847a:	e7cd      	b.n	8028418 <arm_rfft_fast_init_f32+0x2c>
 802847c:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8028480:	4916      	ldr	r1, [pc, #88]	; (80284dc <arm_rfft_fast_init_f32+0xf0>)
 8028482:	4a17      	ldr	r2, [pc, #92]	; (80284e0 <arm_rfft_fast_init_f32+0xf4>)
 8028484:	4b17      	ldr	r3, [pc, #92]	; (80284e4 <arm_rfft_fast_init_f32+0xf8>)
 8028486:	e7c7      	b.n	8028418 <arm_rfft_fast_init_f32+0x2c>
 8028488:	24d0      	movs	r4, #208	; 0xd0
 802848a:	4917      	ldr	r1, [pc, #92]	; (80284e8 <arm_rfft_fast_init_f32+0xfc>)
 802848c:	4a17      	ldr	r2, [pc, #92]	; (80284ec <arm_rfft_fast_init_f32+0x100>)
 802848e:	4b18      	ldr	r3, [pc, #96]	; (80284f0 <arm_rfft_fast_init_f32+0x104>)
 8028490:	e7c2      	b.n	8028418 <arm_rfft_fast_init_f32+0x2c>
 8028492:	bf00      	nop
 8028494:	0803dd50 	.word	0x0803dd50
 8028498:	0802ef48 	.word	0x0802ef48
 802849c:	080350b8 	.word	0x080350b8
 80284a0:	08033048 	.word	0x08033048
 80284a4:	0803fb10 	.word	0x0803fb10
 80284a8:	08042000 	.word	0x08042000
 80284ac:	0803ba38 	.word	0x0803ba38
 80284b0:	08039938 	.word	0x08039938
 80284b4:	080330b8 	.word	0x080330b8
 80284b8:	08041c90 	.word	0x08041c90
 80284bc:	080390b8 	.word	0x080390b8
 80284c0:	0803fd10 	.word	0x0803fd10
 80284c4:	0803c8f0 	.word	0x0803c8f0
 80284c8:	0803b938 	.word	0x0803b938
 80284cc:	08032f48 	.word	0x08032f48
 80284d0:	0803c848 	.word	0x0803c848
 80284d4:	080398b8 	.word	0x080398b8
 80284d8:	0803c870 	.word	0x0803c870
 80284dc:	08040510 	.word	0x08040510
 80284e0:	0803cd50 	.word	0x0803cd50
 80284e4:	08040890 	.word	0x08040890
 80284e8:	08042200 	.word	0x08042200
 80284ec:	0803c950 	.word	0x0803c950
 80284f0:	08041890 	.word	0x08041890

080284f4 <arm_rfft_fast_f32>:
 80284f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80284f8:	8a06      	ldrh	r6, [r0, #16]
 80284fa:	0876      	lsrs	r6, r6, #1
 80284fc:	4607      	mov	r7, r0
 80284fe:	4615      	mov	r5, r2
 8028500:	8006      	strh	r6, [r0, #0]
 8028502:	460c      	mov	r4, r1
 8028504:	2b00      	cmp	r3, #0
 8028506:	d15c      	bne.n	80285c2 <arm_rfft_fast_f32+0xce>
 8028508:	461a      	mov	r2, r3
 802850a:	2301      	movs	r3, #1
 802850c:	f000 fbe6 	bl	8028cdc <arm_cfft_f32>
 8028510:	edd4 7a00 	vldr	s15, [r4]
 8028514:	ed94 7a01 	vldr	s14, [r4, #4]
 8028518:	883e      	ldrh	r6, [r7, #0]
 802851a:	6978      	ldr	r0, [r7, #20]
 802851c:	ee37 7a07 	vadd.f32	s14, s14, s14
 8028520:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8028524:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028528:	ee77 6a87 	vadd.f32	s13, s15, s14
 802852c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028530:	3e01      	subs	r6, #1
 8028532:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8028536:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802853a:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 802853e:	ed85 7a00 	vstr	s14, [r5]
 8028542:	edc5 7a01 	vstr	s15, [r5, #4]
 8028546:	3010      	adds	r0, #16
 8028548:	f105 0210 	add.w	r2, r5, #16
 802854c:	3b08      	subs	r3, #8
 802854e:	f104 0110 	add.w	r1, r4, #16
 8028552:	ed51 4a02 	vldr	s9, [r1, #-8]
 8028556:	ed93 5a02 	vldr	s10, [r3, #8]
 802855a:	ed11 7a01 	vldr	s14, [r1, #-4]
 802855e:	ed10 6a02 	vldr	s12, [r0, #-8]
 8028562:	edd3 5a03 	vldr	s11, [r3, #12]
 8028566:	ed50 6a01 	vldr	s13, [r0, #-4]
 802856a:	ee75 7a64 	vsub.f32	s15, s10, s9
 802856e:	ee35 4a87 	vadd.f32	s8, s11, s14
 8028572:	ee35 5a24 	vadd.f32	s10, s10, s9
 8028576:	ee77 5a65 	vsub.f32	s11, s14, s11
 802857a:	ee66 4a27 	vmul.f32	s9, s12, s15
 802857e:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8028582:	ee34 5a85 	vadd.f32	s10, s9, s10
 8028586:	ee26 6a04 	vmul.f32	s12, s12, s8
 802858a:	ee66 6a84 	vmul.f32	s13, s13, s8
 802858e:	ee77 7a25 	vadd.f32	s15, s14, s11
 8028592:	ee76 6a85 	vadd.f32	s13, s13, s10
 8028596:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802859a:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802859e:	ee67 7aa3 	vmul.f32	s15, s15, s7
 80285a2:	3e01      	subs	r6, #1
 80285a4:	ed42 6a02 	vstr	s13, [r2, #-8]
 80285a8:	ed42 7a01 	vstr	s15, [r2, #-4]
 80285ac:	f1a3 0308 	sub.w	r3, r3, #8
 80285b0:	f101 0108 	add.w	r1, r1, #8
 80285b4:	f100 0008 	add.w	r0, r0, #8
 80285b8:	f102 0208 	add.w	r2, r2, #8
 80285bc:	d1c9      	bne.n	8028552 <arm_rfft_fast_f32+0x5e>
 80285be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80285c2:	edd1 7a00 	vldr	s15, [r1]
 80285c6:	edd1 6a01 	vldr	s13, [r1, #4]
 80285ca:	6941      	ldr	r1, [r0, #20]
 80285cc:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80285d0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80285d4:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 80285d8:	ee27 7a23 	vmul.f32	s14, s14, s7
 80285dc:	ee67 7aa3 	vmul.f32	s15, s15, s7
 80285e0:	3e01      	subs	r6, #1
 80285e2:	ed82 7a00 	vstr	s14, [r2]
 80285e6:	edc2 7a01 	vstr	s15, [r2, #4]
 80285ea:	00f0      	lsls	r0, r6, #3
 80285ec:	b3ee      	cbz	r6, 802866a <arm_rfft_fast_f32+0x176>
 80285ee:	3808      	subs	r0, #8
 80285f0:	f101 0e10 	add.w	lr, r1, #16
 80285f4:	4420      	add	r0, r4
 80285f6:	f104 0110 	add.w	r1, r4, #16
 80285fa:	f102 0c10 	add.w	ip, r2, #16
 80285fe:	ed90 7a02 	vldr	s14, [r0, #8]
 8028602:	ed51 6a02 	vldr	s13, [r1, #-8]
 8028606:	ed1e 6a02 	vldr	s12, [lr, #-8]
 802860a:	ed90 4a03 	vldr	s8, [r0, #12]
 802860e:	ed11 5a01 	vldr	s10, [r1, #-4]
 8028612:	ed5e 5a01 	vldr	s11, [lr, #-4]
 8028616:	ee76 7ac7 	vsub.f32	s15, s13, s14
 802861a:	ee74 4a05 	vadd.f32	s9, s8, s10
 802861e:	ee26 3a27 	vmul.f32	s6, s12, s15
 8028622:	ee77 6a26 	vadd.f32	s13, s14, s13
 8028626:	ee35 5a44 	vsub.f32	s10, s10, s8
 802862a:	ee25 7aa7 	vmul.f32	s14, s11, s15
 802862e:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028632:	ee77 7a05 	vadd.f32	s15, s14, s10
 8028636:	ee26 6a24 	vmul.f32	s12, s12, s9
 802863a:	ee65 5aa4 	vmul.f32	s11, s11, s9
 802863e:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028642:	ee36 7ae5 	vsub.f32	s14, s13, s11
 8028646:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802864a:	ee27 7a23 	vmul.f32	s14, s14, s7
 802864e:	3e01      	subs	r6, #1
 8028650:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8028654:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8028658:	f1a0 0008 	sub.w	r0, r0, #8
 802865c:	f101 0108 	add.w	r1, r1, #8
 8028660:	f10e 0e08 	add.w	lr, lr, #8
 8028664:	f10c 0c08 	add.w	ip, ip, #8
 8028668:	d1c9      	bne.n	80285fe <arm_rfft_fast_f32+0x10a>
 802866a:	4638      	mov	r0, r7
 802866c:	4629      	mov	r1, r5
 802866e:	461a      	mov	r2, r3
 8028670:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8028674:	2301      	movs	r3, #1
 8028676:	f000 bb31 	b.w	8028cdc <arm_cfft_f32>
 802867a:	bf00      	nop

0802867c <arm_cfft_radix8by2_f32>:
 802867c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028680:	ed2d 8b08 	vpush	{d8-d11}
 8028684:	f8b0 e000 	ldrh.w	lr, [r0]
 8028688:	6842      	ldr	r2, [r0, #4]
 802868a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802868e:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 8028692:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 8028696:	4607      	mov	r7, r0
 8028698:	ea4f 038c 	mov.w	r3, ip, lsl #2
 802869c:	f000 80af 	beq.w	80287fe <arm_cfft_radix8by2_f32+0x182>
 80286a0:	3310      	adds	r3, #16
 80286a2:	18ce      	adds	r6, r1, r3
 80286a4:	3210      	adds	r2, #16
 80286a6:	4443      	add	r3, r8
 80286a8:	f101 0510 	add.w	r5, r1, #16
 80286ac:	f108 0410 	add.w	r4, r8, #16
 80286b0:	ed54 1a04 	vldr	s3, [r4, #-16]
 80286b4:	ed13 4a04 	vldr	s8, [r3, #-16]
 80286b8:	ed53 3a03 	vldr	s7, [r3, #-12]
 80286bc:	ed53 5a02 	vldr	s11, [r3, #-8]
 80286c0:	ed13 5a01 	vldr	s10, [r3, #-4]
 80286c4:	ed54 6a03 	vldr	s13, [r4, #-12]
 80286c8:	ed14 0a02 	vldr	s0, [r4, #-8]
 80286cc:	ed16 2a04 	vldr	s4, [r6, #-16]
 80286d0:	ed56 2a03 	vldr	s5, [r6, #-12]
 80286d4:	ed15 6a03 	vldr	s12, [r5, #-12]
 80286d8:	ed15 7a01 	vldr	s14, [r5, #-4]
 80286dc:	ed15 3a04 	vldr	s6, [r5, #-16]
 80286e0:	ed54 7a01 	vldr	s15, [r4, #-4]
 80286e4:	ed56 0a02 	vldr	s1, [r6, #-8]
 80286e8:	ed16 1a01 	vldr	s2, [r6, #-4]
 80286ec:	ed55 4a02 	vldr	s9, [r5, #-8]
 80286f0:	ee73 ba21 	vadd.f32	s23, s6, s3
 80286f4:	ee36 ba26 	vadd.f32	s22, s12, s13
 80286f8:	ee37 aa27 	vadd.f32	s20, s14, s15
 80286fc:	ee72 9a04 	vadd.f32	s19, s4, s8
 8028700:	ee32 9aa3 	vadd.f32	s18, s5, s7
 8028704:	ee31 8a05 	vadd.f32	s16, s2, s10
 8028708:	ee74 aa80 	vadd.f32	s21, s9, s0
 802870c:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8028710:	ed45 ba04 	vstr	s23, [r5, #-16]
 8028714:	ed05 ba03 	vstr	s22, [r5, #-12]
 8028718:	ed45 aa02 	vstr	s21, [r5, #-8]
 802871c:	ed05 aa01 	vstr	s20, [r5, #-4]
 8028720:	ed06 8a01 	vstr	s16, [r6, #-4]
 8028724:	ed46 9a04 	vstr	s19, [r6, #-16]
 8028728:	ed06 9a03 	vstr	s18, [r6, #-12]
 802872c:	ed46 8a02 	vstr	s17, [r6, #-8]
 8028730:	ee76 6a66 	vsub.f32	s13, s12, s13
 8028734:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8028738:	ed12 6a03 	vldr	s12, [r2, #-12]
 802873c:	ed52 2a04 	vldr	s5, [r2, #-16]
 8028740:	ee33 3a61 	vsub.f32	s6, s6, s3
 8028744:	ee34 4a42 	vsub.f32	s8, s8, s4
 8028748:	ee26 8a86 	vmul.f32	s16, s13, s12
 802874c:	ee24 2a06 	vmul.f32	s4, s8, s12
 8028750:	ee63 1a22 	vmul.f32	s3, s6, s5
 8028754:	ee24 4a22 	vmul.f32	s8, s8, s5
 8028758:	ee23 3a06 	vmul.f32	s6, s6, s12
 802875c:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8028760:	ee23 6a86 	vmul.f32	s12, s7, s12
 8028764:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8028768:	ee36 6a04 	vadd.f32	s12, s12, s8
 802876c:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028770:	ee72 3a63 	vsub.f32	s7, s4, s7
 8028774:	ee71 2a88 	vadd.f32	s5, s3, s16
 8028778:	ed44 6a03 	vstr	s13, [r4, #-12]
 802877c:	ed44 2a04 	vstr	s5, [r4, #-16]
 8028780:	ed43 3a04 	vstr	s7, [r3, #-16]
 8028784:	ed03 6a03 	vstr	s12, [r3, #-12]
 8028788:	ee77 7a67 	vsub.f32	s15, s14, s15
 802878c:	ee75 6ae0 	vsub.f32	s13, s11, s1
 8028790:	ed12 7a01 	vldr	s14, [r2, #-4]
 8028794:	ed52 5a02 	vldr	s11, [r2, #-8]
 8028798:	ee35 6a41 	vsub.f32	s12, s10, s2
 802879c:	ee74 4ac0 	vsub.f32	s9, s9, s0
 80287a0:	ee67 3a87 	vmul.f32	s7, s15, s14
 80287a4:	ee26 5a87 	vmul.f32	s10, s13, s14
 80287a8:	ee24 4aa5 	vmul.f32	s8, s9, s11
 80287ac:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80287b0:	ee64 4a87 	vmul.f32	s9, s9, s14
 80287b4:	ee66 6aa5 	vmul.f32	s13, s13, s11
 80287b8:	ee26 7a07 	vmul.f32	s14, s12, s14
 80287bc:	ee26 6a25 	vmul.f32	s12, s12, s11
 80287c0:	ee77 7ae4 	vsub.f32	s15, s15, s9
 80287c4:	ee74 5a23 	vadd.f32	s11, s8, s7
 80287c8:	ee35 6a46 	vsub.f32	s12, s10, s12
 80287cc:	ee37 7a26 	vadd.f32	s14, s14, s13
 80287d0:	f1be 0e01 	subs.w	lr, lr, #1
 80287d4:	ed44 5a02 	vstr	s11, [r4, #-8]
 80287d8:	f105 0510 	add.w	r5, r5, #16
 80287dc:	ed44 7a01 	vstr	s15, [r4, #-4]
 80287e0:	f106 0610 	add.w	r6, r6, #16
 80287e4:	ed03 6a02 	vstr	s12, [r3, #-8]
 80287e8:	ed03 7a01 	vstr	s14, [r3, #-4]
 80287ec:	f102 0210 	add.w	r2, r2, #16
 80287f0:	f104 0410 	add.w	r4, r4, #16
 80287f4:	f103 0310 	add.w	r3, r3, #16
 80287f8:	f47f af5a 	bne.w	80286b0 <arm_cfft_radix8by2_f32+0x34>
 80287fc:	687a      	ldr	r2, [r7, #4]
 80287fe:	fa1f f48c 	uxth.w	r4, ip
 8028802:	4608      	mov	r0, r1
 8028804:	2302      	movs	r3, #2
 8028806:	4621      	mov	r1, r4
 8028808:	f000 fbca 	bl	8028fa0 <arm_radix8_butterfly_f32>
 802880c:	ecbd 8b08 	vpop	{d8-d11}
 8028810:	4640      	mov	r0, r8
 8028812:	4621      	mov	r1, r4
 8028814:	687a      	ldr	r2, [r7, #4]
 8028816:	2302      	movs	r3, #2
 8028818:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802881c:	f000 bbc0 	b.w	8028fa0 <arm_radix8_butterfly_f32>

08028820 <arm_cfft_radix8by4_f32>:
 8028820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028824:	ed2d 8b0a 	vpush	{d8-d12}
 8028828:	8802      	ldrh	r2, [r0, #0]
 802882a:	ed91 6a00 	vldr	s12, [r1]
 802882e:	b08f      	sub	sp, #60	; 0x3c
 8028830:	460f      	mov	r7, r1
 8028832:	0852      	lsrs	r2, r2, #1
 8028834:	0093      	lsls	r3, r2, #2
 8028836:	900c      	str	r0, [sp, #48]	; 0x30
 8028838:	9103      	str	r1, [sp, #12]
 802883a:	6841      	ldr	r1, [r0, #4]
 802883c:	ed97 7a01 	vldr	s14, [r7, #4]
 8028840:	4638      	mov	r0, r7
 8028842:	4418      	add	r0, r3
 8028844:	4606      	mov	r6, r0
 8028846:	9009      	str	r0, [sp, #36]	; 0x24
 8028848:	4418      	add	r0, r3
 802884a:	edd0 6a00 	vldr	s13, [r0]
 802884e:	edd6 3a00 	vldr	s7, [r6]
 8028852:	edd6 2a01 	vldr	s5, [r6, #4]
 8028856:	edd0 7a01 	vldr	s15, [r0, #4]
 802885a:	900a      	str	r0, [sp, #40]	; 0x28
 802885c:	ee76 5a26 	vadd.f32	s11, s12, s13
 8028860:	4604      	mov	r4, r0
 8028862:	4625      	mov	r5, r4
 8028864:	441c      	add	r4, r3
 8028866:	ed94 4a00 	vldr	s8, [r4]
 802886a:	ed94 5a01 	vldr	s10, [r4, #4]
 802886e:	9401      	str	r4, [sp, #4]
 8028870:	ee75 4aa3 	vadd.f32	s9, s11, s7
 8028874:	4630      	mov	r0, r6
 8028876:	ee74 4a24 	vadd.f32	s9, s8, s9
 802887a:	463e      	mov	r6, r7
 802887c:	ee14 ea90 	vmov	lr, s9
 8028880:	ee76 6a66 	vsub.f32	s13, s12, s13
 8028884:	f846 eb08 	str.w	lr, [r6], #8
 8028888:	ee37 6a27 	vadd.f32	s12, s14, s15
 802888c:	edd0 4a01 	vldr	s9, [r0, #4]
 8028890:	9604      	str	r6, [sp, #16]
 8028892:	ee77 7a67 	vsub.f32	s15, s14, s15
 8028896:	9e01      	ldr	r6, [sp, #4]
 8028898:	ee32 3aa6 	vadd.f32	s6, s5, s13
 802889c:	ed96 2a01 	vldr	s4, [r6, #4]
 80288a0:	ee36 7a24 	vadd.f32	s14, s12, s9
 80288a4:	ee75 5ae3 	vsub.f32	s11, s11, s7
 80288a8:	ee77 4ae3 	vsub.f32	s9, s15, s7
 80288ac:	ee36 6a62 	vsub.f32	s12, s12, s5
 80288b0:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80288b4:	ee76 6ae2 	vsub.f32	s13, s13, s5
 80288b8:	ee73 3a45 	vsub.f32	s7, s6, s10
 80288bc:	4604      	mov	r4, r0
 80288be:	ee36 6a45 	vsub.f32	s12, s12, s10
 80288c2:	ee75 6a26 	vadd.f32	s13, s10, s13
 80288c6:	46a3      	mov	fp, r4
 80288c8:	ee37 7a02 	vadd.f32	s14, s14, s4
 80288cc:	ee34 5a84 	vadd.f32	s10, s9, s8
 80288d0:	ee13 8a90 	vmov	r8, s7
 80288d4:	46a4      	mov	ip, r4
 80288d6:	ee75 5ac4 	vsub.f32	s11, s11, s8
 80288da:	ed87 7a01 	vstr	s14, [r7, #4]
 80288de:	f84b 8b08 	str.w	r8, [fp], #8
 80288e2:	f1ac 0704 	sub.w	r7, ip, #4
 80288e6:	ed8c 5a01 	vstr	s10, [ip, #4]
 80288ea:	f101 0c08 	add.w	ip, r1, #8
 80288ee:	462c      	mov	r4, r5
 80288f0:	f8cd c014 	str.w	ip, [sp, #20]
 80288f4:	ee15 ca90 	vmov	ip, s11
 80288f8:	f844 cb08 	str.w	ip, [r4], #8
 80288fc:	9407      	str	r4, [sp, #28]
 80288fe:	f101 0410 	add.w	r4, r1, #16
 8028902:	ed85 6a01 	vstr	s12, [r5, #4]
 8028906:	0852      	lsrs	r2, r2, #1
 8028908:	9402      	str	r4, [sp, #8]
 802890a:	462c      	mov	r4, r5
 802890c:	f101 0518 	add.w	r5, r1, #24
 8028910:	920b      	str	r2, [sp, #44]	; 0x2c
 8028912:	46b2      	mov	sl, r6
 8028914:	9506      	str	r5, [sp, #24]
 8028916:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802891a:	3a02      	subs	r2, #2
 802891c:	ee16 5a90 	vmov	r5, s13
 8028920:	46b6      	mov	lr, r6
 8028922:	4630      	mov	r0, r6
 8028924:	0852      	lsrs	r2, r2, #1
 8028926:	f84a 5b08 	str.w	r5, [sl], #8
 802892a:	f1a0 0604 	sub.w	r6, r0, #4
 802892e:	edce 7a01 	vstr	s15, [lr, #4]
 8028932:	9208      	str	r2, [sp, #32]
 8028934:	f000 8130 	beq.w	8028b98 <arm_cfft_radix8by4_f32+0x378>
 8028938:	4691      	mov	r9, r2
 802893a:	9a03      	ldr	r2, [sp, #12]
 802893c:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8028940:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8028944:	3b08      	subs	r3, #8
 8028946:	f102 0510 	add.w	r5, r2, #16
 802894a:	f101 0c20 	add.w	ip, r1, #32
 802894e:	f1a4 020c 	sub.w	r2, r4, #12
 8028952:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 8028956:	4433      	add	r3, r6
 8028958:	3410      	adds	r4, #16
 802895a:	4650      	mov	r0, sl
 802895c:	4659      	mov	r1, fp
 802895e:	ed55 3a02 	vldr	s7, [r5, #-8]
 8028962:	ed14 5a02 	vldr	s10, [r4, #-8]
 8028966:	ed91 7a00 	vldr	s14, [r1]
 802896a:	edd0 7a00 	vldr	s15, [r0]
 802896e:	ed15 4a01 	vldr	s8, [r5, #-4]
 8028972:	ed54 5a01 	vldr	s11, [r4, #-4]
 8028976:	edd0 6a01 	vldr	s13, [r0, #4]
 802897a:	ed91 6a01 	vldr	s12, [r1, #4]
 802897e:	ee33 8a85 	vadd.f32	s16, s7, s10
 8028982:	ee34 0a25 	vadd.f32	s0, s8, s11
 8028986:	ee78 4a07 	vadd.f32	s9, s16, s14
 802898a:	ee74 5a65 	vsub.f32	s11, s8, s11
 802898e:	ee77 4aa4 	vadd.f32	s9, s15, s9
 8028992:	ee33 5ac5 	vsub.f32	s10, s7, s10
 8028996:	ed45 4a02 	vstr	s9, [r5, #-8]
 802899a:	edd1 4a01 	vldr	s9, [r1, #4]
 802899e:	ed90 4a01 	vldr	s8, [r0, #4]
 80289a2:	ee70 4a24 	vadd.f32	s9, s0, s9
 80289a6:	ee76 aa05 	vadd.f32	s21, s12, s10
 80289aa:	ee74 4a84 	vadd.f32	s9, s9, s8
 80289ae:	ee35 aac7 	vsub.f32	s20, s11, s14
 80289b2:	ed45 4a01 	vstr	s9, [r5, #-4]
 80289b6:	edd6 1a00 	vldr	s3, [r6]
 80289ba:	edd7 0a00 	vldr	s1, [r7]
 80289be:	ed92 4a02 	vldr	s8, [r2, #8]
 80289c2:	edd3 3a02 	vldr	s7, [r3, #8]
 80289c6:	ed93 2a01 	vldr	s4, [r3, #4]
 80289ca:	ed16 1a01 	vldr	s2, [r6, #-4]
 80289ce:	edd2 2a01 	vldr	s5, [r2, #4]
 80289d2:	ed57 9a01 	vldr	s19, [r7, #-4]
 80289d6:	ee70 4aa1 	vadd.f32	s9, s1, s3
 80289da:	ee39 3a81 	vadd.f32	s6, s19, s2
 80289de:	ee74 8a84 	vadd.f32	s17, s9, s8
 80289e2:	ee70 1ae1 	vsub.f32	s3, s1, s3
 80289e6:	ee73 8aa8 	vadd.f32	s17, s7, s17
 80289ea:	ee7a aae6 	vsub.f32	s21, s21, s13
 80289ee:	ee18 aa90 	vmov	sl, s17
 80289f2:	f847 a908 	str.w	sl, [r7], #-8
 80289f6:	edd2 8a01 	vldr	s17, [r2, #4]
 80289fa:	ed93 9a01 	vldr	s18, [r3, #4]
 80289fe:	ee73 8a28 	vadd.f32	s17, s6, s17
 8028a02:	ee3a aa27 	vadd.f32	s20, s20, s15
 8028a06:	ee78 8a89 	vadd.f32	s17, s17, s18
 8028a0a:	ee74 0a63 	vsub.f32	s1, s8, s7
 8028a0e:	edc7 8a01 	vstr	s17, [r7, #4]
 8028a12:	ed18 ba02 	vldr	s22, [r8, #-8]
 8028a16:	ed58 8a01 	vldr	s17, [r8, #-4]
 8028a1a:	ee39 1ac1 	vsub.f32	s2, s19, s2
 8028a1e:	ee6a ba28 	vmul.f32	s23, s20, s17
 8028a22:	ee2a ca8b 	vmul.f32	s24, s21, s22
 8028a26:	ee71 9ae2 	vsub.f32	s19, s3, s5
 8028a2a:	ee30 9a81 	vadd.f32	s18, s1, s2
 8028a2e:	ee79 9a82 	vadd.f32	s19, s19, s4
 8028a32:	ee3c ca2b 	vadd.f32	s24, s24, s23
 8028a36:	ee6a aaa8 	vmul.f32	s21, s21, s17
 8028a3a:	ee69 baa8 	vmul.f32	s23, s19, s17
 8028a3e:	ee2a aa0b 	vmul.f32	s20, s20, s22
 8028a42:	ee69 9a8b 	vmul.f32	s19, s19, s22
 8028a46:	ee69 8a28 	vmul.f32	s17, s18, s17
 8028a4a:	ee29 ba0b 	vmul.f32	s22, s18, s22
 8028a4e:	ee1c aa10 	vmov	sl, s24
 8028a52:	ee78 8aa9 	vadd.f32	s17, s17, s19
 8028a56:	f841 ab08 	str.w	sl, [r1], #8
 8028a5a:	ee3a aa6a 	vsub.f32	s20, s20, s21
 8028a5e:	ee3b bacb 	vsub.f32	s22, s23, s22
 8028a62:	ee34 4ac4 	vsub.f32	s8, s9, s8
 8028a66:	ee33 3a62 	vsub.f32	s6, s6, s5
 8028a6a:	ed01 aa01 	vstr	s20, [r1, #-4]
 8028a6e:	edc2 8a01 	vstr	s17, [r2, #4]
 8028a72:	ed82 ba02 	vstr	s22, [r2, #8]
 8028a76:	ed5c 4a04 	vldr	s9, [ip, #-16]
 8028a7a:	ee74 3a63 	vsub.f32	s7, s8, s7
 8028a7e:	ee38 8a47 	vsub.f32	s16, s16, s14
 8028a82:	ed1c 4a03 	vldr	s8, [ip, #-12]
 8028a86:	ee30 0a46 	vsub.f32	s0, s0, s12
 8028a8a:	ee33 3a42 	vsub.f32	s6, s6, s4
 8028a8e:	ee38 8a67 	vsub.f32	s16, s16, s15
 8028a92:	ee30 0a66 	vsub.f32	s0, s0, s13
 8028a96:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 8028a9a:	ee63 8a04 	vmul.f32	s17, s6, s8
 8028a9e:	ee28 aa24 	vmul.f32	s20, s16, s9
 8028aa2:	ee60 9a04 	vmul.f32	s19, s0, s8
 8028aa6:	ee28 8a04 	vmul.f32	s16, s16, s8
 8028aaa:	ee20 0a24 	vmul.f32	s0, s0, s9
 8028aae:	ee63 3a84 	vmul.f32	s7, s7, s8
 8028ab2:	ee39 4a68 	vsub.f32	s8, s18, s17
 8028ab6:	ee7a 9a29 	vadd.f32	s19, s20, s19
 8028aba:	ee14 aa10 	vmov	sl, s8
 8028abe:	ee30 0a48 	vsub.f32	s0, s0, s16
 8028ac2:	ee63 4a24 	vmul.f32	s9, s6, s9
 8028ac6:	ed44 9a02 	vstr	s19, [r4, #-8]
 8028aca:	ee73 3ae4 	vsub.f32	s7, s7, s9
 8028ace:	ed04 0a01 	vstr	s0, [r4, #-4]
 8028ad2:	f846 a908 	str.w	sl, [r6], #-8
 8028ad6:	ee35 6a46 	vsub.f32	s12, s10, s12
 8028ada:	ee35 7a87 	vadd.f32	s14, s11, s14
 8028ade:	edc6 3a01 	vstr	s7, [r6, #4]
 8028ae2:	ee76 6a86 	vadd.f32	s13, s13, s12
 8028ae6:	ee77 7a67 	vsub.f32	s15, s14, s15
 8028aea:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 8028aee:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 8028af2:	ee67 5a86 	vmul.f32	s11, s15, s12
 8028af6:	ee26 5a87 	vmul.f32	s10, s13, s14
 8028afa:	ee72 2a62 	vsub.f32	s5, s4, s5
 8028afe:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8028b02:	ee72 2ae1 	vsub.f32	s5, s5, s3
 8028b06:	ee75 5a25 	vadd.f32	s11, s10, s11
 8028b0a:	ee62 0a86 	vmul.f32	s1, s5, s12
 8028b0e:	ee66 6a86 	vmul.f32	s13, s13, s12
 8028b12:	ee67 7a87 	vmul.f32	s15, s15, s14
 8028b16:	ee21 6a06 	vmul.f32	s12, s2, s12
 8028b1a:	ee62 2a87 	vmul.f32	s5, s5, s14
 8028b1e:	ee21 1a07 	vmul.f32	s2, s2, s14
 8028b22:	ee15 aa90 	vmov	sl, s11
 8028b26:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8028b2a:	f840 ab08 	str.w	sl, [r0], #8
 8028b2e:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8028b32:	ee76 2a22 	vadd.f32	s5, s12, s5
 8028b36:	f1b9 0901 	subs.w	r9, r9, #1
 8028b3a:	ed40 7a01 	vstr	s15, [r0, #-4]
 8028b3e:	f105 0508 	add.w	r5, r5, #8
 8028b42:	ed83 1a02 	vstr	s2, [r3, #8]
 8028b46:	edc3 2a01 	vstr	s5, [r3, #4]
 8028b4a:	f108 0808 	add.w	r8, r8, #8
 8028b4e:	f1a2 0208 	sub.w	r2, r2, #8
 8028b52:	f10c 0c10 	add.w	ip, ip, #16
 8028b56:	f104 0408 	add.w	r4, r4, #8
 8028b5a:	f10e 0e18 	add.w	lr, lr, #24
 8028b5e:	f1a3 0308 	sub.w	r3, r3, #8
 8028b62:	f47f aefc 	bne.w	802895e <arm_cfft_radix8by4_f32+0x13e>
 8028b66:	9908      	ldr	r1, [sp, #32]
 8028b68:	9802      	ldr	r0, [sp, #8]
 8028b6a:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 8028b6e:	00cb      	lsls	r3, r1, #3
 8028b70:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 8028b74:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8028b78:	9102      	str	r1, [sp, #8]
 8028b7a:	9904      	ldr	r1, [sp, #16]
 8028b7c:	4419      	add	r1, r3
 8028b7e:	9104      	str	r1, [sp, #16]
 8028b80:	9905      	ldr	r1, [sp, #20]
 8028b82:	4419      	add	r1, r3
 8028b84:	9105      	str	r1, [sp, #20]
 8028b86:	9907      	ldr	r1, [sp, #28]
 8028b88:	449b      	add	fp, r3
 8028b8a:	4419      	add	r1, r3
 8028b8c:	449a      	add	sl, r3
 8028b8e:	9b06      	ldr	r3, [sp, #24]
 8028b90:	9107      	str	r1, [sp, #28]
 8028b92:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8028b96:	9306      	str	r3, [sp, #24]
 8028b98:	9a04      	ldr	r2, [sp, #16]
 8028b9a:	9807      	ldr	r0, [sp, #28]
 8028b9c:	edd2 3a00 	vldr	s7, [r2]
 8028ba0:	ed90 4a00 	vldr	s8, [r0]
 8028ba4:	eddb 7a00 	vldr	s15, [fp]
 8028ba8:	ed9a 3a00 	vldr	s6, [sl]
 8028bac:	edd2 4a01 	vldr	s9, [r2, #4]
 8028bb0:	ed90 7a01 	vldr	s14, [r0, #4]
 8028bb4:	ed9b 2a01 	vldr	s4, [fp, #4]
 8028bb8:	edda 5a01 	vldr	s11, [sl, #4]
 8028bbc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8028bc0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8028bc2:	ee73 6a84 	vadd.f32	s13, s7, s8
 8028bc6:	ee34 6a87 	vadd.f32	s12, s9, s14
 8028bca:	ee36 5aa7 	vadd.f32	s10, s13, s15
 8028bce:	ee34 7ac7 	vsub.f32	s14, s9, s14
 8028bd2:	ee33 5a05 	vadd.f32	s10, s6, s10
 8028bd6:	ee33 4ac4 	vsub.f32	s8, s7, s8
 8028bda:	ed82 5a00 	vstr	s10, [r2]
 8028bde:	ed9b 5a01 	vldr	s10, [fp, #4]
 8028be2:	edda 4a01 	vldr	s9, [sl, #4]
 8028be6:	ee36 5a05 	vadd.f32	s10, s12, s10
 8028bea:	ee72 3a04 	vadd.f32	s7, s4, s8
 8028bee:	ee35 5a24 	vadd.f32	s10, s10, s9
 8028bf2:	ee77 4a67 	vsub.f32	s9, s14, s15
 8028bf6:	ed82 5a01 	vstr	s10, [r2, #4]
 8028bfa:	9a05      	ldr	r2, [sp, #20]
 8028bfc:	ee34 5a83 	vadd.f32	s10, s9, s6
 8028c00:	edd2 1a00 	vldr	s3, [r2]
 8028c04:	edd2 2a01 	vldr	s5, [r2, #4]
 8028c08:	9a02      	ldr	r2, [sp, #8]
 8028c0a:	ee73 3ae5 	vsub.f32	s7, s7, s11
 8028c0e:	ee36 6a42 	vsub.f32	s12, s12, s4
 8028c12:	ee63 4aa1 	vmul.f32	s9, s7, s3
 8028c16:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8028c1a:	ee65 2a22 	vmul.f32	s5, s10, s5
 8028c1e:	ee25 5a21 	vmul.f32	s10, s10, s3
 8028c22:	ee74 2aa2 	vadd.f32	s5, s9, s5
 8028c26:	ee35 5a63 	vsub.f32	s10, s10, s7
 8028c2a:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8028c2e:	edcb 2a00 	vstr	s5, [fp]
 8028c32:	ed8b 5a01 	vstr	s10, [fp, #4]
 8028c36:	edd2 3a01 	vldr	s7, [r2, #4]
 8028c3a:	ed92 5a00 	vldr	s10, [r2]
 8028c3e:	9a06      	ldr	r2, [sp, #24]
 8028c40:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028c44:	ee36 6a65 	vsub.f32	s12, s12, s11
 8028c48:	ee66 4a85 	vmul.f32	s9, s13, s10
 8028c4c:	ee26 5a05 	vmul.f32	s10, s12, s10
 8028c50:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8028c54:	ee26 6a23 	vmul.f32	s12, s12, s7
 8028c58:	ee75 6a66 	vsub.f32	s13, s10, s13
 8028c5c:	ee34 6a86 	vadd.f32	s12, s9, s12
 8028c60:	ee34 4a42 	vsub.f32	s8, s8, s4
 8028c64:	ee37 7a27 	vadd.f32	s14, s14, s15
 8028c68:	edc0 6a01 	vstr	s13, [r0, #4]
 8028c6c:	ed80 6a00 	vstr	s12, [r0]
 8028c70:	ed92 6a01 	vldr	s12, [r2, #4]
 8028c74:	9803      	ldr	r0, [sp, #12]
 8028c76:	ee77 7a43 	vsub.f32	s15, s14, s6
 8028c7a:	ee75 5a84 	vadd.f32	s11, s11, s8
 8028c7e:	ed92 7a00 	vldr	s14, [r2]
 8028c82:	ee65 6a87 	vmul.f32	s13, s11, s14
 8028c86:	ee27 7a87 	vmul.f32	s14, s15, s14
 8028c8a:	ee65 5a86 	vmul.f32	s11, s11, s12
 8028c8e:	ee67 7a86 	vmul.f32	s15, s15, s12
 8028c92:	ee77 5a65 	vsub.f32	s11, s14, s11
 8028c96:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8028c9a:	edca 5a01 	vstr	s11, [sl, #4]
 8028c9e:	edca 7a00 	vstr	s15, [sl]
 8028ca2:	6872      	ldr	r2, [r6, #4]
 8028ca4:	4621      	mov	r1, r4
 8028ca6:	2304      	movs	r3, #4
 8028ca8:	f000 f97a 	bl	8028fa0 <arm_radix8_butterfly_f32>
 8028cac:	9809      	ldr	r0, [sp, #36]	; 0x24
 8028cae:	6872      	ldr	r2, [r6, #4]
 8028cb0:	4621      	mov	r1, r4
 8028cb2:	2304      	movs	r3, #4
 8028cb4:	f000 f974 	bl	8028fa0 <arm_radix8_butterfly_f32>
 8028cb8:	980a      	ldr	r0, [sp, #40]	; 0x28
 8028cba:	6872      	ldr	r2, [r6, #4]
 8028cbc:	4621      	mov	r1, r4
 8028cbe:	2304      	movs	r3, #4
 8028cc0:	f000 f96e 	bl	8028fa0 <arm_radix8_butterfly_f32>
 8028cc4:	9801      	ldr	r0, [sp, #4]
 8028cc6:	6872      	ldr	r2, [r6, #4]
 8028cc8:	4621      	mov	r1, r4
 8028cca:	2304      	movs	r3, #4
 8028ccc:	b00f      	add	sp, #60	; 0x3c
 8028cce:	ecbd 8b0a 	vpop	{d8-d12}
 8028cd2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028cd6:	f000 b963 	b.w	8028fa0 <arm_radix8_butterfly_f32>
 8028cda:	bf00      	nop

08028cdc <arm_cfft_f32>:
 8028cdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028ce0:	2a01      	cmp	r2, #1
 8028ce2:	4606      	mov	r6, r0
 8028ce4:	4617      	mov	r7, r2
 8028ce6:	460c      	mov	r4, r1
 8028ce8:	4698      	mov	r8, r3
 8028cea:	8805      	ldrh	r5, [r0, #0]
 8028cec:	d054      	beq.n	8028d98 <arm_cfft_f32+0xbc>
 8028cee:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8028cf2:	d04c      	beq.n	8028d8e <arm_cfft_f32+0xb2>
 8028cf4:	d916      	bls.n	8028d24 <arm_cfft_f32+0x48>
 8028cf6:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 8028cfa:	d01a      	beq.n	8028d32 <arm_cfft_f32+0x56>
 8028cfc:	d95c      	bls.n	8028db8 <arm_cfft_f32+0xdc>
 8028cfe:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 8028d02:	d044      	beq.n	8028d8e <arm_cfft_f32+0xb2>
 8028d04:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 8028d08:	d105      	bne.n	8028d16 <arm_cfft_f32+0x3a>
 8028d0a:	4620      	mov	r0, r4
 8028d0c:	4629      	mov	r1, r5
 8028d0e:	6872      	ldr	r2, [r6, #4]
 8028d10:	2301      	movs	r3, #1
 8028d12:	f000 f945 	bl	8028fa0 <arm_radix8_butterfly_f32>
 8028d16:	f1b8 0f00 	cmp.w	r8, #0
 8028d1a:	d111      	bne.n	8028d40 <arm_cfft_f32+0x64>
 8028d1c:	2f01      	cmp	r7, #1
 8028d1e:	d016      	beq.n	8028d4e <arm_cfft_f32+0x72>
 8028d20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028d24:	2d20      	cmp	r5, #32
 8028d26:	d032      	beq.n	8028d8e <arm_cfft_f32+0xb2>
 8028d28:	d94a      	bls.n	8028dc0 <arm_cfft_f32+0xe4>
 8028d2a:	2d40      	cmp	r5, #64	; 0x40
 8028d2c:	d0ed      	beq.n	8028d0a <arm_cfft_f32+0x2e>
 8028d2e:	2d80      	cmp	r5, #128	; 0x80
 8028d30:	d1f1      	bne.n	8028d16 <arm_cfft_f32+0x3a>
 8028d32:	4630      	mov	r0, r6
 8028d34:	4621      	mov	r1, r4
 8028d36:	f7ff fca1 	bl	802867c <arm_cfft_radix8by2_f32>
 8028d3a:	f1b8 0f00 	cmp.w	r8, #0
 8028d3e:	d0ed      	beq.n	8028d1c <arm_cfft_f32+0x40>
 8028d40:	4620      	mov	r0, r4
 8028d42:	89b1      	ldrh	r1, [r6, #12]
 8028d44:	68b2      	ldr	r2, [r6, #8]
 8028d46:	f7d7 fa53 	bl	80001f0 <arm_bitreversal_32>
 8028d4a:	2f01      	cmp	r7, #1
 8028d4c:	d1e8      	bne.n	8028d20 <arm_cfft_f32+0x44>
 8028d4e:	ee07 5a90 	vmov	s15, r5
 8028d52:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8028d56:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028d5a:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 8028d5e:	2d00      	cmp	r5, #0
 8028d60:	d0de      	beq.n	8028d20 <arm_cfft_f32+0x44>
 8028d62:	f104 0108 	add.w	r1, r4, #8
 8028d66:	2300      	movs	r3, #0
 8028d68:	3301      	adds	r3, #1
 8028d6a:	429d      	cmp	r5, r3
 8028d6c:	f101 0108 	add.w	r1, r1, #8
 8028d70:	ed11 7a04 	vldr	s14, [r1, #-16]
 8028d74:	ed51 7a03 	vldr	s15, [r1, #-12]
 8028d78:	ee27 7a26 	vmul.f32	s14, s14, s13
 8028d7c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8028d80:	ed01 7a04 	vstr	s14, [r1, #-16]
 8028d84:	ed41 7a03 	vstr	s15, [r1, #-12]
 8028d88:	d1ee      	bne.n	8028d68 <arm_cfft_f32+0x8c>
 8028d8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028d8e:	4630      	mov	r0, r6
 8028d90:	4621      	mov	r1, r4
 8028d92:	f7ff fd45 	bl	8028820 <arm_cfft_radix8by4_f32>
 8028d96:	e7be      	b.n	8028d16 <arm_cfft_f32+0x3a>
 8028d98:	b1ad      	cbz	r5, 8028dc6 <arm_cfft_f32+0xea>
 8028d9a:	f101 030c 	add.w	r3, r1, #12
 8028d9e:	2200      	movs	r2, #0
 8028da0:	ed53 7a02 	vldr	s15, [r3, #-8]
 8028da4:	3201      	adds	r2, #1
 8028da6:	eef1 7a67 	vneg.f32	s15, s15
 8028daa:	4295      	cmp	r5, r2
 8028dac:	ed43 7a02 	vstr	s15, [r3, #-8]
 8028db0:	f103 0308 	add.w	r3, r3, #8
 8028db4:	d1f4      	bne.n	8028da0 <arm_cfft_f32+0xc4>
 8028db6:	e79a      	b.n	8028cee <arm_cfft_f32+0x12>
 8028db8:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8028dbc:	d0a5      	beq.n	8028d0a <arm_cfft_f32+0x2e>
 8028dbe:	e7aa      	b.n	8028d16 <arm_cfft_f32+0x3a>
 8028dc0:	2d10      	cmp	r5, #16
 8028dc2:	d0b6      	beq.n	8028d32 <arm_cfft_f32+0x56>
 8028dc4:	e7a7      	b.n	8028d16 <arm_cfft_f32+0x3a>
 8028dc6:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 8028dca:	d894      	bhi.n	8028cf6 <arm_cfft_f32+0x1a>
 8028dcc:	e7aa      	b.n	8028d24 <arm_cfft_f32+0x48>
 8028dce:	bf00      	nop

08028dd0 <arm_cmplx_mag_f32>:
 8028dd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028dd4:	ea5f 0892 	movs.w	r8, r2, lsr #2
 8028dd8:	b084      	sub	sp, #16
 8028dda:	d07f      	beq.n	8028edc <arm_cmplx_mag_f32+0x10c>
 8028ddc:	2700      	movs	r7, #0
 8028dde:	f100 0420 	add.w	r4, r0, #32
 8028de2:	f101 0510 	add.w	r5, r1, #16
 8028de6:	4646      	mov	r6, r8
 8028de8:	e05a      	b.n	8028ea0 <arm_cmplx_mag_f32+0xd0>
 8028dea:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028dee:	eeb4 0a40 	vcmp.f32	s0, s0
 8028df2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028df6:	f040 80a4 	bne.w	8028f42 <arm_cmplx_mag_f32+0x172>
 8028dfa:	ed05 0a04 	vstr	s0, [r5, #-16]
 8028dfe:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 8028e02:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 8028e06:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028e0a:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028e0e:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028e12:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028e16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028e1a:	f2c0 808f 	blt.w	8028f3c <arm_cmplx_mag_f32+0x16c>
 8028e1e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028e22:	eeb4 0a40 	vcmp.f32	s0, s0
 8028e26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028e2a:	f040 80af 	bne.w	8028f8c <arm_cmplx_mag_f32+0x1bc>
 8028e2e:	ed05 0a03 	vstr	s0, [r5, #-12]
 8028e32:	ed54 7a04 	vldr	s15, [r4, #-16]
 8028e36:	ed14 0a03 	vldr	s0, [r4, #-12]
 8028e3a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028e3e:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028e42:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028e46:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028e4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028e4e:	db72      	blt.n	8028f36 <arm_cmplx_mag_f32+0x166>
 8028e50:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028e54:	eeb4 0a40 	vcmp.f32	s0, s0
 8028e58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028e5c:	f040 808c 	bne.w	8028f78 <arm_cmplx_mag_f32+0x1a8>
 8028e60:	ed05 0a02 	vstr	s0, [r5, #-8]
 8028e64:	ed54 7a02 	vldr	s15, [r4, #-8]
 8028e68:	ed14 0a01 	vldr	s0, [r4, #-4]
 8028e6c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028e70:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028e74:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028e78:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028e7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028e80:	db20      	blt.n	8028ec4 <arm_cmplx_mag_f32+0xf4>
 8028e82:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028e86:	eeb4 0a40 	vcmp.f32	s0, s0
 8028e8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028e8e:	d169      	bne.n	8028f64 <arm_cmplx_mag_f32+0x194>
 8028e90:	3e01      	subs	r6, #1
 8028e92:	ed05 0a01 	vstr	s0, [r5, #-4]
 8028e96:	f104 0420 	add.w	r4, r4, #32
 8028e9a:	f105 0510 	add.w	r5, r5, #16
 8028e9e:	d019      	beq.n	8028ed4 <arm_cmplx_mag_f32+0x104>
 8028ea0:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 8028ea4:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 8028ea8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028eac:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028eb0:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028eb4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028eb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ebc:	da95      	bge.n	8028dea <arm_cmplx_mag_f32+0x1a>
 8028ebe:	f845 7c10 	str.w	r7, [r5, #-16]
 8028ec2:	e79c      	b.n	8028dfe <arm_cmplx_mag_f32+0x2e>
 8028ec4:	3e01      	subs	r6, #1
 8028ec6:	f845 7c04 	str.w	r7, [r5, #-4]
 8028eca:	f104 0420 	add.w	r4, r4, #32
 8028ece:	f105 0510 	add.w	r5, r5, #16
 8028ed2:	d1e5      	bne.n	8028ea0 <arm_cmplx_mag_f32+0xd0>
 8028ed4:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 8028ed8:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 8028edc:	f012 0503 	ands.w	r5, r2, #3
 8028ee0:	d026      	beq.n	8028f30 <arm_cmplx_mag_f32+0x160>
 8028ee2:	2600      	movs	r6, #0
 8028ee4:	f100 0408 	add.w	r4, r0, #8
 8028ee8:	e00c      	b.n	8028f04 <arm_cmplx_mag_f32+0x134>
 8028eea:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028eee:	eeb4 0a40 	vcmp.f32	s0, s0
 8028ef2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ef6:	d12e      	bne.n	8028f56 <arm_cmplx_mag_f32+0x186>
 8028ef8:	3d01      	subs	r5, #1
 8028efa:	ed01 0a01 	vstr	s0, [r1, #-4]
 8028efe:	f104 0408 	add.w	r4, r4, #8
 8028f02:	d015      	beq.n	8028f30 <arm_cmplx_mag_f32+0x160>
 8028f04:	ed54 7a02 	vldr	s15, [r4, #-8]
 8028f08:	ed14 0a01 	vldr	s0, [r4, #-4]
 8028f0c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028f10:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028f14:	3104      	adds	r1, #4
 8028f16:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028f1a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028f1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028f22:	dae2      	bge.n	8028eea <arm_cmplx_mag_f32+0x11a>
 8028f24:	3d01      	subs	r5, #1
 8028f26:	f841 6c04 	str.w	r6, [r1, #-4]
 8028f2a:	f104 0408 	add.w	r4, r4, #8
 8028f2e:	d1e9      	bne.n	8028f04 <arm_cmplx_mag_f32+0x134>
 8028f30:	b004      	add	sp, #16
 8028f32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028f36:	f845 7c08 	str.w	r7, [r5, #-8]
 8028f3a:	e793      	b.n	8028e64 <arm_cmplx_mag_f32+0x94>
 8028f3c:	f845 7c0c 	str.w	r7, [r5, #-12]
 8028f40:	e777      	b.n	8028e32 <arm_cmplx_mag_f32+0x62>
 8028f42:	eeb0 0a67 	vmov.f32	s0, s15
 8028f46:	9203      	str	r2, [sp, #12]
 8028f48:	9102      	str	r1, [sp, #8]
 8028f4a:	9001      	str	r0, [sp, #4]
 8028f4c:	f000 fb38 	bl	80295c0 <sqrtf>
 8028f50:	a801      	add	r0, sp, #4
 8028f52:	c807      	ldmia	r0, {r0, r1, r2}
 8028f54:	e751      	b.n	8028dfa <arm_cmplx_mag_f32+0x2a>
 8028f56:	eeb0 0a67 	vmov.f32	s0, s15
 8028f5a:	9101      	str	r1, [sp, #4]
 8028f5c:	f000 fb30 	bl	80295c0 <sqrtf>
 8028f60:	9901      	ldr	r1, [sp, #4]
 8028f62:	e7c9      	b.n	8028ef8 <arm_cmplx_mag_f32+0x128>
 8028f64:	eeb0 0a67 	vmov.f32	s0, s15
 8028f68:	9203      	str	r2, [sp, #12]
 8028f6a:	9102      	str	r1, [sp, #8]
 8028f6c:	9001      	str	r0, [sp, #4]
 8028f6e:	f000 fb27 	bl	80295c0 <sqrtf>
 8028f72:	a801      	add	r0, sp, #4
 8028f74:	c807      	ldmia	r0, {r0, r1, r2}
 8028f76:	e78b      	b.n	8028e90 <arm_cmplx_mag_f32+0xc0>
 8028f78:	eeb0 0a67 	vmov.f32	s0, s15
 8028f7c:	9203      	str	r2, [sp, #12]
 8028f7e:	9102      	str	r1, [sp, #8]
 8028f80:	9001      	str	r0, [sp, #4]
 8028f82:	f000 fb1d 	bl	80295c0 <sqrtf>
 8028f86:	a801      	add	r0, sp, #4
 8028f88:	c807      	ldmia	r0, {r0, r1, r2}
 8028f8a:	e769      	b.n	8028e60 <arm_cmplx_mag_f32+0x90>
 8028f8c:	eeb0 0a67 	vmov.f32	s0, s15
 8028f90:	9203      	str	r2, [sp, #12]
 8028f92:	9102      	str	r1, [sp, #8]
 8028f94:	9001      	str	r0, [sp, #4]
 8028f96:	f000 fb13 	bl	80295c0 <sqrtf>
 8028f9a:	a801      	add	r0, sp, #4
 8028f9c:	c807      	ldmia	r0, {r0, r1, r2}
 8028f9e:	e746      	b.n	8028e2e <arm_cmplx_mag_f32+0x5e>

08028fa0 <arm_radix8_butterfly_f32>:
 8028fa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028fa4:	ed2d 8b10 	vpush	{d8-d15}
 8028fa8:	b09d      	sub	sp, #116	; 0x74
 8028faa:	461c      	mov	r4, r3
 8028fac:	ed9f bac8 	vldr	s22, [pc, #800]	; 80292d0 <arm_radix8_butterfly_f32+0x330>
 8028fb0:	921a      	str	r2, [sp, #104]	; 0x68
 8028fb2:	1d03      	adds	r3, r0, #4
 8028fb4:	4682      	mov	sl, r0
 8028fb6:	4689      	mov	r9, r1
 8028fb8:	468b      	mov	fp, r1
 8028fba:	931b      	str	r3, [sp, #108]	; 0x6c
 8028fbc:	9400      	str	r4, [sp, #0]
 8028fbe:	469e      	mov	lr, r3
 8028fc0:	ea4f 03db 	mov.w	r3, fp, lsr #3
 8028fc4:	005a      	lsls	r2, r3, #1
 8028fc6:	18d6      	adds	r6, r2, r3
 8028fc8:	18f5      	adds	r5, r6, r3
 8028fca:	9203      	str	r2, [sp, #12]
 8028fcc:	195a      	adds	r2, r3, r5
 8028fce:	18d0      	adds	r0, r2, r3
 8028fd0:	00df      	lsls	r7, r3, #3
 8028fd2:	1819      	adds	r1, r3, r0
 8028fd4:	463c      	mov	r4, r7
 8028fd6:	9701      	str	r7, [sp, #4]
 8028fd8:	4457      	add	r7, sl
 8028fda:	930c      	str	r3, [sp, #48]	; 0x30
 8028fdc:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 8028fe0:	011b      	lsls	r3, r3, #4
 8028fe2:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 8028fe6:	eb07 0c04 	add.w	ip, r7, r4
 8028fea:	9c00      	ldr	r4, [sp, #0]
 8028fec:	9302      	str	r3, [sp, #8]
 8028fee:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 8028ff2:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 8028ff6:	3204      	adds	r2, #4
 8028ff8:	3104      	adds	r1, #4
 8028ffa:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 8028ffe:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8029002:	f04f 0800 	mov.w	r8, #0
 8029006:	eddc 7a00 	vldr	s15, [ip]
 802900a:	edd7 6a00 	vldr	s13, [r7]
 802900e:	edd6 3a00 	vldr	s7, [r6]
 8029012:	ed5e aa01 	vldr	s21, [lr, #-4]
 8029016:	edd5 4a00 	vldr	s9, [r5]
 802901a:	ed90 2a00 	vldr	s4, [r0]
 802901e:	ed12 7a01 	vldr	s14, [r2, #-4]
 8029022:	ed51 0a01 	vldr	s1, [r1, #-4]
 8029026:	ee77 8a82 	vadd.f32	s17, s15, s4
 802902a:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802902e:	ee76 1a87 	vadd.f32	s3, s13, s14
 8029032:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 8029036:	ee31 6a84 	vadd.f32	s12, s3, s8
 802903a:	ee33 5a28 	vadd.f32	s10, s6, s17
 802903e:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8029042:	ee75 6a06 	vadd.f32	s13, s10, s12
 8029046:	ee35 5a46 	vsub.f32	s10, s10, s12
 802904a:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802904e:	ed85 5a00 	vstr	s10, [r5]
 8029052:	ed96 1a01 	vldr	s2, [r6, #4]
 8029056:	edd7 5a01 	vldr	s11, [r7, #4]
 802905a:	ed92 aa00 	vldr	s20, [r2]
 802905e:	ed91 6a00 	vldr	s12, [r1]
 8029062:	ed9e 9a00 	vldr	s18, [lr]
 8029066:	ed95 5a01 	vldr	s10, [r5, #4]
 802906a:	eddc 6a01 	vldr	s13, [ip, #4]
 802906e:	edd0 9a01 	vldr	s19, [r0, #4]
 8029072:	ee73 0ae0 	vsub.f32	s1, s7, s1
 8029076:	ee71 2a46 	vsub.f32	s5, s2, s12
 802907a:	ee75 3aca 	vsub.f32	s7, s11, s20
 802907e:	ee37 0a60 	vsub.f32	s0, s14, s1
 8029082:	ee33 8aa2 	vadd.f32	s16, s7, s5
 8029086:	ee37 7a20 	vadd.f32	s14, s14, s1
 802908a:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802908e:	ee37 2ac2 	vsub.f32	s4, s15, s4
 8029092:	ee79 3a05 	vadd.f32	s7, s18, s10
 8029096:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802909a:	ee39 5a45 	vsub.f32	s10, s18, s10
 802909e:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 80290a2:	ee36 9aa9 	vadd.f32	s18, s13, s19
 80290a6:	ee75 5a8a 	vadd.f32	s11, s11, s20
 80290aa:	ee31 6a06 	vadd.f32	s12, s2, s12
 80290ae:	ee76 6ae9 	vsub.f32	s13, s13, s19
 80290b2:	ee28 8a0b 	vmul.f32	s16, s16, s22
 80290b6:	ee62 2a8b 	vmul.f32	s5, s5, s22
 80290ba:	ee67 7a0b 	vmul.f32	s15, s14, s22
 80290be:	ee33 3a68 	vsub.f32	s6, s6, s17
 80290c2:	ee36 0a88 	vadd.f32	s0, s13, s16
 80290c6:	ee75 8a86 	vadd.f32	s17, s11, s12
 80290ca:	ee36 7ac8 	vsub.f32	s14, s13, s16
 80290ce:	ee71 1ac4 	vsub.f32	s3, s3, s8
 80290d2:	ee75 6a62 	vsub.f32	s13, s10, s5
 80290d6:	ee33 4ac9 	vsub.f32	s8, s7, s18
 80290da:	ee35 6ac6 	vsub.f32	s12, s11, s12
 80290de:	ee33 1a89 	vadd.f32	s2, s7, s18
 80290e2:	ee74 5ae0 	vsub.f32	s11, s9, s1
 80290e6:	ee74 3aa0 	vadd.f32	s7, s9, s1
 80290ea:	ee75 4a22 	vadd.f32	s9, s10, s5
 80290ee:	ee32 5a27 	vadd.f32	s10, s4, s15
 80290f2:	ee72 7a67 	vsub.f32	s15, s4, s15
 80290f6:	ee33 8a06 	vadd.f32	s16, s6, s12
 80290fa:	ee75 2a87 	vadd.f32	s5, s11, s14
 80290fe:	ee31 9a28 	vadd.f32	s18, s2, s17
 8029102:	ee33 6a46 	vsub.f32	s12, s6, s12
 8029106:	ee74 0a61 	vsub.f32	s1, s8, s3
 802910a:	ee33 2a80 	vadd.f32	s4, s7, s0
 802910e:	ee35 7ac7 	vsub.f32	s14, s11, s14
 8029112:	ee34 3ac5 	vsub.f32	s6, s9, s10
 8029116:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802911a:	ee31 1a68 	vsub.f32	s2, s2, s17
 802911e:	ee34 4a21 	vadd.f32	s8, s8, s3
 8029122:	ee73 3ac0 	vsub.f32	s7, s7, s0
 8029126:	ee74 4a85 	vadd.f32	s9, s9, s10
 802912a:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802912e:	44d8      	add	r8, fp
 8029130:	45c1      	cmp	r9, r8
 8029132:	ed8e 9a00 	vstr	s18, [lr]
 8029136:	ed85 1a01 	vstr	s2, [r5, #4]
 802913a:	449e      	add	lr, r3
 802913c:	ed8c 8a00 	vstr	s16, [ip]
 8029140:	441d      	add	r5, r3
 8029142:	ed80 6a00 	vstr	s12, [r0]
 8029146:	edcc 0a01 	vstr	s1, [ip, #4]
 802914a:	ed80 4a01 	vstr	s8, [r0, #4]
 802914e:	449c      	add	ip, r3
 8029150:	ed87 2a00 	vstr	s4, [r7]
 8029154:	4418      	add	r0, r3
 8029156:	ed41 3a01 	vstr	s7, [r1, #-4]
 802915a:	ed42 2a01 	vstr	s5, [r2, #-4]
 802915e:	ed86 7a00 	vstr	s14, [r6]
 8029162:	ed87 3a01 	vstr	s6, [r7, #4]
 8029166:	edc1 4a00 	vstr	s9, [r1]
 802916a:	441f      	add	r7, r3
 802916c:	edc2 5a00 	vstr	s11, [r2]
 8029170:	4419      	add	r1, r3
 8029172:	edc6 6a01 	vstr	s13, [r6, #4]
 8029176:	441a      	add	r2, r3
 8029178:	441e      	add	r6, r3
 802917a:	f63f af44 	bhi.w	8029006 <arm_radix8_butterfly_f32+0x66>
 802917e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029180:	2907      	cmp	r1, #7
 8029182:	4620      	mov	r0, r4
 8029184:	f240 81e9 	bls.w	802955a <arm_radix8_butterfly_f32+0x5ba>
 8029188:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802918c:	193e      	adds	r6, r7, r4
 802918e:	1935      	adds	r5, r6, r4
 8029190:	9c03      	ldr	r4, [sp, #12]
 8029192:	9000      	str	r0, [sp, #0]
 8029194:	4622      	mov	r2, r4
 8029196:	3201      	adds	r2, #1
 8029198:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802919c:	9900      	ldr	r1, [sp, #0]
 802919e:	1828      	adds	r0, r5, r0
 80291a0:	eb00 0e01 	add.w	lr, r0, r1
 80291a4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80291a6:	440a      	add	r2, r1
 80291a8:	eb04 0c01 	add.w	ip, r4, r1
 80291ac:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 80291b0:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 80291b4:	9a00      	ldr	r2, [sp, #0]
 80291b6:	940f      	str	r4, [sp, #60]	; 0x3c
 80291b8:	00ed      	lsls	r5, r5, #3
 80291ba:	9511      	str	r5, [sp, #68]	; 0x44
 80291bc:	00d5      	lsls	r5, r2, #3
 80291be:	950d      	str	r5, [sp, #52]	; 0x34
 80291c0:	9d01      	ldr	r5, [sp, #4]
 80291c2:	3508      	adds	r5, #8
 80291c4:	9516      	str	r5, [sp, #88]	; 0x58
 80291c6:	9d02      	ldr	r5, [sp, #8]
 80291c8:	3508      	adds	r5, #8
 80291ca:	0114      	lsls	r4, r2, #4
 80291cc:	9517      	str	r5, [sp, #92]	; 0x5c
 80291ce:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80291d0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80291d2:	940e      	str	r4, [sp, #56]	; 0x38
 80291d4:	00c0      	lsls	r0, r0, #3
 80291d6:	9010      	str	r0, [sp, #64]	; 0x40
 80291d8:	18aa      	adds	r2, r5, r2
 80291da:	9207      	str	r2, [sp, #28]
 80291dc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80291de:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80291e0:	18aa      	adds	r2, r5, r2
 80291e2:	9208      	str	r2, [sp, #32]
 80291e4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80291e6:	18aa      	adds	r2, r5, r2
 80291e8:	9209      	str	r2, [sp, #36]	; 0x24
 80291ea:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80291ee:	f10e 0204 	add.w	r2, lr, #4
 80291f2:	920a      	str	r2, [sp, #40]	; 0x28
 80291f4:	00c9      	lsls	r1, r1, #3
 80291f6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80291f8:	310c      	adds	r1, #12
 80291fa:	00f6      	lsls	r6, r6, #3
 80291fc:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 8029200:	9114      	str	r1, [sp, #80]	; 0x50
 8029202:	18a9      	adds	r1, r5, r2
 8029204:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8029206:	9612      	str	r6, [sp, #72]	; 0x48
 8029208:	00ff      	lsls	r7, r7, #3
 802920a:	19ae      	adds	r6, r5, r6
 802920c:	3008      	adds	r0, #8
 802920e:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8029212:	9606      	str	r6, [sp, #24]
 8029214:	9019      	str	r0, [sp, #100]	; 0x64
 8029216:	18aa      	adds	r2, r5, r2
 8029218:	0164      	lsls	r4, r4, #5
 802921a:	19ee      	adds	r6, r5, r7
 802921c:	f10c 000c 	add.w	r0, ip, #12
 8029220:	9713      	str	r7, [sp, #76]	; 0x4c
 8029222:	9604      	str	r6, [sp, #16]
 8029224:	9015      	str	r0, [sp, #84]	; 0x54
 8029226:	9103      	str	r1, [sp, #12]
 8029228:	9205      	str	r2, [sp, #20]
 802922a:	f104 0208 	add.w	r2, r4, #8
 802922e:	9218      	str	r2, [sp, #96]	; 0x60
 8029230:	f04f 0801 	mov.w	r8, #1
 8029234:	2200      	movs	r2, #0
 8029236:	f102 0108 	add.w	r1, r2, #8
 802923a:	460f      	mov	r7, r1
 802923c:	910b      	str	r1, [sp, #44]	; 0x2c
 802923e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8029240:	188e      	adds	r6, r1, r2
 8029242:	9916      	ldr	r1, [sp, #88]	; 0x58
 8029244:	188d      	adds	r5, r1, r2
 8029246:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8029248:	188c      	adds	r4, r1, r2
 802924a:	9919      	ldr	r1, [sp, #100]	; 0x64
 802924c:	1888      	adds	r0, r1, r2
 802924e:	9914      	ldr	r1, [sp, #80]	; 0x50
 8029250:	eb01 0c02 	add.w	ip, r1, r2
 8029254:	9915      	ldr	r1, [sp, #84]	; 0x54
 8029256:	440a      	add	r2, r1
 8029258:	9903      	ldr	r1, [sp, #12]
 802925a:	edd1 fa00 	vldr	s31, [r1]
 802925e:	9905      	ldr	r1, [sp, #20]
 8029260:	ed91 fa00 	vldr	s30, [r1]
 8029264:	9904      	ldr	r1, [sp, #16]
 8029266:	edd1 ea00 	vldr	s29, [r1]
 802926a:	9906      	ldr	r1, [sp, #24]
 802926c:	ed91 ea00 	vldr	s28, [r1]
 8029270:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029272:	edd1 da00 	vldr	s27, [r1]
 8029276:	9908      	ldr	r1, [sp, #32]
 8029278:	ed91 da00 	vldr	s26, [r1]
 802927c:	9907      	ldr	r1, [sp, #28]
 802927e:	edd1 ca00 	vldr	s25, [r1]
 8029282:	9903      	ldr	r1, [sp, #12]
 8029284:	ed91 ca01 	vldr	s24, [r1, #4]
 8029288:	9905      	ldr	r1, [sp, #20]
 802928a:	edd1 ba01 	vldr	s23, [r1, #4]
 802928e:	9904      	ldr	r1, [sp, #16]
 8029290:	edd1 aa01 	vldr	s21, [r1, #4]
 8029294:	9906      	ldr	r1, [sp, #24]
 8029296:	ed91 aa01 	vldr	s20, [r1, #4]
 802929a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802929c:	edd1 7a01 	vldr	s15, [r1, #4]
 80292a0:	9908      	ldr	r1, [sp, #32]
 80292a2:	edcd 7a00 	vstr	s15, [sp]
 80292a6:	edd1 7a01 	vldr	s15, [r1, #4]
 80292aa:	9907      	ldr	r1, [sp, #28]
 80292ac:	edcd 7a01 	vstr	s15, [sp, #4]
 80292b0:	edd1 7a01 	vldr	s15, [r1, #4]
 80292b4:	eb0a 0e07 	add.w	lr, sl, r7
 80292b8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80292ba:	edcd 7a02 	vstr	s15, [sp, #8]
 80292be:	eb0c 010a 	add.w	r1, ip, sl
 80292c2:	4456      	add	r6, sl
 80292c4:	4455      	add	r5, sl
 80292c6:	4454      	add	r4, sl
 80292c8:	4450      	add	r0, sl
 80292ca:	4452      	add	r2, sl
 80292cc:	46c4      	mov	ip, r8
 80292ce:	e001      	b.n	80292d4 <arm_radix8_butterfly_f32+0x334>
 80292d0:	3f3504f3 	.word	0x3f3504f3
 80292d4:	ed96 5a00 	vldr	s10, [r6]
 80292d8:	ed52 9a01 	vldr	s19, [r2, #-4]
 80292dc:	ed11 6a01 	vldr	s12, [r1, #-4]
 80292e0:	edd0 7a00 	vldr	s15, [r0]
 80292e4:	ed17 7a01 	vldr	s14, [r7, #-4]
 80292e8:	edde 3a00 	vldr	s7, [lr]
 80292ec:	ed94 3a00 	vldr	s6, [r4]
 80292f0:	ed95 2a00 	vldr	s4, [r5]
 80292f4:	ed9e 0a01 	vldr	s0, [lr, #4]
 80292f8:	ee33 8a85 	vadd.f32	s16, s7, s10
 80292fc:	ee32 1a06 	vadd.f32	s2, s4, s12
 8029300:	ee33 4a29 	vadd.f32	s8, s6, s19
 8029304:	ee77 4a87 	vadd.f32	s9, s15, s14
 8029308:	ee78 1a04 	vadd.f32	s3, s16, s8
 802930c:	ee71 6a24 	vadd.f32	s13, s2, s9
 8029310:	ee32 2a46 	vsub.f32	s4, s4, s12
 8029314:	ee31 6aa6 	vadd.f32	s12, s3, s13
 8029318:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802931c:	ed8e 6a00 	vstr	s12, [lr]
 8029320:	edd0 8a01 	vldr	s17, [r0, #4]
 8029324:	ed95 9a01 	vldr	s18, [r5, #4]
 8029328:	edd1 2a00 	vldr	s5, [r1]
 802932c:	ed97 7a00 	vldr	s14, [r7]
 8029330:	edd4 0a01 	vldr	s1, [r4, #4]
 8029334:	ed96 6a01 	vldr	s12, [r6, #4]
 8029338:	edd2 5a00 	vldr	s11, [r2]
 802933c:	ee73 3ac5 	vsub.f32	s7, s7, s10
 8029340:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029344:	ee39 5a62 	vsub.f32	s10, s18, s5
 8029348:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802934c:	ee38 4a44 	vsub.f32	s8, s16, s8
 8029350:	ee38 7a87 	vadd.f32	s14, s17, s14
 8029354:	ee30 8aa5 	vadd.f32	s16, s1, s11
 8029358:	ee79 2a22 	vadd.f32	s5, s18, s5
 802935c:	ee75 8a69 	vsub.f32	s17, s10, s19
 8029360:	ee32 9a27 	vadd.f32	s18, s4, s15
 8029364:	ee35 5a29 	vadd.f32	s10, s10, s19
 8029368:	ee72 7a67 	vsub.f32	s15, s4, s15
 802936c:	ee30 2a06 	vadd.f32	s4, s0, s12
 8029370:	ee69 9a0b 	vmul.f32	s19, s18, s22
 8029374:	ee70 5ae5 	vsub.f32	s11, s1, s11
 8029378:	ee32 9a08 	vadd.f32	s18, s4, s16
 802937c:	ee68 8a8b 	vmul.f32	s17, s17, s22
 8029380:	ee32 2a48 	vsub.f32	s4, s4, s16
 8029384:	ee71 4a64 	vsub.f32	s9, s2, s9
 8029388:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802938c:	ee32 1a87 	vadd.f32	s2, s5, s14
 8029390:	ee67 7a8b 	vmul.f32	s15, s15, s22
 8029394:	ee72 2ac7 	vsub.f32	s5, s5, s14
 8029398:	ee30 6a46 	vsub.f32	s12, s0, s12
 802939c:	ee73 0a29 	vadd.f32	s1, s6, s19
 80293a0:	ee36 0a28 	vadd.f32	s0, s12, s17
 80293a4:	ee33 3a69 	vsub.f32	s6, s6, s19
 80293a8:	ee32 7a64 	vsub.f32	s14, s4, s9
 80293ac:	ee73 9aa7 	vadd.f32	s19, s7, s15
 80293b0:	ee36 6a68 	vsub.f32	s12, s12, s17
 80293b4:	ee73 7ae7 	vsub.f32	s15, s7, s15
 80293b8:	ee75 8a85 	vadd.f32	s17, s11, s10
 80293bc:	ee74 3a22 	vadd.f32	s7, s8, s5
 80293c0:	ee35 5ac5 	vsub.f32	s10, s11, s10
 80293c4:	ee71 6ae6 	vsub.f32	s13, s3, s13
 80293c8:	ee79 1a41 	vsub.f32	s3, s18, s2
 80293cc:	ee39 8aa8 	vadd.f32	s16, s19, s17
 80293d0:	ee76 5a43 	vsub.f32	s11, s12, s6
 80293d4:	ee74 2a62 	vsub.f32	s5, s8, s5
 80293d8:	ee72 4a24 	vadd.f32	s9, s4, s9
 80293dc:	ee30 4a60 	vsub.f32	s8, s0, s1
 80293e0:	ee79 8ae8 	vsub.f32	s17, s19, s17
 80293e4:	ee30 0a20 	vadd.f32	s0, s0, s1
 80293e8:	ee77 9a85 	vadd.f32	s19, s15, s10
 80293ec:	ee36 6a03 	vadd.f32	s12, s12, s6
 80293f0:	ee77 7ac5 	vsub.f32	s15, s15, s10
 80293f4:	ee2e 2a21 	vmul.f32	s4, s28, s3
 80293f8:	ee2e 5a26 	vmul.f32	s10, s28, s13
 80293fc:	ee6f 0a23 	vmul.f32	s1, s30, s7
 8029400:	ee2a 3a21 	vmul.f32	s6, s20, s3
 8029404:	ee39 1a01 	vadd.f32	s2, s18, s2
 8029408:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802940c:	ee2b 9a87 	vmul.f32	s18, s23, s14
 8029410:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 8029414:	ee2f 7a07 	vmul.f32	s14, s30, s14
 8029418:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802941c:	ee35 3a03 	vadd.f32	s6, s10, s6
 8029420:	ee72 6a66 	vsub.f32	s13, s4, s13
 8029424:	ee2c 5a04 	vmul.f32	s10, s24, s8
 8029428:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802942c:	ed9d 4a02 	vldr	s8, [sp, #8]
 8029430:	ed8e 1a01 	vstr	s2, [lr, #4]
 8029434:	ee77 3a63 	vsub.f32	s7, s14, s7
 8029438:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802943c:	ed9d 7a01 	vldr	s14, [sp, #4]
 8029440:	ed86 3a00 	vstr	s6, [r6]
 8029444:	ee30 9a89 	vadd.f32	s18, s1, s18
 8029448:	ee32 2a05 	vadd.f32	s4, s4, s10
 802944c:	ee6d 0a22 	vmul.f32	s1, s26, s5
 8029450:	ee31 8ac8 	vsub.f32	s16, s3, s16
 8029454:	ee67 2a22 	vmul.f32	s5, s14, s5
 8029458:	ee64 1a00 	vmul.f32	s3, s8, s0
 802945c:	ee27 7a24 	vmul.f32	s14, s14, s9
 8029460:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 8029464:	ee6d 4a24 	vmul.f32	s9, s26, s9
 8029468:	ee64 8a28 	vmul.f32	s17, s8, s17
 802946c:	ed9d 4a00 	vldr	s8, [sp]
 8029470:	edc6 6a01 	vstr	s13, [r6, #4]
 8029474:	ee74 2ae2 	vsub.f32	s5, s9, s5
 8029478:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802947c:	ee64 9a29 	vmul.f32	s19, s8, s19
 8029480:	ee24 4a25 	vmul.f32	s8, s8, s11
 8029484:	ee30 7a87 	vadd.f32	s14, s1, s14
 8029488:	ee74 4a84 	vadd.f32	s9, s9, s8
 802948c:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 8029490:	ee2a 4a86 	vmul.f32	s8, s21, s12
 8029494:	ee2c 0a80 	vmul.f32	s0, s25, s0
 8029498:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802949c:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 80294a0:	ee2e 6a86 	vmul.f32	s12, s29, s12
 80294a4:	ee75 1a21 	vadd.f32	s3, s10, s3
 80294a8:	ee30 0a68 	vsub.f32	s0, s0, s17
 80294ac:	ee75 9ae9 	vsub.f32	s19, s11, s19
 80294b0:	ee70 0a84 	vadd.f32	s1, s1, s8
 80294b4:	ee36 6a67 	vsub.f32	s12, s12, s15
 80294b8:	44dc      	add	ip, fp
 80294ba:	45e1      	cmp	r9, ip
 80294bc:	ed84 9a00 	vstr	s18, [r4]
 80294c0:	edc4 3a01 	vstr	s7, [r4, #4]
 80294c4:	449e      	add	lr, r3
 80294c6:	ed02 7a01 	vstr	s14, [r2, #-4]
 80294ca:	edc2 2a00 	vstr	s5, [r2]
 80294ce:	441e      	add	r6, r3
 80294d0:	ed85 2a00 	vstr	s4, [r5]
 80294d4:	ed85 8a01 	vstr	s16, [r5, #4]
 80294d8:	441c      	add	r4, r3
 80294da:	ed47 1a01 	vstr	s3, [r7, #-4]
 80294de:	ed87 0a00 	vstr	s0, [r7]
 80294e2:	441a      	add	r2, r3
 80294e4:	ed41 4a01 	vstr	s9, [r1, #-4]
 80294e8:	edc1 9a00 	vstr	s19, [r1]
 80294ec:	441d      	add	r5, r3
 80294ee:	edc0 0a00 	vstr	s1, [r0]
 80294f2:	441f      	add	r7, r3
 80294f4:	ed80 6a01 	vstr	s12, [r0, #4]
 80294f8:	4419      	add	r1, r3
 80294fa:	4418      	add	r0, r3
 80294fc:	f63f aeea 	bhi.w	80292d4 <arm_radix8_butterfly_f32+0x334>
 8029500:	9a03      	ldr	r2, [sp, #12]
 8029502:	990d      	ldr	r1, [sp, #52]	; 0x34
 8029504:	440a      	add	r2, r1
 8029506:	9203      	str	r2, [sp, #12]
 8029508:	990e      	ldr	r1, [sp, #56]	; 0x38
 802950a:	9a05      	ldr	r2, [sp, #20]
 802950c:	440a      	add	r2, r1
 802950e:	9205      	str	r2, [sp, #20]
 8029510:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8029512:	9a04      	ldr	r2, [sp, #16]
 8029514:	440a      	add	r2, r1
 8029516:	9204      	str	r2, [sp, #16]
 8029518:	9912      	ldr	r1, [sp, #72]	; 0x48
 802951a:	9a06      	ldr	r2, [sp, #24]
 802951c:	440a      	add	r2, r1
 802951e:	9206      	str	r2, [sp, #24]
 8029520:	9911      	ldr	r1, [sp, #68]	; 0x44
 8029522:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029524:	440a      	add	r2, r1
 8029526:	9209      	str	r2, [sp, #36]	; 0x24
 8029528:	9910      	ldr	r1, [sp, #64]	; 0x40
 802952a:	9a08      	ldr	r2, [sp, #32]
 802952c:	440a      	add	r2, r1
 802952e:	9208      	str	r2, [sp, #32]
 8029530:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8029532:	9a07      	ldr	r2, [sp, #28]
 8029534:	440a      	add	r2, r1
 8029536:	9207      	str	r2, [sp, #28]
 8029538:	990c      	ldr	r1, [sp, #48]	; 0x30
 802953a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802953c:	f108 0801 	add.w	r8, r8, #1
 8029540:	3208      	adds	r2, #8
 8029542:	4588      	cmp	r8, r1
 8029544:	920a      	str	r2, [sp, #40]	; 0x28
 8029546:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8029548:	f47f ae75 	bne.w	8029236 <arm_radix8_butterfly_f32+0x296>
 802954c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8029550:	9300      	str	r3, [sp, #0]
 8029552:	46c3      	mov	fp, r8
 8029554:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8029558:	e532      	b.n	8028fc0 <arm_radix8_butterfly_f32+0x20>
 802955a:	b01d      	add	sp, #116	; 0x74
 802955c:	ecbd 8b10 	vpop	{d8-d15}
 8029560:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08029564 <__aeabi_atexit>:
 8029564:	460b      	mov	r3, r1
 8029566:	4601      	mov	r1, r0
 8029568:	4618      	mov	r0, r3
 802956a:	f000 bef3 	b.w	802a354 <__cxa_atexit>

0802956e <_ZdlPvj>:
 802956e:	f000 b812 	b.w	8029596 <_ZdlPv>

08029572 <__cxa_guard_acquire>:
 8029572:	6803      	ldr	r3, [r0, #0]
 8029574:	07db      	lsls	r3, r3, #31
 8029576:	d406      	bmi.n	8029586 <__cxa_guard_acquire+0x14>
 8029578:	7843      	ldrb	r3, [r0, #1]
 802957a:	b103      	cbz	r3, 802957e <__cxa_guard_acquire+0xc>
 802957c:	deff      	udf	#255	; 0xff
 802957e:	2301      	movs	r3, #1
 8029580:	7043      	strb	r3, [r0, #1]
 8029582:	4618      	mov	r0, r3
 8029584:	4770      	bx	lr
 8029586:	2000      	movs	r0, #0
 8029588:	4770      	bx	lr

0802958a <__cxa_guard_release>:
 802958a:	2301      	movs	r3, #1
 802958c:	6003      	str	r3, [r0, #0]
 802958e:	4770      	bx	lr

08029590 <__cxa_pure_virtual>:
 8029590:	b508      	push	{r3, lr}
 8029592:	f000 f80f 	bl	80295b4 <_ZSt9terminatev>

08029596 <_ZdlPv>:
 8029596:	f000 be29 	b.w	802a1ec <free>

0802959a <_ZN10__cxxabiv111__terminateEPFvvE>:
 802959a:	b508      	push	{r3, lr}
 802959c:	4780      	blx	r0
 802959e:	f000 fdf1 	bl	802a184 <abort>
	...

080295a4 <_ZSt13get_terminatev>:
 80295a4:	4b02      	ldr	r3, [pc, #8]	; (80295b0 <_ZSt13get_terminatev+0xc>)
 80295a6:	6818      	ldr	r0, [r3, #0]
 80295a8:	f3bf 8f5b 	dmb	ish
 80295ac:	4770      	bx	lr
 80295ae:	bf00      	nop
 80295b0:	20000104 	.word	0x20000104

080295b4 <_ZSt9terminatev>:
 80295b4:	b508      	push	{r3, lr}
 80295b6:	f7ff fff5 	bl	80295a4 <_ZSt13get_terminatev>
 80295ba:	f7ff ffee 	bl	802959a <_ZN10__cxxabiv111__terminateEPFvvE>
	...

080295c0 <sqrtf>:
 80295c0:	b508      	push	{r3, lr}
 80295c2:	ed2d 8b02 	vpush	{d8}
 80295c6:	eeb0 8a40 	vmov.f32	s16, s0
 80295ca:	f000 f8a1 	bl	8029710 <__ieee754_sqrtf>
 80295ce:	eeb4 8a48 	vcmp.f32	s16, s16
 80295d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80295d6:	d60c      	bvs.n	80295f2 <sqrtf+0x32>
 80295d8:	eddf 8a07 	vldr	s17, [pc, #28]	; 80295f8 <sqrtf+0x38>
 80295dc:	eeb4 8ae8 	vcmpe.f32	s16, s17
 80295e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80295e4:	d505      	bpl.n	80295f2 <sqrtf+0x32>
 80295e6:	f001 f8d3 	bl	802a790 <__errno>
 80295ea:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 80295ee:	2321      	movs	r3, #33	; 0x21
 80295f0:	6003      	str	r3, [r0, #0]
 80295f2:	ecbd 8b02 	vpop	{d8}
 80295f6:	bd08      	pop	{r3, pc}
 80295f8:	00000000 	.word	0x00000000

080295fc <cosf>:
 80295fc:	ee10 3a10 	vmov	r3, s0
 8029600:	b507      	push	{r0, r1, r2, lr}
 8029602:	4a1e      	ldr	r2, [pc, #120]	; (802967c <cosf+0x80>)
 8029604:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029608:	4293      	cmp	r3, r2
 802960a:	dc06      	bgt.n	802961a <cosf+0x1e>
 802960c:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8029680 <cosf+0x84>
 8029610:	b003      	add	sp, #12
 8029612:	f85d eb04 	ldr.w	lr, [sp], #4
 8029616:	f000 b903 	b.w	8029820 <__kernel_cosf>
 802961a:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802961e:	db04      	blt.n	802962a <cosf+0x2e>
 8029620:	ee30 0a40 	vsub.f32	s0, s0, s0
 8029624:	b003      	add	sp, #12
 8029626:	f85d fb04 	ldr.w	pc, [sp], #4
 802962a:	4668      	mov	r0, sp
 802962c:	f000 f99e 	bl	802996c <__ieee754_rem_pio2f>
 8029630:	f000 0003 	and.w	r0, r0, #3
 8029634:	2801      	cmp	r0, #1
 8029636:	d009      	beq.n	802964c <cosf+0x50>
 8029638:	2802      	cmp	r0, #2
 802963a:	d010      	beq.n	802965e <cosf+0x62>
 802963c:	b9b0      	cbnz	r0, 802966c <cosf+0x70>
 802963e:	eddd 0a01 	vldr	s1, [sp, #4]
 8029642:	ed9d 0a00 	vldr	s0, [sp]
 8029646:	f000 f8eb 	bl	8029820 <__kernel_cosf>
 802964a:	e7eb      	b.n	8029624 <cosf+0x28>
 802964c:	eddd 0a01 	vldr	s1, [sp, #4]
 8029650:	ed9d 0a00 	vldr	s0, [sp]
 8029654:	f000 f942 	bl	80298dc <__kernel_sinf>
 8029658:	eeb1 0a40 	vneg.f32	s0, s0
 802965c:	e7e2      	b.n	8029624 <cosf+0x28>
 802965e:	eddd 0a01 	vldr	s1, [sp, #4]
 8029662:	ed9d 0a00 	vldr	s0, [sp]
 8029666:	f000 f8db 	bl	8029820 <__kernel_cosf>
 802966a:	e7f5      	b.n	8029658 <cosf+0x5c>
 802966c:	eddd 0a01 	vldr	s1, [sp, #4]
 8029670:	ed9d 0a00 	vldr	s0, [sp]
 8029674:	2001      	movs	r0, #1
 8029676:	f000 f931 	bl	80298dc <__kernel_sinf>
 802967a:	e7d3      	b.n	8029624 <cosf+0x28>
 802967c:	3f490fd8 	.word	0x3f490fd8
 8029680:	00000000 	.word	0x00000000

08029684 <sinf>:
 8029684:	ee10 3a10 	vmov	r3, s0
 8029688:	b507      	push	{r0, r1, r2, lr}
 802968a:	4a1f      	ldr	r2, [pc, #124]	; (8029708 <sinf+0x84>)
 802968c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029690:	4293      	cmp	r3, r2
 8029692:	dc07      	bgt.n	80296a4 <sinf+0x20>
 8029694:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802970c <sinf+0x88>
 8029698:	2000      	movs	r0, #0
 802969a:	b003      	add	sp, #12
 802969c:	f85d eb04 	ldr.w	lr, [sp], #4
 80296a0:	f000 b91c 	b.w	80298dc <__kernel_sinf>
 80296a4:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80296a8:	db04      	blt.n	80296b4 <sinf+0x30>
 80296aa:	ee30 0a40 	vsub.f32	s0, s0, s0
 80296ae:	b003      	add	sp, #12
 80296b0:	f85d fb04 	ldr.w	pc, [sp], #4
 80296b4:	4668      	mov	r0, sp
 80296b6:	f000 f959 	bl	802996c <__ieee754_rem_pio2f>
 80296ba:	f000 0003 	and.w	r0, r0, #3
 80296be:	2801      	cmp	r0, #1
 80296c0:	d00a      	beq.n	80296d8 <sinf+0x54>
 80296c2:	2802      	cmp	r0, #2
 80296c4:	d00f      	beq.n	80296e6 <sinf+0x62>
 80296c6:	b9c0      	cbnz	r0, 80296fa <sinf+0x76>
 80296c8:	eddd 0a01 	vldr	s1, [sp, #4]
 80296cc:	ed9d 0a00 	vldr	s0, [sp]
 80296d0:	2001      	movs	r0, #1
 80296d2:	f000 f903 	bl	80298dc <__kernel_sinf>
 80296d6:	e7ea      	b.n	80296ae <sinf+0x2a>
 80296d8:	eddd 0a01 	vldr	s1, [sp, #4]
 80296dc:	ed9d 0a00 	vldr	s0, [sp]
 80296e0:	f000 f89e 	bl	8029820 <__kernel_cosf>
 80296e4:	e7e3      	b.n	80296ae <sinf+0x2a>
 80296e6:	eddd 0a01 	vldr	s1, [sp, #4]
 80296ea:	ed9d 0a00 	vldr	s0, [sp]
 80296ee:	2001      	movs	r0, #1
 80296f0:	f000 f8f4 	bl	80298dc <__kernel_sinf>
 80296f4:	eeb1 0a40 	vneg.f32	s0, s0
 80296f8:	e7d9      	b.n	80296ae <sinf+0x2a>
 80296fa:	eddd 0a01 	vldr	s1, [sp, #4]
 80296fe:	ed9d 0a00 	vldr	s0, [sp]
 8029702:	f000 f88d 	bl	8029820 <__kernel_cosf>
 8029706:	e7f5      	b.n	80296f4 <sinf+0x70>
 8029708:	3f490fd8 	.word	0x3f490fd8
 802970c:	00000000 	.word	0x00000000

08029710 <__ieee754_sqrtf>:
 8029710:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8029714:	4770      	bx	lr
	...

08029718 <ceilf>:
 8029718:	ee10 3a10 	vmov	r3, s0
 802971c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8029720:	3a7f      	subs	r2, #127	; 0x7f
 8029722:	2a16      	cmp	r2, #22
 8029724:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8029728:	dc2a      	bgt.n	8029780 <ceilf+0x68>
 802972a:	2a00      	cmp	r2, #0
 802972c:	da11      	bge.n	8029752 <ceilf+0x3a>
 802972e:	eddf 7a19 	vldr	s15, [pc, #100]	; 8029794 <ceilf+0x7c>
 8029732:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029736:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802973a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802973e:	dd05      	ble.n	802974c <ceilf+0x34>
 8029740:	2b00      	cmp	r3, #0
 8029742:	db23      	blt.n	802978c <ceilf+0x74>
 8029744:	2900      	cmp	r1, #0
 8029746:	bf18      	it	ne
 8029748:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802974c:	ee00 3a10 	vmov	s0, r3
 8029750:	4770      	bx	lr
 8029752:	4911      	ldr	r1, [pc, #68]	; (8029798 <ceilf+0x80>)
 8029754:	4111      	asrs	r1, r2
 8029756:	420b      	tst	r3, r1
 8029758:	d0fa      	beq.n	8029750 <ceilf+0x38>
 802975a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8029794 <ceilf+0x7c>
 802975e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029762:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8029766:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802976a:	ddef      	ble.n	802974c <ceilf+0x34>
 802976c:	2b00      	cmp	r3, #0
 802976e:	bfc2      	ittt	gt
 8029770:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8029774:	fa40 f202 	asrgt.w	r2, r0, r2
 8029778:	189b      	addgt	r3, r3, r2
 802977a:	ea23 0301 	bic.w	r3, r3, r1
 802977e:	e7e5      	b.n	802974c <ceilf+0x34>
 8029780:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8029784:	d3e4      	bcc.n	8029750 <ceilf+0x38>
 8029786:	ee30 0a00 	vadd.f32	s0, s0, s0
 802978a:	4770      	bx	lr
 802978c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8029790:	e7dc      	b.n	802974c <ceilf+0x34>
 8029792:	bf00      	nop
 8029794:	7149f2ca 	.word	0x7149f2ca
 8029798:	007fffff 	.word	0x007fffff

0802979c <floorf>:
 802979c:	ee10 3a10 	vmov	r3, s0
 80297a0:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80297a4:	3a7f      	subs	r2, #127	; 0x7f
 80297a6:	2a16      	cmp	r2, #22
 80297a8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80297ac:	dc2a      	bgt.n	8029804 <floorf+0x68>
 80297ae:	2a00      	cmp	r2, #0
 80297b0:	da11      	bge.n	80297d6 <floorf+0x3a>
 80297b2:	eddf 7a18 	vldr	s15, [pc, #96]	; 8029814 <floorf+0x78>
 80297b6:	ee30 0a27 	vadd.f32	s0, s0, s15
 80297ba:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80297be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80297c2:	dd05      	ble.n	80297d0 <floorf+0x34>
 80297c4:	2b00      	cmp	r3, #0
 80297c6:	da23      	bge.n	8029810 <floorf+0x74>
 80297c8:	4a13      	ldr	r2, [pc, #76]	; (8029818 <floorf+0x7c>)
 80297ca:	2900      	cmp	r1, #0
 80297cc:	bf18      	it	ne
 80297ce:	4613      	movne	r3, r2
 80297d0:	ee00 3a10 	vmov	s0, r3
 80297d4:	4770      	bx	lr
 80297d6:	4911      	ldr	r1, [pc, #68]	; (802981c <floorf+0x80>)
 80297d8:	4111      	asrs	r1, r2
 80297da:	420b      	tst	r3, r1
 80297dc:	d0fa      	beq.n	80297d4 <floorf+0x38>
 80297de:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8029814 <floorf+0x78>
 80297e2:	ee30 0a27 	vadd.f32	s0, s0, s15
 80297e6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80297ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80297ee:	ddef      	ble.n	80297d0 <floorf+0x34>
 80297f0:	2b00      	cmp	r3, #0
 80297f2:	bfbe      	ittt	lt
 80297f4:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 80297f8:	fa40 f202 	asrlt.w	r2, r0, r2
 80297fc:	189b      	addlt	r3, r3, r2
 80297fe:	ea23 0301 	bic.w	r3, r3, r1
 8029802:	e7e5      	b.n	80297d0 <floorf+0x34>
 8029804:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8029808:	d3e4      	bcc.n	80297d4 <floorf+0x38>
 802980a:	ee30 0a00 	vadd.f32	s0, s0, s0
 802980e:	4770      	bx	lr
 8029810:	2300      	movs	r3, #0
 8029812:	e7dd      	b.n	80297d0 <floorf+0x34>
 8029814:	7149f2ca 	.word	0x7149f2ca
 8029818:	bf800000 	.word	0xbf800000
 802981c:	007fffff 	.word	0x007fffff

08029820 <__kernel_cosf>:
 8029820:	ee10 3a10 	vmov	r3, s0
 8029824:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029828:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802982c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8029830:	da05      	bge.n	802983e <__kernel_cosf+0x1e>
 8029832:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8029836:	ee17 2a90 	vmov	r2, s15
 802983a:	2a00      	cmp	r2, #0
 802983c:	d03b      	beq.n	80298b6 <__kernel_cosf+0x96>
 802983e:	ee20 7a00 	vmul.f32	s14, s0, s0
 8029842:	eddf 7a1e 	vldr	s15, [pc, #120]	; 80298bc <__kernel_cosf+0x9c>
 8029846:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 80298c0 <__kernel_cosf+0xa0>
 802984a:	4a1e      	ldr	r2, [pc, #120]	; (80298c4 <__kernel_cosf+0xa4>)
 802984c:	eea7 6a27 	vfma.f32	s12, s14, s15
 8029850:	4293      	cmp	r3, r2
 8029852:	eddf 7a1d 	vldr	s15, [pc, #116]	; 80298c8 <__kernel_cosf+0xa8>
 8029856:	eee6 7a07 	vfma.f32	s15, s12, s14
 802985a:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 80298cc <__kernel_cosf+0xac>
 802985e:	eea7 6a87 	vfma.f32	s12, s15, s14
 8029862:	eddf 7a1b 	vldr	s15, [pc, #108]	; 80298d0 <__kernel_cosf+0xb0>
 8029866:	eee6 7a07 	vfma.f32	s15, s12, s14
 802986a:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 80298d4 <__kernel_cosf+0xb4>
 802986e:	eea7 6a87 	vfma.f32	s12, s15, s14
 8029872:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 8029876:	ee26 6a07 	vmul.f32	s12, s12, s14
 802987a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802987e:	eee7 0a06 	vfma.f32	s1, s14, s12
 8029882:	ee67 7a27 	vmul.f32	s15, s14, s15
 8029886:	dc04      	bgt.n	8029892 <__kernel_cosf+0x72>
 8029888:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802988c:	ee36 0ae7 	vsub.f32	s0, s13, s15
 8029890:	4770      	bx	lr
 8029892:	4a11      	ldr	r2, [pc, #68]	; (80298d8 <__kernel_cosf+0xb8>)
 8029894:	4293      	cmp	r3, r2
 8029896:	bfda      	itte	le
 8029898:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802989c:	ee07 3a10 	vmovle	s14, r3
 80298a0:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 80298a4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80298a8:	ee36 0ac7 	vsub.f32	s0, s13, s14
 80298ac:	ee77 7ae0 	vsub.f32	s15, s15, s1
 80298b0:	ee30 0a67 	vsub.f32	s0, s0, s15
 80298b4:	4770      	bx	lr
 80298b6:	eeb0 0a66 	vmov.f32	s0, s13
 80298ba:	4770      	bx	lr
 80298bc:	ad47d74e 	.word	0xad47d74e
 80298c0:	310f74f6 	.word	0x310f74f6
 80298c4:	3e999999 	.word	0x3e999999
 80298c8:	b493f27c 	.word	0xb493f27c
 80298cc:	37d00d01 	.word	0x37d00d01
 80298d0:	bab60b61 	.word	0xbab60b61
 80298d4:	3d2aaaab 	.word	0x3d2aaaab
 80298d8:	3f480000 	.word	0x3f480000

080298dc <__kernel_sinf>:
 80298dc:	ee10 3a10 	vmov	r3, s0
 80298e0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80298e4:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 80298e8:	da04      	bge.n	80298f4 <__kernel_sinf+0x18>
 80298ea:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80298ee:	ee17 3a90 	vmov	r3, s15
 80298f2:	b35b      	cbz	r3, 802994c <__kernel_sinf+0x70>
 80298f4:	ee20 7a00 	vmul.f32	s14, s0, s0
 80298f8:	eddf 7a15 	vldr	s15, [pc, #84]	; 8029950 <__kernel_sinf+0x74>
 80298fc:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8029954 <__kernel_sinf+0x78>
 8029900:	eea7 6a27 	vfma.f32	s12, s14, s15
 8029904:	eddf 7a14 	vldr	s15, [pc, #80]	; 8029958 <__kernel_sinf+0x7c>
 8029908:	eee6 7a07 	vfma.f32	s15, s12, s14
 802990c:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802995c <__kernel_sinf+0x80>
 8029910:	eea7 6a87 	vfma.f32	s12, s15, s14
 8029914:	eddf 7a12 	vldr	s15, [pc, #72]	; 8029960 <__kernel_sinf+0x84>
 8029918:	ee60 6a07 	vmul.f32	s13, s0, s14
 802991c:	eee6 7a07 	vfma.f32	s15, s12, s14
 8029920:	b930      	cbnz	r0, 8029930 <__kernel_sinf+0x54>
 8029922:	ed9f 6a10 	vldr	s12, [pc, #64]	; 8029964 <__kernel_sinf+0x88>
 8029926:	eea7 6a27 	vfma.f32	s12, s14, s15
 802992a:	eea6 0a26 	vfma.f32	s0, s12, s13
 802992e:	4770      	bx	lr
 8029930:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8029934:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8029938:	eee0 7a86 	vfma.f32	s15, s1, s12
 802993c:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8029940:	eddf 7a09 	vldr	s15, [pc, #36]	; 8029968 <__kernel_sinf+0x8c>
 8029944:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8029948:	ee30 0a60 	vsub.f32	s0, s0, s1
 802994c:	4770      	bx	lr
 802994e:	bf00      	nop
 8029950:	2f2ec9d3 	.word	0x2f2ec9d3
 8029954:	b2d72f34 	.word	0xb2d72f34
 8029958:	3638ef1b 	.word	0x3638ef1b
 802995c:	b9500d01 	.word	0xb9500d01
 8029960:	3c088889 	.word	0x3c088889
 8029964:	be2aaaab 	.word	0xbe2aaaab
 8029968:	3e2aaaab 	.word	0x3e2aaaab

0802996c <__ieee754_rem_pio2f>:
 802996c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802996e:	ee10 6a10 	vmov	r6, s0
 8029972:	4b86      	ldr	r3, [pc, #536]	; (8029b8c <__ieee754_rem_pio2f+0x220>)
 8029974:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8029978:	429d      	cmp	r5, r3
 802997a:	b087      	sub	sp, #28
 802997c:	4604      	mov	r4, r0
 802997e:	dc05      	bgt.n	802998c <__ieee754_rem_pio2f+0x20>
 8029980:	2300      	movs	r3, #0
 8029982:	ed80 0a00 	vstr	s0, [r0]
 8029986:	6043      	str	r3, [r0, #4]
 8029988:	2000      	movs	r0, #0
 802998a:	e020      	b.n	80299ce <__ieee754_rem_pio2f+0x62>
 802998c:	4b80      	ldr	r3, [pc, #512]	; (8029b90 <__ieee754_rem_pio2f+0x224>)
 802998e:	429d      	cmp	r5, r3
 8029990:	dc38      	bgt.n	8029a04 <__ieee754_rem_pio2f+0x98>
 8029992:	2e00      	cmp	r6, #0
 8029994:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 8029b94 <__ieee754_rem_pio2f+0x228>
 8029998:	4b7f      	ldr	r3, [pc, #508]	; (8029b98 <__ieee754_rem_pio2f+0x22c>)
 802999a:	f025 050f 	bic.w	r5, r5, #15
 802999e:	dd18      	ble.n	80299d2 <__ieee754_rem_pio2f+0x66>
 80299a0:	429d      	cmp	r5, r3
 80299a2:	ee70 7a47 	vsub.f32	s15, s0, s14
 80299a6:	bf09      	itett	eq
 80299a8:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 8029b9c <__ieee754_rem_pio2f+0x230>
 80299ac:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 8029ba0 <__ieee754_rem_pio2f+0x234>
 80299b0:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 80299b4:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 8029ba4 <__ieee754_rem_pio2f+0x238>
 80299b8:	ee77 6ac7 	vsub.f32	s13, s15, s14
 80299bc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80299c0:	edc0 6a00 	vstr	s13, [r0]
 80299c4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80299c8:	edc0 7a01 	vstr	s15, [r0, #4]
 80299cc:	2001      	movs	r0, #1
 80299ce:	b007      	add	sp, #28
 80299d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80299d2:	429d      	cmp	r5, r3
 80299d4:	ee70 7a07 	vadd.f32	s15, s0, s14
 80299d8:	bf09      	itett	eq
 80299da:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 8029b9c <__ieee754_rem_pio2f+0x230>
 80299de:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 8029ba0 <__ieee754_rem_pio2f+0x234>
 80299e2:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 80299e6:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 8029ba4 <__ieee754_rem_pio2f+0x238>
 80299ea:	ee77 6a87 	vadd.f32	s13, s15, s14
 80299ee:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80299f2:	edc0 6a00 	vstr	s13, [r0]
 80299f6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80299fa:	edc0 7a01 	vstr	s15, [r0, #4]
 80299fe:	f04f 30ff 	mov.w	r0, #4294967295
 8029a02:	e7e4      	b.n	80299ce <__ieee754_rem_pio2f+0x62>
 8029a04:	4b68      	ldr	r3, [pc, #416]	; (8029ba8 <__ieee754_rem_pio2f+0x23c>)
 8029a06:	429d      	cmp	r5, r3
 8029a08:	dc71      	bgt.n	8029aee <__ieee754_rem_pio2f+0x182>
 8029a0a:	f000 f8db 	bl	8029bc4 <fabsf>
 8029a0e:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8029bac <__ieee754_rem_pio2f+0x240>
 8029a12:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8029a16:	eee0 7a07 	vfma.f32	s15, s0, s14
 8029a1a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8029a1e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8029a22:	ee17 0a90 	vmov	r0, s15
 8029a26:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8029b94 <__ieee754_rem_pio2f+0x228>
 8029a2a:	eea7 0a67 	vfms.f32	s0, s14, s15
 8029a2e:	281f      	cmp	r0, #31
 8029a30:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8029ba0 <__ieee754_rem_pio2f+0x234>
 8029a34:	ee67 7a27 	vmul.f32	s15, s14, s15
 8029a38:	eeb1 6a47 	vneg.f32	s12, s14
 8029a3c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8029a40:	ee16 2a90 	vmov	r2, s13
 8029a44:	dc1c      	bgt.n	8029a80 <__ieee754_rem_pio2f+0x114>
 8029a46:	495a      	ldr	r1, [pc, #360]	; (8029bb0 <__ieee754_rem_pio2f+0x244>)
 8029a48:	1e47      	subs	r7, r0, #1
 8029a4a:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 8029a4e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8029a52:	428b      	cmp	r3, r1
 8029a54:	d014      	beq.n	8029a80 <__ieee754_rem_pio2f+0x114>
 8029a56:	6022      	str	r2, [r4, #0]
 8029a58:	ed94 7a00 	vldr	s14, [r4]
 8029a5c:	ee30 0a47 	vsub.f32	s0, s0, s14
 8029a60:	2e00      	cmp	r6, #0
 8029a62:	ee30 0a67 	vsub.f32	s0, s0, s15
 8029a66:	ed84 0a01 	vstr	s0, [r4, #4]
 8029a6a:	dab0      	bge.n	80299ce <__ieee754_rem_pio2f+0x62>
 8029a6c:	eeb1 7a47 	vneg.f32	s14, s14
 8029a70:	eeb1 0a40 	vneg.f32	s0, s0
 8029a74:	ed84 7a00 	vstr	s14, [r4]
 8029a78:	ed84 0a01 	vstr	s0, [r4, #4]
 8029a7c:	4240      	negs	r0, r0
 8029a7e:	e7a6      	b.n	80299ce <__ieee754_rem_pio2f+0x62>
 8029a80:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8029a84:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 8029a88:	2908      	cmp	r1, #8
 8029a8a:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8029a8e:	dde2      	ble.n	8029a56 <__ieee754_rem_pio2f+0xea>
 8029a90:	eddf 5a42 	vldr	s11, [pc, #264]	; 8029b9c <__ieee754_rem_pio2f+0x230>
 8029a94:	eef0 6a40 	vmov.f32	s13, s0
 8029a98:	eee6 6a25 	vfma.f32	s13, s12, s11
 8029a9c:	ee70 7a66 	vsub.f32	s15, s0, s13
 8029aa0:	eee6 7a25 	vfma.f32	s15, s12, s11
 8029aa4:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8029ba4 <__ieee754_rem_pio2f+0x238>
 8029aa8:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8029aac:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8029ab0:	ee15 2a90 	vmov	r2, s11
 8029ab4:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8029ab8:	1a5b      	subs	r3, r3, r1
 8029aba:	2b19      	cmp	r3, #25
 8029abc:	dc04      	bgt.n	8029ac8 <__ieee754_rem_pio2f+0x15c>
 8029abe:	edc4 5a00 	vstr	s11, [r4]
 8029ac2:	eeb0 0a66 	vmov.f32	s0, s13
 8029ac6:	e7c7      	b.n	8029a58 <__ieee754_rem_pio2f+0xec>
 8029ac8:	eddf 5a3a 	vldr	s11, [pc, #232]	; 8029bb4 <__ieee754_rem_pio2f+0x248>
 8029acc:	eeb0 0a66 	vmov.f32	s0, s13
 8029ad0:	eea6 0a25 	vfma.f32	s0, s12, s11
 8029ad4:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8029ad8:	eddf 6a37 	vldr	s13, [pc, #220]	; 8029bb8 <__ieee754_rem_pio2f+0x24c>
 8029adc:	eee6 7a25 	vfma.f32	s15, s12, s11
 8029ae0:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8029ae4:	ee30 7a67 	vsub.f32	s14, s0, s15
 8029ae8:	ed84 7a00 	vstr	s14, [r4]
 8029aec:	e7b4      	b.n	8029a58 <__ieee754_rem_pio2f+0xec>
 8029aee:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 8029af2:	db06      	blt.n	8029b02 <__ieee754_rem_pio2f+0x196>
 8029af4:	ee70 7a40 	vsub.f32	s15, s0, s0
 8029af8:	edc0 7a01 	vstr	s15, [r0, #4]
 8029afc:	edc0 7a00 	vstr	s15, [r0]
 8029b00:	e742      	b.n	8029988 <__ieee754_rem_pio2f+0x1c>
 8029b02:	15ea      	asrs	r2, r5, #23
 8029b04:	3a86      	subs	r2, #134	; 0x86
 8029b06:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8029b0a:	ee07 3a90 	vmov	s15, r3
 8029b0e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8029b12:	eddf 6a2a 	vldr	s13, [pc, #168]	; 8029bbc <__ieee754_rem_pio2f+0x250>
 8029b16:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8029b1a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029b1e:	ed8d 7a03 	vstr	s14, [sp, #12]
 8029b22:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8029b26:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8029b2a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8029b2e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029b32:	ed8d 7a04 	vstr	s14, [sp, #16]
 8029b36:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8029b3a:	eef5 7a40 	vcmp.f32	s15, #0.0
 8029b3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029b42:	edcd 7a05 	vstr	s15, [sp, #20]
 8029b46:	d11e      	bne.n	8029b86 <__ieee754_rem_pio2f+0x21a>
 8029b48:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8029b4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029b50:	bf14      	ite	ne
 8029b52:	2302      	movne	r3, #2
 8029b54:	2301      	moveq	r3, #1
 8029b56:	491a      	ldr	r1, [pc, #104]	; (8029bc0 <__ieee754_rem_pio2f+0x254>)
 8029b58:	9101      	str	r1, [sp, #4]
 8029b5a:	2102      	movs	r1, #2
 8029b5c:	9100      	str	r1, [sp, #0]
 8029b5e:	a803      	add	r0, sp, #12
 8029b60:	4621      	mov	r1, r4
 8029b62:	f000 f89d 	bl	8029ca0 <__kernel_rem_pio2f>
 8029b66:	2e00      	cmp	r6, #0
 8029b68:	f6bf af31 	bge.w	80299ce <__ieee754_rem_pio2f+0x62>
 8029b6c:	edd4 7a00 	vldr	s15, [r4]
 8029b70:	eef1 7a67 	vneg.f32	s15, s15
 8029b74:	edc4 7a00 	vstr	s15, [r4]
 8029b78:	edd4 7a01 	vldr	s15, [r4, #4]
 8029b7c:	eef1 7a67 	vneg.f32	s15, s15
 8029b80:	edc4 7a01 	vstr	s15, [r4, #4]
 8029b84:	e77a      	b.n	8029a7c <__ieee754_rem_pio2f+0x110>
 8029b86:	2303      	movs	r3, #3
 8029b88:	e7e5      	b.n	8029b56 <__ieee754_rem_pio2f+0x1ea>
 8029b8a:	bf00      	nop
 8029b8c:	3f490fd8 	.word	0x3f490fd8
 8029b90:	4016cbe3 	.word	0x4016cbe3
 8029b94:	3fc90f80 	.word	0x3fc90f80
 8029b98:	3fc90fd0 	.word	0x3fc90fd0
 8029b9c:	37354400 	.word	0x37354400
 8029ba0:	37354443 	.word	0x37354443
 8029ba4:	2e85a308 	.word	0x2e85a308
 8029ba8:	43490f80 	.word	0x43490f80
 8029bac:	3f22f984 	.word	0x3f22f984
 8029bb0:	080423a0 	.word	0x080423a0
 8029bb4:	2e85a300 	.word	0x2e85a300
 8029bb8:	248d3132 	.word	0x248d3132
 8029bbc:	43800000 	.word	0x43800000
 8029bc0:	08042420 	.word	0x08042420

08029bc4 <fabsf>:
 8029bc4:	ee10 3a10 	vmov	r3, s0
 8029bc8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029bcc:	ee00 3a10 	vmov	s0, r3
 8029bd0:	4770      	bx	lr
	...

08029bd4 <scalbnf>:
 8029bd4:	ee10 3a10 	vmov	r3, s0
 8029bd8:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 8029bdc:	d02b      	beq.n	8029c36 <scalbnf+0x62>
 8029bde:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8029be2:	d302      	bcc.n	8029bea <scalbnf+0x16>
 8029be4:	ee30 0a00 	vadd.f32	s0, s0, s0
 8029be8:	4770      	bx	lr
 8029bea:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 8029bee:	d123      	bne.n	8029c38 <scalbnf+0x64>
 8029bf0:	4b24      	ldr	r3, [pc, #144]	; (8029c84 <scalbnf+0xb0>)
 8029bf2:	eddf 7a25 	vldr	s15, [pc, #148]	; 8029c88 <scalbnf+0xb4>
 8029bf6:	4298      	cmp	r0, r3
 8029bf8:	ee20 0a27 	vmul.f32	s0, s0, s15
 8029bfc:	db17      	blt.n	8029c2e <scalbnf+0x5a>
 8029bfe:	ee10 3a10 	vmov	r3, s0
 8029c02:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8029c06:	3a19      	subs	r2, #25
 8029c08:	f24c 3150 	movw	r1, #50000	; 0xc350
 8029c0c:	4288      	cmp	r0, r1
 8029c0e:	dd15      	ble.n	8029c3c <scalbnf+0x68>
 8029c10:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8029c8c <scalbnf+0xb8>
 8029c14:	eddf 6a1e 	vldr	s13, [pc, #120]	; 8029c90 <scalbnf+0xbc>
 8029c18:	ee10 3a10 	vmov	r3, s0
 8029c1c:	eeb0 7a67 	vmov.f32	s14, s15
 8029c20:	2b00      	cmp	r3, #0
 8029c22:	bfb8      	it	lt
 8029c24:	eef0 7a66 	vmovlt.f32	s15, s13
 8029c28:	ee27 0a87 	vmul.f32	s0, s15, s14
 8029c2c:	4770      	bx	lr
 8029c2e:	eddf 7a19 	vldr	s15, [pc, #100]	; 8029c94 <scalbnf+0xc0>
 8029c32:	ee27 0a80 	vmul.f32	s0, s15, s0
 8029c36:	4770      	bx	lr
 8029c38:	0dd2      	lsrs	r2, r2, #23
 8029c3a:	e7e5      	b.n	8029c08 <scalbnf+0x34>
 8029c3c:	4410      	add	r0, r2
 8029c3e:	28fe      	cmp	r0, #254	; 0xfe
 8029c40:	dce6      	bgt.n	8029c10 <scalbnf+0x3c>
 8029c42:	2800      	cmp	r0, #0
 8029c44:	dd06      	ble.n	8029c54 <scalbnf+0x80>
 8029c46:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8029c4a:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8029c4e:	ee00 3a10 	vmov	s0, r3
 8029c52:	4770      	bx	lr
 8029c54:	f110 0f16 	cmn.w	r0, #22
 8029c58:	da09      	bge.n	8029c6e <scalbnf+0x9a>
 8029c5a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8029c94 <scalbnf+0xc0>
 8029c5e:	eddf 6a0e 	vldr	s13, [pc, #56]	; 8029c98 <scalbnf+0xc4>
 8029c62:	ee10 3a10 	vmov	r3, s0
 8029c66:	eeb0 7a67 	vmov.f32	s14, s15
 8029c6a:	2b00      	cmp	r3, #0
 8029c6c:	e7d9      	b.n	8029c22 <scalbnf+0x4e>
 8029c6e:	3019      	adds	r0, #25
 8029c70:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8029c74:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8029c78:	ed9f 0a08 	vldr	s0, [pc, #32]	; 8029c9c <scalbnf+0xc8>
 8029c7c:	ee07 3a90 	vmov	s15, r3
 8029c80:	e7d7      	b.n	8029c32 <scalbnf+0x5e>
 8029c82:	bf00      	nop
 8029c84:	ffff3cb0 	.word	0xffff3cb0
 8029c88:	4c000000 	.word	0x4c000000
 8029c8c:	7149f2ca 	.word	0x7149f2ca
 8029c90:	f149f2ca 	.word	0xf149f2ca
 8029c94:	0da24260 	.word	0x0da24260
 8029c98:	8da24260 	.word	0x8da24260
 8029c9c:	33000000 	.word	0x33000000

08029ca0 <__kernel_rem_pio2f>:
 8029ca0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029ca4:	ed2d 8b04 	vpush	{d8-d9}
 8029ca8:	b0d9      	sub	sp, #356	; 0x164
 8029caa:	4688      	mov	r8, r1
 8029cac:	9002      	str	r0, [sp, #8]
 8029cae:	49b8      	ldr	r1, [pc, #736]	; (8029f90 <__kernel_rem_pio2f+0x2f0>)
 8029cb0:	9866      	ldr	r0, [sp, #408]	; 0x198
 8029cb2:	9301      	str	r3, [sp, #4]
 8029cb4:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 8029cb8:	9901      	ldr	r1, [sp, #4]
 8029cba:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 8029cbc:	f101 3bff 	add.w	fp, r1, #4294967295
 8029cc0:	1d11      	adds	r1, r2, #4
 8029cc2:	db25      	blt.n	8029d10 <__kernel_rem_pio2f+0x70>
 8029cc4:	1ed0      	subs	r0, r2, #3
 8029cc6:	bf48      	it	mi
 8029cc8:	1d10      	addmi	r0, r2, #4
 8029cca:	10c0      	asrs	r0, r0, #3
 8029ccc:	1c45      	adds	r5, r0, #1
 8029cce:	00e9      	lsls	r1, r5, #3
 8029cd0:	eba0 070b 	sub.w	r7, r0, fp
 8029cd4:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 8029fa0 <__kernel_rem_pio2f+0x300>
 8029cd8:	9103      	str	r1, [sp, #12]
 8029cda:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 8029cde:	eb0a 0c0b 	add.w	ip, sl, fp
 8029ce2:	ae1c      	add	r6, sp, #112	; 0x70
 8029ce4:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 8029ce8:	2400      	movs	r4, #0
 8029cea:	4564      	cmp	r4, ip
 8029cec:	dd12      	ble.n	8029d14 <__kernel_rem_pio2f+0x74>
 8029cee:	9901      	ldr	r1, [sp, #4]
 8029cf0:	ac1c      	add	r4, sp, #112	; 0x70
 8029cf2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8029cf6:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 8029cfa:	f04f 0c00 	mov.w	ip, #0
 8029cfe:	45d4      	cmp	ip, sl
 8029d00:	dc27      	bgt.n	8029d52 <__kernel_rem_pio2f+0xb2>
 8029d02:	f8dd e008 	ldr.w	lr, [sp, #8]
 8029d06:	eddf 7aa6 	vldr	s15, [pc, #664]	; 8029fa0 <__kernel_rem_pio2f+0x300>
 8029d0a:	4627      	mov	r7, r4
 8029d0c:	2600      	movs	r6, #0
 8029d0e:	e016      	b.n	8029d3e <__kernel_rem_pio2f+0x9e>
 8029d10:	2000      	movs	r0, #0
 8029d12:	e7db      	b.n	8029ccc <__kernel_rem_pio2f+0x2c>
 8029d14:	42e7      	cmn	r7, r4
 8029d16:	bf5d      	ittte	pl
 8029d18:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 8029d1c:	ee07 1a90 	vmovpl	s15, r1
 8029d20:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8029d24:	eef0 7a47 	vmovmi.f32	s15, s14
 8029d28:	ece6 7a01 	vstmia	r6!, {s15}
 8029d2c:	3401      	adds	r4, #1
 8029d2e:	e7dc      	b.n	8029cea <__kernel_rem_pio2f+0x4a>
 8029d30:	ecfe 6a01 	vldmia	lr!, {s13}
 8029d34:	ed97 7a00 	vldr	s14, [r7]
 8029d38:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029d3c:	3601      	adds	r6, #1
 8029d3e:	455e      	cmp	r6, fp
 8029d40:	f1a7 0704 	sub.w	r7, r7, #4
 8029d44:	ddf4      	ble.n	8029d30 <__kernel_rem_pio2f+0x90>
 8029d46:	ece9 7a01 	vstmia	r9!, {s15}
 8029d4a:	f10c 0c01 	add.w	ip, ip, #1
 8029d4e:	3404      	adds	r4, #4
 8029d50:	e7d5      	b.n	8029cfe <__kernel_rem_pio2f+0x5e>
 8029d52:	a908      	add	r1, sp, #32
 8029d54:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8029d58:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 8029d5c:	eddf 8a8f 	vldr	s17, [pc, #572]	; 8029f9c <__kernel_rem_pio2f+0x2fc>
 8029d60:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 8029f98 <__kernel_rem_pio2f+0x2f8>
 8029d64:	9105      	str	r1, [sp, #20]
 8029d66:	9304      	str	r3, [sp, #16]
 8029d68:	4656      	mov	r6, sl
 8029d6a:	00b3      	lsls	r3, r6, #2
 8029d6c:	9306      	str	r3, [sp, #24]
 8029d6e:	ab58      	add	r3, sp, #352	; 0x160
 8029d70:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8029d74:	ac08      	add	r4, sp, #32
 8029d76:	ab44      	add	r3, sp, #272	; 0x110
 8029d78:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 8029d7c:	46a4      	mov	ip, r4
 8029d7e:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8029d82:	4637      	mov	r7, r6
 8029d84:	2f00      	cmp	r7, #0
 8029d86:	f1a0 0004 	sub.w	r0, r0, #4
 8029d8a:	dc4a      	bgt.n	8029e22 <__kernel_rem_pio2f+0x182>
 8029d8c:	4628      	mov	r0, r5
 8029d8e:	9207      	str	r2, [sp, #28]
 8029d90:	f7ff ff20 	bl	8029bd4 <scalbnf>
 8029d94:	eeb0 8a40 	vmov.f32	s16, s0
 8029d98:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 8029d9c:	ee28 0a00 	vmul.f32	s0, s16, s0
 8029da0:	f7ff fcfc 	bl	802979c <floorf>
 8029da4:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 8029da8:	eea0 8a67 	vfms.f32	s16, s0, s15
 8029dac:	2d00      	cmp	r5, #0
 8029dae:	9a07      	ldr	r2, [sp, #28]
 8029db0:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8029db4:	ee17 9a90 	vmov	r9, s15
 8029db8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029dbc:	ee38 8a67 	vsub.f32	s16, s16, s15
 8029dc0:	dd41      	ble.n	8029e46 <__kernel_rem_pio2f+0x1a6>
 8029dc2:	f106 3cff 	add.w	ip, r6, #4294967295
 8029dc6:	ab08      	add	r3, sp, #32
 8029dc8:	f1c5 0e08 	rsb	lr, r5, #8
 8029dcc:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 8029dd0:	fa47 f00e 	asr.w	r0, r7, lr
 8029dd4:	4481      	add	r9, r0
 8029dd6:	fa00 f00e 	lsl.w	r0, r0, lr
 8029dda:	1a3f      	subs	r7, r7, r0
 8029ddc:	f1c5 0007 	rsb	r0, r5, #7
 8029de0:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 8029de4:	4107      	asrs	r7, r0
 8029de6:	2f00      	cmp	r7, #0
 8029de8:	dd3c      	ble.n	8029e64 <__kernel_rem_pio2f+0x1c4>
 8029dea:	f04f 0e00 	mov.w	lr, #0
 8029dee:	f109 0901 	add.w	r9, r9, #1
 8029df2:	4671      	mov	r1, lr
 8029df4:	4576      	cmp	r6, lr
 8029df6:	dc67      	bgt.n	8029ec8 <__kernel_rem_pio2f+0x228>
 8029df8:	2d00      	cmp	r5, #0
 8029dfa:	dd03      	ble.n	8029e04 <__kernel_rem_pio2f+0x164>
 8029dfc:	2d01      	cmp	r5, #1
 8029dfe:	d074      	beq.n	8029eea <__kernel_rem_pio2f+0x24a>
 8029e00:	2d02      	cmp	r5, #2
 8029e02:	d07b      	beq.n	8029efc <__kernel_rem_pio2f+0x25c>
 8029e04:	2f02      	cmp	r7, #2
 8029e06:	d12d      	bne.n	8029e64 <__kernel_rem_pio2f+0x1c4>
 8029e08:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8029e0c:	ee30 8a48 	vsub.f32	s16, s0, s16
 8029e10:	b341      	cbz	r1, 8029e64 <__kernel_rem_pio2f+0x1c4>
 8029e12:	4628      	mov	r0, r5
 8029e14:	9207      	str	r2, [sp, #28]
 8029e16:	f7ff fedd 	bl	8029bd4 <scalbnf>
 8029e1a:	9a07      	ldr	r2, [sp, #28]
 8029e1c:	ee38 8a40 	vsub.f32	s16, s16, s0
 8029e20:	e020      	b.n	8029e64 <__kernel_rem_pio2f+0x1c4>
 8029e22:	ee60 7a28 	vmul.f32	s15, s0, s17
 8029e26:	3f01      	subs	r7, #1
 8029e28:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8029e2c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029e30:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8029e34:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029e38:	ecac 0a01 	vstmia	ip!, {s0}
 8029e3c:	ed90 0a00 	vldr	s0, [r0]
 8029e40:	ee37 0a80 	vadd.f32	s0, s15, s0
 8029e44:	e79e      	b.n	8029d84 <__kernel_rem_pio2f+0xe4>
 8029e46:	d105      	bne.n	8029e54 <__kernel_rem_pio2f+0x1b4>
 8029e48:	1e70      	subs	r0, r6, #1
 8029e4a:	ab08      	add	r3, sp, #32
 8029e4c:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 8029e50:	11ff      	asrs	r7, r7, #7
 8029e52:	e7c8      	b.n	8029de6 <__kernel_rem_pio2f+0x146>
 8029e54:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8029e58:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8029e5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029e60:	da30      	bge.n	8029ec4 <__kernel_rem_pio2f+0x224>
 8029e62:	2700      	movs	r7, #0
 8029e64:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8029e68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029e6c:	f040 809a 	bne.w	8029fa4 <__kernel_rem_pio2f+0x304>
 8029e70:	1e74      	subs	r4, r6, #1
 8029e72:	46a4      	mov	ip, r4
 8029e74:	2100      	movs	r1, #0
 8029e76:	45d4      	cmp	ip, sl
 8029e78:	da47      	bge.n	8029f0a <__kernel_rem_pio2f+0x26a>
 8029e7a:	2900      	cmp	r1, #0
 8029e7c:	d063      	beq.n	8029f46 <__kernel_rem_pio2f+0x2a6>
 8029e7e:	ab08      	add	r3, sp, #32
 8029e80:	3d08      	subs	r5, #8
 8029e82:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8029e86:	2b00      	cmp	r3, #0
 8029e88:	d07f      	beq.n	8029f8a <__kernel_rem_pio2f+0x2ea>
 8029e8a:	4628      	mov	r0, r5
 8029e8c:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8029e90:	f7ff fea0 	bl	8029bd4 <scalbnf>
 8029e94:	1c63      	adds	r3, r4, #1
 8029e96:	aa44      	add	r2, sp, #272	; 0x110
 8029e98:	ed9f 7a40 	vldr	s14, [pc, #256]	; 8029f9c <__kernel_rem_pio2f+0x2fc>
 8029e9c:	0099      	lsls	r1, r3, #2
 8029e9e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8029ea2:	4623      	mov	r3, r4
 8029ea4:	2b00      	cmp	r3, #0
 8029ea6:	f280 80ad 	bge.w	802a004 <__kernel_rem_pio2f+0x364>
 8029eaa:	4623      	mov	r3, r4
 8029eac:	2b00      	cmp	r3, #0
 8029eae:	f2c0 80cb 	blt.w	802a048 <__kernel_rem_pio2f+0x3a8>
 8029eb2:	aa44      	add	r2, sp, #272	; 0x110
 8029eb4:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8029eb8:	4e36      	ldr	r6, [pc, #216]	; (8029f94 <__kernel_rem_pio2f+0x2f4>)
 8029eba:	eddf 7a39 	vldr	s15, [pc, #228]	; 8029fa0 <__kernel_rem_pio2f+0x300>
 8029ebe:	2000      	movs	r0, #0
 8029ec0:	1ae2      	subs	r2, r4, r3
 8029ec2:	e0b6      	b.n	802a032 <__kernel_rem_pio2f+0x392>
 8029ec4:	2702      	movs	r7, #2
 8029ec6:	e790      	b.n	8029dea <__kernel_rem_pio2f+0x14a>
 8029ec8:	6820      	ldr	r0, [r4, #0]
 8029eca:	b949      	cbnz	r1, 8029ee0 <__kernel_rem_pio2f+0x240>
 8029ecc:	b118      	cbz	r0, 8029ed6 <__kernel_rem_pio2f+0x236>
 8029ece:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8029ed2:	6020      	str	r0, [r4, #0]
 8029ed4:	2001      	movs	r0, #1
 8029ed6:	f10e 0e01 	add.w	lr, lr, #1
 8029eda:	3404      	adds	r4, #4
 8029edc:	4601      	mov	r1, r0
 8029ede:	e789      	b.n	8029df4 <__kernel_rem_pio2f+0x154>
 8029ee0:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 8029ee4:	6020      	str	r0, [r4, #0]
 8029ee6:	4608      	mov	r0, r1
 8029ee8:	e7f5      	b.n	8029ed6 <__kernel_rem_pio2f+0x236>
 8029eea:	1e74      	subs	r4, r6, #1
 8029eec:	ab08      	add	r3, sp, #32
 8029eee:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8029ef2:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8029ef6:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8029efa:	e783      	b.n	8029e04 <__kernel_rem_pio2f+0x164>
 8029efc:	1e74      	subs	r4, r6, #1
 8029efe:	ab08      	add	r3, sp, #32
 8029f00:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8029f04:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8029f08:	e7f5      	b.n	8029ef6 <__kernel_rem_pio2f+0x256>
 8029f0a:	ab08      	add	r3, sp, #32
 8029f0c:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 8029f10:	f10c 3cff 	add.w	ip, ip, #4294967295
 8029f14:	4301      	orrs	r1, r0
 8029f16:	e7ae      	b.n	8029e76 <__kernel_rem_pio2f+0x1d6>
 8029f18:	3001      	adds	r0, #1
 8029f1a:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 8029f1e:	2f00      	cmp	r7, #0
 8029f20:	d0fa      	beq.n	8029f18 <__kernel_rem_pio2f+0x278>
 8029f22:	9b06      	ldr	r3, [sp, #24]
 8029f24:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 8029f28:	eb0d 0403 	add.w	r4, sp, r3
 8029f2c:	9b01      	ldr	r3, [sp, #4]
 8029f2e:	18f7      	adds	r7, r6, r3
 8029f30:	ab1c      	add	r3, sp, #112	; 0x70
 8029f32:	f106 0c01 	add.w	ip, r6, #1
 8029f36:	3c4c      	subs	r4, #76	; 0x4c
 8029f38:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8029f3c:	4430      	add	r0, r6
 8029f3e:	4560      	cmp	r0, ip
 8029f40:	da04      	bge.n	8029f4c <__kernel_rem_pio2f+0x2ac>
 8029f42:	4606      	mov	r6, r0
 8029f44:	e711      	b.n	8029d6a <__kernel_rem_pio2f+0xca>
 8029f46:	9c05      	ldr	r4, [sp, #20]
 8029f48:	2001      	movs	r0, #1
 8029f4a:	e7e6      	b.n	8029f1a <__kernel_rem_pio2f+0x27a>
 8029f4c:	9b04      	ldr	r3, [sp, #16]
 8029f4e:	f8dd e008 	ldr.w	lr, [sp, #8]
 8029f52:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8029f56:	9306      	str	r3, [sp, #24]
 8029f58:	ee07 3a90 	vmov	s15, r3
 8029f5c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029f60:	2600      	movs	r6, #0
 8029f62:	ece7 7a01 	vstmia	r7!, {s15}
 8029f66:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8029fa0 <__kernel_rem_pio2f+0x300>
 8029f6a:	46b9      	mov	r9, r7
 8029f6c:	455e      	cmp	r6, fp
 8029f6e:	dd04      	ble.n	8029f7a <__kernel_rem_pio2f+0x2da>
 8029f70:	ece4 7a01 	vstmia	r4!, {s15}
 8029f74:	f10c 0c01 	add.w	ip, ip, #1
 8029f78:	e7e1      	b.n	8029f3e <__kernel_rem_pio2f+0x29e>
 8029f7a:	ecfe 6a01 	vldmia	lr!, {s13}
 8029f7e:	ed39 7a01 	vldmdb	r9!, {s14}
 8029f82:	3601      	adds	r6, #1
 8029f84:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029f88:	e7f0      	b.n	8029f6c <__kernel_rem_pio2f+0x2cc>
 8029f8a:	3c01      	subs	r4, #1
 8029f8c:	e777      	b.n	8029e7e <__kernel_rem_pio2f+0x1de>
 8029f8e:	bf00      	nop
 8029f90:	08042764 	.word	0x08042764
 8029f94:	08042738 	.word	0x08042738
 8029f98:	43800000 	.word	0x43800000
 8029f9c:	3b800000 	.word	0x3b800000
 8029fa0:	00000000 	.word	0x00000000
 8029fa4:	9b03      	ldr	r3, [sp, #12]
 8029fa6:	eeb0 0a48 	vmov.f32	s0, s16
 8029faa:	1a98      	subs	r0, r3, r2
 8029fac:	f7ff fe12 	bl	8029bd4 <scalbnf>
 8029fb0:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 8029f98 <__kernel_rem_pio2f+0x2f8>
 8029fb4:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8029fb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029fbc:	db19      	blt.n	8029ff2 <__kernel_rem_pio2f+0x352>
 8029fbe:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 8029f9c <__kernel_rem_pio2f+0x2fc>
 8029fc2:	ee60 7a27 	vmul.f32	s15, s0, s15
 8029fc6:	aa08      	add	r2, sp, #32
 8029fc8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8029fcc:	1c74      	adds	r4, r6, #1
 8029fce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029fd2:	3508      	adds	r5, #8
 8029fd4:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8029fd8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8029fdc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029fe0:	ee10 3a10 	vmov	r3, s0
 8029fe4:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8029fe8:	ee17 3a90 	vmov	r3, s15
 8029fec:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8029ff0:	e74b      	b.n	8029e8a <__kernel_rem_pio2f+0x1ea>
 8029ff2:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029ff6:	aa08      	add	r2, sp, #32
 8029ff8:	ee10 3a10 	vmov	r3, s0
 8029ffc:	4634      	mov	r4, r6
 8029ffe:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802a002:	e742      	b.n	8029e8a <__kernel_rem_pio2f+0x1ea>
 802a004:	a808      	add	r0, sp, #32
 802a006:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802a00a:	9001      	str	r0, [sp, #4]
 802a00c:	ee07 0a90 	vmov	s15, r0
 802a010:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a014:	3b01      	subs	r3, #1
 802a016:	ee67 7a80 	vmul.f32	s15, s15, s0
 802a01a:	ee20 0a07 	vmul.f32	s0, s0, s14
 802a01e:	ed62 7a01 	vstmdb	r2!, {s15}
 802a022:	e73f      	b.n	8029ea4 <__kernel_rem_pio2f+0x204>
 802a024:	ecf6 6a01 	vldmia	r6!, {s13}
 802a028:	ecb5 7a01 	vldmia	r5!, {s14}
 802a02c:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a030:	3001      	adds	r0, #1
 802a032:	4550      	cmp	r0, sl
 802a034:	dc01      	bgt.n	802a03a <__kernel_rem_pio2f+0x39a>
 802a036:	4290      	cmp	r0, r2
 802a038:	ddf4      	ble.n	802a024 <__kernel_rem_pio2f+0x384>
 802a03a:	a858      	add	r0, sp, #352	; 0x160
 802a03c:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802a040:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802a044:	3b01      	subs	r3, #1
 802a046:	e731      	b.n	8029eac <__kernel_rem_pio2f+0x20c>
 802a048:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802a04a:	2b02      	cmp	r3, #2
 802a04c:	dc09      	bgt.n	802a062 <__kernel_rem_pio2f+0x3c2>
 802a04e:	2b00      	cmp	r3, #0
 802a050:	dc2b      	bgt.n	802a0aa <__kernel_rem_pio2f+0x40a>
 802a052:	d044      	beq.n	802a0de <__kernel_rem_pio2f+0x43e>
 802a054:	f009 0007 	and.w	r0, r9, #7
 802a058:	b059      	add	sp, #356	; 0x164
 802a05a:	ecbd 8b04 	vpop	{d8-d9}
 802a05e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a062:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802a064:	2b03      	cmp	r3, #3
 802a066:	d1f5      	bne.n	802a054 <__kernel_rem_pio2f+0x3b4>
 802a068:	aa30      	add	r2, sp, #192	; 0xc0
 802a06a:	1f0b      	subs	r3, r1, #4
 802a06c:	4413      	add	r3, r2
 802a06e:	461a      	mov	r2, r3
 802a070:	4620      	mov	r0, r4
 802a072:	2800      	cmp	r0, #0
 802a074:	f1a2 0204 	sub.w	r2, r2, #4
 802a078:	dc52      	bgt.n	802a120 <__kernel_rem_pio2f+0x480>
 802a07a:	4622      	mov	r2, r4
 802a07c:	2a01      	cmp	r2, #1
 802a07e:	f1a3 0304 	sub.w	r3, r3, #4
 802a082:	dc5d      	bgt.n	802a140 <__kernel_rem_pio2f+0x4a0>
 802a084:	ab30      	add	r3, sp, #192	; 0xc0
 802a086:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 8029fa0 <__kernel_rem_pio2f+0x300>
 802a08a:	440b      	add	r3, r1
 802a08c:	2c01      	cmp	r4, #1
 802a08e:	dc67      	bgt.n	802a160 <__kernel_rem_pio2f+0x4c0>
 802a090:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802a094:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802a098:	2f00      	cmp	r7, #0
 802a09a:	d167      	bne.n	802a16c <__kernel_rem_pio2f+0x4cc>
 802a09c:	edc8 6a00 	vstr	s13, [r8]
 802a0a0:	ed88 7a01 	vstr	s14, [r8, #4]
 802a0a4:	edc8 7a02 	vstr	s15, [r8, #8]
 802a0a8:	e7d4      	b.n	802a054 <__kernel_rem_pio2f+0x3b4>
 802a0aa:	ab30      	add	r3, sp, #192	; 0xc0
 802a0ac:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 8029fa0 <__kernel_rem_pio2f+0x300>
 802a0b0:	440b      	add	r3, r1
 802a0b2:	4622      	mov	r2, r4
 802a0b4:	2a00      	cmp	r2, #0
 802a0b6:	da24      	bge.n	802a102 <__kernel_rem_pio2f+0x462>
 802a0b8:	b34f      	cbz	r7, 802a10e <__kernel_rem_pio2f+0x46e>
 802a0ba:	eef1 7a47 	vneg.f32	s15, s14
 802a0be:	edc8 7a00 	vstr	s15, [r8]
 802a0c2:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802a0c6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a0ca:	aa31      	add	r2, sp, #196	; 0xc4
 802a0cc:	2301      	movs	r3, #1
 802a0ce:	429c      	cmp	r4, r3
 802a0d0:	da20      	bge.n	802a114 <__kernel_rem_pio2f+0x474>
 802a0d2:	b10f      	cbz	r7, 802a0d8 <__kernel_rem_pio2f+0x438>
 802a0d4:	eef1 7a67 	vneg.f32	s15, s15
 802a0d8:	edc8 7a01 	vstr	s15, [r8, #4]
 802a0dc:	e7ba      	b.n	802a054 <__kernel_rem_pio2f+0x3b4>
 802a0de:	ab30      	add	r3, sp, #192	; 0xc0
 802a0e0:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 8029fa0 <__kernel_rem_pio2f+0x300>
 802a0e4:	440b      	add	r3, r1
 802a0e6:	2c00      	cmp	r4, #0
 802a0e8:	da05      	bge.n	802a0f6 <__kernel_rem_pio2f+0x456>
 802a0ea:	b10f      	cbz	r7, 802a0f0 <__kernel_rem_pio2f+0x450>
 802a0ec:	eef1 7a67 	vneg.f32	s15, s15
 802a0f0:	edc8 7a00 	vstr	s15, [r8]
 802a0f4:	e7ae      	b.n	802a054 <__kernel_rem_pio2f+0x3b4>
 802a0f6:	ed33 7a01 	vldmdb	r3!, {s14}
 802a0fa:	3c01      	subs	r4, #1
 802a0fc:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a100:	e7f1      	b.n	802a0e6 <__kernel_rem_pio2f+0x446>
 802a102:	ed73 7a01 	vldmdb	r3!, {s15}
 802a106:	3a01      	subs	r2, #1
 802a108:	ee37 7a27 	vadd.f32	s14, s14, s15
 802a10c:	e7d2      	b.n	802a0b4 <__kernel_rem_pio2f+0x414>
 802a10e:	eef0 7a47 	vmov.f32	s15, s14
 802a112:	e7d4      	b.n	802a0be <__kernel_rem_pio2f+0x41e>
 802a114:	ecb2 7a01 	vldmia	r2!, {s14}
 802a118:	3301      	adds	r3, #1
 802a11a:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a11e:	e7d6      	b.n	802a0ce <__kernel_rem_pio2f+0x42e>
 802a120:	edd2 7a00 	vldr	s15, [r2]
 802a124:	edd2 6a01 	vldr	s13, [r2, #4]
 802a128:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802a12c:	3801      	subs	r0, #1
 802a12e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a132:	ed82 7a00 	vstr	s14, [r2]
 802a136:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802a13a:	edc2 7a01 	vstr	s15, [r2, #4]
 802a13e:	e798      	b.n	802a072 <__kernel_rem_pio2f+0x3d2>
 802a140:	edd3 7a00 	vldr	s15, [r3]
 802a144:	edd3 6a01 	vldr	s13, [r3, #4]
 802a148:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802a14c:	3a01      	subs	r2, #1
 802a14e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a152:	ed83 7a00 	vstr	s14, [r3]
 802a156:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802a15a:	edc3 7a01 	vstr	s15, [r3, #4]
 802a15e:	e78d      	b.n	802a07c <__kernel_rem_pio2f+0x3dc>
 802a160:	ed33 7a01 	vldmdb	r3!, {s14}
 802a164:	3c01      	subs	r4, #1
 802a166:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a16a:	e78f      	b.n	802a08c <__kernel_rem_pio2f+0x3ec>
 802a16c:	eef1 6a66 	vneg.f32	s13, s13
 802a170:	eeb1 7a47 	vneg.f32	s14, s14
 802a174:	edc8 6a00 	vstr	s13, [r8]
 802a178:	ed88 7a01 	vstr	s14, [r8, #4]
 802a17c:	eef1 7a67 	vneg.f32	s15, s15
 802a180:	e790      	b.n	802a0a4 <__kernel_rem_pio2f+0x404>
 802a182:	bf00      	nop

0802a184 <abort>:
 802a184:	b508      	push	{r3, lr}
 802a186:	2006      	movs	r0, #6
 802a188:	f000 fa3a 	bl	802a600 <raise>
 802a18c:	2001      	movs	r0, #1
 802a18e:	f7d8 f9e7 	bl	8002560 <_exit>
	...

0802a194 <__assert_func>:
 802a194:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802a196:	4614      	mov	r4, r2
 802a198:	461a      	mov	r2, r3
 802a19a:	4b09      	ldr	r3, [pc, #36]	; (802a1c0 <__assert_func+0x2c>)
 802a19c:	681b      	ldr	r3, [r3, #0]
 802a19e:	4605      	mov	r5, r0
 802a1a0:	68d8      	ldr	r0, [r3, #12]
 802a1a2:	b14c      	cbz	r4, 802a1b8 <__assert_func+0x24>
 802a1a4:	4b07      	ldr	r3, [pc, #28]	; (802a1c4 <__assert_func+0x30>)
 802a1a6:	9100      	str	r1, [sp, #0]
 802a1a8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802a1ac:	4906      	ldr	r1, [pc, #24]	; (802a1c8 <__assert_func+0x34>)
 802a1ae:	462b      	mov	r3, r5
 802a1b0:	f000 f982 	bl	802a4b8 <fiprintf>
 802a1b4:	f7ff ffe6 	bl	802a184 <abort>
 802a1b8:	4b04      	ldr	r3, [pc, #16]	; (802a1cc <__assert_func+0x38>)
 802a1ba:	461c      	mov	r4, r3
 802a1bc:	e7f3      	b.n	802a1a6 <__assert_func+0x12>
 802a1be:	bf00      	nop
 802a1c0:	20000160 	.word	0x20000160
 802a1c4:	08042770 	.word	0x08042770
 802a1c8:	0804277d 	.word	0x0804277d
 802a1cc:	080427ab 	.word	0x080427ab

0802a1d0 <atexit>:
 802a1d0:	2300      	movs	r3, #0
 802a1d2:	4601      	mov	r1, r0
 802a1d4:	461a      	mov	r2, r3
 802a1d6:	4618      	mov	r0, r3
 802a1d8:	f000 bb16 	b.w	802a808 <__register_exitproc>

0802a1dc <malloc>:
 802a1dc:	4b02      	ldr	r3, [pc, #8]	; (802a1e8 <malloc+0xc>)
 802a1de:	4601      	mov	r1, r0
 802a1e0:	6818      	ldr	r0, [r3, #0]
 802a1e2:	f000 b82b 	b.w	802a23c <_malloc_r>
 802a1e6:	bf00      	nop
 802a1e8:	20000160 	.word	0x20000160

0802a1ec <free>:
 802a1ec:	4b02      	ldr	r3, [pc, #8]	; (802a1f8 <free+0xc>)
 802a1ee:	4601      	mov	r1, r0
 802a1f0:	6818      	ldr	r0, [r3, #0]
 802a1f2:	f000 bb67 	b.w	802a8c4 <_free_r>
 802a1f6:	bf00      	nop
 802a1f8:	20000160 	.word	0x20000160

0802a1fc <sbrk_aligned>:
 802a1fc:	b570      	push	{r4, r5, r6, lr}
 802a1fe:	4e0e      	ldr	r6, [pc, #56]	; (802a238 <sbrk_aligned+0x3c>)
 802a200:	460c      	mov	r4, r1
 802a202:	6831      	ldr	r1, [r6, #0]
 802a204:	4605      	mov	r5, r0
 802a206:	b911      	cbnz	r1, 802a20e <sbrk_aligned+0x12>
 802a208:	f000 faa0 	bl	802a74c <_sbrk_r>
 802a20c:	6030      	str	r0, [r6, #0]
 802a20e:	4621      	mov	r1, r4
 802a210:	4628      	mov	r0, r5
 802a212:	f000 fa9b 	bl	802a74c <_sbrk_r>
 802a216:	1c43      	adds	r3, r0, #1
 802a218:	d00a      	beq.n	802a230 <sbrk_aligned+0x34>
 802a21a:	1cc4      	adds	r4, r0, #3
 802a21c:	f024 0403 	bic.w	r4, r4, #3
 802a220:	42a0      	cmp	r0, r4
 802a222:	d007      	beq.n	802a234 <sbrk_aligned+0x38>
 802a224:	1a21      	subs	r1, r4, r0
 802a226:	4628      	mov	r0, r5
 802a228:	f000 fa90 	bl	802a74c <_sbrk_r>
 802a22c:	3001      	adds	r0, #1
 802a22e:	d101      	bne.n	802a234 <sbrk_aligned+0x38>
 802a230:	f04f 34ff 	mov.w	r4, #4294967295
 802a234:	4620      	mov	r0, r4
 802a236:	bd70      	pop	{r4, r5, r6, pc}
 802a238:	20013884 	.word	0x20013884

0802a23c <_malloc_r>:
 802a23c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802a240:	1ccd      	adds	r5, r1, #3
 802a242:	f025 0503 	bic.w	r5, r5, #3
 802a246:	3508      	adds	r5, #8
 802a248:	2d0c      	cmp	r5, #12
 802a24a:	bf38      	it	cc
 802a24c:	250c      	movcc	r5, #12
 802a24e:	2d00      	cmp	r5, #0
 802a250:	4607      	mov	r7, r0
 802a252:	db01      	blt.n	802a258 <_malloc_r+0x1c>
 802a254:	42a9      	cmp	r1, r5
 802a256:	d905      	bls.n	802a264 <_malloc_r+0x28>
 802a258:	230c      	movs	r3, #12
 802a25a:	603b      	str	r3, [r7, #0]
 802a25c:	2600      	movs	r6, #0
 802a25e:	4630      	mov	r0, r6
 802a260:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802a264:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802a338 <_malloc_r+0xfc>
 802a268:	f000 f868 	bl	802a33c <__malloc_lock>
 802a26c:	f8d8 3000 	ldr.w	r3, [r8]
 802a270:	461c      	mov	r4, r3
 802a272:	bb5c      	cbnz	r4, 802a2cc <_malloc_r+0x90>
 802a274:	4629      	mov	r1, r5
 802a276:	4638      	mov	r0, r7
 802a278:	f7ff ffc0 	bl	802a1fc <sbrk_aligned>
 802a27c:	1c43      	adds	r3, r0, #1
 802a27e:	4604      	mov	r4, r0
 802a280:	d155      	bne.n	802a32e <_malloc_r+0xf2>
 802a282:	f8d8 4000 	ldr.w	r4, [r8]
 802a286:	4626      	mov	r6, r4
 802a288:	2e00      	cmp	r6, #0
 802a28a:	d145      	bne.n	802a318 <_malloc_r+0xdc>
 802a28c:	2c00      	cmp	r4, #0
 802a28e:	d048      	beq.n	802a322 <_malloc_r+0xe6>
 802a290:	6823      	ldr	r3, [r4, #0]
 802a292:	4631      	mov	r1, r6
 802a294:	4638      	mov	r0, r7
 802a296:	eb04 0903 	add.w	r9, r4, r3
 802a29a:	f000 fa57 	bl	802a74c <_sbrk_r>
 802a29e:	4581      	cmp	r9, r0
 802a2a0:	d13f      	bne.n	802a322 <_malloc_r+0xe6>
 802a2a2:	6821      	ldr	r1, [r4, #0]
 802a2a4:	1a6d      	subs	r5, r5, r1
 802a2a6:	4629      	mov	r1, r5
 802a2a8:	4638      	mov	r0, r7
 802a2aa:	f7ff ffa7 	bl	802a1fc <sbrk_aligned>
 802a2ae:	3001      	adds	r0, #1
 802a2b0:	d037      	beq.n	802a322 <_malloc_r+0xe6>
 802a2b2:	6823      	ldr	r3, [r4, #0]
 802a2b4:	442b      	add	r3, r5
 802a2b6:	6023      	str	r3, [r4, #0]
 802a2b8:	f8d8 3000 	ldr.w	r3, [r8]
 802a2bc:	2b00      	cmp	r3, #0
 802a2be:	d038      	beq.n	802a332 <_malloc_r+0xf6>
 802a2c0:	685a      	ldr	r2, [r3, #4]
 802a2c2:	42a2      	cmp	r2, r4
 802a2c4:	d12b      	bne.n	802a31e <_malloc_r+0xe2>
 802a2c6:	2200      	movs	r2, #0
 802a2c8:	605a      	str	r2, [r3, #4]
 802a2ca:	e00f      	b.n	802a2ec <_malloc_r+0xb0>
 802a2cc:	6822      	ldr	r2, [r4, #0]
 802a2ce:	1b52      	subs	r2, r2, r5
 802a2d0:	d41f      	bmi.n	802a312 <_malloc_r+0xd6>
 802a2d2:	2a0b      	cmp	r2, #11
 802a2d4:	d917      	bls.n	802a306 <_malloc_r+0xca>
 802a2d6:	1961      	adds	r1, r4, r5
 802a2d8:	42a3      	cmp	r3, r4
 802a2da:	6025      	str	r5, [r4, #0]
 802a2dc:	bf18      	it	ne
 802a2de:	6059      	strne	r1, [r3, #4]
 802a2e0:	6863      	ldr	r3, [r4, #4]
 802a2e2:	bf08      	it	eq
 802a2e4:	f8c8 1000 	streq.w	r1, [r8]
 802a2e8:	5162      	str	r2, [r4, r5]
 802a2ea:	604b      	str	r3, [r1, #4]
 802a2ec:	4638      	mov	r0, r7
 802a2ee:	f104 060b 	add.w	r6, r4, #11
 802a2f2:	f000 f829 	bl	802a348 <__malloc_unlock>
 802a2f6:	f026 0607 	bic.w	r6, r6, #7
 802a2fa:	1d23      	adds	r3, r4, #4
 802a2fc:	1af2      	subs	r2, r6, r3
 802a2fe:	d0ae      	beq.n	802a25e <_malloc_r+0x22>
 802a300:	1b9b      	subs	r3, r3, r6
 802a302:	50a3      	str	r3, [r4, r2]
 802a304:	e7ab      	b.n	802a25e <_malloc_r+0x22>
 802a306:	42a3      	cmp	r3, r4
 802a308:	6862      	ldr	r2, [r4, #4]
 802a30a:	d1dd      	bne.n	802a2c8 <_malloc_r+0x8c>
 802a30c:	f8c8 2000 	str.w	r2, [r8]
 802a310:	e7ec      	b.n	802a2ec <_malloc_r+0xb0>
 802a312:	4623      	mov	r3, r4
 802a314:	6864      	ldr	r4, [r4, #4]
 802a316:	e7ac      	b.n	802a272 <_malloc_r+0x36>
 802a318:	4634      	mov	r4, r6
 802a31a:	6876      	ldr	r6, [r6, #4]
 802a31c:	e7b4      	b.n	802a288 <_malloc_r+0x4c>
 802a31e:	4613      	mov	r3, r2
 802a320:	e7cc      	b.n	802a2bc <_malloc_r+0x80>
 802a322:	230c      	movs	r3, #12
 802a324:	603b      	str	r3, [r7, #0]
 802a326:	4638      	mov	r0, r7
 802a328:	f000 f80e 	bl	802a348 <__malloc_unlock>
 802a32c:	e797      	b.n	802a25e <_malloc_r+0x22>
 802a32e:	6025      	str	r5, [r4, #0]
 802a330:	e7dc      	b.n	802a2ec <_malloc_r+0xb0>
 802a332:	605b      	str	r3, [r3, #4]
 802a334:	deff      	udf	#255	; 0xff
 802a336:	bf00      	nop
 802a338:	20013880 	.word	0x20013880

0802a33c <__malloc_lock>:
 802a33c:	4801      	ldr	r0, [pc, #4]	; (802a344 <__malloc_lock+0x8>)
 802a33e:	f000 ba52 	b.w	802a7e6 <__retarget_lock_acquire_recursive>
 802a342:	bf00      	nop
 802a344:	200139c9 	.word	0x200139c9

0802a348 <__malloc_unlock>:
 802a348:	4801      	ldr	r0, [pc, #4]	; (802a350 <__malloc_unlock+0x8>)
 802a34a:	f000 ba4d 	b.w	802a7e8 <__retarget_lock_release_recursive>
 802a34e:	bf00      	nop
 802a350:	200139c9 	.word	0x200139c9

0802a354 <__cxa_atexit>:
 802a354:	b510      	push	{r4, lr}
 802a356:	4c05      	ldr	r4, [pc, #20]	; (802a36c <__cxa_atexit+0x18>)
 802a358:	4613      	mov	r3, r2
 802a35a:	b12c      	cbz	r4, 802a368 <__cxa_atexit+0x14>
 802a35c:	460a      	mov	r2, r1
 802a35e:	4601      	mov	r1, r0
 802a360:	2002      	movs	r0, #2
 802a362:	f000 fa51 	bl	802a808 <__register_exitproc>
 802a366:	bd10      	pop	{r4, pc}
 802a368:	4620      	mov	r0, r4
 802a36a:	e7fc      	b.n	802a366 <__cxa_atexit+0x12>
 802a36c:	0802a809 	.word	0x0802a809

0802a370 <std>:
 802a370:	2300      	movs	r3, #0
 802a372:	b510      	push	{r4, lr}
 802a374:	4604      	mov	r4, r0
 802a376:	e9c0 3300 	strd	r3, r3, [r0]
 802a37a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802a37e:	6083      	str	r3, [r0, #8]
 802a380:	8181      	strh	r1, [r0, #12]
 802a382:	6643      	str	r3, [r0, #100]	; 0x64
 802a384:	81c2      	strh	r2, [r0, #14]
 802a386:	6183      	str	r3, [r0, #24]
 802a388:	4619      	mov	r1, r3
 802a38a:	2208      	movs	r2, #8
 802a38c:	305c      	adds	r0, #92	; 0x5c
 802a38e:	f000 f906 	bl	802a59e <memset>
 802a392:	4b0d      	ldr	r3, [pc, #52]	; (802a3c8 <std+0x58>)
 802a394:	6263      	str	r3, [r4, #36]	; 0x24
 802a396:	4b0d      	ldr	r3, [pc, #52]	; (802a3cc <std+0x5c>)
 802a398:	62a3      	str	r3, [r4, #40]	; 0x28
 802a39a:	4b0d      	ldr	r3, [pc, #52]	; (802a3d0 <std+0x60>)
 802a39c:	62e3      	str	r3, [r4, #44]	; 0x2c
 802a39e:	4b0d      	ldr	r3, [pc, #52]	; (802a3d4 <std+0x64>)
 802a3a0:	6323      	str	r3, [r4, #48]	; 0x30
 802a3a2:	4b0d      	ldr	r3, [pc, #52]	; (802a3d8 <std+0x68>)
 802a3a4:	6224      	str	r4, [r4, #32]
 802a3a6:	429c      	cmp	r4, r3
 802a3a8:	d006      	beq.n	802a3b8 <std+0x48>
 802a3aa:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802a3ae:	4294      	cmp	r4, r2
 802a3b0:	d002      	beq.n	802a3b8 <std+0x48>
 802a3b2:	33d0      	adds	r3, #208	; 0xd0
 802a3b4:	429c      	cmp	r4, r3
 802a3b6:	d105      	bne.n	802a3c4 <std+0x54>
 802a3b8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802a3bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a3c0:	f000 ba10 	b.w	802a7e4 <__retarget_lock_init_recursive>
 802a3c4:	bd10      	pop	{r4, pc}
 802a3c6:	bf00      	nop
 802a3c8:	0802a519 	.word	0x0802a519
 802a3cc:	0802a53b 	.word	0x0802a53b
 802a3d0:	0802a573 	.word	0x0802a573
 802a3d4:	0802a597 	.word	0x0802a597
 802a3d8:	20013888 	.word	0x20013888

0802a3dc <stdio_exit_handler>:
 802a3dc:	4a02      	ldr	r2, [pc, #8]	; (802a3e8 <stdio_exit_handler+0xc>)
 802a3de:	4903      	ldr	r1, [pc, #12]	; (802a3ec <stdio_exit_handler+0x10>)
 802a3e0:	4803      	ldr	r0, [pc, #12]	; (802a3f0 <stdio_exit_handler+0x14>)
 802a3e2:	f000 b87b 	b.w	802a4dc <_fwalk_sglue>
 802a3e6:	bf00      	nop
 802a3e8:	20000108 	.word	0x20000108
 802a3ec:	0802b011 	.word	0x0802b011
 802a3f0:	20000114 	.word	0x20000114

0802a3f4 <cleanup_stdio>:
 802a3f4:	6841      	ldr	r1, [r0, #4]
 802a3f6:	4b0c      	ldr	r3, [pc, #48]	; (802a428 <cleanup_stdio+0x34>)
 802a3f8:	4299      	cmp	r1, r3
 802a3fa:	b510      	push	{r4, lr}
 802a3fc:	4604      	mov	r4, r0
 802a3fe:	d001      	beq.n	802a404 <cleanup_stdio+0x10>
 802a400:	f000 fe06 	bl	802b010 <_fflush_r>
 802a404:	68a1      	ldr	r1, [r4, #8]
 802a406:	4b09      	ldr	r3, [pc, #36]	; (802a42c <cleanup_stdio+0x38>)
 802a408:	4299      	cmp	r1, r3
 802a40a:	d002      	beq.n	802a412 <cleanup_stdio+0x1e>
 802a40c:	4620      	mov	r0, r4
 802a40e:	f000 fdff 	bl	802b010 <_fflush_r>
 802a412:	68e1      	ldr	r1, [r4, #12]
 802a414:	4b06      	ldr	r3, [pc, #24]	; (802a430 <cleanup_stdio+0x3c>)
 802a416:	4299      	cmp	r1, r3
 802a418:	d004      	beq.n	802a424 <cleanup_stdio+0x30>
 802a41a:	4620      	mov	r0, r4
 802a41c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a420:	f000 bdf6 	b.w	802b010 <_fflush_r>
 802a424:	bd10      	pop	{r4, pc}
 802a426:	bf00      	nop
 802a428:	20013888 	.word	0x20013888
 802a42c:	200138f0 	.word	0x200138f0
 802a430:	20013958 	.word	0x20013958

0802a434 <global_stdio_init.part.0>:
 802a434:	b510      	push	{r4, lr}
 802a436:	4b0b      	ldr	r3, [pc, #44]	; (802a464 <global_stdio_init.part.0+0x30>)
 802a438:	4c0b      	ldr	r4, [pc, #44]	; (802a468 <global_stdio_init.part.0+0x34>)
 802a43a:	4a0c      	ldr	r2, [pc, #48]	; (802a46c <global_stdio_init.part.0+0x38>)
 802a43c:	601a      	str	r2, [r3, #0]
 802a43e:	4620      	mov	r0, r4
 802a440:	2200      	movs	r2, #0
 802a442:	2104      	movs	r1, #4
 802a444:	f7ff ff94 	bl	802a370 <std>
 802a448:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802a44c:	2201      	movs	r2, #1
 802a44e:	2109      	movs	r1, #9
 802a450:	f7ff ff8e 	bl	802a370 <std>
 802a454:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802a458:	2202      	movs	r2, #2
 802a45a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a45e:	2112      	movs	r1, #18
 802a460:	f7ff bf86 	b.w	802a370 <std>
 802a464:	200139c0 	.word	0x200139c0
 802a468:	20013888 	.word	0x20013888
 802a46c:	0802a3dd 	.word	0x0802a3dd

0802a470 <__sfp_lock_acquire>:
 802a470:	4801      	ldr	r0, [pc, #4]	; (802a478 <__sfp_lock_acquire+0x8>)
 802a472:	f000 b9b8 	b.w	802a7e6 <__retarget_lock_acquire_recursive>
 802a476:	bf00      	nop
 802a478:	200139ca 	.word	0x200139ca

0802a47c <__sfp_lock_release>:
 802a47c:	4801      	ldr	r0, [pc, #4]	; (802a484 <__sfp_lock_release+0x8>)
 802a47e:	f000 b9b3 	b.w	802a7e8 <__retarget_lock_release_recursive>
 802a482:	bf00      	nop
 802a484:	200139ca 	.word	0x200139ca

0802a488 <__sinit>:
 802a488:	b510      	push	{r4, lr}
 802a48a:	4604      	mov	r4, r0
 802a48c:	f7ff fff0 	bl	802a470 <__sfp_lock_acquire>
 802a490:	6a23      	ldr	r3, [r4, #32]
 802a492:	b11b      	cbz	r3, 802a49c <__sinit+0x14>
 802a494:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802a498:	f7ff bff0 	b.w	802a47c <__sfp_lock_release>
 802a49c:	4b04      	ldr	r3, [pc, #16]	; (802a4b0 <__sinit+0x28>)
 802a49e:	6223      	str	r3, [r4, #32]
 802a4a0:	4b04      	ldr	r3, [pc, #16]	; (802a4b4 <__sinit+0x2c>)
 802a4a2:	681b      	ldr	r3, [r3, #0]
 802a4a4:	2b00      	cmp	r3, #0
 802a4a6:	d1f5      	bne.n	802a494 <__sinit+0xc>
 802a4a8:	f7ff ffc4 	bl	802a434 <global_stdio_init.part.0>
 802a4ac:	e7f2      	b.n	802a494 <__sinit+0xc>
 802a4ae:	bf00      	nop
 802a4b0:	0802a3f5 	.word	0x0802a3f5
 802a4b4:	200139c0 	.word	0x200139c0

0802a4b8 <fiprintf>:
 802a4b8:	b40e      	push	{r1, r2, r3}
 802a4ba:	b503      	push	{r0, r1, lr}
 802a4bc:	4601      	mov	r1, r0
 802a4be:	ab03      	add	r3, sp, #12
 802a4c0:	4805      	ldr	r0, [pc, #20]	; (802a4d8 <fiprintf+0x20>)
 802a4c2:	f853 2b04 	ldr.w	r2, [r3], #4
 802a4c6:	6800      	ldr	r0, [r0, #0]
 802a4c8:	9301      	str	r3, [sp, #4]
 802a4ca:	f000 fa71 	bl	802a9b0 <_vfiprintf_r>
 802a4ce:	b002      	add	sp, #8
 802a4d0:	f85d eb04 	ldr.w	lr, [sp], #4
 802a4d4:	b003      	add	sp, #12
 802a4d6:	4770      	bx	lr
 802a4d8:	20000160 	.word	0x20000160

0802a4dc <_fwalk_sglue>:
 802a4dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802a4e0:	4607      	mov	r7, r0
 802a4e2:	4688      	mov	r8, r1
 802a4e4:	4614      	mov	r4, r2
 802a4e6:	2600      	movs	r6, #0
 802a4e8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802a4ec:	f1b9 0901 	subs.w	r9, r9, #1
 802a4f0:	d505      	bpl.n	802a4fe <_fwalk_sglue+0x22>
 802a4f2:	6824      	ldr	r4, [r4, #0]
 802a4f4:	2c00      	cmp	r4, #0
 802a4f6:	d1f7      	bne.n	802a4e8 <_fwalk_sglue+0xc>
 802a4f8:	4630      	mov	r0, r6
 802a4fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802a4fe:	89ab      	ldrh	r3, [r5, #12]
 802a500:	2b01      	cmp	r3, #1
 802a502:	d907      	bls.n	802a514 <_fwalk_sglue+0x38>
 802a504:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802a508:	3301      	adds	r3, #1
 802a50a:	d003      	beq.n	802a514 <_fwalk_sglue+0x38>
 802a50c:	4629      	mov	r1, r5
 802a50e:	4638      	mov	r0, r7
 802a510:	47c0      	blx	r8
 802a512:	4306      	orrs	r6, r0
 802a514:	3568      	adds	r5, #104	; 0x68
 802a516:	e7e9      	b.n	802a4ec <_fwalk_sglue+0x10>

0802a518 <__sread>:
 802a518:	b510      	push	{r4, lr}
 802a51a:	460c      	mov	r4, r1
 802a51c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a520:	f000 f8ee 	bl	802a700 <_read_r>
 802a524:	2800      	cmp	r0, #0
 802a526:	bfab      	itete	ge
 802a528:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802a52a:	89a3      	ldrhlt	r3, [r4, #12]
 802a52c:	181b      	addge	r3, r3, r0
 802a52e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802a532:	bfac      	ite	ge
 802a534:	6563      	strge	r3, [r4, #84]	; 0x54
 802a536:	81a3      	strhlt	r3, [r4, #12]
 802a538:	bd10      	pop	{r4, pc}

0802a53a <__swrite>:
 802a53a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a53e:	461f      	mov	r7, r3
 802a540:	898b      	ldrh	r3, [r1, #12]
 802a542:	05db      	lsls	r3, r3, #23
 802a544:	4605      	mov	r5, r0
 802a546:	460c      	mov	r4, r1
 802a548:	4616      	mov	r6, r2
 802a54a:	d505      	bpl.n	802a558 <__swrite+0x1e>
 802a54c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a550:	2302      	movs	r3, #2
 802a552:	2200      	movs	r2, #0
 802a554:	f000 f8c2 	bl	802a6dc <_lseek_r>
 802a558:	89a3      	ldrh	r3, [r4, #12]
 802a55a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802a55e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802a562:	81a3      	strh	r3, [r4, #12]
 802a564:	4632      	mov	r2, r6
 802a566:	463b      	mov	r3, r7
 802a568:	4628      	mov	r0, r5
 802a56a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a56e:	f000 b8fd 	b.w	802a76c <_write_r>

0802a572 <__sseek>:
 802a572:	b510      	push	{r4, lr}
 802a574:	460c      	mov	r4, r1
 802a576:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a57a:	f000 f8af 	bl	802a6dc <_lseek_r>
 802a57e:	1c43      	adds	r3, r0, #1
 802a580:	89a3      	ldrh	r3, [r4, #12]
 802a582:	bf15      	itete	ne
 802a584:	6560      	strne	r0, [r4, #84]	; 0x54
 802a586:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802a58a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802a58e:	81a3      	strheq	r3, [r4, #12]
 802a590:	bf18      	it	ne
 802a592:	81a3      	strhne	r3, [r4, #12]
 802a594:	bd10      	pop	{r4, pc}

0802a596 <__sclose>:
 802a596:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a59a:	f000 b839 	b.w	802a610 <_close_r>

0802a59e <memset>:
 802a59e:	4402      	add	r2, r0
 802a5a0:	4603      	mov	r3, r0
 802a5a2:	4293      	cmp	r3, r2
 802a5a4:	d100      	bne.n	802a5a8 <memset+0xa>
 802a5a6:	4770      	bx	lr
 802a5a8:	f803 1b01 	strb.w	r1, [r3], #1
 802a5ac:	e7f9      	b.n	802a5a2 <memset+0x4>

0802a5ae <_raise_r>:
 802a5ae:	291f      	cmp	r1, #31
 802a5b0:	b538      	push	{r3, r4, r5, lr}
 802a5b2:	4604      	mov	r4, r0
 802a5b4:	460d      	mov	r5, r1
 802a5b6:	d904      	bls.n	802a5c2 <_raise_r+0x14>
 802a5b8:	2316      	movs	r3, #22
 802a5ba:	6003      	str	r3, [r0, #0]
 802a5bc:	f04f 30ff 	mov.w	r0, #4294967295
 802a5c0:	bd38      	pop	{r3, r4, r5, pc}
 802a5c2:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802a5c4:	b112      	cbz	r2, 802a5cc <_raise_r+0x1e>
 802a5c6:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802a5ca:	b94b      	cbnz	r3, 802a5e0 <_raise_r+0x32>
 802a5cc:	4620      	mov	r0, r4
 802a5ce:	f000 f8bb 	bl	802a748 <_getpid_r>
 802a5d2:	462a      	mov	r2, r5
 802a5d4:	4601      	mov	r1, r0
 802a5d6:	4620      	mov	r0, r4
 802a5d8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802a5dc:	f000 b8a2 	b.w	802a724 <_kill_r>
 802a5e0:	2b01      	cmp	r3, #1
 802a5e2:	d00a      	beq.n	802a5fa <_raise_r+0x4c>
 802a5e4:	1c59      	adds	r1, r3, #1
 802a5e6:	d103      	bne.n	802a5f0 <_raise_r+0x42>
 802a5e8:	2316      	movs	r3, #22
 802a5ea:	6003      	str	r3, [r0, #0]
 802a5ec:	2001      	movs	r0, #1
 802a5ee:	e7e7      	b.n	802a5c0 <_raise_r+0x12>
 802a5f0:	2400      	movs	r4, #0
 802a5f2:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802a5f6:	4628      	mov	r0, r5
 802a5f8:	4798      	blx	r3
 802a5fa:	2000      	movs	r0, #0
 802a5fc:	e7e0      	b.n	802a5c0 <_raise_r+0x12>
	...

0802a600 <raise>:
 802a600:	4b02      	ldr	r3, [pc, #8]	; (802a60c <raise+0xc>)
 802a602:	4601      	mov	r1, r0
 802a604:	6818      	ldr	r0, [r3, #0]
 802a606:	f7ff bfd2 	b.w	802a5ae <_raise_r>
 802a60a:	bf00      	nop
 802a60c:	20000160 	.word	0x20000160

0802a610 <_close_r>:
 802a610:	b538      	push	{r3, r4, r5, lr}
 802a612:	4d06      	ldr	r5, [pc, #24]	; (802a62c <_close_r+0x1c>)
 802a614:	2300      	movs	r3, #0
 802a616:	4604      	mov	r4, r0
 802a618:	4608      	mov	r0, r1
 802a61a:	602b      	str	r3, [r5, #0]
 802a61c:	f7d7 ffc2 	bl	80025a4 <_close>
 802a620:	1c43      	adds	r3, r0, #1
 802a622:	d102      	bne.n	802a62a <_close_r+0x1a>
 802a624:	682b      	ldr	r3, [r5, #0]
 802a626:	b103      	cbz	r3, 802a62a <_close_r+0x1a>
 802a628:	6023      	str	r3, [r4, #0]
 802a62a:	bd38      	pop	{r3, r4, r5, pc}
 802a62c:	200139c4 	.word	0x200139c4

0802a630 <_reclaim_reent>:
 802a630:	4b29      	ldr	r3, [pc, #164]	; (802a6d8 <_reclaim_reent+0xa8>)
 802a632:	681b      	ldr	r3, [r3, #0]
 802a634:	4283      	cmp	r3, r0
 802a636:	b570      	push	{r4, r5, r6, lr}
 802a638:	4604      	mov	r4, r0
 802a63a:	d04b      	beq.n	802a6d4 <_reclaim_reent+0xa4>
 802a63c:	69c3      	ldr	r3, [r0, #28]
 802a63e:	b143      	cbz	r3, 802a652 <_reclaim_reent+0x22>
 802a640:	68db      	ldr	r3, [r3, #12]
 802a642:	2b00      	cmp	r3, #0
 802a644:	d144      	bne.n	802a6d0 <_reclaim_reent+0xa0>
 802a646:	69e3      	ldr	r3, [r4, #28]
 802a648:	6819      	ldr	r1, [r3, #0]
 802a64a:	b111      	cbz	r1, 802a652 <_reclaim_reent+0x22>
 802a64c:	4620      	mov	r0, r4
 802a64e:	f000 f939 	bl	802a8c4 <_free_r>
 802a652:	6961      	ldr	r1, [r4, #20]
 802a654:	b111      	cbz	r1, 802a65c <_reclaim_reent+0x2c>
 802a656:	4620      	mov	r0, r4
 802a658:	f000 f934 	bl	802a8c4 <_free_r>
 802a65c:	69e1      	ldr	r1, [r4, #28]
 802a65e:	b111      	cbz	r1, 802a666 <_reclaim_reent+0x36>
 802a660:	4620      	mov	r0, r4
 802a662:	f000 f92f 	bl	802a8c4 <_free_r>
 802a666:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802a668:	b111      	cbz	r1, 802a670 <_reclaim_reent+0x40>
 802a66a:	4620      	mov	r0, r4
 802a66c:	f000 f92a 	bl	802a8c4 <_free_r>
 802a670:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802a672:	b111      	cbz	r1, 802a67a <_reclaim_reent+0x4a>
 802a674:	4620      	mov	r0, r4
 802a676:	f000 f925 	bl	802a8c4 <_free_r>
 802a67a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802a67c:	b111      	cbz	r1, 802a684 <_reclaim_reent+0x54>
 802a67e:	4620      	mov	r0, r4
 802a680:	f000 f920 	bl	802a8c4 <_free_r>
 802a684:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802a686:	b111      	cbz	r1, 802a68e <_reclaim_reent+0x5e>
 802a688:	4620      	mov	r0, r4
 802a68a:	f000 f91b 	bl	802a8c4 <_free_r>
 802a68e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802a690:	b111      	cbz	r1, 802a698 <_reclaim_reent+0x68>
 802a692:	4620      	mov	r0, r4
 802a694:	f000 f916 	bl	802a8c4 <_free_r>
 802a698:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802a69a:	b111      	cbz	r1, 802a6a2 <_reclaim_reent+0x72>
 802a69c:	4620      	mov	r0, r4
 802a69e:	f000 f911 	bl	802a8c4 <_free_r>
 802a6a2:	6a23      	ldr	r3, [r4, #32]
 802a6a4:	b1b3      	cbz	r3, 802a6d4 <_reclaim_reent+0xa4>
 802a6a6:	4620      	mov	r0, r4
 802a6a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802a6ac:	4718      	bx	r3
 802a6ae:	5949      	ldr	r1, [r1, r5]
 802a6b0:	b941      	cbnz	r1, 802a6c4 <_reclaim_reent+0x94>
 802a6b2:	3504      	adds	r5, #4
 802a6b4:	69e3      	ldr	r3, [r4, #28]
 802a6b6:	2d80      	cmp	r5, #128	; 0x80
 802a6b8:	68d9      	ldr	r1, [r3, #12]
 802a6ba:	d1f8      	bne.n	802a6ae <_reclaim_reent+0x7e>
 802a6bc:	4620      	mov	r0, r4
 802a6be:	f000 f901 	bl	802a8c4 <_free_r>
 802a6c2:	e7c0      	b.n	802a646 <_reclaim_reent+0x16>
 802a6c4:	680e      	ldr	r6, [r1, #0]
 802a6c6:	4620      	mov	r0, r4
 802a6c8:	f000 f8fc 	bl	802a8c4 <_free_r>
 802a6cc:	4631      	mov	r1, r6
 802a6ce:	e7ef      	b.n	802a6b0 <_reclaim_reent+0x80>
 802a6d0:	2500      	movs	r5, #0
 802a6d2:	e7ef      	b.n	802a6b4 <_reclaim_reent+0x84>
 802a6d4:	bd70      	pop	{r4, r5, r6, pc}
 802a6d6:	bf00      	nop
 802a6d8:	20000160 	.word	0x20000160

0802a6dc <_lseek_r>:
 802a6dc:	b538      	push	{r3, r4, r5, lr}
 802a6de:	4d07      	ldr	r5, [pc, #28]	; (802a6fc <_lseek_r+0x20>)
 802a6e0:	4604      	mov	r4, r0
 802a6e2:	4608      	mov	r0, r1
 802a6e4:	4611      	mov	r1, r2
 802a6e6:	2200      	movs	r2, #0
 802a6e8:	602a      	str	r2, [r5, #0]
 802a6ea:	461a      	mov	r2, r3
 802a6ec:	f7d7 ff66 	bl	80025bc <_lseek>
 802a6f0:	1c43      	adds	r3, r0, #1
 802a6f2:	d102      	bne.n	802a6fa <_lseek_r+0x1e>
 802a6f4:	682b      	ldr	r3, [r5, #0]
 802a6f6:	b103      	cbz	r3, 802a6fa <_lseek_r+0x1e>
 802a6f8:	6023      	str	r3, [r4, #0]
 802a6fa:	bd38      	pop	{r3, r4, r5, pc}
 802a6fc:	200139c4 	.word	0x200139c4

0802a700 <_read_r>:
 802a700:	b538      	push	{r3, r4, r5, lr}
 802a702:	4d07      	ldr	r5, [pc, #28]	; (802a720 <_read_r+0x20>)
 802a704:	4604      	mov	r4, r0
 802a706:	4608      	mov	r0, r1
 802a708:	4611      	mov	r1, r2
 802a70a:	2200      	movs	r2, #0
 802a70c:	602a      	str	r2, [r5, #0]
 802a70e:	461a      	mov	r2, r3
 802a710:	f7d7 ff2c 	bl	800256c <_read>
 802a714:	1c43      	adds	r3, r0, #1
 802a716:	d102      	bne.n	802a71e <_read_r+0x1e>
 802a718:	682b      	ldr	r3, [r5, #0]
 802a71a:	b103      	cbz	r3, 802a71e <_read_r+0x1e>
 802a71c:	6023      	str	r3, [r4, #0]
 802a71e:	bd38      	pop	{r3, r4, r5, pc}
 802a720:	200139c4 	.word	0x200139c4

0802a724 <_kill_r>:
 802a724:	b538      	push	{r3, r4, r5, lr}
 802a726:	4d07      	ldr	r5, [pc, #28]	; (802a744 <_kill_r+0x20>)
 802a728:	2300      	movs	r3, #0
 802a72a:	4604      	mov	r4, r0
 802a72c:	4608      	mov	r0, r1
 802a72e:	4611      	mov	r1, r2
 802a730:	602b      	str	r3, [r5, #0]
 802a732:	f7d7 ff0d 	bl	8002550 <_kill>
 802a736:	1c43      	adds	r3, r0, #1
 802a738:	d102      	bne.n	802a740 <_kill_r+0x1c>
 802a73a:	682b      	ldr	r3, [r5, #0]
 802a73c:	b103      	cbz	r3, 802a740 <_kill_r+0x1c>
 802a73e:	6023      	str	r3, [r4, #0]
 802a740:	bd38      	pop	{r3, r4, r5, pc}
 802a742:	bf00      	nop
 802a744:	200139c4 	.word	0x200139c4

0802a748 <_getpid_r>:
 802a748:	f7d7 bf00 	b.w	800254c <_getpid>

0802a74c <_sbrk_r>:
 802a74c:	b538      	push	{r3, r4, r5, lr}
 802a74e:	4d06      	ldr	r5, [pc, #24]	; (802a768 <_sbrk_r+0x1c>)
 802a750:	2300      	movs	r3, #0
 802a752:	4604      	mov	r4, r0
 802a754:	4608      	mov	r0, r1
 802a756:	602b      	str	r3, [r5, #0]
 802a758:	f7d7 ff32 	bl	80025c0 <_sbrk>
 802a75c:	1c43      	adds	r3, r0, #1
 802a75e:	d102      	bne.n	802a766 <_sbrk_r+0x1a>
 802a760:	682b      	ldr	r3, [r5, #0]
 802a762:	b103      	cbz	r3, 802a766 <_sbrk_r+0x1a>
 802a764:	6023      	str	r3, [r4, #0]
 802a766:	bd38      	pop	{r3, r4, r5, pc}
 802a768:	200139c4 	.word	0x200139c4

0802a76c <_write_r>:
 802a76c:	b538      	push	{r3, r4, r5, lr}
 802a76e:	4d07      	ldr	r5, [pc, #28]	; (802a78c <_write_r+0x20>)
 802a770:	4604      	mov	r4, r0
 802a772:	4608      	mov	r0, r1
 802a774:	4611      	mov	r1, r2
 802a776:	2200      	movs	r2, #0
 802a778:	602a      	str	r2, [r5, #0]
 802a77a:	461a      	mov	r2, r3
 802a77c:	f7d7 ff04 	bl	8002588 <_write>
 802a780:	1c43      	adds	r3, r0, #1
 802a782:	d102      	bne.n	802a78a <_write_r+0x1e>
 802a784:	682b      	ldr	r3, [r5, #0]
 802a786:	b103      	cbz	r3, 802a78a <_write_r+0x1e>
 802a788:	6023      	str	r3, [r4, #0]
 802a78a:	bd38      	pop	{r3, r4, r5, pc}
 802a78c:	200139c4 	.word	0x200139c4

0802a790 <__errno>:
 802a790:	4b01      	ldr	r3, [pc, #4]	; (802a798 <__errno+0x8>)
 802a792:	6818      	ldr	r0, [r3, #0]
 802a794:	4770      	bx	lr
 802a796:	bf00      	nop
 802a798:	20000160 	.word	0x20000160

0802a79c <__libc_init_array>:
 802a79c:	b570      	push	{r4, r5, r6, lr}
 802a79e:	4d0d      	ldr	r5, [pc, #52]	; (802a7d4 <__libc_init_array+0x38>)
 802a7a0:	4c0d      	ldr	r4, [pc, #52]	; (802a7d8 <__libc_init_array+0x3c>)
 802a7a2:	1b64      	subs	r4, r4, r5
 802a7a4:	10a4      	asrs	r4, r4, #2
 802a7a6:	2600      	movs	r6, #0
 802a7a8:	42a6      	cmp	r6, r4
 802a7aa:	d109      	bne.n	802a7c0 <__libc_init_array+0x24>
 802a7ac:	4d0b      	ldr	r5, [pc, #44]	; (802a7dc <__libc_init_array+0x40>)
 802a7ae:	4c0c      	ldr	r4, [pc, #48]	; (802a7e0 <__libc_init_array+0x44>)
 802a7b0:	f000 fd70 	bl	802b294 <_init>
 802a7b4:	1b64      	subs	r4, r4, r5
 802a7b6:	10a4      	asrs	r4, r4, #2
 802a7b8:	2600      	movs	r6, #0
 802a7ba:	42a6      	cmp	r6, r4
 802a7bc:	d105      	bne.n	802a7ca <__libc_init_array+0x2e>
 802a7be:	bd70      	pop	{r4, r5, r6, pc}
 802a7c0:	f855 3b04 	ldr.w	r3, [r5], #4
 802a7c4:	4798      	blx	r3
 802a7c6:	3601      	adds	r6, #1
 802a7c8:	e7ee      	b.n	802a7a8 <__libc_init_array+0xc>
 802a7ca:	f855 3b04 	ldr.w	r3, [r5], #4
 802a7ce:	4798      	blx	r3
 802a7d0:	3601      	adds	r6, #1
 802a7d2:	e7f2      	b.n	802a7ba <__libc_init_array+0x1e>
 802a7d4:	0815ed40 	.word	0x0815ed40
 802a7d8:	0815ed40 	.word	0x0815ed40
 802a7dc:	0815ed40 	.word	0x0815ed40
 802a7e0:	0815ed54 	.word	0x0815ed54

0802a7e4 <__retarget_lock_init_recursive>:
 802a7e4:	4770      	bx	lr

0802a7e6 <__retarget_lock_acquire_recursive>:
 802a7e6:	4770      	bx	lr

0802a7e8 <__retarget_lock_release_recursive>:
 802a7e8:	4770      	bx	lr

0802a7ea <memcpy>:
 802a7ea:	440a      	add	r2, r1
 802a7ec:	4291      	cmp	r1, r2
 802a7ee:	f100 33ff 	add.w	r3, r0, #4294967295
 802a7f2:	d100      	bne.n	802a7f6 <memcpy+0xc>
 802a7f4:	4770      	bx	lr
 802a7f6:	b510      	push	{r4, lr}
 802a7f8:	f811 4b01 	ldrb.w	r4, [r1], #1
 802a7fc:	f803 4f01 	strb.w	r4, [r3, #1]!
 802a800:	4291      	cmp	r1, r2
 802a802:	d1f9      	bne.n	802a7f8 <memcpy+0xe>
 802a804:	bd10      	pop	{r4, pc}
	...

0802a808 <__register_exitproc>:
 802a808:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802a80c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802a8c0 <__register_exitproc+0xb8>
 802a810:	4606      	mov	r6, r0
 802a812:	f8d8 0000 	ldr.w	r0, [r8]
 802a816:	461f      	mov	r7, r3
 802a818:	460d      	mov	r5, r1
 802a81a:	4691      	mov	r9, r2
 802a81c:	f7ff ffe3 	bl	802a7e6 <__retarget_lock_acquire_recursive>
 802a820:	4b23      	ldr	r3, [pc, #140]	; (802a8b0 <__register_exitproc+0xa8>)
 802a822:	681c      	ldr	r4, [r3, #0]
 802a824:	b934      	cbnz	r4, 802a834 <__register_exitproc+0x2c>
 802a826:	4c23      	ldr	r4, [pc, #140]	; (802a8b4 <__register_exitproc+0xac>)
 802a828:	601c      	str	r4, [r3, #0]
 802a82a:	4b23      	ldr	r3, [pc, #140]	; (802a8b8 <__register_exitproc+0xb0>)
 802a82c:	b113      	cbz	r3, 802a834 <__register_exitproc+0x2c>
 802a82e:	681b      	ldr	r3, [r3, #0]
 802a830:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802a834:	6863      	ldr	r3, [r4, #4]
 802a836:	2b1f      	cmp	r3, #31
 802a838:	dd07      	ble.n	802a84a <__register_exitproc+0x42>
 802a83a:	f8d8 0000 	ldr.w	r0, [r8]
 802a83e:	f7ff ffd3 	bl	802a7e8 <__retarget_lock_release_recursive>
 802a842:	f04f 30ff 	mov.w	r0, #4294967295
 802a846:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802a84a:	b32e      	cbz	r6, 802a898 <__register_exitproc+0x90>
 802a84c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802a850:	b968      	cbnz	r0, 802a86e <__register_exitproc+0x66>
 802a852:	4b1a      	ldr	r3, [pc, #104]	; (802a8bc <__register_exitproc+0xb4>)
 802a854:	2b00      	cmp	r3, #0
 802a856:	d0f0      	beq.n	802a83a <__register_exitproc+0x32>
 802a858:	f44f 7084 	mov.w	r0, #264	; 0x108
 802a85c:	f7ff fcbe 	bl	802a1dc <malloc>
 802a860:	2800      	cmp	r0, #0
 802a862:	d0ea      	beq.n	802a83a <__register_exitproc+0x32>
 802a864:	2300      	movs	r3, #0
 802a866:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802a86a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802a86e:	6863      	ldr	r3, [r4, #4]
 802a870:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802a874:	2201      	movs	r2, #1
 802a876:	409a      	lsls	r2, r3
 802a878:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802a87c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802a880:	4313      	orrs	r3, r2
 802a882:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802a886:	2e02      	cmp	r6, #2
 802a888:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802a88c:	bf02      	ittt	eq
 802a88e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802a892:	4313      	orreq	r3, r2
 802a894:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802a898:	6863      	ldr	r3, [r4, #4]
 802a89a:	f8d8 0000 	ldr.w	r0, [r8]
 802a89e:	1c5a      	adds	r2, r3, #1
 802a8a0:	3302      	adds	r3, #2
 802a8a2:	6062      	str	r2, [r4, #4]
 802a8a4:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802a8a8:	f7ff ff9e 	bl	802a7e8 <__retarget_lock_release_recursive>
 802a8ac:	2000      	movs	r0, #0
 802a8ae:	e7ca      	b.n	802a846 <__register_exitproc+0x3e>
 802a8b0:	20013a58 	.word	0x20013a58
 802a8b4:	200139cc 	.word	0x200139cc
 802a8b8:	080427ac 	.word	0x080427ac
 802a8bc:	0802a1dd 	.word	0x0802a1dd
 802a8c0:	20000164 	.word	0x20000164

0802a8c4 <_free_r>:
 802a8c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802a8c6:	2900      	cmp	r1, #0
 802a8c8:	d044      	beq.n	802a954 <_free_r+0x90>
 802a8ca:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802a8ce:	9001      	str	r0, [sp, #4]
 802a8d0:	2b00      	cmp	r3, #0
 802a8d2:	f1a1 0404 	sub.w	r4, r1, #4
 802a8d6:	bfb8      	it	lt
 802a8d8:	18e4      	addlt	r4, r4, r3
 802a8da:	f7ff fd2f 	bl	802a33c <__malloc_lock>
 802a8de:	4a1e      	ldr	r2, [pc, #120]	; (802a958 <_free_r+0x94>)
 802a8e0:	9801      	ldr	r0, [sp, #4]
 802a8e2:	6813      	ldr	r3, [r2, #0]
 802a8e4:	b933      	cbnz	r3, 802a8f4 <_free_r+0x30>
 802a8e6:	6063      	str	r3, [r4, #4]
 802a8e8:	6014      	str	r4, [r2, #0]
 802a8ea:	b003      	add	sp, #12
 802a8ec:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802a8f0:	f7ff bd2a 	b.w	802a348 <__malloc_unlock>
 802a8f4:	42a3      	cmp	r3, r4
 802a8f6:	d908      	bls.n	802a90a <_free_r+0x46>
 802a8f8:	6825      	ldr	r5, [r4, #0]
 802a8fa:	1961      	adds	r1, r4, r5
 802a8fc:	428b      	cmp	r3, r1
 802a8fe:	bf01      	itttt	eq
 802a900:	6819      	ldreq	r1, [r3, #0]
 802a902:	685b      	ldreq	r3, [r3, #4]
 802a904:	1949      	addeq	r1, r1, r5
 802a906:	6021      	streq	r1, [r4, #0]
 802a908:	e7ed      	b.n	802a8e6 <_free_r+0x22>
 802a90a:	461a      	mov	r2, r3
 802a90c:	685b      	ldr	r3, [r3, #4]
 802a90e:	b10b      	cbz	r3, 802a914 <_free_r+0x50>
 802a910:	42a3      	cmp	r3, r4
 802a912:	d9fa      	bls.n	802a90a <_free_r+0x46>
 802a914:	6811      	ldr	r1, [r2, #0]
 802a916:	1855      	adds	r5, r2, r1
 802a918:	42a5      	cmp	r5, r4
 802a91a:	d10b      	bne.n	802a934 <_free_r+0x70>
 802a91c:	6824      	ldr	r4, [r4, #0]
 802a91e:	4421      	add	r1, r4
 802a920:	1854      	adds	r4, r2, r1
 802a922:	42a3      	cmp	r3, r4
 802a924:	6011      	str	r1, [r2, #0]
 802a926:	d1e0      	bne.n	802a8ea <_free_r+0x26>
 802a928:	681c      	ldr	r4, [r3, #0]
 802a92a:	685b      	ldr	r3, [r3, #4]
 802a92c:	6053      	str	r3, [r2, #4]
 802a92e:	440c      	add	r4, r1
 802a930:	6014      	str	r4, [r2, #0]
 802a932:	e7da      	b.n	802a8ea <_free_r+0x26>
 802a934:	d902      	bls.n	802a93c <_free_r+0x78>
 802a936:	230c      	movs	r3, #12
 802a938:	6003      	str	r3, [r0, #0]
 802a93a:	e7d6      	b.n	802a8ea <_free_r+0x26>
 802a93c:	6825      	ldr	r5, [r4, #0]
 802a93e:	1961      	adds	r1, r4, r5
 802a940:	428b      	cmp	r3, r1
 802a942:	bf04      	itt	eq
 802a944:	6819      	ldreq	r1, [r3, #0]
 802a946:	685b      	ldreq	r3, [r3, #4]
 802a948:	6063      	str	r3, [r4, #4]
 802a94a:	bf04      	itt	eq
 802a94c:	1949      	addeq	r1, r1, r5
 802a94e:	6021      	streq	r1, [r4, #0]
 802a950:	6054      	str	r4, [r2, #4]
 802a952:	e7ca      	b.n	802a8ea <_free_r+0x26>
 802a954:	b003      	add	sp, #12
 802a956:	bd30      	pop	{r4, r5, pc}
 802a958:	20013880 	.word	0x20013880

0802a95c <__sfputc_r>:
 802a95c:	6893      	ldr	r3, [r2, #8]
 802a95e:	3b01      	subs	r3, #1
 802a960:	2b00      	cmp	r3, #0
 802a962:	b410      	push	{r4}
 802a964:	6093      	str	r3, [r2, #8]
 802a966:	da08      	bge.n	802a97a <__sfputc_r+0x1e>
 802a968:	6994      	ldr	r4, [r2, #24]
 802a96a:	42a3      	cmp	r3, r4
 802a96c:	db01      	blt.n	802a972 <__sfputc_r+0x16>
 802a96e:	290a      	cmp	r1, #10
 802a970:	d103      	bne.n	802a97a <__sfputc_r+0x1e>
 802a972:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a976:	f000 bb73 	b.w	802b060 <__swbuf_r>
 802a97a:	6813      	ldr	r3, [r2, #0]
 802a97c:	1c58      	adds	r0, r3, #1
 802a97e:	6010      	str	r0, [r2, #0]
 802a980:	7019      	strb	r1, [r3, #0]
 802a982:	4608      	mov	r0, r1
 802a984:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a988:	4770      	bx	lr

0802a98a <__sfputs_r>:
 802a98a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a98c:	4606      	mov	r6, r0
 802a98e:	460f      	mov	r7, r1
 802a990:	4614      	mov	r4, r2
 802a992:	18d5      	adds	r5, r2, r3
 802a994:	42ac      	cmp	r4, r5
 802a996:	d101      	bne.n	802a99c <__sfputs_r+0x12>
 802a998:	2000      	movs	r0, #0
 802a99a:	e007      	b.n	802a9ac <__sfputs_r+0x22>
 802a99c:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a9a0:	463a      	mov	r2, r7
 802a9a2:	4630      	mov	r0, r6
 802a9a4:	f7ff ffda 	bl	802a95c <__sfputc_r>
 802a9a8:	1c43      	adds	r3, r0, #1
 802a9aa:	d1f3      	bne.n	802a994 <__sfputs_r+0xa>
 802a9ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802a9b0 <_vfiprintf_r>:
 802a9b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a9b4:	460d      	mov	r5, r1
 802a9b6:	b09d      	sub	sp, #116	; 0x74
 802a9b8:	4614      	mov	r4, r2
 802a9ba:	4698      	mov	r8, r3
 802a9bc:	4606      	mov	r6, r0
 802a9be:	b118      	cbz	r0, 802a9c8 <_vfiprintf_r+0x18>
 802a9c0:	6a03      	ldr	r3, [r0, #32]
 802a9c2:	b90b      	cbnz	r3, 802a9c8 <_vfiprintf_r+0x18>
 802a9c4:	f7ff fd60 	bl	802a488 <__sinit>
 802a9c8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a9ca:	07d9      	lsls	r1, r3, #31
 802a9cc:	d405      	bmi.n	802a9da <_vfiprintf_r+0x2a>
 802a9ce:	89ab      	ldrh	r3, [r5, #12]
 802a9d0:	059a      	lsls	r2, r3, #22
 802a9d2:	d402      	bmi.n	802a9da <_vfiprintf_r+0x2a>
 802a9d4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802a9d6:	f7ff ff06 	bl	802a7e6 <__retarget_lock_acquire_recursive>
 802a9da:	89ab      	ldrh	r3, [r5, #12]
 802a9dc:	071b      	lsls	r3, r3, #28
 802a9de:	d501      	bpl.n	802a9e4 <_vfiprintf_r+0x34>
 802a9e0:	692b      	ldr	r3, [r5, #16]
 802a9e2:	b99b      	cbnz	r3, 802aa0c <_vfiprintf_r+0x5c>
 802a9e4:	4629      	mov	r1, r5
 802a9e6:	4630      	mov	r0, r6
 802a9e8:	f000 fb78 	bl	802b0dc <__swsetup_r>
 802a9ec:	b170      	cbz	r0, 802aa0c <_vfiprintf_r+0x5c>
 802a9ee:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a9f0:	07dc      	lsls	r4, r3, #31
 802a9f2:	d504      	bpl.n	802a9fe <_vfiprintf_r+0x4e>
 802a9f4:	f04f 30ff 	mov.w	r0, #4294967295
 802a9f8:	b01d      	add	sp, #116	; 0x74
 802a9fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a9fe:	89ab      	ldrh	r3, [r5, #12]
 802aa00:	0598      	lsls	r0, r3, #22
 802aa02:	d4f7      	bmi.n	802a9f4 <_vfiprintf_r+0x44>
 802aa04:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802aa06:	f7ff feef 	bl	802a7e8 <__retarget_lock_release_recursive>
 802aa0a:	e7f3      	b.n	802a9f4 <_vfiprintf_r+0x44>
 802aa0c:	2300      	movs	r3, #0
 802aa0e:	9309      	str	r3, [sp, #36]	; 0x24
 802aa10:	2320      	movs	r3, #32
 802aa12:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802aa16:	f8cd 800c 	str.w	r8, [sp, #12]
 802aa1a:	2330      	movs	r3, #48	; 0x30
 802aa1c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802abd0 <_vfiprintf_r+0x220>
 802aa20:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802aa24:	f04f 0901 	mov.w	r9, #1
 802aa28:	4623      	mov	r3, r4
 802aa2a:	469a      	mov	sl, r3
 802aa2c:	f813 2b01 	ldrb.w	r2, [r3], #1
 802aa30:	b10a      	cbz	r2, 802aa36 <_vfiprintf_r+0x86>
 802aa32:	2a25      	cmp	r2, #37	; 0x25
 802aa34:	d1f9      	bne.n	802aa2a <_vfiprintf_r+0x7a>
 802aa36:	ebba 0b04 	subs.w	fp, sl, r4
 802aa3a:	d00b      	beq.n	802aa54 <_vfiprintf_r+0xa4>
 802aa3c:	465b      	mov	r3, fp
 802aa3e:	4622      	mov	r2, r4
 802aa40:	4629      	mov	r1, r5
 802aa42:	4630      	mov	r0, r6
 802aa44:	f7ff ffa1 	bl	802a98a <__sfputs_r>
 802aa48:	3001      	adds	r0, #1
 802aa4a:	f000 80a9 	beq.w	802aba0 <_vfiprintf_r+0x1f0>
 802aa4e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802aa50:	445a      	add	r2, fp
 802aa52:	9209      	str	r2, [sp, #36]	; 0x24
 802aa54:	f89a 3000 	ldrb.w	r3, [sl]
 802aa58:	2b00      	cmp	r3, #0
 802aa5a:	f000 80a1 	beq.w	802aba0 <_vfiprintf_r+0x1f0>
 802aa5e:	2300      	movs	r3, #0
 802aa60:	f04f 32ff 	mov.w	r2, #4294967295
 802aa64:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802aa68:	f10a 0a01 	add.w	sl, sl, #1
 802aa6c:	9304      	str	r3, [sp, #16]
 802aa6e:	9307      	str	r3, [sp, #28]
 802aa70:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802aa74:	931a      	str	r3, [sp, #104]	; 0x68
 802aa76:	4654      	mov	r4, sl
 802aa78:	2205      	movs	r2, #5
 802aa7a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802aa7e:	4854      	ldr	r0, [pc, #336]	; (802abd0 <_vfiprintf_r+0x220>)
 802aa80:	f7d5 fc16 	bl	80002b0 <memchr>
 802aa84:	9a04      	ldr	r2, [sp, #16]
 802aa86:	b9d8      	cbnz	r0, 802aac0 <_vfiprintf_r+0x110>
 802aa88:	06d1      	lsls	r1, r2, #27
 802aa8a:	bf44      	itt	mi
 802aa8c:	2320      	movmi	r3, #32
 802aa8e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802aa92:	0713      	lsls	r3, r2, #28
 802aa94:	bf44      	itt	mi
 802aa96:	232b      	movmi	r3, #43	; 0x2b
 802aa98:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802aa9c:	f89a 3000 	ldrb.w	r3, [sl]
 802aaa0:	2b2a      	cmp	r3, #42	; 0x2a
 802aaa2:	d015      	beq.n	802aad0 <_vfiprintf_r+0x120>
 802aaa4:	9a07      	ldr	r2, [sp, #28]
 802aaa6:	4654      	mov	r4, sl
 802aaa8:	2000      	movs	r0, #0
 802aaaa:	f04f 0c0a 	mov.w	ip, #10
 802aaae:	4621      	mov	r1, r4
 802aab0:	f811 3b01 	ldrb.w	r3, [r1], #1
 802aab4:	3b30      	subs	r3, #48	; 0x30
 802aab6:	2b09      	cmp	r3, #9
 802aab8:	d94d      	bls.n	802ab56 <_vfiprintf_r+0x1a6>
 802aaba:	b1b0      	cbz	r0, 802aaea <_vfiprintf_r+0x13a>
 802aabc:	9207      	str	r2, [sp, #28]
 802aabe:	e014      	b.n	802aaea <_vfiprintf_r+0x13a>
 802aac0:	eba0 0308 	sub.w	r3, r0, r8
 802aac4:	fa09 f303 	lsl.w	r3, r9, r3
 802aac8:	4313      	orrs	r3, r2
 802aaca:	9304      	str	r3, [sp, #16]
 802aacc:	46a2      	mov	sl, r4
 802aace:	e7d2      	b.n	802aa76 <_vfiprintf_r+0xc6>
 802aad0:	9b03      	ldr	r3, [sp, #12]
 802aad2:	1d19      	adds	r1, r3, #4
 802aad4:	681b      	ldr	r3, [r3, #0]
 802aad6:	9103      	str	r1, [sp, #12]
 802aad8:	2b00      	cmp	r3, #0
 802aada:	bfbb      	ittet	lt
 802aadc:	425b      	neglt	r3, r3
 802aade:	f042 0202 	orrlt.w	r2, r2, #2
 802aae2:	9307      	strge	r3, [sp, #28]
 802aae4:	9307      	strlt	r3, [sp, #28]
 802aae6:	bfb8      	it	lt
 802aae8:	9204      	strlt	r2, [sp, #16]
 802aaea:	7823      	ldrb	r3, [r4, #0]
 802aaec:	2b2e      	cmp	r3, #46	; 0x2e
 802aaee:	d10c      	bne.n	802ab0a <_vfiprintf_r+0x15a>
 802aaf0:	7863      	ldrb	r3, [r4, #1]
 802aaf2:	2b2a      	cmp	r3, #42	; 0x2a
 802aaf4:	d134      	bne.n	802ab60 <_vfiprintf_r+0x1b0>
 802aaf6:	9b03      	ldr	r3, [sp, #12]
 802aaf8:	1d1a      	adds	r2, r3, #4
 802aafa:	681b      	ldr	r3, [r3, #0]
 802aafc:	9203      	str	r2, [sp, #12]
 802aafe:	2b00      	cmp	r3, #0
 802ab00:	bfb8      	it	lt
 802ab02:	f04f 33ff 	movlt.w	r3, #4294967295
 802ab06:	3402      	adds	r4, #2
 802ab08:	9305      	str	r3, [sp, #20]
 802ab0a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802abe0 <_vfiprintf_r+0x230>
 802ab0e:	7821      	ldrb	r1, [r4, #0]
 802ab10:	2203      	movs	r2, #3
 802ab12:	4650      	mov	r0, sl
 802ab14:	f7d5 fbcc 	bl	80002b0 <memchr>
 802ab18:	b138      	cbz	r0, 802ab2a <_vfiprintf_r+0x17a>
 802ab1a:	9b04      	ldr	r3, [sp, #16]
 802ab1c:	eba0 000a 	sub.w	r0, r0, sl
 802ab20:	2240      	movs	r2, #64	; 0x40
 802ab22:	4082      	lsls	r2, r0
 802ab24:	4313      	orrs	r3, r2
 802ab26:	3401      	adds	r4, #1
 802ab28:	9304      	str	r3, [sp, #16]
 802ab2a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802ab2e:	4829      	ldr	r0, [pc, #164]	; (802abd4 <_vfiprintf_r+0x224>)
 802ab30:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802ab34:	2206      	movs	r2, #6
 802ab36:	f7d5 fbbb 	bl	80002b0 <memchr>
 802ab3a:	2800      	cmp	r0, #0
 802ab3c:	d03f      	beq.n	802abbe <_vfiprintf_r+0x20e>
 802ab3e:	4b26      	ldr	r3, [pc, #152]	; (802abd8 <_vfiprintf_r+0x228>)
 802ab40:	bb1b      	cbnz	r3, 802ab8a <_vfiprintf_r+0x1da>
 802ab42:	9b03      	ldr	r3, [sp, #12]
 802ab44:	3307      	adds	r3, #7
 802ab46:	f023 0307 	bic.w	r3, r3, #7
 802ab4a:	3308      	adds	r3, #8
 802ab4c:	9303      	str	r3, [sp, #12]
 802ab4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802ab50:	443b      	add	r3, r7
 802ab52:	9309      	str	r3, [sp, #36]	; 0x24
 802ab54:	e768      	b.n	802aa28 <_vfiprintf_r+0x78>
 802ab56:	fb0c 3202 	mla	r2, ip, r2, r3
 802ab5a:	460c      	mov	r4, r1
 802ab5c:	2001      	movs	r0, #1
 802ab5e:	e7a6      	b.n	802aaae <_vfiprintf_r+0xfe>
 802ab60:	2300      	movs	r3, #0
 802ab62:	3401      	adds	r4, #1
 802ab64:	9305      	str	r3, [sp, #20]
 802ab66:	4619      	mov	r1, r3
 802ab68:	f04f 0c0a 	mov.w	ip, #10
 802ab6c:	4620      	mov	r0, r4
 802ab6e:	f810 2b01 	ldrb.w	r2, [r0], #1
 802ab72:	3a30      	subs	r2, #48	; 0x30
 802ab74:	2a09      	cmp	r2, #9
 802ab76:	d903      	bls.n	802ab80 <_vfiprintf_r+0x1d0>
 802ab78:	2b00      	cmp	r3, #0
 802ab7a:	d0c6      	beq.n	802ab0a <_vfiprintf_r+0x15a>
 802ab7c:	9105      	str	r1, [sp, #20]
 802ab7e:	e7c4      	b.n	802ab0a <_vfiprintf_r+0x15a>
 802ab80:	fb0c 2101 	mla	r1, ip, r1, r2
 802ab84:	4604      	mov	r4, r0
 802ab86:	2301      	movs	r3, #1
 802ab88:	e7f0      	b.n	802ab6c <_vfiprintf_r+0x1bc>
 802ab8a:	ab03      	add	r3, sp, #12
 802ab8c:	9300      	str	r3, [sp, #0]
 802ab8e:	462a      	mov	r2, r5
 802ab90:	4b12      	ldr	r3, [pc, #72]	; (802abdc <_vfiprintf_r+0x22c>)
 802ab92:	a904      	add	r1, sp, #16
 802ab94:	4630      	mov	r0, r6
 802ab96:	f3af 8000 	nop.w
 802ab9a:	4607      	mov	r7, r0
 802ab9c:	1c78      	adds	r0, r7, #1
 802ab9e:	d1d6      	bne.n	802ab4e <_vfiprintf_r+0x19e>
 802aba0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802aba2:	07d9      	lsls	r1, r3, #31
 802aba4:	d405      	bmi.n	802abb2 <_vfiprintf_r+0x202>
 802aba6:	89ab      	ldrh	r3, [r5, #12]
 802aba8:	059a      	lsls	r2, r3, #22
 802abaa:	d402      	bmi.n	802abb2 <_vfiprintf_r+0x202>
 802abac:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802abae:	f7ff fe1b 	bl	802a7e8 <__retarget_lock_release_recursive>
 802abb2:	89ab      	ldrh	r3, [r5, #12]
 802abb4:	065b      	lsls	r3, r3, #25
 802abb6:	f53f af1d 	bmi.w	802a9f4 <_vfiprintf_r+0x44>
 802abba:	9809      	ldr	r0, [sp, #36]	; 0x24
 802abbc:	e71c      	b.n	802a9f8 <_vfiprintf_r+0x48>
 802abbe:	ab03      	add	r3, sp, #12
 802abc0:	9300      	str	r3, [sp, #0]
 802abc2:	462a      	mov	r2, r5
 802abc4:	4b05      	ldr	r3, [pc, #20]	; (802abdc <_vfiprintf_r+0x22c>)
 802abc6:	a904      	add	r1, sp, #16
 802abc8:	4630      	mov	r0, r6
 802abca:	f000 f879 	bl	802acc0 <_printf_i>
 802abce:	e7e4      	b.n	802ab9a <_vfiprintf_r+0x1ea>
 802abd0:	080427b0 	.word	0x080427b0
 802abd4:	080427ba 	.word	0x080427ba
 802abd8:	00000000 	.word	0x00000000
 802abdc:	0802a98b 	.word	0x0802a98b
 802abe0:	080427b6 	.word	0x080427b6

0802abe4 <_printf_common>:
 802abe4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802abe8:	4616      	mov	r6, r2
 802abea:	4699      	mov	r9, r3
 802abec:	688a      	ldr	r2, [r1, #8]
 802abee:	690b      	ldr	r3, [r1, #16]
 802abf0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802abf4:	4293      	cmp	r3, r2
 802abf6:	bfb8      	it	lt
 802abf8:	4613      	movlt	r3, r2
 802abfa:	6033      	str	r3, [r6, #0]
 802abfc:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802ac00:	4607      	mov	r7, r0
 802ac02:	460c      	mov	r4, r1
 802ac04:	b10a      	cbz	r2, 802ac0a <_printf_common+0x26>
 802ac06:	3301      	adds	r3, #1
 802ac08:	6033      	str	r3, [r6, #0]
 802ac0a:	6823      	ldr	r3, [r4, #0]
 802ac0c:	0699      	lsls	r1, r3, #26
 802ac0e:	bf42      	ittt	mi
 802ac10:	6833      	ldrmi	r3, [r6, #0]
 802ac12:	3302      	addmi	r3, #2
 802ac14:	6033      	strmi	r3, [r6, #0]
 802ac16:	6825      	ldr	r5, [r4, #0]
 802ac18:	f015 0506 	ands.w	r5, r5, #6
 802ac1c:	d106      	bne.n	802ac2c <_printf_common+0x48>
 802ac1e:	f104 0a19 	add.w	sl, r4, #25
 802ac22:	68e3      	ldr	r3, [r4, #12]
 802ac24:	6832      	ldr	r2, [r6, #0]
 802ac26:	1a9b      	subs	r3, r3, r2
 802ac28:	42ab      	cmp	r3, r5
 802ac2a:	dc26      	bgt.n	802ac7a <_printf_common+0x96>
 802ac2c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802ac30:	1e13      	subs	r3, r2, #0
 802ac32:	6822      	ldr	r2, [r4, #0]
 802ac34:	bf18      	it	ne
 802ac36:	2301      	movne	r3, #1
 802ac38:	0692      	lsls	r2, r2, #26
 802ac3a:	d42b      	bmi.n	802ac94 <_printf_common+0xb0>
 802ac3c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802ac40:	4649      	mov	r1, r9
 802ac42:	4638      	mov	r0, r7
 802ac44:	47c0      	blx	r8
 802ac46:	3001      	adds	r0, #1
 802ac48:	d01e      	beq.n	802ac88 <_printf_common+0xa4>
 802ac4a:	6823      	ldr	r3, [r4, #0]
 802ac4c:	6922      	ldr	r2, [r4, #16]
 802ac4e:	f003 0306 	and.w	r3, r3, #6
 802ac52:	2b04      	cmp	r3, #4
 802ac54:	bf02      	ittt	eq
 802ac56:	68e5      	ldreq	r5, [r4, #12]
 802ac58:	6833      	ldreq	r3, [r6, #0]
 802ac5a:	1aed      	subeq	r5, r5, r3
 802ac5c:	68a3      	ldr	r3, [r4, #8]
 802ac5e:	bf0c      	ite	eq
 802ac60:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802ac64:	2500      	movne	r5, #0
 802ac66:	4293      	cmp	r3, r2
 802ac68:	bfc4      	itt	gt
 802ac6a:	1a9b      	subgt	r3, r3, r2
 802ac6c:	18ed      	addgt	r5, r5, r3
 802ac6e:	2600      	movs	r6, #0
 802ac70:	341a      	adds	r4, #26
 802ac72:	42b5      	cmp	r5, r6
 802ac74:	d11a      	bne.n	802acac <_printf_common+0xc8>
 802ac76:	2000      	movs	r0, #0
 802ac78:	e008      	b.n	802ac8c <_printf_common+0xa8>
 802ac7a:	2301      	movs	r3, #1
 802ac7c:	4652      	mov	r2, sl
 802ac7e:	4649      	mov	r1, r9
 802ac80:	4638      	mov	r0, r7
 802ac82:	47c0      	blx	r8
 802ac84:	3001      	adds	r0, #1
 802ac86:	d103      	bne.n	802ac90 <_printf_common+0xac>
 802ac88:	f04f 30ff 	mov.w	r0, #4294967295
 802ac8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802ac90:	3501      	adds	r5, #1
 802ac92:	e7c6      	b.n	802ac22 <_printf_common+0x3e>
 802ac94:	18e1      	adds	r1, r4, r3
 802ac96:	1c5a      	adds	r2, r3, #1
 802ac98:	2030      	movs	r0, #48	; 0x30
 802ac9a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802ac9e:	4422      	add	r2, r4
 802aca0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802aca4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802aca8:	3302      	adds	r3, #2
 802acaa:	e7c7      	b.n	802ac3c <_printf_common+0x58>
 802acac:	2301      	movs	r3, #1
 802acae:	4622      	mov	r2, r4
 802acb0:	4649      	mov	r1, r9
 802acb2:	4638      	mov	r0, r7
 802acb4:	47c0      	blx	r8
 802acb6:	3001      	adds	r0, #1
 802acb8:	d0e6      	beq.n	802ac88 <_printf_common+0xa4>
 802acba:	3601      	adds	r6, #1
 802acbc:	e7d9      	b.n	802ac72 <_printf_common+0x8e>
	...

0802acc0 <_printf_i>:
 802acc0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802acc4:	7e0f      	ldrb	r7, [r1, #24]
 802acc6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802acc8:	2f78      	cmp	r7, #120	; 0x78
 802acca:	4691      	mov	r9, r2
 802accc:	4680      	mov	r8, r0
 802acce:	460c      	mov	r4, r1
 802acd0:	469a      	mov	sl, r3
 802acd2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802acd6:	d807      	bhi.n	802ace8 <_printf_i+0x28>
 802acd8:	2f62      	cmp	r7, #98	; 0x62
 802acda:	d80a      	bhi.n	802acf2 <_printf_i+0x32>
 802acdc:	2f00      	cmp	r7, #0
 802acde:	f000 80d4 	beq.w	802ae8a <_printf_i+0x1ca>
 802ace2:	2f58      	cmp	r7, #88	; 0x58
 802ace4:	f000 80c0 	beq.w	802ae68 <_printf_i+0x1a8>
 802ace8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802acec:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802acf0:	e03a      	b.n	802ad68 <_printf_i+0xa8>
 802acf2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802acf6:	2b15      	cmp	r3, #21
 802acf8:	d8f6      	bhi.n	802ace8 <_printf_i+0x28>
 802acfa:	a101      	add	r1, pc, #4	; (adr r1, 802ad00 <_printf_i+0x40>)
 802acfc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802ad00:	0802ad59 	.word	0x0802ad59
 802ad04:	0802ad6d 	.word	0x0802ad6d
 802ad08:	0802ace9 	.word	0x0802ace9
 802ad0c:	0802ace9 	.word	0x0802ace9
 802ad10:	0802ace9 	.word	0x0802ace9
 802ad14:	0802ace9 	.word	0x0802ace9
 802ad18:	0802ad6d 	.word	0x0802ad6d
 802ad1c:	0802ace9 	.word	0x0802ace9
 802ad20:	0802ace9 	.word	0x0802ace9
 802ad24:	0802ace9 	.word	0x0802ace9
 802ad28:	0802ace9 	.word	0x0802ace9
 802ad2c:	0802ae71 	.word	0x0802ae71
 802ad30:	0802ad99 	.word	0x0802ad99
 802ad34:	0802ae2b 	.word	0x0802ae2b
 802ad38:	0802ace9 	.word	0x0802ace9
 802ad3c:	0802ace9 	.word	0x0802ace9
 802ad40:	0802ae93 	.word	0x0802ae93
 802ad44:	0802ace9 	.word	0x0802ace9
 802ad48:	0802ad99 	.word	0x0802ad99
 802ad4c:	0802ace9 	.word	0x0802ace9
 802ad50:	0802ace9 	.word	0x0802ace9
 802ad54:	0802ae33 	.word	0x0802ae33
 802ad58:	682b      	ldr	r3, [r5, #0]
 802ad5a:	1d1a      	adds	r2, r3, #4
 802ad5c:	681b      	ldr	r3, [r3, #0]
 802ad5e:	602a      	str	r2, [r5, #0]
 802ad60:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802ad64:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802ad68:	2301      	movs	r3, #1
 802ad6a:	e09f      	b.n	802aeac <_printf_i+0x1ec>
 802ad6c:	6820      	ldr	r0, [r4, #0]
 802ad6e:	682b      	ldr	r3, [r5, #0]
 802ad70:	0607      	lsls	r7, r0, #24
 802ad72:	f103 0104 	add.w	r1, r3, #4
 802ad76:	6029      	str	r1, [r5, #0]
 802ad78:	d501      	bpl.n	802ad7e <_printf_i+0xbe>
 802ad7a:	681e      	ldr	r6, [r3, #0]
 802ad7c:	e003      	b.n	802ad86 <_printf_i+0xc6>
 802ad7e:	0646      	lsls	r6, r0, #25
 802ad80:	d5fb      	bpl.n	802ad7a <_printf_i+0xba>
 802ad82:	f9b3 6000 	ldrsh.w	r6, [r3]
 802ad86:	2e00      	cmp	r6, #0
 802ad88:	da03      	bge.n	802ad92 <_printf_i+0xd2>
 802ad8a:	232d      	movs	r3, #45	; 0x2d
 802ad8c:	4276      	negs	r6, r6
 802ad8e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802ad92:	485a      	ldr	r0, [pc, #360]	; (802aefc <_printf_i+0x23c>)
 802ad94:	230a      	movs	r3, #10
 802ad96:	e012      	b.n	802adbe <_printf_i+0xfe>
 802ad98:	682b      	ldr	r3, [r5, #0]
 802ad9a:	6820      	ldr	r0, [r4, #0]
 802ad9c:	1d19      	adds	r1, r3, #4
 802ad9e:	6029      	str	r1, [r5, #0]
 802ada0:	0605      	lsls	r5, r0, #24
 802ada2:	d501      	bpl.n	802ada8 <_printf_i+0xe8>
 802ada4:	681e      	ldr	r6, [r3, #0]
 802ada6:	e002      	b.n	802adae <_printf_i+0xee>
 802ada8:	0641      	lsls	r1, r0, #25
 802adaa:	d5fb      	bpl.n	802ada4 <_printf_i+0xe4>
 802adac:	881e      	ldrh	r6, [r3, #0]
 802adae:	4853      	ldr	r0, [pc, #332]	; (802aefc <_printf_i+0x23c>)
 802adb0:	2f6f      	cmp	r7, #111	; 0x6f
 802adb2:	bf0c      	ite	eq
 802adb4:	2308      	moveq	r3, #8
 802adb6:	230a      	movne	r3, #10
 802adb8:	2100      	movs	r1, #0
 802adba:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802adbe:	6865      	ldr	r5, [r4, #4]
 802adc0:	60a5      	str	r5, [r4, #8]
 802adc2:	2d00      	cmp	r5, #0
 802adc4:	bfa2      	ittt	ge
 802adc6:	6821      	ldrge	r1, [r4, #0]
 802adc8:	f021 0104 	bicge.w	r1, r1, #4
 802adcc:	6021      	strge	r1, [r4, #0]
 802adce:	b90e      	cbnz	r6, 802add4 <_printf_i+0x114>
 802add0:	2d00      	cmp	r5, #0
 802add2:	d04b      	beq.n	802ae6c <_printf_i+0x1ac>
 802add4:	4615      	mov	r5, r2
 802add6:	fbb6 f1f3 	udiv	r1, r6, r3
 802adda:	fb03 6711 	mls	r7, r3, r1, r6
 802adde:	5dc7      	ldrb	r7, [r0, r7]
 802ade0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802ade4:	4637      	mov	r7, r6
 802ade6:	42bb      	cmp	r3, r7
 802ade8:	460e      	mov	r6, r1
 802adea:	d9f4      	bls.n	802add6 <_printf_i+0x116>
 802adec:	2b08      	cmp	r3, #8
 802adee:	d10b      	bne.n	802ae08 <_printf_i+0x148>
 802adf0:	6823      	ldr	r3, [r4, #0]
 802adf2:	07de      	lsls	r6, r3, #31
 802adf4:	d508      	bpl.n	802ae08 <_printf_i+0x148>
 802adf6:	6923      	ldr	r3, [r4, #16]
 802adf8:	6861      	ldr	r1, [r4, #4]
 802adfa:	4299      	cmp	r1, r3
 802adfc:	bfde      	ittt	le
 802adfe:	2330      	movle	r3, #48	; 0x30
 802ae00:	f805 3c01 	strble.w	r3, [r5, #-1]
 802ae04:	f105 35ff 	addle.w	r5, r5, #4294967295
 802ae08:	1b52      	subs	r2, r2, r5
 802ae0a:	6122      	str	r2, [r4, #16]
 802ae0c:	f8cd a000 	str.w	sl, [sp]
 802ae10:	464b      	mov	r3, r9
 802ae12:	aa03      	add	r2, sp, #12
 802ae14:	4621      	mov	r1, r4
 802ae16:	4640      	mov	r0, r8
 802ae18:	f7ff fee4 	bl	802abe4 <_printf_common>
 802ae1c:	3001      	adds	r0, #1
 802ae1e:	d14a      	bne.n	802aeb6 <_printf_i+0x1f6>
 802ae20:	f04f 30ff 	mov.w	r0, #4294967295
 802ae24:	b004      	add	sp, #16
 802ae26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802ae2a:	6823      	ldr	r3, [r4, #0]
 802ae2c:	f043 0320 	orr.w	r3, r3, #32
 802ae30:	6023      	str	r3, [r4, #0]
 802ae32:	4833      	ldr	r0, [pc, #204]	; (802af00 <_printf_i+0x240>)
 802ae34:	2778      	movs	r7, #120	; 0x78
 802ae36:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802ae3a:	6823      	ldr	r3, [r4, #0]
 802ae3c:	6829      	ldr	r1, [r5, #0]
 802ae3e:	061f      	lsls	r7, r3, #24
 802ae40:	f851 6b04 	ldr.w	r6, [r1], #4
 802ae44:	d402      	bmi.n	802ae4c <_printf_i+0x18c>
 802ae46:	065f      	lsls	r7, r3, #25
 802ae48:	bf48      	it	mi
 802ae4a:	b2b6      	uxthmi	r6, r6
 802ae4c:	07df      	lsls	r7, r3, #31
 802ae4e:	bf48      	it	mi
 802ae50:	f043 0320 	orrmi.w	r3, r3, #32
 802ae54:	6029      	str	r1, [r5, #0]
 802ae56:	bf48      	it	mi
 802ae58:	6023      	strmi	r3, [r4, #0]
 802ae5a:	b91e      	cbnz	r6, 802ae64 <_printf_i+0x1a4>
 802ae5c:	6823      	ldr	r3, [r4, #0]
 802ae5e:	f023 0320 	bic.w	r3, r3, #32
 802ae62:	6023      	str	r3, [r4, #0]
 802ae64:	2310      	movs	r3, #16
 802ae66:	e7a7      	b.n	802adb8 <_printf_i+0xf8>
 802ae68:	4824      	ldr	r0, [pc, #144]	; (802aefc <_printf_i+0x23c>)
 802ae6a:	e7e4      	b.n	802ae36 <_printf_i+0x176>
 802ae6c:	4615      	mov	r5, r2
 802ae6e:	e7bd      	b.n	802adec <_printf_i+0x12c>
 802ae70:	682b      	ldr	r3, [r5, #0]
 802ae72:	6826      	ldr	r6, [r4, #0]
 802ae74:	6961      	ldr	r1, [r4, #20]
 802ae76:	1d18      	adds	r0, r3, #4
 802ae78:	6028      	str	r0, [r5, #0]
 802ae7a:	0635      	lsls	r5, r6, #24
 802ae7c:	681b      	ldr	r3, [r3, #0]
 802ae7e:	d501      	bpl.n	802ae84 <_printf_i+0x1c4>
 802ae80:	6019      	str	r1, [r3, #0]
 802ae82:	e002      	b.n	802ae8a <_printf_i+0x1ca>
 802ae84:	0670      	lsls	r0, r6, #25
 802ae86:	d5fb      	bpl.n	802ae80 <_printf_i+0x1c0>
 802ae88:	8019      	strh	r1, [r3, #0]
 802ae8a:	2300      	movs	r3, #0
 802ae8c:	6123      	str	r3, [r4, #16]
 802ae8e:	4615      	mov	r5, r2
 802ae90:	e7bc      	b.n	802ae0c <_printf_i+0x14c>
 802ae92:	682b      	ldr	r3, [r5, #0]
 802ae94:	1d1a      	adds	r2, r3, #4
 802ae96:	602a      	str	r2, [r5, #0]
 802ae98:	681d      	ldr	r5, [r3, #0]
 802ae9a:	6862      	ldr	r2, [r4, #4]
 802ae9c:	2100      	movs	r1, #0
 802ae9e:	4628      	mov	r0, r5
 802aea0:	f7d5 fa06 	bl	80002b0 <memchr>
 802aea4:	b108      	cbz	r0, 802aeaa <_printf_i+0x1ea>
 802aea6:	1b40      	subs	r0, r0, r5
 802aea8:	6060      	str	r0, [r4, #4]
 802aeaa:	6863      	ldr	r3, [r4, #4]
 802aeac:	6123      	str	r3, [r4, #16]
 802aeae:	2300      	movs	r3, #0
 802aeb0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802aeb4:	e7aa      	b.n	802ae0c <_printf_i+0x14c>
 802aeb6:	6923      	ldr	r3, [r4, #16]
 802aeb8:	462a      	mov	r2, r5
 802aeba:	4649      	mov	r1, r9
 802aebc:	4640      	mov	r0, r8
 802aebe:	47d0      	blx	sl
 802aec0:	3001      	adds	r0, #1
 802aec2:	d0ad      	beq.n	802ae20 <_printf_i+0x160>
 802aec4:	6823      	ldr	r3, [r4, #0]
 802aec6:	079b      	lsls	r3, r3, #30
 802aec8:	d413      	bmi.n	802aef2 <_printf_i+0x232>
 802aeca:	68e0      	ldr	r0, [r4, #12]
 802aecc:	9b03      	ldr	r3, [sp, #12]
 802aece:	4298      	cmp	r0, r3
 802aed0:	bfb8      	it	lt
 802aed2:	4618      	movlt	r0, r3
 802aed4:	e7a6      	b.n	802ae24 <_printf_i+0x164>
 802aed6:	2301      	movs	r3, #1
 802aed8:	4632      	mov	r2, r6
 802aeda:	4649      	mov	r1, r9
 802aedc:	4640      	mov	r0, r8
 802aede:	47d0      	blx	sl
 802aee0:	3001      	adds	r0, #1
 802aee2:	d09d      	beq.n	802ae20 <_printf_i+0x160>
 802aee4:	3501      	adds	r5, #1
 802aee6:	68e3      	ldr	r3, [r4, #12]
 802aee8:	9903      	ldr	r1, [sp, #12]
 802aeea:	1a5b      	subs	r3, r3, r1
 802aeec:	42ab      	cmp	r3, r5
 802aeee:	dcf2      	bgt.n	802aed6 <_printf_i+0x216>
 802aef0:	e7eb      	b.n	802aeca <_printf_i+0x20a>
 802aef2:	2500      	movs	r5, #0
 802aef4:	f104 0619 	add.w	r6, r4, #25
 802aef8:	e7f5      	b.n	802aee6 <_printf_i+0x226>
 802aefa:	bf00      	nop
 802aefc:	080427c1 	.word	0x080427c1
 802af00:	080427d2 	.word	0x080427d2

0802af04 <__sflush_r>:
 802af04:	898a      	ldrh	r2, [r1, #12]
 802af06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802af0a:	4605      	mov	r5, r0
 802af0c:	0710      	lsls	r0, r2, #28
 802af0e:	460c      	mov	r4, r1
 802af10:	d458      	bmi.n	802afc4 <__sflush_r+0xc0>
 802af12:	684b      	ldr	r3, [r1, #4]
 802af14:	2b00      	cmp	r3, #0
 802af16:	dc05      	bgt.n	802af24 <__sflush_r+0x20>
 802af18:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802af1a:	2b00      	cmp	r3, #0
 802af1c:	dc02      	bgt.n	802af24 <__sflush_r+0x20>
 802af1e:	2000      	movs	r0, #0
 802af20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802af24:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802af26:	2e00      	cmp	r6, #0
 802af28:	d0f9      	beq.n	802af1e <__sflush_r+0x1a>
 802af2a:	2300      	movs	r3, #0
 802af2c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802af30:	682f      	ldr	r7, [r5, #0]
 802af32:	6a21      	ldr	r1, [r4, #32]
 802af34:	602b      	str	r3, [r5, #0]
 802af36:	d032      	beq.n	802af9e <__sflush_r+0x9a>
 802af38:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802af3a:	89a3      	ldrh	r3, [r4, #12]
 802af3c:	075a      	lsls	r2, r3, #29
 802af3e:	d505      	bpl.n	802af4c <__sflush_r+0x48>
 802af40:	6863      	ldr	r3, [r4, #4]
 802af42:	1ac0      	subs	r0, r0, r3
 802af44:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802af46:	b10b      	cbz	r3, 802af4c <__sflush_r+0x48>
 802af48:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802af4a:	1ac0      	subs	r0, r0, r3
 802af4c:	2300      	movs	r3, #0
 802af4e:	4602      	mov	r2, r0
 802af50:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802af52:	6a21      	ldr	r1, [r4, #32]
 802af54:	4628      	mov	r0, r5
 802af56:	47b0      	blx	r6
 802af58:	1c43      	adds	r3, r0, #1
 802af5a:	89a3      	ldrh	r3, [r4, #12]
 802af5c:	d106      	bne.n	802af6c <__sflush_r+0x68>
 802af5e:	6829      	ldr	r1, [r5, #0]
 802af60:	291d      	cmp	r1, #29
 802af62:	d82b      	bhi.n	802afbc <__sflush_r+0xb8>
 802af64:	4a29      	ldr	r2, [pc, #164]	; (802b00c <__sflush_r+0x108>)
 802af66:	410a      	asrs	r2, r1
 802af68:	07d6      	lsls	r6, r2, #31
 802af6a:	d427      	bmi.n	802afbc <__sflush_r+0xb8>
 802af6c:	2200      	movs	r2, #0
 802af6e:	6062      	str	r2, [r4, #4]
 802af70:	04d9      	lsls	r1, r3, #19
 802af72:	6922      	ldr	r2, [r4, #16]
 802af74:	6022      	str	r2, [r4, #0]
 802af76:	d504      	bpl.n	802af82 <__sflush_r+0x7e>
 802af78:	1c42      	adds	r2, r0, #1
 802af7a:	d101      	bne.n	802af80 <__sflush_r+0x7c>
 802af7c:	682b      	ldr	r3, [r5, #0]
 802af7e:	b903      	cbnz	r3, 802af82 <__sflush_r+0x7e>
 802af80:	6560      	str	r0, [r4, #84]	; 0x54
 802af82:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802af84:	602f      	str	r7, [r5, #0]
 802af86:	2900      	cmp	r1, #0
 802af88:	d0c9      	beq.n	802af1e <__sflush_r+0x1a>
 802af8a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802af8e:	4299      	cmp	r1, r3
 802af90:	d002      	beq.n	802af98 <__sflush_r+0x94>
 802af92:	4628      	mov	r0, r5
 802af94:	f7ff fc96 	bl	802a8c4 <_free_r>
 802af98:	2000      	movs	r0, #0
 802af9a:	6360      	str	r0, [r4, #52]	; 0x34
 802af9c:	e7c0      	b.n	802af20 <__sflush_r+0x1c>
 802af9e:	2301      	movs	r3, #1
 802afa0:	4628      	mov	r0, r5
 802afa2:	47b0      	blx	r6
 802afa4:	1c41      	adds	r1, r0, #1
 802afa6:	d1c8      	bne.n	802af3a <__sflush_r+0x36>
 802afa8:	682b      	ldr	r3, [r5, #0]
 802afaa:	2b00      	cmp	r3, #0
 802afac:	d0c5      	beq.n	802af3a <__sflush_r+0x36>
 802afae:	2b1d      	cmp	r3, #29
 802afb0:	d001      	beq.n	802afb6 <__sflush_r+0xb2>
 802afb2:	2b16      	cmp	r3, #22
 802afb4:	d101      	bne.n	802afba <__sflush_r+0xb6>
 802afb6:	602f      	str	r7, [r5, #0]
 802afb8:	e7b1      	b.n	802af1e <__sflush_r+0x1a>
 802afba:	89a3      	ldrh	r3, [r4, #12]
 802afbc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802afc0:	81a3      	strh	r3, [r4, #12]
 802afc2:	e7ad      	b.n	802af20 <__sflush_r+0x1c>
 802afc4:	690f      	ldr	r7, [r1, #16]
 802afc6:	2f00      	cmp	r7, #0
 802afc8:	d0a9      	beq.n	802af1e <__sflush_r+0x1a>
 802afca:	0793      	lsls	r3, r2, #30
 802afcc:	680e      	ldr	r6, [r1, #0]
 802afce:	bf08      	it	eq
 802afd0:	694b      	ldreq	r3, [r1, #20]
 802afd2:	600f      	str	r7, [r1, #0]
 802afd4:	bf18      	it	ne
 802afd6:	2300      	movne	r3, #0
 802afd8:	eba6 0807 	sub.w	r8, r6, r7
 802afdc:	608b      	str	r3, [r1, #8]
 802afde:	f1b8 0f00 	cmp.w	r8, #0
 802afe2:	dd9c      	ble.n	802af1e <__sflush_r+0x1a>
 802afe4:	6a21      	ldr	r1, [r4, #32]
 802afe6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802afe8:	4643      	mov	r3, r8
 802afea:	463a      	mov	r2, r7
 802afec:	4628      	mov	r0, r5
 802afee:	47b0      	blx	r6
 802aff0:	2800      	cmp	r0, #0
 802aff2:	dc06      	bgt.n	802b002 <__sflush_r+0xfe>
 802aff4:	89a3      	ldrh	r3, [r4, #12]
 802aff6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802affa:	81a3      	strh	r3, [r4, #12]
 802affc:	f04f 30ff 	mov.w	r0, #4294967295
 802b000:	e78e      	b.n	802af20 <__sflush_r+0x1c>
 802b002:	4407      	add	r7, r0
 802b004:	eba8 0800 	sub.w	r8, r8, r0
 802b008:	e7e9      	b.n	802afde <__sflush_r+0xda>
 802b00a:	bf00      	nop
 802b00c:	dfbffffe 	.word	0xdfbffffe

0802b010 <_fflush_r>:
 802b010:	b538      	push	{r3, r4, r5, lr}
 802b012:	690b      	ldr	r3, [r1, #16]
 802b014:	4605      	mov	r5, r0
 802b016:	460c      	mov	r4, r1
 802b018:	b913      	cbnz	r3, 802b020 <_fflush_r+0x10>
 802b01a:	2500      	movs	r5, #0
 802b01c:	4628      	mov	r0, r5
 802b01e:	bd38      	pop	{r3, r4, r5, pc}
 802b020:	b118      	cbz	r0, 802b02a <_fflush_r+0x1a>
 802b022:	6a03      	ldr	r3, [r0, #32]
 802b024:	b90b      	cbnz	r3, 802b02a <_fflush_r+0x1a>
 802b026:	f7ff fa2f 	bl	802a488 <__sinit>
 802b02a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802b02e:	2b00      	cmp	r3, #0
 802b030:	d0f3      	beq.n	802b01a <_fflush_r+0xa>
 802b032:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802b034:	07d0      	lsls	r0, r2, #31
 802b036:	d404      	bmi.n	802b042 <_fflush_r+0x32>
 802b038:	0599      	lsls	r1, r3, #22
 802b03a:	d402      	bmi.n	802b042 <_fflush_r+0x32>
 802b03c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802b03e:	f7ff fbd2 	bl	802a7e6 <__retarget_lock_acquire_recursive>
 802b042:	4628      	mov	r0, r5
 802b044:	4621      	mov	r1, r4
 802b046:	f7ff ff5d 	bl	802af04 <__sflush_r>
 802b04a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802b04c:	07da      	lsls	r2, r3, #31
 802b04e:	4605      	mov	r5, r0
 802b050:	d4e4      	bmi.n	802b01c <_fflush_r+0xc>
 802b052:	89a3      	ldrh	r3, [r4, #12]
 802b054:	059b      	lsls	r3, r3, #22
 802b056:	d4e1      	bmi.n	802b01c <_fflush_r+0xc>
 802b058:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802b05a:	f7ff fbc5 	bl	802a7e8 <__retarget_lock_release_recursive>
 802b05e:	e7dd      	b.n	802b01c <_fflush_r+0xc>

0802b060 <__swbuf_r>:
 802b060:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b062:	460e      	mov	r6, r1
 802b064:	4614      	mov	r4, r2
 802b066:	4605      	mov	r5, r0
 802b068:	b118      	cbz	r0, 802b072 <__swbuf_r+0x12>
 802b06a:	6a03      	ldr	r3, [r0, #32]
 802b06c:	b90b      	cbnz	r3, 802b072 <__swbuf_r+0x12>
 802b06e:	f7ff fa0b 	bl	802a488 <__sinit>
 802b072:	69a3      	ldr	r3, [r4, #24]
 802b074:	60a3      	str	r3, [r4, #8]
 802b076:	89a3      	ldrh	r3, [r4, #12]
 802b078:	071a      	lsls	r2, r3, #28
 802b07a:	d525      	bpl.n	802b0c8 <__swbuf_r+0x68>
 802b07c:	6923      	ldr	r3, [r4, #16]
 802b07e:	b31b      	cbz	r3, 802b0c8 <__swbuf_r+0x68>
 802b080:	6823      	ldr	r3, [r4, #0]
 802b082:	6922      	ldr	r2, [r4, #16]
 802b084:	1a98      	subs	r0, r3, r2
 802b086:	6963      	ldr	r3, [r4, #20]
 802b088:	b2f6      	uxtb	r6, r6
 802b08a:	4283      	cmp	r3, r0
 802b08c:	4637      	mov	r7, r6
 802b08e:	dc04      	bgt.n	802b09a <__swbuf_r+0x3a>
 802b090:	4621      	mov	r1, r4
 802b092:	4628      	mov	r0, r5
 802b094:	f7ff ffbc 	bl	802b010 <_fflush_r>
 802b098:	b9e0      	cbnz	r0, 802b0d4 <__swbuf_r+0x74>
 802b09a:	68a3      	ldr	r3, [r4, #8]
 802b09c:	3b01      	subs	r3, #1
 802b09e:	60a3      	str	r3, [r4, #8]
 802b0a0:	6823      	ldr	r3, [r4, #0]
 802b0a2:	1c5a      	adds	r2, r3, #1
 802b0a4:	6022      	str	r2, [r4, #0]
 802b0a6:	701e      	strb	r6, [r3, #0]
 802b0a8:	6962      	ldr	r2, [r4, #20]
 802b0aa:	1c43      	adds	r3, r0, #1
 802b0ac:	429a      	cmp	r2, r3
 802b0ae:	d004      	beq.n	802b0ba <__swbuf_r+0x5a>
 802b0b0:	89a3      	ldrh	r3, [r4, #12]
 802b0b2:	07db      	lsls	r3, r3, #31
 802b0b4:	d506      	bpl.n	802b0c4 <__swbuf_r+0x64>
 802b0b6:	2e0a      	cmp	r6, #10
 802b0b8:	d104      	bne.n	802b0c4 <__swbuf_r+0x64>
 802b0ba:	4621      	mov	r1, r4
 802b0bc:	4628      	mov	r0, r5
 802b0be:	f7ff ffa7 	bl	802b010 <_fflush_r>
 802b0c2:	b938      	cbnz	r0, 802b0d4 <__swbuf_r+0x74>
 802b0c4:	4638      	mov	r0, r7
 802b0c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802b0c8:	4621      	mov	r1, r4
 802b0ca:	4628      	mov	r0, r5
 802b0cc:	f000 f806 	bl	802b0dc <__swsetup_r>
 802b0d0:	2800      	cmp	r0, #0
 802b0d2:	d0d5      	beq.n	802b080 <__swbuf_r+0x20>
 802b0d4:	f04f 37ff 	mov.w	r7, #4294967295
 802b0d8:	e7f4      	b.n	802b0c4 <__swbuf_r+0x64>
	...

0802b0dc <__swsetup_r>:
 802b0dc:	b538      	push	{r3, r4, r5, lr}
 802b0de:	4b2a      	ldr	r3, [pc, #168]	; (802b188 <__swsetup_r+0xac>)
 802b0e0:	4605      	mov	r5, r0
 802b0e2:	6818      	ldr	r0, [r3, #0]
 802b0e4:	460c      	mov	r4, r1
 802b0e6:	b118      	cbz	r0, 802b0f0 <__swsetup_r+0x14>
 802b0e8:	6a03      	ldr	r3, [r0, #32]
 802b0ea:	b90b      	cbnz	r3, 802b0f0 <__swsetup_r+0x14>
 802b0ec:	f7ff f9cc 	bl	802a488 <__sinit>
 802b0f0:	89a3      	ldrh	r3, [r4, #12]
 802b0f2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802b0f6:	0718      	lsls	r0, r3, #28
 802b0f8:	d422      	bmi.n	802b140 <__swsetup_r+0x64>
 802b0fa:	06d9      	lsls	r1, r3, #27
 802b0fc:	d407      	bmi.n	802b10e <__swsetup_r+0x32>
 802b0fe:	2309      	movs	r3, #9
 802b100:	602b      	str	r3, [r5, #0]
 802b102:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802b106:	81a3      	strh	r3, [r4, #12]
 802b108:	f04f 30ff 	mov.w	r0, #4294967295
 802b10c:	e034      	b.n	802b178 <__swsetup_r+0x9c>
 802b10e:	0758      	lsls	r0, r3, #29
 802b110:	d512      	bpl.n	802b138 <__swsetup_r+0x5c>
 802b112:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b114:	b141      	cbz	r1, 802b128 <__swsetup_r+0x4c>
 802b116:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802b11a:	4299      	cmp	r1, r3
 802b11c:	d002      	beq.n	802b124 <__swsetup_r+0x48>
 802b11e:	4628      	mov	r0, r5
 802b120:	f7ff fbd0 	bl	802a8c4 <_free_r>
 802b124:	2300      	movs	r3, #0
 802b126:	6363      	str	r3, [r4, #52]	; 0x34
 802b128:	89a3      	ldrh	r3, [r4, #12]
 802b12a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802b12e:	81a3      	strh	r3, [r4, #12]
 802b130:	2300      	movs	r3, #0
 802b132:	6063      	str	r3, [r4, #4]
 802b134:	6923      	ldr	r3, [r4, #16]
 802b136:	6023      	str	r3, [r4, #0]
 802b138:	89a3      	ldrh	r3, [r4, #12]
 802b13a:	f043 0308 	orr.w	r3, r3, #8
 802b13e:	81a3      	strh	r3, [r4, #12]
 802b140:	6923      	ldr	r3, [r4, #16]
 802b142:	b94b      	cbnz	r3, 802b158 <__swsetup_r+0x7c>
 802b144:	89a3      	ldrh	r3, [r4, #12]
 802b146:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802b14a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802b14e:	d003      	beq.n	802b158 <__swsetup_r+0x7c>
 802b150:	4621      	mov	r1, r4
 802b152:	4628      	mov	r0, r5
 802b154:	f000 f840 	bl	802b1d8 <__smakebuf_r>
 802b158:	89a0      	ldrh	r0, [r4, #12]
 802b15a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802b15e:	f010 0301 	ands.w	r3, r0, #1
 802b162:	d00a      	beq.n	802b17a <__swsetup_r+0x9e>
 802b164:	2300      	movs	r3, #0
 802b166:	60a3      	str	r3, [r4, #8]
 802b168:	6963      	ldr	r3, [r4, #20]
 802b16a:	425b      	negs	r3, r3
 802b16c:	61a3      	str	r3, [r4, #24]
 802b16e:	6923      	ldr	r3, [r4, #16]
 802b170:	b943      	cbnz	r3, 802b184 <__swsetup_r+0xa8>
 802b172:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802b176:	d1c4      	bne.n	802b102 <__swsetup_r+0x26>
 802b178:	bd38      	pop	{r3, r4, r5, pc}
 802b17a:	0781      	lsls	r1, r0, #30
 802b17c:	bf58      	it	pl
 802b17e:	6963      	ldrpl	r3, [r4, #20]
 802b180:	60a3      	str	r3, [r4, #8]
 802b182:	e7f4      	b.n	802b16e <__swsetup_r+0x92>
 802b184:	2000      	movs	r0, #0
 802b186:	e7f7      	b.n	802b178 <__swsetup_r+0x9c>
 802b188:	20000160 	.word	0x20000160

0802b18c <__swhatbuf_r>:
 802b18c:	b570      	push	{r4, r5, r6, lr}
 802b18e:	460c      	mov	r4, r1
 802b190:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b194:	2900      	cmp	r1, #0
 802b196:	b096      	sub	sp, #88	; 0x58
 802b198:	4615      	mov	r5, r2
 802b19a:	461e      	mov	r6, r3
 802b19c:	da0d      	bge.n	802b1ba <__swhatbuf_r+0x2e>
 802b19e:	89a3      	ldrh	r3, [r4, #12]
 802b1a0:	f013 0f80 	tst.w	r3, #128	; 0x80
 802b1a4:	f04f 0100 	mov.w	r1, #0
 802b1a8:	bf0c      	ite	eq
 802b1aa:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802b1ae:	2340      	movne	r3, #64	; 0x40
 802b1b0:	2000      	movs	r0, #0
 802b1b2:	6031      	str	r1, [r6, #0]
 802b1b4:	602b      	str	r3, [r5, #0]
 802b1b6:	b016      	add	sp, #88	; 0x58
 802b1b8:	bd70      	pop	{r4, r5, r6, pc}
 802b1ba:	466a      	mov	r2, sp
 802b1bc:	f000 f848 	bl	802b250 <_fstat_r>
 802b1c0:	2800      	cmp	r0, #0
 802b1c2:	dbec      	blt.n	802b19e <__swhatbuf_r+0x12>
 802b1c4:	9901      	ldr	r1, [sp, #4]
 802b1c6:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802b1ca:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802b1ce:	4259      	negs	r1, r3
 802b1d0:	4159      	adcs	r1, r3
 802b1d2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802b1d6:	e7eb      	b.n	802b1b0 <__swhatbuf_r+0x24>

0802b1d8 <__smakebuf_r>:
 802b1d8:	898b      	ldrh	r3, [r1, #12]
 802b1da:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802b1dc:	079d      	lsls	r5, r3, #30
 802b1de:	4606      	mov	r6, r0
 802b1e0:	460c      	mov	r4, r1
 802b1e2:	d507      	bpl.n	802b1f4 <__smakebuf_r+0x1c>
 802b1e4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802b1e8:	6023      	str	r3, [r4, #0]
 802b1ea:	6123      	str	r3, [r4, #16]
 802b1ec:	2301      	movs	r3, #1
 802b1ee:	6163      	str	r3, [r4, #20]
 802b1f0:	b002      	add	sp, #8
 802b1f2:	bd70      	pop	{r4, r5, r6, pc}
 802b1f4:	ab01      	add	r3, sp, #4
 802b1f6:	466a      	mov	r2, sp
 802b1f8:	f7ff ffc8 	bl	802b18c <__swhatbuf_r>
 802b1fc:	9900      	ldr	r1, [sp, #0]
 802b1fe:	4605      	mov	r5, r0
 802b200:	4630      	mov	r0, r6
 802b202:	f7ff f81b 	bl	802a23c <_malloc_r>
 802b206:	b948      	cbnz	r0, 802b21c <__smakebuf_r+0x44>
 802b208:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802b20c:	059a      	lsls	r2, r3, #22
 802b20e:	d4ef      	bmi.n	802b1f0 <__smakebuf_r+0x18>
 802b210:	f023 0303 	bic.w	r3, r3, #3
 802b214:	f043 0302 	orr.w	r3, r3, #2
 802b218:	81a3      	strh	r3, [r4, #12]
 802b21a:	e7e3      	b.n	802b1e4 <__smakebuf_r+0xc>
 802b21c:	89a3      	ldrh	r3, [r4, #12]
 802b21e:	6020      	str	r0, [r4, #0]
 802b220:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802b224:	81a3      	strh	r3, [r4, #12]
 802b226:	9b00      	ldr	r3, [sp, #0]
 802b228:	6163      	str	r3, [r4, #20]
 802b22a:	9b01      	ldr	r3, [sp, #4]
 802b22c:	6120      	str	r0, [r4, #16]
 802b22e:	b15b      	cbz	r3, 802b248 <__smakebuf_r+0x70>
 802b230:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802b234:	4630      	mov	r0, r6
 802b236:	f000 f81d 	bl	802b274 <_isatty_r>
 802b23a:	b128      	cbz	r0, 802b248 <__smakebuf_r+0x70>
 802b23c:	89a3      	ldrh	r3, [r4, #12]
 802b23e:	f023 0303 	bic.w	r3, r3, #3
 802b242:	f043 0301 	orr.w	r3, r3, #1
 802b246:	81a3      	strh	r3, [r4, #12]
 802b248:	89a3      	ldrh	r3, [r4, #12]
 802b24a:	431d      	orrs	r5, r3
 802b24c:	81a5      	strh	r5, [r4, #12]
 802b24e:	e7cf      	b.n	802b1f0 <__smakebuf_r+0x18>

0802b250 <_fstat_r>:
 802b250:	b538      	push	{r3, r4, r5, lr}
 802b252:	4d07      	ldr	r5, [pc, #28]	; (802b270 <_fstat_r+0x20>)
 802b254:	2300      	movs	r3, #0
 802b256:	4604      	mov	r4, r0
 802b258:	4608      	mov	r0, r1
 802b25a:	4611      	mov	r1, r2
 802b25c:	602b      	str	r3, [r5, #0]
 802b25e:	f7d7 f9a5 	bl	80025ac <_fstat>
 802b262:	1c43      	adds	r3, r0, #1
 802b264:	d102      	bne.n	802b26c <_fstat_r+0x1c>
 802b266:	682b      	ldr	r3, [r5, #0]
 802b268:	b103      	cbz	r3, 802b26c <_fstat_r+0x1c>
 802b26a:	6023      	str	r3, [r4, #0]
 802b26c:	bd38      	pop	{r3, r4, r5, pc}
 802b26e:	bf00      	nop
 802b270:	200139c4 	.word	0x200139c4

0802b274 <_isatty_r>:
 802b274:	b538      	push	{r3, r4, r5, lr}
 802b276:	4d06      	ldr	r5, [pc, #24]	; (802b290 <_isatty_r+0x1c>)
 802b278:	2300      	movs	r3, #0
 802b27a:	4604      	mov	r4, r0
 802b27c:	4608      	mov	r0, r1
 802b27e:	602b      	str	r3, [r5, #0]
 802b280:	f7d7 f99a 	bl	80025b8 <_isatty>
 802b284:	1c43      	adds	r3, r0, #1
 802b286:	d102      	bne.n	802b28e <_isatty_r+0x1a>
 802b288:	682b      	ldr	r3, [r5, #0]
 802b28a:	b103      	cbz	r3, 802b28e <_isatty_r+0x1a>
 802b28c:	6023      	str	r3, [r4, #0]
 802b28e:	bd38      	pop	{r3, r4, r5, pc}
 802b290:	200139c4 	.word	0x200139c4

0802b294 <_init>:
 802b294:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b296:	bf00      	nop
 802b298:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802b29a:	bc08      	pop	{r3}
 802b29c:	469e      	mov	lr, r3
 802b29e:	4770      	bx	lr

0802b2a0 <_fini>:
 802b2a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b2a2:	bf00      	nop
 802b2a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802b2a6:	bc08      	pop	{r3}
 802b2a8:	469e      	mov	lr, r3
 802b2aa:	4770      	bx	lr
